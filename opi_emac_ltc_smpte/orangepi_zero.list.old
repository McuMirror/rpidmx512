
build_h3/main.elf:     file format elf32-littlearm


Disassembly of section .init:

40000000 <_start>:
40000000:	e59ff018 	ldr	pc, [pc, #24]	; 40000020 <reset_handler>
40000004:	e59ff018 	ldr	pc, [pc, #24]	; 40000024 <undefined_handler>
40000008:	e59ff018 	ldr	pc, [pc, #24]	; 40000028 <swi_handler>
4000000c:	e59ff018 	ldr	pc, [pc, #24]	; 4000002c <prefetch_handler>
40000010:	e59ff018 	ldr	pc, [pc, #24]	; 40000030 <data_handler>
40000014:	e59ff018 	ldr	pc, [pc, #24]	; 40000034 <unused_handler>
40000018:	e59ff018 	ldr	pc, [pc, #24]	; 40000038 <irq_handler>
4000001c:	e59ff018 	ldr	pc, [pc, #24]	; 4000003c <fiq_handler>

40000020 <reset_handler>:
40000020:	40000040 	andmi	r0, r0, r0, asr #32

40000024 <undefined_handler>:
40000024:	40000114 	andmi	r0, r0, r4, lsl r1

40000028 <swi_handler>:
40000028:	40002778 	andmi	r2, r0, r8, ror r7

4000002c <prefetch_handler>:
4000002c:	40000120 	andmi	r0, r0, r0, lsr #2

40000030 <data_handler>:
40000030:	40000130 	andmi	r0, r0, r0, lsr r1

40000034 <unused_handler>:
40000034:	40002778 	andmi	r2, r0, r8, ror r7

40000038 <irq_handler>:
40000038:	4000013c 	andmi	r0, r0, ip, lsr r1

4000003c <fiq_handler>:
4000003c:	40000140 	andmi	r0, r0, r0, asr #2

40000040 <reset>:
40000040:	e59f00fc 	ldr	r0, [pc, #252]	; 40000144 <fiq+0x4>
40000044:	ee0c0f10 	mcr	15, 0, r0, cr12, cr0, {0}
40000048:	e321f0d7 	msr	CPSR_c, #215	; 0xd7
4000004c:	e59f00f4 	ldr	r0, [pc, #244]	; 40000148 <fiq+0x8>
40000050:	e1a0d000 	mov	sp, r0
40000054:	e321f0db 	msr	CPSR_c, #219	; 0xdb
40000058:	e59f00ec 	ldr	r0, [pc, #236]	; 4000014c <fiq+0xc>
4000005c:	e1a0d000 	mov	sp, r0
40000060:	e321f0d2 	msr	CPSR_c, #210	; 0xd2
40000064:	e59f00e4 	ldr	r0, [pc, #228]	; 40000150 <fiq+0x10>
40000068:	e1a0d000 	mov	sp, r0
4000006c:	e321f0d1 	msr	CPSR_c, #209	; 0xd1
40000070:	e59f00dc 	ldr	r0, [pc, #220]	; 40000154 <fiq+0x14>
40000074:	e1a0d000 	mov	sp, r0
40000078:	e321f0d3 	msr	CPSR_c, #211	; 0xd3
4000007c:	e59f00d4 	ldr	r0, [pc, #212]	; 40000158 <fiq+0x18>
40000080:	e1a0d000 	mov	sp, r0
40000084:	f10c0080 	cpsid	i
40000088:	f10c0040 	cpsid	f
4000008c:	ee111f10 	mrc	15, 0, r1, cr1, cr0, {0}
40000090:	e3c11001 	bic	r1, r1, #1
40000094:	ee011f10 	mcr	15, 0, r1, cr1, cr0, {0}
40000098:	ee111f10 	mrc	15, 0, r1, cr1, cr0, {0}
4000009c:	e3c11a01 	bic	r1, r1, #4096	; 0x1000
400000a0:	e3c11004 	bic	r1, r1, #4
400000a4:	ee011f10 	mcr	15, 0, r1, cr1, cr0, {0}
400000a8:	e3a01000 	mov	r1, #0
400000ac:	ee071f15 	mcr	15, 0, r1, cr7, cr5, {0}
400000b0:	ee081f17 	mcr	15, 0, r1, cr8, cr7, {0}
400000b4:	e3a01000 	mov	r1, #0
400000b8:	ee111f10 	mrc	15, 0, r1, cr1, cr0, {0}
400000bc:	e3811b02 	orr	r1, r1, #2048	; 0x800
400000c0:	ee011f10 	mcr	15, 0, r1, cr1, cr0, {0}
400000c4:	ee111f10 	mrc	15, 0, r1, cr1, cr0, {0}
400000c8:	e3811004 	orr	r1, r1, #4
400000cc:	ee011f10 	mcr	15, 0, r1, cr1, cr0, {0}
400000d0:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
400000d4:	e3c00002 	bic	r0, r0, #2
400000d8:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
400000dc:	f57ff04f 	dsb	sy
400000e0:	f57ff06f 	isb	sy
400000e4:	e3a00000 	mov	r0, #0
400000e8:	e59f106c 	ldr	r1, [pc, #108]	; 4000015c <fiq+0x1c>
400000ec:	e59f206c 	ldr	r2, [pc, #108]	; 40000160 <fiq+0x20>
400000f0:	e1510002 	cmp	r1, r2
400000f4:	34810004 	strcc	r0, [r1], #4
400000f8:	3afffffc 	bcc	400000f0 <reset+0xb0>
400000fc:	eb00b5a0 	bl	4002d784 <vfp_init>
40000100:	eb000290 	bl	40000b48 <mmu_enable>
40000104:	eb00b027 	bl	4002c1a8 <__libc_init_array>
40000108:	eb000cca 	bl	40003438 <main>

4000010c <halt>:
4000010c:	e320f002 	wfe
40000110:	eafffffd 	b	4000010c <halt>

40000114 <und_undefined_handler>:
40000114:	e3a00000 	mov	r0, #0
40000118:	e24e1004 	sub	r1, lr, #4
4000011c:	ea00a44d 	b	40029258 <debug_exception>

40000120 <abort_prefetch_handler>:
40000120:	e321f013 	msr	CPSR_c, #19
40000124:	e3a00001 	mov	r0, #1
40000128:	e24e1004 	sub	r1, lr, #4
4000012c:	ea00a449 	b	40029258 <debug_exception>

40000130 <abort_data_handler>:
40000130:	e3a00002 	mov	r0, #2
40000134:	e24e1008 	sub	r1, lr, #8
40000138:	ea00a446 	b	40029258 <debug_exception>

4000013c <irq>:
4000013c:	ea00b58f 	b	4002d780 <c_irq_handler>

40000140 <fiq>:
40000140:	ea00b58d 	b	4002d77c <c_fiq_handler>
40000144:	40000000 	andmi	r0, r0, r0
40000148:	40310000 	eorsmi	r0, r1, r0
4000014c:	40308000 	eorsmi	r8, r0, r0
40000150:	40320000 	eorsmi	r0, r2, r0
40000154:	40318000 	eorsmi	r8, r1, r0
40000158:	403a0000 	eorsmi	r0, sl, r0
4000015c:	40034000 	andmi	r4, r3, r0
40000160:	4006c188 	andmi	ip, r6, r8, lsl #3

Disassembly of section .text:

40000168 <net::igmp_init()>:
40000168:	e92d4010 	push	{r4, lr}
4000016c:	eb008413 	bl	400211c0 <net::igmp_set_ip()>
40000170:	e59f00ec 	ldr	r0, [pc, #236]	; 40000264 <net::igmp_init()+0xfc>
40000174:	e30a3598 	movw	r3, #42392	; 0xa598
40000178:	e3443005 	movt	r3, #16389	; 0x4005
4000017c:	e3a0c001 	mov	ip, #1
40000180:	e59f10e0 	ldr	r1, [pc, #224]	; 40000268 <net::igmp_init()+0x100>
40000184:	e3a02006 	mov	r2, #6
40000188:	e1c3c0b0 	strh	ip, [r3]
4000018c:	e3a0c05e 	mov	ip, #94	; 0x5e
40000190:	e5c3c002 	strb	ip, [r3, #2]
40000194:	e2522001 	subs	r2, r2, #1
40000198:	24d03001 	ldrbcs	r3, [r0], #1
4000019c:	24c13001 	strbcs	r3, [r1], #1
400001a0:	2afffffb 	bcs	40000194 <net::igmp_init()+0x2c>
400001a4:	e59fe0b8 	ldr	lr, [pc, #184]	; 40000264 <net::igmp_init()+0xfc>
400001a8:	e30a26f4 	movw	r2, #42740	; 0xa6f4
400001ac:	e3442005 	movt	r2, #16389	; 0x4005
400001b0:	e3a00008 	mov	r0, #8
400001b4:	e3400046 	movt	r0, #70	; 0x46
400001b8:	e30a35a4 	movw	r3, #42404	; 0xa5a4
400001bc:	e582000c 	str	r0, [r2, #12]
400001c0:	e3a00a02 	mov	r0, #8192	; 0x2000
400001c4:	e1c201b0 	strh	r0, [r2, #16]
400001c8:	e3a00000 	mov	r0, #0
400001cc:	e1c202b4 	strh	r0, [r2, #36]	; 0x24
400001d0:	e3a00016 	mov	r0, #22
400001d4:	e3443005 	movt	r3, #16389	; 0x4005
400001d8:	e3a01040 	mov	r1, #64	; 0x40
400001dc:	e1c202b6 	strh	r0, [r2, #38]	; 0x26
400001e0:	e3a00001 	mov	r0, #1
400001e4:	e340005e 	movt	r0, #94	; 0x5e
400001e8:	e283c006 	add	ip, r3, #6
400001ec:	e5830000 	str	r0, [r3]
400001f0:	e3a00c02 	mov	r0, #512	; 0x200
400001f4:	e1c300b4 	strh	r0, [r3, #4]
400001f8:	e3a00007 	mov	r0, #7
400001fc:	e3401201 	movt	r1, #513	; 0x201
40000200:	e3004494 	movw	r4, #1172	; 0x494
40000204:	e5821014 	str	r1, [r2, #20]
40000208:	e1c242b2 	strh	r4, [r2, #34]	; 0x22
4000020c:	e2500001 	subs	r0, r0, #1
40000210:	14de2001 	ldrbne	r2, [lr], #1
40000214:	14cc2001 	strbne	r2, [ip], #1
40000218:	1afffffb 	bne	4000020c <net::igmp_init()+0xa4>
4000021c:	e5831014 	str	r1, [r3, #20]
40000220:	e3a00008 	mov	r0, #8
40000224:	e3400046 	movt	r0, #70	; 0x46
40000228:	e3a02c02 	mov	r2, #512	; 0x200
4000022c:	e3402494 	movt	r2, #1172	; 0x494
40000230:	e3011150 	movw	r1, #4432	; 0x1150
40000234:	e583000c 	str	r0, [r3, #12]
40000238:	e3a000e0 	mov	r0, #224	; 0xe0
4000023c:	e5832020 	str	r2, [r3, #32]
40000240:	e3a02817 	mov	r2, #1507328	; 0x170000
40000244:	e1c301be 	strh	r0, [r3, #30]
40000248:	e3a0ca02 	mov	ip, #8192	; 0x2000
4000024c:	e5832024 	str	r2, [r3, #36]	; 0x24
40000250:	e3a00064 	mov	r0, #100	; 0x64
40000254:	e8bd4010 	pop	{r4, lr}
40000258:	e3441002 	movt	r1, #16386	; 0x4002
4000025c:	e1c3c1b0 	strh	ip, [r3, #16]
40000260:	ea009e2e 	b	40027b20 <SoftwareTimerAdd(unsigned long, void (*)(long))>
40000264:	4005a750 	andmi	sl, r5, r0, asr r7
40000268:	4005a6fa 	strdmi	sl, [r5], -sl	; <UNPREDICTABLE>

4000026c <net::igmp_shutdown()>:
4000026c:	e92d4070 	push	{r4, r5, r6, lr}
40000270:	e30a55d4 	movw	r5, #42452	; 0xa5d4
40000274:	e3445005 	movt	r5, #16389	; 0x4005
40000278:	e3a04000 	mov	r4, #0
4000027c:	e7950184 	ldr	r0, [r5, r4, lsl #3]
40000280:	e2844001 	add	r4, r4, #1
40000284:	e3500000 	cmp	r0, #0
40000288:	0a000000 	beq	40000290 <net::igmp_shutdown()+0x24>
4000028c:	eb0083fb 	bl	40021280 <net::igmp_leave(unsigned long)>
40000290:	e3540024 	cmp	r4, #36	; 0x24
40000294:	1afffff8 	bne	4000027c <net::igmp_shutdown()+0x10>
40000298:	e8bd8070 	pop	{r4, r5, r6, pc}

4000029c <net::net_init(net::Link, net::ip_addr, net::ip_addr, net::ip_addr, bool&)>:
4000029c:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
400002a0:	e30a473c 	movw	r4, #42812	; 0xa73c
400002a4:	e3444005 	movt	r4, #16389	; 0x4005
400002a8:	e1a06003 	mov	r6, r3
400002ac:	e59d7020 	ldr	r7, [sp, #32]
400002b0:	e1a08002 	mov	r8, r2
400002b4:	e5d4c019 	ldrb	ip, [r4, #25]
400002b8:	e1a09000 	mov	r9, r0
400002bc:	e5d43017 	ldrb	r3, [r4, #23]
400002c0:	e1a05001 	mov	r5, r1
400002c4:	e5d42018 	ldrb	r2, [r4, #24]
400002c8:	e1a0cc0c 	lsl	ip, ip, #24
400002cc:	e2433002 	sub	r3, r3, #2
400002d0:	e08cc802 	add	ip, ip, r2, lsl #16
400002d4:	e6ef3073 	uxtb	r3, r3
400002d8:	e28cc002 	add	ip, ip, #2
400002dc:	e08cc403 	add	ip, ip, r3, lsl #8
400002e0:	e584c010 	str	ip, [r4, #16]
400002e4:	eb0000cb 	bl	40000618 <net::arp_init()>
400002e8:	eb00011a 	bl	40000758 <net::ip_init()>
400002ec:	e5d4301a 	ldrb	r3, [r4, #26]
400002f0:	e3590001 	cmp	r9, #1
400002f4:	13c33001 	bicne	r3, r3, #1
400002f8:	15c4301a 	strbne	r3, [r4, #26]
400002fc:	1a00000e 	bne	4000033c <net::net_init(net::Link, net::ip_addr, net::ip_addr, net::ip_addr, bool&)+0xa0>
40000300:	e3833001 	orr	r3, r3, #1
40000304:	e5c4301a 	strb	r3, [r4, #26]
40000308:	e5d73000 	ldrb	r3, [r7]
4000030c:	e3530000 	cmp	r3, #0
40000310:	0a000001 	beq	4000031c <net::net_init(net::Link, net::ip_addr, net::ip_addr, net::ip_addr, bool&)+0x80>
40000314:	eb008232 	bl	40020be4 <net::dhcp_start()>
40000318:	ea000007 	b	4000033c <net::net_init(net::Link, net::ip_addr, net::ip_addr, net::ip_addr, bool&)+0xa0>
4000031c:	e3550000 	cmp	r5, #0
40000320:	0a000003 	beq	40000334 <net::net_init(net::Link, net::ip_addr, net::ip_addr, net::ip_addr, bool&)+0x98>
40000324:	e1a00008 	mov	r0, r8
40000328:	eb008515 	bl	40021784 <net::netif_set_netmask(net::ip_addr)>
4000032c:	e1a00006 	mov	r0, r6
40000330:	eb008524 	bl	400217c8 <net::netif_set_gw(net::ip_addr)>
40000334:	e1a00005 	mov	r0, r5
40000338:	eb0084a7 	bl	400215dc <net::net_set_primary_ip(net::ip_addr)>
4000033c:	eb007ce2 	bl	4001f6cc <ntp_client_init()>
40000340:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
40000344:	ea007ba5 	b	4001f1e0 <mdns_init()>

40000348 <net::tcp_init()>:
40000348:	e59f1038 	ldr	r1, [pc, #56]	; 40000388 <net::tcp_init()+0x40>
4000034c:	e3a03006 	mov	r3, #6
40000350:	e59f2034 	ldr	r2, [pc, #52]	; 4000038c <net::tcp_init()+0x44>
40000354:	e2533001 	subs	r3, r3, #1
40000358:	24d10001 	ldrbcs	r0, [r1], #1
4000035c:	24c20001 	strbcs	r0, [r2], #1
40000360:	2afffffb 	bcs	40000354 <net::tcp_init()+0xc>
40000364:	e30a3770 	movw	r3, #42864	; 0xa770
40000368:	e3a01008 	mov	r1, #8
4000036c:	e3443005 	movt	r3, #16389	; 0x4005
40000370:	e3a02040 	mov	r2, #64	; 0x40
40000374:	e3401045 	movt	r1, #69	; 0x45
40000378:	e3402640 	movt	r2, #1600	; 0x640
4000037c:	e583100c 	str	r1, [r3, #12]
40000380:	e5832014 	str	r2, [r3, #20]
40000384:	e12fff1e 	bx	lr
40000388:	4005a750 	andmi	sl, r5, r0, asr r7
4000038c:	4005a776 	andmi	sl, r5, r6, ror r7

40000390 <net::udp_init()>:
40000390:	e59f0094 	ldr	r0, [pc, #148]	; 4000042c <net::udp_init()+0x9c>
40000394:	e30c3ea8 	movw	r3, #52904	; 0xcea8
40000398:	e3443005 	movt	r3, #16389	; 0x4005
4000039c:	e3a0c001 	mov	ip, #1
400003a0:	e59f1088 	ldr	r1, [pc, #136]	; 40000430 <net::udp_init()+0xa0>
400003a4:	e24dd008 	sub	sp, sp, #8
400003a8:	e1c3c0b0 	strh	ip, [r3]
400003ac:	e3a02006 	mov	r2, #6
400003b0:	e3a0c05e 	mov	ip, #94	; 0x5e
400003b4:	e5c3c002 	strb	ip, [r3, #2]
400003b8:	e2522001 	subs	r2, r2, #1
400003bc:	24d03001 	ldrbcs	r3, [r0], #1
400003c0:	24c13001 	strbcs	r3, [r1], #1
400003c4:	2afffffb 	bcs	400003b8 <net::udp_init()+0x28>
400003c8:	e30a273c 	movw	r2, #42812	; 0xa73c
400003cc:	e30c38bc 	movw	r3, #51388	; 0xc8bc
400003d0:	e3442005 	movt	r2, #16389	; 0x4005
400003d4:	e3a00008 	mov	r0, #8
400003d8:	e3443005 	movt	r3, #16389	; 0x4005
400003dc:	e3a01040 	mov	r1, #64	; 0x40
400003e0:	e592c000 	ldr	ip, [r2]
400003e4:	e3a02000 	mov	r2, #0
400003e8:	e3400045 	movt	r0, #69	; 0x45
400003ec:	e583000c 	str	r0, [r3, #12]
400003f0:	e283001a 	add	r0, r3, #26
400003f4:	e58dc004 	str	ip, [sp, #4]
400003f8:	e28dc004 	add	ip, sp, #4
400003fc:	e3411140 	movt	r1, #4416	; 0x1140
40000400:	e5831014 	str	r1, [r3, #20]
40000404:	e7dc1002 	ldrb	r1, [ip, r2]
40000408:	e6ef1071 	uxtb	r1, r1
4000040c:	e7c01002 	strb	r1, [r0, r2]
40000410:	e2822001 	add	r2, r2, #1
40000414:	e3520004 	cmp	r2, #4
40000418:	1afffff9 	bne	40000404 <net::udp_init()+0x74>
4000041c:	e3a02000 	mov	r2, #0
40000420:	e1c322b8 	strh	r2, [r3, #40]	; 0x28
40000424:	e28dd008 	add	sp, sp, #8
40000428:	e12fff1e 	bx	lr
4000042c:	4005a750 	andmi	sl, r5, r0, asr r7
40000430:	4005c8c2 	andmi	ip, r5, r2, asr #17

40000434 <emac_config()>:
40000434:	e92d4010 	push	{r4, lr}
40000438:	e3a01000 	mov	r1, #0
4000043c:	e59f4054 	ldr	r4, [pc, #84]	; 40000498 <emac_config()+0x64>
40000440:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40000444:	e59432c8 	ldr	r3, [r4, #712]	; 0x2c8
40000448:	e3833004 	orr	r3, r3, #4
4000044c:	e58432c8 	str	r3, [r4, #712]	; 0x2c8
40000450:	eb00ade9 	bl	4002bbfc <udelay(unsigned long, unsigned long)>
40000454:	e5943070 	ldr	r3, [r4, #112]	; 0x70
40000458:	e3a00ffa 	mov	r0, #1000	; 0x3e8
4000045c:	e3a01000 	mov	r1, #0
40000460:	e3c33001 	bic	r3, r3, #1
40000464:	e5843070 	str	r3, [r4, #112]	; 0x70
40000468:	eb00ade3 	bl	4002bbfc <udelay(unsigned long, unsigned long)>
4000046c:	e5943070 	ldr	r3, [r4, #112]	; 0x70
40000470:	e3a02507 	mov	r2, #29360128	; 0x1c00000
40000474:	e3a00001 	mov	r0, #1
40000478:	e3833001 	orr	r3, r3, #1
4000047c:	e5843070 	str	r3, [r4, #112]	; 0x70
40000480:	e5923030 	ldr	r3, [r2, #48]	; 0x30
40000484:	e8bd4010 	pop	{r4, lr}
40000488:	e7ee3053 	ubfx	r3, r3, #0, #15
4000048c:	e3833952 	orr	r3, r3, #1343488	; 0x148000
40000490:	e5823030 	str	r3, [r2, #48]	; 0x30
40000494:	ea008a4c 	b	40022dcc <net::phy_config(unsigned long)>
40000498:	01c20000 	biceq	r0, r2, r0

4000049c <emac_start(unsigned char*, net::Link&)>:
4000049c:	e92d4030 	push	{r4, r5, lr}
400004a0:	e24dd014 	sub	sp, sp, #20
400004a4:	e1a0400d 	mov	r4, sp
400004a8:	e1a05001 	mov	r5, r1
400004ac:	eb00aea2 	bl	4002bf3c <mac_address_get(unsigned char*)>
400004b0:	e3a03000 	mov	r3, #0
400004b4:	e1a01004 	mov	r1, r4
400004b8:	e58d3004 	str	r3, [sp, #4]
400004bc:	e3a00001 	mov	r0, #1
400004c0:	e58d3008 	str	r3, [sp, #8]
400004c4:	eb008ca0 	bl	4002374c <net::phy_start(unsigned long, net::PhyStatus&)>
400004c8:	e59d3000 	ldr	r3, [sp]
400004cc:	e5853000 	str	r3, [r5]
400004d0:	e894000f 	ldm	r4, {r0, r1, r2, r3}
400004d4:	e30047fc 	movw	r4, #2044	; 0x7fc
400004d8:	eb0089ab 	bl	40022b8c <emac_adjust_link(net::PhyStatus)>
400004dc:	e59f1118 	ldr	r1, [pc, #280]	; 400005fc <emac_start(unsigned char*, net::Link&)+0x160>
400004e0:	e3a0e102 	mov	lr, #-2147483648	; 0x80000000
400004e4:	e59f3114 	ldr	r3, [pc, #276]	; 40000600 <emac_start(unsigned char*, net::Link&)+0x164>
400004e8:	e59fc114 	ldr	ip, [pc, #276]	; 40000604 <emac_start(unsigned char*, net::Link&)+0x168>
400004ec:	e5831000 	str	r1, [r3]
400004f0:	e59f3110 	ldr	r3, [pc, #272]	; 40000608 <emac_start(unsigned char*, net::Link&)+0x16c>
400004f4:	e5932024 	ldr	r2, [r3, #36]	; 0x24
400004f8:	e3c22102 	bic	r2, r2, #-2147483648	; 0x80000000
400004fc:	e5832024 	str	r2, [r3, #36]	; 0x24
40000500:	e5932010 	ldr	r2, [r3, #16]
40000504:	e3c22102 	bic	r2, r2, #-2147483648	; 0x80000000
40000508:	e5832010 	str	r2, [r3, #16]
4000050c:	e5932014 	ldr	r2, [r3, #20]
40000510:	e3c22101 	bic	r2, r2, #1073741824	; 0x40000000
40000514:	e5832014 	str	r2, [r3, #20]
40000518:	e5932028 	ldr	r2, [r3, #40]	; 0x28
4000051c:	e3c22101 	bic	r2, r2, #1073741824	; 0x40000000
40000520:	e5832028 	str	r2, [r3, #40]	; 0x28
40000524:	e1a03001 	mov	r3, r1
40000528:	e1a02283 	lsl	r2, r3, #5
4000052c:	e1a00003 	mov	r0, r3
40000530:	e28225e1 	add	r2, r2, #943718400	; 0x38400000
40000534:	e2833040 	add	r3, r3, #64	; 0x40
40000538:	e2822b06 	add	r2, r2, #6144	; 0x1800
4000053c:	e5032038 	str	r2, [r3, #-56]	; 0xffffffc8
40000540:	e153000c 	cmp	r3, ip
40000544:	e580300c 	str	r3, [r0, #12]
40000548:	e5804004 	str	r4, [r0, #4]
4000054c:	e580e000 	str	lr, [r0]
40000550:	1afffff4 	bne	40000528 <emac_start(unsigned char*, net::Link&)+0x8c>
40000554:	e59f20a0 	ldr	r2, [pc, #160]	; 400005fc <emac_start(unsigned char*, net::Link&)+0x160>
40000558:	e1a0e003 	mov	lr, r3
4000055c:	e59fc0a8 	ldr	ip, [pc, #168]	; 4000060c <emac_start(unsigned char*, net::Link&)+0x170>
40000560:	e3a05102 	mov	r5, #-2147483648	; 0x80000000
40000564:	e5821bcc 	str	r1, [r2, #3020]	; 0xbcc
40000568:	e59f2098 	ldr	r2, [pc, #152]	; 40000608 <emac_start(unsigned char*, net::Link&)+0x16c>
4000056c:	e59f409c 	ldr	r4, [pc, #156]	; 40000610 <emac_start(unsigned char*, net::Link&)+0x174>
40000570:	e5821034 	str	r1, [r2, #52]	; 0x34
40000574:	e3a01000 	mov	r1, #0
40000578:	e58c1800 	str	r1, [ip, #2048]	; 0x800
4000057c:	e1a02283 	lsl	r2, r3, #5
40000580:	e1a00003 	mov	r0, r3
40000584:	e28225e1 	add	r2, r2, #943718400	; 0x38400000
40000588:	e2833040 	add	r3, r3, #64	; 0x40
4000058c:	e2822b06 	add	r2, r2, #6144	; 0x1800
40000590:	e5032038 	str	r2, [r3, #-56]	; 0xffffffc8
40000594:	e1530004 	cmp	r3, r4
40000598:	e580300c 	str	r3, [r0, #12]
4000059c:	e5805000 	str	r5, [r0]
400005a0:	e5801004 	str	r1, [r0, #4]
400005a4:	1afffff4 	bne	4000057c <emac_start(unsigned char*, net::Link&)+0xe0>
400005a8:	e59f3064 	ldr	r3, [pc, #100]	; 40000614 <emac_start(unsigned char*, net::Link&)+0x178>
400005ac:	e3a02801 	mov	r2, #65536	; 0x10000
400005b0:	e583e7cc 	str	lr, [r3, #1996]	; 0x7cc
400005b4:	e59f304c 	ldr	r3, [pc, #76]	; 40000608 <emac_start(unsigned char*, net::Link&)+0x16c>
400005b8:	e583e020 	str	lr, [r3, #32]
400005bc:	e58c1804 	str	r1, [ip, #2052]	; 0x804
400005c0:	e5832038 	str	r2, [r3, #56]	; 0x38
400005c4:	e5932028 	ldr	r2, [r3, #40]	; 0x28
400005c8:	e3822101 	orr	r2, r2, #1073741824	; 0x40000000
400005cc:	e5832028 	str	r2, [r3, #40]	; 0x28
400005d0:	e5932014 	ldr	r2, [r3, #20]
400005d4:	e3822101 	orr	r2, r2, #1073741824	; 0x40000000
400005d8:	e5832014 	str	r2, [r3, #20]
400005dc:	e5932024 	ldr	r2, [r3, #36]	; 0x24
400005e0:	e3822102 	orr	r2, r2, #-2147483648	; 0x80000000
400005e4:	e5832024 	str	r2, [r3, #36]	; 0x24
400005e8:	e5932010 	ldr	r2, [r3, #16]
400005ec:	e3822102 	orr	r2, r2, #-2147483648	; 0x80000000
400005f0:	e5832010 	str	r2, [r3, #16]
400005f4:	e28dd014 	add	sp, sp, #20
400005f8:	e8bd8030 	pop	{r4, r5, pc}
400005fc:	40400000 	submi	r0, r0, r0
40000600:	40062bf4 	strdmi	r2, [r6], -r4
40000604:	40400c00 	submi	r0, r0, r0, lsl #24
40000608:	01c30000 	biceq	r0, r3, r0
4000060c:	40431000 	submi	r1, r3, r0
40000610:	40401800 	submi	r1, r0, r0, lsl #16
40000614:	40401000 	submi	r1, r0, r0

40000618 <net::arp_init()>:
40000618:	e3023c38 	movw	r3, #11320	; 0x2c38
4000061c:	e3a02010 	mov	r2, #16
40000620:	e3443006 	movt	r3, #16390	; 0x4006
40000624:	e3a01000 	mov	r1, #0
40000628:	e92d4010 	push	{r4, lr}
4000062c:	e2830018 	add	r0, r3, #24
40000630:	e1530000 	cmp	r3, r0
40000634:	14c31001 	strbne	r1, [r3], #1
40000638:	1afffffc 	bne	40000630 <net::arp_init()+0x18>
4000063c:	e2522001 	subs	r2, r2, #1
40000640:	1afffff9 	bne	4000062c <net::arp_init()+0x14>
40000644:	e59f10f8 	ldr	r1, [pc, #248]	; 40000744 <net::arp_init()+0x12c>
40000648:	e3a03006 	mov	r3, #6
4000064c:	e59f20f4 	ldr	r2, [pc, #244]	; 40000748 <net::arp_init()+0x130>
40000650:	e2533001 	subs	r3, r3, #1
40000654:	24d10001 	ldrbcs	r0, [r1], #1
40000658:	24c20001 	strbcs	r0, [r2], #1
4000065c:	2afffffb 	bcs	40000650 <net::arp_init()+0x38>
40000660:	e3022db8 	movw	r2, #11704	; 0x2db8
40000664:	e3a00006 	mov	r0, #6
40000668:	e3442006 	movt	r2, #16390	; 0x4006
4000066c:	e1a01002 	mov	r1, r2
40000670:	e2500001 	subs	r0, r0, #1
40000674:	24c23001 	strbcs	r3, [r2], #1
40000678:	2afffffc 	bcs	40000670 <net::arp_init()+0x58>
4000067c:	e59fe0c0 	ldr	lr, [pc, #192]	; 40000744 <net::arp_init()+0x12c>
40000680:	e3a03c01 	mov	r3, #256	; 0x100
40000684:	e1c131b4 	strh	r3, [r1, #20]
40000688:	e300c608 	movw	ip, #1544	; 0x608
4000068c:	e59f20b8 	ldr	r2, [pc, #184]	; 4000074c <net::arp_init()+0x134>
40000690:	e3a00008 	mov	r0, #8
40000694:	e340c100 	movt	ip, #256	; 0x100
40000698:	e3a03006 	mov	r3, #6
4000069c:	e3400406 	movt	r0, #1030	; 0x406
400006a0:	e581c00c 	str	ip, [r1, #12]
400006a4:	e5810010 	str	r0, [r1, #16]
400006a8:	e2533001 	subs	r3, r3, #1
400006ac:	24de4001 	ldrbcs	r4, [lr], #1
400006b0:	24c24001 	strbcs	r4, [r2], #1
400006b4:	2afffffb 	bcs	400006a8 <net::arp_init()+0x90>
400006b8:	e59f2090 	ldr	r2, [pc, #144]	; 40000750 <net::arp_init()+0x138>
400006bc:	e30a373c 	movw	r3, #42812	; 0xa73c
400006c0:	e3443005 	movt	r3, #16389	; 0x4005
400006c4:	e5933000 	ldr	r3, [r3]
400006c8:	e581301c 	str	r3, [r1, #28]
400006cc:	e3a03006 	mov	r3, #6
400006d0:	e3a01000 	mov	r1, #0
400006d4:	e2533001 	subs	r3, r3, #1
400006d8:	24c21001 	strbcs	r1, [r2], #1
400006dc:	2afffffc 	bcs	400006d4 <net::arp_init()+0xbc>
400006e0:	e59f105c 	ldr	r1, [pc, #92]	; 40000744 <net::arp_init()+0x12c>
400006e4:	e3a03006 	mov	r3, #6
400006e8:	e59f2064 	ldr	r2, [pc, #100]	; 40000754 <net::arp_init()+0x13c>
400006ec:	e2533001 	subs	r3, r3, #1
400006f0:	24d1e001 	ldrbcs	lr, [r1], #1
400006f4:	24c2e001 	strbcs	lr, [r2], #1
400006f8:	2afffffb 	bcs	400006ec <net::arp_init()+0xd4>
400006fc:	e59f1040 	ldr	r1, [pc, #64]	; 40000744 <net::arp_init()+0x12c>
40000700:	e3023bfc 	movw	r3, #11260	; 0x2bfc
40000704:	e3443006 	movt	r3, #16390	; 0x4006
40000708:	e3a02007 	mov	r2, #7
4000070c:	e2833016 	add	r3, r3, #22
40000710:	e503c00a 	str	ip, [r3, #-10]
40000714:	e3a0cc02 	mov	ip, #512	; 0x200
40000718:	e5030006 	str	r0, [r3, #-6]
4000071c:	e143c0b2 	strh	ip, [r3, #-2]
40000720:	e2522001 	subs	r2, r2, #1
40000724:	14d10001 	ldrbne	r0, [r1], #1
40000728:	14c30001 	strbne	r0, [r3], #1
4000072c:	1afffffb 	bne	40000720 <net::arp_init()+0x108>
40000730:	e3031270 	movw	r1, #12912	; 0x3270
40000734:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40000738:	e8bd4010 	pop	{r4, lr}
4000073c:	e3441002 	movt	r1, #16386	; 0x4002
40000740:	ea009cf6 	b	40027b20 <SoftwareTimerAdd(unsigned long, void (*)(long))>
40000744:	4005a750 	andmi	sl, r5, r0, asr r7
40000748:	40062dbe 			; <UNDEFINED> instruction: 0x40062dbe
4000074c:	40062dce 	andmi	r2, r6, lr, asr #27
40000750:	40062dd8 	ldrdmi	r2, [r6], -r8
40000754:	40062c02 	andmi	r2, r6, r2, lsl #24

40000758 <net::ip_init()>:
40000758:	e92d4010 	push	{r4, lr}
4000075c:	ebffff0b 	bl	40000390 <net::udp_init()>
40000760:	ebfffe80 	bl	40000168 <net::igmp_init()>
40000764:	e8bd4010 	pop	{r4, lr}
40000768:	eafffef6 	b	40000348 <net::tcp_init()>

4000076c <hardware_init()>:
4000076c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40000770:	e3a01000 	mov	r1, #0
40000774:	e24dd024 	sub	sp, sp, #36	; 0x24
40000778:	e3a0000f 	mov	r0, #15
4000077c:	eb00a2fe 	bl	4002937c <h3_gpio_fsel>
40000780:	e3a01002 	mov	r1, #2
40000784:	e3a0000f 	mov	r0, #15
40000788:	eb00a330 	bl	40029450 <h3_gpio_set_pud>
4000078c:	e3a01000 	mov	r1, #0
40000790:	e3a0000e 	mov	r0, #14
40000794:	eb00a2f8 	bl	4002937c <h3_gpio_fsel>
40000798:	e3a01002 	mov	r1, #2
4000079c:	e3a0000e 	mov	r0, #14
400007a0:	eb00a32a 	bl	40029450 <h3_gpio_set_pud>
400007a4:	e3a01000 	mov	r1, #0
400007a8:	e3a0000d 	mov	r0, #13
400007ac:	eb00a2f2 	bl	4002937c <h3_gpio_fsel>
400007b0:	e3a01002 	mov	r1, #2
400007b4:	e3a0000d 	mov	r0, #13
400007b8:	eb00a324 	bl	40029450 <h3_gpio_set_pud>
400007bc:	eb00ad2f 	bl	4002bc80 <h3_watchdog_disable()>
400007c0:	eb000252 	bl	40001110 <h3_usb_end()>
400007c4:	eb000241 	bl	400010d0 <h3_timer_avs_init()>
400007c8:	eb000173 	bl	40000d9c <h3_hs_timer_init()>
400007cc:	eb000043 	bl	400008e0 <sys_time_init()>
400007d0:	eb000056 	bl	40000930 <console_init()>
400007d4:	eb000282 	bl	400011e4 <gic_init()>
400007d8:	eb000206 	bl	40000ff8 <h3_thermal_init()>
400007dc:	eb0002d6 	bl	4000133c <emac_init()>
400007e0:	eb000187 	bl	40000e04 <h3_i2c_begin()>
400007e4:	e59f00d0 	ldr	r0, [pc, #208]	; 400008bc <hardware_init()+0x150>
400007e8:	eb009778 	bl	400265d0 <console_puts>
400007ec:	e59f30cc 	ldr	r3, [pc, #204]	; 400008c0 <hardware_init()+0x154>
400007f0:	e3a02ffa 	mov	r2, #1000	; 0x3e8
400007f4:	e5933084 	ldr	r3, [r3, #132]	; 0x84
400007f8:	e733f213 	udiv	r3, r3, r2
400007fc:	e59f20c0 	ldr	r2, [pc, #192]	; 400008c4 <hardware_init()+0x158>
40000800:	e5823000 	str	r3, [r2]
40000804:	eb00a2c6 	bl	40029324 <h3_get_boot_device>
40000808:	e59f10b8 	ldr	r1, [pc, #184]	; 400008c8 <hardware_init()+0x15c>
4000080c:	e2402002 	sub	r2, r0, #2
40000810:	e16f2f12 	clz	r2, r2
40000814:	e59f00b0 	ldr	r0, [pc, #176]	; 400008cc <hardware_init()+0x160>
40000818:	e1a022a2 	lsr	r2, r2, #5
4000081c:	eb00a0a2 	bl	40028aac <f_mount>
40000820:	e2503000 	subs	r3, r0, #0
40000824:	0a000005 	beq	40000840 <hardware_init()+0xd4>
40000828:	e59f20a0 	ldr	r2, [pc, #160]	; 400008d0 <hardware_init()+0x164>
4000082c:	e3a0101f 	mov	r1, #31
40000830:	e1a0000d 	mov	r0, sp
40000834:	eb00b0f2 	bl	4002cc04 <snprintf>
40000838:	e1a0000d 	mov	r0, sp
4000083c:	eb009764 	bl	400265d4 <console_error>
40000840:	e59f308c 	ldr	r3, [pc, #140]	; 400008d4 <hardware_init()+0x168>
40000844:	e5932028 	ldr	r2, [r3, #40]	; 0x28
40000848:	e3822001 	orr	r2, r2, #1
4000084c:	e5832028 	str	r2, [r3, #40]	; 0x28
40000850:	e59320b0 	ldr	r2, [r3, #176]	; 0xb0
40000854:	e3822001 	orr	r2, r2, #1
40000858:	e58320b0 	str	r2, [r3, #176]	; 0xb0
4000085c:	e59f2074 	ldr	r2, [pc, #116]	; 400008d8 <hardware_init()+0x16c>
40000860:	e5923004 	ldr	r3, [r2, #4]
40000864:	e3c33c07 	bic	r3, r3, #1792	; 0x700
40000868:	e3833c01 	orr	r3, r3, #256	; 0x100
4000086c:	e5823004 	str	r3, [r2, #4]
40000870:	e5923010 	ldr	r3, [r2, #16]
40000874:	e3c33080 	bic	r3, r3, #128	; 0x80
40000878:	e3833b01 	orr	r3, r3, #1024	; 0x400
4000087c:	e5823010 	str	r3, [r2, #16]
40000880:	e59f3054 	ldr	r3, [pc, #84]	; 400008dc <hardware_init()+0x170>
40000884:	e59322c0 	ldr	r2, [r3, #704]	; 0x2c0
40000888:	e3822040 	orr	r2, r2, #64	; 0x40
4000088c:	e58322c0 	str	r2, [r3, #704]	; 0x2c0
40000890:	e5932060 	ldr	r2, [r3, #96]	; 0x60
40000894:	e3822040 	orr	r2, r2, #64	; 0x40
40000898:	e5832060 	str	r2, [r3, #96]	; 0x60
4000089c:	eb00973a 	bl	4002658c <hardware_led_init()>
400008a0:	e3a00001 	mov	r0, #1
400008a4:	e3a01000 	mov	r1, #0
400008a8:	eb00973f 	bl	400265ac <hardware_led_set(int)>
400008ac:	e3a00000 	mov	r0, #0
400008b0:	e28dd024 	add	sp, sp, #36	; 0x24
400008b4:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
400008b8:	ea00aa1f 	b	4002b13c <h3_cpu_set_clock>
400008bc:	40032ed9 	ldrdmi	r2, [r3], -r9
400008c0:	01c20c00 	biceq	r0, r2, r0, lsl #24
400008c4:	40062ef8 	strdmi	r2, [r6], -r8
400008c8:	4002ded2 	ldrdmi	sp, [r2], -r2
400008cc:	40062efc 	strdmi	r2, [r6], -ip
400008d0:	40032ee7 	andmi	r2, r3, r7, ror #29
400008d4:	01f01400 	mvnseq	r1, r0, lsl #8
400008d8:	01f02c00 	mvnseq	r2, r0, lsl #24
400008dc:	01c20000 	biceq	r0, r2, r0

400008e0 <sys_time_init()>:
400008e0:	e92d4010 	push	{r4, lr}
400008e4:	e24dd030 	sub	sp, sp, #48	; 0x30
400008e8:	e3a03002 	mov	r3, #2
400008ec:	e3a04000 	mov	r4, #0
400008f0:	e58d3018 	str	r3, [sp, #24]
400008f4:	e28d000c 	add	r0, sp, #12
400008f8:	e58d4014 	str	r4, [sp, #20]
400008fc:	e3a0307d 	mov	r3, #125	; 0x7d
40000900:	e58d3020 	str	r3, [sp, #32]
40000904:	e58d4010 	str	r4, [sp, #16]
40000908:	e58d400c 	str	r4, [sp, #12]
4000090c:	e58d401c 	str	r4, [sp, #28]
40000910:	e58d402c 	str	r4, [sp, #44]	; 0x2c
40000914:	eb00b1b4 	bl	4002cfec <mktime>
40000918:	e98d0011 	stmib	sp, {r0, r4}
4000091c:	e1a01004 	mov	r1, r4
40000920:	e28d0004 	add	r0, sp, #4
40000924:	eb00b24b 	bl	4002d258 <settimeofday>
40000928:	e28dd030 	add	sp, sp, #48	; 0x30
4000092c:	e8bd8010 	pop	{r4, pc}

40000930 <console_init()>:
40000930:	e92d4010 	push	{r4, lr}
40000934:	eb000203 	bl	40001148 <uart0_init>
40000938:	e59f000c 	ldr	r0, [pc, #12]	; 4000094c <console_init()+0x1c>
4000093c:	eb00ad9b 	bl	4002bfb0 <uart0_puts>
40000940:	e8bd4010 	pop	{r4, lr}
40000944:	e59f0004 	ldr	r0, [pc, #4]	; 40000950 <console_init()+0x20>
40000948:	ea00ad98 	b	4002bfb0 <uart0_puts>
4000094c:	40032f01 	andmi	r2, r3, r1, lsl #30
40000950:	40032f1f 	andmi	r2, r3, pc, lsl pc

40000954 <disk_initialize>:
40000954:	e92d4010 	push	{r4, lr}
40000958:	e2504000 	subs	r4, r0, #0
4000095c:	1a00000d 	bne	40000998 <disk_initialize+0x44>
40000960:	eb0000c4 	bl	40000c78 <sunxi_mmc_init>
40000964:	e3500000 	cmp	r0, #0
40000968:	da00000a 	ble	40000998 <disk_initialize+0x44>
4000096c:	e59f3030 	ldr	r3, [pc, #48]	; 400009a4 <disk_initialize+0x50>
40000970:	e1a00004 	mov	r0, r4
40000974:	e3e02000 	mvn	r2, #0
40000978:	e4832004 	str	r2, [r3], #4
4000097c:	e2800001 	add	r0, r0, #1
40000980:	e3500010 	cmp	r0, #16
40000984:	1afffffb 	bne	40000978 <disk_initialize+0x24>
40000988:	e59f2018 	ldr	r2, [pc, #24]	; 400009a8 <disk_initialize+0x54>
4000098c:	e5d23000 	ldrb	r3, [r2]
40000990:	e20330fe 	and	r3, r3, #254	; 0xfe
40000994:	e5c23000 	strb	r3, [r2]
40000998:	e59f3008 	ldr	r3, [pc, #8]	; 400009a8 <disk_initialize+0x54>
4000099c:	e5d30000 	ldrb	r0, [r3]
400009a0:	e8bd8010 	pop	{r4, pc}
400009a4:	40065a00 	andmi	r5, r6, r0, lsl #20
400009a8:	40033adc 	ldrdmi	r3, [r3], -ip

400009ac <h3_uart_begin>:
400009ac:	e59fc174 	ldr	ip, [pc, #372]	; 40000b28 <h3_uart_begin+0x17c>
400009b0:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
400009b4:	e73ef11c 	udiv	lr, ip, r1
400009b8:	e151000c 	cmp	r1, ip
400009bc:	935e0801 	cmpls	lr, #65536	; 0x10000
400009c0:	e59fe164 	ldr	lr, [pc, #356]	; 40000b2c <h3_uart_begin+0x180>
400009c4:	21a0100e 	movcs	r1, lr
400009c8:	e731f11c 	udiv	r1, ip, r1
400009cc:	e59fc15c 	ldr	ip, [pc, #348]	; 40000b30 <h3_uart_begin+0x184>
400009d0:	e150000c 	cmp	r0, ip
400009d4:	1a000026 	bne	40000a74 <h3_uart_begin+0xc8>
400009d8:	e59fe154 	ldr	lr, [pc, #340]	; 40000b34 <h3_uart_begin+0x188>
400009dc:	e59ec000 	ldr	ip, [lr]
400009e0:	e3ccc877 	bic	ip, ip, #7798784	; 0x770000
400009e4:	e38cc822 	orr	ip, ip, #2228224	; 0x220000
400009e8:	e58ec000 	str	ip, [lr]
400009ec:	e59fc144 	ldr	ip, [pc, #324]	; 40000b38 <h3_uart_begin+0x18c>
400009f0:	e59ce2d8 	ldr	lr, [ip, #728]	; 0x2d8
400009f4:	e38ee801 	orr	lr, lr, #65536	; 0x10000
400009f8:	e58ce2d8 	str	lr, [ip, #728]	; 0x2d8
400009fc:	e59ce06c 	ldr	lr, [ip, #108]	; 0x6c
40000a00:	e38ee801 	orr	lr, lr, #65536	; 0x10000
40000a04:	e58ce06c 	str	lr, [ip, #108]	; 0x6c
40000a08:	e2422005 	sub	r2, r2, #5
40000a0c:	e3520003 	cmp	r2, #3
40000a10:	23a02003 	movcs	r2, #3
40000a14:	e3530000 	cmp	r3, #0
40000a18:	0a000003 	beq	40000a2c <h3_uart_begin+0x80>
40000a1c:	e382c008 	orr	ip, r2, #8
40000a20:	e3530002 	cmp	r3, #2
40000a24:	03822018 	orreq	r2, r2, #24
40000a28:	11a0200c 	movne	r2, ip
40000a2c:	e59d3004 	ldr	r3, [sp, #4]
40000a30:	e3530002 	cmp	r3, #2
40000a34:	03822004 	orreq	r2, r2, #4
40000a38:	f57ff05f 	dmb	sy
40000a3c:	e3a03000 	mov	r3, #0
40000a40:	e3a0c080 	mov	ip, #128	; 0x80
40000a44:	e5803008 	str	r3, [r0, #8]
40000a48:	e580c00c 	str	ip, [r0, #12]
40000a4c:	e6efc071 	uxtb	ip, r1
40000a50:	e1a01421 	lsr	r1, r1, #8
40000a54:	e580c000 	str	ip, [r0]
40000a58:	e5801004 	str	r1, [r0, #4]
40000a5c:	e580200c 	str	r2, [r0, #12]
40000a60:	e3a02007 	mov	r2, #7
40000a64:	e5802008 	str	r2, [r0, #8]
40000a68:	e5803004 	str	r3, [r0, #4]
40000a6c:	f57ff06f 	isb	sy
40000a70:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40000a74:	e59fc0c0 	ldr	ip, [pc, #192]	; 40000b3c <h3_uart_begin+0x190>
40000a78:	e150000c 	cmp	r0, ip
40000a7c:	1a00000b 	bne	40000ab0 <h3_uart_begin+0x104>
40000a80:	e59fe0ac 	ldr	lr, [pc, #172]	; 40000b34 <h3_uart_begin+0x188>
40000a84:	e59ec0d8 	ldr	ip, [lr, #216]	; 0xd8
40000a88:	e3ccc477 	bic	ip, ip, #1996488704	; 0x77000000
40000a8c:	e38cc422 	orr	ip, ip, #570425344	; 0x22000000
40000a90:	e58ec0d8 	str	ip, [lr, #216]	; 0xd8
40000a94:	e59fc09c 	ldr	ip, [pc, #156]	; 40000b38 <h3_uart_begin+0x18c>
40000a98:	e59ce2d8 	ldr	lr, [ip, #728]	; 0x2d8
40000a9c:	e38ee802 	orr	lr, lr, #131072	; 0x20000
40000aa0:	e58ce2d8 	str	lr, [ip, #728]	; 0x2d8
40000aa4:	e59ce06c 	ldr	lr, [ip, #108]	; 0x6c
40000aa8:	e38ee802 	orr	lr, lr, #131072	; 0x20000
40000aac:	eaffffd4 	b	40000a04 <h3_uart_begin+0x58>
40000ab0:	e59fc088 	ldr	ip, [pc, #136]	; 40000b40 <h3_uart_begin+0x194>
40000ab4:	e150000c 	cmp	r0, ip
40000ab8:	1a00000b 	bne	40000aec <h3_uart_begin+0x140>
40000abc:	e59fe070 	ldr	lr, [pc, #112]	; 40000b34 <h3_uart_begin+0x188>
40000ac0:	e59ec000 	ldr	ip, [lr]
40000ac4:	e3ccc077 	bic	ip, ip, #119	; 0x77
40000ac8:	e38cc022 	orr	ip, ip, #34	; 0x22
40000acc:	e58ec000 	str	ip, [lr]
40000ad0:	e59fc060 	ldr	ip, [pc, #96]	; 40000b38 <h3_uart_begin+0x18c>
40000ad4:	e59ce2d8 	ldr	lr, [ip, #728]	; 0x2d8
40000ad8:	e38ee701 	orr	lr, lr, #262144	; 0x40000
40000adc:	e58ce2d8 	str	lr, [ip, #728]	; 0x2d8
40000ae0:	e59ce06c 	ldr	lr, [ip, #108]	; 0x6c
40000ae4:	e38ee701 	orr	lr, lr, #262144	; 0x40000
40000ae8:	eaffffc5 	b	40000a04 <h3_uart_begin+0x58>
40000aec:	e59fc050 	ldr	ip, [pc, #80]	; 40000b44 <h3_uart_begin+0x198>
40000af0:	e150000c 	cmp	r0, ip
40000af4:	1affffc3 	bne	40000a08 <h3_uart_begin+0x5c>
40000af8:	e59fe034 	ldr	lr, [pc, #52]	; 40000b34 <h3_uart_begin+0x188>
40000afc:	e59ec004 	ldr	ip, [lr, #4]
40000b00:	e3ccc677 	bic	ip, ip, #124780544	; 0x7700000
40000b04:	e38cc633 	orr	ip, ip, #53477376	; 0x3300000
40000b08:	e58ec004 	str	ip, [lr, #4]
40000b0c:	e59fc024 	ldr	ip, [pc, #36]	; 40000b38 <h3_uart_begin+0x18c>
40000b10:	e59ce2d8 	ldr	lr, [ip, #728]	; 0x2d8
40000b14:	e38ee702 	orr	lr, lr, #524288	; 0x80000
40000b18:	e58ce2d8 	str	lr, [ip, #728]	; 0x2d8
40000b1c:	e59ce06c 	ldr	lr, [ip, #108]	; 0x6c
40000b20:	e38ee702 	orr	lr, lr, #524288	; 0x80000
40000b24:	eaffffb6 	b	40000a04 <h3_uart_begin+0x58>
40000b28:	0016e360 	andseq	lr, r6, r0, ror #6
40000b2c:	0001c200 	andeq	ip, r1, r0, lsl #4
40000b30:	01c28000 	biceq	r8, r2, r0
40000b34:	01c20800 	biceq	r0, r2, r0, lsl #16
40000b38:	01c20000 	biceq	r0, r2, r0
40000b3c:	01c28400 	biceq	r8, r2, r0, lsl #8
40000b40:	01c28800 	biceq	r8, r2, r0, lsl #16
40000b44:	01c28c00 	biceq	r8, r2, r0, lsl #24

40000b48 <mmu_enable>:
40000b48:	e92d4070 	push	{r4, r5, r6, lr}
40000b4c:	eb00a1e6 	bl	400292ec <h3_get_dram_size>
40000b50:	e59f4108 	ldr	r4, [pc, #264]	; 40000c60 <mmu_enable+0x118>
40000b54:	e3001412 	movw	r1, #1042	; 0x412
40000b58:	e59f3104 	ldr	r3, [pc, #260]	; 40000c64 <mmu_enable+0x11c>
40000b5c:	e5843000 	str	r3, [r4]
40000b60:	e3a03001 	mov	r3, #1
40000b64:	e1812a03 	orr	r2, r1, r3, lsl #20
40000b68:	e7842103 	str	r2, [r4, r3, lsl #2]
40000b6c:	e2833001 	add	r3, r3, #1
40000b70:	e3530b01 	cmp	r3, #1024	; 0x400
40000b74:	1afffffa 	bne	40000b64 <mmu_enable+0x1c>
40000b78:	e2800b01 	add	r0, r0, #1024	; 0x400
40000b7c:	e300140e 	movw	r1, #1038	; 0x40e
40000b80:	e1500003 	cmp	r0, r3
40000b84:	8a00002a 	bhi	40000c34 <mmu_enable+0xec>
40000b88:	e3500b01 	cmp	r0, #1024	; 0x400
40000b8c:	e3001ffe 	movw	r1, #4094	; 0xffe
40000b90:	21a03000 	movcs	r3, r0
40000b94:	33a03b01 	movcc	r3, #1024	; 0x400
40000b98:	e1a02003 	mov	r2, r3
40000b9c:	e1520001 	cmp	r2, r1
40000ba0:	9a00002a 	bls	40000c50 <mmu_enable+0x108>
40000ba4:	e3002fff 	movw	r2, #4095	; 0xfff
40000ba8:	e3500a01 	cmp	r0, #4096	; 0x1000
40000bac:	30421003 	subcc	r1, r2, r3
40000bb0:	23a01000 	movcs	r1, #0
40000bb4:	e0833001 	add	r3, r3, r1
40000bb8:	e1530002 	cmp	r3, r2
40000bbc:	059f30a4 	ldreq	r3, [pc, #164]	; 40000c68 <mmu_enable+0x120>
40000bc0:	059f20a4 	ldreq	r2, [pc, #164]	; 40000c6c <mmu_enable+0x124>
40000bc4:	05832ffc 	streq	r2, [r3, #4092]	; 0xffc
40000bc8:	e59f30a0 	ldr	r3, [pc, #160]	; 40000c70 <mmu_enable+0x128>
40000bcc:	e59f20a0 	ldr	r2, [pc, #160]	; 40000c74 <mmu_enable+0x12c>
40000bd0:	e5832010 	str	r2, [r3, #16]
40000bd4:	eb00b2aa 	bl	4002d684 <clean_data_cache>
40000bd8:	f57ff05f 	dmb	sy
40000bdc:	ee113f30 	mrc	15, 0, r3, cr1, cr0, {1}
40000be0:	e3833040 	orr	r3, r3, #64	; 0x40
40000be4:	ee013f30 	mcr	15, 0, r3, cr1, cr0, {1}
40000be8:	e3a03003 	mov	r3, #3
40000bec:	ee033f10 	mcr	15, 0, r3, cr3, cr0, {0}
40000bf0:	e3a05000 	mov	r5, #0
40000bf4:	ee025f50 	mcr	15, 0, r5, cr2, cr0, {2}
40000bf8:	e3844059 	orr	r4, r4, #89	; 0x59
40000bfc:	ee024f10 	mcr	15, 0, r4, cr2, cr0, {0}
40000c00:	f57ff06f 	isb	sy
40000c04:	eb00b259 	bl	4002d570 <invalidate_data_cache_l1_only>
40000c08:	ee075f15 	mcr	15, 0, r5, cr7, cr5, {0}
40000c0c:	ee075fd5 	mcr	15, 0, r5, cr7, cr5, {6}
40000c10:	ee085f17 	mcr	15, 0, r5, cr8, cr7, {0}
40000c14:	f57ff04f 	dsb	sy
40000c18:	f57ff06f 	isb	sy
40000c1c:	ee113f10 	mrc	15, 0, r3, cr1, cr0, {0}
40000c20:	e3c33002 	bic	r3, r3, #2
40000c24:	e3833b06 	orr	r3, r3, #6144	; 0x1800
40000c28:	e3833005 	orr	r3, r3, #5
40000c2c:	ee013f10 	mcr	15, 0, r3, cr1, cr0, {0}
40000c30:	e8bd8070 	pop	{r4, r5, r6, pc}
40000c34:	e1812a03 	orr	r2, r1, r3, lsl #20
40000c38:	e7842103 	str	r2, [r4, r3, lsl #2]
40000c3c:	e7942103 	ldr	r2, [r4, r3, lsl #2]
40000c40:	e3822801 	orr	r2, r2, #65536	; 0x10000
40000c44:	e7842103 	str	r2, [r4, r3, lsl #2]
40000c48:	e2833001 	add	r3, r3, #1
40000c4c:	eaffffcb 	b	40000b80 <mmu_enable+0x38>
40000c50:	e1a0ca02 	lsl	ip, r2, #20
40000c54:	e784c102 	str	ip, [r4, r2, lsl #2]
40000c58:	e2822001 	add	r2, r2, #1
40000c5c:	eaffffce 	b	40000b9c <mmu_enable+0x54>
40000c60:	40068000 	andmi	r8, r6, r0
40000c64:	00010412 	andeq	r0, r1, r2, lsl r4
40000c68:	4006b000 	andmi	fp, r6, r0
40000c6c:	fff0040e 			; <UNDEFINED> instruction: 0xfff0040e
40000c70:	40069000 	andmi	r9, r6, r0
40000c74:	40410412 	submi	r0, r1, r2, lsl r4

40000c78 <sunxi_mmc_init>:
40000c78:	e59f20d4 	ldr	r2, [pc, #212]	; 40000d54 <sunxi_mmc_init+0xdc>
40000c7c:	e3a030b9 	mov	r3, #185	; 0xb9
40000c80:	e92d4010 	push	{r4, lr}
40000c84:	e3a01000 	mov	r1, #0
40000c88:	e1a04002 	mov	r4, r2
40000c8c:	e2533001 	subs	r3, r3, #1
40000c90:	1a00002b 	bne	40000d44 <sunxi_mmc_init+0xcc>
40000c94:	e59f10bc 	ldr	r1, [pc, #188]	; 40000d58 <sunxi_mmc_init+0xe0>
40000c98:	e3a02009 	mov	r2, #9
40000c9c:	e1a0c001 	mov	ip, r1
40000ca0:	e2522001 	subs	r2, r2, #1
40000ca4:	1a000028 	bne	40000d4c <sunxi_mmc_init+0xd4>
40000ca8:	e59f30a4 	ldr	r3, [pc, #164]	; 40000d54 <sunxi_mmc_init+0xdc>
40000cac:	e59f20a8 	ldr	r2, [pc, #168]	; 40000d5c <sunxi_mmc_init+0xe4>
40000cb0:	e4d20001 	ldrb	r0, [r2], #1
40000cb4:	e4c30001 	strb	r0, [r3], #1
40000cb8:	e3500000 	cmp	r0, #0
40000cbc:	1afffffb 	bne	40000cb0 <sunxi_mmc_init+0x38>
40000cc0:	e59f3098 	ldr	r3, [pc, #152]	; 40000d60 <sunxi_mmc_init+0xe8>
40000cc4:	e59f2098 	ldr	r2, [pc, #152]	; 40000d64 <sunxi_mmc_init+0xec>
40000cc8:	e5843098 	str	r3, [r4, #152]	; 0x98
40000ccc:	e59f3094 	ldr	r3, [pc, #148]	; 40000d68 <sunxi_mmc_init+0xf0>
40000cd0:	e584c020 	str	ip, [r4, #32]
40000cd4:	e584309c 	str	r3, [r4, #156]	; 0x9c
40000cd8:	e59f308c 	ldr	r3, [pc, #140]	; 40000d6c <sunxi_mmc_init+0xf4>
40000cdc:	e5840030 	str	r0, [r4, #48]	; 0x30
40000ce0:	e58430a0 	str	r3, [r4, #160]	; 0xa0
40000ce4:	e3a038fe 	mov	r3, #16646144	; 0xfe0000
40000ce8:	e5843024 	str	r3, [r4, #36]	; 0x24
40000cec:	e3003911 	movw	r3, #2321	; 0x911
40000cf0:	e584304c 	str	r3, [r4, #76]	; 0x4c
40000cf4:	e59f3074 	ldr	r3, [pc, #116]	; 40000d70 <sunxi_mmc_init+0xf8>
40000cf8:	e59f1054 	ldr	r1, [pc, #84]	; 40000d54 <sunxi_mmc_init+0xdc>
40000cfc:	e1c423f4 	strd	r2, [r4, #52]	; 0x34
40000d00:	e59f306c 	ldr	r3, [pc, #108]	; 40000d74 <sunxi_mmc_init+0xfc>
40000d04:	e5932060 	ldr	r2, [r3, #96]	; 0x60
40000d08:	e3822c01 	orr	r2, r2, #256	; 0x100
40000d0c:	e5832060 	str	r2, [r3, #96]	; 0x60
40000d10:	e59322c0 	ldr	r2, [r3, #704]	; 0x2c0
40000d14:	e3822c01 	orr	r2, r2, #256	; 0x100
40000d18:	e58322c0 	str	r2, [r3, #704]	; 0x2c0
40000d1c:	e3a02102 	mov	r2, #-2147483648	; 0x80000000
40000d20:	e5832088 	str	r2, [r3, #136]	; 0x88
40000d24:	e2433853 	sub	r3, r3, #5439488	; 0x530000
40000d28:	e2433cca 	sub	r3, r3, #51712	; 0xca00
40000d2c:	e58c3000 	str	r3, [ip]
40000d30:	eb00a71f 	bl	4002a9b4 <mmc_register>
40000d34:	e3500000 	cmp	r0, #0
40000d38:	a59400ac 	ldrge	r0, [r4, #172]	; 0xac
40000d3c:	b3e00000 	mvnlt	r0, #0
40000d40:	e8bd8010 	pop	{r4, pc}
40000d44:	e4c21001 	strb	r1, [r2], #1
40000d48:	eaffffcf 	b	40000c8c <sunxi_mmc_init+0x14>
40000d4c:	e4c13001 	strb	r3, [r1], #1
40000d50:	eaffffd2 	b	40000ca0 <sunxi_mmc_init+0x28>
40000d54:	4006c008 	andmi	ip, r6, r8
40000d58:	4006c000 	andmi	ip, r6, r0
40000d5c:	4003350b 	andmi	r3, r3, fp, lsl #10
40000d60:	4002988c 	andmi	r9, r2, ip, lsl #17
40000d64:	00061a80 	andeq	r1, r6, r0, lsl #21
40000d68:	40029764 	andmi	r9, r2, r4, ror #14
40000d6c:	4002984c 	andmi	r9, r2, ip, asr #16
40000d70:	017d7840 	cmneq	sp, r0, asr #16
40000d74:	01c20000 	biceq	r0, r2, r0

40000d78 <h3_codec_start()>:
40000d78:	e59f3014 	ldr	r3, [pc, #20]	; 40000d94 <h3_codec_start()+0x1c>
40000d7c:	e3a02000 	mov	r2, #0
40000d80:	e5832060 	str	r2, [r3, #96]	; 0x60
40000d84:	e3a02001 	mov	r2, #1
40000d88:	e59f3008 	ldr	r3, [pc, #8]	; 40000d98 <h3_codec_start()+0x20>
40000d8c:	e5832000 	str	r2, [r3]
40000d90:	e12fff1e 	bx	lr
40000d94:	01c22c00 	biceq	r2, r2, r0, lsl #24
40000d98:	01c02100 	biceq	r2, r0, r0, lsl #2

40000d9c <h3_hs_timer_init()>:
40000d9c:	e59f305c 	ldr	r3, [pc, #92]	; 40000e00 <h3_hs_timer_init()+0x64>
40000da0:	e5932060 	ldr	r2, [r3, #96]	; 0x60
40000da4:	e3822702 	orr	r2, r2, #524288	; 0x80000
40000da8:	e5832060 	str	r2, [r3, #96]	; 0x60
40000dac:	e59322c0 	ldr	r2, [r3, #704]	; 0x2c0
40000db0:	e3822702 	orr	r2, r2, #524288	; 0x80000
40000db4:	e58322c0 	str	r2, [r3, #704]	; 0x2c0
40000db8:	e2833701 	add	r3, r3, #262144	; 0x40000
40000dbc:	e3a02000 	mov	r2, #0
40000dc0:	e5832000 	str	r2, [r3]
40000dc4:	e5832010 	str	r2, [r3, #16]
40000dc8:	e3e02000 	mvn	r2, #0
40000dcc:	e5832014 	str	r2, [r3, #20]
40000dd0:	e3e024ff 	mvn	r2, #-16777216	; 0xff000000
40000dd4:	e5832018 	str	r2, [r3, #24]
40000dd8:	e5932010 	ldr	r2, [r3, #16]
40000ddc:	e3822010 	orr	r2, r2, #16
40000de0:	e5832010 	str	r2, [r3, #16]
40000de4:	e5932010 	ldr	r2, [r3, #16]
40000de8:	e3822002 	orr	r2, r2, #2
40000dec:	e5832010 	str	r2, [r3, #16]
40000df0:	e5932010 	ldr	r2, [r3, #16]
40000df4:	e3822001 	orr	r2, r2, #1
40000df8:	e5832010 	str	r2, [r3, #16]
40000dfc:	e12fff1e 	bx	lr
40000e00:	01c20000 	biceq	r0, r2, r0

40000e04 <h3_i2c_begin()>:
40000e04:	e92d4010 	push	{r4, lr}
40000e08:	e3a01002 	mov	r1, #2
40000e0c:	e59f4078 	ldr	r4, [pc, #120]	; 40000e8c <h3_i2c_begin()+0x88>
40000e10:	e3a0000b 	mov	r0, #11
40000e14:	eb00a158 	bl	4002937c <h3_gpio_fsel>
40000e18:	e3a01002 	mov	r1, #2
40000e1c:	e3a0000c 	mov	r0, #12
40000e20:	eb00a155 	bl	4002937c <h3_gpio_fsel>
40000e24:	e59432d8 	ldr	r3, [r4, #728]	; 0x2d8
40000e28:	e3a01000 	mov	r1, #0
40000e2c:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40000e30:	e3833001 	orr	r3, r3, #1
40000e34:	e58432d8 	str	r3, [r4, #728]	; 0x2d8
40000e38:	eb00ab6f 	bl	4002bbfc <udelay(unsigned long, unsigned long)>
40000e3c:	e594306c 	ldr	r3, [r4, #108]	; 0x6c
40000e40:	e3a01000 	mov	r1, #0
40000e44:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40000e48:	e3c33001 	bic	r3, r3, #1
40000e4c:	e584306c 	str	r3, [r4, #108]	; 0x6c
40000e50:	eb00ab69 	bl	4002bbfc <udelay(unsigned long, unsigned long)>
40000e54:	e594306c 	ldr	r3, [r4, #108]	; 0x6c
40000e58:	e3a02040 	mov	r2, #64	; 0x40
40000e5c:	e3833001 	orr	r3, r3, #1
40000e60:	e584306c 	str	r3, [r4, #108]	; 0x6c
40000e64:	e59f3024 	ldr	r3, [pc, #36]	; 40000e90 <h3_i2c_begin()+0x8c>
40000e68:	e59f4024 	ldr	r4, [pc, #36]	; 40000e94 <h3_i2c_begin()+0x90>
40000e6c:	e583200c 	str	r2, [r3, #12]
40000e70:	e3a02000 	mov	r2, #0
40000e74:	e583201c 	str	r2, [r3, #28]
40000e78:	e1a00004 	mov	r0, r4
40000e7c:	eb00a93d 	bl	4002b378 <_set_clock(unsigned long, unsigned long) [clone .constprop.0]>
40000e80:	e59f3010 	ldr	r3, [pc, #16]	; 40000e98 <h3_i2c_begin()+0x94>
40000e84:	e5834000 	str	r4, [r3]
40000e88:	e8bd8010 	pop	{r4, pc}
40000e8c:	01c20000 	biceq	r0, r2, r0
40000e90:	01c2ac00 	biceq	sl, r2, r0, lsl #24
40000e94:	00061a80 	andeq	r1, r6, r0, lsl #21
40000e98:	4006c0e0 	andmi	ip, r6, r0, ror #1

40000e9c <h3_spi_end()>:
40000e9c:	e59f3074 	ldr	r3, [pc, #116]	; 40000f18 <h3_spi_end()+0x7c>
40000ea0:	e3a01007 	mov	r1, #7
40000ea4:	e92d4010 	push	{r4, lr}
40000ea8:	e3a0000d 	mov	r0, #13
40000eac:	e5932004 	ldr	r2, [r3, #4]
40000eb0:	e3822102 	orr	r2, r2, #-2147483648	; 0x80000000
40000eb4:	e5832004 	str	r2, [r3, #4]
40000eb8:	e5932004 	ldr	r2, [r3, #4]
40000ebc:	e3c22001 	bic	r2, r2, #1
40000ec0:	e5832004 	str	r2, [r3, #4]
40000ec4:	e2433a49 	sub	r3, r3, #299008	; 0x49000
40000ec8:	e5932060 	ldr	r2, [r3, #96]	; 0x60
40000ecc:	e3c22602 	bic	r2, r2, #2097152	; 0x200000
40000ed0:	e5832060 	str	r2, [r3, #96]	; 0x60
40000ed4:	e59322c0 	ldr	r2, [r3, #704]	; 0x2c0
40000ed8:	e3c22602 	bic	r2, r2, #2097152	; 0x200000
40000edc:	e58322c0 	str	r2, [r3, #704]	; 0x2c0
40000ee0:	e59320a4 	ldr	r2, [r3, #164]	; 0xa4
40000ee4:	e3c22102 	bic	r2, r2, #-2147483648	; 0x80000000
40000ee8:	e58320a4 	str	r2, [r3, #164]	; 0xa4
40000eec:	eb00a122 	bl	4002937c <h3_gpio_fsel>
40000ef0:	e3a01007 	mov	r1, #7
40000ef4:	e3a0000e 	mov	r0, #14
40000ef8:	eb00a11f 	bl	4002937c <h3_gpio_fsel>
40000efc:	e3a01007 	mov	r1, #7
40000f00:	e3a0000f 	mov	r0, #15
40000f04:	eb00a11c 	bl	4002937c <h3_gpio_fsel>
40000f08:	e8bd4010 	pop	{r4, lr}
40000f0c:	e3a01007 	mov	r1, #7
40000f10:	e3a00010 	mov	r0, #16
40000f14:	ea00a118 	b	4002937c <h3_gpio_fsel>
40000f18:	01c69000 	biceq	r9, r6, r0

40000f1c <h3_spi_begin()>:
40000f1c:	e92d4010 	push	{r4, lr}
40000f20:	e3a01002 	mov	r1, #2
40000f24:	e59f40c0 	ldr	r4, [pc, #192]	; 40000fec <h3_spi_begin()+0xd0>
40000f28:	e3a0000d 	mov	r0, #13
40000f2c:	eb00a112 	bl	4002937c <h3_gpio_fsel>
40000f30:	e3a01002 	mov	r1, #2
40000f34:	e3a0000e 	mov	r0, #14
40000f38:	eb00a10f 	bl	4002937c <h3_gpio_fsel>
40000f3c:	e3a01002 	mov	r1, #2
40000f40:	e3a0000f 	mov	r0, #15
40000f44:	eb00a10c 	bl	4002937c <h3_gpio_fsel>
40000f48:	e3a01002 	mov	r1, #2
40000f4c:	e3a00010 	mov	r0, #16
40000f50:	eb00a109 	bl	4002937c <h3_gpio_fsel>
40000f54:	e59432c0 	ldr	r3, [r4, #704]	; 0x2c0
40000f58:	e3a01000 	mov	r1, #0
40000f5c:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40000f60:	e3833602 	orr	r3, r3, #2097152	; 0x200000
40000f64:	e58432c0 	str	r3, [r4, #704]	; 0x2c0
40000f68:	eb00ab23 	bl	4002bbfc <udelay(unsigned long, unsigned long)>
40000f6c:	e5943060 	ldr	r3, [r4, #96]	; 0x60
40000f70:	e3a01000 	mov	r1, #0
40000f74:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40000f78:	e3c33602 	bic	r3, r3, #2097152	; 0x200000
40000f7c:	e5843060 	str	r3, [r4, #96]	; 0x60
40000f80:	eb00ab1d 	bl	4002bbfc <udelay(unsigned long, unsigned long)>
40000f84:	e5943060 	ldr	r3, [r4, #96]	; 0x60
40000f88:	e3a00001 	mov	r0, #1
40000f8c:	e59f105c 	ldr	r1, [pc, #92]	; 40000ff0 <h3_spi_begin()+0xd4>
40000f90:	e3833602 	orr	r3, r3, #2097152	; 0x200000
40000f94:	e5843060 	str	r3, [r4, #96]	; 0x60
40000f98:	e3a03481 	mov	r3, #-2130706432	; 0x81000000
40000f9c:	e58430a4 	str	r3, [r4, #164]	; 0xa4
40000fa0:	e3a04000 	mov	r4, #0
40000fa4:	e5913004 	ldr	r3, [r1, #4]
40000fa8:	e3833102 	orr	r3, r3, #-2147483648	; 0x80000000
40000fac:	e5813004 	str	r3, [r1, #4]
40000fb0:	e5913004 	ldr	r3, [r1, #4]
40000fb4:	e3833003 	orr	r3, r3, #3
40000fb8:	e5813004 	str	r3, [r1, #4]
40000fbc:	e5814010 	str	r4, [r1, #16]
40000fc0:	eb00aa1b 	bl	4002b834 <h3_spi_setBitOrder(H3_SPI_BIT_ORDER)>
40000fc4:	e1a00004 	mov	r0, r4
40000fc8:	eb00aa21 	bl	4002b854 <h3_spi_setDataMode(unsigned char)>
40000fcc:	e1a00004 	mov	r0, r4
40000fd0:	eb00aa27 	bl	4002b874 <h3_spi_chipSelect(unsigned char)>
40000fd4:	e5913008 	ldr	r3, [r1, #8]
40000fd8:	e8bd4010 	pop	{r4, lr}
40000fdc:	e59f0010 	ldr	r0, [pc, #16]	; 40000ff4 <h3_spi_begin()+0xd8>
40000fe0:	e3833004 	orr	r3, r3, #4
40000fe4:	e5813008 	str	r3, [r1, #8]
40000fe8:	ea00aa07 	b	4002b80c <h3_spi_set_speed_hz(unsigned long)>
40000fec:	01c20000 	biceq	r0, r2, r0
40000ff0:	01c69000 	biceq	r9, r6, r0
40000ff4:	000f4240 	andeq	r4, pc, r0, asr #4

40000ff8 <h3_thermal_init()>:
40000ff8:	e92d4013 	push	{r0, r1, r4, lr}
40000ffc:	e3a01000 	mov	r1, #0
40001000:	e59f40bc 	ldr	r4, [pc, #188]	; 400010c4 <h3_thermal_init()+0xcc>
40001004:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40001008:	e5943074 	ldr	r3, [r4, #116]	; 0x74
4000100c:	e3c3340f 	bic	r3, r3, #251658240	; 0xf000000
40001010:	e3c3300f 	bic	r3, r3, #15
40001014:	e383310e 	orr	r3, r3, #-2147483645	; 0x80000003
40001018:	e5843074 	str	r3, [r4, #116]	; 0x74
4000101c:	e59432d0 	ldr	r3, [r4, #720]	; 0x2d0
40001020:	e3833c01 	orr	r3, r3, #256	; 0x100
40001024:	e58432d0 	str	r3, [r4, #720]	; 0x2d0
40001028:	eb00aaf3 	bl	4002bbfc <udelay(unsigned long, unsigned long)>
4000102c:	e5943068 	ldr	r3, [r4, #104]	; 0x68
40001030:	e3a01000 	mov	r1, #0
40001034:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40001038:	e3c33c01 	bic	r3, r3, #256	; 0x100
4000103c:	e5843068 	str	r3, [r4, #104]	; 0x68
40001040:	eb00aaed 	bl	4002bbfc <udelay(unsigned long, unsigned long)>
40001044:	e5943068 	ldr	r3, [r4, #104]	; 0x68
40001048:	e28d0004 	add	r0, sp, #4
4000104c:	e3833c01 	orr	r3, r3, #256	; 0x100
40001050:	e5843068 	str	r3, [r4, #104]	; 0x68
40001054:	eb00ac23 	bl	4002c0e8 <h3_sid_read_tscalib>
40001058:	e59d2004 	ldr	r2, [sp, #4]
4000105c:	e3a0005a 	mov	r0, #90	; 0x5a
40001060:	e59f3060 	ldr	r3, [pc, #96]	; 400010c8 <h3_thermal_init()+0xd0>
40001064:	e7eb2052 	ubfx	r2, r2, #0, #12
40001068:	e58d2004 	str	r2, [sp, #4]
4000106c:	e3520000 	cmp	r2, #0
40001070:	15832074 	strne	r2, [r3, #116]	; 0x74
40001074:	e3a02802 	mov	r2, #131072	; 0x20000
40001078:	e5832004 	str	r2, [r3, #4]
4000107c:	e3a0203f 	mov	r2, #63	; 0x3f
40001080:	e5832000 	str	r2, [r3]
40001084:	e3a0283f 	mov	r2, #4128768	; 0x3f0000
40001088:	e5832040 	str	r2, [r3, #64]	; 0x40
4000108c:	e3a02006 	mov	r2, #6
40001090:	e5832070 	str	r2, [r3, #112]	; 0x70
40001094:	e5932048 	ldr	r2, [r3, #72]	; 0x48
40001098:	e5832048 	str	r2, [r3, #72]	; 0x48
4000109c:	e59f2028 	ldr	r2, [pc, #40]	; 400010cc <h3_thermal_init()+0xd4>
400010a0:	e5832044 	str	r2, [r3, #68]	; 0x44
400010a4:	e5932040 	ldr	r2, [r3, #64]	; 0x40
400010a8:	e3822001 	orr	r2, r2, #1
400010ac:	e5832040 	str	r2, [r3, #64]	; 0x40
400010b0:	eb00aac2 	bl	4002bbc0 <h3_thermal_setalarm(int)>
400010b4:	e3a00069 	mov	r0, #105	; 0x69
400010b8:	eb00aab1 	bl	4002bb84 <h3_thermal_setshut(int)>
400010bc:	e28dd008 	add	sp, sp, #8
400010c0:	e8bd8010 	pop	{r4, pc}
400010c4:	01c20000 	biceq	r0, r2, r0
400010c8:	01c25000 	biceq	r5, r2, r0
400010cc:	00191111 	andseq	r1, r9, r1, lsl r1

400010d0 <h3_timer_avs_init()>:
400010d0:	e59f202c 	ldr	r2, [pc, #44]	; 40001104 <h3_timer_avs_init()+0x34>
400010d4:	e5923144 	ldr	r3, [r2, #324]	; 0x144
400010d8:	e3833102 	orr	r3, r3, #-2147483648	; 0x80000000
400010dc:	e5823144 	str	r3, [r2, #324]	; 0x144
400010e0:	e3a02003 	mov	r2, #3
400010e4:	e59f301c 	ldr	r3, [pc, #28]	; 40001108 <h3_timer_avs_init()+0x38>
400010e8:	e5832080 	str	r2, [r3, #128]	; 0x80
400010ec:	e59f2018 	ldr	r2, [pc, #24]	; 4000110c <h3_timer_avs_init()+0x3c>
400010f0:	e583208c 	str	r2, [r3, #140]	; 0x8c
400010f4:	e3a02000 	mov	r2, #0
400010f8:	e5832084 	str	r2, [r3, #132]	; 0x84
400010fc:	e5832088 	str	r2, [r3, #136]	; 0x88
40001100:	e12fff1e 	bx	lr
40001104:	01c20000 	biceq	r0, r2, r0
40001108:	01c20c00 	biceq	r0, r2, r0, lsl #24
4000110c:	000c2ee0 	andeq	r2, ip, r0, ror #29

40001110 <h3_usb_end()>:
40001110:	e59f3020 	ldr	r3, [pc, #32]	; 40001138 <h3_usb_end()+0x28>
40001114:	e5932060 	ldr	r2, [r3, #96]	; 0x60
40001118:	e7f62052 	ubfx	r2, r2, #0, #23
4000111c:	e5832060 	str	r2, [r3, #96]	; 0x60
40001120:	e59322c0 	ldr	r2, [r3, #704]	; 0x2c0
40001124:	e7f62052 	ubfx	r2, r2, #0, #23
40001128:	e58322c0 	str	r2, [r3, #704]	; 0x2c0
4000112c:	e3a02000 	mov	r2, #0
40001130:	e58320cc 	str	r2, [r3, #204]	; 0xcc
40001134:	e12fff1e 	bx	lr
40001138:	01c20000 	biceq	r0, r2, r0

4000113c <irq_handler_init()>:
4000113c:	f1080080 	cpsie	i
40001140:	f57ff05f 	dmb	sy
40001144:	e12fff1e 	bx	lr

40001148 <uart0_init>:
40001148:	e3a03001 	mov	r3, #1
4000114c:	e92d4007 	push	{r0, r1, r2, lr}
40001150:	e3a02008 	mov	r2, #8
40001154:	e58d3000 	str	r3, [sp]
40001158:	e3a03000 	mov	r3, #0
4000115c:	e59f1020 	ldr	r1, [pc, #32]	; 40001184 <uart0_init+0x3c>
40001160:	e59f0020 	ldr	r0, [pc, #32]	; 40001188 <uart0_init+0x40>
40001164:	ebfffe10 	bl	400009ac <h3_uart_begin>
40001168:	e59f3018 	ldr	r3, [pc, #24]	; 40001188 <uart0_init+0x40>
4000116c:	e593207c 	ldr	r2, [r3, #124]	; 0x7c
40001170:	e3120001 	tst	r2, #1
40001174:	15932000 	ldrne	r2, [r3]
40001178:	1afffffb 	bne	4000116c <uart0_init+0x24>
4000117c:	e28dd00c 	add	sp, sp, #12
40001180:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40001184:	0001c200 	andeq	ip, r1, r0, lsl #4
40001188:	01c28000 	biceq	r8, r2, r0

4000118c <GIC_SetPriority>:
4000118c:	e20030fc 	and	r3, r0, #252	; 0xfc
40001190:	e2000003 	and	r0, r0, #3
40001194:	e2833772 	add	r3, r3, #29884416	; 0x1c80000
40001198:	e3a0c0ff 	mov	ip, #255	; 0xff
4000119c:	e1a00180 	lsl	r0, r0, #3
400011a0:	e2833a01 	add	r3, r3, #4096	; 0x1000
400011a4:	e5932400 	ldr	r2, [r3, #1024]	; 0x400
400011a8:	e1c2201c 	bic	r2, r2, ip, lsl r0
400011ac:	e1820011 	orr	r0, r2, r1, lsl r0
400011b0:	e5830400 	str	r0, [r3, #1024]	; 0x400
400011b4:	e12fff1e 	bx	lr

400011b8 <GIC_SetConfiguration.constprop.0>:
400011b8:	e1a03220 	lsr	r3, r0, #4
400011bc:	e3a01003 	mov	r1, #3
400011c0:	e1a00080 	lsl	r0, r0, #1
400011c4:	e1a03103 	lsl	r3, r3, #2
400011c8:	e200001e 	and	r0, r0, #30
400011cc:	e2833772 	add	r3, r3, #29884416	; 0x1c80000
400011d0:	e2833a01 	add	r3, r3, #4096	; 0x1000
400011d4:	e5932c00 	ldr	r2, [r3, #3072]	; 0xc00
400011d8:	e1c20011 	bic	r0, r2, r1, lsl r0
400011dc:	e5830c00 	str	r0, [r3, #3072]	; 0xc00
400011e0:	e12fff1e 	bx	lr

400011e4 <gic_init()>:
400011e4:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
400011e8:	e3a010ff 	mov	r1, #255	; 0xff
400011ec:	e59f5140 	ldr	r5, [pc, #320]	; 40001334 <gic_init()+0x150>
400011f0:	e3a00000 	mov	r0, #0
400011f4:	e3a07020 	mov	r7, #32
400011f8:	e3a0a001 	mov	sl, #1
400011fc:	e5953000 	ldr	r3, [r5]
40001200:	e1a09001 	mov	r9, r1
40001204:	e3c33001 	bic	r3, r3, #1
40001208:	e5853000 	str	r3, [r5]
4000120c:	e5956004 	ldr	r6, [r5, #4]
40001210:	ebffffdd 	bl	4000118c <GIC_SetPriority>
40001214:	e5958400 	ldr	r8, [r5, #1024]	; 0x400
40001218:	e206601f 	and	r6, r6, #31
4000121c:	e7e680d8 	ubfx	r8, r8, #1, #7
40001220:	e2866001 	add	r6, r6, #1
40001224:	e1a06286 	lsl	r6, r6, #5
40001228:	e1560007 	cmp	r6, r7
4000122c:	0a000015 	beq	40001288 <gic_init()+0xa4>
40001230:	e7e232d7 	ubfx	r3, r7, #5, #3
40001234:	e207201f 	and	r2, r7, #31
40001238:	e2833060 	add	r3, r3, #96	; 0x60
4000123c:	e6ef4077 	uxtb	r4, r7
40001240:	e1a0221a 	lsl	r2, sl, r2
40001244:	e1a00004 	mov	r0, r4
40001248:	e7852103 	str	r2, [r5, r3, lsl #2]
4000124c:	e2877001 	add	r7, r7, #1
40001250:	ebffffd8 	bl	400011b8 <GIC_SetConfiguration.constprop.0>
40001254:	e1a00004 	mov	r0, r4
40001258:	e1a01008 	mov	r1, r8
4000125c:	ebffffca 	bl	4000118c <GIC_SetPriority>
40001260:	e20430fc 	and	r3, r4, #252	; 0xfc
40001264:	e2044003 	and	r4, r4, #3
40001268:	e2833772 	add	r3, r3, #29884416	; 0x1c80000
4000126c:	e1a04184 	lsl	r4, r4, #3
40001270:	e2833a01 	add	r3, r3, #4096	; 0x1000
40001274:	e5932800 	ldr	r2, [r3, #2048]	; 0x800
40001278:	e1c22419 	bic	r2, r2, r9, lsl r4
4000127c:	e182441a 	orr	r4, r2, sl, lsl r4
40001280:	e5834800 	str	r4, [r3, #2048]	; 0x800
40001284:	eaffffe7 	b	40001228 <gic_init()+0x44>
40001288:	e5953000 	ldr	r3, [r5]
4000128c:	e3a010ff 	mov	r1, #255	; 0xff
40001290:	e59f20a0 	ldr	r2, [pc, #160]	; 40001338 <gic_init()+0x154>
40001294:	e3a00000 	mov	r0, #0
40001298:	e59f6094 	ldr	r6, [pc, #148]	; 40001334 <gic_init()+0x150>
4000129c:	e3833001 	orr	r3, r3, #1
400012a0:	e5853000 	str	r3, [r5]
400012a4:	e3a04000 	mov	r4, #0
400012a8:	e5923000 	ldr	r3, [r2]
400012ac:	e3a07001 	mov	r7, #1
400012b0:	e3c33001 	bic	r3, r3, #1
400012b4:	e5823000 	str	r3, [r2]
400012b8:	ebffffb3 	bl	4000118c <GIC_SetPriority>
400012bc:	e5955400 	ldr	r5, [r5, #1024]	; 0x400
400012c0:	e7e650d5 	ubfx	r5, r5, #1, #7
400012c4:	e1a03417 	lsl	r3, r7, r4
400012c8:	e6ef0074 	uxtb	r0, r4
400012cc:	e5863180 	str	r3, [r6, #384]	; 0x180
400012d0:	e1a01005 	mov	r1, r5
400012d4:	e2844001 	add	r4, r4, #1
400012d8:	ebffffab 	bl	4000118c <GIC_SetPriority>
400012dc:	e3540020 	cmp	r4, #32
400012e0:	1a00000e 	bne	40001320 <gic_init()+0x13c>
400012e4:	e59f304c 	ldr	r3, [pc, #76]	; 40001338 <gic_init()+0x154>
400012e8:	e5932000 	ldr	r2, [r3]
400012ec:	e3822001 	orr	r2, r2, #1
400012f0:	e5832000 	str	r2, [r3]
400012f4:	e3a02000 	mov	r2, #0
400012f8:	e5832008 	str	r2, [r3, #8]
400012fc:	e3a020ff 	mov	r2, #255	; 0xff
40001300:	e5832004 	str	r2, [r3, #4]
40001304:	e3a02003 	mov	r2, #3
40001308:	e5862000 	str	r2, [r6]
4000130c:	e3e02000 	mvn	r2, #0
40001310:	e5832004 	str	r2, [r3, #4]
40001314:	e3a0200b 	mov	r2, #11
40001318:	e5832000 	str	r2, [r3]
4000131c:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
40001320:	e354000f 	cmp	r4, #15
40001324:	e6ef0074 	uxtb	r0, r4
40001328:	9affffe5 	bls	400012c4 <gic_init()+0xe0>
4000132c:	ebffffa1 	bl	400011b8 <GIC_SetConfiguration.constprop.0>
40001330:	eaffffe3 	b	400012c4 <gic_init()+0xe0>
40001334:	01c81000 	biceq	r1, r8, r0
40001338:	01c82000 	biceq	r2, r8, r0

4000133c <emac_init()>:
4000133c:	e92d407f 	push	{r0, r1, r2, r3, r4, r5, r6, lr}
40001340:	e28d0008 	add	r0, sp, #8
40001344:	eb00ab50 	bl	4002c08c <h3_sid_get_rootkey>
40001348:	e3a03002 	mov	r3, #2
4000134c:	e1a0000d 	mov	r0, sp
40001350:	e5cd3000 	strb	r3, [sp]
40001354:	e5dd300b 	ldrb	r3, [sp, #11]
40001358:	e5cd3001 	strb	r3, [sp, #1]
4000135c:	e5dd3014 	ldrb	r3, [sp, #20]
40001360:	e5cd3002 	strb	r3, [sp, #2]
40001364:	e5dd3015 	ldrb	r3, [sp, #21]
40001368:	e5cd3003 	strb	r3, [sp, #3]
4000136c:	e5dd3016 	ldrb	r3, [sp, #22]
40001370:	e5cd3004 	strb	r3, [sp, #4]
40001374:	e5dd3017 	ldrb	r3, [sp, #23]
40001378:	e5cd3005 	strb	r3, [sp, #5]
4000137c:	eb00ab32 	bl	4002c04c <_write_hwaddr(unsigned char const*)>
40001380:	e28dd01c 	add	sp, sp, #28
40001384:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

40001388 <net::igmp_handle(t_igmp*)>:
40001388:	e5d0300e 	ldrb	r3, [r0, #14]
4000138c:	e3530045 	cmp	r3, #69	; 0x45
40001390:	112fff1e 	bxne	lr
40001394:	e5d03022 	ldrb	r3, [r0, #34]	; 0x22
40001398:	e3530011 	cmp	r3, #17
4000139c:	112fff1e 	bxne	lr
400013a0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400013a4:	e3a030e0 	mov	r3, #224	; 0xe0
400013a8:	e3403100 	movt	r3, #256	; 0x100
400013ac:	e24dd008 	sub	sp, sp, #8
400013b0:	e280801e 	add	r8, r0, #30
400013b4:	e28dc001 	add	ip, sp, #1
400013b8:	e58d3000 	str	r3, [sp]
400013bc:	e2804022 	add	r4, r0, #34	; 0x22
400013c0:	e1a03008 	mov	r3, r8
400013c4:	e3a020e0 	mov	r2, #224	; 0xe0
400013c8:	ea000002 	b	400013d8 <net::igmp_handle(t_igmp*)+0x50>
400013cc:	e1530004 	cmp	r3, r4
400013d0:	0a00002d 	beq	4000148c <net::igmp_handle(t_igmp*)+0x104>
400013d4:	e4dc2001 	ldrb	r2, [ip], #1
400013d8:	e4d31001 	ldrb	r1, [r3], #1
400013dc:	e1510002 	cmp	r1, r2
400013e0:	0afffff9 	beq	400013cc <net::igmp_handle(t_igmp*)+0x44>
400013e4:	e3a06000 	mov	r6, #0
400013e8:	e59f30a4 	ldr	r3, [pc, #164]	; 40001494 <net::igmp_handle(t_igmp*)+0x10c>
400013ec:	e3a07001 	mov	r7, #1
400013f0:	e2835e12 	add	r5, r3, #288	; 0x120
400013f4:	ea000005 	b	40001410 <net::igmp_handle(t_igmp*)+0x88>
400013f8:	e1a020a2 	lsr	r2, r2, #1
400013fc:	e2822001 	add	r2, r2, #1
40001400:	e14323b2 	strh	r2, [r3, #-50]	; 0xffffffce
40001404:	e2833008 	add	r3, r3, #8
40001408:	e1530005 	cmp	r3, r5
4000140c:	0a000012 	beq	4000145c <net::igmp_handle(t_igmp*)+0xd4>
40001410:	e5132036 	ldr	r2, [r3, #-54]	; 0xffffffca
40001414:	e3520000 	cmp	r2, #0
40001418:	0afffff9 	beq	40001404 <net::igmp_handle(t_igmp*)+0x7c>
4000141c:	e58d2004 	str	r2, [sp, #4]
40001420:	e3560000 	cmp	r6, #0
40001424:	0a00000e 	beq	40001464 <net::igmp_handle(t_igmp*)+0xdc>
40001428:	e5532030 	ldrb	r2, [r3, #-48]	; 0xffffffd0
4000142c:	f5d3f000 	pld	[r3]
40001430:	e3520001 	cmp	r2, #1
40001434:	15437030 	strbne	r7, [r3, #-48]	; 0xffffffd0
40001438:	15d02023 	ldrbne	r2, [r0, #35]	; 0x23
4000143c:	1affffed 	bne	400013f8 <net::igmp_handle(t_igmp*)+0x70>
40001440:	e5d02023 	ldrb	r2, [r0, #35]	; 0x23
40001444:	e15313b2 	ldrh	r1, [r3, #-50]	; 0xffffffce
40001448:	e1520001 	cmp	r2, r1
4000144c:	baffffe9 	blt	400013f8 <net::igmp_handle(t_igmp*)+0x70>
40001450:	e2833008 	add	r3, r3, #8
40001454:	e1530005 	cmp	r3, r5
40001458:	1affffec 	bne	40001410 <net::igmp_handle(t_igmp*)+0x88>
4000145c:	e28dd008 	add	sp, sp, #8
40001460:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40001464:	e28d1004 	add	r1, sp, #4
40001468:	e1a02008 	mov	r2, r8
4000146c:	ea000001 	b	40001478 <net::igmp_handle(t_igmp*)+0xf0>
40001470:	e1520004 	cmp	r2, r4
40001474:	0affffeb 	beq	40001428 <net::igmp_handle(t_igmp*)+0xa0>
40001478:	e4d2e001 	ldrb	lr, [r2], #1
4000147c:	e4d1c001 	ldrb	ip, [r1], #1
40001480:	e15e000c 	cmp	lr, ip
40001484:	0afffff9 	beq	40001470 <net::igmp_handle(t_igmp*)+0xe8>
40001488:	eaffffdd 	b	40001404 <net::igmp_handle(t_igmp*)+0x7c>
4000148c:	e3a06001 	mov	r6, #1
40001490:	eaffffd4 	b	400013e8 <net::igmp_handle(t_igmp*)+0x60>
40001494:	4005a60a 	andmi	sl, r5, sl, lsl #12

40001498 <net::net_handle()>:
40001498:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4000149c:	e24dd00c 	sub	sp, sp, #12
400014a0:	e28d0004 	add	r0, sp, #4
400014a4:	eb000390 	bl	400022ec <emac_eth_recv(unsigned char**)>
400014a8:	e3500000 	cmp	r0, #0
400014ac:	1a000001 	bne	400014b8 <net::net_handle()+0x20>
400014b0:	e28dd00c 	add	sp, sp, #12
400014b4:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
400014b8:	e59d0004 	ldr	r0, [sp, #4]
400014bc:	e1d030bc 	ldrh	r3, [r0, #12]
400014c0:	e3530008 	cmp	r3, #8
400014c4:	0a000004 	beq	400014dc <net::net_handle()+0x44>
400014c8:	e3002608 	movw	r2, #1544	; 0x608
400014cc:	e1530002 	cmp	r3, r2
400014d0:	0a000025 	beq	4000156c <net::net_handle()+0xd4>
400014d4:	eb0085ef 	bl	40022c98 <emac_free_pkt()>
400014d8:	eafffff4 	b	400014b0 <net::net_handle()+0x18>
400014dc:	e5d0200e 	ldrb	r2, [r0, #14]
400014e0:	e5d03017 	ldrb	r3, [r0, #23]
400014e4:	e3520045 	cmp	r2, #69	; 0x45
400014e8:	1a000014 	bne	40001540 <net::net_handle()+0xa8>
400014ec:	e2433001 	sub	r3, r3, #1
400014f0:	e3530010 	cmp	r3, #16
400014f4:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
400014f8:	eafffff5 	b	400014d4 <net::net_handle()+0x3c>
400014fc:	40001550 	andmi	r1, r0, r0, asr r5
40001500:	40001548 	andmi	r1, r0, r8, asr #10
40001504:	400014d4 	ldrdmi	r1, [r0], -r4
40001508:	400014d4 	ldrdmi	r1, [r0], -r4
4000150c:	400014d4 	ldrdmi	r1, [r0], -r4
40001510:	40001560 	andmi	r1, r0, r0, ror #10
40001514:	400014d4 	ldrdmi	r1, [r0], -r4
40001518:	400014d4 	ldrdmi	r1, [r0], -r4
4000151c:	400014d4 	ldrdmi	r1, [r0], -r4
40001520:	400014d4 	ldrdmi	r1, [r0], -r4
40001524:	400014d4 	ldrdmi	r1, [r0], -r4
40001528:	400014d4 	ldrdmi	r1, [r0], -r4
4000152c:	400014d4 	ldrdmi	r1, [r0], -r4
40001530:	400014d4 	ldrdmi	r1, [r0], -r4
40001534:	400014d4 	ldrdmi	r1, [r0], -r4
40001538:	400014d4 	ldrdmi	r1, [r0], -r4
4000153c:	40001558 	andmi	r1, r0, r8, asr r5
40001540:	e3530002 	cmp	r3, #2
40001544:	1affffe2 	bne	400014d4 <net::net_handle()+0x3c>
40001548:	ebffff8e 	bl	40001388 <net::igmp_handle(t_igmp*)>
4000154c:	eaffffe0 	b	400014d4 <net::net_handle()+0x3c>
40001550:	eb000420 	bl	400025d8 <net::icmp_handle(t_icmp*)>
40001554:	eaffffde 	b	400014d4 <net::net_handle()+0x3c>
40001558:	eb0002de 	bl	400020d8 <net::udp_handle(t_udp*)>
4000155c:	eaffffd3 	b	400014b0 <net::net_handle()+0x18>
40001560:	eb000059 	bl	400016cc <net::tcp_handle(t_tcp*)>
40001564:	eb000002 	bl	40001574 <net::tcp_run()>
40001568:	eaffffd9 	b	400014d4 <net::net_handle()+0x3c>
4000156c:	eb000377 	bl	40002350 <net::arp_handle(t_arp*)>
40001570:	eaffffd7 	b	400014d4 <net::net_handle()+0x3c>

40001574 <net::tcp_run()>:
40001574:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40001578:	e30a5d5c 	movw	r5, #44380	; 0xad5c
4000157c:	e3445005 	movt	r5, #16389	; 0x4005
40001580:	e24dd010 	sub	sp, sp, #16
40001584:	e3a08011 	mov	r8, #17
40001588:	e1a04005 	mov	r4, r5
4000158c:	e2856c05 	add	r6, r5, #1280	; 0x500
40001590:	e3a07009 	mov	r7, #9
40001594:	ea000002 	b	400015a4 <net::tcp_run()+0x30>
40001598:	e2844050 	add	r4, r4, #80	; 0x50
4000159c:	e1540006 	cmp	r4, r6
400015a0:	0a000011 	beq	400015ec <net::tcp_run()+0x78>
400015a4:	e5d4304c 	ldrb	r3, [r4, #76]	; 0x4c
400015a8:	e3530007 	cmp	r3, #7
400015ac:	1afffff9 	bne	40001598 <net::tcp_run()+0x24>
400015b0:	e5943040 	ldr	r3, [r4, #64]	; 0x40
400015b4:	e1a00004 	mov	r0, r4
400015b8:	e5942018 	ldr	r2, [r4, #24]
400015bc:	e28d1004 	add	r1, sp, #4
400015c0:	e58d3008 	str	r3, [sp, #8]
400015c4:	e2844050 	add	r4, r4, #80	; 0x50
400015c8:	e5cd800c 	strb	r8, [sp, #12]
400015cc:	e58d2004 	str	r2, [sp, #4]
400015d0:	eb008119 	bl	40021a3c <net::send_package(net::tcb const*, net::SendInfo const&)>
400015d4:	e5143038 	ldr	r3, [r4, #-56]	; 0xffffffc8
400015d8:	e5447004 	strb	r7, [r4, #-4]
400015dc:	e2833001 	add	r3, r3, #1
400015e0:	e5043038 	str	r3, [r4, #-56]	; 0xffffffc8
400015e4:	e1540006 	cmp	r4, r6
400015e8:	1affffed 	bne	400015a4 <net::tcp_run()+0x30>
400015ec:	e59f60d4 	ldr	r6, [pc, #212]	; 400016c8 <net::tcp_run()+0x154>
400015f0:	e5d62b58 	ldrb	r2, [r6, #2904]	; 0xb58
400015f4:	e5963b54 	ldr	r3, [r6, #2900]	; 0xb54
400015f8:	e3520000 	cmp	r2, #0
400015fc:	0a00002c 	beq	400016b4 <net::tcp_run()+0x140>
40001600:	e5964024 	ldr	r4, [r6, #36]	; 0x24
40001604:	e3002594 	movw	r2, #1428	; 0x594
40001608:	e0030392 	mul	r3, r2, r3
4000160c:	e594101c 	ldr	r1, [r4, #28]
40001610:	e0862003 	add	r2, r6, r3
40001614:	e59275b4 	ldr	r7, [r2, #1460]	; 0x5b4
40001618:	e1570001 	cmp	r7, r1
4000161c:	8a000027 	bhi	400016c0 <net::tcp_run()+0x14c>
40001620:	e5d215b8 	ldrb	r1, [r2, #1464]	; 0x5b8
40001624:	e2833a01 	add	r3, r3, #4096	; 0x1000
40001628:	e5942018 	ldr	r2, [r4, #24]
4000162c:	e2833028 	add	r3, r3, #40	; 0x28
40001630:	e0853003 	add	r3, r5, r3
40001634:	e3510000 	cmp	r1, #0
40001638:	e584703c 	str	r7, [r4, #60]	; 0x3c
4000163c:	e28d1004 	add	r1, sp, #4
40001640:	e5843038 	str	r3, [r4, #56]	; 0x38
40001644:	e1a00004 	mov	r0, r4
40001648:	e58d2004 	str	r2, [sp, #4]
4000164c:	e5943040 	ldr	r3, [r4, #64]	; 0x40
40001650:	e58d3008 	str	r3, [sp, #8]
40001654:	13a03018 	movne	r3, #24
40001658:	03a03010 	moveq	r3, #16
4000165c:	e5cd300c 	strb	r3, [sp, #12]
40001660:	eb0080f5 	bl	40021a3c <net::send_package(net::tcb const*, net::SendInfo const&)>
40001664:	e5d61b58 	ldrb	r1, [r6, #2904]	; 0xb58
40001668:	e1c421d8 	ldrd	r2, [r4, #24]
4000166c:	e3510000 	cmp	r1, #0
40001670:	e0822007 	add	r2, r2, r7
40001674:	e0437007 	sub	r7, r3, r7
40001678:	e3a03000 	mov	r3, #0
4000167c:	e5843038 	str	r3, [r4, #56]	; 0x38
40001680:	e584303c 	str	r3, [r4, #60]	; 0x3c
40001684:	e5842018 	str	r2, [r4, #24]
40001688:	e584701c 	str	r7, [r4, #28]
4000168c:	e5963b54 	ldr	r3, [r6, #2900]	; 0xb54
40001690:	1a000002 	bne	400016a0 <net::tcp_run()+0x12c>
40001694:	e5962b50 	ldr	r2, [r6, #2896]	; 0xb50
40001698:	e1520003 	cmp	r2, r3
4000169c:	0a000004 	beq	400016b4 <net::tcp_run()+0x140>
400016a0:	e2833001 	add	r3, r3, #1
400016a4:	e3a02000 	mov	r2, #0
400016a8:	e5c62b58 	strb	r2, [r6, #2904]	; 0xb58
400016ac:	e2033001 	and	r3, r3, #1
400016b0:	e5863b54 	str	r3, [r6, #2900]	; 0xb54
400016b4:	e5962b50 	ldr	r2, [r6, #2896]	; 0xb50
400016b8:	e1530002 	cmp	r3, r2
400016bc:	1affffcf 	bne	40001600 <net::tcp_run()+0x8c>
400016c0:	e28dd010 	add	sp, sp, #16
400016c4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400016c8:	4005bd5c 	andmi	fp, r5, ip, asr sp

400016cc <net::tcp_handle(t_tcp*)>:
400016cc:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
400016d0:	e30a7d5c 	movw	r7, #44380	; 0xad5c
400016d4:	e1d0c2b2 	ldrh	ip, [r0, #34]	; 0x22
400016d8:	e24dd05c 	sub	sp, sp, #92	; 0x5c
400016dc:	e1d022b4 	ldrh	r2, [r0, #36]	; 0x24
400016e0:	e1a05000 	mov	r5, r0
400016e4:	e3447005 	movt	r7, #16389	; 0x4005
400016e8:	e6bf2fb2 	rev16	r2, r2
400016ec:	e2871d6d 	add	r1, r7, #6976	; 0x1b40
400016f0:	e6bfcfbc 	rev16	ip, ip
400016f4:	e6ff3072 	uxth	r3, r2
400016f8:	e5d0802e 	ldrb	r8, [r0, #46]	; 0x2e
400016fc:	e1c0c2b2 	strh	ip, [r0, #34]	; 0x22
40001700:	e1c022b4 	strh	r2, [r0, #36]	; 0x24
40001704:	e1d111bc 	ldrh	r1, [r1, #28]
40001708:	e1a08228 	lsr	r8, r8, #4
4000170c:	e1510003 	cmp	r1, r3
40001710:	e1d0a1b0 	ldrh	sl, [r0, #16]
40001714:	13a01000 	movne	r1, #0
40001718:	e1a08108 	lsl	r8, r8, #2
4000171c:	128d3008 	addne	r3, sp, #8
40001720:	0a000023 	beq	400017b4 <net::tcp_handle(t_tcp*)+0xe8>
40001724:	e4c31001 	strb	r1, [r3], #1
40001728:	e28d0058 	add	r0, sp, #88	; 0x58
4000172c:	e1530000 	cmp	r3, r0
40001730:	1afffffb 	bne	40001724 <net::tcp_handle(t_tcp*)+0x58>
40001734:	e1cd21b0 	strh	r2, [sp, #16]
40001738:	e285101e 	add	r1, r5, #30
4000173c:	e1a03001 	mov	r3, r1
40001740:	e285e022 	add	lr, r5, #34	; 0x22
40001744:	e28d2008 	add	r2, sp, #8
40001748:	e4d30001 	ldrb	r0, [r3], #1
4000174c:	e153000e 	cmp	r3, lr
40001750:	e4c20001 	strb	r0, [r2], #1
40001754:	1afffffb 	bne	40001748 <net::tcp_handle(t_tcp*)+0x7c>
40001758:	e1cdc1b2 	strh	ip, [sp, #18]
4000175c:	e285301a 	add	r3, r5, #26
40001760:	e28d200c 	add	r2, sp, #12
40001764:	e4d30001 	ldrb	r0, [r3], #1
40001768:	e1530001 	cmp	r3, r1
4000176c:	e4c20001 	strb	r0, [r2], #1
40001770:	1afffffb 	bne	40001764 <net::tcp_handle(t_tcp*)+0x98>
40001774:	e2853006 	add	r3, r5, #6
40001778:	e285000c 	add	r0, r5, #12
4000177c:	e28d2014 	add	r2, sp, #20
40001780:	e4d31001 	ldrb	r1, [r3], #1
40001784:	e1530000 	cmp	r3, r0
40001788:	e4c21001 	strb	r1, [r2], #1
4000178c:	1afffffb 	bne	40001780 <net::tcp_handle(t_tcp*)+0xb4>
40001790:	e1a00005 	mov	r0, r5
40001794:	eb008074 	bl	4002196c <net::_bswap32(t_tcp*)>
40001798:	e1a02008 	mov	r2, r8
4000179c:	e28d1008 	add	r1, sp, #8
400017a0:	e1a00005 	mov	r0, r5
400017a4:	eb008189 	bl	40021dd0 <net::scan_options(t_tcp*, net::tcb*, long)>
400017a8:	eb008159 	bl	40021d14 <net::send_reset(t_tcp*, net::tcb const*)>
400017ac:	e28dd05c 	add	sp, sp, #92	; 0x5c
400017b0:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
400017b4:	e6ffe07c 	uxth	lr, ip
400017b8:	e2873004 	add	r3, r7, #4
400017bc:	e3a04000 	mov	r4, #0
400017c0:	e3a09050 	mov	r9, #80	; 0x50
400017c4:	ea000003 	b	400017d8 <net::tcp_handle(t_tcp*)+0x10c>
400017c8:	e2844001 	add	r4, r4, #1
400017cc:	e2833050 	add	r3, r3, #80	; 0x50
400017d0:	e3540010 	cmp	r4, #16
400017d4:	0a000066 	beq	40001974 <net::tcp_handle(t_tcp*)+0x2a8>
400017d8:	e5d32048 	ldrb	r2, [r3, #72]	; 0x48
400017dc:	e3520001 	cmp	r2, #1
400017e0:	0afffff8 	beq	400017c8 <net::tcp_handle(t_tcp*)+0xfc>
400017e4:	e1d320b6 	ldrh	r2, [r3, #6]
400017e8:	e152000e 	cmp	r2, lr
400017ec:	1afffff5 	bne	400017c8 <net::tcp_handle(t_tcp*)+0xfc>
400017f0:	e0060499 	mul	r6, r9, r4
400017f4:	e2432001 	sub	r2, r3, #1
400017f8:	e285101a 	add	r1, r5, #26
400017fc:	e283b003 	add	fp, r3, #3
40001800:	e5f2c001 	ldrb	ip, [r2, #1]!
40001804:	e4d10001 	ldrb	r0, [r1], #1
40001808:	e15c0000 	cmp	ip, r0
4000180c:	1affffed 	bne	400017c8 <net::tcp_handle(t_tcp*)+0xfc>
40001810:	e152000b 	cmp	r2, fp
40001814:	1afffff9 	bne	40001800 <net::tcp_handle(t_tcp*)+0x134>
40001818:	e1a00005 	mov	r0, r5
4000181c:	eb008052 	bl	4002196c <net::_bswap32(t_tcp*)>
40001820:	e1d593b0 	ldrh	r9, [r5, #48]	; 0x30
40001824:	e285002a 	add	r0, r5, #42	; 0x2a
40001828:	e3100003 	tst	r0, #3
4000182c:	e6bf9fb9 	rev16	r9, r9
40001830:	e1c593b0 	strh	r9, [r5, #48]	; 0x30
40001834:	e6ff3079 	uxth	r3, r9
40001838:	e58d3004 	str	r3, [sp, #4]
4000183c:	e1d533b4 	ldrh	r3, [r5, #52]	; 0x34
40001840:	e6bf3fb3 	rev16	r3, r3
40001844:	e1c533b4 	strh	r3, [r5, #52]	; 0x34
40001848:	e1a03000 	mov	r3, r0
4000184c:	0595302a 	ldreq	r3, [r5, #42]	; 0x2a
40001850:	0a000006 	beq	40001870 <net::tcp_handle(t_tcp*)+0x1a4>
40001854:	e285c02e 	add	ip, r5, #46	; 0x2e
40001858:	e28d2008 	add	r2, sp, #8
4000185c:	e4d31001 	ldrb	r1, [r3], #1
40001860:	e153000c 	cmp	r3, ip
40001864:	e4c21001 	strb	r1, [r2], #1
40001868:	1afffffb 	bne	4000185c <net::tcp_handle(t_tcp*)+0x190>
4000186c:	e59d3008 	ldr	r3, [sp, #8]
40001870:	e58d3000 	str	r3, [sp]
40001874:	e2853026 	add	r3, r5, #38	; 0x26
40001878:	e3130003 	tst	r3, #3
4000187c:	0595b026 	ldreq	fp, [r5, #38]	; 0x26
40001880:	0a000005 	beq	4000189c <net::tcp_handle(t_tcp*)+0x1d0>
40001884:	e28d2008 	add	r2, sp, #8
40001888:	e4d31001 	ldrb	r1, [r3], #1
4000188c:	e1530000 	cmp	r3, r0
40001890:	e4c21001 	strb	r1, [r2], #1
40001894:	1afffffb 	bne	40001888 <net::tcp_handle(t_tcp*)+0x1bc>
40001898:	e59db008 	ldr	fp, [sp, #8]
4000189c:	e0879006 	add	r9, r7, r6
400018a0:	e1a02008 	mov	r2, r8
400018a4:	e1a01009 	mov	r1, r9
400018a8:	e1a00005 	mov	r0, r5
400018ac:	eb008147 	bl	40021dd0 <net::scan_options(t_tcp*, net::tcb*, long)>
400018b0:	e3a02050 	mov	r2, #80	; 0x50
400018b4:	e0227492 	mla	r2, r2, r4, r7
400018b8:	e5d2104c 	ldrb	r1, [r2, #76]	; 0x4c
400018bc:	e3510001 	cmp	r1, #1
400018c0:	0a00003b 	beq	400019b4 <net::tcp_handle(t_tcp*)+0x2e8>
400018c4:	e2410003 	sub	r0, r1, #3
400018c8:	e3500007 	cmp	r0, #7
400018cc:	8affffb6 	bhi	400017ac <net::tcp_handle(t_tcp*)+0xe0>
400018d0:	e1d204b4 	ldrh	r0, [r2, #68]	; 0x44
400018d4:	e3e0c013 	mvn	ip, #19
400018d8:	e6bf6fba 	rev16	r6, sl
400018dc:	e04cc008 	sub	ip, ip, r8
400018e0:	e3500000 	cmp	r0, #0
400018e4:	e6fc6076 	uxtah	r6, ip, r6
400018e8:	e6ff6076 	uxth	r6, r6
400018ec:	0a000066 	beq	40001a8c <net::tcp_handle(t_tcp*)+0x3c0>
400018f0:	e5922040 	ldr	r2, [r2, #64]	; 0x40
400018f4:	e3560000 	cmp	r6, #0
400018f8:	e042c00b 	sub	ip, r2, fp
400018fc:	1a000073 	bne	40001ad0 <net::tcp_handle(t_tcp*)+0x404>
40001900:	e35c0000 	cmp	ip, #0
40001904:	da00009c 	ble	40001b7c <net::tcp_handle(t_tcp*)+0x4b0>
40001908:	e5d5202f 	ldrb	r2, [r5, #47]	; 0x2f
4000190c:	e3120004 	tst	r2, #4
40001910:	0a000063 	beq	40001aa4 <net::tcp_handle(t_tcp*)+0x3d8>
40001914:	e3a01050 	mov	r1, #80	; 0x50
40001918:	e0892001 	add	r2, r9, r1
4000191c:	e0217491 	mla	r1, r1, r4, r7
40001920:	e1d100b8 	ldrh	r0, [r1, #8]
40001924:	e3a01000 	mov	r1, #0
40001928:	e4c91001 	strb	r1, [r9], #1
4000192c:	e1590002 	cmp	r9, r2
40001930:	1afffffc 	bne	40001928 <net::tcp_handle(t_tcp*)+0x25c>
40001934:	e3a03050 	mov	r3, #80	; 0x50
40001938:	e3a02b03 	mov	r2, #3072	; 0xc00
4000193c:	e0247493 	mla	r4, r3, r4, r7
40001940:	e34021c2 	movt	r2, #450	; 0x1c2
40001944:	e1c400b8 	strh	r0, [r4, #8]
40001948:	e5923084 	ldr	r3, [r2, #132]	; 0x84
4000194c:	e3002b18 	movw	r2, #2840	; 0xb18
40001950:	e1c424b4 	strh	r2, [r4, #68]	; 0x44
40001954:	e3a02001 	mov	r2, #1
40001958:	e584302c 	str	r3, [r4, #44]	; 0x2c
4000195c:	e5843014 	str	r3, [r4, #20]
40001960:	e5843018 	str	r3, [r4, #24]
40001964:	e5843028 	str	r3, [r4, #40]	; 0x28
40001968:	e5c4204c 	strb	r2, [r4, #76]	; 0x4c
4000196c:	e28dd05c 	add	sp, sp, #92	; 0x5c
40001970:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
40001974:	e30a3d5c 	movw	r3, #44380	; 0xad5c
40001978:	e3a04000 	mov	r4, #0
4000197c:	e3443005 	movt	r3, #16389	; 0x4005
40001980:	ea000002 	b	40001990 <net::tcp_handle(t_tcp*)+0x2c4>
40001984:	e2844001 	add	r4, r4, #1
40001988:	e3540010 	cmp	r4, #16
4000198c:	0a000006 	beq	400019ac <net::tcp_handle(t_tcp*)+0x2e0>
40001990:	e5d3204c 	ldrb	r2, [r3, #76]	; 0x4c
40001994:	e2833050 	add	r3, r3, #80	; 0x50
40001998:	e3520001 	cmp	r2, #1
4000199c:	1afffff8 	bne	40001984 <net::tcp_handle(t_tcp*)+0x2b8>
400019a0:	e3a06050 	mov	r6, #80	; 0x50
400019a4:	e0060496 	mul	r6, r6, r4
400019a8:	eaffff9a 	b	40001818 <net::tcp_handle(t_tcp*)+0x14c>
400019ac:	e3a06c05 	mov	r6, #1280	; 0x500
400019b0:	eaffff98 	b	40001818 <net::tcp_handle(t_tcp*)+0x14c>
400019b4:	e285101e 	add	r1, r5, #30
400019b8:	e289e004 	add	lr, r9, #4
400019bc:	e1a00001 	mov	r0, r1
400019c0:	e1a02009 	mov	r2, r9
400019c4:	e4d0c001 	ldrb	ip, [r0], #1
400019c8:	e4c2c001 	strb	ip, [r2], #1
400019cc:	e15e0002 	cmp	lr, r2
400019d0:	1afffffb 	bne	400019c4 <net::tcp_handle(t_tcp*)+0x2f8>
400019d4:	e1d502b2 	ldrh	r0, [r5, #34]	; 0x22
400019d8:	e3a02050 	mov	r2, #80	; 0x50
400019dc:	e0227492 	mla	r2, r2, r4, r7
400019e0:	e1c200ba 	strh	r0, [r2, #10]
400019e4:	e2860004 	add	r0, r6, #4
400019e8:	e0870000 	add	r0, r7, r0
400019ec:	e285201a 	add	r2, r5, #26
400019f0:	e4d2c001 	ldrb	ip, [r2], #1
400019f4:	e1520001 	cmp	r2, r1
400019f8:	e4c0c001 	strb	ip, [r0], #1
400019fc:	1afffffb 	bne	400019f0 <net::tcp_handle(t_tcp*)+0x324>
40001a00:	e286100c 	add	r1, r6, #12
40001a04:	e2852006 	add	r2, r5, #6
40001a08:	e0871001 	add	r1, r7, r1
40001a0c:	e285c00c 	add	ip, r5, #12
40001a10:	e4d20001 	ldrb	r0, [r2], #1
40001a14:	e152000c 	cmp	r2, ip
40001a18:	e4c10001 	strb	r0, [r1], #1
40001a1c:	1afffffb 	bne	40001a10 <net::tcp_handle(t_tcp*)+0x344>
40001a20:	e5d5202f 	ldrb	r2, [r5, #47]	; 0x2f
40001a24:	e3120004 	tst	r2, #4
40001a28:	1affff5f 	bne	400017ac <net::tcp_handle(t_tcp*)+0xe0>
40001a2c:	e3120010 	tst	r2, #16
40001a30:	1a0000c0 	bne	40001d38 <net::tcp_handle(t_tcp*)+0x66c>
40001a34:	e3120002 	tst	r2, #2
40001a38:	0affff5b 	beq	400017ac <net::tcp_handle(t_tcp*)+0xe0>
40001a3c:	e3a03050 	mov	r3, #80	; 0x50
40001a40:	e28b2001 	add	r2, fp, #1
40001a44:	e0247493 	mla	r4, r3, r4, r7
40001a48:	e58d200c 	str	r2, [sp, #12]
40001a4c:	e3a03012 	mov	r3, #18
40001a50:	e5cd3010 	strb	r3, [sp, #16]
40001a54:	e1a00009 	mov	r0, r9
40001a58:	e594302c 	ldr	r3, [r4, #44]	; 0x2c
40001a5c:	e28d1008 	add	r1, sp, #8
40001a60:	e5842040 	str	r2, [r4, #64]	; 0x40
40001a64:	e584b048 	str	fp, [r4, #72]	; 0x48
40001a68:	e58d3008 	str	r3, [sp, #8]
40001a6c:	eb007ff2 	bl	40021a3c <net::send_package(net::tcb const*, net::SendInfo const&)>
40001a70:	e594302c 	ldr	r3, [r4, #44]	; 0x2c
40001a74:	e3a02003 	mov	r2, #3
40001a78:	e5c4204c 	strb	r2, [r4, #76]	; 0x4c
40001a7c:	e5843014 	str	r3, [r4, #20]
40001a80:	e2833001 	add	r3, r3, #1
40001a84:	e5843018 	str	r3, [r4, #24]
40001a88:	eaffff47 	b	400017ac <net::tcp_handle(t_tcp*)+0xe0>
40001a8c:	e3560000 	cmp	r6, #0
40001a90:	1affff9c 	bne	40001908 <net::tcp_handle(t_tcp*)+0x23c>
40001a94:	e5922040 	ldr	r2, [r2, #64]	; 0x40
40001a98:	e152000b 	cmp	r2, fp
40001a9c:	1affff99 	bne	40001908 <net::tcp_handle(t_tcp*)+0x23c>
40001aa0:	ea000015 	b	40001afc <net::tcp_handle(t_tcp*)+0x430>
40001aa4:	e3a02050 	mov	r2, #80	; 0x50
40001aa8:	e3a01010 	mov	r1, #16
40001aac:	e0247492 	mla	r4, r2, r4, r7
40001ab0:	e5cd1010 	strb	r1, [sp, #16]
40001ab4:	e1a00009 	mov	r0, r9
40001ab8:	e5942018 	ldr	r2, [r4, #24]
40001abc:	e28d1008 	add	r1, sp, #8
40001ac0:	e5943040 	ldr	r3, [r4, #64]	; 0x40
40001ac4:	e1cd20f8 	strd	r2, [sp, #8]
40001ac8:	eb007fdb 	bl	40021a3c <net::send_package(net::tcb const*, net::SendInfo const&)>
40001acc:	eaffff36 	b	400017ac <net::tcp_handle(t_tcp*)+0xe0>
40001ad0:	e0800002 	add	r0, r0, r2
40001ad4:	e35c0000 	cmp	ip, #0
40001ad8:	da000023 	ble	40001b6c <net::tcp_handle(t_tcp*)+0x4a0>
40001adc:	e24bc001 	sub	ip, fp, #1
40001ae0:	e08cc006 	add	ip, ip, r6
40001ae4:	e042200c 	sub	r2, r2, ip
40001ae8:	e3520000 	cmp	r2, #0
40001aec:	caffff85 	bgt	40001908 <net::tcp_handle(t_tcp*)+0x23c>
40001af0:	e04c0000 	sub	r0, ip, r0
40001af4:	e3500000 	cmp	r0, #0
40001af8:	aaffff82 	bge	40001908 <net::tcp_handle(t_tcp*)+0x23c>
40001afc:	e5d5202f 	ldrb	r2, [r5, #47]	; 0x2f
40001b00:	e2120004 	ands	r0, r2, #4
40001b04:	1a000090 	bne	40001d4c <net::tcp_handle(t_tcp*)+0x680>
40001b08:	e3120002 	tst	r2, #2
40001b0c:	0a000005 	beq	40001b28 <net::tcp_handle(t_tcp*)+0x45c>
40001b10:	e3510003 	cmp	r1, #3
40001b14:	0a000117 	beq	40001f78 <net::tcp_handle(t_tcp*)+0x8ac>
40001b18:	e1a01009 	mov	r1, r9
40001b1c:	e1a00005 	mov	r0, r5
40001b20:	eb00807b 	bl	40021d14 <net::send_reset(t_tcp*, net::tcb const*)>
40001b24:	e5d5202f 	ldrb	r2, [r5, #47]	; 0x2f
40001b28:	e3120010 	tst	r2, #16
40001b2c:	0affff1e 	beq	400017ac <net::tcp_handle(t_tcp*)+0xe0>
40001b30:	e3a01050 	mov	r1, #80	; 0x50
40001b34:	e0217491 	mla	r1, r1, r4, r7
40001b38:	e5d1104c 	ldrb	r1, [r1, #76]	; 0x4c
40001b3c:	e2410003 	sub	r0, r1, #3
40001b40:	e3500007 	cmp	r0, #7
40001b44:	979ff100 	ldrls	pc, [pc, r0, lsl #2]
40001b48:	ea00005f 	b	40001ccc <net::tcp_handle(t_tcp*)+0x600>
40001b4c:	40001c98 	mulmi	r0, r8, ip
40001b50:	40001b8c 	andmi	r1, r0, ip, lsl #23
40001b54:	40001b8c 	andmi	r1, r0, ip, lsl #23
40001b58:	40001b8c 	andmi	r1, r0, ip, lsl #23
40001b5c:	40001b8c 	andmi	r1, r0, ip, lsl #23
40001b60:	40001b8c 	andmi	r1, r0, ip, lsl #23
40001b64:	40001c50 	andmi	r1, r0, r0, asr ip
40001b68:	40001cf8 	strdmi	r1, [r0], -r8
40001b6c:	e04bc000 	sub	ip, fp, r0
40001b70:	e35c0000 	cmp	ip, #0
40001b74:	aaffffd8 	bge	40001adc <net::tcp_handle(t_tcp*)+0x410>
40001b78:	eaffffdf 	b	40001afc <net::tcp_handle(t_tcp*)+0x430>
40001b7c:	e0802002 	add	r2, r0, r2
40001b80:	e04b2002 	sub	r2, fp, r2
40001b84:	e3520000 	cmp	r2, #0
40001b88:	eaffffda 	b	40001af8 <net::tcp_handle(t_tcp*)+0x42c>
40001b8c:	e59d3000 	ldr	r3, [sp]
40001b90:	e3a02050 	mov	r2, #80	; 0x50
40001b94:	e0227492 	mla	r2, r2, r4, r7
40001b98:	e5920014 	ldr	r0, [r2, #20]
40001b9c:	e592c018 	ldr	ip, [r2, #24]
40001ba0:	e050e003 	subs	lr, r0, r3
40001ba4:	4a000124 	bmi	4000203c <net::tcp_handle(t_tcp*)+0x970>
40001ba8:	e59d3000 	ldr	r3, [sp]
40001bac:	e0430000 	sub	r0, r3, r0
40001bb0:	e3500000 	cmp	r0, #0
40001bb4:	da000109 	ble	40001fe0 <net::tcp_handle(t_tcp*)+0x914>
40001bb8:	e59d3000 	ldr	r3, [sp]
40001bbc:	e043200c 	sub	r2, r3, ip
40001bc0:	e3520000 	cmp	r2, #0
40001bc4:	ca000124 	bgt	4000205c <net::tcp_handle(t_tcp*)+0x990>
40001bc8:	e2412004 	sub	r2, r1, #4
40001bcc:	e3520002 	cmp	r2, #2
40001bd0:	83a02000 	movhi	r2, #0
40001bd4:	93a02001 	movls	r2, #1
40001bd8:	e3560000 	cmp	r6, #0
40001bdc:	03a02000 	moveq	r2, #0
40001be0:	e3520000 	cmp	r2, #0
40001be4:	1a000076 	bne	40001dc4 <net::tcp_handle(t_tcp*)+0x6f8>
40001be8:	e5d5202f 	ldrb	r2, [r5, #47]	; 0x2f
40001bec:	e3120001 	tst	r2, #1
40001bf0:	0afffeed 	beq	400017ac <net::tcp_handle(t_tcp*)+0xe0>
40001bf4:	e3a02050 	mov	r2, #80	; 0x50
40001bf8:	e1a00009 	mov	r0, r9
40001bfc:	e0247492 	mla	r4, r2, r4, r7
40001c00:	e28d1008 	add	r1, sp, #8
40001c04:	e5943040 	ldr	r3, [r4, #64]	; 0x40
40001c08:	e5942018 	ldr	r2, [r4, #24]
40001c0c:	e2833001 	add	r3, r3, #1
40001c10:	e58d2008 	str	r2, [sp, #8]
40001c14:	e3a02010 	mov	r2, #16
40001c18:	e5843040 	str	r3, [r4, #64]	; 0x40
40001c1c:	e58d300c 	str	r3, [sp, #12]
40001c20:	e5cd2010 	strb	r2, [sp, #16]
40001c24:	eb007f84 	bl	40021a3c <net::send_package(net::tcb const*, net::SendInfo const&)>
40001c28:	e5d4304c 	ldrb	r3, [r4, #76]	; 0x4c
40001c2c:	e3530005 	cmp	r3, #5
40001c30:	0a0000e4 	beq	40001fc8 <net::tcp_handle(t_tcp*)+0x8fc>
40001c34:	8a00005e 	bhi	40001db4 <net::tcp_handle(t_tcp*)+0x6e8>
40001c38:	e2433003 	sub	r3, r3, #3
40001c3c:	e3530001 	cmp	r3, #1
40001c40:	93a03007 	movls	r3, #7
40001c44:	8afffed8 	bhi	400017ac <net::tcp_handle(t_tcp*)+0xe0>
40001c48:	e5c4304c 	strb	r3, [r4, #76]	; 0x4c
40001c4c:	eafffed6 	b	400017ac <net::tcp_handle(t_tcp*)+0xe0>
40001c50:	e59d3000 	ldr	r3, [sp]
40001c54:	e3a01050 	mov	r1, #80	; 0x50
40001c58:	e0217491 	mla	r1, r1, r4, r7
40001c5c:	e5910018 	ldr	r0, [r1, #24]
40001c60:	e1500003 	cmp	r0, r3
40001c64:	1affffe0 	bne	40001bec <net::tcp_handle(t_tcp*)+0x520>
40001c68:	e1d110b8 	ldrh	r1, [r1, #8]
40001c6c:	e2892050 	add	r2, r9, #80	; 0x50
40001c70:	e3a00000 	mov	r0, #0
40001c74:	e4c90001 	strb	r0, [r9], #1
40001c78:	e1590002 	cmp	r9, r2
40001c7c:	1afffffc 	bne	40001c74 <net::tcp_handle(t_tcp*)+0x5a8>
40001c80:	e3a03050 	mov	r3, #80	; 0x50
40001c84:	e3a02b03 	mov	r2, #3072	; 0xc00
40001c88:	e0247493 	mla	r4, r3, r4, r7
40001c8c:	e34021c2 	movt	r2, #450	; 0x1c2
40001c90:	e1c410b8 	strh	r1, [r4, #8]
40001c94:	eaffff2b 	b	40001948 <net::tcp_handle(t_tcp*)+0x27c>
40001c98:	e59d0000 	ldr	r0, [sp]
40001c9c:	e3a02050 	mov	r2, #80	; 0x50
40001ca0:	e0227492 	mla	r2, r2, r4, r7
40001ca4:	e5921014 	ldr	r1, [r2, #20]
40001ca8:	e0411000 	sub	r1, r1, r0
40001cac:	e3510000 	cmp	r1, #0
40001cb0:	da0000b8 	ble	40001f98 <net::tcp_handle(t_tcp*)+0x8cc>
40001cb4:	e1a01009 	mov	r1, r9
40001cb8:	e1a00005 	mov	r0, r5
40001cbc:	eb008014 	bl	40021d14 <net::send_reset(t_tcp*, net::tcb const*)>
40001cc0:	e3a02050 	mov	r2, #80	; 0x50
40001cc4:	e0227492 	mla	r2, r2, r4, r7
40001cc8:	e5d2104c 	ldrb	r1, [r2, #76]	; 0x4c
40001ccc:	e2412004 	sub	r2, r1, #4
40001cd0:	e3520002 	cmp	r2, #2
40001cd4:	83a02000 	movhi	r2, #0
40001cd8:	93a02001 	movls	r2, #1
40001cdc:	e3560000 	cmp	r6, #0
40001ce0:	03a02000 	moveq	r2, #0
40001ce4:	e3520000 	cmp	r2, #0
40001ce8:	1a000035 	bne	40001dc4 <net::tcp_handle(t_tcp*)+0x6f8>
40001cec:	e3510002 	cmp	r1, #2
40001cf0:	9afffead 	bls	400017ac <net::tcp_handle(t_tcp*)+0xe0>
40001cf4:	eaffffbb 	b	40001be8 <net::tcp_handle(t_tcp*)+0x51c>
40001cf8:	e3a03050 	mov	r3, #80	; 0x50
40001cfc:	e02a7493 	mla	sl, r3, r4, r7
40001d00:	e59d3000 	ldr	r3, [sp]
40001d04:	e59a1018 	ldr	r1, [sl, #24]
40001d08:	e1510003 	cmp	r1, r3
40001d0c:	1affffb6 	bne	40001bec <net::tcp_handle(t_tcp*)+0x520>
40001d10:	e59a2040 	ldr	r2, [sl, #64]	; 0x40
40001d14:	e28d1008 	add	r1, sp, #8
40001d18:	e58d3008 	str	r3, [sp, #8]
40001d1c:	e1a00009 	mov	r0, r9
40001d20:	e58d200c 	str	r2, [sp, #12]
40001d24:	e3a02010 	mov	r2, #16
40001d28:	e5cd2010 	strb	r2, [sp, #16]
40001d2c:	eb007f42 	bl	40021a3c <net::send_package(net::tcb const*, net::SendInfo const&)>
40001d30:	e5da104c 	ldrb	r1, [sl, #76]	; 0x4c
40001d34:	eaffffe4 	b	40001ccc <net::tcp_handle(t_tcp*)+0x600>
40001d38:	e1a01009 	mov	r1, r9
40001d3c:	e1a00005 	mov	r0, r5
40001d40:	e28dd05c 	add	sp, sp, #92	; 0x5c
40001d44:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
40001d48:	ea007ff1 	b	40021d14 <net::send_reset(t_tcp*, net::tcb const*)>
40001d4c:	e3510007 	cmp	r1, #7
40001d50:	8a00000b 	bhi	40001d84 <net::tcp_handle(t_tcp*)+0x6b8>
40001d54:	e3510003 	cmp	r1, #3
40001d58:	8a00007d 	bhi	40001f54 <net::tcp_handle(t_tcp*)+0x888>
40001d5c:	1afffe92 	bne	400017ac <net::tcp_handle(t_tcp*)+0xe0>
40001d60:	e3a02050 	mov	r2, #80	; 0x50
40001d64:	e0890002 	add	r0, r9, r2
40001d68:	e0227492 	mla	r2, r2, r4, r7
40001d6c:	e1d210b8 	ldrh	r1, [r2, #8]
40001d70:	e3a02000 	mov	r2, #0
40001d74:	e4c92001 	strb	r2, [r9], #1
40001d78:	e1500009 	cmp	r0, r9
40001d7c:	1afffffc 	bne	40001d74 <net::tcp_handle(t_tcp*)+0x6a8>
40001d80:	eaffffbe 	b	40001c80 <net::tcp_handle(t_tcp*)+0x5b4>
40001d84:	e2411008 	sub	r1, r1, #8
40001d88:	e3510002 	cmp	r1, #2
40001d8c:	8afffe86 	bhi	400017ac <net::tcp_handle(t_tcp*)+0xe0>
40001d90:	e3a02050 	mov	r2, #80	; 0x50
40001d94:	e0890002 	add	r0, r9, r2
40001d98:	e0227492 	mla	r2, r2, r4, r7
40001d9c:	e1d210b8 	ldrh	r1, [r2, #8]
40001da0:	e3a02000 	mov	r2, #0
40001da4:	e4c92001 	strb	r2, [r9], #1
40001da8:	e1500009 	cmp	r0, r9
40001dac:	1afffffc 	bne	40001da4 <net::tcp_handle(t_tcp*)+0x6d8>
40001db0:	eaffffb2 	b	40001c80 <net::tcp_handle(t_tcp*)+0x5b4>
40001db4:	e3530006 	cmp	r3, #6
40001db8:	1afffe7b 	bne	400017ac <net::tcp_handle(t_tcp*)+0xe0>
40001dbc:	e3a0300a 	mov	r3, #10
40001dc0:	eaffffa0 	b	40001c48 <net::tcp_handle(t_tcp*)+0x57c>
40001dc4:	e3a02050 	mov	r2, #80	; 0x50
40001dc8:	e0227492 	mla	r2, r2, r4, r7
40001dcc:	e5921040 	ldr	r1, [r2, #64]	; 0x40
40001dd0:	e151000b 	cmp	r1, fp
40001dd4:	1a0000b2 	bne	400020a4 <net::tcp_handle(t_tcp*)+0x9d8>
40001dd8:	e59fb2f4 	ldr	fp, [pc, #756]	; 400020d4 <net::tcp_handle(t_tcp*)+0xa08>
40001ddc:	e3a02e59 	mov	r2, #1424	; 0x590
40001de0:	e2851022 	add	r1, r5, #34	; 0x22
40001de4:	e1db30b0 	ldrh	r3, [fp]
40001de8:	e3110003 	tst	r1, #3
40001dec:	e0818008 	add	r8, r1, r8
40001df0:	e3001a92 	movw	r1, #2706	; 0xa92
40001df4:	e0020392 	mul	r2, r2, r3
40001df8:	e58d3004 	str	r3, [sp, #4]
40001dfc:	e0870002 	add	r0, r7, r2
40001e00:	e2822c05 	add	r2, r2, #1280	; 0x500
40001e04:	e2822004 	add	r2, r2, #4
40001e08:	e0872002 	add	r2, r7, r2
40001e0c:	e18040b1 	strh	r4, [r0, r1]
40001e10:	1a00009b 	bne	40002084 <net::tcp_handle(t_tcp*)+0x9b8>
40001e14:	e3560003 	cmp	r6, #3
40001e18:	9a000099 	bls	40002084 <net::tcp_handle(t_tcp*)+0x9b8>
40001e1c:	e2463004 	sub	r3, r6, #4
40001e20:	e353001f 	cmp	r3, #31
40001e24:	9a0000a6 	bls	400020c4 <net::tcp_handle(t_tcp*)+0x9f8>
40001e28:	e2880020 	add	r0, r8, #32
40001e2c:	e282c020 	add	ip, r2, #32
40001e30:	e1a01006 	mov	r1, r6
40001e34:	e510e020 	ldr	lr, [r0, #-32]	; 0xffffffe0
40001e38:	f5d0f054 	pld	[r0, #84]	; 0x54
40001e3c:	e50ce020 	str	lr, [ip, #-32]	; 0xffffffe0
40001e40:	e510e01c 	ldr	lr, [r0, #-28]	; 0xffffffe4
40001e44:	e50ce01c 	str	lr, [ip, #-28]	; 0xffffffe4
40001e48:	e510e018 	ldr	lr, [r0, #-24]	; 0xffffffe8
40001e4c:	e50ce018 	str	lr, [ip, #-24]	; 0xffffffe8
40001e50:	e510e014 	ldr	lr, [r0, #-20]	; 0xffffffec
40001e54:	e50ce014 	str	lr, [ip, #-20]	; 0xffffffec
40001e58:	e510e010 	ldr	lr, [r0, #-16]
40001e5c:	e50ce010 	str	lr, [ip, #-16]
40001e60:	e510e00c 	ldr	lr, [r0, #-12]
40001e64:	e50ce00c 	str	lr, [ip, #-12]
40001e68:	e241e024 	sub	lr, r1, #36	; 0x24
40001e6c:	e510a008 	ldr	sl, [r0, #-8]
40001e70:	e35e001f 	cmp	lr, #31
40001e74:	e2411020 	sub	r1, r1, #32
40001e78:	e1a0e000 	mov	lr, r0
40001e7c:	e50ca008 	str	sl, [ip, #-8]
40001e80:	e2800020 	add	r0, r0, #32
40001e84:	e510a024 	ldr	sl, [r0, #-36]	; 0xffffffdc
40001e88:	e50ca004 	str	sl, [ip, #-4]
40001e8c:	e1a0a00c 	mov	sl, ip
40001e90:	e28cc020 	add	ip, ip, #32
40001e94:	8affffe6 	bhi	40001e34 <net::tcp_handle(t_tcp*)+0x768>
40001e98:	e2411004 	sub	r1, r1, #4
40001e9c:	e3c11003 	bic	r1, r1, #3
40001ea0:	e2811004 	add	r1, r1, #4
40001ea4:	e08e1001 	add	r1, lr, r1
40001ea8:	e49e0004 	ldr	r0, [lr], #4
40001eac:	e151000e 	cmp	r1, lr
40001eb0:	e48a0004 	str	r0, [sl], #4
40001eb4:	1afffffb 	bne	40001ea8 <net::tcp_handle(t_tcp*)+0x7dc>
40001eb8:	e1a0c123 	lsr	ip, r3, #2
40001ebc:	e3e01003 	mvn	r1, #3
40001ec0:	e0000c91 	mul	r0, r1, ip
40001ec4:	e28c1001 	add	r1, ip, #1
40001ec8:	e1730000 	cmn	r3, r0
40001ecc:	e1a01101 	lsl	r1, r1, #2
40001ed0:	e0888001 	add	r8, r8, r1
40001ed4:	e0822001 	add	r2, r2, r1
40001ed8:	e2461005 	sub	r1, r6, #5
40001edc:	10811000 	addne	r1, r1, r0
40001ee0:	1a000068 	bne	40002088 <net::tcp_handle(t_tcp*)+0x9bc>
40001ee4:	e59d3004 	ldr	r3, [sp, #4]
40001ee8:	e3a08050 	mov	r8, #80	; 0x50
40001eec:	e3a01e59 	mov	r1, #1424	; 0x590
40001ef0:	e0287498 	mla	r8, r8, r4, r7
40001ef4:	e0217391 	mla	r1, r1, r3, r7
40001ef8:	e1d824b4 	ldrh	r2, [r8, #68]	; 0x44
40001efc:	e5980040 	ldr	r0, [r8, #64]	; 0x40
40001f00:	e2811ea9 	add	r1, r1, #2704	; 0xa90
40001f04:	e2422d16 	sub	r2, r2, #1408	; 0x580
40001f08:	e1c160b0 	strh	r6, [r1]
40001f0c:	e242200c 	sub	r2, r2, #12
40001f10:	e5981018 	ldr	r1, [r8, #24]
40001f14:	e0866000 	add	r6, r6, r0
40001f18:	e1a00009 	mov	r0, r9
40001f1c:	e58d1008 	str	r1, [sp, #8]
40001f20:	e28d1008 	add	r1, sp, #8
40001f24:	e1c824b4 	strh	r2, [r8, #68]	; 0x44
40001f28:	e3a02010 	mov	r2, #16
40001f2c:	e5886040 	str	r6, [r8, #64]	; 0x40
40001f30:	e5cd2010 	strb	r2, [sp, #16]
40001f34:	e58d600c 	str	r6, [sp, #12]
40001f38:	eb007ebf 	bl	40021a3c <net::send_package(net::tcb const*, net::SendInfo const&)>
40001f3c:	e1db20b0 	ldrh	r2, [fp]
40001f40:	e5d8104c 	ldrb	r1, [r8, #76]	; 0x4c
40001f44:	e2822001 	add	r2, r2, #1
40001f48:	e2022001 	and	r2, r2, #1
40001f4c:	e1cb20b0 	strh	r2, [fp]
40001f50:	eaffff65 	b	40001cec <net::tcp_handle(t_tcp*)+0x620>
40001f54:	e3a02050 	mov	r2, #80	; 0x50
40001f58:	e0890002 	add	r0, r9, r2
40001f5c:	e0227492 	mla	r2, r2, r4, r7
40001f60:	e1d210b8 	ldrh	r1, [r2, #8]
40001f64:	e3a02000 	mov	r2, #0
40001f68:	e4c92001 	strb	r2, [r9], #1
40001f6c:	e1500009 	cmp	r0, r9
40001f70:	1afffffc 	bne	40001f68 <net::tcp_handle(t_tcp*)+0x89c>
40001f74:	eaffff41 	b	40001c80 <net::tcp_handle(t_tcp*)+0x5b4>
40001f78:	e3a02050 	mov	r2, #80	; 0x50
40001f7c:	e0227492 	mla	r2, r2, r4, r7
40001f80:	e1d210b8 	ldrh	r1, [r2, #8]
40001f84:	e2892050 	add	r2, r9, #80	; 0x50
40001f88:	e4c90001 	strb	r0, [r9], #1
40001f8c:	e1520009 	cmp	r2, r9
40001f90:	1afffffc 	bne	40001f88 <net::tcp_handle(t_tcp*)+0x8bc>
40001f94:	eaffff39 	b	40001c80 <net::tcp_handle(t_tcp*)+0x5b4>
40001f98:	e5921018 	ldr	r1, [r2, #24]
40001f9c:	e0401001 	sub	r1, r0, r1
40001fa0:	e3510000 	cmp	r1, #0
40001fa4:	caffff42 	bgt	40001cb4 <net::tcp_handle(t_tcp*)+0x5e8>
40001fa8:	e59d3004 	ldr	r3, [sp, #4]
40001fac:	e582b024 	str	fp, [r2, #36]	; 0x24
40001fb0:	e582301c 	str	r3, [r2, #28]
40001fb4:	e3a03004 	mov	r3, #4
40001fb8:	e5820028 	str	r0, [r2, #40]	; 0x28
40001fbc:	e5820014 	str	r0, [r2, #20]
40001fc0:	e5c2304c 	strb	r3, [r2, #76]	; 0x4c
40001fc4:	eafffdf8 	b	400017ac <net::tcp_handle(t_tcp*)+0xe0>
40001fc8:	e5943018 	ldr	r3, [r4, #24]
40001fcc:	e59d2000 	ldr	r2, [sp]
40001fd0:	e1530002 	cmp	r3, r2
40001fd4:	13a03008 	movne	r3, #8
40001fd8:	1affff1a 	bne	40001c48 <net::tcp_handle(t_tcp*)+0x57c>
40001fdc:	eaffff76 	b	40001dbc <net::tcp_handle(t_tcp*)+0x6f0>
40001fe0:	e35e0000 	cmp	lr, #0
40001fe4:	1afffef7 	bne	40001bc8 <net::tcp_handle(t_tcp*)+0x4fc>
40001fe8:	e043c00c 	sub	ip, r3, ip
40001fec:	e35c0000 	cmp	ip, #0
40001ff0:	cafffef4 	bgt	40001bc8 <net::tcp_handle(t_tcp*)+0x4fc>
40001ff4:	e5920024 	ldr	r0, [r2, #36]	; 0x24
40001ff8:	e040c00b 	sub	ip, r0, fp
40001ffc:	e35c0000 	cmp	ip, #0
40002000:	ba000005 	blt	4000201c <net::tcp_handle(t_tcp*)+0x950>
40002004:	e150000b 	cmp	r0, fp
40002008:	1afffeee 	bne	40001bc8 <net::tcp_handle(t_tcp*)+0x4fc>
4000200c:	e5922028 	ldr	r2, [r2, #40]	; 0x28
40002010:	e0422003 	sub	r2, r2, r3
40002014:	e3520000 	cmp	r2, #0
40002018:	cafffeea 	bgt	40001bc8 <net::tcp_handle(t_tcp*)+0x4fc>
4000201c:	e59d3004 	ldr	r3, [sp, #4]
40002020:	e3a02050 	mov	r2, #80	; 0x50
40002024:	e0227492 	mla	r2, r2, r4, r7
40002028:	e582301c 	str	r3, [r2, #28]
4000202c:	e59d3000 	ldr	r3, [sp]
40002030:	e582b024 	str	fp, [r2, #36]	; 0x24
40002034:	e5823028 	str	r3, [r2, #40]	; 0x28
40002038:	eafffee2 	b	40001bc8 <net::tcp_handle(t_tcp*)+0x4fc>
4000203c:	e043e00c 	sub	lr, r3, ip
40002040:	e35e0000 	cmp	lr, #0
40002044:	d5823014 	strle	r3, [r2, #20]
40002048:	daffffe9 	ble	40001ff4 <net::tcp_handle(t_tcp*)+0x928>
4000204c:	e59d3000 	ldr	r3, [sp]
40002050:	e0430000 	sub	r0, r3, r0
40002054:	e3500000 	cmp	r0, #0
40002058:	dafffeda 	ble	40001bc8 <net::tcp_handle(t_tcp*)+0x4fc>
4000205c:	e58dc008 	str	ip, [sp, #8]
40002060:	e3a02050 	mov	r2, #80	; 0x50
40002064:	e0247492 	mla	r4, r2, r4, r7
40002068:	e3a02010 	mov	r2, #16
4000206c:	e28d1008 	add	r1, sp, #8
40002070:	e5cd2010 	strb	r2, [sp, #16]
40002074:	e1a00009 	mov	r0, r9
40002078:	e5942040 	ldr	r2, [r4, #64]	; 0x40
4000207c:	e58d200c 	str	r2, [sp, #12]
40002080:	eafffe90 	b	40001ac8 <net::tcp_handle(t_tcp*)+0x3fc>
40002084:	e2461001 	sub	r1, r6, #1
40002088:	e2811001 	add	r1, r1, #1
4000208c:	e0881001 	add	r1, r8, r1
40002090:	e4d80001 	ldrb	r0, [r8], #1
40002094:	e1510008 	cmp	r1, r8
40002098:	e4c20001 	strb	r0, [r2], #1
4000209c:	1afffffb 	bne	40002090 <net::tcp_handle(t_tcp*)+0x9c4>
400020a0:	eaffff8f 	b	40001ee4 <net::tcp_handle(t_tcp*)+0x818>
400020a4:	e5920018 	ldr	r0, [r2, #24]
400020a8:	e3a02010 	mov	r2, #16
400020ac:	e58d100c 	str	r1, [sp, #12]
400020b0:	e28d1008 	add	r1, sp, #8
400020b4:	e58d0008 	str	r0, [sp, #8]
400020b8:	e1a00009 	mov	r0, r9
400020bc:	e5cd2010 	strb	r2, [sp, #16]
400020c0:	eafffe80 	b	40001ac8 <net::tcp_handle(t_tcp*)+0x3fc>
400020c4:	e1a0a002 	mov	sl, r2
400020c8:	e1a0e008 	mov	lr, r8
400020cc:	e1a01006 	mov	r1, r6
400020d0:	eaffff70 	b	40001e98 <net::tcp_handle(t_tcp*)+0x7cc>
400020d4:	4005b25c 	andmi	fp, r5, ip, asr r2

400020d8 <net::udp_handle(t_udp*)>:
400020d8:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
400020dc:	e1a0e000 	mov	lr, r0
400020e0:	e1d002b4 	ldrh	r0, [r0, #36]	; 0x24
400020e4:	e30c4eb4 	movw	r4, #52916	; 0xceb4
400020e8:	e3444005 	movt	r4, #16389	; 0x4005
400020ec:	e24dd014 	sub	sp, sp, #20
400020f0:	e6bf0fb0 	rev16	r0, r0
400020f4:	e1a02004 	mov	r2, r4
400020f8:	e3a03000 	mov	r3, #0
400020fc:	e6ff0070 	uxth	r0, r0
40002100:	e300c5d4 	movw	ip, #1492	; 0x5d4
40002104:	e1d210b4 	ldrh	r1, [r2, #4]
40002108:	e082200c 	add	r2, r2, ip
4000210c:	e1510000 	cmp	r1, r0
40002110:	0a000005 	beq	4000212c <net::udp_handle(t_udp*)+0x54>
40002114:	e2833001 	add	r3, r3, #1
40002118:	e3530010 	cmp	r3, #16
4000211c:	1afffff8 	bne	40002104 <net::udp_handle(t_udp*)+0x2c>
40002120:	e28dd014 	add	sp, sp, #20
40002124:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
40002128:	ea0082da 	b	40022c98 <emac_free_pkt()>
4000212c:	e1de52b6 	ldrh	r5, [lr, #38]	; 0x26
40002130:	e30065d4 	movw	r6, #1492	; 0x5d4
40002134:	e28ec02a 	add	ip, lr, #42	; 0x2a
40002138:	e6bf5fb5 	rev16	r5, r5
4000213c:	e6ff5075 	uxth	r5, r5
40002140:	e2455008 	sub	r5, r5, #8
40002144:	e3550d17 	cmp	r5, #1472	; 0x5c0
40002148:	31a07005 	movcc	r7, r5
4000214c:	23a07d17 	movcs	r7, #1472	; 0x5c0
40002150:	e0264396 	mla	r6, r6, r3, r4
40002154:	e31c0003 	tst	ip, #3
40002158:	e2866010 	add	r6, r6, #16
4000215c:	1a000024 	bne	400021f4 <net::udp_handle(t_udp*)+0x11c>
40002160:	e3550003 	cmp	r5, #3
40002164:	9a000022 	bls	400021f4 <net::udp_handle(t_udp*)+0x11c>
40002168:	e2472004 	sub	r2, r7, #4
4000216c:	e352001f 	cmp	r2, #31
40002170:	9a00004b 	bls	400022a4 <net::udp_handle(t_udp*)+0x1cc>
40002174:	e086b007 	add	fp, r6, r7
40002178:	e28ea046 	add	sl, lr, #70	; 0x46
4000217c:	e08aa007 	add	sl, sl, r7
40002180:	e28e804a 	add	r8, lr, #74	; 0x4a
40002184:	e2869020 	add	r9, r6, #32
40002188:	e5181020 	ldr	r1, [r8, #-32]	; 0xffffffe0
4000218c:	f5d8f054 	pld	[r8, #84]	; 0x54
40002190:	e5091020 	str	r1, [r9, #-32]	; 0xffffffe0
40002194:	e518101c 	ldr	r1, [r8, #-28]	; 0xffffffe4
40002198:	e509101c 	str	r1, [r9, #-28]	; 0xffffffe4
4000219c:	e5181018 	ldr	r1, [r8, #-24]	; 0xffffffe8
400021a0:	e5091018 	str	r1, [r9, #-24]	; 0xffffffe8
400021a4:	e5181014 	ldr	r1, [r8, #-20]	; 0xffffffec
400021a8:	e5091014 	str	r1, [r9, #-20]	; 0xffffffec
400021ac:	e5181010 	ldr	r1, [r8, #-16]
400021b0:	e5091010 	str	r1, [r9, #-16]
400021b4:	e518100c 	ldr	r1, [r8, #-12]
400021b8:	e509100c 	str	r1, [r9, #-12]
400021bc:	e5181008 	ldr	r1, [r8, #-8]
400021c0:	e5091008 	str	r1, [r9, #-8]
400021c4:	e1a01008 	mov	r1, r8
400021c8:	e5180004 	ldr	r0, [r8, #-4]
400021cc:	e2888020 	add	r8, r8, #32
400021d0:	e5090004 	str	r0, [r9, #-4]
400021d4:	e04b0009 	sub	r0, fp, r9
400021d8:	e58d0004 	str	r0, [sp, #4]
400021dc:	e04a0008 	sub	r0, sl, r8
400021e0:	e350001f 	cmp	r0, #31
400021e4:	e1a00009 	mov	r0, r9
400021e8:	e2899020 	add	r9, r9, #32
400021ec:	8affffe5 	bhi	40002188 <net::udp_handle(t_udp*)+0xb0>
400021f0:	ea00002e 	b	400022b0 <net::udp_handle(t_udp*)+0x1d8>
400021f4:	e1a02006 	mov	r2, r6
400021f8:	e1a00007 	mov	r0, r7
400021fc:	e3500000 	cmp	r0, #0
40002200:	0a000004 	beq	40002218 <net::udp_handle(t_udp*)+0x140>
40002204:	e0820000 	add	r0, r2, r0
40002208:	e4dc1001 	ldrb	r1, [ip], #1
4000220c:	e4c21001 	strb	r1, [r2], #1
40002210:	e1520000 	cmp	r2, r0
40002214:	1afffffb 	bne	40002208 <net::udp_handle(t_udp*)+0x130>
40002218:	e28e201a 	add	r2, lr, #26
4000221c:	e3120003 	tst	r2, #3
40002220:	059e201a 	ldreq	r2, [lr, #26]
40002224:	0a000007 	beq	40002248 <net::udp_handle(t_udp*)+0x170>
40002228:	e28d000c 	add	r0, sp, #12
4000222c:	e28ec01e 	add	ip, lr, #30
40002230:	e4d21001 	ldrb	r1, [r2], #1
40002234:	e15c0002 	cmp	ip, r2
40002238:	e6ef1071 	uxtb	r1, r1
4000223c:	e4c01001 	strb	r1, [r0], #1
40002240:	1afffffa 	bne	40002230 <net::udp_handle(t_udp*)+0x158>
40002244:	e59d200c 	ldr	r2, [sp, #12]
40002248:	e30085d4 	movw	r8, #1492	; 0x5d4
4000224c:	e0080398 	mul	r8, r8, r3
40002250:	e0849008 	add	r9, r4, r8
40002254:	e5892008 	str	r2, [r9, #8]
40002258:	e1de32b2 	ldrh	r3, [lr, #34]	; 0x22
4000225c:	e589700c 	str	r7, [r9, #12]
40002260:	e2897e5d 	add	r7, r9, #1488	; 0x5d0
40002264:	e6bf3fb3 	rev16	r3, r3
40002268:	e1c730b0 	strh	r3, [r7]
4000226c:	eb008289 	bl	40022c98 <emac_free_pkt()>
40002270:	e794e008 	ldr	lr, [r4, r8]
40002274:	e35e0000 	cmp	lr, #0
40002278:	0a000007 	beq	4000229c <net::udp_handle(t_udp*)+0x1c4>
4000227c:	e1d730b0 	ldrh	r3, [r7]
40002280:	e1a01005 	mov	r1, r5
40002284:	e5992008 	ldr	r2, [r9, #8]
40002288:	e1a00006 	mov	r0, r6
4000228c:	e1a0c00e 	mov	ip, lr
40002290:	e28dd014 	add	sp, sp, #20
40002294:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
40002298:	e12fff1c 	bx	ip
4000229c:	e28dd014 	add	sp, sp, #20
400022a0:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
400022a4:	e58d7004 	str	r7, [sp, #4]
400022a8:	e1a00006 	mov	r0, r6
400022ac:	e1a0100c 	mov	r1, ip
400022b0:	e59d8004 	ldr	r8, [sp, #4]
400022b4:	e2489004 	sub	r9, r8, #4
400022b8:	e3c99003 	bic	r9, r9, #3
400022bc:	e2899004 	add	r9, r9, #4
400022c0:	e0819009 	add	r9, r1, r9
400022c4:	e4918004 	ldr	r8, [r1], #4
400022c8:	e1510009 	cmp	r1, r9
400022cc:	e4808004 	str	r8, [r0], #4
400022d0:	1afffffb 	bne	400022c4 <net::udp_handle(t_udp*)+0x1ec>
400022d4:	e3c22003 	bic	r2, r2, #3
400022d8:	e2070003 	and	r0, r7, #3
400022dc:	e2822004 	add	r2, r2, #4
400022e0:	e08cc002 	add	ip, ip, r2
400022e4:	e0862002 	add	r2, r6, r2
400022e8:	eaffffc3 	b	400021fc <net::udp_handle(t_udp*)+0x124>

400022ec <emac_eth_recv(unsigned char**)>:
400022ec:	e59f3058 	ldr	r3, [pc, #88]	; 4000234c <emac_eth_recv(unsigned char**)+0x60>
400022f0:	e1a02000 	mov	r2, r0
400022f4:	e5933000 	ldr	r3, [r3]
400022f8:	e2831a31 	add	r1, r3, #200704	; 0x31000
400022fc:	e5911800 	ldr	r1, [r1, #2048]	; 0x800
40002300:	e083c301 	add	ip, r3, r1, lsl #6
40002304:	e7933301 	ldr	r3, [r3, r1, lsl #6]
40002308:	e3530000 	cmp	r3, #0
4000230c:	ba00000c 	blt	40002344 <emac_eth_recv(unsigned char**)+0x58>
40002310:	e1a01823 	lsr	r1, r3, #16
40002314:	e7ed0853 	ubfx	r0, r3, #16, #14
40002318:	e3110dff 	tst	r1, #16320	; 0x3fc0
4000231c:	03a03001 	moveq	r3, #1
40002320:	13a03000 	movne	r3, #0
40002324:	e30017fc 	movw	r1, #2044	; 0x7fc
40002328:	e1500001 	cmp	r0, r1
4000232c:	83833001 	orrhi	r3, r3, #1
40002330:	e3530000 	cmp	r3, #0
40002334:	1a000002 	bne	40002344 <emac_eth_recv(unsigned char**)+0x58>
40002338:	e59c3008 	ldr	r3, [ip, #8]
4000233c:	e5823000 	str	r3, [r2]
40002340:	e12fff1e 	bx	lr
40002344:	e3a00000 	mov	r0, #0
40002348:	e12fff1e 	bx	lr
4000234c:	40062bf4 	strdmi	r2, [r6], -r4

40002350 <net::arp_handle(t_arp*)>:
40002350:	e1d030be 	ldrh	r3, [r0, #14]
40002354:	e3530c01 	cmp	r3, #256	; 0x100
40002358:	112fff1e 	bxne	lr
4000235c:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
40002360:	e1a04000 	mov	r4, r0
40002364:	e1d031b0 	ldrh	r3, [r0, #16]
40002368:	e24dd01c 	sub	sp, sp, #28
4000236c:	e3530008 	cmp	r3, #8
40002370:	1a000057 	bne	400024d4 <net::arp_handle(t_arp*)+0x184>
40002374:	e5d03012 	ldrb	r3, [r0, #18]
40002378:	e3530006 	cmp	r3, #6
4000237c:	1a000054 	bne	400024d4 <net::arp_handle(t_arp*)+0x184>
40002380:	e5d03013 	ldrb	r3, [r0, #19]
40002384:	e3530004 	cmp	r3, #4
40002388:	1a000051 	bne	400024d4 <net::arp_handle(t_arp*)+0x184>
4000238c:	e2806026 	add	r6, r0, #38	; 0x26
40002390:	eb008317 	bl	40022ff4 <net::acd_arp_reply(t_arp*)>
40002394:	e2163003 	ands	r3, r6, #3
40002398:	e58d300c 	str	r3, [sp, #12]
4000239c:	05942026 	ldreq	r2, [r4, #38]	; 0x26
400023a0:	0a000008 	beq	400023c8 <net::arp_handle(t_arp*)+0x78>
400023a4:	e1a02006 	mov	r2, r6
400023a8:	e28d1014 	add	r1, sp, #20
400023ac:	e284002a 	add	r0, r4, #42	; 0x2a
400023b0:	e4d23001 	ldrb	r3, [r2], #1
400023b4:	e1520000 	cmp	r2, r0
400023b8:	e6ef3073 	uxtb	r3, r3
400023bc:	e4c13001 	strb	r3, [r1], #1
400023c0:	1afffffa 	bne	400023b0 <net::arp_handle(t_arp*)+0x60>
400023c4:	e59d2014 	ldr	r2, [sp, #20]
400023c8:	e30a373c 	movw	r3, #42812	; 0xa73c
400023cc:	e3443005 	movt	r3, #16389	; 0x4005
400023d0:	e5938000 	ldr	r8, [r3]
400023d4:	e1580002 	cmp	r8, r2
400023d8:	0a00003f 	beq	400024dc <net::arp_handle(t_arp*)+0x18c>
400023dc:	e5933010 	ldr	r3, [r3, #16]
400023e0:	e1530002 	cmp	r3, r2
400023e4:	03a09001 	moveq	r9, #1
400023e8:	13a09000 	movne	r9, #0
400023ec:	13a01001 	movne	r1, #1
400023f0:	03a01000 	moveq	r1, #0
400023f4:	e284b01c 	add	fp, r4, #28
400023f8:	e284a016 	add	sl, r4, #22
400023fc:	e31b0003 	tst	fp, #3
40002400:	e1a0700b 	mov	r7, fp
40002404:	1a000037 	bne	400024e8 <net::arp_handle(t_arp*)+0x198>
40002408:	e594001c 	ldr	r0, [r4, #28]
4000240c:	e58d0004 	str	r0, [sp, #4]
40002410:	eb00836a 	bl	400231c0 <net::arp_find_record(unsigned long, net::arp::Flags)>
40002414:	e2505000 	subs	r5, r0, #0
40002418:	0a000024 	beq	400024b0 <net::arp_handle(t_arp*)+0x160>
4000241c:	e285100c 	add	r1, r5, #12
40002420:	e3a0e002 	mov	lr, #2
40002424:	e585e014 	str	lr, [r5, #20]
40002428:	e285c012 	add	ip, r5, #18
4000242c:	e1a03001 	mov	r3, r1
40002430:	e1a0000a 	mov	r0, sl
40002434:	e3a0e000 	mov	lr, #0
40002438:	e1c5e1b2 	strh	lr, [r5, #18]
4000243c:	e4d0e001 	ldrb	lr, [r0], #1
40002440:	e4c3e001 	strb	lr, [r3], #1
40002444:	e153000c 	cmp	r3, ip
40002448:	1afffffb 	bne	4000243c <net::arp_handle(t_arp*)+0xec>
4000244c:	e5953004 	ldr	r3, [r5, #4]
40002450:	e3530000 	cmp	r3, #0
40002454:	0a000015 	beq	400024b0 <net::arp_handle(t_arp*)+0x160>
40002458:	e1a00003 	mov	r0, r3
4000245c:	e4d1e001 	ldrb	lr, [r1], #1
40002460:	e151000c 	cmp	r1, ip
40002464:	e4c0e001 	strb	lr, [r0], #1
40002468:	1afffffb 	bne	4000245c <net::arp_handle(t_arp*)+0x10c>
4000246c:	e58d3008 	str	r3, [sp, #8]
40002470:	e3a01000 	mov	r1, #0
40002474:	e5c31018 	strb	r1, [r3, #24]
40002478:	e283000e 	add	r0, r3, #14
4000247c:	e5c31019 	strb	r1, [r3, #25]
40002480:	e3a01014 	mov	r1, #20
40002484:	eb007bd0 	bl	400213cc <net::net_chksum(void const*, unsigned long)>
40002488:	e59d3008 	ldr	r3, [sp, #8]
4000248c:	e1c301b8 	strh	r0, [r3, #24]
40002490:	e1c500d4 	ldrd	r0, [r5, #4]
40002494:	eb0081e1 	bl	40022c20 <emac_eth_send(void*, unsigned long)>
40002498:	e5950004 	ldr	r0, [r5, #4]
4000249c:	e3500000 	cmp	r0, #0
400024a0:	0a000000 	beq	400024a8 <net::arp_handle(t_arp*)+0x158>
400024a4:	eb00abc9 	bl	4002d3d0 <operator delete[](void*)>
400024a8:	e3a03000 	mov	r3, #0
400024ac:	e5853004 	str	r3, [r5, #4]
400024b0:	e1d431b4 	ldrh	r3, [r4, #20]
400024b4:	e3530c01 	cmp	r3, #256	; 0x100
400024b8:	1a000005 	bne	400024d4 <net::arp_handle(t_arp*)+0x184>
400024bc:	e59d3004 	ldr	r3, [sp, #4]
400024c0:	e1580003 	cmp	r8, r3
400024c4:	03a09000 	moveq	r9, #0
400024c8:	12099001 	andne	r9, r9, #1
400024cc:	e3590000 	cmp	r9, #0
400024d0:	1a000017 	bne	40002534 <net::arp_handle(t_arp*)+0x1e4>
400024d4:	e28dd01c 	add	sp, sp, #28
400024d8:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
400024dc:	e3a01000 	mov	r1, #0
400024e0:	e3a09001 	mov	r9, #1
400024e4:	eaffffc2 	b	400023f4 <net::arp_handle(t_arp*)+0xa4>
400024e8:	e1a0000b 	mov	r0, fp
400024ec:	e28d5014 	add	r5, sp, #20
400024f0:	e284e020 	add	lr, r4, #32
400024f4:	e1a0c00b 	mov	ip, fp
400024f8:	e4dc3001 	ldrb	r3, [ip], #1
400024fc:	e15e000c 	cmp	lr, ip
40002500:	e6ef3073 	uxtb	r3, r3
40002504:	e4c53001 	strb	r3, [r5], #1
40002508:	1afffffa 	bne	400024f8 <net::arp_handle(t_arp*)+0x1a8>
4000250c:	e59d3014 	ldr	r3, [sp, #20]
40002510:	e28dc014 	add	ip, sp, #20
40002514:	e58d3004 	str	r3, [sp, #4]
40002518:	e4d03001 	ldrb	r3, [r0], #1
4000251c:	e15e0000 	cmp	lr, r0
40002520:	e6ef3073 	uxtb	r3, r3
40002524:	e4cc3001 	strb	r3, [ip], #1
40002528:	1afffffa 	bne	40002518 <net::arp_handle(t_arp*)+0x1c8>
4000252c:	e59d0014 	ldr	r0, [sp, #20]
40002530:	eaffffb6 	b	40002410 <net::arp_handle(t_arp*)+0xc0>
40002534:	e3020bfc 	movw	r0, #11260	; 0x2bfc
40002538:	e2843006 	add	r3, r4, #6
4000253c:	e3440006 	movt	r0, #16390	; 0x4006
40002540:	e284e00c 	add	lr, r4, #12
40002544:	e1a01000 	mov	r1, r0
40002548:	e4d3c001 	ldrb	ip, [r3], #1
4000254c:	e15e0003 	cmp	lr, r3
40002550:	e4c1c001 	strb	ip, [r1], #1
40002554:	1afffffb 	bne	40002548 <net::arp_handle(t_arp*)+0x1f8>
40002558:	e59d300c 	ldr	r3, [sp, #12]
4000255c:	e3530000 	cmp	r3, #0
40002560:	0594c026 	ldreq	ip, [r4, #38]	; 0x26
40002564:	0a000007 	beq	40002588 <net::arp_handle(t_arp*)+0x238>
40002568:	e28d1014 	add	r1, sp, #20
4000256c:	e284c02a 	add	ip, r4, #42	; 0x2a
40002570:	e4d63001 	ldrb	r3, [r6], #1
40002574:	e156000c 	cmp	r6, ip
40002578:	e6ef3073 	uxtb	r3, r3
4000257c:	e4c13001 	strb	r3, [r1], #1
40002580:	1afffffa 	bne	40002570 <net::arp_handle(t_arp*)+0x220>
40002584:	e59dc014 	ldr	ip, [sp, #20]
40002588:	e59f3040 	ldr	r3, [pc, #64]	; 400025d0 <net::arp_handle(t_arp*)+0x280>
4000258c:	e4da1001 	ldrb	r1, [sl], #1
40002590:	e15a000b 	cmp	sl, fp
40002594:	e4c31001 	strb	r1, [r3], #1
40002598:	1afffffb 	bne	4000258c <net::arp_handle(t_arp*)+0x23c>
4000259c:	e59f3030 	ldr	r3, [pc, #48]	; 400025d4 <net::arp_handle(t_arp*)+0x284>
400025a0:	e2844020 	add	r4, r4, #32
400025a4:	e4d72001 	ldrb	r2, [r7], #1
400025a8:	e1540007 	cmp	r4, r7
400025ac:	e4c32001 	strb	r2, [r3], #1
400025b0:	1afffffb 	bne	400025a4 <net::arp_handle(t_arp*)+0x254>
400025b4:	e580c01c 	str	ip, [r0, #28]
400025b8:	e3020bfc 	movw	r0, #11260	; 0x2bfc
400025bc:	e3440006 	movt	r0, #16390	; 0x4006
400025c0:	e3a0103c 	mov	r1, #60	; 0x3c
400025c4:	e28dd01c 	add	sp, sp, #28
400025c8:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
400025cc:	ea008193 	b	40022c20 <emac_eth_send(void*, unsigned long)>
400025d0:	40062c1c 	andmi	r2, r6, ip, lsl ip
400025d4:	40062c22 	andmi	r2, r6, r2, lsr #24

400025d8 <net::icmp_handle(t_icmp*)>:
400025d8:	e5d03022 	ldrb	r3, [r0, #34]	; 0x22
400025dc:	e3530008 	cmp	r3, #8
400025e0:	112fff1e 	bxne	lr
400025e4:	e92d4070 	push	{r4, r5, r6, lr}
400025e8:	e1a04000 	mov	r4, r0
400025ec:	e5d03023 	ldrb	r3, [r0, #35]	; 0x23
400025f0:	e24dd008 	sub	sp, sp, #8
400025f4:	e3530000 	cmp	r3, #0
400025f8:	1a00004f 	bne	4000273c <net::icmp_handle(t_icmp*)+0x164>
400025fc:	e2803006 	add	r3, r0, #6
40002600:	e1a02000 	mov	r2, r0
40002604:	e1a01003 	mov	r1, r3
40002608:	e4d10001 	ldrb	r0, [r1], #1
4000260c:	e4c20001 	strb	r0, [r2], #1
40002610:	e1520003 	cmp	r2, r3
40002614:	1afffffb 	bne	40002608 <net::icmp_handle(t_icmp*)+0x30>
40002618:	e59f2154 	ldr	r2, [pc, #340]	; 40002774 <net::icmp_handle(t_icmp*)+0x19c>
4000261c:	e284000c 	add	r0, r4, #12
40002620:	e4d21001 	ldrb	r1, [r2], #1
40002624:	e4c31001 	strb	r1, [r3], #1
40002628:	e1530000 	cmp	r3, r0
4000262c:	1afffffb 	bne	40002620 <net::icmp_handle(t_icmp*)+0x48>
40002630:	e1d431b2 	ldrh	r3, [r4, #18]
40002634:	e284101e 	add	r1, r4, #30
40002638:	e3110003 	tst	r1, #3
4000263c:	e1e03003 	mvn	r3, r3
40002640:	0594c01e 	ldreq	ip, [r4, #30]
40002644:	e1c431b2 	strh	r3, [r4, #18]
40002648:	0a000008 	beq	40002670 <net::icmp_handle(t_icmp*)+0x98>
4000264c:	e1a02001 	mov	r2, r1
40002650:	e28d0004 	add	r0, sp, #4
40002654:	e284c022 	add	ip, r4, #34	; 0x22
40002658:	e4d23001 	ldrb	r3, [r2], #1
4000265c:	e152000c 	cmp	r2, ip
40002660:	e6ef3073 	uxtb	r3, r3
40002664:	e4c03001 	strb	r3, [r0], #1
40002668:	1afffffa 	bne	40002658 <net::icmp_handle(t_icmp*)+0x80>
4000266c:	e59dc004 	ldr	ip, [sp, #4]
40002670:	e284001a 	add	r0, r4, #26
40002674:	e1a03000 	mov	r3, r0
40002678:	e4d32001 	ldrb	r2, [r3], #1
4000267c:	e1530001 	cmp	r3, r1
40002680:	e5c32003 	strb	r2, [r3, #3]
40002684:	1afffffb 	bne	40002678 <net::icmp_handle(t_icmp*)+0xa0>
40002688:	e30a373c 	movw	r3, #42812	; 0xa73c
4000268c:	e200e003 	and	lr, r0, #3
40002690:	e3443005 	movt	r3, #16389	; 0x4005
40002694:	e5932010 	ldr	r2, [r3, #16]
40002698:	e152000c 	cmp	r2, ip
4000269c:	0a000028 	beq	40002744 <net::icmp_handle(t_icmp*)+0x16c>
400026a0:	e5933000 	ldr	r3, [r3]
400026a4:	e35e0000 	cmp	lr, #0
400026a8:	0584301a 	streq	r3, [r4, #26]
400026ac:	0a000007 	beq	400026d0 <net::icmp_handle(t_icmp*)+0xf8>
400026b0:	e58d3004 	str	r3, [sp, #4]
400026b4:	e28dc004 	add	ip, sp, #4
400026b8:	e1a03000 	mov	r3, r0
400026bc:	e4dc2001 	ldrb	r2, [ip], #1
400026c0:	e6ef2072 	uxtb	r2, r2
400026c4:	e4c32001 	strb	r2, [r3], #1
400026c8:	e1530001 	cmp	r3, r1
400026cc:	1afffffa 	bne	400026bc <net::icmp_handle(t_icmp*)+0xe4>
400026d0:	e3a05000 	mov	r5, #0
400026d4:	e284600e 	add	r6, r4, #14
400026d8:	e5c45018 	strb	r5, [r4, #24]
400026dc:	e3a01014 	mov	r1, #20
400026e0:	e5c45019 	strb	r5, [r4, #25]
400026e4:	e1a00006 	mov	r0, r6
400026e8:	eb007b37 	bl	400213cc <net::net_chksum(void const*, unsigned long)>
400026ec:	e1d411b0 	ldrh	r1, [r4, #16]
400026f0:	e1a03000 	mov	r3, r0
400026f4:	e1c431b8 	strh	r3, [r4, #24]
400026f8:	e1a00006 	mov	r0, r6
400026fc:	e6bf1fb1 	rev16	r1, r1
40002700:	e5c45022 	strb	r5, [r4, #34]	; 0x22
40002704:	e6ff1071 	uxth	r1, r1
40002708:	e5c45024 	strb	r5, [r4, #36]	; 0x24
4000270c:	e5c45025 	strb	r5, [r4, #37]	; 0x25
40002710:	eb007b2d 	bl	400213cc <net::net_chksum(void const*, unsigned long)>
40002714:	e1d411b0 	ldrh	r1, [r4, #16]
40002718:	e1a03000 	mov	r3, r0
4000271c:	e1c432b4 	strh	r3, [r4, #36]	; 0x24
40002720:	e1a00004 	mov	r0, r4
40002724:	e6bf1fb1 	rev16	r1, r1
40002728:	e6ff1071 	uxth	r1, r1
4000272c:	e281100e 	add	r1, r1, #14
40002730:	e28dd008 	add	sp, sp, #8
40002734:	e8bd4070 	pop	{r4, r5, r6, lr}
40002738:	ea008138 	b	40022c20 <emac_eth_send(void*, unsigned long)>
4000273c:	e28dd008 	add	sp, sp, #8
40002740:	e8bd8070 	pop	{r4, r5, r6, pc}
40002744:	e35e0000 	cmp	lr, #0
40002748:	0584c01a 	streq	ip, [r4, #26]
4000274c:	0affffdf 	beq	400026d0 <net::icmp_handle(t_icmp*)+0xf8>
40002750:	e58dc004 	str	ip, [sp, #4]
40002754:	e1a03000 	mov	r3, r0
40002758:	e28dc004 	add	ip, sp, #4
4000275c:	e4dc2001 	ldrb	r2, [ip], #1
40002760:	e6ef2072 	uxtb	r2, r2
40002764:	e4c32001 	strb	r2, [r3], #1
40002768:	e1530001 	cmp	r3, r1
4000276c:	1afffffa 	bne	4000275c <net::icmp_handle(t_icmp*)+0x184>
40002770:	eaffffd6 	b	400026d0 <net::icmp_handle(t_icmp*)+0xf8>
40002774:	4005a750 	andmi	sl, r5, r0, asr r7

40002778 <hang>:
40002778:	eafffffe 	b	40002778 <hang>

4000277c <_init_core>:
4000277c:	e321f0d3 	msr	CPSR_c, #211	; 0xd3
40002780:	ee100fb0 	mrc	15, 0, r0, cr0, cr0, {5}
40002784:	e2100003 	ands	r0, r0, #3
40002788:	e3500001 	cmp	r0, #1
4000278c:	059f0024 	ldreq	r0, [pc, #36]	; 400027b8 <_init_core+0x3c>
40002790:	0a000003 	beq	400027a4 <_init_core+0x28>
40002794:	e3500002 	cmp	r0, #2
40002798:	059f001c 	ldreq	r0, [pc, #28]	; 400027bc <_init_core+0x40>
4000279c:	0a000000 	beq	400027a4 <_init_core+0x28>
400027a0:	e59f0018 	ldr	r0, [pc, #24]	; 400027c0 <_init_core+0x44>
400027a4:	e1a0d000 	mov	sp, r0
400027a8:	eb00abf5 	bl	4002d784 <vfp_init>
400027ac:	ebfff8e5 	bl	40000b48 <mmu_enable>
400027b0:	e59f300c 	ldr	r3, [pc, #12]	; 400027c4 <_init_core+0x48>
400027b4:	e12fff33 	blx	r3
400027b8:	403b8000 	eorsmi	r8, fp, r0
400027bc:	403c8000 	eorsmi	r8, ip, r0
400027c0:	403d8000 	eorsmi	r8, sp, r0
400027c4:	4002951c 	andmi	r9, r2, ip, lsl r5

400027c8 <DisplaySet::SetSleep(bool)>:
400027c8:	e12fff1e 	bx	lr

400027cc <DisplaySet::SetContrast(unsigned char)>:
400027cc:	e12fff1e 	bx	lr

400027d0 <staticCallbackFunction(artnet::TimeCode const*)>:
400027d0:	e12fff1e 	bx	lr

400027d4 <TCNetReader::staticCallbackFunctionHandler(tcnet::TimeCode const*)>:
400027d4:	e3043058 	movw	r3, #16472	; 0x4058
400027d8:	e1a01000 	mov	r1, r0
400027dc:	e3443003 	movt	r3, #16387	; 0x4003
400027e0:	e5930000 	ldr	r0, [r3]
400027e4:	ea004670 	b	400141ac <TCNetReader::Handler(tcnet::TimeCode const*)>

400027e8 <ArtNetReader::staticCallbackFunction(artnet::TimeCode const*)>:
400027e8:	e304305c 	movw	r3, #16476	; 0x405c
400027ec:	e1a01000 	mov	r1, r0
400027f0:	e3443003 	movt	r3, #16387	; 0x4003
400027f4:	e5930000 	ldr	r0, [r3]
400027f8:	ea003574 	b	4000fdd0 <ArtNetReader::Handler(artnet::TimeCode const*)>

400027fc <AppleMidi::staticCallbackFunctionMidiMessage(unsigned char const*, unsigned long, unsigned long, unsigned short)>:
400027fc:	e304c070 	movw	ip, #16496	; 0x4070
40002800:	e344c003 	movt	ip, #16387	; 0x4003
40002804:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40002808:	e24dd00c 	sub	sp, sp, #12
4000280c:	e1a0e000 	mov	lr, r0
40002810:	e59c0000 	ldr	r0, [ip]
40002814:	e1a0c002 	mov	ip, r2
40002818:	e58d3000 	str	r3, [sp]
4000281c:	e1a02001 	mov	r2, r1
40002820:	e1a0300c 	mov	r3, ip
40002824:	e1a0100e 	mov	r1, lr
40002828:	eb00523d 	bl	40017124 <AppleMidi::InputMidiMessage(unsigned char const*, unsigned long, unsigned long, unsigned short)>
4000282c:	e28dd00c 	add	sp, sp, #12
40002830:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

40002834 <AppleMidi::staticCallbackFunctionControlMessage(unsigned char const*, unsigned long, unsigned long, unsigned short)>:
40002834:	e304c070 	movw	ip, #16496	; 0x4070
40002838:	e344c003 	movt	ip, #16387	; 0x4003
4000283c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40002840:	e24dd00c 	sub	sp, sp, #12
40002844:	e1a0e000 	mov	lr, r0
40002848:	e59c0000 	ldr	r0, [ip]
4000284c:	e1a0c002 	mov	ip, r2
40002850:	e58d3000 	str	r3, [sp]
40002854:	e1a02001 	mov	r2, r1
40002858:	e1a0300c 	mov	r3, ip
4000285c:	e1a0100e 	mov	r1, lr
40002860:	eb0051e1 	bl	40016fec <AppleMidi::InputControlMessage(unsigned char const*, unsigned long, unsigned long, unsigned short)>
40002864:	e28dd00c 	add	sp, sp, #12
40002868:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

4000286c <LtcOscServer::staticCallbackFunction(unsigned char const*, unsigned long, unsigned long, unsigned short)>:
4000286c:	e304c064 	movw	ip, #16484	; 0x4064
40002870:	e344c003 	movt	ip, #16387	; 0x4003
40002874:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40002878:	e24dd00c 	sub	sp, sp, #12
4000287c:	e1a0e000 	mov	lr, r0
40002880:	e59c0000 	ldr	r0, [ip]
40002884:	e1a0c002 	mov	ip, r2
40002888:	e58d3000 	str	r3, [sp]
4000288c:	e1a02001 	mov	r2, r1
40002890:	e1a0300c 	mov	r3, ip
40002894:	e1a0100e 	mov	r1, lr
40002898:	eb000b1d 	bl	40005514 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)>
4000289c:	e28dd00c 	add	sp, sp, #12
400028a0:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

400028a4 <LLRPDevice::staticCallbackFunction(unsigned char const*, unsigned long, unsigned long, unsigned short)>:
400028a4:	e2503000 	subs	r3, r0, #0
400028a8:	e3041000 	movw	r1, #16384	; 0x4000
400028ac:	e3441003 	movt	r1, #16387	; 0x4003
400028b0:	03043004 	movweq	r3, #16388	; 0x4004
400028b4:	03443003 	movteq	r3, #16387	; 0x4003
400028b8:	1304c004 	movwne	ip, #16388	; 0x4004
400028bc:	e5910000 	ldr	r0, [r1]
400028c0:	13041008 	movwne	r1, #16392	; 0x4008
400028c4:	05933000 	ldreq	r3, [r3]
400028c8:	1344c003 	movtne	ip, #16387	; 0x4003
400028cc:	13441003 	movtne	r1, #16387	; 0x4003
400028d0:	158c3000 	strne	r3, [ip]
400028d4:	15812000 	strne	r2, [r1]
400028d8:	e593302a 	ldr	r3, [r3, #42]	; 0x2a
400028dc:	e6bf2f33 	rev	r2, r3
400028e0:	e3530401 	cmp	r3, #16777216	; 0x1000000
400028e4:	0a000002 	beq	400028f4 <LLRPDevice::staticCallbackFunction(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x50>
400028e8:	e3520003 	cmp	r2, #3
400028ec:	112fff1e 	bxne	lr
400028f0:	ea0064c1 	b	4001bbfc <LLRPDevice::HandleRdmCommand()>
400028f4:	ea006454 	b	4001ba4c <LLRPDevice::HandleRequestMessage()>

400028f8 <Display::PutString(char const*) [clone .isra.0]>:
400028f8:	e2503000 	subs	r3, r0, #0
400028fc:	012fff1e 	bxeq	lr
40002900:	e5933000 	ldr	r3, [r3]
40002904:	e5933018 	ldr	r3, [r3, #24]
40002908:	e12fff13 	bx	r3

4000290c <Display::ClearLine(unsigned long) [clone .isra.0]>:
4000290c:	e2503000 	subs	r3, r0, #0
40002910:	012fff1e 	bxeq	lr
40002914:	e5933000 	ldr	r3, [r3]
40002918:	e5933010 	ldr	r3, [r3, #16]
4000291c:	e12fff13 	bx	r3

40002920 <RDMNetDevice::~RDMNetDevice()>:
40002920:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40002924:	e1a05000 	mov	r5, r0
40002928:	e59f30ec 	ldr	r3, [pc, #236]	; 40002a1c <RDMNetDevice::~RDMNetDevice()+0xfc>
4000292c:	e30f0fef 	movw	r0, #65519	; 0xffef
40002930:	e34805fa 	movt	r0, #34298	; 0x85fa
40002934:	e3a04000 	mov	r4, #0
40002938:	e5853000 	str	r3, [r5]
4000293c:	eb007a4f 	bl	40021280 <net::igmp_leave(unsigned long)>
40002940:	e30105c1 	movw	r0, #5569	; 0x15c1
40002944:	eb007e57 	bl	400222a8 <net::udp_end(unsigned short)>
40002948:	e1d5c6b4 	ldrh	ip, [r5, #100]	; 0x64
4000294c:	e3043000 	movw	r3, #16384	; 0x4000
40002950:	e3443003 	movt	r3, #16387	; 0x4003
40002954:	e59f20c4 	ldr	r2, [pc, #196]	; 40002a20 <RDMNetDevice::~RDMNetDevice()+0x100>
40002958:	e35c0000 	cmp	ip, #0
4000295c:	e5834000 	str	r4, [r3]
40002960:	e5953060 	ldr	r3, [r5, #96]	; 0x60
40002964:	e5852000 	str	r2, [r5]
40002968:	0a00000f 	beq	400029ac <RDMNetDevice::~RDMNetDevice()+0x8c>
4000296c:	e1a07004 	mov	r7, r4
40002970:	e7932104 	ldr	r2, [r3, r4, lsl #2]
40002974:	e1a06104 	lsl	r6, r4, #2
40002978:	e2844001 	add	r4, r4, #1
4000297c:	e0831006 	add	r1, r3, r6
40002980:	e2520000 	subs	r0, r2, #0
40002984:	0a000005 	beq	400029a0 <RDMNetDevice::~RDMNetDevice()+0x80>
40002988:	e5923000 	ldr	r3, [r2]
4000298c:	e5933004 	ldr	r3, [r3, #4]
40002990:	e12fff33 	blx	r3
40002994:	e5953060 	ldr	r3, [r5, #96]	; 0x60
40002998:	e1d5c6b4 	ldrh	ip, [r5, #100]	; 0x64
4000299c:	e0831006 	add	r1, r3, r6
400029a0:	e15c0004 	cmp	ip, r4
400029a4:	e5817000 	str	r7, [r1]
400029a8:	8afffff0 	bhi	40002970 <RDMNetDevice::~RDMNetDevice()+0x50>
400029ac:	e3530000 	cmp	r3, #0
400029b0:	0a000001 	beq	400029bc <RDMNetDevice::~RDMNetDevice()+0x9c>
400029b4:	e1a00003 	mov	r0, r3
400029b8:	eb00aa84 	bl	4002d3d0 <operator delete[](void*)>
400029bc:	e5d5105c 	ldrb	r1, [r5, #92]	; 0x5c
400029c0:	e5952058 	ldr	r2, [r5, #88]	; 0x58
400029c4:	e3510000 	cmp	r1, #0
400029c8:	0a00000d 	beq	40002a04 <RDMNetDevice::~RDMNetDevice()+0xe4>
400029cc:	e3a04000 	mov	r4, #0
400029d0:	e1a06004 	mov	r6, r4
400029d4:	e7923104 	ldr	r3, [r2, r4, lsl #2]
400029d8:	e2530000 	subs	r0, r3, #0
400029dc:	0a000005 	beq	400029f8 <RDMNetDevice::~RDMNetDevice()+0xd8>
400029e0:	e5933000 	ldr	r3, [r3]
400029e4:	e5933004 	ldr	r3, [r3, #4]
400029e8:	e12fff33 	blx	r3
400029ec:	e5952058 	ldr	r2, [r5, #88]	; 0x58
400029f0:	e7826104 	str	r6, [r2, r4, lsl #2]
400029f4:	e5d5105c 	ldrb	r1, [r5, #92]	; 0x5c
400029f8:	e2844001 	add	r4, r4, #1
400029fc:	e1510004 	cmp	r1, r4
40002a00:	8afffff3 	bhi	400029d4 <RDMNetDevice::~RDMNetDevice()+0xb4>
40002a04:	e3520000 	cmp	r2, #0
40002a08:	0a000001 	beq	40002a14 <RDMNetDevice::~RDMNetDevice()+0xf4>
40002a0c:	e1a00002 	mov	r0, r2
40002a10:	eb00aa6e 	bl	4002d3d0 <operator delete[](void*)>
40002a14:	e1a00005 	mov	r0, r5
40002a18:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40002a1c:	4002dc0c 	andmi	sp, r2, ip, lsl #24
40002a20:	40031edc 	ldrdmi	r1, [r3], -ip

40002a24 <RDMNetDevice::~RDMNetDevice()>:
40002a24:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40002a28:	e1a05000 	mov	r5, r0
40002a2c:	e59f30f8 	ldr	r3, [pc, #248]	; 40002b2c <RDMNetDevice::~RDMNetDevice()+0x108>
40002a30:	e30f0fef 	movw	r0, #65519	; 0xffef
40002a34:	e34805fa 	movt	r0, #34298	; 0x85fa
40002a38:	e3a04000 	mov	r4, #0
40002a3c:	e5853000 	str	r3, [r5]
40002a40:	eb007a0e 	bl	40021280 <net::igmp_leave(unsigned long)>
40002a44:	e30105c1 	movw	r0, #5569	; 0x15c1
40002a48:	eb007e16 	bl	400222a8 <net::udp_end(unsigned short)>
40002a4c:	e1d5c6b4 	ldrh	ip, [r5, #100]	; 0x64
40002a50:	e3043000 	movw	r3, #16384	; 0x4000
40002a54:	e3443003 	movt	r3, #16387	; 0x4003
40002a58:	e59f20d0 	ldr	r2, [pc, #208]	; 40002b30 <RDMNetDevice::~RDMNetDevice()+0x10c>
40002a5c:	e35c0000 	cmp	ip, #0
40002a60:	e5834000 	str	r4, [r3]
40002a64:	e5953060 	ldr	r3, [r5, #96]	; 0x60
40002a68:	e5852000 	str	r2, [r5]
40002a6c:	0a00000f 	beq	40002ab0 <RDMNetDevice::~RDMNetDevice()+0x8c>
40002a70:	e1a07004 	mov	r7, r4
40002a74:	e7932104 	ldr	r2, [r3, r4, lsl #2]
40002a78:	e1a06104 	lsl	r6, r4, #2
40002a7c:	e2844001 	add	r4, r4, #1
40002a80:	e0831006 	add	r1, r3, r6
40002a84:	e2520000 	subs	r0, r2, #0
40002a88:	0a000005 	beq	40002aa4 <RDMNetDevice::~RDMNetDevice()+0x80>
40002a8c:	e5923000 	ldr	r3, [r2]
40002a90:	e5933004 	ldr	r3, [r3, #4]
40002a94:	e12fff33 	blx	r3
40002a98:	e5953060 	ldr	r3, [r5, #96]	; 0x60
40002a9c:	e1d5c6b4 	ldrh	ip, [r5, #100]	; 0x64
40002aa0:	e0831006 	add	r1, r3, r6
40002aa4:	e15c0004 	cmp	ip, r4
40002aa8:	e5817000 	str	r7, [r1]
40002aac:	8afffff0 	bhi	40002a74 <RDMNetDevice::~RDMNetDevice()+0x50>
40002ab0:	e3530000 	cmp	r3, #0
40002ab4:	0a000001 	beq	40002ac0 <RDMNetDevice::~RDMNetDevice()+0x9c>
40002ab8:	e1a00003 	mov	r0, r3
40002abc:	eb00aa43 	bl	4002d3d0 <operator delete[](void*)>
40002ac0:	e5d5105c 	ldrb	r1, [r5, #92]	; 0x5c
40002ac4:	e5952058 	ldr	r2, [r5, #88]	; 0x58
40002ac8:	e3510000 	cmp	r1, #0
40002acc:	0a00000d 	beq	40002b08 <RDMNetDevice::~RDMNetDevice()+0xe4>
40002ad0:	e3a04000 	mov	r4, #0
40002ad4:	e1a06004 	mov	r6, r4
40002ad8:	e7923104 	ldr	r3, [r2, r4, lsl #2]
40002adc:	e2530000 	subs	r0, r3, #0
40002ae0:	0a000005 	beq	40002afc <RDMNetDevice::~RDMNetDevice()+0xd8>
40002ae4:	e5933000 	ldr	r3, [r3]
40002ae8:	e5933004 	ldr	r3, [r3, #4]
40002aec:	e12fff33 	blx	r3
40002af0:	e5952058 	ldr	r2, [r5, #88]	; 0x58
40002af4:	e7826104 	str	r6, [r2, r4, lsl #2]
40002af8:	e5d5105c 	ldrb	r1, [r5, #92]	; 0x5c
40002afc:	e2844001 	add	r4, r4, #1
40002b00:	e1510004 	cmp	r1, r4
40002b04:	8afffff3 	bhi	40002ad8 <RDMNetDevice::~RDMNetDevice()+0xb4>
40002b08:	e3520000 	cmp	r2, #0
40002b0c:	0a000001 	beq	40002b18 <RDMNetDevice::~RDMNetDevice()+0xf4>
40002b10:	e1a00002 	mov	r0, r2
40002b14:	eb00aa2d 	bl	4002d3d0 <operator delete[](void*)>
40002b18:	e1a00005 	mov	r0, r5
40002b1c:	e3a010a8 	mov	r1, #168	; 0xa8
40002b20:	eb00aa2b 	bl	4002d3d4 <operator delete(void*, unsigned int)>
40002b24:	e1a00005 	mov	r0, r5
40002b28:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40002b2c:	4002dc0c 	andmi	sp, r2, ip, lsl #24
40002b30:	40031edc 	ldrdmi	r1, [r3], -ip

40002b34 <TCNet::Print()>:
40002b34:	e92d4010 	push	{r4, lr}
40002b38:	e1a04000 	mov	r4, r0
40002b3c:	e30d0950 	movw	r0, #55632	; 0xd950
40002b40:	e3440002 	movt	r0, #16386	; 0x4002
40002b44:	eb00a853 	bl	4002cc98 <puts>
40002b48:	e30d0958 	movw	r0, #55640	; 0xd958
40002b4c:	e284103f 	add	r1, r4, #63	; 0x3f
40002b50:	e3440002 	movt	r0, #16386	; 0x4002
40002b54:	eb00a80d 	bl	4002cb90 <printf>
40002b58:	e5941030 	ldr	r1, [r4, #48]	; 0x30
40002b5c:	e3510007 	cmp	r1, #7
40002b60:	979ff101 	ldrls	pc, [pc, r1, lsl #2]
40002b64:	ea000029 	b	40002c10 <TCNet::Print()+0xdc>
40002b68:	40002b88 	andmi	r2, r0, r8, lsl #23
40002b6c:	40002b88 	andmi	r2, r0, r8, lsl #23
40002b70:	40002b88 	andmi	r2, r0, r8, lsl #23
40002b74:	40002b88 	andmi	r2, r0, r8, lsl #23
40002b78:	40002be0 	andmi	r2, r0, r0, ror #23
40002b7c:	40002be8 	andmi	r2, r0, r8, ror #23
40002b80:	40002bd0 	ldrdmi	r2, [r0], -r0
40002b84:	40002bd8 	ldrdmi	r2, [r0], -r8
40002b88:	e2811031 	add	r1, r1, #49	; 0x31
40002b8c:	e6ef1071 	uxtb	r1, r1
40002b90:	e30d0968 	movw	r0, #55656	; 0xd968
40002b94:	e3440002 	movt	r0, #16386	; 0x4002
40002b98:	eb00a7fc 	bl	4002cb90 <printf>
40002b9c:	e5d43035 	ldrb	r3, [r4, #53]	; 0x35
40002ba0:	e3530000 	cmp	r3, #0
40002ba4:	0a000011 	beq	40002bf0 <TCNet::Print()+0xbc>
40002ba8:	e30d0970 	movw	r0, #55664	; 0xd970
40002bac:	e3440002 	movt	r0, #16386	; 0x4002
40002bb0:	eb00a838 	bl	4002cc98 <puts>
40002bb4:	e5943024 	ldr	r3, [r4, #36]	; 0x24
40002bb8:	e30d097c 	movw	r0, #55676	; 0xd97c
40002bbc:	e5942020 	ldr	r2, [r4, #32]
40002bc0:	e5941030 	ldr	r1, [r4, #48]	; 0x30
40002bc4:	e3440002 	movt	r0, #16386	; 0x4002
40002bc8:	e8bd4010 	pop	{r4, lr}
40002bcc:	ea00a7ef 	b	4002cb90 <printf>
40002bd0:	e3a0104d 	mov	r1, #77	; 0x4d
40002bd4:	eaffffed 	b	40002b90 <TCNet::Print()+0x5c>
40002bd8:	e3a01043 	mov	r1, #67	; 0x43
40002bdc:	eaffffeb 	b	40002b90 <TCNet::Print()+0x5c>
40002be0:	e3a01041 	mov	r1, #65	; 0x41
40002be4:	eaffffe9 	b	40002b90 <TCNet::Print()+0x5c>
40002be8:	e3a01042 	mov	r1, #66	; 0x42
40002bec:	eaffffe7 	b	40002b90 <TCNet::Print()+0x5c>
40002bf0:	e5d42034 	ldrb	r2, [r4, #52]	; 0x34
40002bf4:	e3013a6c 	movw	r3, #6764	; 0x1a6c
40002bf8:	e3443003 	movt	r3, #16387	; 0x4003
40002bfc:	e30d0974 	movw	r0, #55668	; 0xd974
40002c00:	e3440002 	movt	r0, #16386	; 0x4002
40002c04:	e7d31002 	ldrb	r1, [r3, r2]
40002c08:	eb00a7e0 	bl	4002cb90 <printf>
40002c0c:	eaffffe8 	b	40002bb4 <TCNet::Print()+0x80>
40002c10:	e3a01020 	mov	r1, #32
40002c14:	eaffffdd 	b	40002b90 <TCNet::Print()+0x5c>

40002c18 <RDMNetDevice::Print()>:
40002c18:	e3043088 	movw	r3, #16520	; 0x4088
40002c1c:	e3a02000 	mov	r2, #0
40002c20:	e3443003 	movt	r3, #16387	; 0x4003
40002c24:	e92d4030 	push	{r4, r5, lr}
40002c28:	e24dd044 	sub	sp, sp, #68	; 0x44
40002c2c:	e5933000 	ldr	r3, [r3]
40002c30:	e1a05000 	mov	r5, r0
40002c34:	e5cd203c 	strb	r2, [sp, #60]	; 0x3c
40002c38:	e28d4008 	add	r4, sp, #8
40002c3c:	e28d1018 	add	r1, sp, #24
40002c40:	e2833010 	add	r3, r3, #16
40002c44:	e4d32001 	ldrb	r2, [r3], #1
40002c48:	e4c42001 	strb	r2, [r4], #1
40002c4c:	e1540001 	cmp	r4, r1
40002c50:	1afffffb 	bne	40002c44 <RDMNetDevice::Print()+0x2c>
40002c54:	e1a01004 	mov	r1, r4
40002c58:	e28d0008 	add	r0, sp, #8
40002c5c:	eb00a881 	bl	4002ce68 <uuid_unparse>
40002c60:	e30d0988 	movw	r0, #55688	; 0xd988
40002c64:	e3440002 	movt	r0, #16386	; 0x4002
40002c68:	eb00a7c8 	bl	4002cb90 <printf>
40002c6c:	e30d0990 	movw	r0, #55696	; 0xd990
40002c70:	e1a01004 	mov	r1, r4
40002c74:	e3440002 	movt	r0, #16386	; 0x4002
40002c78:	eb00a7c4 	bl	4002cb90 <printf>
40002c7c:	e30d099c 	movw	r0, #55708	; 0xd99c
40002c80:	e3440002 	movt	r0, #16386	; 0x4002
40002c84:	eb00a7c1 	bl	4002cb90 <printf>
40002c88:	e30d09ac 	movw	r0, #55724	; 0xd9ac
40002c8c:	e30115c1 	movw	r1, #5569	; 0x15c1
40002c90:	e3440002 	movt	r0, #16386	; 0x4002
40002c94:	eb00a7bd 	bl	4002cb90 <printf>
40002c98:	e3a03085 	mov	r3, #133	; 0x85
40002c9c:	e30d09c8 	movw	r0, #55752	; 0xd9c8
40002ca0:	e58d3000 	str	r3, [sp]
40002ca4:	e3a020ff 	mov	r2, #255	; 0xff
40002ca8:	e3440002 	movt	r0, #16386	; 0x4002
40002cac:	e3a030fa 	mov	r3, #250	; 0xfa
40002cb0:	e3a010ef 	mov	r1, #239	; 0xef
40002cb4:	eb00a7b5 	bl	4002cb90 <printf>
40002cb8:	e3a03086 	mov	r3, #134	; 0x86
40002cbc:	e30d09ec 	movw	r0, #55788	; 0xd9ec
40002cc0:	e58d3000 	str	r3, [sp]
40002cc4:	e3a020ff 	mov	r2, #255	; 0xff
40002cc8:	e3440002 	movt	r0, #16386	; 0x4002
40002ccc:	e3a030fa 	mov	r3, #250	; 0xfa
40002cd0:	e3a010ef 	mov	r1, #239	; 0xef
40002cd4:	eb00a7ad 	bl	4002cb90 <printf>
40002cd8:	e1a00005 	mov	r0, r5
40002cdc:	eb005ff1 	bl	4001aca8 <RDMDeviceResponder::Print()>
40002ce0:	e28dd044 	add	sp, sp, #68	; 0x44
40002ce4:	e8bd8030 	pop	{r4, r5, pc}

40002ce8 <RDMNetLLRPOnly::RDMNetLLRPOnly(char const*)>:
40002ce8:	e92d4070 	push	{r4, r5, r6, lr}
40002cec:	e1a04000 	mov	r4, r0
40002cf0:	e59f50cc 	ldr	r5, [pc, #204]	; 40002dc4 <RDMNetLLRPOnly::RDMNetLLRPOnly(char const*)+0xdc>
40002cf4:	e3a0002c 	mov	r0, #44	; 0x2c
40002cf8:	e5841000 	str	r1, [r4]
40002cfc:	e30f6ff8 	movw	r6, #65528	; 0xfff8
40002d00:	e34f6fff 	movt	r6, #65535	; 0xffff
40002d04:	eb00a9b3 	bl	4002d3d8 <operator new(unsigned int)>
40002d08:	e0466000 	sub	r6, r6, r0
40002d0c:	e1a02000 	mov	r2, r0
40002d10:	e3a03000 	mov	r3, #0
40002d14:	e3a01044 	mov	r1, #68	; 0x44
40002d18:	e5803004 	str	r3, [r0, #4]
40002d1c:	e3a0c052 	mov	ip, #82	; 0x52
40002d20:	e5803028 	str	r3, [r0, #40]	; 0x28
40002d24:	e0c230b8 	strh	r3, [r2], #8
40002d28:	ea000000 	b	40002d30 <RDMNetLLRPOnly::RDMNetLLRPOnly(char const*)+0x48>
40002d2c:	e5f51001 	ldrb	r1, [r5, #1]!
40002d30:	e4c2c001 	strb	ip, [r2], #1
40002d34:	e1a0c001 	mov	ip, r1
40002d38:	e082e006 	add	lr, r2, r6
40002d3c:	e5903028 	ldr	r3, [r0, #40]	; 0x28
40002d40:	e3510000 	cmp	r1, #0
40002d44:	135e0020 	cmpne	lr, #32
40002d48:	e2833001 	add	r3, r3, #1
40002d4c:	e5803028 	str	r3, [r0, #40]	; 0x28
40002d50:	1afffff5 	bne	40002d2c <RDMNetLLRPOnly::RDMNetLLRPOnly(char const*)+0x44>
40002d54:	e1a01004 	mov	r1, r4
40002d58:	e3a03001 	mov	r3, #1
40002d5c:	e1a02003 	mov	r2, r3
40002d60:	e28450a4 	add	r5, r4, #164	; 0xa4
40002d64:	e5a10004 	str	r0, [r1, #4]!
40002d68:	e2840008 	add	r0, r4, #8
40002d6c:	eb005f21 	bl	4001a9f8 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned long, unsigned long)>
40002d70:	e3a01000 	mov	r1, #0
40002d74:	e1a00005 	mov	r0, r5
40002d78:	eb00609e 	bl	4001aff8 <RDMHandler::RDMHandler(bool)>
40002d7c:	e3043000 	movw	r3, #16384	; 0x4000
40002d80:	e30218a4 	movw	r1, #10404	; 0x28a4
40002d84:	e3443003 	movt	r3, #16387	; 0x4003
40002d88:	e30105c1 	movw	r0, #5569	; 0x15c1
40002d8c:	e3441000 	movt	r1, #16384	; 0x4000
40002d90:	e5835000 	str	r5, [r3]
40002d94:	eb007d2b 	bl	40022248 <net::udp_begin(unsigned short, void (*)(unsigned char const*, unsigned long, unsigned long, unsigned short))>
40002d98:	e304300c 	movw	r3, #16396	; 0x400c
40002d9c:	e1a02000 	mov	r2, r0
40002da0:	e3443003 	movt	r3, #16387	; 0x4003
40002da4:	e30f0fef 	movw	r0, #65519	; 0xffef
40002da8:	e34805fa 	movt	r0, #34298	; 0x85fa
40002dac:	e5832000 	str	r2, [r3]
40002db0:	eb00791c 	bl	40021228 <net::igmp_join(unsigned long)>
40002db4:	e59f300c 	ldr	r3, [pc, #12]	; 40002dc8 <RDMNetLLRPOnly::RDMNetLLRPOnly(char const*)+0xe0>
40002db8:	e1a00004 	mov	r0, r4
40002dbc:	e5843008 	str	r3, [r4, #8]
40002dc0:	e8bd8070 	pop	{r4, r5, r6, pc}
40002dc4:	4002dc39 	andmi	sp, r2, r9, lsr ip
40002dc8:	4002dc0c 	andmi	sp, r2, ip, lsl #24

40002dcc <rdm::device::responder::factorydefaults()>:
40002dcc:	e3043050 	movw	r3, #16464	; 0x4050
40002dd0:	e3a01000 	mov	r1, #0
40002dd4:	e92d4010 	push	{r4, lr}
40002dd8:	e3044084 	movw	r4, #16516	; 0x4084
40002ddc:	e3443003 	movt	r3, #16387	; 0x4003
40002de0:	e24dd018 	sub	sp, sp, #24
40002de4:	e3444003 	movt	r4, #16387	; 0x4003
40002de8:	e5930000 	ldr	r0, [r3]
40002dec:	eb00142c 	bl	40007ea4 <RemoteConfig::SetDisable(bool)>
40002df0:	e5940000 	ldr	r0, [r4]
40002df4:	e3a01009 	mov	r1, #9
40002df8:	eb00664b 	bl	4001c72c <ConfigStore::ResetSetList(configstore::Store)>
40002dfc:	e5940000 	ldr	r0, [r4]
40002e00:	e3a0c001 	mov	ip, #1
40002e04:	e58dc004 	str	ip, [sp, #4]
40002e08:	e3a01000 	mov	r1, #0
40002e0c:	e58d1008 	str	r1, [sp, #8]
40002e10:	e28d3017 	add	r3, sp, #23
40002e14:	e58dc000 	str	ip, [sp]
40002e18:	e3a02014 	mov	r2, #20
40002e1c:	e5cdc017 	strb	ip, [sp, #23]
40002e20:	eb006650 	bl	4001c768 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
40002e24:	e28dd018 	add	sp, sp, #24
40002e28:	e8bd8010 	pop	{r4, pc}

40002e2c <ntpclient::display_status(ntp::Status)>:
40002e2c:	e304308c 	movw	r3, #16524	; 0x408c
40002e30:	e3443003 	movt	r3, #16387	; 0x4003
40002e34:	e5d33000 	ldrb	r3, [r3]
40002e38:	e3530006 	cmp	r3, #6
40002e3c:	112fff1e 	bxne	lr
40002e40:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40002e44:	e3500004 	cmp	r0, #4
40002e48:	979ff100 	ldrls	pc, [pc, r0, lsl #2]
40002e4c:	ea000004 	b	40002e64 <ntpclient::display_status(ntp::Status)+0x38>
40002e50:	40002f24 	andmi	r2, r0, r4, lsr #30
40002e54:	40002fe0 	andmi	r2, r0, r0, ror #31
40002e58:	40002e64 	andmi	r2, r0, r4, ror #28
40002e5c:	400030c4 	andmi	r3, r0, r4, asr #1
40002e60:	40002e68 	andmi	r2, r0, r8, ror #28
40002e64:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40002e68:	e304307c 	movw	r3, #16508	; 0x407c
40002e6c:	e3443003 	movt	r3, #16387	; 0x4003
40002e70:	e5933000 	ldr	r3, [r3]
40002e74:	e5934014 	ldr	r4, [r3, #20]
40002e78:	e3540000 	cmp	r4, #0
40002e7c:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
40002e80:	e5946008 	ldr	r6, [r4, #8]
40002e84:	e3a01000 	mov	r1, #0
40002e88:	e8940088 	ldm	r4, {r3, r7}
40002e8c:	e2468001 	sub	r8, r6, #1
40002e90:	e1a00004 	mov	r0, r4
40002e94:	e5933020 	ldr	r3, [r3, #32]
40002e98:	e1a02008 	mov	r2, r8
40002e9c:	e12fff33 	blx	r3
40002ea0:	e2577001 	subs	r7, r7, #1
40002ea4:	0a000008 	beq	40002ecc <ntpclient::display_status(ntp::Status)+0xa0>
40002ea8:	e3a05000 	mov	r5, #0
40002eac:	e5943000 	ldr	r3, [r4]
40002eb0:	e2855001 	add	r5, r5, #1
40002eb4:	e3a01020 	mov	r1, #32
40002eb8:	e1a00004 	mov	r0, r4
40002ebc:	e5933014 	ldr	r3, [r3, #20]
40002ec0:	e12fff33 	blx	r3
40002ec4:	e1550007 	cmp	r5, r7
40002ec8:	1afffff7 	bne	40002eac <ntpclient::display_status(ntp::Status)+0x80>
40002ecc:	e5943000 	ldr	r3, [r4]
40002ed0:	e1a00004 	mov	r0, r4
40002ed4:	e1a02008 	mov	r2, r8
40002ed8:	e3a01000 	mov	r1, #0
40002edc:	e5933020 	ldr	r3, [r3, #32]
40002ee0:	e12fff33 	blx	r3
40002ee4:	e5940004 	ldr	r0, [r4, #4]
40002ee8:	e3500000 	cmp	r0, #0
40002eec:	0a0000ad 	beq	400031a8 <ntpclient::display_status(ntp::Status)+0x37c>
40002ef0:	e59f12c8 	ldr	r1, [pc, #712]	; 400031c0 <ntpclient::display_status(ntp::Status)+0x394>
40002ef4:	e280c001 	add	ip, r0, #1
40002ef8:	e3a03001 	mov	r3, #1
40002efc:	e1500003 	cmp	r0, r3
40002f00:	e2833001 	add	r3, r3, #1
40002f04:	0a0000a3 	beq	40003198 <ntpclient::display_status(ntp::Status)+0x36c>
40002f08:	e5f12001 	ldrb	r2, [r1, #1]!
40002f0c:	e3520000 	cmp	r2, #0
40002f10:	1afffff9 	bne	40002efc <ntpclient::display_status(ntp::Status)+0xd0>
40002f14:	e5941000 	ldr	r1, [r4]
40002f18:	e30d2a40 	movw	r2, #55872	; 0xda40
40002f1c:	e3442002 	movt	r2, #16386	; 0x4002
40002f20:	ea000061 	b	400030ac <ntpclient::display_status(ntp::Status)+0x280>
40002f24:	e304307c 	movw	r3, #16508	; 0x407c
40002f28:	e3443003 	movt	r3, #16387	; 0x4003
40002f2c:	e5933000 	ldr	r3, [r3]
40002f30:	e5934014 	ldr	r4, [r3, #20]
40002f34:	e3540000 	cmp	r4, #0
40002f38:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
40002f3c:	e5946008 	ldr	r6, [r4, #8]
40002f40:	e3a01000 	mov	r1, #0
40002f44:	e8940088 	ldm	r4, {r3, r7}
40002f48:	e2468001 	sub	r8, r6, #1
40002f4c:	e1a00004 	mov	r0, r4
40002f50:	e5933020 	ldr	r3, [r3, #32]
40002f54:	e1a02008 	mov	r2, r8
40002f58:	e12fff33 	blx	r3
40002f5c:	e2577001 	subs	r7, r7, #1
40002f60:	0a000008 	beq	40002f88 <ntpclient::display_status(ntp::Status)+0x15c>
40002f64:	e3a05000 	mov	r5, #0
40002f68:	e5943000 	ldr	r3, [r4]
40002f6c:	e2855001 	add	r5, r5, #1
40002f70:	e3a01020 	mov	r1, #32
40002f74:	e1a00004 	mov	r0, r4
40002f78:	e5933014 	ldr	r3, [r3, #20]
40002f7c:	e12fff33 	blx	r3
40002f80:	e1550007 	cmp	r5, r7
40002f84:	1afffff7 	bne	40002f68 <ntpclient::display_status(ntp::Status)+0x13c>
40002f88:	e5943000 	ldr	r3, [r4]
40002f8c:	e1a00004 	mov	r0, r4
40002f90:	e1a02008 	mov	r2, r8
40002f94:	e3a01000 	mov	r1, #0
40002f98:	e5933020 	ldr	r3, [r3, #32]
40002f9c:	e12fff33 	blx	r3
40002fa0:	e5940004 	ldr	r0, [r4, #4]
40002fa4:	e3500000 	cmp	r0, #0
40002fa8:	0a00007c 	beq	400031a0 <ntpclient::display_status(ntp::Status)+0x374>
40002fac:	e59f1210 	ldr	r1, [pc, #528]	; 400031c4 <ntpclient::display_status(ntp::Status)+0x398>
40002fb0:	e280c001 	add	ip, r0, #1
40002fb4:	e3a03001 	mov	r3, #1
40002fb8:	e1500003 	cmp	r0, r3
40002fbc:	e2833001 	add	r3, r3, #1
40002fc0:	0a000072 	beq	40003190 <ntpclient::display_status(ntp::Status)+0x364>
40002fc4:	e5f12001 	ldrb	r2, [r1, #1]!
40002fc8:	e3520000 	cmp	r2, #0
40002fcc:	1afffff9 	bne	40002fb8 <ntpclient::display_status(ntp::Status)+0x18c>
40002fd0:	e5941000 	ldr	r1, [r4]
40002fd4:	e30d2a10 	movw	r2, #55824	; 0xda10
40002fd8:	e3442002 	movt	r2, #16386	; 0x4002
40002fdc:	ea000032 	b	400030ac <ntpclient::display_status(ntp::Status)+0x280>
40002fe0:	e304207c 	movw	r2, #16508	; 0x407c
40002fe4:	e3043060 	movw	r3, #16480	; 0x4060
40002fe8:	e3442003 	movt	r2, #16387	; 0x4003
40002fec:	e3443003 	movt	r3, #16387	; 0x4003
40002ff0:	e5922000 	ldr	r2, [r2]
40002ff4:	e5933000 	ldr	r3, [r3]
40002ff8:	e5924014 	ldr	r4, [r2, #20]
40002ffc:	e3e02000 	mvn	r2, #0
40003000:	e5c32002 	strb	r2, [r3, #2]
40003004:	e3540000 	cmp	r4, #0
40003008:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
4000300c:	e5946008 	ldr	r6, [r4, #8]
40003010:	e3a01000 	mov	r1, #0
40003014:	e8940088 	ldm	r4, {r3, r7}
40003018:	e0868002 	add	r8, r6, r2
4000301c:	e1a00004 	mov	r0, r4
40003020:	e5933020 	ldr	r3, [r3, #32]
40003024:	e1a02008 	mov	r2, r8
40003028:	e12fff33 	blx	r3
4000302c:	e2577001 	subs	r7, r7, #1
40003030:	0a000008 	beq	40003058 <ntpclient::display_status(ntp::Status)+0x22c>
40003034:	e3a05000 	mov	r5, #0
40003038:	e5943000 	ldr	r3, [r4]
4000303c:	e2855001 	add	r5, r5, #1
40003040:	e3a01020 	mov	r1, #32
40003044:	e1a00004 	mov	r0, r4
40003048:	e5933014 	ldr	r3, [r3, #20]
4000304c:	e12fff33 	blx	r3
40003050:	e1550007 	cmp	r5, r7
40003054:	1afffff7 	bne	40003038 <ntpclient::display_status(ntp::Status)+0x20c>
40003058:	e5943000 	ldr	r3, [r4]
4000305c:	e1a00004 	mov	r0, r4
40003060:	e1a02008 	mov	r2, r8
40003064:	e3a01000 	mov	r1, #0
40003068:	e5933020 	ldr	r3, [r3, #32]
4000306c:	e12fff33 	blx	r3
40003070:	e5940004 	ldr	r0, [r4, #4]
40003074:	e3500000 	cmp	r0, #0
40003078:	0a00004e 	beq	400031b8 <ntpclient::display_status(ntp::Status)+0x38c>
4000307c:	e59f1144 	ldr	r1, [pc, #324]	; 400031c8 <ntpclient::display_status(ntp::Status)+0x39c>
40003080:	e280c001 	add	ip, r0, #1
40003084:	e3a03001 	mov	r3, #1
40003088:	e1500003 	cmp	r0, r3
4000308c:	e2833001 	add	r3, r3, #1
40003090:	0a00003c 	beq	40003188 <ntpclient::display_status(ntp::Status)+0x35c>
40003094:	e5f12001 	ldrb	r2, [r1, #1]!
40003098:	e3520000 	cmp	r2, #0
4000309c:	1afffff9 	bne	40003088 <ntpclient::display_status(ntp::Status)+0x25c>
400030a0:	e5941000 	ldr	r1, [r4]
400030a4:	e30d2a20 	movw	r2, #55840	; 0xda20
400030a8:	e3442002 	movt	r2, #16386	; 0x4002
400030ac:	e591e01c 	ldr	lr, [r1, #28]
400030b0:	e1a00004 	mov	r0, r4
400030b4:	e1a01006 	mov	r1, r6
400030b8:	e1a0c00e 	mov	ip, lr
400030bc:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
400030c0:	e12fff1c 	bx	ip
400030c4:	e304307c 	movw	r3, #16508	; 0x407c
400030c8:	e3443003 	movt	r3, #16387	; 0x4003
400030cc:	e5933000 	ldr	r3, [r3]
400030d0:	e5934014 	ldr	r4, [r3, #20]
400030d4:	e3540000 	cmp	r4, #0
400030d8:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
400030dc:	e5946008 	ldr	r6, [r4, #8]
400030e0:	e3a01000 	mov	r1, #0
400030e4:	e8940088 	ldm	r4, {r3, r7}
400030e8:	e2468001 	sub	r8, r6, #1
400030ec:	e1a00004 	mov	r0, r4
400030f0:	e5933020 	ldr	r3, [r3, #32]
400030f4:	e1a02008 	mov	r2, r8
400030f8:	e12fff33 	blx	r3
400030fc:	e2577001 	subs	r7, r7, #1
40003100:	0a000008 	beq	40003128 <ntpclient::display_status(ntp::Status)+0x2fc>
40003104:	e3a05000 	mov	r5, #0
40003108:	e5943000 	ldr	r3, [r4]
4000310c:	e2855001 	add	r5, r5, #1
40003110:	e3a01020 	mov	r1, #32
40003114:	e1a00004 	mov	r0, r4
40003118:	e5933014 	ldr	r3, [r3, #20]
4000311c:	e12fff33 	blx	r3
40003120:	e1550007 	cmp	r5, r7
40003124:	1afffff7 	bne	40003108 <ntpclient::display_status(ntp::Status)+0x2dc>
40003128:	e5943000 	ldr	r3, [r4]
4000312c:	e1a00004 	mov	r0, r4
40003130:	e1a02008 	mov	r2, r8
40003134:	e3a01000 	mov	r1, #0
40003138:	e5933020 	ldr	r3, [r3, #32]
4000313c:	e12fff33 	blx	r3
40003140:	e5940004 	ldr	r0, [r4, #4]
40003144:	e3500000 	cmp	r0, #0
40003148:	0a000018 	beq	400031b0 <ntpclient::display_status(ntp::Status)+0x384>
4000314c:	e59f1078 	ldr	r1, [pc, #120]	; 400031cc <ntpclient::display_status(ntp::Status)+0x3a0>
40003150:	e280c001 	add	ip, r0, #1
40003154:	e3a03001 	mov	r3, #1
40003158:	e1500003 	cmp	r0, r3
4000315c:	e2833001 	add	r3, r3, #1
40003160:	0a000006 	beq	40003180 <ntpclient::display_status(ntp::Status)+0x354>
40003164:	e5f12001 	ldrb	r2, [r1, #1]!
40003168:	e3520000 	cmp	r2, #0
4000316c:	1afffff9 	bne	40003158 <ntpclient::display_status(ntp::Status)+0x32c>
40003170:	e5941000 	ldr	r1, [r4]
40003174:	e30d2a2c 	movw	r2, #55852	; 0xda2c
40003178:	e3442002 	movt	r2, #16386	; 0x4002
4000317c:	eaffffca 	b	400030ac <ntpclient::display_status(ntp::Status)+0x280>
40003180:	e1a0300c 	mov	r3, ip
40003184:	eafffff9 	b	40003170 <ntpclient::display_status(ntp::Status)+0x344>
40003188:	e1a0300c 	mov	r3, ip
4000318c:	eaffffc3 	b	400030a0 <ntpclient::display_status(ntp::Status)+0x274>
40003190:	e1a0300c 	mov	r3, ip
40003194:	eaffff8d 	b	40002fd0 <ntpclient::display_status(ntp::Status)+0x1a4>
40003198:	e1a0300c 	mov	r3, ip
4000319c:	eaffff5c 	b	40002f14 <ntpclient::display_status(ntp::Status)+0xe8>
400031a0:	e3a03001 	mov	r3, #1
400031a4:	eaffff89 	b	40002fd0 <ntpclient::display_status(ntp::Status)+0x1a4>
400031a8:	e3a03001 	mov	r3, #1
400031ac:	eaffff58 	b	40002f14 <ntpclient::display_status(ntp::Status)+0xe8>
400031b0:	e3a03001 	mov	r3, #1
400031b4:	eaffffed 	b	40003170 <ntpclient::display_status(ntp::Status)+0x344>
400031b8:	e3a03001 	mov	r3, #1
400031bc:	eaffffb7 	b	400030a0 <ntpclient::display_status(ntp::Status)+0x274>
400031c0:	4002da41 	andmi	sp, r2, r1, asr #20
400031c4:	4002da11 	andmi	sp, r2, r1, lsl sl
400031c8:	4002da21 	andmi	sp, r2, r1, lsr #20
400031cc:	4002da2d 	andmi	sp, r2, sp, lsr #20

400031d0 <hal::reboot_handler()>:
400031d0:	e304308c 	movw	r3, #16524	; 0x408c
400031d4:	e3443003 	movt	r3, #16387	; 0x4003
400031d8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400031dc:	e24dd028 	sub	sp, sp, #40	; 0x28
400031e0:	e5d33000 	ldrb	r3, [r3]
400031e4:	e3530003 	cmp	r3, #3
400031e8:	0a000073 	beq	400033bc <hal::reboot_handler()+0x1ec>
400031ec:	e30746ec 	movw	r4, #30444	; 0x76ec
400031f0:	e3444005 	movt	r4, #16389	; 0x4005
400031f4:	e5d43001 	ldrb	r3, [r4, #1]
400031f8:	e3530000 	cmp	r3, #0
400031fc:	1a000008 	bne	40003224 <hal::reboot_handler()+0x54>
40003200:	e3073704 	movw	r3, #30468	; 0x7704
40003204:	e3a01002 	mov	r1, #2
40003208:	e3443005 	movt	r3, #16389	; 0x4005
4000320c:	e5933000 	ldr	r3, [r3]
40003210:	e5930004 	ldr	r0, [r3, #4]
40003214:	e5c31008 	strb	r1, [r3, #8]
40003218:	e5903000 	ldr	r3, [r0]
4000321c:	e5933008 	ldr	r3, [r3, #8]
40003220:	e12fff33 	blx	r3
40003224:	e5d43008 	ldrb	r3, [r4, #8]
40003228:	e3530000 	cmp	r3, #0
4000322c:	0a00000a 	beq	4000325c <hal::reboot_handler()+0x8c>
40003230:	e5d43009 	ldrb	r3, [r4, #9]
40003234:	e3530000 	cmp	r3, #0
40003238:	0a000007 	beq	4000325c <hal::reboot_handler()+0x8c>
4000323c:	e3043050 	movw	r3, #16464	; 0x4050
40003240:	e3443003 	movt	r3, #16387	; 0x4003
40003244:	e5933000 	ldr	r3, [r3]
40003248:	e5d31021 	ldrb	r1, [r3, #33]	; 0x21
4000324c:	e3510000 	cmp	r1, #0
40003250:	0a000008 	beq	40003278 <hal::reboot_handler()+0xa8>
40003254:	e28dd028 	add	sp, sp, #40	; 0x28
40003258:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000325c:	e3043078 	movw	r3, #16504	; 0x4078
40003260:	e3a02000 	mov	r2, #0
40003264:	e3443003 	movt	r3, #16387	; 0x4003
40003268:	e3a0102d 	mov	r1, #45	; 0x2d
4000326c:	e5930000 	ldr	r0, [r3]
40003270:	eb004640 	bl	40014b78 <LtcDisplayRgb::WriteChar(unsigned char, unsigned char)>
40003274:	eafffff0 	b	4000323c <hal::reboot_handler()+0x6c>
40003278:	e304607c 	movw	r6, #16508	; 0x407c
4000327c:	e3446003 	movt	r6, #16387	; 0x4003
40003280:	e5964000 	ldr	r4, [r6]
40003284:	e5940014 	ldr	r0, [r4, #20]
40003288:	e3500000 	cmp	r0, #0
4000328c:	0a00000b 	beq	400032c0 <hal::reboot_handler()+0xf0>
40003290:	e5903000 	ldr	r3, [r0]
40003294:	e5c41011 	strb	r1, [r4, #17]
40003298:	e5932028 	ldr	r2, [r3, #40]	; 0x28
4000329c:	e30237c8 	movw	r3, #10184	; 0x27c8
400032a0:	e3443000 	movt	r3, #16384	; 0x4000
400032a4:	e1520003 	cmp	r2, r3
400032a8:	1a00005c 	bne	40003420 <hal::reboot_handler()+0x250>
400032ac:	e594100c 	ldr	r1, [r4, #12]
400032b0:	e1a00004 	mov	r0, r4
400032b4:	e2511000 	subs	r1, r1, #0
400032b8:	13a01001 	movne	r1, #1
400032bc:	eb0086c7 	bl	40024de0 <Display::SetSleepTimer(bool)>
400032c0:	e3045084 	movw	r5, #16516	; 0x4084
400032c4:	e3445003 	movt	r5, #16387	; 0x4003
400032c8:	e5950000 	ldr	r0, [r5]
400032cc:	eb00656c 	bl	4001c884 <ConfigStore::Flash()>
400032d0:	e2504000 	subs	r4, r0, #0
400032d4:	1afffffb 	bne	400032c8 <hal::reboot_handler()+0xf8>
400032d8:	e5963000 	ldr	r3, [r6]
400032dc:	e5930014 	ldr	r0, [r3, #20]
400032e0:	e3500000 	cmp	r0, #0
400032e4:	0affffda 	beq	40003254 <hal::reboot_handler()+0x84>
400032e8:	e5903000 	ldr	r3, [r0]
400032ec:	e593300c 	ldr	r3, [r3, #12]
400032f0:	e12fff33 	blx	r3
400032f4:	e5963000 	ldr	r3, [r6]
400032f8:	e5935014 	ldr	r5, [r3, #20]
400032fc:	e3550000 	cmp	r5, #0
40003300:	0affffd3 	beq	40003254 <hal::reboot_handler()+0x84>
40003304:	e5956008 	ldr	r6, [r5, #8]
40003308:	e1a01004 	mov	r1, r4
4000330c:	e8950088 	ldm	r5, {r3, r7}
40003310:	e2468001 	sub	r8, r6, #1
40003314:	e1a00005 	mov	r0, r5
40003318:	e5933020 	ldr	r3, [r3, #32]
4000331c:	e1a02008 	mov	r2, r8
40003320:	e12fff33 	blx	r3
40003324:	e2577001 	subs	r7, r7, #1
40003328:	0a000007 	beq	4000334c <hal::reboot_handler()+0x17c>
4000332c:	e5953000 	ldr	r3, [r5]
40003330:	e3a01020 	mov	r1, #32
40003334:	e1a00005 	mov	r0, r5
40003338:	e2844001 	add	r4, r4, #1
4000333c:	e5933014 	ldr	r3, [r3, #20]
40003340:	e12fff33 	blx	r3
40003344:	e1540007 	cmp	r4, r7
40003348:	1afffff7 	bne	4000332c <hal::reboot_handler()+0x15c>
4000334c:	e5953000 	ldr	r3, [r5]
40003350:	e1a00005 	mov	r0, r5
40003354:	e1a02008 	mov	r2, r8
40003358:	e3a01000 	mov	r1, #0
4000335c:	e5933020 	ldr	r3, [r3, #32]
40003360:	e12fff33 	blx	r3
40003364:	e5950004 	ldr	r0, [r5, #4]
40003368:	e3500000 	cmp	r0, #0
4000336c:	0a00002d 	beq	40003428 <hal::reboot_handler()+0x258>
40003370:	e59f10b8 	ldr	r1, [pc, #184]	; 40003430 <hal::reboot_handler()+0x260>
40003374:	e280c001 	add	ip, r0, #1
40003378:	e3a03001 	mov	r3, #1
4000337c:	e1530000 	cmp	r3, r0
40003380:	e2833001 	add	r3, r3, #1
40003384:	0a000023 	beq	40003418 <hal::reboot_handler()+0x248>
40003388:	e5f12001 	ldrb	r2, [r1, #1]!
4000338c:	e3520000 	cmp	r2, #0
40003390:	1afffff9 	bne	4000337c <hal::reboot_handler()+0x1ac>
40003394:	e5951000 	ldr	r1, [r5]
40003398:	e30d2a4c 	movw	r2, #55884	; 0xda4c
4000339c:	e3442002 	movt	r2, #16386	; 0x4002
400033a0:	e1a00005 	mov	r0, r5
400033a4:	e591e01c 	ldr	lr, [r1, #28]
400033a8:	e1a01006 	mov	r1, r6
400033ac:	e1a0c00e 	mov	ip, lr
400033b0:	e28dd028 	add	sp, sp, #40	; 0x28
400033b4:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
400033b8:	e12fff1c 	bx	ip
400033bc:	e3042068 	movw	r2, #16488	; 0x4068
400033c0:	e28d300c 	add	r3, sp, #12
400033c4:	e3442003 	movt	r2, #16387	; 0x4003
400033c8:	e5920000 	ldr	r0, [r2]
400033cc:	e2802037 	add	r2, r0, #55	; 0x37
400033d0:	e4d21001 	ldrb	r1, [r2], #1
400033d4:	e4c31001 	strb	r1, [r3], #1
400033d8:	e28d1028 	add	r1, sp, #40	; 0x28
400033dc:	e1530001 	cmp	r3, r1
400033e0:	1afffffa 	bne	400033d0 <hal::reboot_handler()+0x200>
400033e4:	e5900000 	ldr	r0, [r0]
400033e8:	e30a373c 	movw	r3, #42812	; 0xa73c
400033ec:	e3443005 	movt	r3, #16389	; 0x4005
400033f0:	e5932000 	ldr	r2, [r3]
400033f4:	e593300c 	ldr	r3, [r3, #12]
400033f8:	e3520000 	cmp	r2, #0
400033fc:	0affff7a 	beq	400031ec <hal::reboot_handler()+0x1c>
40003400:	e30e2a60 	movw	r2, #60000	; 0xea60
40003404:	e28d100c 	add	r1, sp, #12
40003408:	e58d2000 	str	r2, [sp]
4000340c:	e3a0201c 	mov	r2, #28
40003410:	eb007bd8 	bl	40022378 <net::udp_send(long, unsigned char const*, unsigned long, unsigned long, unsigned short)>
40003414:	eaffff74 	b	400031ec <hal::reboot_handler()+0x1c>
40003418:	e1a0300c 	mov	r3, ip
4000341c:	eaffffdc 	b	40003394 <hal::reboot_handler()+0x1c4>
40003420:	e12fff32 	blx	r2
40003424:	eaffffa0 	b	400032ac <hal::reboot_handler()+0xdc>
40003428:	e3a03001 	mov	r3, #1
4000342c:	eaffffd8 	b	40003394 <hal::reboot_handler()+0x1c4>
40003430:	4002da4d 	andmi	sp, r2, sp, asr #20
40003434:	00000000 	andeq	r0, r0, r0

40003438 <main>:
40003438:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000343c:	e24ddd2a 	sub	sp, sp, #2688	; 0xa80
40003440:	e24dd004 	sub	sp, sp, #4
40003444:	e3a04000 	mov	r4, #0
40003448:	e28d0f75 	add	r0, sp, #468	; 0x1d4
4000344c:	e28d5054 	add	r5, sp, #84	; 0x54
40003450:	eb008bf4 	bl	40026428 <Hardware::Hardware()>
40003454:	e3a01004 	mov	r1, #4
40003458:	e28d00b0 	add	r0, sp, #176	; 0xb0
4000345c:	eb0081a2 	bl	40023aec <Display::Display(unsigned long)>
40003460:	e28d004c 	add	r0, sp, #76	; 0x4c
40003464:	eb006453 	bl	4001c5b8 <ConfigStore::ConfigStore()>
40003468:	e28d0e5b 	add	r0, sp, #1456	; 0x5b0
4000346c:	e2800008 	add	r0, r0, #8
40003470:	eb0072fe 	bl	40020070 <Network::Network()>
40003474:	e58d4000 	str	r4, [sp]
40003478:	e30d3aac 	movw	r3, #55980	; 0xdaac
4000347c:	e3443002 	movt	r3, #16386	; 0x4002
40003480:	e30d2ab8 	movw	r2, #55992	; 0xdab8
40003484:	e3442002 	movt	r2, #16386	; 0x4002
40003488:	e30d1c34 	movw	r1, #56372	; 0xdc34
4000348c:	e3441002 	movt	r1, #16386	; 0x4002
40003490:	e28d0058 	add	r0, sp, #88	; 0x58
40003494:	eb008a3f 	bl	40025d98 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*, unsigned long)>
40003498:	e28d00e0 	add	r0, sp, #224	; 0xe0
4000349c:	eb0067ad 	bl	4001d358 <FlashCodeInstall::FlashCodeInstall()>
400034a0:	e3040010 	movw	r0, #16400	; 0x4010
400034a4:	e3440003 	movt	r0, #16387	; 0x4003
400034a8:	eb00a5fa 	bl	4002cc98 <puts>
400034ac:	e30d1ac4 	movw	r1, #56004	; 0xdac4
400034b0:	e30d0ad0 	movw	r0, #56016	; 0xdad0
400034b4:	e3441002 	movt	r1, #16386	; 0x4002
400034b8:	e3440002 	movt	r0, #16386	; 0x4002
400034bc:	eb00a5b3 	bl	4002cb90 <printf>
400034c0:	e59d00c4 	ldr	r0, [sp, #196]	; 0xc4
400034c4:	e3a01001 	mov	r1, #1
400034c8:	ebfffd0f 	bl	4000290c <Display::ClearLine(unsigned long) [clone .isra.0]>
400034cc:	e59d00c4 	ldr	r0, [sp, #196]	; 0xc4
400034d0:	e3a01002 	mov	r1, #2
400034d4:	ebfffd0c 	bl	4000290c <Display::ClearLine(unsigned long) [clone .isra.0]>
400034d8:	e28d0f56 	add	r0, sp, #344	; 0x158
400034dc:	eb002cb9 	bl	4000e7c8 <LtcParams::LtcParams()>
400034e0:	e28d0f56 	add	r0, sp, #344	; 0x158
400034e4:	eb002cea 	bl	4000e894 <LtcParams::Load()>
400034e8:	e58d5014 	str	r5, [sp, #20]
400034ec:	e28d0f56 	add	r0, sp, #344	; 0x158
400034f0:	e28d2064 	add	r2, sp, #100	; 0x64
400034f4:	e28d105c 	add	r1, sp, #92	; 0x5c
400034f8:	eb002f3b 	bl	4000f1ec <LtcParams::Set(ltc::TimeCode*, ltc::TimeCode*)>
400034fc:	e59f2e9c 	ldr	r2, [pc, #3740]	; 400043a0 <main+0xf68>
40003500:	e28d3e16 	add	r3, sp, #352	; 0x160
40003504:	e5dd1167 	ldrb	r1, [sp, #359]	; 0x167
40003508:	e28dcfed 	add	ip, sp, #948	; 0x3b4
4000350c:	e1d300d0 	ldrsb	r0, [r3]
40003510:	e304305c 	movw	r3, #16476	; 0x405c
40003514:	e3443003 	movt	r3, #16387	; 0x4003
40003518:	e58d24a8 	str	r2, [sp, #1192]	; 0x4a8
4000351c:	e3e02000 	mvn	r2, #0
40003520:	e5835000 	str	r5, [r3]
40003524:	e280300c 	add	r3, r0, #12
40003528:	e5cd2050 	strb	r2, [sp, #80]	; 0x50
4000352c:	e6ef3073 	uxtb	r3, r3
40003530:	e58d20ac 	str	r2, [sp, #172]	; 0xac
40003534:	e353001a 	cmp	r3, #26
40003538:	e58d43b8 	str	r4, [sp, #952]	; 0x3b8
4000353c:	e3a020ff 	mov	r2, #255	; 0xff
40003540:	e58d23b0 	str	r2, [sp, #944]	; 0x3b0
40003544:	e3043058 	movw	r3, #16472	; 0x4058
40003548:	e3443003 	movt	r3, #16387	; 0x4003
4000354c:	e58d20a8 	str	r2, [sp, #168]	; 0xa8
40003550:	e3a02c01 	mov	r2, #256	; 0x100
40003554:	e1cc20b0 	strh	r2, [ip]
40003558:	e28d20a0 	add	r2, sp, #160	; 0xa0
4000355c:	e5832000 	str	r2, [r3]
40003560:	e3a03001 	mov	r3, #1
40003564:	e58d43bc 	str	r4, [sp, #956]	; 0x3bc
40003568:	81a02004 	movhi	r2, r4
4000356c:	e58d43c0 	str	r4, [sp, #960]	; 0x3c0
40003570:	e58d43c4 	str	r4, [sp, #964]	; 0x3c4
40003574:	e58d43c8 	str	r4, [sp, #968]	; 0x3c8
40003578:	e5cd44b1 	strb	r4, [sp, #1201]	; 0x4b1
4000357c:	e58d44b4 	str	r4, [sp, #1204]	; 0x4b4
40003580:	e58d44b8 	str	r4, [sp, #1208]	; 0x4b8
40003584:	e58d44bc 	str	r4, [sp, #1212]	; 0x4bc
40003588:	e58d44c0 	str	r4, [sp, #1216]	; 0x4c0
4000358c:	e58d44c4 	str	r4, [sp, #1220]	; 0x4c4
40003590:	e5cd34b2 	strb	r3, [sp, #1202]	; 0x4b2
40003594:	8a000018 	bhi	400035fc <main+0x1c4>
40003598:	e5dd4161 	ldrb	r4, [sp, #353]	; 0x161
4000359c:	e3540000 	cmp	r4, #0
400035a0:	03a02ee1 	moveq	r2, #3600	; 0xe10
400035a4:	00020092 	muleq	r2, r2, r0
400035a8:	0a000013 	beq	400035fc <main+0x1c4>
400035ac:	e59f3df0 	ldr	r3, [pc, #3568]	; 400043a4 <main+0xf6c>
400035b0:	e283c016 	add	ip, r3, #22
400035b4:	ea000002 	b	400035c4 <main+0x18c>
400035b8:	e2833002 	add	r3, r3, #2
400035bc:	e153000c 	cmp	r3, ip
400035c0:	0a000330 	beq	40004288 <main+0xe50>
400035c4:	e15320d2 	ldrsb	r2, [r3, #-2]
400035c8:	e1520000 	cmp	r2, r0
400035cc:	1afffff9 	bne	400035b8 <main+0x180>
400035d0:	e5532001 	ldrb	r2, [r3, #-1]
400035d4:	e1520004 	cmp	r2, r4
400035d8:	1afffff6 	bne	400035b8 <main+0x180>
400035dc:	e3500000 	cmp	r0, #0
400035e0:	e3a02ee1 	mov	r2, #3600	; 0xe10
400035e4:	c1a03204 	lslgt	r3, r4, #4
400035e8:	d3e0303b 	mvnle	r3, #59	; 0x3b
400035ec:	e0020092 	mul	r2, r2, r0
400035f0:	c0434004 	subgt	r4, r3, r4
400035f4:	d0222493 	mlale	r2, r3, r4, r2
400035f8:	c0822104 	addgt	r2, r2, r4, lsl #2
400035fc:	e304408c 	movw	r4, #16524	; 0x408c
40003600:	e28d00fc 	add	r0, sp, #252	; 0xfc
40003604:	e3444003 	movt	r4, #16387	; 0x4003
40003608:	eb00418c 	bl	40013c40 <SystimeReader::SystimeReader(unsigned char, long)>
4000360c:	e5dd315c 	ldrb	r3, [sp, #348]	; 0x15c
40003610:	e28d0f69 	add	r0, sp, #420	; 0x1a4
40003614:	e5c43000 	strb	r3, [r4]
40003618:	e59f3d88 	ldr	r3, [pc, #3464]	; 400043a8 <main+0xf70>
4000361c:	e58d3088 	str	r3, [sp, #136]	; 0x88
40003620:	eb0026be 	bl	4000d120 <LtcDisplayParams::LtcDisplayParams()>
40003624:	e28d0f69 	add	r0, sp, #420	; 0x1a4
40003628:	eb0026f3 	bl	4000d1fc <LtcDisplayParams::Load()>
4000362c:	e59d00c4 	ldr	r0, [sp, #196]	; 0xc4
40003630:	e5dd11d0 	ldrb	r1, [sp, #464]	; 0x1d0
40003634:	e3500000 	cmp	r0, #0
40003638:	e5cd10c0 	strb	r1, [sp, #192]	; 0xc0
4000363c:	0a000005 	beq	40003658 <main+0x220>
40003640:	e5903000 	ldr	r3, [r0]
40003644:	e593202c 	ldr	r2, [r3, #44]	; 0x2c
40003648:	e30237cc 	movw	r3, #10188	; 0x27cc
4000364c:	e3443000 	movt	r3, #16384	; 0x4000
40003650:	e1520003 	cmp	r2, r3
40003654:	1a00056a 	bne	40004c04 <main+0x17cc>
40003658:	e5dd31a8 	ldrb	r3, [sp, #424]	; 0x1a8
4000365c:	e3a02000 	mov	r2, #0
40003660:	e5cd209c 	strb	r2, [sp, #156]	; 0x9c
40003664:	e28d2094 	add	r2, sp, #148	; 0x94
40003668:	e58d3094 	str	r3, [sp, #148]	; 0x94
4000366c:	e3530001 	cmp	r3, #1
40003670:	e3073704 	movw	r3, #30468	; 0x7704
40003674:	e3443005 	movt	r3, #16389	; 0x4005
40003678:	e5832000 	str	r2, [r3]
4000367c:	0a0002cc 	beq	400041b4 <main+0xd7c>
40003680:	e3a00020 	mov	r0, #32
40003684:	eb00a753 	bl	4002d3d8 <operator new(unsigned int)>
40003688:	e1a05000 	mov	r5, r0
4000368c:	eb00260a 	bl	4000cebc <LtcDisplayMax7219Matrix::LtcDisplayMax7219Matrix()>
40003690:	e58d5098 	str	r5, [sp, #152]	; 0x98
40003694:	e5dd1173 	ldrb	r1, [sp, #371]	; 0x173
40003698:	e28d0fd3 	add	r0, sp, #844	; 0x34c
4000369c:	e5dd21c7 	ldrb	r2, [sp, #455]	; 0x1c7
400036a0:	e2411002 	sub	r1, r1, #2
400036a4:	e16f1f11 	clz	r1, r1
400036a8:	e1a012a1 	lsr	r1, r1, #5
400036ac:	eb0043f7 	bl	40014690 <LtcDisplayRgb::LtcDisplayRgb(ltcdisplayrgb::Type, ltcdisplayrgb::WS28xxType)>
400036b0:	e5d41000 	ldrb	r1, [r4]
400036b4:	e3510006 	cmp	r1, #6
400036b8:	0a0002ab 	beq	4000416c <main+0xd34>
400036bc:	e5dd31d1 	ldrb	r3, [sp, #465]	; 0x1d1
400036c0:	e28d8fad 	add	r8, sp, #692	; 0x2b4
400036c4:	e5dd2174 	ldrb	r2, [sp, #372]	; 0x174
400036c8:	e1a00008 	mov	r0, r8
400036cc:	e16f3f13 	clz	r3, r3
400036d0:	e2422001 	sub	r2, r2, #1
400036d4:	e16f2f12 	clz	r2, r2
400036d8:	e1a032a3 	lsr	r3, r3, #5
400036dc:	e1a022a2 	lsr	r2, r2, #5
400036e0:	e58d3000 	str	r3, [sp]
400036e4:	e5dd3175 	ldrb	r3, [sp, #373]	; 0x175
400036e8:	eb000b53 	bl	4000643c <McpButtons::McpButtons(ltc::Source, bool, long, bool)>
400036ec:	e1a00008 	mov	r0, r8
400036f0:	eb000c53 	bl	40006844 <McpButtons::Check()>
400036f4:	e3500000 	cmp	r0, #0
400036f8:	1304508c 	movwne	r5, #16524	; 0x408c
400036fc:	13445003 	movtne	r5, #16387	; 0x4003
40003700:	1a00002e 	bne	400037c0 <main+0x388>
40003704:	e59d2158 	ldr	r2, [sp, #344]	; 0x158
40003708:	e30756ec 	movw	r5, #30444	; 0x76ec
4000370c:	e3445005 	movt	r5, #16389	; 0x4005
40003710:	e28d0f5f 	add	r0, sp, #380	; 0x17c
40003714:	e7e02252 	ubfx	r2, r2, #4, #1
40003718:	e5d41000 	ldrb	r1, [r4]
4000371c:	eb0038ea 	bl	40011acc <LtcOutputs::LtcOutputs(ltc::Source, bool)>
40003720:	e5d53001 	ldrb	r3, [r5, #1]
40003724:	e3530000 	cmp	r3, #0
40003728:	1a000014 	bne	40003780 <main+0x348>
4000372c:	e5dd11a9 	ldrb	r1, [sp, #425]	; 0x1a9
40003730:	e59d0098 	ldr	r0, [sp, #152]	; 0x98
40003734:	e5cd109c 	strb	r1, [sp, #156]	; 0x9c
40003738:	e5903000 	ldr	r3, [r0]
4000373c:	e5933008 	ldr	r3, [r3, #8]
40003740:	e12fff33 	blx	r3
40003744:	e30d0ae0 	movw	r0, #56032	; 0xdae0
40003748:	e3440002 	movt	r0, #16386	; 0x4002
4000374c:	eb00a50f 	bl	4002cb90 <printf>
40003750:	e59d1094 	ldr	r1, [sp, #148]	; 0x94
40003754:	e30d2a5c 	movw	r2, #55900	; 0xda5c
40003758:	e3442002 	movt	r2, #16386	; 0x4002
4000375c:	e30d3a68 	movw	r3, #55912	; 0xda68
40003760:	e3443002 	movt	r3, #16386	; 0x4002
40003764:	e3510001 	cmp	r1, #1
40003768:	e30d0aec 	movw	r0, #56044	; 0xdaec
4000376c:	01a01002 	moveq	r1, r2
40003770:	e3440002 	movt	r0, #16386	; 0x4002
40003774:	11a01003 	movne	r1, r3
40003778:	e5dd209c 	ldrb	r2, [sp, #156]	; 0x9c
4000377c:	eb00a503 	bl	4002cb90 <printf>
40003780:	e5d53008 	ldrb	r3, [r5, #8]
40003784:	e3530000 	cmp	r3, #0
40003788:	0a000014 	beq	400037e0 <main+0x3a8>
4000378c:	e5d53009 	ldrb	r3, [r5, #9]
40003790:	e3530000 	cmp	r3, #0
40003794:	0a000011 	beq	400037e0 <main+0x3a8>
40003798:	e28dbe89 	add	fp, sp, #2192	; 0x890
4000379c:	e28bb008 	add	fp, fp, #8
400037a0:	e3a00001 	mov	r0, #1
400037a4:	eb009df5 	bl	4002af80 <h3_cpu_off>
400037a8:	e3a00002 	mov	r0, #2
400037ac:	eb009df3 	bl	4002af80 <h3_cpu_off>
400037b0:	e3a00003 	mov	r0, #3
400037b4:	eb009df1 	bl	4002af80 <h3_cpu_off>
400037b8:	ea00001b 	b	4000382c <main+0x3f4>
400037bc:	ebfff735 	bl	40001498 <net::net_handle()>
400037c0:	e28d3064 	add	r3, sp, #100	; 0x64
400037c4:	e28d205c 	add	r2, sp, #92	; 0x5c
400037c8:	e1a01005 	mov	r1, r5
400037cc:	e1a00008 	mov	r0, r8
400037d0:	eb000c8b 	bl	40006a04 <McpButtons::Wait(ltc::Source&, ltc::TimeCode&, ltc::TimeCode&)>
400037d4:	e3500000 	cmp	r0, #0
400037d8:	1afffff7 	bne	400037bc <main+0x384>
400037dc:	eaffffc8 	b	40003704 <main+0x2cc>
400037e0:	e28d1fd3 	add	r1, sp, #844	; 0x34c
400037e4:	e28d0f69 	add	r0, sp, #420	; 0x1a4
400037e8:	eb00288c 	bl	4000da20 <LtcDisplayParams::Set(LtcDisplayRgb*)>
400037ec:	e5d53009 	ldrb	r3, [r5, #9]
400037f0:	e3530000 	cmp	r3, #0
400037f4:	0a000151 	beq	40003d40 <main+0x908>
400037f8:	e28d0f69 	add	r0, sp, #420	; 0x1a4
400037fc:	e28d1fd3 	add	r1, sp, #844	; 0x34c
40003800:	e28dbe89 	add	fp, sp, #2192	; 0x890
40003804:	eb002885 	bl	4000da20 <LtcDisplayParams::Set(LtcDisplayRgb*)>
40003808:	e5dd11aa 	ldrb	r1, [sp, #426]	; 0x1aa
4000380c:	e28d0fd3 	add	r0, sp, #844	; 0x34c
40003810:	e28bb008 	add	fp, fp, #8
40003814:	eb00455d 	bl	40014d90 <LtcDisplayRgb::Init(pixel::Type)>
40003818:	e28d0fd3 	add	r0, sp, #844	; 0x34c
4000381c:	eb00452d 	bl	40014cd8 <LtcDisplayRgb::Print()>
40003820:	e5d53009 	ldrb	r3, [r5, #9]
40003824:	e3530000 	cmp	r3, #0
40003828:	1affffdc 	bne	400037a0 <main+0x368>
4000382c:	e30d1ac4 	movw	r1, #56004	; 0xdac4
40003830:	e28d0e6f 	add	r0, sp, #1776	; 0x6f0
40003834:	e3441002 	movt	r1, #16386	; 0x4002
40003838:	e280000c 	add	r0, r0, #12
4000383c:	ebfffd29 	bl	40002ce8 <RDMNetLLRPOnly::RDMNetLLRPOnly(char const*)>
40003840:	e59d26fc 	ldr	r2, [sp, #1788]	; 0x6fc
40003844:	e3003801 	movw	r3, #2049	; 0x801
40003848:	e3403601 	movt	r3, #1537	; 0x601
4000384c:	e58d3748 	str	r3, [sp, #1864]	; 0x748
40003850:	e3520000 	cmp	r2, #0
40003854:	0a0004c1 	beq	40004b60 <main+0x1728>
40003858:	e5d20000 	ldrb	r0, [r2]
4000385c:	e5ddc75a 	ldrb	ip, [sp, #1882]	; 0x75a
40003860:	e3500000 	cmp	r0, #0
40003864:	0a0004f4 	beq	40004c3c <main+0x1804>
40003868:	e1a03002 	mov	r3, r2
4000386c:	e5f31001 	ldrb	r1, [r3, #1]!
40003870:	e3510000 	cmp	r1, #0
40003874:	1afffffc 	bne	4000386c <main+0x434>
40003878:	e0433002 	sub	r3, r3, r2
4000387c:	e6ef3073 	uxtb	r3, r3
40003880:	e3530020 	cmp	r3, #32
40003884:	31a00003 	movcc	r0, r3
40003888:	23a00020 	movcs	r0, #32
4000388c:	e35c0000 	cmp	ip, #0
40003890:	0a00022a 	beq	40004140 <main+0xd08>
40003894:	e3530000 	cmp	r3, #0
40003898:	e1a06000 	mov	r6, r0
4000389c:	0a000523 	beq	40004d30 <main+0x18f8>
400038a0:	e082e000 	add	lr, r2, r0
400038a4:	e28d3e72 	add	r3, sp, #1824	; 0x720
400038a8:	e2833008 	add	r3, r3, #8
400038ac:	e1a01003 	mov	r1, r3
400038b0:	e4d2c001 	ldrb	ip, [r2], #1
400038b4:	e15e0002 	cmp	lr, r2
400038b8:	e4c1c001 	strb	ip, [r1], #1
400038bc:	1afffffb 	bne	400038b0 <main+0x478>
400038c0:	e58d6000 	str	r6, [sp]
400038c4:	e3046084 	movw	r6, #16516	; 0x4084
400038c8:	e3446003 	movt	r6, #16387	; 0x4003
400038cc:	e5cd0758 	strb	r0, [sp, #1880]	; 0x758
400038d0:	e5cd0898 	strb	r0, [sp, #2200]	; 0x898
400038d4:	e3a07001 	mov	r7, #1
400038d8:	e3a09000 	mov	r9, #0
400038dc:	e3a02004 	mov	r2, #4
400038e0:	e3a01009 	mov	r1, #9
400038e4:	e98d0280 	stmib	sp, {r7, r9}
400038e8:	e5960000 	ldr	r0, [r6]
400038ec:	eb00639d 	bl	4001c768 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
400038f0:	e58d9008 	str	r9, [sp, #8]
400038f4:	e1a0300b 	mov	r3, fp
400038f8:	e5960000 	ldr	r0, [r6]
400038fc:	e3a02024 	mov	r2, #36	; 0x24
40003900:	e58d7004 	str	r7, [sp, #4]
40003904:	e3a01009 	mov	r1, #9
40003908:	e58d7000 	str	r7, [sp]
4000390c:	eb006395 	bl	4001c768 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
40003910:	e28d0c07 	add	r0, sp, #1792	; 0x700
40003914:	e2800004 	add	r0, r0, #4
40003918:	eb005c6e 	bl	4001aad8 <RDMDeviceResponder::Init()>
4000391c:	e28d0c07 	add	r0, sp, #1792	; 0x700
40003920:	e2800004 	add	r0, r0, #4
40003924:	ebfffcbb 	bl	40002c18 <RDMNetDevice::Print()>
40003928:	e5d43000 	ldrb	r3, [r4]
4000392c:	e1a0000b 	mov	r0, fp
40003930:	e3530001 	cmp	r3, #1
40003934:	0a000145 	beq	40003e50 <main+0xa18>
40003938:	e5d53003 	ldrb	r3, [r5, #3]
4000393c:	e3530000 	cmp	r3, #0
40003940:	0a000142 	beq	40003e50 <main+0xa18>
40003944:	e28d9e7a 	add	r9, sp, #1952	; 0x7a0
40003948:	eb001ae7 	bl	4000a4ec <ArtNetNode::ArtNetNode()>
4000394c:	e3a07000 	mov	r7, #0
40003950:	e30237d0 	movw	r3, #10192	; 0x27d0
40003954:	e3443000 	movt	r3, #16384	; 0x4000
40003958:	e289900c 	add	r9, r9, #12
4000395c:	e58d38b0 	str	r3, [sp, #2224]	; 0x8b0
40003960:	e5d46000 	ldrb	r6, [r4]
40003964:	e28dae43 	add	sl, sp, #1072	; 0x430
40003968:	e3040068 	movw	r0, #16488	; 0x4068
4000396c:	e28a3033 	add	r3, sl, #51	; 0x33
40003970:	e3440003 	movt	r0, #16387	; 0x4003
40003974:	e28a1077 	add	r1, sl, #119	; 0x77
40003978:	e3a02000 	mov	r2, #0
4000397c:	e24ac004 	sub	ip, sl, #4
40003980:	e58d243c 	str	r2, [sp, #1084]	; 0x43c
40003984:	e58d2444 	str	r2, [sp, #1092]	; 0x444
40003988:	e58d2448 	str	r2, [sp, #1096]	; 0x448
4000398c:	e58d2454 	str	r2, [sp, #1108]	; 0x454
40003990:	e58d2460 	str	r2, [sp, #1120]	; 0x460
40003994:	e580c000 	str	ip, [r0]
40003998:	e4c32001 	strb	r2, [r3], #1
4000399c:	e1530001 	cmp	r3, r1
400039a0:	1afffffc 	bne	40003998 <main+0x560>
400039a4:	e5cd2473 	strb	r2, [sp, #1139]	; 0x473
400039a8:	e28dee46 	add	lr, sp, #1120	; 0x460
400039ac:	e5cd2475 	strb	r2, [sp, #1141]	; 0x475
400039b0:	e3a0c003 	mov	ip, #3
400039b4:	e5cdc465 	strb	ip, [sp, #1125]	; 0x465
400039b8:	e28ee006 	add	lr, lr, #6
400039bc:	e5cd2476 	strb	r2, [sp, #1142]	; 0x476
400039c0:	e305c403 	movw	ip, #21507	; 0x5403
400039c4:	e1cec0b0 	strh	ip, [lr]
400039c8:	e28dee46 	add	lr, sp, #1120	; 0x460
400039cc:	e5cd247c 	strb	r2, [sp, #1148]	; 0x47c
400039d0:	e28ee008 	add	lr, lr, #8
400039d4:	e304ce43 	movw	ip, #20035	; 0x4e43
400039d8:	e30d2b08 	movw	r2, #56072	; 0xdb08
400039dc:	e1cec0b0 	strh	ip, [lr]
400039e0:	e3a0c002 	mov	ip, #2
400039e4:	e5cdc46a 	strb	ip, [sp, #1130]	; 0x46a
400039e8:	e3a0c004 	mov	ip, #4
400039ec:	e5cdc474 	strb	ip, [sp, #1140]	; 0x474
400039f0:	e3a0c001 	mov	ip, #1
400039f4:	e5cdc47b 	strb	ip, [sp, #1147]	; 0x47b
400039f8:	e3e0c000 	mvn	ip, #0
400039fc:	e5cdc47d 	strb	ip, [sp, #1149]	; 0x47d
40003a00:	e3e0c002 	mvn	ip, #2
40003a04:	e3442002 	movt	r2, #16386	; 0x4002
40003a08:	e3a0106f 	mov	r1, #111	; 0x6f
40003a0c:	e5cdc47e 	strb	ip, [sp, #1150]	; 0x47e
40003a10:	e28a3053 	add	r3, sl, #83	; 0x53
40003a14:	e28a0063 	add	r0, sl, #99	; 0x63
40003a18:	ea000000 	b	40003a20 <main+0x5e8>
40003a1c:	e5f21001 	ldrb	r1, [r2, #1]!
40003a20:	e4c31001 	strb	r1, [r3], #1
40003a24:	e1530000 	cmp	r3, r0
40003a28:	1afffffb 	bne	40003a1c <main+0x5e4>
40003a2c:	e30d2b1c 	movw	r2, #56092	; 0xdb1c
40003a30:	e3a0104c 	mov	r1, #76	; 0x4c
40003a34:	e3442002 	movt	r2, #16386	; 0x4002
40003a38:	e28a0073 	add	r0, sl, #115	; 0x73
40003a3c:	ea000000 	b	40003a44 <main+0x60c>
40003a40:	e5f21001 	ldrb	r1, [r2, #1]!
40003a44:	e4c31001 	strb	r1, [r3], #1
40003a48:	e1530000 	cmp	r3, r0
40003a4c:	1afffffb 	bne	40003a40 <main+0x608>
40003a50:	e28d2e4a 	add	r2, sp, #1184	; 0x4a0
40003a54:	e3a03019 	mov	r3, #25
40003a58:	e5cd34a3 	strb	r3, [sp, #1187]	; 0x4a3
40003a5c:	e2822004 	add	r2, r2, #4
40003a60:	e3003201 	movw	r3, #513	; 0x201
40003a64:	e30d0c4c 	movw	r0, #56396	; 0xdc4c
40003a68:	e1c230b0 	strh	r3, [r2]
40003a6c:	e3a01041 	mov	r1, #65	; 0x41
40003a70:	e3440002 	movt	r0, #16386	; 0x4002
40003a74:	e28a303b 	add	r3, sl, #59	; 0x3b
40003a78:	e3a02007 	mov	r2, #7
40003a7c:	ea000002 	b	40003a8c <main+0x654>
40003a80:	e5f01001 	ldrb	r1, [r0, #1]!
40003a84:	e3510000 	cmp	r1, #0
40003a88:	0a0001a7 	beq	4000412c <main+0xcf4>
40003a8c:	e1a0e002 	mov	lr, r2
40003a90:	e2522001 	subs	r2, r2, #1
40003a94:	e1a0c003 	mov	ip, r3
40003a98:	e4c31001 	strb	r1, [r3], #1
40003a9c:	1afffff7 	bne	40003a80 <main+0x648>
40003aa0:	e3053555 	movw	r3, #21845	; 0x5555
40003aa4:	e3560003 	cmp	r6, #3
40003aa8:	e3443205 	movt	r3, #16901	; 0x4205
40003aac:	e3a02000 	mov	r2, #0
40003ab0:	e58a3028 	str	r3, [sl, #40]	; 0x28
40003ab4:	e3a03006 	mov	r3, #6
40003ab8:	e58d345c 	str	r3, [sp, #1116]	; 0x45c
40003abc:	e3a03030 	mov	r3, #48	; 0x30
40003ac0:	e58d344c 	str	r3, [sp, #1100]	; 0x44c
40003ac4:	e3a0308e 	mov	r3, #142	; 0x8e
40003ac8:	e58d3450 	str	r3, [sp, #1104]	; 0x450
40003acc:	e3a03003 	mov	r3, #3
40003ad0:	e5cd3460 	strb	r3, [sp, #1120]	; 0x460
40003ad4:	e24a3004 	sub	r3, sl, #4
40003ad8:	e5cd2472 	strb	r2, [sp, #1138]	; 0x472
40003adc:	0a00020a 	beq	4000430c <main+0xed4>
40003ae0:	e28d0e65 	add	r0, sp, #1616	; 0x650
40003ae4:	e2800008 	add	r0, r0, #8
40003ae8:	eb004a6f 	bl	400164ac <Midi::Midi()>
40003aec:	e5d43000 	ldrb	r3, [r4]
40003af0:	e3530002 	cmp	r3, #2
40003af4:	0a0000ad 	beq	40003db0 <main+0x978>
40003af8:	e5d53002 	ldrb	r3, [r5, #2]
40003afc:	e3530000 	cmp	r3, #0
40003b00:	0a0000a0 	beq	40003d88 <main+0x950>
40003b04:	e5d43000 	ldrb	r3, [r4]
40003b08:	e3530005 	cmp	r3, #5
40003b0c:	0a00014c 	beq	40004044 <main+0xc0c>
40003b10:	e5d53007 	ldrb	r3, [r5, #7]
40003b14:	e3530000 	cmp	r3, #0
40003b18:	0a000149 	beq	40004044 <main+0xc0c>
40003b1c:	e1a00009 	mov	r0, r9
40003b20:	eb004cdf 	bl	40016ea4 <AppleMidi::AppleMidi()>
40003b24:	e304306c 	movw	r3, #16492	; 0x406c
40003b28:	e3443003 	movt	r3, #16387	; 0x4003
40003b2c:	e5839000 	str	r9, [r3]
40003b30:	e59f3874 	ldr	r3, [pc, #2164]	; 400043ac <main+0xf74>
40003b34:	e58d37ac 	str	r3, [sp, #1964]	; 0x7ac
40003b38:	e3a03000 	mov	r3, #0
40003b3c:	e58d3888 	str	r3, [sp, #2184]	; 0x888
40003b40:	e58d388c 	str	r3, [sp, #2188]	; 0x88c
40003b44:	e58d3890 	str	r3, [sp, #2192]	; 0x890
40003b48:	e1c93eb8 	strh	r3, [r9, #232]	; 0xe8
40003b4c:	e28d3e4a 	add	r3, sp, #1184	; 0x4a0
40003b50:	e2833008 	add	r3, r3, #8
40003b54:	e58d3020 	str	r3, [sp, #32]
40003b58:	e5d43000 	ldrb	r3, [r4]
40003b5c:	e3042074 	movw	r2, #16500	; 0x4074
40003b60:	f2c00050 	vmov.i32	q8, #0	; 0x00000000
40003b64:	e3442003 	movt	r2, #16387	; 0x4003
40003b68:	e3530007 	cmp	r3, #7
40003b6c:	e28d3f47 	add	r3, sp, #284	; 0x11c
40003b70:	f4430a0f 	vst1.8	{d16-d17}, [r3]
40003b74:	e28d3f46 	add	r3, sp, #280	; 0x118
40003b78:	e5823000 	str	r3, [r2]
40003b7c:	e3a02000 	mov	r2, #0
40003b80:	e58d2118 	str	r2, [sp, #280]	; 0x118
40003b84:	e28d3e53 	add	r3, sp, #1328	; 0x530
40003b88:	e58d2134 	str	r2, [sp, #308]	; 0x134
40003b8c:	e3e02000 	mvn	r2, #0
40003b90:	e58d212c 	str	r2, [sp, #300]	; 0x12c
40003b94:	e58d2130 	str	r2, [sp, #304]	; 0x130
40003b98:	0a0000d6 	beq	40003ef8 <main+0xac0>
40003b9c:	e5d52005 	ldrb	r2, [r5, #5]
40003ba0:	e3520000 	cmp	r2, #0
40003ba4:	0a0000d3 	beq	40003ef8 <main+0xac0>
40003ba8:	e58d3010 	str	r3, [sp, #16]
40003bac:	e28d9e52 	add	r9, sp, #1312	; 0x520
40003bb0:	e2899008 	add	r9, r9, #8
40003bb4:	e28d3088 	add	r3, sp, #136	; 0x88
40003bb8:	e58d3018 	str	r3, [sp, #24]
40003bbc:	e5dd115e 	ldrb	r1, [sp, #350]	; 0x15e
40003bc0:	e28d00c8 	add	r0, sp, #200	; 0xc8
40003bc4:	eb004283 	bl	400145d8 <LtcSender::LtcSender(unsigned long)>
40003bc8:	e5d43000 	ldrb	r3, [r4]
40003bcc:	e3530000 	cmp	r3, #0
40003bd0:	1a0000dc 	bne	40003f48 <main+0xb10>
40003bd4:	e3042080 	movw	r2, #16512	; 0x4080
40003bd8:	e3442003 	movt	r2, #16387	; 0x4003
40003bdc:	e5923000 	ldr	r3, [r2]
40003be0:	e3a01000 	mov	r1, #0
40003be4:	e59d2010 	ldr	r2, [sp, #16]
40003be8:	e58d1530 	str	r1, [sp, #1328]	; 0x530
40003bec:	e2833014 	add	r3, r3, #20
40003bf0:	e58d1534 	str	r1, [sp, #1332]	; 0x534
40003bf4:	e2820008 	add	r0, r2, #8
40003bf8:	e3042064 	movw	r2, #16484	; 0x4064
40003bfc:	e3a01d7d 	mov	r1, #8000	; 0x1f40
40003c00:	e3442003 	movt	r2, #16387	; 0x4003
40003c04:	e58d1528 	str	r1, [sp, #1320]	; 0x528
40003c08:	e3e01000 	mvn	r1, #0
40003c0c:	e5829000 	str	r9, [r2]
40003c10:	e30d2bf8 	movw	r2, #56312	; 0xdbf8
40003c14:	e58d152c 	str	r1, [sp, #1324]	; 0x52c
40003c18:	e3a0107f 	mov	r1, #127	; 0x7f
40003c1c:	e3442002 	movt	r2, #16386	; 0x4002
40003c20:	eb00a3f7 	bl	4002cc04 <snprintf>
40003c24:	e2403001 	sub	r3, r0, #1
40003c28:	e58d3534 	str	r3, [sp, #1332]	; 0x534
40003c2c:	e28d007c 	add	r0, sp, #124	; 0x7c
40003c30:	eb0058ea 	bl	40019fe0 <GPSParams::GPSParams()>
40003c34:	e5d43000 	ldrb	r3, [r4]
40003c38:	e3530006 	cmp	r3, #6
40003c3c:	0a000193 	beq	40004290 <main+0xe58>
40003c40:	e59d3081 	ldr	r3, [sp, #129]	; 0x81
40003c44:	e5dd1080 	ldrb	r1, [sp, #128]	; 0x80
40003c48:	ee003a10 	vmov	s0, r3
40003c4c:	e28d3c03 	add	r3, sp, #768	; 0x300
40003c50:	e58d302c 	str	r3, [sp, #44]	; 0x2c
40003c54:	e1a00003 	mov	r0, r3
40003c58:	eb005a43 	bl	4001a56c <GPSTimeClient::GPSTimeClient(float, GPSModule)>
40003c5c:	e3a03000 	mov	r3, #0
40003c60:	e58d301c 	str	r3, [sp, #28]
40003c64:	e58d3030 	str	r3, [sp, #48]	; 0x30
40003c68:	e59d1158 	ldr	r1, [sp, #344]	; 0x158
40003c6c:	e28d0f8d 	add	r0, sp, #564	; 0x234
40003c70:	e5dd3164 	ldrb	r3, [sp, #356]	; 0x164
40003c74:	e5dd2163 	ldrb	r2, [sp, #355]	; 0x163
40003c78:	e2011c02 	and	r1, r1, #512	; 0x200
40003c7c:	e58d1024 	str	r1, [sp, #36]	; 0x24
40003c80:	e1a09001 	mov	r9, r1
40003c84:	e5dd1162 	ldrb	r1, [sp, #354]	; 0x162
40003c88:	eb002f90 	bl	4000fad0 <NtpServer::NtpServer(unsigned long, unsigned long, unsigned long)>
40003c8c:	e3590000 	cmp	r9, #0
40003c90:	1a00014d 	bne	400041cc <main+0xd94>
40003c94:	e5dd3176 	ldrb	r3, [sp, #374]	; 0x176
40003c98:	e28d2064 	add	r2, sp, #100	; 0x64
40003c9c:	e59d0158 	ldr	r0, [sp, #344]	; 0x158
40003ca0:	e28d105c 	add	r1, sp, #92	; 0x5c
40003ca4:	e2433001 	sub	r3, r3, #1
40003ca8:	e16f3f13 	clz	r3, r3
40003cac:	e7e0ced0 	ubfx	ip, r0, #29, #1
40003cb0:	e7e00e50 	ubfx	r0, r0, #28, #1
40003cb4:	e1a032a3 	lsr	r3, r3, #5
40003cb8:	e58d0000 	str	r0, [sp]
40003cbc:	e28d0f9d 	add	r0, sp, #628	; 0x274
40003cc0:	e58dc004 	str	ip, [sp, #4]
40003cc4:	eb003168 	bl	4001026c <LtcGenerator::LtcGenerator(ltc::TimeCode const*, ltc::TimeCode const*, bool, bool, bool)>
40003cc8:	e5d43000 	ldrb	r3, [r4]
40003ccc:	e28d0074 	add	r0, sp, #116	; 0x74
40003cd0:	e3e02000 	mvn	r2, #0
40003cd4:	e3530002 	cmp	r3, #2
40003cd8:	13530005 	cmpne	r3, #5
40003cdc:	e3043054 	movw	r3, #16468	; 0x4054
40003ce0:	e3443003 	movt	r3, #16387	; 0x4003
40003ce4:	e5830000 	str	r0, [r3]
40003ce8:	e30033e7 	movw	r3, #999	; 0x3e7
40003cec:	e1cd27f4 	strd	r2, [sp, #116]	; 0x74
40003cf0:	0a000006 	beq	40003d10 <main+0x8d8>
40003cf4:	e5d53007 	ldrb	r3, [r5, #7]
40003cf8:	e3530000 	cmp	r3, #0
40003cfc:	0a000002 	beq	40003d0c <main+0x8d4>
40003d00:	e5d53002 	ldrb	r3, [r5, #2]
40003d04:	e3530000 	cmp	r3, #0
40003d08:	1a000000 	bne	40003d10 <main+0x8d8>
40003d0c:	eb0035bf 	bl	40011410 <LtcMidiSystemRealtime::Start()>
40003d10:	e5d43000 	ldrb	r3, [r4]
40003d14:	e2433001 	sub	r3, r3, #1
40003d18:	e3530006 	cmp	r3, #6
40003d1c:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
40003d20:	ea000407 	b	40004d44 <main+0x190c>
40003d24:	40004948 	andmi	r4, r0, r8, asr #18
40003d28:	4000493c 	andmi	r4, r0, ip, lsr r9
40003d2c:	40004930 	andmi	r4, r0, r0, lsr r9
40003d30:	4000491c 	andmi	r4, r0, ip, lsl r9
40003d34:	40004910 	andmi	r4, r0, r0, lsl r9
40003d38:	400048e8 	andmi	r4, r0, r8, ror #17
40003d3c:	400043b0 			; <UNDEFINED> instruction: 0x400043b0
40003d40:	e28dbe89 	add	fp, sp, #2192	; 0x890
40003d44:	e28d0fd3 	add	r0, sp, #844	; 0x34c
40003d48:	e3a01003 	mov	r1, #3
40003d4c:	e28bb008 	add	fp, fp, #8
40003d50:	eb00440e 	bl	40014d90 <LtcDisplayRgb::Init(pixel::Type)>
40003d54:	e28d3f72 	add	r3, sp, #456	; 0x1c8
40003d58:	e28d0e1d 	add	r0, sp, #464	; 0x1d0
40003d5c:	e1a0200b 	mov	r2, fp
40003d60:	e4d31001 	ldrb	r1, [r3], #1
40003d64:	e1530000 	cmp	r3, r0
40003d68:	e4c21001 	strb	r1, [r2], #1
40003d6c:	1afffffb 	bne	40003d60 <main+0x928>
40003d70:	e3a03000 	mov	r3, #0
40003d74:	e1a0100b 	mov	r1, fp
40003d78:	e5cd38a0 	strb	r3, [sp, #2208]	; 0x8a0
40003d7c:	e28d0fd3 	add	r0, sp, #844	; 0x34c
40003d80:	eb004361 	bl	40014b0c <LtcDisplayRgb::ShowInfo(char const*)>
40003d84:	eafffea3 	b	40003818 <main+0x3e0>
40003d88:	e28d0e65 	add	r0, sp, #1616	; 0x650
40003d8c:	e3a01002 	mov	r1, #2
40003d90:	e2800008 	add	r0, r0, #8
40003d94:	eb004a30 	bl	4001665c <Midi::Init(midi::Direction)>
40003d98:	e5d43000 	ldrb	r3, [r4]
40003d9c:	e3530002 	cmp	r3, #2
40003da0:	0a000002 	beq	40003db0 <main+0x978>
40003da4:	e5d53002 	ldrb	r3, [r5, #2]
40003da8:	e3530000 	cmp	r3, #0
40003dac:	1affff54 	bne	40003b04 <main+0x6cc>
40003db0:	e30d0b30 	movw	r0, #56112	; 0xdb30
40003db4:	e3440002 	movt	r0, #16386	; 0x4002
40003db8:	eb00a374 	bl	4002cb90 <printf>
40003dbc:	e59d165c 	ldr	r1, [sp, #1628]	; 0x65c
40003dc0:	e30d2a70 	movw	r2, #55920	; 0xda70
40003dc4:	e3442002 	movt	r2, #16386	; 0x4002
40003dc8:	e30d3a78 	movw	r3, #55928	; 0xda78
40003dcc:	e3443002 	movt	r3, #16386	; 0x4002
40003dd0:	e3510001 	cmp	r1, #1
40003dd4:	e30d0b38 	movw	r0, #56120	; 0xdb38
40003dd8:	11a01003 	movne	r1, r3
40003ddc:	e3440002 	movt	r0, #16386	; 0x4002
40003de0:	01a01002 	moveq	r1, r2
40003de4:	eb00a369 	bl	4002cb90 <printf>
40003de8:	e59d365c 	ldr	r3, [sp, #1628]	; 0x65c
40003dec:	e3530001 	cmp	r3, #1
40003df0:	0a00013a 	beq	400042e0 <main+0xea8>
40003df4:	e5dd1660 	ldrb	r1, [sp, #1632]	; 0x660
40003df8:	e30d2a8c 	movw	r2, #55948	; 0xda8c
40003dfc:	e3442002 	movt	r2, #16386	; 0x4002
40003e00:	e30d3a94 	movw	r3, #55956	; 0xda94
40003e04:	e3443002 	movt	r3, #16386	; 0x4002
40003e08:	e3510000 	cmp	r1, #0
40003e0c:	e30d0b64 	movw	r0, #56164	; 0xdb64
40003e10:	11a01002 	movne	r1, r2
40003e14:	e3440002 	movt	r0, #16386	; 0x4002
40003e18:	01a01003 	moveq	r1, r3
40003e1c:	eb00a35b 	bl	4002cb90 <printf>
40003e20:	e59d1658 	ldr	r1, [sp, #1624]	; 0x658
40003e24:	e3070a12 	movw	r0, #31250	; 0x7a12
40003e28:	e30d3ae8 	movw	r3, #56040	; 0xdae8
40003e2c:	e30d2aa0 	movw	r2, #55968	; 0xdaa0
40003e30:	e1510000 	cmp	r1, r0
40003e34:	e30d0b78 	movw	r0, #56184	; 0xdb78
40003e38:	e3443002 	movt	r3, #16386	; 0x4002
40003e3c:	e3442002 	movt	r2, #16386	; 0x4002
40003e40:	11a02003 	movne	r2, r3
40003e44:	e3440002 	movt	r0, #16386	; 0x4002
40003e48:	eb00a350 	bl	4002cb90 <printf>
40003e4c:	eaffff2c 	b	40003b04 <main+0x6cc>
40003e50:	e28d9e7a 	add	r9, sp, #1952	; 0x7a0
40003e54:	eb0019a4 	bl	4000a4ec <ArtNetNode::ArtNetNode()>
40003e58:	e289900c 	add	r9, r9, #12
40003e5c:	e30237d0 	movw	r3, #10192	; 0x27d0
40003e60:	e3443000 	movt	r3, #16384	; 0x4000
40003e64:	e1a00009 	mov	r0, r9
40003e68:	e58d38b0 	str	r3, [sp, #2224]	; 0x8b0
40003e6c:	eb001f55 	bl	4000bbc8 <ArtNetParams::ArtNetParams()>
40003e70:	e1a00009 	mov	r0, r9
40003e74:	eb001f72 	bl	4000bc44 <ArtNetParams::Load()>
40003e78:	e1a00009 	mov	r0, r9
40003e7c:	eb0021d6 	bl	4000c5dc <ArtNetParams::Set()>
40003e80:	e30d2af8 	movw	r2, #56056	; 0xdaf8
40003e84:	e3a01000 	mov	r1, #0
40003e88:	e3442002 	movt	r2, #16386	; 0x4002
40003e8c:	e1a0000b 	mov	r0, fp
40003e90:	eb001931 	bl	4000a35c <ArtNetNode::SetShortName(unsigned long, char const*)>
40003e94:	e5d43000 	ldrb	r3, [r4]
40003e98:	e3530001 	cmp	r3, #1
40003e9c:	0a000362 	beq	40004c2c <main+0x17f4>
40003ea0:	e59d3177 	ldr	r3, [sp, #375]	; 0x177
40003ea4:	e28d0ea5 	add	r0, sp, #2640	; 0xa50
40003ea8:	e280000c 	add	r0, r0, #12
40003eac:	e58d38e0 	str	r3, [sp, #2272]	; 0x8e0
40003eb0:	e28d3e6f 	add	r3, sp, #1776	; 0x6f0
40003eb4:	e283300c 	add	r3, r3, #12
40003eb8:	e2832052 	add	r2, r3, #82	; 0x52
40003ebc:	e28d3ea5 	add	r3, sp, #2640	; 0xa50
40003ec0:	e2833006 	add	r3, r3, #6
40003ec4:	e4d21001 	ldrb	r1, [r2], #1
40003ec8:	e4c31001 	strb	r1, [r3], #1
40003ecc:	e1530000 	cmp	r3, r0
40003ed0:	1afffffb 	bne	40003ec4 <main+0xa8c>
40003ed4:	e5dd3a55 	ldrb	r3, [sp, #2645]	; 0xa55
40003ed8:	e1a0000b 	mov	r0, fp
40003edc:	e3a07001 	mov	r7, #1
40003ee0:	e3833010 	orr	r3, r3, #16
40003ee4:	e5cd3a55 	strb	r3, [sp, #2645]	; 0xa55
40003ee8:	eb0018fb 	bl	4000a2dc <ArtNetNode::Start()>
40003eec:	e1a0000b 	mov	r0, fp
40003ef0:	eb001e93 	bl	4000b944 <ArtNetNode::Print()>
40003ef4:	eafffe99 	b	40003960 <main+0x528>
40003ef8:	e58d3010 	str	r3, [sp, #16]
40003efc:	e2439008 	sub	r9, r3, #8
40003f00:	e1a00009 	mov	r0, r9
40003f04:	eb00287f 	bl	4000e108 <LtcEtcParams::LtcEtcParams()>
40003f08:	e1a00009 	mov	r0, r9
40003f0c:	eb002884 	bl	4000e124 <LtcEtcParams::Load()>
40003f10:	e1a00009 	mov	r0, r9
40003f14:	eb002995 	bl	4000e570 <LtcEtcParams::Set()>
40003f18:	e5d42000 	ldrb	r2, [r4]
40003f1c:	e28d3f46 	add	r3, sp, #280	; 0x118
40003f20:	e1a00003 	mov	r0, r3
40003f24:	e3520007 	cmp	r2, #7
40003f28:	e28d2088 	add	r2, sp, #136	; 0x88
40003f2c:	e58d2018 	str	r2, [sp, #24]
40003f30:	058d2134 	streq	r2, [sp, #308]	; 0x134
40003f34:	eb002701 	bl	4000db40 <LtcEtc::Start()>
40003f38:	e28d3f46 	add	r3, sp, #280	; 0x118
40003f3c:	e1a00003 	mov	r0, r3
40003f40:	eb0027e4 	bl	4000ded8 <LtcEtc::Print()>
40003f44:	eaffff1c 	b	40003bbc <main+0x784>
40003f48:	e5d53004 	ldrb	r3, [r5, #4]
40003f4c:	e3530000 	cmp	r3, #0
40003f50:	0a00032d 	beq	40004c0c <main+0x17d4>
40003f54:	e5d41000 	ldrb	r1, [r4]
40003f58:	e3042080 	movw	r2, #16512	; 0x4080
40003f5c:	e3442003 	movt	r2, #16387	; 0x4003
40003f60:	e2410003 	sub	r0, r1, #3
40003f64:	e5923000 	ldr	r3, [r2]
40003f68:	e3510006 	cmp	r1, #6
40003f6c:	13500001 	cmpne	r0, #1
40003f70:	e2833014 	add	r3, r3, #20
40003f74:	8affff18 	bhi	40003bdc <main+0x7a4>
40003f78:	e59d1158 	ldr	r1, [sp, #344]	; 0x158
40003f7c:	e3110601 	tst	r1, #1048576	; 0x100000
40003f80:	0affff15 	beq	40003bdc <main+0x7a4>
40003f84:	e59d0010 	ldr	r0, [sp, #16]
40003f88:	e3042064 	movw	r2, #16484	; 0x4064
40003f8c:	e3442003 	movt	r2, #16387	; 0x4003
40003f90:	e3a01000 	mov	r1, #0
40003f94:	e58d1530 	str	r1, [sp, #1328]	; 0x530
40003f98:	e2800008 	add	r0, r0, #8
40003f9c:	e58d1534 	str	r1, [sp, #1332]	; 0x534
40003fa0:	e3a01d7d 	mov	r1, #8000	; 0x1f40
40003fa4:	e5829000 	str	r9, [r2]
40003fa8:	e30d2bf8 	movw	r2, #56312	; 0xdbf8
40003fac:	e58d1528 	str	r1, [sp, #1320]	; 0x528
40003fb0:	e3e01000 	mvn	r1, #0
40003fb4:	e58d152c 	str	r1, [sp, #1324]	; 0x52c
40003fb8:	e3a0107f 	mov	r1, #127	; 0x7f
40003fbc:	e3442002 	movt	r2, #16386	; 0x4002
40003fc0:	eb00a30f 	bl	4002cc04 <snprintf>
40003fc4:	e59d3158 	ldr	r3, [sp, #344]	; 0x158
40003fc8:	e3130602 	tst	r3, #2097152	; 0x200000
40003fcc:	e2403001 	sub	r3, r0, #1
40003fd0:	e58d3534 	str	r3, [sp, #1332]	; 0x534
40003fd4:	159d3170 	ldrne	r3, [sp, #368]	; 0x170
40003fd8:	159d2010 	ldrne	r2, [sp, #16]
40003fdc:	17ef3453 	ubfxne	r3, r3, #8, #16
40003fe0:	114230b8 	strhne	r3, [r2, #-8]
40003fe4:	e59d9010 	ldr	r9, [sp, #16]
40003fe8:	e302186c 	movw	r1, #10348	; 0x286c
40003fec:	e3441000 	movt	r1, #16384	; 0x4000
40003ff0:	e15900b8 	ldrh	r0, [r9, #-8]
40003ff4:	eb007893 	bl	40022248 <net::udp_begin(unsigned short, void (*)(unsigned char const*, unsigned long, unsigned long, unsigned short))>
40003ff8:	e58d052c 	str	r0, [sp, #1324]	; 0x52c
40003ffc:	e30d0bac 	movw	r0, #56236	; 0xdbac
40004000:	e3440002 	movt	r0, #16386	; 0x4002
40004004:	eb00a323 	bl	4002cc98 <puts>
40004008:	e15910b8 	ldrh	r1, [r9, #-8]
4000400c:	e30d0bb8 	movw	r0, #56248	; 0xdbb8
40004010:	e3440002 	movt	r0, #16386	; 0x4002
40004014:	eb00a2dd 	bl	4002cb90 <printf>
40004018:	e30d0bc4 	movw	r0, #56260	; 0xdbc4
4000401c:	e2891008 	add	r1, r9, #8
40004020:	e3440002 	movt	r0, #16386	; 0x4002
40004024:	eb00a2d9 	bl	4002cb90 <printf>
40004028:	e15930b8 	ldrh	r3, [r9, #-8]
4000402c:	e30d2bd4 	movw	r2, #56276	; 0xdbd4
40004030:	e3442002 	movt	r2, #16386	; 0x4002
40004034:	e3a01006 	mov	r1, #6
40004038:	e3a00000 	mov	r0, #0
4000403c:	eb006b29 	bl	4001ece8 <mdns_service_record_add(char const*, mdns::Services, char const*, unsigned short)>
40004040:	eafffef9 	b	40003c2c <main+0x7f4>
40004044:	e1a00009 	mov	r0, r9
40004048:	eb004b95 	bl	40016ea4 <AppleMidi::AppleMidi()>
4000404c:	e5d43000 	ldrb	r3, [r4]
40004050:	e3a01005 	mov	r1, #5
40004054:	e59f2350 	ldr	r2, [pc, #848]	; 400043ac <main+0xf74>
40004058:	e3530005 	cmp	r3, #5
4000405c:	e304306c 	movw	r3, #16492	; 0x406c
40004060:	e3443003 	movt	r3, #16387	; 0x4003
40004064:	e58d27ac 	str	r2, [sp, #1964]	; 0x7ac
40004068:	e3a02000 	mov	r2, #0
4000406c:	e5839000 	str	r9, [r3]
40004070:	e3a03000 	mov	r3, #0
40004074:	e58d3888 	str	r3, [sp, #2184]	; 0x888
40004078:	e1a00002 	mov	r0, r2
4000407c:	e58d388c 	str	r3, [sp, #2188]	; 0x88c
40004080:	e58d3890 	str	r3, [sp, #2192]	; 0x890
40004084:	e1c93eb8 	strh	r3, [r9, #232]	; 0xe8
40004088:	e28d3e4a 	add	r3, sp, #1184	; 0x4a0
4000408c:	e2833008 	add	r3, r3, #8
40004090:	058d3888 	streq	r3, [sp, #2184]	; 0x888
40004094:	e58d3020 	str	r3, [sp, #32]
40004098:	e1d931b6 	ldrh	r3, [r9, #22]
4000409c:	eb006b11 	bl	4001ece8 <mdns_service_record_add(char const*, mdns::Services, char const*, unsigned short)>
400040a0:	e1d901b6 	ldrh	r0, [r9, #22]
400040a4:	e3021834 	movw	r1, #10292	; 0x2834
400040a8:	e3441000 	movt	r1, #16384	; 0x4000
400040ac:	eb007865 	bl	40022248 <net::udp_begin(unsigned short, void (*)(unsigned char const*, unsigned long, unsigned long, unsigned short))>
400040b0:	e58d07b4 	str	r0, [sp, #1972]	; 0x7b4
400040b4:	e30217fc 	movw	r1, #10236	; 0x27fc
400040b8:	e1d901b6 	ldrh	r0, [r9, #22]
400040bc:	e3441000 	movt	r1, #16384	; 0x4000
400040c0:	e2800001 	add	r0, r0, #1
400040c4:	e6ff0070 	uxth	r0, r0
400040c8:	eb00785e 	bl	40022248 <net::udp_begin(unsigned short, void (*)(unsigned char const*, unsigned long, unsigned long, unsigned short))>
400040cc:	e58d07b8 	str	r0, [sp, #1976]	; 0x7b8
400040d0:	e3a03b03 	mov	r3, #3072	; 0xc00
400040d4:	e34031c2 	movt	r3, #450	; 0x1c2
400040d8:	e3a00c02 	mov	r0, #512	; 0x200
400040dc:	e5933084 	ldr	r3, [r3, #132]	; 0x84
400040e0:	e58d37b0 	str	r3, [sp, #1968]	; 0x7b0
400040e4:	eb00a4bc 	bl	4002d3dc <operator new[](unsigned int)>
400040e8:	e59d27bc 	ldr	r2, [sp, #1980]	; 0x7bc
400040ec:	e1a03000 	mov	r3, r0
400040f0:	e58d0890 	str	r0, [sp, #2192]	; 0x890
400040f4:	e5802008 	str	r2, [r0, #8]
400040f8:	e3e0207f 	mvn	r2, #127	; 0x7f
400040fc:	e5c32000 	strb	r2, [r3]
40004100:	e30d0b90 	movw	r0, #56208	; 0xdb90
40004104:	e3440002 	movt	r0, #16386	; 0x4002
40004108:	e3a02061 	mov	r2, #97	; 0x61
4000410c:	e5c32001 	strb	r2, [r3, #1]
40004110:	eb00a2e0 	bl	4002cc98 <puts>
40004114:	e28d1e7d 	add	r1, sp, #2000	; 0x7d0
40004118:	e30d0b9c 	movw	r0, #56220	; 0xdb9c
4000411c:	e3440002 	movt	r0, #16386	; 0x4002
40004120:	e2811004 	add	r1, r1, #4
40004124:	eb00a299 	bl	4002cb90 <printf>
40004128:	eafffe8a 	b	40003b58 <main+0x720>
4000412c:	e08cc00e 	add	ip, ip, lr
40004130:	e4c31001 	strb	r1, [r3], #1
40004134:	e153000c 	cmp	r3, ip
40004138:	1afffffc 	bne	40004130 <main+0xcf8>
4000413c:	eafffe57 	b	40003aa0 <main+0x668>
40004140:	e3530000 	cmp	r3, #0
40004144:	1082c000 	addne	ip, r2, r0
40004148:	128d3c07 	addne	r3, sp, #1792	; 0x700
4000414c:	12833008 	addne	r3, r3, #8
40004150:	0a0002f4 	beq	40004d28 <main+0x18f0>
40004154:	e4d21001 	ldrb	r1, [r2], #1
40004158:	e15c0002 	cmp	ip, r2
4000415c:	e4c31001 	strb	r1, [r3], #1
40004160:	1afffffb 	bne	40004154 <main+0xd1c>
40004164:	e5cd0759 	strb	r0, [sp, #1881]	; 0x759
40004168:	eafffde8 	b	40003910 <main+0x4d8>
4000416c:	e59d3158 	ldr	r3, [sp, #344]	; 0x158
40004170:	e3130002 	tst	r3, #2
40004174:	0afffd50 	beq	400036bc <main+0x284>
40004178:	e5dd31d1 	ldrb	r3, [sp, #465]	; 0x1d1
4000417c:	e28d8fad 	add	r8, sp, #692	; 0x2b4
40004180:	e5dd2174 	ldrb	r2, [sp, #372]	; 0x174
40004184:	e1a00008 	mov	r0, r8
40004188:	e16f3f13 	clz	r3, r3
4000418c:	e2422001 	sub	r2, r2, #1
40004190:	e16f2f12 	clz	r2, r2
40004194:	e1a032a3 	lsr	r3, r3, #5
40004198:	e58d3000 	str	r3, [sp]
4000419c:	e1a022a2 	lsr	r2, r2, #5
400041a0:	e5dd3175 	ldrb	r3, [sp, #373]	; 0x175
400041a4:	eb0008a4 	bl	4000643c <McpButtons::McpButtons(ltc::Source, bool, long, bool)>
400041a8:	e1a00008 	mov	r0, r8
400041ac:	eb0009a4 	bl	40006844 <McpButtons::Check()>
400041b0:	eafffd53 	b	40003704 <main+0x2cc>
400041b4:	e3a0000c 	mov	r0, #12
400041b8:	eb00a486 	bl	4002d3d8 <operator new(unsigned int)>
400041bc:	e1a05000 	mov	r5, r0
400041c0:	eb0022a1 	bl	4000cc4c <LtcDisplayMax72197Segment::LtcDisplayMax72197Segment()>
400041c4:	e58d5098 	str	r5, [sp, #152]	; 0x98
400041c8:	eafffd31 	b	40003694 <main+0x25c>
400041cc:	e3a00001 	mov	r0, #1
400041d0:	eb006d85 	bl	4001f7ec <ntp_client_stop(bool)>
400041d4:	e5dd205f 	ldrb	r2, [sp, #95]	; 0x5f
400041d8:	e3a00ee1 	mov	r0, #3600	; 0xe10
400041dc:	e59d3234 	ldr	r3, [sp, #564]	; 0x234
400041e0:	e0000290 	mul	r0, r0, r2
400041e4:	e5dd205d 	ldrb	r2, [sp, #93]	; 0x5d
400041e8:	e5ddc05e 	ldrb	ip, [sp, #94]	; 0x5e
400041ec:	e0823003 	add	r3, r2, r3
400041f0:	e5dd205c 	ldrb	r2, [sp, #92]	; 0x5c
400041f4:	e5dd1060 	ldrb	r1, [sp, #96]	; 0x60
400041f8:	ee072a10 	vmov	s14, r2
400041fc:	e3a0203c 	mov	r2, #60	; 0x3c
40004200:	e3510000 	cmp	r1, #0
40004204:	e1020c82 	smlabb	r2, r2, ip, r0
40004208:	e0823003 	add	r3, r2, r3
4000420c:	e58d3238 	str	r3, [sp, #568]	; 0x238
40004210:	0a000057 	beq	40004374 <main+0xf3c>
40004214:	e3510001 	cmp	r1, #1
40004218:	0a0002ad 	beq	40004cd4 <main+0x189c>
4000421c:	e2411002 	sub	r1, r1, #2
40004220:	e3510001 	cmp	r1, #1
40004224:	9eb87bc7 	vcvtls.f64.s32	d7, s14
40004228:	9ddf0b58 	vldrls	d16, [pc, #352]	; 40004390 <main+0xf58>
4000422c:	9e277b20 	vmulls.f64	d7, d7, d16
40004230:	9ebc7bc7 	vcvtls.u32.f64	s14, d7
40004234:	9d8d7a8f 	vstrls	s14, [sp, #572]	; 0x23c
40004238:	e6bf3f33 	rev	r3, r3
4000423c:	e28d0f8d 	add	r0, sp, #564	; 0x234
40004240:	e58d3254 	str	r3, [sp, #596]	; 0x254
40004244:	e58d3264 	str	r3, [sp, #612]	; 0x264
40004248:	e58d326c 	str	r3, [sp, #620]	; 0x26c
4000424c:	e59d323c 	ldr	r3, [sp, #572]	; 0x23c
40004250:	e6bf3f33 	rev	r3, r3
40004254:	e58d3258 	str	r3, [sp, #600]	; 0x258
40004258:	e58d3268 	str	r3, [sp, #616]	; 0x268
4000425c:	e58d3270 	str	r3, [sp, #624]	; 0x270
40004260:	eb002e39 	bl	4000fb4c <NtpServer::Start()>
40004264:	e28d0f8d 	add	r0, sp, #564	; 0x234
40004268:	eb002e44 	bl	4000fb80 <NtpServer::Print()>
4000426c:	e3a03000 	mov	r3, #0
40004270:	e30d2bd4 	movw	r2, #56276	; 0xdbd4
40004274:	e3442002 	movt	r2, #16386	; 0x4002
40004278:	e3a01004 	mov	r1, #4
4000427c:	e1a00003 	mov	r0, r3
40004280:	eb006a98 	bl	4001ece8 <mdns_service_record_add(char const*, mdns::Services, char const*, unsigned short)>
40004284:	eafffe82 	b	40003c94 <main+0x85c>
40004288:	e3a02000 	mov	r2, #0
4000428c:	eafffcda 	b	400035fc <main+0x1c4>
40004290:	e28d007c 	add	r0, sp, #124	; 0x7c
40004294:	eb00575a 	bl	4001a004 <GPSParams::Load()>
40004298:	e59d307c 	ldr	r3, [sp, #124]	; 0x7c
4000429c:	e3130002 	tst	r3, #2
400042a0:	0afffe66 	beq	40003c40 <main+0x808>
400042a4:	e5d43000 	ldrb	r3, [r4]
400042a8:	e3530006 	cmp	r3, #6
400042ac:	1afffe63 	bne	40003c40 <main+0x808>
400042b0:	e59d3081 	ldr	r3, [sp, #129]	; 0x81
400042b4:	e5dd1080 	ldrb	r1, [sp, #128]	; 0x80
400042b8:	ee003a10 	vmov	s0, r3
400042bc:	e5d53009 	ldrb	r3, [r5, #9]
400042c0:	e58d301c 	str	r3, [sp, #28]
400042c4:	e3530000 	cmp	r3, #0
400042c8:	1a00026e 	bne	40004c88 <main+0x1850>
400042cc:	e58d3030 	str	r3, [sp, #48]	; 0x30
400042d0:	e28d0c03 	add	r0, sp, #768	; 0x300
400042d4:	e58d002c 	str	r0, [sp, #44]	; 0x2c
400042d8:	eb0058a3 	bl	4001a56c <GPSTimeClient::GPSTimeClient(float, GPSModule)>
400042dc:	eafffe61 	b	40003c68 <main+0x830>
400042e0:	e5dd16f0 	ldrb	r1, [sp, #1776]	; 0x6f0
400042e4:	e30d3ae8 	movw	r3, #56040	; 0xdae8
400042e8:	e3443002 	movt	r3, #16386	; 0x4002
400042ec:	e30d2a80 	movw	r2, #55936	; 0xda80
400042f0:	e3442002 	movt	r2, #16386	; 0x4002
400042f4:	e3510000 	cmp	r1, #0
400042f8:	e30d0b4c 	movw	r0, #56140	; 0xdb4c
400042fc:	11a02003 	movne	r2, r3
40004300:	e3440002 	movt	r0, #16386	; 0x4002
40004304:	eb00a221 	bl	4002cb90 <printf>
40004308:	eafffeb9 	b	40003df4 <main+0x9bc>
4000430c:	e58d3010 	str	r3, [sp, #16]
40004310:	e1a00009 	mov	r0, r9
40004314:	eb0046f0 	bl	40015edc <TCNetParams::TCNetParams()>
40004318:	e1a00009 	mov	r0, r9
4000431c:	eb0046fb 	bl	40015f10 <TCNetParams::Load()>
40004320:	e59d3010 	ldr	r3, [sp, #16]
40004324:	e1a00009 	mov	r0, r9
40004328:	e1a01003 	mov	r1, r3
4000432c:	eb004829 	bl	400163d8 <TCNetParams::Set(TCNet*)>
40004330:	e30217d4 	movw	r1, #10196	; 0x27d4
40004334:	e3a02000 	mov	r2, #0
40004338:	e3441000 	movt	r1, #16384	; 0x4000
4000433c:	e30e0a60 	movw	r0, #60000	; 0xea60
40004340:	e58d1454 	str	r1, [sp, #1108]	; 0x454
40004344:	e1a01002 	mov	r1, r2
40004348:	eb0077be 	bl	40022248 <net::udp_begin(unsigned short, void (*)(unsigned char const*, unsigned long, unsigned long, unsigned short))>
4000434c:	e58d042c 	str	r0, [sp, #1068]	; 0x42c
40004350:	e3a02000 	mov	r2, #0
40004354:	e1a01002 	mov	r1, r2
40004358:	e30e0a61 	movw	r0, #60001	; 0xea61
4000435c:	eb0077b9 	bl	40022248 <net::udp_begin(unsigned short, void (*)(unsigned char const*, unsigned long, unsigned long, unsigned short))>
40004360:	e59d3010 	ldr	r3, [sp, #16]
40004364:	e58d0430 	str	r0, [sp, #1072]	; 0x430
40004368:	e1a00003 	mov	r0, r3
4000436c:	ebfff9f0 	bl	40002b34 <TCNet::Print()>
40004370:	eafffdda 	b	40003ae0 <main+0x6a8>
40004374:	eeb87bc7 	vcvt.f64.s32	d7, s14
40004378:	eddf0b06 	vldr	d16, [pc, #24]	; 40004398 <main+0xf60>
4000437c:	ee277b20 	vmul.f64	d7, d7, d16
40004380:	eebc7bc7 	vcvt.u32.f64	s14, d7
40004384:	ed8d7a8f 	vstr	s14, [sp, #572]	; 0x23c
40004388:	eaffffaa 	b	40004238 <main+0xe00>
4000438c:	e320f000 	nop	{0}
40004390:	11000000 	mrsne	r0, (UNDEF: 0)
40004394:	41a11111 			; <UNDEFINED> instruction: 0x41a11111
40004398:	55400000 	strbpl	r0, [r0, #-0]
4000439c:	41a55555 			; <UNDEFINED> instruction: 0x41a55555
400043a0:	400314b4 			; <UNDEFINED> instruction: 0x400314b4
400043a4:	4002dc1e 	andmi	sp, r2, lr, lsl ip
400043a8:	400312b0 			; <UNDEFINED> instruction: 0x400312b0
400043ac:	40031ac4 	andmi	r1, r3, r4, asr #21
400043b0:	e59d0018 	ldr	r0, [sp, #24]
400043b4:	eb002efe 	bl	4000ffb4 <LtcEtcReader::Start()>
400043b8:	e5d43000 	ldrb	r3, [r4]
400043bc:	e3a02004 	mov	r2, #4
400043c0:	e3a01003 	mov	r1, #3
400043c4:	e28d0f81 	add	r0, sp, #516	; 0x204
400043c8:	e2833001 	add	r3, r3, #1
400043cc:	e304907c 	movw	r9, #16508	; 0x407c
400043d0:	e3449003 	movt	r9, #16387	; 0x4003
400043d4:	eb000e6d 	bl	40007d90 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned long)>
400043d8:	e28d0f4e 	add	r0, sp, #312	; 0x138
400043dc:	eb0010e6 	bl	4000877c <RemoteConfigParams::RemoteConfigParams()>
400043e0:	e28d0f4e 	add	r0, sp, #312	; 0x138
400043e4:	eb0010eb 	bl	40008798 <RemoteConfigParams::Load()>
400043e8:	e28d1f81 	add	r1, sp, #516	; 0x204
400043ec:	e28d0f4e 	add	r0, sp, #312	; 0x138
400043f0:	eb0011c3 	bl	40008b04 <RemoteConfigParams::Set(RemoteConfig*)>
400043f4:	e5d43000 	ldrb	r3, [r4]
400043f8:	e30d2d40 	movw	r2, #56640	; 0xdd40
400043fc:	e3442002 	movt	r2, #16386	; 0x4002
40004400:	e3a0100c 	mov	r1, #12
40004404:	e58d9034 	str	r9, [sp, #52]	; 0x34
40004408:	e30d0be0 	movw	r0, #56288	; 0xdbe0
4000440c:	e0212391 	mla	r1, r1, r3, r2
40004410:	e3440002 	movt	r0, #16386	; 0x4002
40004414:	e58d2014 	str	r2, [sp, #20]
40004418:	eb00a1dc 	bl	4002cb90 <printf>
4000441c:	e5993000 	ldr	r3, [r9]
40004420:	e5939014 	ldr	r9, [r3, #20]
40004424:	e5d43000 	ldrb	r3, [r4]
40004428:	e3590000 	cmp	r9, #0
4000442c:	e58d3010 	str	r3, [sp, #16]
40004430:	0a000049 	beq	4000455c <main+0x1124>
40004434:	e5992008 	ldr	r2, [r9, #8]
40004438:	e1a00009 	mov	r0, r9
4000443c:	e5991004 	ldr	r1, [r9, #4]
40004440:	e5993000 	ldr	r3, [r9]
40004444:	e58d2028 	str	r2, [sp, #40]	; 0x28
40004448:	e2422001 	sub	r2, r2, #1
4000444c:	e5933020 	ldr	r3, [r3, #32]
40004450:	e58d1018 	str	r1, [sp, #24]
40004454:	e3a01000 	mov	r1, #0
40004458:	e58d2038 	str	r2, [sp, #56]	; 0x38
4000445c:	e12fff33 	blx	r3
40004460:	e59d1018 	ldr	r1, [sp, #24]
40004464:	e2513001 	subs	r3, r1, #1
40004468:	e1a02003 	mov	r2, r3
4000446c:	0a000014 	beq	400044c4 <main+0x108c>
40004470:	e58d6018 	str	r6, [sp, #24]
40004474:	e3a03000 	mov	r3, #0
40004478:	e58d403c 	str	r4, [sp, #60]	; 0x3c
4000447c:	e1a06009 	mov	r6, r9
40004480:	e1a04002 	mov	r4, r2
40004484:	e1a09008 	mov	r9, r8
40004488:	e1a08005 	mov	r8, r5
4000448c:	e1a05003 	mov	r5, r3
40004490:	e5962000 	ldr	r2, [r6]
40004494:	e2855001 	add	r5, r5, #1
40004498:	e3a01020 	mov	r1, #32
4000449c:	e1a00006 	mov	r0, r6
400044a0:	e5922014 	ldr	r2, [r2, #20]
400044a4:	e12fff32 	blx	r2
400044a8:	e1550004 	cmp	r5, r4
400044ac:	1afffff7 	bne	40004490 <main+0x1058>
400044b0:	e59d403c 	ldr	r4, [sp, #60]	; 0x3c
400044b4:	e1a05008 	mov	r5, r8
400044b8:	e1a08009 	mov	r8, r9
400044bc:	e1a09006 	mov	r9, r6
400044c0:	e59d6018 	ldr	r6, [sp, #24]
400044c4:	e59d0010 	ldr	r0, [sp, #16]
400044c8:	e3a0100c 	mov	r1, #12
400044cc:	e59dc014 	ldr	ip, [sp, #20]
400044d0:	e0000091 	mul	r0, r1, r0
400044d4:	e5993000 	ldr	r3, [r9]
400044d8:	e3a01000 	mov	r1, #0
400044dc:	e08ce000 	add	lr, ip, r0
400044e0:	e59d2038 	ldr	r2, [sp, #56]	; 0x38
400044e4:	e5933020 	ldr	r3, [r3, #32]
400044e8:	e58d0038 	str	r0, [sp, #56]	; 0x38
400044ec:	e1a00009 	mov	r0, r9
400044f0:	e58de018 	str	lr, [sp, #24]
400044f4:	e12fff33 	blx	r3
400044f8:	e59dc014 	ldr	ip, [sp, #20]
400044fc:	e59d0038 	ldr	r0, [sp, #56]	; 0x38
40004500:	e7dc3000 	ldrb	r3, [ip, r0]
40004504:	e599c004 	ldr	ip, [r9, #4]
40004508:	e3530000 	cmp	r3, #0
4000450c:	0a00000b 	beq	40004540 <main+0x1108>
40004510:	e35c0000 	cmp	ip, #0
40004514:	0a0001f4 	beq	40004cec <main+0x18b4>
40004518:	e59d2018 	ldr	r2, [sp, #24]
4000451c:	e3a03001 	mov	r3, #1
40004520:	e082c00c 	add	ip, r2, ip
40004524:	ea000002 	b	40004534 <main+0x10fc>
40004528:	e152000c 	cmp	r2, ip
4000452c:	e2833001 	add	r3, r3, #1
40004530:	0a000002 	beq	40004540 <main+0x1108>
40004534:	e5f21001 	ldrb	r1, [r2, #1]!
40004538:	e3510000 	cmp	r1, #0
4000453c:	1afffff9 	bne	40004528 <main+0x10f0>
40004540:	e5992000 	ldr	r2, [r9]
40004544:	e1a00009 	mov	r0, r9
40004548:	e59d1028 	ldr	r1, [sp, #40]	; 0x28
4000454c:	e592201c 	ldr	r2, [r2, #28]
40004550:	e1a0c002 	mov	ip, r2
40004554:	e59d2018 	ldr	r2, [sp, #24]
40004558:	e12fff3c 	blx	ip
4000455c:	e59d3010 	ldr	r3, [sp, #16]
40004560:	e3530006 	cmp	r3, #6
40004564:	0a00015e 	beq	40004ae4 <main+0x16ac>
40004568:	e59d3010 	ldr	r3, [sp, #16]
4000456c:	e3530003 	cmp	r3, #3
40004570:	0a0001a8 	beq	40004c18 <main+0x17e0>
40004574:	e303357c 	movw	r3, #13692	; 0x357c
40004578:	e3443006 	movt	r3, #16390	; 0x4006
4000457c:	e58d3028 	str	r3, [sp, #40]	; 0x28
40004580:	e5d53009 	ldrb	r3, [r5, #9]
40004584:	e3530000 	cmp	r3, #0
40004588:	0a00016d 	beq	40004b44 <main+0x170c>
4000458c:	e28d0f5f 	add	r0, sp, #380	; 0x17c
40004590:	eb0037a5 	bl	4001242c <LtcOutputs::Print()>
40004594:	e3073780 	movw	r3, #30592	; 0x7780
40004598:	e3443005 	movt	r3, #16389	; 0x4005
4000459c:	e58d3014 	str	r3, [sp, #20]
400045a0:	e3043088 	movw	r3, #16520	; 0x4088
400045a4:	e3443003 	movt	r3, #16387	; 0x4003
400045a8:	e58d3010 	str	r3, [sp, #16]
400045ac:	e3043060 	movw	r3, #16480	; 0x4060
400045b0:	e3443003 	movt	r3, #16387	; 0x4003
400045b4:	e58d3018 	str	r3, [sp, #24]
400045b8:	e30a373c 	movw	r3, #42812	; 0xa73c
400045bc:	e3443005 	movt	r3, #16389	; 0x4005
400045c0:	e58d3034 	str	r3, [sp, #52]	; 0x34
400045c4:	e30237c8 	movw	r3, #10184	; 0x27c8
400045c8:	e3443000 	movt	r3, #16384	; 0x4000
400045cc:	e58d3044 	str	r3, [sp, #68]	; 0x44
400045d0:	e3073cb1 	movw	r3, #31921	; 0x7cb1
400045d4:	e3493521 	movt	r3, #38177	; 0x9521
400045d8:	e58d3038 	str	r3, [sp, #56]	; 0x38
400045dc:	e30b3273 	movw	r3, #45683	; 0xb273
400045e0:	e34435e7 	movt	r3, #17895	; 0x45e7
400045e4:	e58d303c 	str	r3, [sp, #60]	; 0x3c
400045e8:	e3043dd3 	movw	r3, #19923	; 0x4dd3
400045ec:	e3413062 	movt	r3, #4194	; 0x1062
400045f0:	e58d3040 	str	r3, [sp, #64]	; 0x40
400045f4:	e3a03001 	mov	r3, #1
400045f8:	e5cd31f4 	strb	r3, [sp, #500]	; 0x1f4
400045fc:	eb009d90 	bl	4002bc44 <h3_watchdog_enable()>
40004600:	eb009d99 	bl	4002bc6c <h3_watchdog_restart()>
40004604:	ebfff3a3 	bl	40001498 <net::net_handle()>
40004608:	e5d43000 	ldrb	r3, [r4]
4000460c:	e3530007 	cmp	r3, #7
40004610:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
40004614:	ea000013 	b	40004668 <main+0x1230>
40004618:	400046c4 	andmi	r4, r0, r4, asr #13
4000461c:	40004638 	andmi	r4, r0, r8, lsr r6
40004620:	400048dc 	ldrdmi	r4, [r0], -ip
40004624:	400048a0 	andmi	r4, r0, r0, lsr #17
40004628:	40004870 	andmi	r4, r0, r0, ror r8
4000462c:	40004864 	andmi	r4, r0, r4, ror #16
40004630:	40004824 	andmi	r4, r0, r4, lsr #16
40004634:	40004638 	andmi	r4, r0, r8, lsr r6
40004638:	f57ff05f 	dmb	sy
4000463c:	e59d3014 	ldr	r3, [sp, #20]
40004640:	e5933000 	ldr	r3, [r3]
40004644:	e3530000 	cmp	r3, #0
40004648:	1a0000c1 	bne	40004954 <main+0x151c>
4000464c:	e59d3018 	ldr	r3, [sp, #24]
40004650:	e5930000 	ldr	r0, [r3]
40004654:	eb0036ef 	bl	40012218 <LtcOutputs::ShowSysTime()>
40004658:	e59d3010 	ldr	r3, [sp, #16]
4000465c:	e3a01002 	mov	r1, #2
40004660:	e5930000 	ldr	r0, [r3]
40004664:	eb008626 	bl	40025f04 <Hardware::SetMode(hardware::ledblink::Mode)>
40004668:	e3570000 	cmp	r7, #0
4000466c:	1a000018 	bne	400046d4 <main+0x129c>
40004670:	e3560003 	cmp	r6, #3
40004674:	0a000025 	beq	40004710 <main+0x12d8>
40004678:	e5d53000 	ldrb	r3, [r5]
4000467c:	e3530000 	cmp	r3, #0
40004680:	1a00004e 	bne	400047c0 <main+0x1388>
40004684:	e5dd32d4 	ldrb	r3, [sp, #724]	; 0x2d4
40004688:	e3530000 	cmp	r3, #0
4000468c:	0a000001 	beq	40004698 <main+0x1260>
40004690:	e1a00008 	mov	r0, r8
40004694:	eb000b39 	bl	40007380 <McpButtons::Run()>
40004698:	eb008d76 	bl	40027c78 <SoftwareTimerRun()>
4000469c:	e59d9230 	ldr	r9, [sp, #560]	; 0x230
400046a0:	e28d206c 	add	r2, sp, #108	; 0x6c
400046a4:	e5990040 	ldr	r0, [r9, #64]	; 0x40
400046a8:	e2891044 	add	r1, r9, #68	; 0x44
400046ac:	eb007634 	bl	40021f84 <net::tcp_read(long, unsigned char const**, unsigned long&)>
400046b0:	e2501000 	subs	r1, r0, #0
400046b4:	1a0000ab 	bne	40004968 <main+0x1530>
400046b8:	e28d004c 	add	r0, sp, #76	; 0x4c
400046bc:	eb006070 	bl	4001c884 <ConfigStore::Flash()>
400046c0:	eaffffce 	b	40004600 <main+0x11c8>
400046c4:	e28d0050 	add	r0, sp, #80	; 0x50
400046c8:	eb00390d 	bl	40012b04 <LtcReader::Run()>
400046cc:	e3570000 	cmp	r7, #0
400046d0:	0affffe6 	beq	40004670 <main+0x1238>
400046d4:	e59d0898 	ldr	r0, [sp, #2200]	; 0x898
400046d8:	e28d1e89 	add	r1, sp, #2192	; 0x890
400046dc:	e281100c 	add	r1, r1, #12
400046e0:	e28d306c 	add	r3, sp, #108	; 0x6c
400046e4:	e28d2e8a 	add	r2, sp, #2208	; 0x8a0
400046e8:	eb007709 	bl	40022314 <net::udp_recv2(long, unsigned char const**, unsigned long*, unsigned short*)>
400046ec:	e3a03b03 	mov	r3, #3072	; 0xc00
400046f0:	e1a01000 	mov	r1, r0
400046f4:	e34031c2 	movt	r3, #450	; 0x1c2
400046f8:	e1a0000b 	mov	r0, fp
400046fc:	e5933084 	ldr	r3, [r3, #132]	; 0x84
40004700:	e58d38a4 	str	r3, [sp, #2212]	; 0x8a4
40004704:	eb00181d 	bl	4000a780 <ArtNetNode::Process(unsigned long)>
40004708:	e3560003 	cmp	r6, #3
4000470c:	1affffd9 	bne	40004678 <main+0x1240>
40004710:	e59d0430 	ldr	r0, [sp, #1072]	; 0x430
40004714:	e28d3056 	add	r3, sp, #86	; 0x56
40004718:	e28d2d11 	add	r2, sp, #1088	; 0x440
4000471c:	e28a100c 	add	r1, sl, #12
40004720:	eb0076fb 	bl	40022314 <net::udp_recv2(long, unsigned char const**, unsigned long*, unsigned short*)>
40004724:	e3500000 	cmp	r0, #0
40004728:	1a000093 	bne	4000497c <main+0x1544>
4000472c:	e59d042c 	ldr	r0, [sp, #1068]	; 0x42c
40004730:	e28d3056 	add	r3, sp, #86	; 0x56
40004734:	e28a2010 	add	r2, sl, #16
40004738:	e28a100c 	add	r1, sl, #12
4000473c:	eb0076f4 	bl	40022314 <net::udp_recv2(long, unsigned char const**, unsigned long*, unsigned short*)>
40004740:	e59d3448 	ldr	r3, [sp, #1096]	; 0x448
40004744:	e3a02b03 	mov	r2, #3072	; 0xc00
40004748:	e34021c2 	movt	r2, #450	; 0x1c2
4000474c:	e5921084 	ldr	r1, [r2, #132]	; 0x84
40004750:	e0413003 	sub	r3, r1, r3
40004754:	e58d1444 	str	r1, [sp, #1092]	; 0x444
40004758:	e3530ffa 	cmp	r3, #1000	; 0x3e8
4000475c:	3affffc5 	bcc	40004678 <main+0x1240>
40004760:	e5dd3473 	ldrb	r3, [sp, #1139]	; 0x473
40004764:	e58d1448 	str	r1, [sp, #1096]	; 0x448
40004768:	e2833001 	add	r3, r3, #1
4000476c:	e5cd3473 	strb	r3, [sp, #1139]	; 0x473
40004770:	e5923088 	ldr	r3, [r2, #136]	; 0x88
40004774:	e58d3477 	str	r3, [sp, #1143]	; 0x477
40004778:	eb008779 	bl	40026564 <hardware_uptime_seconds()>
4000477c:	e28d3e47 	add	r3, sp, #1136	; 0x470
40004780:	e283300f 	add	r3, r3, #15
40004784:	e1c300b0 	strh	r0, [r3]
40004788:	e59d3034 	ldr	r3, [sp, #52]	; 0x34
4000478c:	e59d042c 	ldr	r0, [sp, #1068]	; 0x42c
40004790:	e5932000 	ldr	r2, [r3]
40004794:	e593300c 	ldr	r3, [r3, #12]
40004798:	e3520000 	cmp	r2, #0
4000479c:	0affffb5 	beq	40004678 <main+0x1240>
400047a0:	e30e2a60 	movw	r2, #60000	; 0xea60
400047a4:	e28a1033 	add	r1, sl, #51	; 0x33
400047a8:	e58d2000 	str	r2, [sp]
400047ac:	e3a02044 	mov	r2, #68	; 0x44
400047b0:	eb0076f0 	bl	40022378 <net::udp_send(long, unsigned char const*, unsigned long, unsigned long, unsigned short)>
400047b4:	e5d53000 	ldrb	r3, [r5]
400047b8:	e3530000 	cmp	r3, #0
400047bc:	0affffb0 	beq	40004684 <main+0x124c>
400047c0:	e59d30bc 	ldr	r3, [sp, #188]	; 0xbc
400047c4:	e3530000 	cmp	r3, #0
400047c8:	0affffad 	beq	40004684 <main+0x124c>
400047cc:	e5dd20c1 	ldrb	r2, [sp, #193]	; 0xc1
400047d0:	e3520000 	cmp	r2, #0
400047d4:	0affffaa 	beq	40004684 <main+0x124c>
400047d8:	e3a02b02 	mov	r2, #2048	; 0x800
400047dc:	e34021c2 	movt	r2, #450	; 0x1c2
400047e0:	e5921010 	ldr	r1, [r2, #16]
400047e4:	e2111008 	ands	r1, r1, #8
400047e8:	1affffa5 	bne	40004684 <main+0x124c>
400047ec:	e59d00c4 	ldr	r0, [sp, #196]	; 0xc4
400047f0:	e3500000 	cmp	r0, #0
400047f4:	0affffa2 	beq	40004684 <main+0x124c>
400047f8:	e5902000 	ldr	r2, [r0]
400047fc:	e59dc044 	ldr	ip, [sp, #68]	; 0x44
40004800:	e5922028 	ldr	r2, [r2, #40]	; 0x28
40004804:	e5cd10c1 	strb	r1, [sp, #193]	; 0xc1
40004808:	e152000c 	cmp	r2, ip
4000480c:	1a0000d0 	bne	40004b54 <main+0x171c>
40004810:	e2531000 	subs	r1, r3, #0
40004814:	e28d00b0 	add	r0, sp, #176	; 0xb0
40004818:	13a01001 	movne	r1, #1
4000481c:	eb00816f 	bl	40024de0 <Display::SetSleepTimer(bool)>
40004820:	eaffff97 	b	40004684 <main+0x124c>
40004824:	e28d00fc 	add	r0, sp, #252	; 0xfc
40004828:	eb003dd7 	bl	40013f8c <SystimeReader::Run()>
4000482c:	e59d301c 	ldr	r3, [sp, #28]
40004830:	e3530000 	cmp	r3, #0
40004834:	1a00007d 	bne	40004a30 <main+0x15f8>
40004838:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
4000483c:	e5939000 	ldr	r9, [r3]
40004840:	e59d3024 	ldr	r3, [sp, #36]	; 0x24
40004844:	e3530000 	cmp	r3, #0
40004848:	0a000083 	beq	40004a5c <main+0x1624>
4000484c:	e5d9200a 	ldrb	r2, [r9, #10]
40004850:	e3520000 	cmp	r2, #0
40004854:	0affff83 	beq	40004668 <main+0x1230>
40004858:	e1a00009 	mov	r0, r9
4000485c:	eb008900 	bl	40026c64 <HwClock::Process()>
40004860:	eaffff80 	b	40004668 <main+0x1230>
40004864:	e59d0020 	ldr	r0, [sp, #32]
40004868:	eb003c1f 	bl	400138ec <RtpMidiReader::Run()>
4000486c:	eaffff7d 	b	40004668 <main+0x1230>
40004870:	e28d0f9d 	add	r0, sp, #628	; 0x274
40004874:	eb00322c 	bl	4001112c <LtcGenerator::Update()>
40004878:	e28d0f9d 	add	r0, sp, #628	; 0x274
4000487c:	eb002fef 	bl	40010840 <LtcGenerator::HandleButtons()>
40004880:	e5dd32b0 	ldrb	r3, [sp, #688]	; 0x2b0
40004884:	e3530001 	cmp	r3, #1
40004888:	e59d3010 	ldr	r3, [sp, #16]
4000488c:	e5930000 	ldr	r0, [r3]
40004890:	0a000031 	beq	4000495c <main+0x1524>
40004894:	e3a01002 	mov	r1, #2
40004898:	eb008599 	bl	40025f04 <Hardware::SetMode(hardware::ledblink::Mode)>
4000489c:	eaffff71 	b	40004668 <main+0x1230>
400048a0:	f57ff05f 	dmb	sy
400048a4:	e59d3014 	ldr	r3, [sp, #20]
400048a8:	e5933000 	ldr	r3, [r3]
400048ac:	e3530000 	cmp	r3, #0
400048b0:	1a000027 	bne	40004954 <main+0x151c>
400048b4:	e59d3018 	ldr	r3, [sp, #24]
400048b8:	e5930000 	ldr	r0, [r3]
400048bc:	eb003655 	bl	40012218 <LtcOutputs::ShowSysTime()>
400048c0:	e59d3010 	ldr	r3, [sp, #16]
400048c4:	e3a01002 	mov	r1, #2
400048c8:	e5930000 	ldr	r0, [r3]
400048cc:	eb00858c 	bl	40025f04 <Hardware::SetMode(hardware::ledblink::Mode)>
400048d0:	e3e03000 	mvn	r3, #0
400048d4:	e58d30a8 	str	r3, [sp, #168]	; 0xa8
400048d8:	eaffff62 	b	40004668 <main+0x1230>
400048dc:	e28d0e3b 	add	r0, sp, #944	; 0x3b0
400048e0:	eb003a0c 	bl	40013118 <MidiReader::Run()>
400048e4:	eaffff5f 	b	40004668 <main+0x1230>
400048e8:	e59d1158 	ldr	r1, [sp, #344]	; 0x158
400048ec:	e28d00fc 	add	r0, sp, #252	; 0xfc
400048f0:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400048f4:	e2211002 	eor	r1, r1, #2
400048f8:	e7e010d1 	ubfx	r1, r1, #1, #1
400048fc:	e1831001 	orr	r1, r3, r1
40004900:	e2211001 	eor	r1, r1, #1
40004904:	e6ef1071 	uxtb	r1, r1
40004908:	eb003cdf 	bl	40013c8c <SystimeReader::Start(bool)>
4000490c:	eafffea9 	b	400043b8 <main+0xf80>
40004910:	e59d0020 	ldr	r0, [sp, #32]
40004914:	eb003adc 	bl	4001348c <RtpMidiReader::Start()>
40004918:	eafffea6 	b	400043b8 <main+0xf80>
4000491c:	e28d0f9d 	add	r0, sp, #628	; 0x274
40004920:	eb002e90 	bl	40010368 <LtcGenerator::Start()>
40004924:	e28d0f9d 	add	r0, sp, #628	; 0x274
40004928:	eb002fed 	bl	400108e4 <LtcGenerator::Print()>
4000492c:	eafffea1 	b	400043b8 <main+0xf80>
40004930:	e28d00a0 	add	r0, sp, #160	; 0xa0
40004934:	eb003e07 	bl	40014158 <TCNetReader::Start()>
40004938:	eafffe9e 	b	400043b8 <main+0xf80>
4000493c:	e28d0e3b 	add	r0, sp, #944	; 0x3b0
40004940:	eb003930 	bl	40012e08 <MidiReader::Start()>
40004944:	eafffe9b 	b	400043b8 <main+0xf80>
40004948:	e59d0014 	ldr	r0, [sp, #20]
4000494c:	eb002d10 	bl	4000fd94 <ArtNetReader::Start()>
40004950:	eafffe98 	b	400043b8 <main+0xf80>
40004954:	e59d3010 	ldr	r3, [sp, #16]
40004958:	e5930000 	ldr	r0, [r3]
4000495c:	e3a01003 	mov	r1, #3
40004960:	eb008567 	bl	40025f04 <Hardware::SetMode(hardware::ledblink::Mode)>
40004964:	eaffff3f 	b	40004668 <main+0x1230>
40004968:	e59d206c 	ldr	r2, [sp, #108]	; 0x6c
4000496c:	e7990102 	ldr	r0, [r9, r2, lsl #2]
40004970:	e5992044 	ldr	r2, [r9, #68]	; 0x44
40004974:	eb001530 	bl	40009e3c <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)>
40004978:	eaffff4e 	b	400046b8 <main+0x1280>
4000497c:	e59d343c 	ldr	r3, [sp, #1084]	; 0x43c
40004980:	e5d32007 	ldrb	r2, [r3, #7]
40004984:	e35200fe 	cmp	r2, #254	; 0xfe
40004988:	1affff67 	bne	4000472c <main+0x12f4>
4000498c:	e5dd2461 	ldrb	r2, [sp, #1121]	; 0x461
40004990:	e3520000 	cmp	r2, #0
40004994:	1a000034 	bne	40004a6c <main+0x1634>
40004998:	e5dd0460 	ldrb	r0, [sp, #1120]	; 0x460
4000499c:	e28d2e45 	add	r2, sp, #1104	; 0x450
400049a0:	e2822008 	add	r2, r2, #8
400049a4:	e30eca60 	movw	ip, #60000	; 0xea60
400049a8:	edd26a00 	vldr	s13, [r2]
400049ac:	e59d244c 	ldr	r2, [sp, #1100]	; 0x44c
400049b0:	e793e002 	ldr	lr, [r3, r2]
400049b4:	e30e2e80 	movw	r2, #61056	; 0xee80
400049b8:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
400049bc:	e3402036 	movt	r2, #54	; 0x36
400049c0:	e0831e93 	umull	r1, r3, r3, lr
400049c4:	e5cd0070 	strb	r0, [sp, #112]	; 0x70
400049c8:	e3a01ffa 	mov	r1, #1000	; 0x3e8
400049cc:	e1a00aa3 	lsr	r0, r3, #21
400049d0:	e1a03aa3 	lsr	r3, r3, #21
400049d4:	e060e092 	mls	r0, r2, r0, lr
400049d8:	e5cd306f 	strb	r3, [sp, #111]	; 0x6f
400049dc:	e59d303c 	ldr	r3, [sp, #60]	; 0x3c
400049e0:	e0823093 	umull	r3, r2, r3, r0
400049e4:	e1a03722 	lsr	r3, r2, #14
400049e8:	e1a02722 	lsr	r2, r2, #14
400049ec:	e063039c 	mls	r3, ip, r3, r0
400049f0:	e5cd206e 	strb	r2, [sp, #110]	; 0x6e
400049f4:	e59d2040 	ldr	r2, [sp, #64]	; 0x40
400049f8:	e0820392 	umull	r0, r2, r2, r3
400049fc:	e1a02322 	lsr	r2, r2, #6
40004a00:	e0633291 	mls	r3, r1, r2, r3
40004a04:	e5cd206d 	strb	r2, [sp, #109]	; 0x6d
40004a08:	ee073a90 	vmov	s15, r3
40004a0c:	eef87ae7 	vcvt.f32.s32	s15, s15
40004a10:	ee877aa6 	vdiv.f32	s14, s15, s13
40004a14:	eefc7ac7 	vcvt.u32.f32	s15, s14
40004a18:	ee173a90 	vmov	r3, s15
40004a1c:	e5cd306c 	strb	r3, [sp, #108]	; 0x6c
40004a20:	e59d3454 	ldr	r3, [sp, #1108]	; 0x454
40004a24:	e28d006c 	add	r0, sp, #108	; 0x6c
40004a28:	e12fff33 	blx	r3
40004a2c:	eaffff3e 	b	4000472c <main+0x12f4>
40004a30:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40004a34:	eb0056e6 	bl	4001a5d4 <GPSTimeClient::Run()>
40004a38:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40004a3c:	e3530000 	cmp	r3, #0
40004a40:	0affff08 	beq	40004668 <main+0x1230>
40004a44:	e59d3340 	ldr	r3, [sp, #832]	; 0x340
40004a48:	e28d00fc 	add	r0, sp, #252	; 0xfc
40004a4c:	e3530002 	cmp	r3, #2
40004a50:	0a000021 	beq	40004adc <main+0x16a4>
40004a54:	eb003ccf 	bl	40013d98 <SystimeReader::ActionStop()>
40004a58:	eaffff02 	b	40004668 <main+0x1230>
40004a5c:	eb006b83 	bl	4001f870 <ntp_client_get_status()>
40004a60:	e3500004 	cmp	r0, #4
40004a64:	0affff78 	beq	4000484c <main+0x1414>
40004a68:	eafffefe 	b	40004668 <main+0x1230>
40004a6c:	e59d1450 	ldr	r1, [sp, #1104]	; 0x450
40004a70:	e0832001 	add	r2, r3, r1
40004a74:	e5d20005 	ldrb	r0, [r2, #5]
40004a78:	e5cd006c 	strb	r0, [sp, #108]	; 0x6c
40004a7c:	e5d20004 	ldrb	r0, [r2, #4]
40004a80:	e5cd006d 	strb	r0, [sp, #109]	; 0x6d
40004a84:	e5d20003 	ldrb	r0, [r2, #3]
40004a88:	e5cd006e 	strb	r0, [sp, #110]	; 0x6e
40004a8c:	e5d22002 	ldrb	r2, [r2, #2]
40004a90:	e5cd206f 	strb	r2, [sp, #111]	; 0x6f
40004a94:	e7d32001 	ldrb	r2, [r3, r1]
40004a98:	e3520017 	cmp	r2, #23
40004a9c:	95d32069 	ldrbls	r2, [r3, #105]	; 0x69
40004aa0:	e3520018 	cmp	r2, #24
40004aa4:	03a03000 	moveq	r3, #0
40004aa8:	05cd3070 	strbeq	r3, [sp, #112]	; 0x70
40004aac:	0affffdb 	beq	40004a20 <main+0x15e8>
40004ab0:	e3520019 	cmp	r2, #25
40004ab4:	0a000005 	beq	40004ad0 <main+0x1698>
40004ab8:	e352001d 	cmp	r2, #29
40004abc:	03a03002 	moveq	r3, #2
40004ac0:	05cd3070 	strbeq	r3, [sp, #112]	; 0x70
40004ac4:	0affffd5 	beq	40004a20 <main+0x15e8>
40004ac8:	e352001e 	cmp	r2, #30
40004acc:	0a000053 	beq	40004c20 <main+0x17e8>
40004ad0:	e3a03001 	mov	r3, #1
40004ad4:	e5cd3070 	strb	r3, [sp, #112]	; 0x70
40004ad8:	eaffffd0 	b	40004a20 <main+0x15e8>
40004adc:	eb003c9e 	bl	40013d5c <SystimeReader::ActionStart()>
40004ae0:	eafffee0 	b	40004668 <main+0x1230>
40004ae4:	e59d3034 	ldr	r3, [sp, #52]	; 0x34
40004ae8:	e5933000 	ldr	r3, [r3]
40004aec:	e5930014 	ldr	r0, [r3, #20]
40004af0:	e3500000 	cmp	r0, #0
40004af4:	0a000006 	beq	40004b14 <main+0x16dc>
40004af8:	e5902004 	ldr	r2, [r0, #4]
40004afc:	e5903000 	ldr	r3, [r0]
40004b00:	e2422003 	sub	r2, r2, #3
40004b04:	e5933020 	ldr	r3, [r3, #32]
40004b08:	e6ef1072 	uxtb	r1, r2
40004b0c:	e3a02003 	mov	r2, #3
40004b10:	e12fff33 	blx	r3
40004b14:	e59d301c 	ldr	r3, [sp, #28]
40004b18:	e3530000 	cmp	r3, #0
40004b1c:	0a000024 	beq	40004bb4 <main+0x177c>
40004b20:	e30839a8 	movw	r3, #35240	; 0x89a8
40004b24:	e3443005 	movt	r3, #16389	; 0x4005
40004b28:	e5930000 	ldr	r0, [r3]
40004b2c:	e303357c 	movw	r3, #13692	; 0x357c
40004b30:	e3443006 	movt	r3, #16390	; 0x4006
40004b34:	e5901040 	ldr	r1, [r0, #64]	; 0x40
40004b38:	e58d3028 	str	r3, [sp, #40]	; 0x28
40004b3c:	eb0001ca 	bl	4000526c <GPS::Display(gps::Status)>
40004b40:	eafffe8e 	b	40004580 <main+0x1148>
40004b44:	e5d41000 	ldrb	r1, [r4]
40004b48:	e28d0fd3 	add	r0, sp, #844	; 0x34c
40004b4c:	eb004001 	bl	40014b58 <LtcDisplayRgb::ShowSource(ltc::Source)>
40004b50:	eafffe8d 	b	4000458c <main+0x1154>
40004b54:	e12fff32 	blx	r2
40004b58:	e59d30bc 	ldr	r3, [sp, #188]	; 0xbc
40004b5c:	eaffff2b 	b	40004810 <main+0x13d8>
40004b60:	e5dd375a 	ldrb	r3, [sp, #1882]	; 0x75a
40004b64:	e3530000 	cmp	r3, #0
40004b68:	0a000039 	beq	40004c54 <main+0x181c>
40004b6c:	e28d3e72 	add	r3, sp, #1824	; 0x720
40004b70:	e30d1c38 	movw	r1, #56376	; 0xdc38
40004b74:	e3441002 	movt	r1, #16386	; 0x4002
40004b78:	e2833008 	add	r3, r3, #8
40004b7c:	e28dce73 	add	ip, sp, #1840	; 0x730
40004b80:	e1a02003 	mov	r2, r3
40004b84:	e28cc008 	add	ip, ip, #8
40004b88:	e4d10001 	ldrb	r0, [r1], #1
40004b8c:	e4c20001 	strb	r0, [r2], #1
40004b90:	e152000c 	cmp	r2, ip
40004b94:	1afffffb 	bne	40004b88 <main+0x1750>
40004b98:	e3a02010 	mov	r2, #16
40004b9c:	e3046084 	movw	r6, #16516	; 0x4084
40004ba0:	e3446003 	movt	r6, #16387	; 0x4003
40004ba4:	e58d2000 	str	r2, [sp]
40004ba8:	e5cd2758 	strb	r2, [sp, #1880]	; 0x758
40004bac:	e5cd2898 	strb	r2, [sp, #2200]	; 0x898
40004bb0:	eafffb47 	b	400038d4 <main+0x49c>
40004bb4:	eb006b2d 	bl	4001f870 <ntp_client_get_status()>
40004bb8:	e3500004 	cmp	r0, #4
40004bbc:	0a000002 	beq	40004bcc <main+0x1794>
40004bc0:	eb006b2a 	bl	4001f870 <ntp_client_get_status()>
40004bc4:	e3500000 	cmp	r0, #0
40004bc8:	1a000049 	bne	40004cf4 <main+0x18bc>
40004bcc:	e303357c 	movw	r3, #13692	; 0x357c
40004bd0:	e3443006 	movt	r3, #16390	; 0x4006
40004bd4:	e58d3028 	str	r3, [sp, #40]	; 0x28
40004bd8:	e5933000 	ldr	r3, [r3]
40004bdc:	e5d3300a 	ldrb	r3, [r3, #10]
40004be0:	e3530000 	cmp	r3, #0
40004be4:	0afffe65 	beq	40004580 <main+0x1148>
40004be8:	e59d3034 	ldr	r3, [sp, #52]	; 0x34
40004bec:	e30d1bf4 	movw	r1, #56308	; 0xdbf4
40004bf0:	e3441002 	movt	r1, #16386	; 0x4002
40004bf4:	e5933000 	ldr	r3, [r3]
40004bf8:	e5930014 	ldr	r0, [r3, #20]
40004bfc:	ebfff73d 	bl	400028f8 <Display::PutString(char const*) [clone .isra.0]>
40004c00:	eafffe5e 	b	40004580 <main+0x1148>
40004c04:	e12fff32 	blx	r2
40004c08:	eafffa92 	b	40003658 <main+0x220>
40004c0c:	e28d00c8 	add	r0, sp, #200	; 0xc8
40004c10:	eb003e80 	bl	40014618 <LtcSender::Start()>
40004c14:	eafffcce 	b	40003f54 <main+0xb1c>
40004c18:	eb002c16 	bl	4000fc78 <tcnet::display::show()>
40004c1c:	eafffe54 	b	40004574 <main+0x113c>
40004c20:	e3a03003 	mov	r3, #3
40004c24:	e5cd3070 	strb	r3, [sp, #112]	; 0x70
40004c28:	eaffff7c 	b	40004a20 <main+0x15e8>
40004c2c:	e30237e8 	movw	r3, #10216	; 0x27e8
40004c30:	e3443000 	movt	r3, #16384	; 0x4000
40004c34:	e58d38b0 	str	r3, [sp, #2224]	; 0x8b0
40004c38:	eafffc98 	b	40003ea0 <main+0xa68>
40004c3c:	e35c0000 	cmp	ip, #0
40004c40:	0afffd47 	beq	40004164 <main+0xd2c>
40004c44:	e28d3e72 	add	r3, sp, #1824	; 0x720
40004c48:	e1a06000 	mov	r6, r0
40004c4c:	e2833008 	add	r3, r3, #8
40004c50:	eafffb1a 	b	400038c0 <main+0x488>
40004c54:	e30d2c38 	movw	r2, #56376	; 0xdc38
40004c58:	e28d3c07 	add	r3, sp, #1792	; 0x700
40004c5c:	e3442002 	movt	r2, #16386	; 0x4002
40004c60:	e28d0e71 	add	r0, sp, #1808	; 0x710
40004c64:	e2833008 	add	r3, r3, #8
40004c68:	e2800008 	add	r0, r0, #8
40004c6c:	e4d21001 	ldrb	r1, [r2], #1
40004c70:	e4c31001 	strb	r1, [r3], #1
40004c74:	e1530000 	cmp	r3, r0
40004c78:	1afffffb 	bne	40004c6c <main+0x1834>
40004c7c:	e3a03010 	mov	r3, #16
40004c80:	e5cd3759 	strb	r3, [sp, #1881]	; 0x759
40004c84:	eafffb21 	b	40003910 <main+0x4d8>
40004c88:	e59d3158 	ldr	r3, [sp, #344]	; 0x158
40004c8c:	e2133302 	ands	r3, r3, #134217728	; 0x8000000
40004c90:	058d3030 	streq	r3, [sp, #48]	; 0x30
40004c94:	028d3c03 	addeq	r3, sp, #768	; 0x300
40004c98:	159d301c 	ldrne	r3, [sp, #28]
40004c9c:	128d0c03 	addne	r0, sp, #768	; 0x300
40004ca0:	058d302c 	streq	r3, [sp, #44]	; 0x2c
40004ca4:	01a00003 	moveq	r0, r3
40004ca8:	158d002c 	strne	r0, [sp, #44]	; 0x2c
40004cac:	158d3030 	strne	r3, [sp, #48]	; 0x30
40004cb0:	eb00562d 	bl	4001a56c <GPSTimeClient::GPSTimeClient(float, GPSModule)>
40004cb4:	e3a00001 	mov	r0, #1
40004cb8:	eb006acb 	bl	4001f7ec <ntp_client_stop(bool)>
40004cbc:	e59d902c 	ldr	r9, [sp, #44]	; 0x2c
40004cc0:	e1a00009 	mov	r0, r9
40004cc4:	eb005631 	bl	4001a590 <GPSTimeClient::Start()>
40004cc8:	e1a00009 	mov	r0, r9
40004ccc:	eb0055e3 	bl	4001a460 <GPS::Print()>
40004cd0:	eafffbe4 	b	40003c68 <main+0x830>
40004cd4:	eeb87bc7 	vcvt.f64.s32	d7, s14
40004cd8:	eddf0b1c 	vldr	d16, [pc, #112]	; 40004d50 <main+0x1918>
40004cdc:	ee277b20 	vmul.f64	d7, d7, d16
40004ce0:	eebc7bc7 	vcvt.u32.f64	s14, d7
40004ce4:	ed8d7a8f 	vstr	s14, [sp, #572]	; 0x23c
40004ce8:	eafffd52 	b	40004238 <main+0xe00>
40004cec:	e3a03001 	mov	r3, #1
40004cf0:	eafffe12 	b	40004540 <main+0x1108>
40004cf4:	eb006add 	bl	4001f870 <ntp_client_get_status()>
40004cf8:	e3500005 	cmp	r0, #5
40004cfc:	0affffb2 	beq	40004bcc <main+0x1794>
40004d00:	e59d3034 	ldr	r3, [sp, #52]	; 0x34
40004d04:	e30d1bf0 	movw	r1, #56304	; 0xdbf0
40004d08:	e3441002 	movt	r1, #16386	; 0x4002
40004d0c:	e5933000 	ldr	r3, [r3]
40004d10:	e5930014 	ldr	r0, [r3, #20]
40004d14:	ebfff6f7 	bl	400028f8 <Display::PutString(char const*) [clone .isra.0]>
40004d18:	e303357c 	movw	r3, #13692	; 0x357c
40004d1c:	e3443006 	movt	r3, #16390	; 0x4006
40004d20:	e58d3028 	str	r3, [sp, #40]	; 0x28
40004d24:	eafffe15 	b	40004580 <main+0x1148>
40004d28:	e1a0000c 	mov	r0, ip
40004d2c:	eafffd0c 	b	40004164 <main+0xd2c>
40004d30:	e1a00003 	mov	r0, r3
40004d34:	e28d3e72 	add	r3, sp, #1824	; 0x720
40004d38:	e2833008 	add	r3, r3, #8
40004d3c:	e1a06000 	mov	r6, r0
40004d40:	eafffade 	b	400038c0 <main+0x488>
40004d44:	e28d0050 	add	r0, sp, #80	; 0x50
40004d48:	eb003745 	bl	40012a64 <LtcReader::Start()>
40004d4c:	eafffd99 	b	400043b8 <main+0xf80>
40004d50:	4799999a 			; <UNDEFINED> instruction: 0x4799999a
40004d54:	41a47ae1 			; <UNDEFINED> instruction: 0x41a47ae1

40004d58 <artnet::display_longname(char const*)>:
40004d58:	e12fff1e 	bx	lr

40004d5c <artnet::display_universe_switch(unsigned long, unsigned char)>:
40004d5c:	e12fff1e 	bx	lr

40004d60 <artnet::display_merge_mode(unsigned long, lightset::MergeMode)>:
40004d60:	e12fff1e 	bx	lr

40004d64 <artnet::display_failsafe(unsigned char)>:
40004d64:	e12fff1e 	bx	lr

40004d68 <DisplayEditFps::HandleKey(int, unsigned char&)>:
40004d68:	e5d03000 	ldrb	r3, [r0]
40004d6c:	e92d4070 	push	{r4, r5, r6, lr}
40004d70:	e3530000 	cmp	r3, #0
40004d74:	e1a04000 	mov	r4, r0
40004d78:	1a000024 	bne	40004e10 <DisplayEditFps::HandleKey(int, unsigned char&)+0xa8>
40004d7c:	e351000a 	cmp	r1, #10
40004d80:	0a00003f 	beq	40004e84 <DisplayEditFps::HandleKey(int, unsigned char&)+0x11c>
40004d84:	e5d20000 	ldrb	r0, [r2]
40004d88:	e304507c 	movw	r5, #16508	; 0x407c
40004d8c:	e3445003 	movt	r5, #16387	; 0x4003
40004d90:	e5956000 	ldr	r6, [r5]
40004d94:	eb001e4d 	bl	4000c6d0 <ltc::get_type(ltc::Type)>
40004d98:	e1a02000 	mov	r2, r0
40004d9c:	e5960014 	ldr	r0, [r6, #20]
40004da0:	e3500000 	cmp	r0, #0
40004da4:	0a000004 	beq	40004dbc <DisplayEditFps::HandleKey(int, unsigned char&)+0x54>
40004da8:	e5903000 	ldr	r3, [r0]
40004dac:	e3a01002 	mov	r1, #2
40004db0:	e593601c 	ldr	r6, [r3, #28]
40004db4:	e3a0300b 	mov	r3, #11
40004db8:	e12fff36 	blx	r6
40004dbc:	e5d41001 	ldrb	r1, [r4, #1]
40004dc0:	e5953000 	ldr	r3, [r5]
40004dc4:	e3510000 	cmp	r1, #0
40004dc8:	e5930014 	ldr	r0, [r3, #20]
40004dcc:	0a000020 	beq	40004e54 <DisplayEditFps::HandleKey(int, unsigned char&)+0xec>
40004dd0:	e3500000 	cmp	r0, #0
40004dd4:	08bd8070 	popeq	{r4, r5, r6, pc}
40004dd8:	e5903000 	ldr	r3, [r0]
40004ddc:	e3a01001 	mov	r1, #1
40004de0:	e5933024 	ldr	r3, [r3, #36]	; 0x24
40004de4:	e12fff33 	blx	r3
40004de8:	e5953000 	ldr	r3, [r5]
40004dec:	e5930014 	ldr	r0, [r3, #20]
40004df0:	e3500000 	cmp	r0, #0
40004df4:	08bd8070 	popeq	{r4, r5, r6, pc}
40004df8:	e5903000 	ldr	r3, [r0]
40004dfc:	e3a02001 	mov	r2, #1
40004e00:	e8bd4070 	pop	{r4, r5, r6, lr}
40004e04:	e5933020 	ldr	r3, [r3, #32]
40004e08:	e3a01000 	mov	r1, #0
40004e0c:	e12fff13 	bx	r3
40004e10:	e3710040 	cmn	r1, #64	; 0x40
40004e14:	aa000009 	bge	40004e40 <DisplayEditFps::HandleKey(int, unsigned char&)+0xd8>
40004e18:	e3710044 	cmn	r1, #68	; 0x44
40004e1c:	baffffd8 	blt	40004d84 <DisplayEditFps::HandleKey(int, unsigned char&)+0x1c>
40004e20:	e5d20000 	ldrb	r0, [r2]
40004e24:	e2811043 	add	r1, r1, #67	; 0x43
40004e28:	e3510002 	cmp	r1, #2
40004e2c:	979ff101 	ldrls	pc, [pc, r1, lsl #2]
40004e30:	ea000018 	b	40004e98 <DisplayEditFps::HandleKey(int, unsigned char&)+0x130>
40004e34:	40004e6c 	andmi	r4, r0, ip, ror #28
40004e38:	40004e98 	mulmi	r0, r8, lr
40004e3c:	40004e6c 	andmi	r4, r0, ip, ror #28
40004e40:	e351001b 	cmp	r1, #27
40004e44:	03a03000 	moveq	r3, #0
40004e48:	05c03000 	strbeq	r3, [r0]
40004e4c:	05c03001 	strbeq	r3, [r0, #1]
40004e50:	eaffffcb 	b	40004d84 <DisplayEditFps::HandleKey(int, unsigned char&)+0x1c>
40004e54:	e3500000 	cmp	r0, #0
40004e58:	08bd8070 	popeq	{r4, r5, r6, pc}
40004e5c:	e5903000 	ldr	r3, [r0]
40004e60:	e8bd4070 	pop	{r4, r5, r6, lr}
40004e64:	e5933024 	ldr	r3, [r3, #36]	; 0x24
40004e68:	e12fff13 	bx	r3
40004e6c:	e3500002 	cmp	r0, #2
40004e70:	92800001 	addls	r0, r0, #1
40004e74:	83a00000 	movhi	r0, #0
40004e78:	96ef0070 	uxtbls	r0, r0
40004e7c:	e5c20000 	strb	r0, [r2]
40004e80:	eaffffc0 	b	40004d88 <DisplayEditFps::HandleKey(int, unsigned char&)+0x20>
40004e84:	e3a03001 	mov	r3, #1
40004e88:	e5c03000 	strb	r3, [r0]
40004e8c:	e5c03001 	strb	r3, [r0, #1]
40004e90:	e5d20000 	ldrb	r0, [r2]
40004e94:	eaffffbb 	b	40004d88 <DisplayEditFps::HandleKey(int, unsigned char&)+0x20>
40004e98:	e3500000 	cmp	r0, #0
40004e9c:	12400001 	subne	r0, r0, #1
40004ea0:	03a00003 	moveq	r0, #3
40004ea4:	16ef0070 	uxtbne	r0, r0
40004ea8:	e5c20000 	strb	r0, [r2]
40004eac:	eaffffb5 	b	40004d88 <DisplayEditFps::HandleKey(int, unsigned char&)+0x20>

40004eb0 <DisplayEditTimeCode::KeyUp(ltc::TimeCode&)>:
40004eb0:	e5902004 	ldr	r2, [r0, #4]
40004eb4:	e30d3c54 	movw	r3, #56404	; 0xdc54
40004eb8:	e3443002 	movt	r3, #16386	; 0x4002
40004ebc:	e7d33002 	ldrb	r3, [r3, r2]
40004ec0:	e353000a 	cmp	r3, #10
40004ec4:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
40004ec8:	ea00000a 	b	40004ef8 <DisplayEditTimeCode::KeyUp(ltc::TimeCode&)+0x48>
40004ecc:	40004f20 	andmi	r4, r0, r0, lsr #30
40004ed0:	40004f34 	andmi	r4, r0, r4, lsr pc
40004ed4:	40004ef8 	strdmi	r4, [r0], -r8
40004ed8:	40004f4c 	andmi	r4, r0, ip, asr #30
40004edc:	40004f60 	andmi	r4, r0, r0, ror #30
40004ee0:	40004ef8 	strdmi	r4, [r0], -r8
40004ee4:	40004f78 	andmi	r4, r0, r8, ror pc
40004ee8:	40004f8c 	andmi	r4, r0, ip, lsl #31
40004eec:	40004ef8 	strdmi	r4, [r0], -r8
40004ef0:	40004fa4 	andmi	r4, r0, r4, lsr #31
40004ef4:	40004efc 	strdmi	r4, [r0], -ip
40004ef8:	e12fff1e 	bx	lr
40004efc:	e5d03000 	ldrb	r3, [r0]
40004f00:	e5d12000 	ldrb	r2, [r1]
40004f04:	e2433001 	sub	r3, r3, #1
40004f08:	e1520003 	cmp	r2, r3
40004f0c:	a3a03000 	movge	r3, #0
40004f10:	a5c13000 	strbge	r3, [r1]
40004f14:	b2822001 	addlt	r2, r2, #1
40004f18:	b5c12000 	strblt	r2, [r1]
40004f1c:	e12fff1e 	bx	lr
40004f20:	e5d13003 	ldrb	r3, [r1, #3]
40004f24:	e3530013 	cmp	r3, #19
40004f28:	9283300a 	addls	r3, r3, #10
40004f2c:	95c13003 	strbls	r3, [r1, #3]
40004f30:	e12fff1e 	bx	lr
40004f34:	e5d13003 	ldrb	r3, [r1, #3]
40004f38:	e3530016 	cmp	r3, #22
40004f3c:	92833001 	addls	r3, r3, #1
40004f40:	83a03000 	movhi	r3, #0
40004f44:	e5c13003 	strb	r3, [r1, #3]
40004f48:	e12fff1e 	bx	lr
40004f4c:	e5d13002 	ldrb	r3, [r1, #2]
40004f50:	e3530031 	cmp	r3, #49	; 0x31
40004f54:	9283300a 	addls	r3, r3, #10
40004f58:	95c13002 	strbls	r3, [r1, #2]
40004f5c:	e12fff1e 	bx	lr
40004f60:	e5d13002 	ldrb	r3, [r1, #2]
40004f64:	e353003a 	cmp	r3, #58	; 0x3a
40004f68:	92833001 	addls	r3, r3, #1
40004f6c:	83a03000 	movhi	r3, #0
40004f70:	e5c13002 	strb	r3, [r1, #2]
40004f74:	e12fff1e 	bx	lr
40004f78:	e5d13001 	ldrb	r3, [r1, #1]
40004f7c:	e3530031 	cmp	r3, #49	; 0x31
40004f80:	9283300a 	addls	r3, r3, #10
40004f84:	95c13001 	strbls	r3, [r1, #1]
40004f88:	e12fff1e 	bx	lr
40004f8c:	e5d13001 	ldrb	r3, [r1, #1]
40004f90:	e353003a 	cmp	r3, #58	; 0x3a
40004f94:	92833001 	addls	r3, r3, #1
40004f98:	83a03000 	movhi	r3, #0
40004f9c:	e5c13001 	strb	r3, [r1, #1]
40004fa0:	e12fff1e 	bx	lr
40004fa4:	e5d03000 	ldrb	r3, [r0]
40004fa8:	e30c2ccd 	movw	r2, #52429	; 0xcccd
40004fac:	e34c2ccc 	movt	r2, #52428	; 0xcccc
40004fb0:	e0832392 	umull	r2, r3, r2, r3
40004fb4:	e5d10000 	ldrb	r0, [r1]
40004fb8:	e1a031a3 	lsr	r3, r3, #3
40004fbc:	e1a02103 	lsl	r2, r3, #2
40004fc0:	e0823003 	add	r3, r2, r3
40004fc4:	e1500083 	cmp	r0, r3, lsl #1
40004fc8:	b280000a 	addlt	r0, r0, #10
40004fcc:	b5c10000 	strblt	r0, [r1]
40004fd0:	e12fff1e 	bx	lr

40004fd4 <DisplayEditTimeCode::KeyDown(ltc::TimeCode&)>:
40004fd4:	e5902004 	ldr	r2, [r0, #4]
40004fd8:	e30d3c54 	movw	r3, #56404	; 0xdc54
40004fdc:	e3443002 	movt	r3, #16386	; 0x4002
40004fe0:	e7d33002 	ldrb	r3, [r3, r2]
40004fe4:	e353000a 	cmp	r3, #10
40004fe8:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
40004fec:	ea00000f 	b	40005030 <DisplayEditTimeCode::KeyDown(ltc::TimeCode&)+0x5c>
40004ff0:	40005034 	andmi	r5, r0, r4, lsr r0
40004ff4:	40005048 	andmi	r5, r0, r8, asr #32
40004ff8:	40005030 	andmi	r5, r0, r0, lsr r0
40004ffc:	40005060 	andmi	r5, r0, r0, rrx
40005000:	40005074 	andmi	r5, r0, r4, ror r0
40005004:	40005030 	andmi	r5, r0, r0, lsr r0
40005008:	4000508c 	andmi	r5, r0, ip, lsl #1
4000500c:	400050a0 	andmi	r5, r0, r0, lsr #1
40005010:	40005030 	andmi	r5, r0, r0, lsr r0
40005014:	400050b8 	strhmi	r5, [r0], -r8
40005018:	4000501c 	andmi	r5, r0, ip, lsl r0
4000501c:	e5d13000 	ldrb	r3, [r1]
40005020:	e3530000 	cmp	r3, #0
40005024:	05d03000 	ldrbeq	r3, [r0]
40005028:	e2433001 	sub	r3, r3, #1
4000502c:	e5c13000 	strb	r3, [r1]
40005030:	e12fff1e 	bx	lr
40005034:	e5d13003 	ldrb	r3, [r1, #3]
40005038:	e3530009 	cmp	r3, #9
4000503c:	8243300a 	subhi	r3, r3, #10
40005040:	85c13003 	strbhi	r3, [r1, #3]
40005044:	e12fff1e 	bx	lr
40005048:	e5d13003 	ldrb	r3, [r1, #3]
4000504c:	e3530000 	cmp	r3, #0
40005050:	12433001 	subne	r3, r3, #1
40005054:	03a03017 	moveq	r3, #23
40005058:	e5c13003 	strb	r3, [r1, #3]
4000505c:	e12fff1e 	bx	lr
40005060:	e5d13002 	ldrb	r3, [r1, #2]
40005064:	e3530009 	cmp	r3, #9
40005068:	8243300a 	subhi	r3, r3, #10
4000506c:	85c13002 	strbhi	r3, [r1, #2]
40005070:	e12fff1e 	bx	lr
40005074:	e5d13002 	ldrb	r3, [r1, #2]
40005078:	e3530000 	cmp	r3, #0
4000507c:	12433001 	subne	r3, r3, #1
40005080:	03a0303b 	moveq	r3, #59	; 0x3b
40005084:	e5c13002 	strb	r3, [r1, #2]
40005088:	e12fff1e 	bx	lr
4000508c:	e5d13001 	ldrb	r3, [r1, #1]
40005090:	e3530009 	cmp	r3, #9
40005094:	8243300a 	subhi	r3, r3, #10
40005098:	85c13001 	strbhi	r3, [r1, #1]
4000509c:	e12fff1e 	bx	lr
400050a0:	e5d13001 	ldrb	r3, [r1, #1]
400050a4:	e3530000 	cmp	r3, #0
400050a8:	12433001 	subne	r3, r3, #1
400050ac:	03a0303b 	moveq	r3, #59	; 0x3b
400050b0:	e5c13001 	strb	r3, [r1, #1]
400050b4:	e12fff1e 	bx	lr
400050b8:	e5d13000 	ldrb	r3, [r1]
400050bc:	e3530009 	cmp	r3, #9
400050c0:	8243300a 	subhi	r3, r3, #10
400050c4:	85c13000 	strbhi	r3, [r1]
400050c8:	e12fff1e 	bx	lr

400050cc <DisplayEditTimeCode::HandleKey(int, ltc::TimeCode&, char*)>:
400050cc:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400050d0:	e1a06002 	mov	r6, r2
400050d4:	e30d2c50 	movw	r2, #56400	; 0xdc50
400050d8:	e1a04000 	mov	r4, r0
400050dc:	e5d6c004 	ldrb	ip, [r6, #4]
400050e0:	e1a07003 	mov	r7, r3
400050e4:	e5d00001 	ldrb	r0, [r0, #1]
400050e8:	e3442002 	movt	r2, #16386	; 0x4002
400050ec:	e3500000 	cmp	r0, #0
400050f0:	e7d2200c 	ldrb	r2, [r2, ip]
400050f4:	e5c42000 	strb	r2, [r4]
400050f8:	1a000027 	bne	4000519c <DisplayEditTimeCode::HandleKey(int, ltc::TimeCode&, char*)+0xd0>
400050fc:	e351000a 	cmp	r1, #10
40005100:	0a000040 	beq	40005208 <DisplayEditTimeCode::HandleKey(int, ltc::TimeCode&, char*)+0x13c>
40005104:	e304507c 	movw	r5, #16508	; 0x407c
40005108:	e1a00006 	mov	r0, r6
4000510c:	e3445003 	movt	r5, #16387	; 0x4003
40005110:	e1a01007 	mov	r1, r7
40005114:	eb001d92 	bl	4000c764 <ltc::itoa_base10(ltc::TimeCode const*, char*)>
40005118:	e5953000 	ldr	r3, [r5]
4000511c:	e5930014 	ldr	r0, [r3, #20]
40005120:	e3500000 	cmp	r0, #0
40005124:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
40005128:	e5903000 	ldr	r3, [r0]
4000512c:	e3a01001 	mov	r1, #1
40005130:	e1a02007 	mov	r2, r7
40005134:	e593601c 	ldr	r6, [r3, #28]
40005138:	e3a0300b 	mov	r3, #11
4000513c:	e12fff36 	blx	r6
40005140:	e5d41008 	ldrb	r1, [r4, #8]
40005144:	e5953000 	ldr	r3, [r5]
40005148:	e3510000 	cmp	r1, #0
4000514c:	e5930014 	ldr	r0, [r3, #20]
40005150:	1a000025 	bne	400051ec <DisplayEditTimeCode::HandleKey(int, ltc::TimeCode&, char*)+0x120>
40005154:	e3500000 	cmp	r0, #0
40005158:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
4000515c:	e5903000 	ldr	r3, [r0]
40005160:	e5933024 	ldr	r3, [r3, #36]	; 0x24
40005164:	e12fff33 	blx	r3
40005168:	e5951000 	ldr	r1, [r5]
4000516c:	e30d3c54 	movw	r3, #56404	; 0xdc54
40005170:	e3443002 	movt	r3, #16386	; 0x4002
40005174:	e5910014 	ldr	r0, [r1, #20]
40005178:	e5942004 	ldr	r2, [r4, #4]
4000517c:	e3500000 	cmp	r0, #0
40005180:	e7d31002 	ldrb	r1, [r3, r2]
40005184:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
40005188:	e5903000 	ldr	r3, [r0]
4000518c:	e3a02000 	mov	r2, #0
40005190:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
40005194:	e5933020 	ldr	r3, [r3, #32]
40005198:	e12fff13 	bx	r3
4000519c:	e3710040 	cmn	r1, #64	; 0x40
400051a0:	aa000008 	bge	400051c8 <DisplayEditTimeCode::HandleKey(int, ltc::TimeCode&, char*)+0xfc>
400051a4:	e3710044 	cmn	r1, #68	; 0x44
400051a8:	b8bd81f0 	poplt	{r4, r5, r6, r7, r8, pc}
400051ac:	e2811043 	add	r1, r1, #67	; 0x43
400051b0:	e3510002 	cmp	r1, #2
400051b4:	979ff101 	ldrls	pc, [pc, r1, lsl #2]
400051b8:	ea000025 	b	40005254 <DisplayEditTimeCode::HandleKey(int, ltc::TimeCode&, char*)+0x188>
400051bc:	4000522c 	andmi	r5, r0, ip, lsr #4
400051c0:	40005244 	andmi	r5, r0, r4, asr #4
400051c4:	4000521c 	andmi	r5, r0, ip, lsl r2
400051c8:	e351000a 	cmp	r1, #10
400051cc:	0affffcc 	beq	40005104 <DisplayEditTimeCode::HandleKey(int, ltc::TimeCode&, char*)+0x38>
400051d0:	e351001b 	cmp	r1, #27
400051d4:	18bd81f0 	popne	{r4, r5, r6, r7, r8, pc}
400051d8:	e3a03000 	mov	r3, #0
400051dc:	e5c43001 	strb	r3, [r4, #1]
400051e0:	e5843004 	str	r3, [r4, #4]
400051e4:	e5c43008 	strb	r3, [r4, #8]
400051e8:	eaffffc5 	b	40005104 <DisplayEditTimeCode::HandleKey(int, ltc::TimeCode&, char*)+0x38>
400051ec:	e3500000 	cmp	r0, #0
400051f0:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
400051f4:	e5903000 	ldr	r3, [r0]
400051f8:	e3a01001 	mov	r1, #1
400051fc:	e5933024 	ldr	r3, [r3, #36]	; 0x24
40005200:	e12fff33 	blx	r3
40005204:	eaffffd7 	b	40005168 <DisplayEditTimeCode::HandleKey(int, ltc::TimeCode&, char*)+0x9c>
40005208:	e5840004 	str	r0, [r4, #4]
4000520c:	e3a03001 	mov	r3, #1
40005210:	e5c43001 	strb	r3, [r4, #1]
40005214:	e5c43008 	strb	r3, [r4, #8]
40005218:	eaffffb9 	b	40005104 <DisplayEditTimeCode::HandleKey(int, ltc::TimeCode&, char*)+0x38>
4000521c:	e1a01006 	mov	r1, r6
40005220:	e1a00004 	mov	r0, r4
40005224:	ebffff21 	bl	40004eb0 <DisplayEditTimeCode::KeyUp(ltc::TimeCode&)>
40005228:	eaffffb5 	b	40005104 <DisplayEditTimeCode::HandleKey(int, ltc::TimeCode&, char*)+0x38>
4000522c:	e5943004 	ldr	r3, [r4, #4]
40005230:	e3530006 	cmp	r3, #6
40005234:	92833001 	addls	r3, r3, #1
40005238:	83a03000 	movhi	r3, #0
4000523c:	e5843004 	str	r3, [r4, #4]
40005240:	eaffffaf 	b	40005104 <DisplayEditTimeCode::HandleKey(int, ltc::TimeCode&, char*)+0x38>
40005244:	e1a01006 	mov	r1, r6
40005248:	e1a00004 	mov	r0, r4
4000524c:	ebffff60 	bl	40004fd4 <DisplayEditTimeCode::KeyDown(ltc::TimeCode&)>
40005250:	eaffffab 	b	40005104 <DisplayEditTimeCode::HandleKey(int, ltc::TimeCode&, char*)+0x38>
40005254:	e5943004 	ldr	r3, [r4, #4]
40005258:	e3530000 	cmp	r3, #0
4000525c:	12433001 	subne	r3, r3, #1
40005260:	03a03007 	moveq	r3, #7
40005264:	e5843004 	str	r3, [r4, #4]
40005268:	eaffffa5 	b	40005104 <DisplayEditTimeCode::HandleKey(int, ltc::TimeCode&, char*)+0x38>

4000526c <GPS::Display(gps::Status)>:
4000526c:	e92d4070 	push	{r4, r5, r6, lr}
40005270:	e304407c 	movw	r4, #16508	; 0x407c
40005274:	e3444003 	movt	r4, #16387	; 0x4003
40005278:	e1a05001 	mov	r5, r1
4000527c:	e5943000 	ldr	r3, [r4]
40005280:	e5930014 	ldr	r0, [r3, #20]
40005284:	e3500000 	cmp	r0, #0
40005288:	0a00003a 	beq	40005378 <GPS::Display(gps::Status)+0x10c>
4000528c:	e5901004 	ldr	r1, [r0, #4]
40005290:	e3a02003 	mov	r2, #3
40005294:	e5903000 	ldr	r3, [r0]
40005298:	e2411007 	sub	r1, r1, #7
4000529c:	e5933020 	ldr	r3, [r3, #32]
400052a0:	e6ef1071 	uxtb	r1, r1
400052a4:	e12fff33 	blx	r3
400052a8:	e5943000 	ldr	r3, [r4]
400052ac:	e5930014 	ldr	r0, [r3, #20]
400052b0:	e3500000 	cmp	r0, #0
400052b4:	0a00002f 	beq	40005378 <GPS::Display(gps::Status)+0x10c>
400052b8:	e5903000 	ldr	r3, [r0]
400052bc:	e30d1c5c 	movw	r1, #56412	; 0xdc5c
400052c0:	e3441002 	movt	r1, #16386	; 0x4002
400052c4:	e5933018 	ldr	r3, [r3, #24]
400052c8:	e12fff33 	blx	r3
400052cc:	e3550003 	cmp	r5, #3
400052d0:	979ff105 	ldrls	pc, [pc, r5, lsl #2]
400052d4:	ea00001e 	b	40005354 <GPS::Display(gps::Status)+0xe8>
400052d8:	40005330 	andmi	r5, r0, r0, lsr r3
400052dc:	4000530c 	andmi	r5, r0, ip, lsl #6
400052e0:	400052e8 	andmi	r5, r0, r8, ror #5
400052e4:	40005354 	andmi	r5, r0, r4, asr r3
400052e8:	e5943000 	ldr	r3, [r4]
400052ec:	e5930014 	ldr	r0, [r3, #20]
400052f0:	e3500000 	cmp	r0, #0
400052f4:	08bd8070 	popeq	{r4, r5, r6, pc}
400052f8:	e5903000 	ldr	r3, [r0]
400052fc:	e3a01056 	mov	r1, #86	; 0x56
40005300:	e8bd4070 	pop	{r4, r5, r6, lr}
40005304:	e5933014 	ldr	r3, [r3, #20]
40005308:	e12fff13 	bx	r3
4000530c:	e5943000 	ldr	r3, [r4]
40005310:	e5930014 	ldr	r0, [r3, #20]
40005314:	e3500000 	cmp	r0, #0
40005318:	08bd8070 	popeq	{r4, r5, r6, pc}
4000531c:	e5903000 	ldr	r3, [r0]
40005320:	e3a01057 	mov	r1, #87	; 0x57
40005324:	e8bd4070 	pop	{r4, r5, r6, lr}
40005328:	e5933014 	ldr	r3, [r3, #20]
4000532c:	e12fff13 	bx	r3
40005330:	e5943000 	ldr	r3, [r4]
40005334:	e5930014 	ldr	r0, [r3, #20]
40005338:	e3500000 	cmp	r0, #0
4000533c:	08bd8070 	popeq	{r4, r5, r6, pc}
40005340:	e5903000 	ldr	r3, [r0]
40005344:	e3a01049 	mov	r1, #73	; 0x49
40005348:	e8bd4070 	pop	{r4, r5, r6, lr}
4000534c:	e5933014 	ldr	r3, [r3, #20]
40005350:	e12fff13 	bx	r3
40005354:	e5943000 	ldr	r3, [r4]
40005358:	e5930014 	ldr	r0, [r3, #20]
4000535c:	e3500000 	cmp	r0, #0
40005360:	08bd8070 	popeq	{r4, r5, r6, pc}
40005364:	e5903000 	ldr	r3, [r0]
40005368:	e3a01055 	mov	r1, #85	; 0x55
4000536c:	e8bd4070 	pop	{r4, r5, r6, lr}
40005370:	e5933014 	ldr	r3, [r3, #20]
40005374:	e12fff13 	bx	r3
40005378:	e3550003 	cmp	r5, #3
4000537c:	979ff105 	ldrls	pc, [pc, r5, lsl #2]
40005380:	ea000004 	b	40005398 <LtcMidiSystemRealtime::Send(midi::Types) [clone .isra.0]>
40005384:	40005394 	mulmi	r0, r4, r3
40005388:	4000530c 	andmi	r5, r0, ip, lsl #6
4000538c:	400052e8 	andmi	r5, r0, r8, ror #5
40005390:	40005394 	mulmi	r0, r4, r3
40005394:	e8bd8070 	pop	{r4, r5, r6, pc}

40005398 <LtcMidiSystemRealtime::Send(midi::Types) [clone .isra.0]>:
40005398:	e92d4030 	push	{r4, r5, lr}
4000539c:	e30746ec 	movw	r4, #30444	; 0x76ec
400053a0:	e3444005 	movt	r4, #16389	; 0x4005
400053a4:	e24dd014 	sub	sp, sp, #20
400053a8:	e1a05000 	mov	r5, r0
400053ac:	e5d43007 	ldrb	r3, [r4, #7]
400053b0:	e3530000 	cmp	r3, #0
400053b4:	0a000004 	beq	400053cc <LtcMidiSystemRealtime::Send(midi::Types) [clone .isra.0]+0x34>
400053b8:	e5d43002 	ldrb	r3, [r4, #2]
400053bc:	e3530000 	cmp	r3, #0
400053c0:	0a000029 	beq	4000546c <LtcMidiSystemRealtime::Send(midi::Types) [clone .isra.0]+0xd4>
400053c4:	e28dd014 	add	sp, sp, #20
400053c8:	e8bd8030 	pop	{r4, r5, pc}
400053cc:	e304306c 	movw	r3, #16492	; 0x406c
400053d0:	e3443003 	movt	r3, #16387	; 0x4003
400053d4:	e5932000 	ldr	r2, [r3]
400053d8:	e59230e4 	ldr	r3, [r2, #228]	; 0xe4
400053dc:	e5c3000d 	strb	r0, [r3, #13]
400053e0:	e3a03b03 	mov	r3, #3072	; 0xc00
400053e4:	e34031c2 	movt	r3, #450	; 0x1c2
400053e8:	e1d21eb8 	ldrh	r1, [r2, #232]	; 0xe8
400053ec:	e5933084 	ldr	r3, [r3, #132]	; 0x84
400053f0:	e592c004 	ldr	ip, [r2, #4]
400053f4:	e59200e4 	ldr	r0, [r2, #228]	; 0xe4
400053f8:	e043300c 	sub	r3, r3, ip
400053fc:	e281c001 	add	ip, r1, #1
40005400:	e6bf1fb1 	rev16	r1, r1
40005404:	e1c2ceb8 	strh	ip, [r2, #232]	; 0xe8
40005408:	e1c010b2 	strh	r1, [r0, #2]
4000540c:	e3a01001 	mov	r1, #1
40005410:	e5c0100c 	strb	r1, [r0, #12]
40005414:	e3a0100a 	mov	r1, #10
40005418:	e0030391 	mul	r3, r1, r3
4000541c:	e6bf3f33 	rev	r3, r3
40005420:	e5803004 	str	r3, [r0, #4]
40005424:	e5923044 	ldr	r3, [r2, #68]	; 0x44
40005428:	e3530003 	cmp	r3, #3
4000542c:	1affffe1 	bne	400053b8 <LtcMidiSystemRealtime::Send(midi::Types) [clone .isra.0]+0x20>
40005430:	e592000c 	ldr	r0, [r2, #12]
40005434:	e30a173c 	movw	r1, #42812	; 0xa73c
40005438:	e3441005 	movt	r1, #16389	; 0x4005
4000543c:	e5923048 	ldr	r3, [r2, #72]	; 0x48
40005440:	e5911000 	ldr	r1, [r1]
40005444:	e1d2c4bc 	ldrh	ip, [r2, #76]	; 0x4c
40005448:	e3510000 	cmp	r1, #0
4000544c:	0affffd9 	beq	400053b8 <LtcMidiSystemRealtime::Send(midi::Types) [clone .isra.0]+0x20>
40005450:	e59210e4 	ldr	r1, [r2, #228]	; 0xe4
40005454:	e3a0200e 	mov	r2, #14
40005458:	e58dc000 	str	ip, [sp]
4000545c:	eb0073c5 	bl	40022378 <net::udp_send(long, unsigned char const*, unsigned long, unsigned long, unsigned short)>
40005460:	e5d43002 	ldrb	r3, [r4, #2]
40005464:	e3530000 	cmp	r3, #0
40005468:	1affffd5 	bne	400053c4 <LtcMidiSystemRealtime::Send(midi::Types) [clone .isra.0]+0x2c>
4000546c:	e5cd500f 	strb	r5, [sp, #15]
40005470:	e3a00b22 	mov	r0, #34816	; 0x8800
40005474:	e34001c2 	movt	r0, #450	; 0x1c2
40005478:	e3a02001 	mov	r2, #1
4000547c:	e28d100f 	add	r1, sp, #15
40005480:	eb009070 	bl	40029648 <h3_uart_transmit>
40005484:	e28dd014 	add	sp, sp, #20
40005488:	e8bd8030 	pop	{r4, r5, pc}

4000548c <LtcOscServer::SetWS28xxRGB(unsigned char const*, unsigned long, ltcdisplayrgb::ColourIndex)>:
4000548c:	e92d4070 	push	{r4, r5, r6, lr}
40005490:	e24dd028 	sub	sp, sp, #40	; 0x28
40005494:	e28d000c 	add	r0, sp, #12
40005498:	e1a04003 	mov	r4, r3
4000549c:	eb0049ea 	bl	40017c4c <OscSimpleMessage::OscSimpleMessage(unsigned char const*, unsigned long)>
400054a0:	e5dd3024 	ldrb	r3, [sp, #36]	; 0x24
400054a4:	e3530000 	cmp	r3, #0
400054a8:	0a000002 	beq	400054b8 <LtcOscServer::SetWS28xxRGB(unsigned char const*, unsigned long, ltcdisplayrgb::ColourIndex)+0x2c>
400054ac:	e59d3018 	ldr	r3, [sp, #24]
400054b0:	e3530003 	cmp	r3, #3
400054b4:	0a000001 	beq	400054c0 <LtcOscServer::SetWS28xxRGB(unsigned char const*, unsigned long, ltcdisplayrgb::ColourIndex)+0x34>
400054b8:	e28dd028 	add	sp, sp, #40	; 0x28
400054bc:	e8bd8070 	pop	{r4, r5, r6, pc}
400054c0:	e3a01000 	mov	r1, #0
400054c4:	e28d000c 	add	r0, sp, #12
400054c8:	eb004a23 	bl	40017d5c <OscSimpleMessage::GetInt(unsigned int)>
400054cc:	e1a05000 	mov	r5, r0
400054d0:	e3a01001 	mov	r1, #1
400054d4:	e28d000c 	add	r0, sp, #12
400054d8:	eb004a1f 	bl	40017d5c <OscSimpleMessage::GetInt(unsigned int)>
400054dc:	e1a06000 	mov	r6, r0
400054e0:	e3a01002 	mov	r1, #2
400054e4:	e28d000c 	add	r0, sp, #12
400054e8:	eb004a1b 	bl	40017d5c <OscSimpleMessage::GetInt(unsigned int)>
400054ec:	e58d4000 	str	r4, [sp]
400054f0:	e3042078 	movw	r2, #16504	; 0x4078
400054f4:	e3442003 	movt	r2, #16387	; 0x4003
400054f8:	e6ef3070 	uxtb	r3, r0
400054fc:	e6ef1075 	uxtb	r1, r5
40005500:	e5920000 	ldr	r0, [r2]
40005504:	e6ef2076 	uxtb	r2, r6
40005508:	eb003e4e 	bl	40014e48 <LtcDisplayRgb::SetRGB(unsigned char, unsigned char, unsigned char, ltcdisplayrgb::ColourIndex)>
4000550c:	e28dd028 	add	sp, sp, #40	; 0x28
40005510:	e8bd8070 	pop	{r4, r5, r6, pc}

40005514 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)>:
40005514:	e3520004 	cmp	r2, #4
40005518:	912fff1e 	bxls	lr
4000551c:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
40005520:	e1a04001 	mov	r4, r1
40005524:	e24dd034 	sub	sp, sp, #52	; 0x34
40005528:	e2801010 	add	r1, r0, #16
4000552c:	e1a06000 	mov	r6, r0
40005530:	e1a00004 	mov	r0, r4
40005534:	e1a05002 	mov	r5, r2
40005538:	eb0048ec 	bl	400178f0 <lo_pattern_match>
4000553c:	e3500000 	cmp	r0, #0
40005540:	0a00007f 	beq	40005744 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x230>
40005544:	e5d43000 	ldrb	r3, [r4]
40005548:	e3530000 	cmp	r3, #0
4000554c:	0a0000ca 	beq	4000587c <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x368>
40005550:	e1a03004 	mov	r3, r4
40005554:	e5f32001 	ldrb	r2, [r3, #1]!
40005558:	e3520000 	cmp	r2, #0
4000555c:	1afffffc 	bne	40005554 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x40>
40005560:	e0433004 	sub	r3, r3, r4
40005564:	e58d3000 	str	r3, [sp]
40005568:	e596200c 	ldr	r2, [r6, #12]
4000556c:	e3a0c070 	mov	ip, #112	; 0x70
40005570:	e59f8e7c 	ldr	r8, [pc, #3708]	; 400063f4 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xee0>
40005574:	e084e002 	add	lr, r4, r2
40005578:	e24e1001 	sub	r1, lr, #1
4000557c:	e28e3004 	add	r3, lr, #4
40005580:	e1a00001 	mov	r0, r1
40005584:	ea000002 	b	40005594 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x80>
40005588:	e1500003 	cmp	r0, r3
4000558c:	0a00006e 	beq	4000574c <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x238>
40005590:	e4d8c001 	ldrb	ip, [r8], #1
40005594:	e5f07001 	ldrb	r7, [r0, #1]!
40005598:	e157000c 	cmp	r7, ip
4000559c:	0afffff9 	beq	40005588 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x74>
400055a0:	e59f8e50 	ldr	r8, [pc, #3664]	; 400063f8 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xee4>
400055a4:	e1a00001 	mov	r0, r1
400055a8:	e3a07073 	mov	r7, #115	; 0x73
400055ac:	ea000002 	b	400055bc <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xa8>
400055b0:	e1500003 	cmp	r0, r3
400055b4:	0a000077 	beq	40005798 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x284>
400055b8:	e4d87001 	ldrb	r7, [r8], #1
400055bc:	e5f0c001 	ldrb	ip, [r0, #1]!
400055c0:	e15c0007 	cmp	ip, r7
400055c4:	0afffff9 	beq	400055b0 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x9c>
400055c8:	e59f9e2c 	ldr	r9, [pc, #3628]	; 400063fc <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xee8>
400055cc:	e28ec003 	add	ip, lr, #3
400055d0:	e1a00001 	mov	r0, r1
400055d4:	e3a08073 	mov	r8, #115	; 0x73
400055d8:	ea000002 	b	400055e8 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xd4>
400055dc:	e15c0000 	cmp	ip, r0
400055e0:	0a000090 	beq	40005828 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x314>
400055e4:	e4d98001 	ldrb	r8, [r9], #1
400055e8:	e5f07001 	ldrb	r7, [r0, #1]!
400055ec:	e1570008 	cmp	r7, r8
400055f0:	0afffff9 	beq	400055dc <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xc8>
400055f4:	e59fae04 	ldr	sl, [pc, #3588]	; 40006400 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xeec>
400055f8:	e28e9006 	add	r9, lr, #6
400055fc:	e1a00001 	mov	r0, r1
40005600:	e3a08066 	mov	r8, #102	; 0x66
40005604:	ea000002 	b	40005614 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x100>
40005608:	e1590000 	cmp	r9, r0
4000560c:	0a00009c 	beq	40005884 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x370>
40005610:	e4da8001 	ldrb	r8, [sl], #1
40005614:	e5f07001 	ldrb	r7, [r0, #1]!
40005618:	e1570008 	cmp	r7, r8
4000561c:	0afffff9 	beq	40005608 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xf4>
40005620:	e59faddc 	ldr	sl, [pc, #3548]	; 40006404 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xef0>
40005624:	e28eb007 	add	fp, lr, #7
40005628:	e1a00001 	mov	r0, r1
4000562c:	e3a08062 	mov	r8, #98	; 0x62
40005630:	ea000002 	b	40005640 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x12c>
40005634:	e150000b 	cmp	r0, fp
40005638:	0a0000a6 	beq	400058d8 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x3c4>
4000563c:	e4da8001 	ldrb	r8, [sl], #1
40005640:	e5f07001 	ldrb	r7, [r0, #1]!
40005644:	e1570008 	cmp	r7, r8
40005648:	0afffff9 	beq	40005634 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x120>
4000564c:	e59d7000 	ldr	r7, [sp]
40005650:	e282000b 	add	r0, r2, #11
40005654:	e58d0004 	str	r0, [sp, #4]
40005658:	e1500007 	cmp	r0, r7
4000565c:	0a000104 	beq	40005a74 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x560>
40005660:	e59d7000 	ldr	r7, [sp]
40005664:	e2820006 	add	r0, r2, #6
40005668:	e58d0008 	str	r0, [sp, #8]
4000566c:	e1500007 	cmp	r0, r7
40005670:	0a000114 	beq	40005ac8 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x5b4>
40005674:	e59d0000 	ldr	r0, [sp]
40005678:	e282b010 	add	fp, r2, #16
4000567c:	e15b0000 	cmp	fp, r0
40005680:	0a00013c 	beq	40005b78 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x664>
40005684:	e59dc000 	ldr	ip, [sp]
40005688:	e2820012 	add	r0, r2, #18
4000568c:	e58d000c 	str	r0, [sp, #12]
40005690:	e150000c 	cmp	r0, ip
40005694:	3a00000b 	bcc	400056c8 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x1b4>
40005698:	e30dcca8 	movw	ip, #56488	; 0xdca8
4000569c:	e28ea008 	add	sl, lr, #8
400056a0:	e344c002 	movt	ip, #16386	; 0x4002
400056a4:	e1a00001 	mov	r0, r1
400056a8:	e3a07064 	mov	r7, #100	; 0x64
400056ac:	ea000002 	b	400056bc <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x1a8>
400056b0:	e150000a 	cmp	r0, sl
400056b4:	0a000158 	beq	40005c1c <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x708>
400056b8:	e5fc7001 	ldrb	r7, [ip, #1]!
400056bc:	e5f08001 	ldrb	r8, [r0, #1]!
400056c0:	e1580007 	cmp	r8, r7
400056c4:	0afffff9 	beq	400056b0 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x19c>
400056c8:	e30dccdc 	movw	ip, #56540	; 0xdcdc
400056cc:	e28ea005 	add	sl, lr, #5
400056d0:	e344c002 	movt	ip, #16386	; 0x4002
400056d4:	e1a00001 	mov	r0, r1
400056d8:	e3a07074 	mov	r7, #116	; 0x74
400056dc:	ea000002 	b	400056ec <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x1d8>
400056e0:	e150000a 	cmp	r0, sl
400056e4:	0a0000aa 	beq	40005994 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x480>
400056e8:	e5fc7001 	ldrb	r7, [ip, #1]!
400056ec:	e5f08001 	ldrb	r8, [r0, #1]!
400056f0:	e1580007 	cmp	r8, r7
400056f4:	0afffff9 	beq	400056e0 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x1cc>
400056f8:	e59f7d08 	ldr	r7, [pc, #3336]	; 40006408 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xef4>
400056fc:	e1a00001 	mov	r0, r1
40005700:	e3a0e06d 	mov	lr, #109	; 0x6d
40005704:	ea000002 	b	40005714 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x200>
40005708:	e1500003 	cmp	r0, r3
4000570c:	0a0000ba 	beq	400059fc <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x4e8>
40005710:	e4d7e001 	ldrb	lr, [r7], #1
40005714:	e5f0c001 	ldrb	ip, [r0, #1]!
40005718:	e15c000e 	cmp	ip, lr
4000571c:	0afffff9 	beq	40005708 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x1f4>
40005720:	e59fcce4 	ldr	ip, [pc, #3300]	; 4000640c <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xef8>
40005724:	e3a03077 	mov	r3, #119	; 0x77
40005728:	ea000002 	b	40005738 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x224>
4000572c:	e1510009 	cmp	r1, r9
40005730:	0a0000f6 	beq	40005b10 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x5fc>
40005734:	e4dc3001 	ldrb	r3, [ip], #1
40005738:	e5f10001 	ldrb	r0, [r1, #1]!
4000573c:	e1500003 	cmp	r0, r3
40005740:	0afffff9 	beq	4000572c <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x218>
40005744:	e28dd034 	add	sp, sp, #52	; 0x34
40005748:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000574c:	e1a02005 	mov	r2, r5
40005750:	e1a01004 	mov	r1, r4
40005754:	e28d0014 	add	r0, sp, #20
40005758:	eb00493b 	bl	40017c4c <OscSimpleMessage::OscSimpleMessage(unsigned char const*, unsigned long)>
4000575c:	e59d3020 	ldr	r3, [sp, #32]
40005760:	e3530000 	cmp	r3, #0
40005764:	0afffff6 	beq	40005744 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x230>
40005768:	e59d301c 	ldr	r3, [sp, #28]
4000576c:	e5d33000 	ldrb	r3, [r3]
40005770:	e3530066 	cmp	r3, #102	; 0x66
40005774:	1afffff2 	bne	40005744 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x230>
40005778:	e28d0014 	add	r0, sp, #20
4000577c:	e3a01000 	mov	r1, #0
40005780:	eb004964 	bl	40017d18 <OscSimpleMessage::GetFloat(unsigned int)>
40005784:	e3043094 	movw	r3, #16532	; 0x4094
40005788:	e3443003 	movt	r3, #16387	; 0x4003
4000578c:	e5930000 	ldr	r0, [r3]
40005790:	eb002bc1 	bl	4001069c <LtcGenerator::ActionSetPitch(float)>
40005794:	eaffffea 	b	40005744 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x230>
40005798:	e59d1000 	ldr	r1, [sp]
4000579c:	e2823005 	add	r3, r2, #5
400057a0:	e1530001 	cmp	r3, r1
400057a4:	0a000014 	beq	400057fc <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x2e8>
400057a8:	e59d0000 	ldr	r0, [sp]
400057ac:	e2821011 	add	r1, r2, #17
400057b0:	e1510000 	cmp	r1, r0
400057b4:	0a00005c 	beq	4000592c <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x418>
400057b8:	e59d0000 	ldr	r0, [sp]
400057bc:	e2821015 	add	r1, r2, #21
400057c0:	e1510000 	cmp	r1, r0
400057c4:	1affffde 	bne	40005744 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x230>
400057c8:	e0841003 	add	r1, r4, r3
400057cc:	e3a0002f 	mov	r0, #47	; 0x2f
400057d0:	e59fec38 	ldr	lr, [pc, #3128]	; 40006410 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xefc>
400057d4:	e2413001 	sub	r3, r1, #1
400057d8:	e2811004 	add	r1, r1, #4
400057dc:	ea000002 	b	400057ec <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x2d8>
400057e0:	e1510003 	cmp	r1, r3
400057e4:	0a000117 	beq	40005c48 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x734>
400057e8:	e4de0001 	ldrb	r0, [lr], #1
400057ec:	e5f3c001 	ldrb	ip, [r3, #1]!
400057f0:	e15c0000 	cmp	ip, r0
400057f4:	0afffff9 	beq	400057e0 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x2cc>
400057f8:	eaffffd1 	b	40005744 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x230>
400057fc:	e3043094 	movw	r3, #16532	; 0x4094
40005800:	e3a01001 	mov	r1, #1
40005804:	e3443003 	movt	r3, #16387	; 0x4003
40005808:	e5930000 	ldr	r0, [r3]
4000580c:	eb002b22 	bl	4001049c <LtcGenerator::ActionStart(bool)>
40005810:	e3043090 	movw	r3, #16528	; 0x4090
40005814:	e3443003 	movt	r3, #16387	; 0x4003
40005818:	e5930000 	ldr	r0, [r3]
4000581c:	e28dd034 	add	sp, sp, #52	; 0x34
40005820:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
40005824:	ea00394c 	b	40013d5c <SystimeReader::ActionStart()>
40005828:	e59d1000 	ldr	r1, [sp]
4000582c:	e2823004 	add	r3, r2, #4
40005830:	e1530001 	cmp	r3, r1
40005834:	0a0000ee 	beq	40005bf4 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x6e0>
40005838:	e59d0000 	ldr	r0, [sp]
4000583c:	e2821014 	add	r1, r2, #20
40005840:	e1510000 	cmp	r1, r0
40005844:	1affffbe 	bne	40005744 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x230>
40005848:	e0841003 	add	r1, r4, r3
4000584c:	e3a0002f 	mov	r0, #47	; 0x2f
40005850:	e59febb8 	ldr	lr, [pc, #3000]	; 40006410 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xefc>
40005854:	e2413001 	sub	r3, r1, #1
40005858:	e2811004 	add	r1, r1, #4
4000585c:	ea000002 	b	4000586c <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x358>
40005860:	e1510003 	cmp	r1, r3
40005864:	0a000109 	beq	40005c90 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x77c>
40005868:	e4de0001 	ldrb	r0, [lr], #1
4000586c:	e5f3c001 	ldrb	ip, [r3, #1]!
40005870:	e15c0000 	cmp	ip, r0
40005874:	0afffff9 	beq	40005860 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x34c>
40005878:	eaffffb1 	b	40005744 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x230>
4000587c:	e58d3000 	str	r3, [sp]
40005880:	eaffff38 	b	40005568 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x54>
40005884:	e1a02005 	mov	r2, r5
40005888:	e1a01004 	mov	r1, r4
4000588c:	e28d0014 	add	r0, sp, #20
40005890:	eb0048ed 	bl	40017c4c <OscSimpleMessage::OscSimpleMessage(unsigned char const*, unsigned long)>
40005894:	e59d3020 	ldr	r3, [sp, #32]
40005898:	e3530000 	cmp	r3, #0
4000589c:	0affffa8 	beq	40005744 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x230>
400058a0:	e59d301c 	ldr	r3, [sp, #28]
400058a4:	e5d33000 	ldrb	r3, [r3]
400058a8:	e3530069 	cmp	r3, #105	; 0x69
400058ac:	1affffa4 	bne	40005744 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x230>
400058b0:	e3a01000 	mov	r1, #0
400058b4:	e28d0014 	add	r0, sp, #20
400058b8:	eb004927 	bl	40017d5c <OscSimpleMessage::GetInt(unsigned int)>
400058bc:	e2501000 	subs	r1, r0, #0
400058c0:	daffff9f 	ble	40005744 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x230>
400058c4:	e3043094 	movw	r3, #16532	; 0x4094
400058c8:	e3443003 	movt	r3, #16387	; 0x4003
400058cc:	e5930000 	ldr	r0, [r3]
400058d0:	eb002cad 	bl	40010b8c <LtcGenerator::ActionForward(long)>
400058d4:	eaffff9a 	b	40005744 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x230>
400058d8:	e1a02005 	mov	r2, r5
400058dc:	e1a01004 	mov	r1, r4
400058e0:	e28d0014 	add	r0, sp, #20
400058e4:	eb0048d8 	bl	40017c4c <OscSimpleMessage::OscSimpleMessage(unsigned char const*, unsigned long)>
400058e8:	e59d3020 	ldr	r3, [sp, #32]
400058ec:	e3530000 	cmp	r3, #0
400058f0:	0affff93 	beq	40005744 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x230>
400058f4:	e59d301c 	ldr	r3, [sp, #28]
400058f8:	e5d33000 	ldrb	r3, [r3]
400058fc:	e3530069 	cmp	r3, #105	; 0x69
40005900:	1affff8f 	bne	40005744 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x230>
40005904:	e3a01000 	mov	r1, #0
40005908:	e28d0014 	add	r0, sp, #20
4000590c:	eb004912 	bl	40017d5c <OscSimpleMessage::GetInt(unsigned int)>
40005910:	e2501000 	subs	r1, r0, #0
40005914:	daffff8a 	ble	40005744 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x230>
40005918:	e3043094 	movw	r3, #16532	; 0x4094
4000591c:	e3443003 	movt	r3, #16387	; 0x4003
40005920:	e5930000 	ldr	r0, [r3]
40005924:	eb002cba 	bl	40010c14 <LtcGenerator::ActionBackward(long)>
40005928:	eaffff85 	b	40005744 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x230>
4000592c:	e7d43003 	ldrb	r3, [r4, r3]
40005930:	e353002f 	cmp	r3, #47	; 0x2f
40005934:	1affff82 	bne	40005744 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x230>
40005938:	e2822006 	add	r2, r2, #6
4000593c:	e28d1014 	add	r1, sp, #20
40005940:	e0844002 	add	r4, r4, r2
40005944:	e1a03001 	mov	r3, r1
40005948:	e284000b 	add	r0, r4, #11
4000594c:	e4d42001 	ldrb	r2, [r4], #1
40005950:	e1540000 	cmp	r4, r0
40005954:	e4c32001 	strb	r2, [r3], #1
40005958:	1afffffb 	bne	4000594c <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x438>
4000595c:	e3044094 	movw	r4, #16532	; 0x4094
40005960:	e3a0303a 	mov	r3, #58	; 0x3a
40005964:	e3444003 	movt	r4, #16387	; 0x4003
40005968:	e5cd3016 	strb	r3, [sp, #22]
4000596c:	e5940000 	ldr	r0, [r4]
40005970:	e5cd3019 	strb	r3, [sp, #25]
40005974:	e5cd301c 	strb	r3, [sp, #28]
40005978:	eb002ae5 	bl	40010514 <LtcGenerator::ActionSetStart(char const*)>
4000597c:	e5940000 	ldr	r0, [r4]
40005980:	eb002adb 	bl	400104f4 <LtcGenerator::ActionStop()>
40005984:	e5940000 	ldr	r0, [r4]
40005988:	e3a01001 	mov	r1, #1
4000598c:	eb002ac2 	bl	4001049c <LtcGenerator::ActionStart(bool)>
40005990:	eaffff6b 	b	40005744 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x230>
40005994:	e59dc000 	ldr	ip, [sp]
40005998:	e282000d 	add	r0, r2, #13
4000599c:	e150000c 	cmp	r0, ip
400059a0:	0a0000cc 	beq	40005cd8 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x7c4>
400059a4:	e59dc000 	ldr	ip, [sp]
400059a8:	e282000a 	add	r0, r2, #10
400059ac:	e150000c 	cmp	r0, ip
400059b0:	0a000100 	beq	40005db8 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x8a4>
400059b4:	e59dc000 	ldr	ip, [sp]
400059b8:	e282000e 	add	r0, r2, #14
400059bc:	e150000c 	cmp	r0, ip
400059c0:	1affff4c 	bne	400056f8 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x1e4>
400059c4:	e59d0008 	ldr	r0, [sp, #8]
400059c8:	e3a07074 	mov	r7, #116	; 0x74
400059cc:	e59f8a40 	ldr	r8, [pc, #2624]	; 40006414 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xf00>
400059d0:	e0840000 	add	r0, r4, r0
400059d4:	e240c001 	sub	ip, r0, #1
400059d8:	e2800007 	add	r0, r0, #7
400059dc:	ea000002 	b	400059ec <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x4d8>
400059e0:	e15c0000 	cmp	ip, r0
400059e4:	0a0001bf 	beq	400060e8 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xbd4>
400059e8:	e4d87001 	ldrb	r7, [r8], #1
400059ec:	e5fce001 	ldrb	lr, [ip, #1]!
400059f0:	e15e0007 	cmp	lr, r7
400059f4:	0afffff9 	beq	400059e0 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x4cc>
400059f8:	eaffff3e 	b	400056f8 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x1e4>
400059fc:	e59d0000 	ldr	r0, [sp]
40005a00:	e282300a 	add	r3, r2, #10
40005a04:	e1530000 	cmp	r3, r0
40005a08:	0a000110 	beq	40005e50 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x93c>
40005a0c:	e59d0000 	ldr	r0, [sp]
40005a10:	e2823009 	add	r3, r2, #9
40005a14:	e1530000 	cmp	r3, r0
40005a18:	0a00011d 	beq	40005e94 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x980>
40005a1c:	e59d0000 	ldr	r0, [sp]
40005a20:	e282300d 	add	r3, r2, #13
40005a24:	e1530000 	cmp	r3, r0
40005a28:	0a000128 	beq	40005ed0 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x9bc>
40005a2c:	e59d0000 	ldr	r0, [sp]
40005a30:	e2823008 	add	r3, r2, #8
40005a34:	e1530000 	cmp	r3, r0
40005a38:	1affff38 	bne	40005720 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x20c>
40005a3c:	e59fe9d4 	ldr	lr, [pc, #2516]	; 40006418 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xf04>
40005a40:	e2827005 	add	r7, r2, #5
40005a44:	e0847007 	add	r7, r4, r7
40005a48:	e3a0c062 	mov	ip, #98	; 0x62
40005a4c:	e2473001 	sub	r3, r7, #1
40005a50:	e2877002 	add	r7, r7, #2
40005a54:	ea000002 	b	40005a64 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x550>
40005a58:	e1570003 	cmp	r7, r3
40005a5c:	0a0001cc 	beq	40006194 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xc80>
40005a60:	e4dec001 	ldrb	ip, [lr], #1
40005a64:	e5f30001 	ldrb	r0, [r3, #1]!
40005a68:	e150000c 	cmp	r0, ip
40005a6c:	0afffff9 	beq	40005a58 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x544>
40005a70:	eaffff2a 	b	40005720 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x20c>
40005a74:	e59fa994 	ldr	sl, [pc, #2452]	; 40006410 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xefc>
40005a78:	e282b004 	add	fp, r2, #4
40005a7c:	e084b00b 	add	fp, r4, fp
40005a80:	e3a0802f 	mov	r8, #47	; 0x2f
40005a84:	e24b0001 	sub	r0, fp, #1
40005a88:	e28bb004 	add	fp, fp, #4
40005a8c:	ea000000 	b	40005a94 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x580>
40005a90:	e4da8001 	ldrb	r8, [sl], #1
40005a94:	e5f07001 	ldrb	r7, [r0, #1]!
40005a98:	e1570008 	cmp	r7, r8
40005a9c:	1afffeef 	bne	40005660 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x14c>
40005aa0:	e15b0000 	cmp	fp, r0
40005aa4:	1afffff9 	bne	40005a90 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x57c>
40005aa8:	e3043094 	movw	r3, #16532	; 0x4094
40005aac:	e2822009 	add	r2, r2, #9
40005ab0:	e3443003 	movt	r3, #16387	; 0x4003
40005ab4:	e0841002 	add	r1, r4, r2
40005ab8:	e5930000 	ldr	r0, [r3]
40005abc:	e28dd034 	add	sp, sp, #52	; 0x34
40005ac0:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
40005ac4:	ea002b1f 	b	40010748 <LtcGenerator::ActionSetRate(char const*)>
40005ac8:	e30d7c8c 	movw	r7, #56460	; 0xdc8c
40005acc:	e28eb005 	add	fp, lr, #5
40005ad0:	e3447002 	movt	r7, #16386	; 0x4002
40005ad4:	e1a00001 	mov	r0, r1
40005ad8:	e3a08072 	mov	r8, #114	; 0x72
40005adc:	ea000000 	b	40005ae4 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x5d0>
40005ae0:	e5f78001 	ldrb	r8, [r7, #1]!
40005ae4:	e5f0a001 	ldrb	sl, [r0, #1]!
40005ae8:	e15a0008 	cmp	sl, r8
40005aec:	1afffee0 	bne	40005674 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x160>
40005af0:	e15b0000 	cmp	fp, r0
40005af4:	1afffff9 	bne	40005ae0 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x5cc>
40005af8:	e3043094 	movw	r3, #16532	; 0x4094
40005afc:	e3443003 	movt	r3, #16387	; 0x4003
40005b00:	e5930000 	ldr	r0, [r3]
40005b04:	e28dd034 	add	sp, sp, #52	; 0x34
40005b08:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
40005b0c:	ea002a7b 	b	40010500 <LtcGenerator::ActionResume()>
40005b10:	e59d1000 	ldr	r1, [sp]
40005b14:	e282300d 	add	r3, r2, #13
40005b18:	e1530001 	cmp	r3, r1
40005b1c:	0a0000fa 	beq	40005f0c <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x9f8>
40005b20:	e59d3000 	ldr	r3, [sp]
40005b24:	e282e00e 	add	lr, r2, #14
40005b28:	e15e0003 	cmp	lr, r3
40005b2c:	0a000118 	beq	40005f94 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xa80>
40005b30:	e89d000a 	ldm	sp, {r1, r3}
40005b34:	e1530001 	cmp	r3, r1
40005b38:	0a00013d 	beq	40006034 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xb20>
40005b3c:	2affff00 	bcs	40005744 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x230>
40005b40:	e59fc8d4 	ldr	ip, [pc, #2260]	; 4000641c <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xf08>
40005b44:	e2827007 	add	r7, r2, #7
40005b48:	e0847007 	add	r7, r4, r7
40005b4c:	e3a00072 	mov	r0, #114	; 0x72
40005b50:	e2473001 	sub	r3, r7, #1
40005b54:	e2877003 	add	r7, r7, #3
40005b58:	ea000002 	b	40005b68 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x654>
40005b5c:	e1570003 	cmp	r7, r3
40005b60:	0a000141 	beq	4000606c <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xb58>
40005b64:	e4dc0001 	ldrb	r0, [ip], #1
40005b68:	e5f31001 	ldrb	r1, [r3, #1]!
40005b6c:	e1510000 	cmp	r1, r0
40005b70:	0afffff9 	beq	40005b5c <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x648>
40005b74:	eafffef2 	b	40005744 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x230>
40005b78:	e59fa8a0 	ldr	sl, [pc, #2208]	; 40006420 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xf0c>
40005b7c:	e1a00001 	mov	r0, r1
40005b80:	e3a07067 	mov	r7, #103	; 0x67
40005b84:	ea000000 	b	40005b8c <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x678>
40005b88:	e4da7001 	ldrb	r7, [sl], #1
40005b8c:	e5f08001 	ldrb	r8, [r0, #1]!
40005b90:	e1580007 	cmp	r8, r7
40005b94:	1afffeba 	bne	40005684 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x170>
40005b98:	e150000c 	cmp	r0, ip
40005b9c:	1afffff9 	bne	40005b88 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x674>
40005ba0:	e5de0004 	ldrb	r0, [lr, #4]
40005ba4:	e350002f 	cmp	r0, #47	; 0x2f
40005ba8:	1afffeb5 	bne	40005684 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x170>
40005bac:	e2822005 	add	r2, r2, #5
40005bb0:	e28d1014 	add	r1, sp, #20
40005bb4:	e0844002 	add	r4, r4, r2
40005bb8:	e1a03001 	mov	r3, r1
40005bbc:	e284000b 	add	r0, r4, #11
40005bc0:	e4d42001 	ldrb	r2, [r4], #1
40005bc4:	e1500004 	cmp	r0, r4
40005bc8:	e4c32001 	strb	r2, [r3], #1
40005bcc:	1afffffb 	bne	40005bc0 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x6ac>
40005bd0:	e3042094 	movw	r2, #16532	; 0x4094
40005bd4:	e3a0303a 	mov	r3, #58	; 0x3a
40005bd8:	e3442003 	movt	r2, #16387	; 0x4003
40005bdc:	e5cd3016 	strb	r3, [sp, #22]
40005be0:	e5920000 	ldr	r0, [r2]
40005be4:	e5cd3019 	strb	r3, [sp, #25]
40005be8:	e5cd301c 	strb	r3, [sp, #28]
40005bec:	eb002a66 	bl	4001058c <LtcGenerator::ActionGoto(char const*)>
40005bf0:	eafffed3 	b	40005744 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x230>
40005bf4:	e3043094 	movw	r3, #16532	; 0x4094
40005bf8:	e3443003 	movt	r3, #16387	; 0x4003
40005bfc:	e5930000 	ldr	r0, [r3]
40005c00:	eb002a3b 	bl	400104f4 <LtcGenerator::ActionStop()>
40005c04:	e3043090 	movw	r3, #16528	; 0x4090
40005c08:	e3443003 	movt	r3, #16387	; 0x4003
40005c0c:	e5930000 	ldr	r0, [r3]
40005c10:	e28dd034 	add	sp, sp, #52	; 0x34
40005c14:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
40005c18:	ea00385e 	b	40013d98 <SystimeReader::ActionStop()>
40005c1c:	e5de0009 	ldrb	r0, [lr, #9]
40005c20:	e350002f 	cmp	r0, #47	; 0x2f
40005c24:	1afffea7 	bne	400056c8 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x1b4>
40005c28:	e3043094 	movw	r3, #16532	; 0x4094
40005c2c:	e282200a 	add	r2, r2, #10
40005c30:	e3443003 	movt	r3, #16387	; 0x4003
40005c34:	e0841002 	add	r1, r4, r2
40005c38:	e5930000 	ldr	r0, [r3]
40005c3c:	e28dd034 	add	sp, sp, #52	; 0x34
40005c40:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
40005c44:	ea002a75 	b	40010620 <LtcGenerator::ActionSetDirection(char const*)>
40005c48:	e282200a 	add	r2, r2, #10
40005c4c:	e28d1014 	add	r1, sp, #20
40005c50:	e0844002 	add	r4, r4, r2
40005c54:	e1a03001 	mov	r3, r1
40005c58:	e284000b 	add	r0, r4, #11
40005c5c:	e4d42001 	ldrb	r2, [r4], #1
40005c60:	e1540000 	cmp	r4, r0
40005c64:	e4c32001 	strb	r2, [r3], #1
40005c68:	1afffffb 	bne	40005c5c <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x748>
40005c6c:	e3042094 	movw	r2, #16532	; 0x4094
40005c70:	e3a0303a 	mov	r3, #58	; 0x3a
40005c74:	e3442003 	movt	r2, #16387	; 0x4003
40005c78:	e5cd3016 	strb	r3, [sp, #22]
40005c7c:	e5920000 	ldr	r0, [r2]
40005c80:	e5cd3019 	strb	r3, [sp, #25]
40005c84:	e5cd301c 	strb	r3, [sp, #28]
40005c88:	eb002a21 	bl	40010514 <LtcGenerator::ActionSetStart(char const*)>
40005c8c:	eafffeac 	b	40005744 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x230>
40005c90:	e2822009 	add	r2, r2, #9
40005c94:	e28d1014 	add	r1, sp, #20
40005c98:	e0844002 	add	r4, r4, r2
40005c9c:	e1a03001 	mov	r3, r1
40005ca0:	e284000b 	add	r0, r4, #11
40005ca4:	e4d42001 	ldrb	r2, [r4], #1
40005ca8:	e1540000 	cmp	r4, r0
40005cac:	e4c32001 	strb	r2, [r3], #1
40005cb0:	1afffffb 	bne	40005ca4 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x790>
40005cb4:	e3042094 	movw	r2, #16532	; 0x4094
40005cb8:	e3a0303a 	mov	r3, #58	; 0x3a
40005cbc:	e3442003 	movt	r2, #16387	; 0x4003
40005cc0:	e5cd3016 	strb	r3, [sp, #22]
40005cc4:	e5920000 	ldr	r0, [r2]
40005cc8:	e5cd3019 	strb	r3, [sp, #25]
40005ccc:	e5cd301c 	strb	r3, [sp, #28]
40005cd0:	eb002a1e 	bl	40010550 <LtcGenerator::ActionSetStop(char const*)>
40005cd4:	eafffe9a 	b	40005744 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x230>
40005cd8:	e59d0008 	ldr	r0, [sp, #8]
40005cdc:	e30d8cec 	movw	r8, #56556	; 0xdcec
40005ce0:	e3448002 	movt	r8, #16386	; 0x4002
40005ce4:	e3a0706c 	mov	r7, #108	; 0x6c
40005ce8:	e084a000 	add	sl, r4, r0
40005cec:	e24a0001 	sub	r0, sl, #1
40005cf0:	e28aa005 	add	sl, sl, #5
40005cf4:	ea000000 	b	40005cfc <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x7e8>
40005cf8:	e5f87001 	ldrb	r7, [r8, #1]!
40005cfc:	e5f0c001 	ldrb	ip, [r0, #1]!
40005d00:	e15c0007 	cmp	ip, r7
40005d04:	1affff26 	bne	400059a4 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x490>
40005d08:	e15a0000 	cmp	sl, r0
40005d0c:	1afffff9 	bne	40005cf8 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x7e4>
40005d10:	e5de300c 	ldrb	r3, [lr, #12]
40005d14:	e3832020 	orr	r2, r3, #32
40005d18:	e3520034 	cmp	r2, #52	; 0x34
40005d1c:	9a000013 	bls	40005d70 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x85c>
40005d20:	e2423061 	sub	r3, r2, #97	; 0x61
40005d24:	e6ef2073 	uxtb	r2, r3
40005d28:	e352000c 	cmp	r2, #12
40005d2c:	8a000012 	bhi	40005d7c <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x868>
40005d30:	e353000c 	cmp	r3, #12
40005d34:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
40005d38:	ea00000f 	b	40005d7c <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x868>
40005d3c:	4000634c 	andmi	r6, r0, ip, asr #6
40005d40:	40006344 	andmi	r6, r0, r4, asr #6
40005d44:	40006314 	andmi	r6, r0, r4, lsl r3
40005d48:	40005d7c 	andmi	r5, r0, ip, ror sp
40005d4c:	40005d7c 	andmi	r5, r0, ip, ror sp
40005d50:	40005d7c 	andmi	r5, r0, ip, ror sp
40005d54:	40005d7c 	andmi	r5, r0, ip, ror sp
40005d58:	40005d7c 	andmi	r5, r0, ip, ror sp
40005d5c:	40005d7c 	andmi	r5, r0, ip, ror sp
40005d60:	40005d7c 	andmi	r5, r0, ip, ror sp
40005d64:	40005d7c 	andmi	r5, r0, ip, ror sp
40005d68:	40005d7c 	andmi	r5, r0, ip, ror sp
40005d6c:	4000630c 	andmi	r6, r0, ip, lsl #6
40005d70:	e3520030 	cmp	r2, #48	; 0x30
40005d74:	82433031 	subhi	r3, r3, #49	; 0x31
40005d78:	8a000000 	bhi	40005d80 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x86c>
40005d7c:	e3a03008 	mov	r3, #8
40005d80:	e3041068 	movw	r1, #16488	; 0x4068
40005d84:	e3a02006 	mov	r2, #6
40005d88:	e3441003 	movt	r1, #16387	; 0x4003
40005d8c:	e0830002 	add	r0, r3, r2
40005d90:	e5911000 	ldr	r1, [r1]
40005d94:	e0020392 	mul	r2, r2, r3
40005d98:	e1a00100 	lsl	r0, r0, #2
40005d9c:	e5813030 	str	r3, [r1, #48]	; 0x30
40005da0:	e282306a 	add	r3, r2, #106	; 0x6a
40005da4:	e5810020 	str	r0, [r1, #32]
40005da8:	e5813024 	str	r3, [r1, #36]	; 0x24
40005dac:	e28dd034 	add	sp, sp, #52	; 0x34
40005db0:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
40005db4:	ea0027af 	b	4000fc78 <tcnet::display::show()>
40005db8:	e59d0008 	ldr	r0, [sp, #8]
40005dbc:	e3a0c074 	mov	ip, #116	; 0x74
40005dc0:	e59f764c 	ldr	r7, [pc, #1612]	; 40006414 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xf00>
40005dc4:	e0848000 	add	r8, r4, r0
40005dc8:	e2480001 	sub	r0, r8, #1
40005dcc:	e2888003 	add	r8, r8, #3
40005dd0:	ea000000 	b	40005dd8 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x8c4>
40005dd4:	e4d7c001 	ldrb	ip, [r7], #1
40005dd8:	e5f0e001 	ldrb	lr, [r0, #1]!
40005ddc:	e15e000c 	cmp	lr, ip
40005de0:	1afffef3 	bne	400059b4 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x4a0>
40005de4:	e1500008 	cmp	r0, r8
40005de8:	1afffff9 	bne	40005dd4 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x8c0>
40005dec:	e1a02005 	mov	r2, r5
40005df0:	e1a01004 	mov	r1, r4
40005df4:	e28d0014 	add	r0, sp, #20
40005df8:	eb004793 	bl	40017c4c <OscSimpleMessage::OscSimpleMessage(unsigned char const*, unsigned long)>
40005dfc:	e59d3020 	ldr	r3, [sp, #32]
40005e00:	e3530000 	cmp	r3, #0
40005e04:	0afffe4e 	beq	40005744 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x230>
40005e08:	e59d301c 	ldr	r3, [sp, #28]
40005e0c:	e5d33000 	ldrb	r3, [r3]
40005e10:	e3530069 	cmp	r3, #105	; 0x69
40005e14:	1afffe4a 	bne	40005744 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x230>
40005e18:	e3a01000 	mov	r1, #0
40005e1c:	e28d0014 	add	r0, sp, #20
40005e20:	eb0047cd 	bl	40017d5c <OscSimpleMessage::GetInt(unsigned int)>
40005e24:	e2403018 	sub	r3, r0, #24
40005e28:	e3530006 	cmp	r3, #6
40005e2c:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
40005e30:	eafffe43 	b	40005744 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x230>
40005e34:	400063cc 	andmi	r6, r0, ip, asr #7
40005e38:	400063a4 	andmi	r6, r0, r4, lsr #7
40005e3c:	40005744 	andmi	r5, r0, r4, asr #14
40005e40:	40005744 	andmi	r5, r0, r4, asr #14
40005e44:	40005744 	andmi	r5, r0, r4, asr #14
40005e48:	4000637c 	andmi	r6, r0, ip, ror r3
40005e4c:	40006354 	andmi	r6, r0, r4, asr r3
40005e50:	e59fe5cc 	ldr	lr, [pc, #1484]	; 40006424 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xf10>
40005e54:	e2827005 	add	r7, r2, #5
40005e58:	e0847007 	add	r7, r4, r7
40005e5c:	e3a00073 	mov	r0, #115	; 0x73
40005e60:	e2473001 	sub	r3, r7, #1
40005e64:	e2877004 	add	r7, r7, #4
40005e68:	ea000000 	b	40005e70 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x95c>
40005e6c:	e4de0001 	ldrb	r0, [lr], #1
40005e70:	e5f3c001 	ldrb	ip, [r3, #1]!
40005e74:	e15c0000 	cmp	ip, r0
40005e78:	1afffee3 	bne	40005a0c <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x4f8>
40005e7c:	e1530007 	cmp	r3, r7
40005e80:	1afffff9 	bne	40005e6c <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x958>
40005e84:	e3a000fa 	mov	r0, #250	; 0xfa
40005e88:	e28dd034 	add	sp, sp, #52	; 0x34
40005e8c:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
40005e90:	eafffd40 	b	40005398 <LtcMidiSystemRealtime::Send(midi::Types) [clone .isra.0]>
40005e94:	e59fe58c 	ldr	lr, [pc, #1420]	; 40006428 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xf14>
40005e98:	e2827005 	add	r7, r2, #5
40005e9c:	e0847007 	add	r7, r4, r7
40005ea0:	e3a00073 	mov	r0, #115	; 0x73
40005ea4:	e2473001 	sub	r3, r7, #1
40005ea8:	e2877003 	add	r7, r7, #3
40005eac:	ea000000 	b	40005eb4 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x9a0>
40005eb0:	e4de0001 	ldrb	r0, [lr], #1
40005eb4:	e5f3c001 	ldrb	ip, [r3, #1]!
40005eb8:	e15c0000 	cmp	ip, r0
40005ebc:	1afffed6 	bne	40005a1c <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x508>
40005ec0:	e1530007 	cmp	r3, r7
40005ec4:	1afffff9 	bne	40005eb0 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x99c>
40005ec8:	e3a000fc 	mov	r0, #252	; 0xfc
40005ecc:	eaffffed 	b	40005e88 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x974>
40005ed0:	e59fe554 	ldr	lr, [pc, #1364]	; 4000642c <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xf18>
40005ed4:	e2827005 	add	r7, r2, #5
40005ed8:	e0847007 	add	r7, r4, r7
40005edc:	e3a00063 	mov	r0, #99	; 0x63
40005ee0:	e2473001 	sub	r3, r7, #1
40005ee4:	e2877007 	add	r7, r7, #7
40005ee8:	ea000000 	b	40005ef0 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x9dc>
40005eec:	e4de0001 	ldrb	r0, [lr], #1
40005ef0:	e5f3c001 	ldrb	ip, [r3, #1]!
40005ef4:	e15c0000 	cmp	ip, r0
40005ef8:	1afffecb 	bne	40005a2c <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x518>
40005efc:	e1530007 	cmp	r3, r7
40005f00:	1afffff9 	bne	40005eec <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x9d8>
40005f04:	e3a000fb 	mov	r0, #251	; 0xfb
40005f08:	eaffffde 	b	40005e88 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x974>
40005f0c:	e282e007 	add	lr, r2, #7
40005f10:	e30dcd04 	movw	ip, #56580	; 0xdd04
40005f14:	e084e00e 	add	lr, r4, lr
40005f18:	e3a0006d 	mov	r0, #109	; 0x6d
40005f1c:	e344c002 	movt	ip, #16386	; 0x4002
40005f20:	e24e3001 	sub	r3, lr, #1
40005f24:	e28ee005 	add	lr, lr, #5
40005f28:	ea000000 	b	40005f30 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xa1c>
40005f2c:	e5fc0001 	ldrb	r0, [ip, #1]!
40005f30:	e5f31001 	ldrb	r1, [r3, #1]!
40005f34:	e1510000 	cmp	r1, r0
40005f38:	1afffef8 	bne	40005b20 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x60c>
40005f3c:	e15e0003 	cmp	lr, r3
40005f40:	1afffff9 	bne	40005f2c <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xa18>
40005f44:	e1a02005 	mov	r2, r5
40005f48:	e1a01004 	mov	r1, r4
40005f4c:	e28d0014 	add	r0, sp, #20
40005f50:	eb00473d 	bl	40017c4c <OscSimpleMessage::OscSimpleMessage(unsigned char const*, unsigned long)>
40005f54:	e59d3020 	ldr	r3, [sp, #32]
40005f58:	e3530000 	cmp	r3, #0
40005f5c:	0afffdf8 	beq	40005744 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x230>
40005f60:	e59d301c 	ldr	r3, [sp, #28]
40005f64:	e5d33000 	ldrb	r3, [r3]
40005f68:	e3530069 	cmp	r3, #105	; 0x69
40005f6c:	1afffdf4 	bne	40005744 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x230>
40005f70:	e3a01000 	mov	r1, #0
40005f74:	e28d0014 	add	r0, sp, #20
40005f78:	eb004777 	bl	40017d5c <OscSimpleMessage::GetInt(unsigned int)>
40005f7c:	e3042078 	movw	r2, #16504	; 0x4078
40005f80:	e6ef3070 	uxtb	r3, r0
40005f84:	e3442003 	movt	r2, #16387	; 0x4003
40005f88:	e5922000 	ldr	r2, [r2]
40005f8c:	e5823030 	str	r3, [r2, #48]	; 0x30
40005f90:	eafffdeb 	b	40005744 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x230>
40005f94:	e59fc494 	ldr	ip, [pc, #1172]	; 40006430 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xf1c>
40005f98:	e2827007 	add	r7, r2, #7
40005f9c:	e0847007 	add	r7, r4, r7
40005fa0:	e3a0106d 	mov	r1, #109	; 0x6d
40005fa4:	e2473001 	sub	r3, r7, #1
40005fa8:	e2877006 	add	r7, r7, #6
40005fac:	ea000000 	b	40005fb4 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xaa0>
40005fb0:	e4dc1001 	ldrb	r1, [ip], #1
40005fb4:	e5f30001 	ldrb	r0, [r3, #1]!
40005fb8:	e1500001 	cmp	r0, r1
40005fbc:	1afffedb 	bne	40005b30 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x61c>
40005fc0:	e1570003 	cmp	r7, r3
40005fc4:	1afffff9 	bne	40005fb0 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xa9c>
40005fc8:	e1a02005 	mov	r2, r5
40005fcc:	e1a01004 	mov	r1, r4
40005fd0:	e28d0014 	add	r0, sp, #20
40005fd4:	eb00471c 	bl	40017c4c <OscSimpleMessage::OscSimpleMessage(unsigned char const*, unsigned long)>
40005fd8:	e59d3020 	ldr	r3, [sp, #32]
40005fdc:	e3530000 	cmp	r3, #0
40005fe0:	0afffdd7 	beq	40005744 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x230>
40005fe4:	e59d301c 	ldr	r3, [sp, #28]
40005fe8:	e5d33000 	ldrb	r3, [r3]
40005fec:	e3530073 	cmp	r3, #115	; 0x73
40005ff0:	1afffdd3 	bne	40005744 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x230>
40005ff4:	e3a01000 	mov	r1, #0
40005ff8:	e28d0014 	add	r0, sp, #20
40005ffc:	eb004766 	bl	40017d9c <OscSimpleMessage::GetString(unsigned int)>
40006000:	e1a01000 	mov	r1, r0
40006004:	e1a03000 	mov	r3, r0
40006008:	e1a02003 	mov	r2, r3
4000600c:	e2833001 	add	r3, r3, #1
40006010:	e5d20000 	ldrb	r0, [r2]
40006014:	e3500000 	cmp	r0, #0
40006018:	1afffffa 	bne	40006008 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xaf4>
4000601c:	e0422001 	sub	r2, r2, r1
40006020:	e3043078 	movw	r3, #16504	; 0x4078
40006024:	e3443003 	movt	r3, #16387	; 0x4003
40006028:	e5930000 	ldr	r0, [r3]
4000602c:	eb0039bb 	bl	40014720 <LtcDisplayRgb::SetMessage(char const*, unsigned long)>
40006030:	eafffdc3 	b	40005744 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x230>
40006034:	e59f03f8 	ldr	r0, [pc, #1016]	; 40006434 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xf20>
40006038:	e282c007 	add	ip, r2, #7
4000603c:	e084c00c 	add	ip, r4, ip
40006040:	e3a02069 	mov	r2, #105	; 0x69
40006044:	e24c3001 	sub	r3, ip, #1
40006048:	e28cc003 	add	ip, ip, #3
4000604c:	ea000002 	b	4000605c <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xb48>
40006050:	e15c0003 	cmp	ip, r3
40006054:	0a00003a 	beq	40006144 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xc30>
40006058:	e4d02001 	ldrb	r2, [r0], #1
4000605c:	e5f31001 	ldrb	r1, [r3, #1]!
40006060:	e1510002 	cmp	r1, r2
40006064:	0afffff9 	beq	40006050 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xb3c>
40006068:	eafffdb5 	b	40005744 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x230>
4000606c:	e59d3000 	ldr	r3, [sp]
40006070:	e282200f 	add	r2, r2, #15
40006074:	e1520003 	cmp	r2, r3
40006078:	0a000058 	beq	400061e0 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xccc>
4000607c:	e59d3000 	ldr	r3, [sp]
40006080:	e15b0003 	cmp	fp, r3
40006084:	0a000083 	beq	40006298 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xd84>
40006088:	e59d300c 	ldr	r3, [sp, #12]
4000608c:	e59d1000 	ldr	r1, [sp]
40006090:	e1530001 	cmp	r3, r1
40006094:	0a000072 	beq	40006264 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xd50>
40006098:	e59d3000 	ldr	r3, [sp]
4000609c:	e15e0003 	cmp	lr, r3
400060a0:	0a000061 	beq	4000622c <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xd18>
400060a4:	e59d3000 	ldr	r3, [sp]
400060a8:	e1520003 	cmp	r2, r3
400060ac:	1afffda4 	bne	40005744 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x230>
400060b0:	e59d3004 	ldr	r3, [sp, #4]
400060b4:	e30d2d18 	movw	r2, #56600	; 0xdd18
400060b8:	e3442002 	movt	r2, #16386	; 0x4002
400060bc:	e0843003 	add	r3, r4, r3
400060c0:	e2431001 	sub	r1, r3, #1
400060c4:	e2833003 	add	r3, r3, #3
400060c8:	ea000001 	b	400060d4 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xbc0>
400060cc:	e1530001 	cmp	r3, r1
400060d0:	0a00008b 	beq	40006304 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xdf0>
400060d4:	e5f1c001 	ldrb	ip, [r1, #1]!
400060d8:	e4d20001 	ldrb	r0, [r2], #1
400060dc:	e15c0000 	cmp	ip, r0
400060e0:	0afffff9 	beq	400060cc <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xbb8>
400060e4:	eafffd96 	b	40005744 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x230>
400060e8:	e1a02005 	mov	r2, r5
400060ec:	e1a01004 	mov	r1, r4
400060f0:	e28d0014 	add	r0, sp, #20
400060f4:	eb0046d4 	bl	40017c4c <OscSimpleMessage::OscSimpleMessage(unsigned char const*, unsigned long)>
400060f8:	e59d3020 	ldr	r3, [sp, #32]
400060fc:	e3530000 	cmp	r3, #0
40006100:	0afffd8f 	beq	40005744 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x230>
40006104:	e59d301c 	ldr	r3, [sp, #28]
40006108:	e5d33000 	ldrb	r3, [r3]
4000610c:	e3530069 	cmp	r3, #105	; 0x69
40006110:	1afffd8b 	bne	40005744 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x230>
40006114:	e3a01000 	mov	r1, #0
40006118:	e28d0014 	add	r0, sp, #20
4000611c:	eb00470e 	bl	40017d5c <OscSimpleMessage::GetInt(unsigned int)>
40006120:	e3042068 	movw	r2, #16488	; 0x4068
40006124:	e3500000 	cmp	r0, #0
40006128:	e3442003 	movt	r2, #16387	; 0x4003
4000612c:	d3a03000 	movle	r3, #0
40006130:	c3a03001 	movgt	r3, #1
40006134:	e5922000 	ldr	r2, [r2]
40006138:	e5c23035 	strb	r3, [r2, #53]	; 0x35
4000613c:	eb0026cd 	bl	4000fc78 <tcnet::display::show()>
40006140:	eafffd7f 	b	40005744 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x230>
40006144:	e1a02005 	mov	r2, r5
40006148:	e1a01004 	mov	r1, r4
4000614c:	e28d0014 	add	r0, sp, #20
40006150:	eb0046bd 	bl	40017c4c <OscSimpleMessage::OscSimpleMessage(unsigned char const*, unsigned long)>
40006154:	e59d3020 	ldr	r3, [sp, #32]
40006158:	e3530000 	cmp	r3, #0
4000615c:	0afffd78 	beq	40005744 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x230>
40006160:	e59d301c 	ldr	r3, [sp, #28]
40006164:	e5d33000 	ldrb	r3, [r3]
40006168:	e3530073 	cmp	r3, #115	; 0x73
4000616c:	1afffd74 	bne	40005744 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x230>
40006170:	e3a01000 	mov	r1, #0
40006174:	e28d0014 	add	r0, sp, #20
40006178:	eb004707 	bl	40017d9c <OscSimpleMessage::GetString(unsigned int)>
4000617c:	e3043078 	movw	r3, #16504	; 0x4078
40006180:	e1a01000 	mov	r1, r0
40006184:	e3443003 	movt	r3, #16387	; 0x4003
40006188:	e5930000 	ldr	r0, [r3]
4000618c:	eb003a5e 	bl	40014b0c <LtcDisplayRgb::ShowInfo(char const*)>
40006190:	eafffd6b 	b	40005744 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x230>
40006194:	e1a02005 	mov	r2, r5
40006198:	e1a01004 	mov	r1, r4
4000619c:	e28d0014 	add	r0, sp, #20
400061a0:	eb0046a9 	bl	40017c4c <OscSimpleMessage::OscSimpleMessage(unsigned char const*, unsigned long)>
400061a4:	e59d3020 	ldr	r3, [sp, #32]
400061a8:	e3530000 	cmp	r3, #0
400061ac:	1a000047 	bne	400062d0 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xdbc>
400061b0:	e3a04000 	mov	r4, #0
400061b4:	e3043054 	movw	r3, #16468	; 0x4054
400061b8:	e1a01004 	mov	r1, r4
400061bc:	e3443003 	movt	r3, #16387	; 0x4003
400061c0:	e5930000 	ldr	r0, [r3]
400061c4:	eb002c99 	bl	40011430 <LtcMidiSystemRealtime::SetBPM(unsigned long)>
400061c8:	e3043060 	movw	r3, #16480	; 0x4060
400061cc:	e1a01004 	mov	r1, r4
400061d0:	e3443003 	movt	r3, #16387	; 0x4003
400061d4:	e5930000 	ldr	r0, [r3]
400061d8:	eb00304e 	bl	40012318 <LtcOutputs::ShowBPM(unsigned long)>
400061dc:	eafffd58 	b	40005744 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x230>
400061e0:	e59d3004 	ldr	r3, [sp, #4]
400061e4:	e30d0d28 	movw	r0, #56616	; 0xdd28
400061e8:	e3440002 	movt	r0, #16386	; 0x4002
400061ec:	e0843003 	add	r3, r4, r3
400061f0:	e2431001 	sub	r1, r3, #1
400061f4:	e2833003 	add	r3, r3, #3
400061f8:	e5f17001 	ldrb	r7, [r1, #1]!
400061fc:	e4d0c001 	ldrb	ip, [r0], #1
40006200:	e157000c 	cmp	r7, ip
40006204:	1affff9c 	bne	4000607c <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xb68>
40006208:	e1530001 	cmp	r3, r1
4000620c:	1afffff9 	bne	400061f8 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xce4>
40006210:	e3a03000 	mov	r3, #0
40006214:	e1a02005 	mov	r2, r5
40006218:	e1a01004 	mov	r1, r4
4000621c:	e1a00006 	mov	r0, r6
40006220:	e28dd034 	add	sp, sp, #52	; 0x34
40006224:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
40006228:	eafffc97 	b	4000548c <LtcOscServer::SetWS28xxRGB(unsigned char const*, unsigned long, ltcdisplayrgb::ColourIndex)>
4000622c:	e59d3004 	ldr	r3, [sp, #4]
40006230:	e30d1d14 	movw	r1, #56596	; 0xdd14
40006234:	e3441002 	movt	r1, #16386	; 0x4002
40006238:	e0843003 	add	r3, r4, r3
4000623c:	e2430001 	sub	r0, r3, #1
40006240:	e2833002 	add	r3, r3, #2
40006244:	e5f0e001 	ldrb	lr, [r0, #1]!
40006248:	e4d1c001 	ldrb	ip, [r1], #1
4000624c:	e15e000c 	cmp	lr, ip
40006250:	1affff93 	bne	400060a4 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xb90>
40006254:	e1530000 	cmp	r3, r0
40006258:	1afffff9 	bne	40006244 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xd30>
4000625c:	e3a03003 	mov	r3, #3
40006260:	eaffffeb 	b	40006214 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xd00>
40006264:	e59d3004 	ldr	r3, [sp, #4]
40006268:	e59f01c8 	ldr	r0, [pc, #456]	; 40006438 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xf24>
4000626c:	e0843003 	add	r3, r4, r3
40006270:	e2431001 	sub	r1, r3, #1
40006274:	e2833006 	add	r3, r3, #6
40006278:	e5f17001 	ldrb	r7, [r1, #1]!
4000627c:	e5f0c001 	ldrb	ip, [r0, #1]!
40006280:	e157000c 	cmp	r7, ip
40006284:	1affff83 	bne	40006098 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xb84>
40006288:	e1530001 	cmp	r3, r1
4000628c:	1afffff9 	bne	40006278 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xd64>
40006290:	e3a03002 	mov	r3, #2
40006294:	eaffffde 	b	40006214 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xd00>
40006298:	e59d3004 	ldr	r3, [sp, #4]
4000629c:	e30d0d30 	movw	r0, #56624	; 0xdd30
400062a0:	e3440002 	movt	r0, #16386	; 0x4002
400062a4:	e0843003 	add	r3, r4, r3
400062a8:	e2431001 	sub	r1, r3, #1
400062ac:	e2833004 	add	r3, r3, #4
400062b0:	e5f17001 	ldrb	r7, [r1, #1]!
400062b4:	e4d0c001 	ldrb	ip, [r0], #1
400062b8:	e157000c 	cmp	r7, ip
400062bc:	1affff71 	bne	40006088 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xb74>
400062c0:	e1530001 	cmp	r3, r1
400062c4:	1afffff9 	bne	400062b0 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xd9c>
400062c8:	e3a03001 	mov	r3, #1
400062cc:	eaffffd0 	b	40006214 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xd00>
400062d0:	e59d301c 	ldr	r3, [sp, #28]
400062d4:	e5d33000 	ldrb	r3, [r3]
400062d8:	e3530066 	cmp	r3, #102	; 0x66
400062dc:	0a00000e 	beq	4000631c <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xe08>
400062e0:	e3530069 	cmp	r3, #105	; 0x69
400062e4:	1affffb1 	bne	400061b0 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xc9c>
400062e8:	e3a01000 	mov	r1, #0
400062ec:	e28d0014 	add	r0, sp, #20
400062f0:	eb004699 	bl	40017d5c <OscSimpleMessage::GetInt(unsigned int)>
400062f4:	e3500000 	cmp	r0, #0
400062f8:	daffffac 	ble	400061b0 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xc9c>
400062fc:	e1a04000 	mov	r4, r0
40006300:	eaffffab 	b	400061b4 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xca0>
40006304:	e3a03004 	mov	r3, #4
40006308:	eaffffc1 	b	40006214 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xd00>
4000630c:	e3a03006 	mov	r3, #6
40006310:	eafffe9a 	b	40005d80 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x86c>
40006314:	e3a03007 	mov	r3, #7
40006318:	eafffe98 	b	40005d80 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x86c>
4000631c:	e3a01000 	mov	r1, #0
40006320:	e28d0014 	add	r0, sp, #20
40006324:	eb00467b 	bl	40017d18 <OscSimpleMessage::GetFloat(unsigned int)>
40006328:	eeb50ac0 	vcmpe.f32	s0, #0.0
4000632c:	eef07a40 	vmov.f32	s15, s0
40006330:	eef1fa10 	vmrs	APSR_nzcv, fpscr
40006334:	cefc7ac0 	vcvtgt.u32.f32	s15, s0
40006338:	ce174a90 	vmovgt	r4, s15
4000633c:	caffff9c 	bgt	400061b4 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xca0>
40006340:	eaffff9a 	b	400061b0 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xc9c>
40006344:	e3a03005 	mov	r3, #5
40006348:	eafffe8c 	b	40005d80 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x86c>
4000634c:	e3a03004 	mov	r3, #4
40006350:	eafffe8a 	b	40005d80 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x86c>
40006354:	e3043068 	movw	r3, #16488	; 0x4068
40006358:	e3051555 	movw	r1, #21845	; 0x5555
4000635c:	e3443003 	movt	r3, #16387	; 0x4003
40006360:	e3a02003 	mov	r2, #3
40006364:	e3441205 	movt	r1, #16901	; 0x4205
40006368:	e5933000 	ldr	r3, [r3]
4000636c:	e583102c 	str	r1, [r3, #44]	; 0x2c
40006370:	e5c32034 	strb	r2, [r3, #52]	; 0x34
40006374:	eb00263f 	bl	4000fc78 <tcnet::display::show()>
40006378:	eafffcf1 	b	40005744 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x230>
4000637c:	e3043068 	movw	r3, #16488	; 0x4068
40006380:	e3071780 	movw	r1, #30592	; 0x7780
40006384:	e3443003 	movt	r3, #16387	; 0x4003
40006388:	e3a02002 	mov	r2, #2
4000638c:	e3441205 	movt	r1, #16901	; 0x4205
40006390:	e5933000 	ldr	r3, [r3]
40006394:	e583102c 	str	r1, [r3, #44]	; 0x2c
40006398:	e5c32034 	strb	r2, [r3, #52]	; 0x34
4000639c:	eb002635 	bl	4000fc78 <tcnet::display::show()>
400063a0:	eafffce7 	b	40005744 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x230>
400063a4:	e3043068 	movw	r3, #16488	; 0x4068
400063a8:	e3a01000 	mov	r1, #0
400063ac:	e3443003 	movt	r3, #16387	; 0x4003
400063b0:	e3a02001 	mov	r2, #1
400063b4:	e3441220 	movt	r1, #16928	; 0x4220
400063b8:	e5933000 	ldr	r3, [r3]
400063bc:	e583102c 	str	r1, [r3, #44]	; 0x2c
400063c0:	e5c32034 	strb	r2, [r3, #52]	; 0x34
400063c4:	eb00262b 	bl	4000fc78 <tcnet::display::show()>
400063c8:	eafffcdd 	b	40005744 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x230>
400063cc:	e3043068 	movw	r3, #16488	; 0x4068
400063d0:	e30a1aab 	movw	r1, #43691	; 0xaaab
400063d4:	e3443003 	movt	r3, #16387	; 0x4003
400063d8:	e3a02000 	mov	r2, #0
400063dc:	e3441226 	movt	r1, #16934	; 0x4226
400063e0:	e5933000 	ldr	r3, [r3]
400063e4:	e583102c 	str	r1, [r3, #44]	; 0x2c
400063e8:	e5c32034 	strb	r2, [r3, #52]	; 0x34
400063ec:	eb002621 	bl	4000fc78 <tcnet::display::show()>
400063f0:	eafffcd3 	b	40005744 <LtcOscServer::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x230>
400063f4:	4002dc7d 	andmi	sp, r2, sp, ror ip
400063f8:	4002dc85 	andmi	sp, r2, r5, lsl #25
400063fc:	4002dc75 	andmi	sp, r2, r5, ror ip
40006400:	4002dc95 	mulmi	r2, r5, ip
40006404:	4002dc9d 	mulmi	r2, sp, ip
40006408:	4002dcb9 			; <UNDEFINED> instruction: 0x4002dcb9
4000640c:	4002dcfd 	strdmi	sp, [r2], -sp	; <UNPREDICTABLE>
40006410:	4002dc65 	andmi	sp, r2, r5, ror #24
40006414:	4002dce5 	andmi	sp, r2, r5, ror #25
40006418:	4002dcb5 			; <UNDEFINED> instruction: 0x4002dcb5
4000641c:	4002dd21 	andmi	sp, r2, r1, lsr #26
40006420:	4002dc6d 	andmi	sp, r2, sp, ror #24
40006424:	4002dcc9 	andmi	sp, r2, r9, asr #25
40006428:	4002dcc1 	andmi	sp, r2, r1, asr #25
4000642c:	4002dcd1 	ldrdmi	sp, [r2], -r1
40006430:	4002dd0d 	andmi	sp, r2, sp, lsl #26
40006434:	4002dcf5 	strdmi	sp, [r2], -r5
40006438:	4002dd37 	andmi	sp, r2, r7, lsr sp

4000643c <McpButtons::McpButtons(ltc::Source, bool, long, bool)>:
4000643c:	e92d4010 	push	{r4, lr}
40006440:	e1a04000 	mov	r4, r0
40006444:	e580301c 	str	r3, [r0, #28]
40006448:	e3a03014 	mov	r3, #20
4000644c:	e5ddc008 	ldrb	ip, [sp, #8]
40006450:	e2800040 	add	r0, r0, #64	; 0x40
40006454:	e5402028 	strb	r2, [r0, #-40]	; 0xffffffd8
40006458:	e3a02d6a 	mov	r2, #6784	; 0x1a80
4000645c:	e5003014 	str	r3, [r0, #-20]	; 0xffffffec
40006460:	e3a03000 	mov	r3, #0
40006464:	e540c010 	strb	ip, [r0, #-16]
40006468:	e5401029 	strb	r1, [r0, #-41]	; 0xffffffd7
4000646c:	e3402006 	movt	r2, #6
40006470:	e1c430b8 	strh	r3, [r4, #8]
40006474:	e584300c 	str	r3, [r4, #12]
40006478:	e5c43010 	strb	r3, [r4, #16]
4000647c:	e1c431b4 	strh	r3, [r4, #20]
40006480:	e5c43016 	strb	r3, [r4, #22]
40006484:	e1c432b0 	strh	r3, [r4, #32]
40006488:	e5c43022 	strb	r3, [r4, #34]	; 0x22
4000648c:	e5843024 	str	r3, [r4, #36]	; 0x24
40006490:	e5843028 	str	r3, [r4, #40]	; 0x28
40006494:	e5c43031 	strb	r3, [r4, #49]	; 0x31
40006498:	e5c43032 	strb	r3, [r4, #50]	; 0x32
4000649c:	e5843034 	str	r3, [r4, #52]	; 0x34
400064a0:	e5843038 	str	r3, [r4, #56]	; 0x38
400064a4:	e584303c 	str	r3, [r4, #60]	; 0x3c
400064a8:	e5c4304b 	strb	r3, [r4, #75]	; 0x4b
400064ac:	e3a03020 	mov	r3, #32
400064b0:	e5842004 	str	r2, [r4, #4]
400064b4:	e5c43000 	strb	r3, [r4]
400064b8:	eb001894 	bl	4000c710 <ltc::init_timecode(char*)>
400064bc:	e1a00004 	mov	r0, r4
400064c0:	e8bd8010 	pop	{r4, pc}

400064c4 <McpButtons::HandleActionSelect(ltc::Source const&)>:
400064c4:	e5d03017 	ldrb	r3, [r0, #23]
400064c8:	e5d12000 	ldrb	r2, [r1]
400064cc:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400064d0:	e24dd018 	sub	sp, sp, #24
400064d4:	e1530002 	cmp	r3, r2
400064d8:	e1a04000 	mov	r4, r0
400064dc:	028d8014 	addeq	r8, sp, #20
400064e0:	0a000010 	beq	40006528 <McpButtons::HandleActionSelect(ltc::Source const&)+0x64>
400064e4:	e5c02017 	strb	r2, [r0, #23]
400064e8:	e3043084 	movw	r3, #16516	; 0x4084
400064ec:	e3443003 	movt	r3, #16387	; 0x4003
400064f0:	e1a05001 	mov	r5, r1
400064f4:	e5cd2014 	strb	r2, [sp, #20]
400064f8:	e28d8014 	add	r8, sp, #20
400064fc:	e5930000 	ldr	r0, [r3]
40006500:	e3a02000 	mov	r2, #0
40006504:	e58d2008 	str	r2, [sp, #8]
40006508:	e3a03001 	mov	r3, #1
4000650c:	e58d3004 	str	r3, [sp, #4]
40006510:	e3a02004 	mov	r2, #4
40006514:	e58d3000 	str	r3, [sp]
40006518:	e3a01003 	mov	r1, #3
4000651c:	e1a03008 	mov	r3, r8
40006520:	eb005890 	bl	4001c768 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
40006524:	e5d52000 	ldrb	r2, [r5]
40006528:	e5d40000 	ldrb	r0, [r4]
4000652c:	e3a06001 	mov	r6, #1
40006530:	e3a03013 	mov	r3, #19
40006534:	e3a07000 	mov	r7, #0
40006538:	e1a02216 	lsl	r2, r6, r2
4000653c:	e304507c 	movw	r5, #16508	; 0x407c
40006540:	e5cd2015 	strb	r2, [sp, #21]
40006544:	e5cd3014 	strb	r3, [sp, #20]
40006548:	eb009438 	bl	4002b630 <h3_i2c_set_slave_address(unsigned char)>
4000654c:	e5940004 	ldr	r0, [r4, #4]
40006550:	e3445003 	movt	r5, #16387	; 0x4003
40006554:	eb00942e 	bl	4002b614 <h3_i2c_set_baudrate(unsigned long)>
40006558:	e3a01002 	mov	r1, #2
4000655c:	e1a00008 	mov	r0, r8
40006560:	eb0093a8 	bl	4002b408 <h3_i2c_write(char const*, unsigned long)>
40006564:	e5d40000 	ldrb	r0, [r4]
40006568:	e3a03010 	mov	r3, #16
4000656c:	e5cd3010 	strb	r3, [sp, #16]
40006570:	eb00942e 	bl	4002b630 <h3_i2c_set_slave_address(unsigned char)>
40006574:	e5940004 	ldr	r0, [r4, #4]
40006578:	eb009425 	bl	4002b614 <h3_i2c_set_baudrate(unsigned long)>
4000657c:	e1a01006 	mov	r1, r6
40006580:	e28d0010 	add	r0, sp, #16
40006584:	eb00939f 	bl	4002b408 <h3_i2c_write(char const*, unsigned long)>
40006588:	e5d40000 	ldrb	r0, [r4]
4000658c:	e5cd7014 	strb	r7, [sp, #20]
40006590:	eb009426 	bl	4002b630 <h3_i2c_set_slave_address(unsigned char)>
40006594:	e5940004 	ldr	r0, [r4, #4]
40006598:	eb00941d 	bl	4002b614 <h3_i2c_set_baudrate(unsigned long)>
4000659c:	e1a01006 	mov	r1, r6
400065a0:	e1a00008 	mov	r0, r8
400065a4:	eb0093c0 	bl	4002b4ac <h3_i2c_read(char*, unsigned long)>
400065a8:	e5953000 	ldr	r3, [r5]
400065ac:	e5930014 	ldr	r0, [r3, #20]
400065b0:	e1500007 	cmp	r0, r7
400065b4:	0a00001e 	beq	40006634 <McpButtons::HandleActionSelect(ltc::Source const&)+0x170>
400065b8:	e5903000 	ldr	r3, [r0]
400065bc:	e1a01007 	mov	r1, r7
400065c0:	e5933024 	ldr	r3, [r3, #36]	; 0x24
400065c4:	e12fff33 	blx	r3
400065c8:	e5953000 	ldr	r3, [r5]
400065cc:	e5930014 	ldr	r0, [r3, #20]
400065d0:	e1500007 	cmp	r0, r7
400065d4:	0a000016 	beq	40006634 <McpButtons::HandleActionSelect(ltc::Source const&)+0x170>
400065d8:	e5903000 	ldr	r3, [r0]
400065dc:	e1a02007 	mov	r2, r7
400065e0:	e1a01007 	mov	r1, r7
400065e4:	e5933020 	ldr	r3, [r3, #32]
400065e8:	e12fff33 	blx	r3
400065ec:	e5953000 	ldr	r3, [r5]
400065f0:	e5930014 	ldr	r0, [r3, #20]
400065f4:	e1500007 	cmp	r0, r7
400065f8:	0a00000d 	beq	40006634 <McpButtons::HandleActionSelect(ltc::Source const&)+0x170>
400065fc:	e5903000 	ldr	r3, [r0]
40006600:	e1a01006 	mov	r1, r6
40006604:	e5933010 	ldr	r3, [r3, #16]
40006608:	e12fff33 	blx	r3
4000660c:	e5953000 	ldr	r3, [r5]
40006610:	e5930014 	ldr	r0, [r3, #20]
40006614:	e1500007 	cmp	r0, r7
40006618:	0a000005 	beq	40006634 <McpButtons::HandleActionSelect(ltc::Source const&)+0x170>
4000661c:	e5903000 	ldr	r3, [r0]
40006620:	e3a01002 	mov	r1, #2
40006624:	e5933010 	ldr	r3, [r3, #16]
40006628:	e28dd018 	add	sp, sp, #24
4000662c:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
40006630:	e12fff13 	bx	r3
40006634:	e28dd018 	add	sp, sp, #24
40006638:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

4000663c <McpButtons::UpdateDisplays(ltc::Source)>:
4000663c:	e304307c 	movw	r3, #16508	; 0x407c
40006640:	e3443003 	movt	r3, #16387	; 0x4003
40006644:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
40006648:	e1a06001 	mov	r6, r1
4000664c:	e5933000 	ldr	r3, [r3]
40006650:	e5934014 	ldr	r4, [r3, #20]
40006654:	e3540000 	cmp	r4, #0
40006658:	0a000033 	beq	4000672c <McpButtons::UpdateDisplays(ltc::Source)+0xf0>
4000665c:	e5947008 	ldr	r7, [r4, #8]
40006660:	e3a01000 	mov	r1, #0
40006664:	e8940108 	ldm	r4, {r3, r8}
40006668:	e2479001 	sub	r9, r7, #1
4000666c:	e1a00004 	mov	r0, r4
40006670:	e5933020 	ldr	r3, [r3, #32]
40006674:	e1a02009 	mov	r2, r9
40006678:	e12fff33 	blx	r3
4000667c:	e2588001 	subs	r8, r8, #1
40006680:	0a000008 	beq	400066a8 <McpButtons::UpdateDisplays(ltc::Source)+0x6c>
40006684:	e3a05000 	mov	r5, #0
40006688:	e5943000 	ldr	r3, [r4]
4000668c:	e3a01020 	mov	r1, #32
40006690:	e1a00004 	mov	r0, r4
40006694:	e2855001 	add	r5, r5, #1
40006698:	e5933014 	ldr	r3, [r3, #20]
4000669c:	e12fff33 	blx	r3
400066a0:	e1550008 	cmp	r5, r8
400066a4:	1afffff7 	bne	40006688 <McpButtons::UpdateDisplays(ltc::Source)+0x4c>
400066a8:	e5943000 	ldr	r3, [r4]
400066ac:	e3a0a00c 	mov	sl, #12
400066b0:	e30d8d40 	movw	r8, #56640	; 0xdd40
400066b4:	e1a00004 	mov	r0, r4
400066b8:	e00a069a 	mul	sl, sl, r6
400066bc:	e3448002 	movt	r8, #16386	; 0x4002
400066c0:	e1a02009 	mov	r2, r9
400066c4:	e5933020 	ldr	r3, [r3, #32]
400066c8:	e3a01000 	mov	r1, #0
400066cc:	e08a5008 	add	r5, sl, r8
400066d0:	e12fff33 	blx	r3
400066d4:	e7da3008 	ldrb	r3, [sl, r8]
400066d8:	e5940004 	ldr	r0, [r4, #4]
400066dc:	e3530000 	cmp	r3, #0
400066e0:	0a00000b 	beq	40006714 <McpButtons::UpdateDisplays(ltc::Source)+0xd8>
400066e4:	e3500000 	cmp	r0, #0
400066e8:	0a00002f 	beq	400067ac <McpButtons::UpdateDisplays(ltc::Source)+0x170>
400066ec:	e0850000 	add	r0, r5, r0
400066f0:	e1a02005 	mov	r2, r5
400066f4:	e3a03001 	mov	r3, #1
400066f8:	ea000002 	b	40006708 <McpButtons::UpdateDisplays(ltc::Source)+0xcc>
400066fc:	e1500002 	cmp	r0, r2
40006700:	e2833001 	add	r3, r3, #1
40006704:	0a000002 	beq	40006714 <McpButtons::UpdateDisplays(ltc::Source)+0xd8>
40006708:	e5f21001 	ldrb	r1, [r2, #1]!
4000670c:	e3510000 	cmp	r1, #0
40006710:	1afffff9 	bne	400066fc <McpButtons::UpdateDisplays(ltc::Source)+0xc0>
40006714:	e5942000 	ldr	r2, [r4]
40006718:	e1a01007 	mov	r1, r7
4000671c:	e1a00004 	mov	r0, r4
40006720:	e592801c 	ldr	r8, [r2, #28]
40006724:	e1a02005 	mov	r2, r5
40006728:	e12fff38 	blx	r8
4000672c:	e30736ec 	movw	r3, #30444	; 0x76ec
40006730:	e3443005 	movt	r3, #16389	; 0x4005
40006734:	e5d32001 	ldrb	r2, [r3, #1]
40006738:	e3520000 	cmp	r2, #0
4000673c:	0a00000b 	beq	40006770 <McpButtons::UpdateDisplays(ltc::Source)+0x134>
40006740:	e5d32008 	ldrb	r2, [r3, #8]
40006744:	e3520000 	cmp	r2, #0
40006748:	0a000011 	beq	40006794 <McpButtons::UpdateDisplays(ltc::Source)+0x158>
4000674c:	e5d33009 	ldrb	r3, [r3, #9]
40006750:	e3530000 	cmp	r3, #0
40006754:	18bd87f0 	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
40006758:	e3043078 	movw	r3, #16504	; 0x4078
4000675c:	e1a01006 	mov	r1, r6
40006760:	e3443003 	movt	r3, #16387	; 0x4003
40006764:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
40006768:	e5930000 	ldr	r0, [r3]
4000676c:	ea0038f9 	b	40014b58 <LtcDisplayRgb::ShowSource(ltc::Source)>
40006770:	e3073704 	movw	r3, #30468	; 0x7704
40006774:	e1a01006 	mov	r1, r6
40006778:	e3443005 	movt	r3, #16389	; 0x4005
4000677c:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
40006780:	e5933000 	ldr	r3, [r3]
40006784:	e5930004 	ldr	r0, [r3, #4]
40006788:	e5903000 	ldr	r3, [r0]
4000678c:	e5933014 	ldr	r3, [r3, #20]
40006790:	e12fff13 	bx	r3
40006794:	e3043078 	movw	r3, #16504	; 0x4078
40006798:	e1a01006 	mov	r1, r6
4000679c:	e3443003 	movt	r3, #16387	; 0x4003
400067a0:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
400067a4:	e5930000 	ldr	r0, [r3]
400067a8:	ea0038f2 	b	40014b78 <LtcDisplayRgb::WriteChar(unsigned char, unsigned char)>
400067ac:	e3a03001 	mov	r3, #1
400067b0:	eaffffd7 	b	40006714 <McpButtons::UpdateDisplays(ltc::Source)+0xd8>

400067b4 <McpButtons::HandleRotary(unsigned char, ltc::Source&)>:
400067b4:	e92d4070 	push	{r4, r5, r6, lr}
400067b8:	e1a04000 	mov	r4, r0
400067bc:	e2800030 	add	r0, r0, #48	; 0x30
400067c0:	e1a05002 	mov	r5, r2
400067c4:	eb00443a 	bl	400178b4 <RotaryEncoder::Process(unsigned char)>
400067c8:	e5d41016 	ldrb	r1, [r4, #22]
400067cc:	e5c40032 	strb	r0, [r4, #50]	; 0x32
400067d0:	e3510000 	cmp	r1, #0
400067d4:	0a000008 	beq	400067fc <McpButtons::HandleRotary(unsigned char, ltc::Source&)+0x48>
400067d8:	e3500010 	cmp	r0, #16
400067dc:	0a000003 	beq	400067f0 <McpButtons::HandleRotary(unsigned char, ltc::Source&)+0x3c>
400067e0:	e3500020 	cmp	r0, #32
400067e4:	03e03041 	mvneq	r3, #65	; 0x41
400067e8:	0584303c 	streq	r3, [r4, #60]	; 0x3c
400067ec:	e8bd8070 	pop	{r4, r5, r6, pc}
400067f0:	e3e03040 	mvn	r3, #64	; 0x40
400067f4:	e584303c 	str	r3, [r4, #60]	; 0x3c
400067f8:	e8bd8070 	pop	{r4, r5, r6, pc}
400067fc:	e3500010 	cmp	r0, #16
40006800:	0a00000a 	beq	40006830 <McpButtons::HandleRotary(unsigned char, ltc::Source&)+0x7c>
40006804:	e3500020 	cmp	r0, #32
40006808:	18bd8070 	popne	{r4, r5, r6, pc}
4000680c:	e5d51000 	ldrb	r1, [r5]
40006810:	e3510000 	cmp	r1, #0
40006814:	12411001 	subne	r1, r1, #1
40006818:	03a01007 	moveq	r1, #7
4000681c:	16ef1071 	uxtbne	r1, r1
40006820:	e5c51000 	strb	r1, [r5]
40006824:	e1a00004 	mov	r0, r4
40006828:	e8bd4070 	pop	{r4, r5, r6, lr}
4000682c:	eaffff82 	b	4000663c <McpButtons::UpdateDisplays(ltc::Source)>
40006830:	e5d53000 	ldrb	r3, [r5]
40006834:	e3530007 	cmp	r3, #7
40006838:	12831001 	addne	r1, r3, #1
4000683c:	16ef1071 	uxtbne	r1, r1
40006840:	eafffff6 	b	40006820 <McpButtons::HandleRotary(unsigned char, ltc::Source&)+0x6c>

40006844 <McpButtons::Check()>:
40006844:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40006848:	e1a04000 	mov	r4, r0
4000684c:	e5901004 	ldr	r1, [r0, #4]
40006850:	e24dd008 	sub	sp, sp, #8
40006854:	e5d00000 	ldrb	r0, [r0]
40006858:	eb009378 	bl	4002b640 <h3_i2c_is_connected(unsigned char, unsigned long)>
4000685c:	e5c40020 	strb	r0, [r4, #32]
40006860:	e3500000 	cmp	r0, #0
40006864:	e1a05000 	mov	r5, r0
40006868:	0a000062 	beq	400069f8 <McpButtons::Check()+0x1b4>
4000686c:	e5d40000 	ldrb	r0, [r4]
40006870:	e3a08000 	mov	r8, #0
40006874:	e5cd8004 	strb	r8, [sp, #4]
40006878:	e3e07000 	mvn	r7, #0
4000687c:	e5cd7005 	strb	r7, [sp, #5]
40006880:	eb00936a 	bl	4002b630 <h3_i2c_set_slave_address(unsigned char)>
40006884:	e5940004 	ldr	r0, [r4, #4]
40006888:	e3a06002 	mov	r6, #2
4000688c:	eb009360 	bl	4002b614 <h3_i2c_set_baudrate(unsigned long)>
40006890:	e3a01002 	mov	r1, #2
40006894:	e28d0004 	add	r0, sp, #4
40006898:	eb0092da 	bl	4002b408 <h3_i2c_write(char const*, unsigned long)>
4000689c:	e5d40000 	ldrb	r0, [r4]
400068a0:	e3a0300c 	mov	r3, #12
400068a4:	e5cd3004 	strb	r3, [sp, #4]
400068a8:	e5cd7005 	strb	r7, [sp, #5]
400068ac:	eb00935f 	bl	4002b630 <h3_i2c_set_slave_address(unsigned char)>
400068b0:	e5940004 	ldr	r0, [r4, #4]
400068b4:	eb009356 	bl	4002b614 <h3_i2c_set_baudrate(unsigned long)>
400068b8:	e3a01002 	mov	r1, #2
400068bc:	e28d0004 	add	r0, sp, #4
400068c0:	eb0092d0 	bl	4002b408 <h3_i2c_write(char const*, unsigned long)>
400068c4:	e5d40000 	ldrb	r0, [r4]
400068c8:	e5cd7005 	strb	r7, [sp, #5]
400068cc:	e5cd6004 	strb	r6, [sp, #4]
400068d0:	eb009356 	bl	4002b630 <h3_i2c_set_slave_address(unsigned char)>
400068d4:	e5940004 	ldr	r0, [r4, #4]
400068d8:	eb00934d 	bl	4002b614 <h3_i2c_set_baudrate(unsigned long)>
400068dc:	e1a01006 	mov	r1, r6
400068e0:	e28d0004 	add	r0, sp, #4
400068e4:	eb0092c7 	bl	4002b408 <h3_i2c_write(char const*, unsigned long)>
400068e8:	e5d40000 	ldrb	r0, [r4]
400068ec:	e3a03008 	mov	r3, #8
400068f0:	e5cd3004 	strb	r3, [sp, #4]
400068f4:	e5cd8005 	strb	r8, [sp, #5]
400068f8:	eb00934c 	bl	4002b630 <h3_i2c_set_slave_address(unsigned char)>
400068fc:	e5940004 	ldr	r0, [r4, #4]
40006900:	eb009343 	bl	4002b614 <h3_i2c_set_baudrate(unsigned long)>
40006904:	e1a01006 	mov	r1, r6
40006908:	e28d0004 	add	r0, sp, #4
4000690c:	eb0092bd 	bl	4002b408 <h3_i2c_write(char const*, unsigned long)>
40006910:	e5d40000 	ldrb	r0, [r4]
40006914:	e3a03004 	mov	r3, #4
40006918:	e5cd3004 	strb	r3, [sp, #4]
4000691c:	e5cd7005 	strb	r7, [sp, #5]
40006920:	eb009342 	bl	4002b630 <h3_i2c_set_slave_address(unsigned char)>
40006924:	e5940004 	ldr	r0, [r4, #4]
40006928:	e3a07001 	mov	r7, #1
4000692c:	eb009338 	bl	4002b614 <h3_i2c_set_baudrate(unsigned long)>
40006930:	e1a01006 	mov	r1, r6
40006934:	e28d0004 	add	r0, sp, #4
40006938:	eb0092b2 	bl	4002b408 <h3_i2c_write(char const*, unsigned long)>
4000693c:	e5d40000 	ldrb	r0, [r4]
40006940:	e3a03010 	mov	r3, #16
40006944:	e5cd3000 	strb	r3, [sp]
40006948:	eb009338 	bl	4002b630 <h3_i2c_set_slave_address(unsigned char)>
4000694c:	e5940004 	ldr	r0, [r4, #4]
40006950:	eb00932f 	bl	4002b614 <h3_i2c_set_baudrate(unsigned long)>
40006954:	e3a01001 	mov	r1, #1
40006958:	e1a0000d 	mov	r0, sp
4000695c:	eb0092a9 	bl	4002b408 <h3_i2c_write(char const*, unsigned long)>
40006960:	e5d40000 	ldrb	r0, [r4]
40006964:	e5cd8004 	strb	r8, [sp, #4]
40006968:	eb009330 	bl	4002b630 <h3_i2c_set_slave_address(unsigned char)>
4000696c:	e5940004 	ldr	r0, [r4, #4]
40006970:	eb009327 	bl	4002b614 <h3_i2c_set_baudrate(unsigned long)>
40006974:	e3a01001 	mov	r1, #1
40006978:	e28d0004 	add	r0, sp, #4
4000697c:	eb0092ca 	bl	4002b4ac <h3_i2c_read(char*, unsigned long)>
40006980:	e5d40000 	ldrb	r0, [r4]
40006984:	e5cd8005 	strb	r8, [sp, #5]
40006988:	e5cd7004 	strb	r7, [sp, #4]
4000698c:	eb009327 	bl	4002b630 <h3_i2c_set_slave_address(unsigned char)>
40006990:	e5940004 	ldr	r0, [r4, #4]
40006994:	eb00931e 	bl	4002b614 <h3_i2c_set_baudrate(unsigned long)>
40006998:	e1a01006 	mov	r1, r6
4000699c:	e28d0004 	add	r0, sp, #4
400069a0:	eb009298 	bl	4002b408 <h3_i2c_write(char const*, unsigned long)>
400069a4:	e5d43017 	ldrb	r3, [r4, #23]
400069a8:	e5d40000 	ldrb	r0, [r4]
400069ac:	e1a03317 	lsl	r3, r7, r3
400069b0:	e5cd3005 	strb	r3, [sp, #5]
400069b4:	e3a03013 	mov	r3, #19
400069b8:	e5cd3004 	strb	r3, [sp, #4]
400069bc:	eb00931b 	bl	4002b630 <h3_i2c_set_slave_address(unsigned char)>
400069c0:	e5940004 	ldr	r0, [r4, #4]
400069c4:	eb009312 	bl	4002b614 <h3_i2c_set_baudrate(unsigned long)>
400069c8:	e1a01006 	mov	r1, r6
400069cc:	e28d0004 	add	r0, sp, #4
400069d0:	eb00928c 	bl	4002b408 <h3_i2c_write(char const*, unsigned long)>
400069d4:	e5d41017 	ldrb	r1, [r4, #23]
400069d8:	e1a00004 	mov	r0, r4
400069dc:	ebffff16 	bl	4000663c <McpButtons::UpdateDisplays(ltc::Source)>
400069e0:	e1a01008 	mov	r1, r8
400069e4:	e3a00007 	mov	r0, #7
400069e8:	eb008a63 	bl	4002937c <h3_gpio_fsel>
400069ec:	e1a01007 	mov	r1, r7
400069f0:	e3a00007 	mov	r0, #7
400069f4:	eb008a95 	bl	40029450 <h3_gpio_set_pud>
400069f8:	e1a00005 	mov	r0, r5
400069fc:	e28dd008 	add	sp, sp, #8
40006a00:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

40006a04 <McpButtons::Wait(ltc::Source&, ltc::TimeCode&, ltc::TimeCode&)>:
40006a04:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
40006a08:	e1a08003 	mov	r8, r3
40006a0c:	e590c024 	ldr	ip, [r0, #36]	; 0x24
40006a10:	e3a03b03 	mov	r3, #3072	; 0xc00
40006a14:	e34031c2 	movt	r3, #450	; 0x1c2
40006a18:	e1a04000 	mov	r4, r0
40006a1c:	e1a06001 	mov	r6, r1
40006a20:	e3a00001 	mov	r0, #1
40006a24:	e5933084 	ldr	r3, [r3, #132]	; 0x84
40006a28:	e24dd008 	sub	sp, sp, #8
40006a2c:	e5d11000 	ldrb	r1, [r1]
40006a30:	e1a07002 	mov	r7, r2
40006a34:	e043c00c 	sub	ip, r3, ip
40006a38:	e1a00110 	lsl	r0, r0, r1
40006a3c:	e35c0f7d 	cmp	ip, #500	; 0x1f4
40006a40:	e6ef5070 	uxtb	r5, r0
40006a44:	2a00004e 	bcs	40006b84 <McpButtons::Wait(ltc::Source&, ltc::TimeCode&, ltc::TimeCode&)+0x180>
40006a48:	e5943028 	ldr	r3, [r4, #40]	; 0x28
40006a4c:	e594202c 	ldr	r2, [r4, #44]	; 0x2c
40006a50:	e1520003 	cmp	r2, r3
40006a54:	9a00005e 	bls	40006bd4 <McpButtons::Wait(ltc::Source&, ltc::TimeCode&, ltc::TimeCode&)+0x1d0>
40006a58:	e3a03b02 	mov	r3, #2048	; 0x800
40006a5c:	e34031c2 	movt	r3, #450	; 0x1c2
40006a60:	e5933010 	ldr	r3, [r3, #16]
40006a64:	e2135080 	ands	r5, r3, #128	; 0x80
40006a68:	13a00001 	movne	r0, #1
40006a6c:	1a000042 	bne	40006b7c <McpButtons::Wait(ltc::Source&, ltc::TimeCode&, ltc::TimeCode&)+0x178>
40006a70:	e5d40000 	ldrb	r0, [r4]
40006a74:	e3e03000 	mvn	r3, #0
40006a78:	e584302c 	str	r3, [r4, #44]	; 0x2c
40006a7c:	e3a03012 	mov	r3, #18
40006a80:	e5cd3000 	strb	r3, [sp]
40006a84:	eb0092e9 	bl	4002b630 <h3_i2c_set_slave_address(unsigned char)>
40006a88:	e5940004 	ldr	r0, [r4, #4]
40006a8c:	eb0092e0 	bl	4002b614 <h3_i2c_set_baudrate(unsigned long)>
40006a90:	e3a01001 	mov	r1, #1
40006a94:	e1a0000d 	mov	r0, sp
40006a98:	eb00925a 	bl	4002b408 <h3_i2c_write(char const*, unsigned long)>
40006a9c:	e5d40000 	ldrb	r0, [r4]
40006aa0:	e5cd5004 	strb	r5, [sp, #4]
40006aa4:	eb0092e1 	bl	4002b630 <h3_i2c_set_slave_address(unsigned char)>
40006aa8:	e5940004 	ldr	r0, [r4, #4]
40006aac:	eb0092d8 	bl	4002b614 <h3_i2c_set_baudrate(unsigned long)>
40006ab0:	e3a01001 	mov	r1, #1
40006ab4:	e28d0004 	add	r0, sp, #4
40006ab8:	eb00927b 	bl	4002b4ac <h3_i2c_read(char*, unsigned long)>
40006abc:	e5dda004 	ldrb	sl, [sp, #4]
40006ac0:	e30d0db0 	movw	r0, #56752	; 0xddb0
40006ac4:	e5d49021 	ldrb	r9, [r4, #33]	; 0x21
40006ac8:	e3440002 	movt	r0, #16386	; 0x4002
40006acc:	e1a0100a 	mov	r1, sl
40006ad0:	e1ca9009 	bic	r9, sl, r9
40006ad4:	e5c4a021 	strb	sl, [r4, #33]	; 0x21
40006ad8:	e1a02009 	mov	r2, r9
40006adc:	eb00982b 	bl	4002cb90 <printf>
40006ae0:	e584503c 	str	r5, [r4, #60]	; 0x3c
40006ae4:	e3590000 	cmp	r9, #0
40006ae8:	0a00000f 	beq	40006b2c <McpButtons::Wait(ltc::Source&, ltc::TimeCode&, ltc::TimeCode&)+0x128>
40006aec:	e3190008 	tst	r9, #8
40006af0:	1a000044 	bne	40006c08 <McpButtons::Wait(ltc::Source&, ltc::TimeCode&, ltc::TimeCode&)+0x204>
40006af4:	e2195010 	ands	r5, r9, #16
40006af8:	0a00004d 	beq	40006c34 <McpButtons::Wait(ltc::Source&, ltc::TimeCode&, ltc::TimeCode&)+0x230>
40006afc:	e5d41016 	ldrb	r1, [r4, #22]
40006b00:	e3510000 	cmp	r1, #0
40006b04:	13e03042 	mvnne	r3, #66	; 0x42
40006b08:	1584303c 	strne	r3, [r4, #60]	; 0x3c
40006b0c:	1a000006 	bne	40006b2c <McpButtons::Wait(ltc::Source&, ltc::TimeCode&, ltc::TimeCode&)+0x128>
40006b10:	e5d63000 	ldrb	r3, [r6]
40006b14:	e3530007 	cmp	r3, #7
40006b18:	12833001 	addne	r3, r3, #1
40006b1c:	16ef1073 	uxtbne	r1, r3
40006b20:	e5c61000 	strb	r1, [r6]
40006b24:	e1a00004 	mov	r0, r4
40006b28:	ebfffec3 	bl	4000663c <McpButtons::UpdateDisplays(ltc::Source)>
40006b2c:	e1a02006 	mov	r2, r6
40006b30:	e1a0100a 	mov	r1, sl
40006b34:	e1a00004 	mov	r0, r4
40006b38:	ebffff1d 	bl	400067b4 <McpButtons::HandleRotary(unsigned char, ltc::Source&)>
40006b3c:	e594303c 	ldr	r3, [r4, #60]	; 0x3c
40006b40:	e3530000 	cmp	r3, #0
40006b44:	0a000009 	beq	40006b70 <McpButtons::Wait(ltc::Source&, ltc::TimeCode&, ltc::TimeCode&)+0x16c>
40006b48:	e5d43016 	ldrb	r3, [r4, #22]
40006b4c:	e3530002 	cmp	r3, #2
40006b50:	0a000063 	beq	40006ce4 <McpButtons::Wait(ltc::Source&, ltc::TimeCode&, ltc::TimeCode&)+0x2e0>
40006b54:	e3530003 	cmp	r3, #3
40006b58:	0a00005d 	beq	40006cd4 <McpButtons::Wait(ltc::Source&, ltc::TimeCode&, ltc::TimeCode&)+0x2d0>
40006b5c:	e3530001 	cmp	r3, #1
40006b60:	1a000002 	bne	40006b70 <McpButtons::Wait(ltc::Source&, ltc::TimeCode&, ltc::TimeCode&)+0x16c>
40006b64:	e1a01007 	mov	r1, r7
40006b68:	e1a00004 	mov	r0, r4
40006b6c:	eb0002b5 	bl	40007648 <McpButtons::HandleInternalTimeCodeStart(ltc::TimeCode&)>
40006b70:	e3a00001 	mov	r0, #1
40006b74:	e3a03000 	mov	r3, #0
40006b78:	e5c43022 	strb	r3, [r4, #34]	; 0x22
40006b7c:	e28dd008 	add	sp, sp, #8
40006b80:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
40006b84:	e5843024 	str	r3, [r4, #36]	; 0x24
40006b88:	e5d43022 	ldrb	r3, [r4, #34]	; 0x22
40006b8c:	e5d40000 	ldrb	r0, [r4]
40006b90:	e0233005 	eor	r3, r3, r5
40006b94:	e5c43022 	strb	r3, [r4, #34]	; 0x22
40006b98:	e5cd3005 	strb	r3, [sp, #5]
40006b9c:	e3a03013 	mov	r3, #19
40006ba0:	e5cd3004 	strb	r3, [sp, #4]
40006ba4:	eb0092a1 	bl	4002b630 <h3_i2c_set_slave_address(unsigned char)>
40006ba8:	e5940004 	ldr	r0, [r4, #4]
40006bac:	eb009298 	bl	4002b614 <h3_i2c_set_baudrate(unsigned long)>
40006bb0:	e3a01002 	mov	r1, #2
40006bb4:	e28d0004 	add	r0, sp, #4
40006bb8:	eb009212 	bl	4002b408 <h3_i2c_write(char const*, unsigned long)>
40006bbc:	e5943028 	ldr	r3, [r4, #40]	; 0x28
40006bc0:	e594202c 	ldr	r2, [r4, #44]	; 0x2c
40006bc4:	e2833001 	add	r3, r3, #1
40006bc8:	e1520003 	cmp	r2, r3
40006bcc:	e5843028 	str	r3, [r4, #40]	; 0x28
40006bd0:	8affffa0 	bhi	40006a58 <McpButtons::Wait(ltc::Source&, ltc::TimeCode&, ltc::TimeCode&)+0x54>
40006bd4:	e5d40000 	ldrb	r0, [r4]
40006bd8:	e3a03013 	mov	r3, #19
40006bdc:	e5cd3004 	strb	r3, [sp, #4]
40006be0:	e5cd5005 	strb	r5, [sp, #5]
40006be4:	eb009291 	bl	4002b630 <h3_i2c_set_slave_address(unsigned char)>
40006be8:	e5940004 	ldr	r0, [r4, #4]
40006bec:	eb009288 	bl	4002b614 <h3_i2c_set_baudrate(unsigned long)>
40006bf0:	e3a01002 	mov	r1, #2
40006bf4:	e28d0004 	add	r0, sp, #4
40006bf8:	eb009202 	bl	4002b408 <h3_i2c_write(char const*, unsigned long)>
40006bfc:	e3a00000 	mov	r0, #0
40006c00:	e28dd008 	add	sp, sp, #8
40006c04:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
40006c08:	e5d43016 	ldrb	r3, [r4, #22]
40006c0c:	e3530000 	cmp	r3, #0
40006c10:	13e03043 	mvnne	r3, #67	; 0x43
40006c14:	1584303c 	strne	r3, [r4, #60]	; 0x3c
40006c18:	1affffc3 	bne	40006b2c <McpButtons::Wait(ltc::Source&, ltc::TimeCode&, ltc::TimeCode&)+0x128>
40006c1c:	e5d63000 	ldrb	r3, [r6]
40006c20:	e3530000 	cmp	r3, #0
40006c24:	12433001 	subne	r3, r3, #1
40006c28:	03a01007 	moveq	r1, #7
40006c2c:	16ef1073 	uxtbne	r1, r3
40006c30:	eaffffba 	b	40006b20 <McpButtons::Wait(ltc::Source&, ltc::TimeCode&, ltc::TimeCode&)+0x11c>
40006c34:	e3190004 	tst	r9, #4
40006c38:	1a00004f 	bne	40006d7c <McpButtons::Wait(ltc::Source&, ltc::TimeCode&, ltc::TimeCode&)+0x378>
40006c3c:	e3190020 	tst	r9, #32
40006c40:	0a00002b 	beq	40006cf4 <McpButtons::Wait(ltc::Source&, ltc::TimeCode&, ltc::TimeCode&)+0x2f0>
40006c44:	e5d63000 	ldrb	r3, [r6]
40006c48:	e3530004 	cmp	r3, #4
40006c4c:	1affffb6 	bne	40006b2c <McpButtons::Wait(ltc::Source&, ltc::TimeCode&, ltc::TimeCode&)+0x128>
40006c50:	e5d43016 	ldrb	r3, [r4, #22]
40006c54:	e3530001 	cmp	r3, #1
40006c58:	0a000015 	beq	40006cb4 <McpButtons::Wait(ltc::Source&, ltc::TimeCode&, ltc::TimeCode&)+0x2b0>
40006c5c:	e304507c 	movw	r5, #16508	; 0x407c
40006c60:	e3445003 	movt	r5, #16387	; 0x4003
40006c64:	e5953000 	ldr	r3, [r5]
40006c68:	e5930014 	ldr	r0, [r3, #20]
40006c6c:	e3500000 	cmp	r0, #0
40006c70:	0a000005 	beq	40006c8c <McpButtons::Wait(ltc::Source&, ltc::TimeCode&, ltc::TimeCode&)+0x288>
40006c74:	e1c020d0 	ldrd	r2, [r0]
40006c78:	e5929020 	ldr	r9, [r2, #32]
40006c7c:	e2433007 	sub	r3, r3, #7
40006c80:	e6ef1073 	uxtb	r1, r3
40006c84:	e3a02000 	mov	r2, #0
40006c88:	e12fff39 	blx	r9
40006c8c:	e5953000 	ldr	r3, [r5]
40006c90:	e5930014 	ldr	r0, [r3, #20]
40006c94:	e3500000 	cmp	r0, #0
40006c98:	0a000004 	beq	40006cb0 <McpButtons::Wait(ltc::Source&, ltc::TimeCode&, ltc::TimeCode&)+0x2ac>
40006c9c:	e5903000 	ldr	r3, [r0]
40006ca0:	e30d1da0 	movw	r1, #56736	; 0xdda0
40006ca4:	e3441002 	movt	r1, #16386	; 0x4002
40006ca8:	e5933018 	ldr	r3, [r3, #24]
40006cac:	e12fff33 	blx	r3
40006cb0:	e5d43016 	ldrb	r3, [r4, #22]
40006cb4:	e3530001 	cmp	r3, #1
40006cb8:	e3a0200a 	mov	r2, #10
40006cbc:	e584203c 	str	r2, [r4, #60]	; 0x3c
40006cc0:	0a00003d 	beq	40006dbc <McpButtons::Wait(ltc::Source&, ltc::TimeCode&, ltc::TimeCode&)+0x3b8>
40006cc4:	8a000038 	bhi	40006dac <McpButtons::Wait(ltc::Source&, ltc::TimeCode&, ltc::TimeCode&)+0x3a8>
40006cc8:	e3a03001 	mov	r3, #1
40006ccc:	e5c43016 	strb	r3, [r4, #22]
40006cd0:	eaffff95 	b	40006b2c <McpButtons::Wait(ltc::Source&, ltc::TimeCode&, ltc::TimeCode&)+0x128>
40006cd4:	e1a01007 	mov	r1, r7
40006cd8:	e1a00004 	mov	r0, r4
40006cdc:	eb0002a7 	bl	40007780 <McpButtons::HandleInternalTimeCodeFps(ltc::TimeCode&)>
40006ce0:	eaffffa2 	b	40006b70 <McpButtons::Wait(ltc::Source&, ltc::TimeCode&, ltc::TimeCode&)+0x16c>
40006ce4:	e1a01008 	mov	r1, r8
40006ce8:	e1a00004 	mov	r0, r4
40006cec:	eb00027c 	bl	400076e4 <McpButtons::HandleInternalTimeCodeStop(ltc::TimeCode&)>
40006cf0:	eaffff9e 	b	40006b70 <McpButtons::Wait(ltc::Source&, ltc::TimeCode&, ltc::TimeCode&)+0x16c>
40006cf4:	e3190040 	tst	r9, #64	; 0x40
40006cf8:	0a000024 	beq	40006d90 <McpButtons::Wait(ltc::Source&, ltc::TimeCode&, ltc::TimeCode&)+0x38c>
40006cfc:	e5d63000 	ldrb	r3, [r6]
40006d00:	e3530004 	cmp	r3, #4
40006d04:	1affff88 	bne	40006b2c <McpButtons::Wait(ltc::Source&, ltc::TimeCode&, ltc::TimeCode&)+0x128>
40006d08:	e5d43016 	ldrb	r3, [r4, #22]
40006d0c:	e3530002 	cmp	r3, #2
40006d10:	0a000014 	beq	40006d68 <McpButtons::Wait(ltc::Source&, ltc::TimeCode&, ltc::TimeCode&)+0x364>
40006d14:	e304507c 	movw	r5, #16508	; 0x407c
40006d18:	e3445003 	movt	r5, #16387	; 0x4003
40006d1c:	e5953000 	ldr	r3, [r5]
40006d20:	e5930014 	ldr	r0, [r3, #20]
40006d24:	e3500000 	cmp	r0, #0
40006d28:	0a000005 	beq	40006d44 <McpButtons::Wait(ltc::Source&, ltc::TimeCode&, ltc::TimeCode&)+0x340>
40006d2c:	e1c020d0 	ldrd	r2, [r0]
40006d30:	e5929020 	ldr	r9, [r2, #32]
40006d34:	e2433007 	sub	r3, r3, #7
40006d38:	e6ef1073 	uxtb	r1, r3
40006d3c:	e3a02000 	mov	r2, #0
40006d40:	e12fff39 	blx	r9
40006d44:	e5953000 	ldr	r3, [r5]
40006d48:	e5930014 	ldr	r0, [r3, #20]
40006d4c:	e3500000 	cmp	r0, #0
40006d50:	0a000004 	beq	40006d68 <McpButtons::Wait(ltc::Source&, ltc::TimeCode&, ltc::TimeCode&)+0x364>
40006d54:	e5903000 	ldr	r3, [r0]
40006d58:	e30d1da8 	movw	r1, #56744	; 0xdda8
40006d5c:	e3441002 	movt	r1, #16386	; 0x4002
40006d60:	e5933018 	ldr	r3, [r3, #24]
40006d64:	e12fff33 	blx	r3
40006d68:	e3a0300a 	mov	r3, #10
40006d6c:	e584303c 	str	r3, [r4, #60]	; 0x3c
40006d70:	e3a03002 	mov	r3, #2
40006d74:	e5c43016 	strb	r3, [r4, #22]
40006d78:	eaffff6b 	b	40006b2c <McpButtons::Wait(ltc::Source&, ltc::TimeCode&, ltc::TimeCode&)+0x128>
40006d7c:	e1a00004 	mov	r0, r4
40006d80:	e1a01006 	mov	r1, r6
40006d84:	ebfffdce 	bl	400064c4 <McpButtons::HandleActionSelect(ltc::Source const&)>
40006d88:	e1a00005 	mov	r0, r5
40006d8c:	eaffff7a 	b	40006b7c <McpButtons::Wait(ltc::Source&, ltc::TimeCode&, ltc::TimeCode&)+0x178>
40006d90:	e3190080 	tst	r9, #128	; 0x80
40006d94:	0affff64 	beq	40006b2c <McpButtons::Wait(ltc::Source&, ltc::TimeCode&, ltc::TimeCode&)+0x128>
40006d98:	e5d63000 	ldrb	r3, [r6]
40006d9c:	e3530004 	cmp	r3, #4
40006da0:	03a0301b 	moveq	r3, #27
40006da4:	0584303c 	streq	r3, [r4, #60]	; 0x3c
40006da8:	eaffff5f 	b	40006b2c <McpButtons::Wait(ltc::Source&, ltc::TimeCode&, ltc::TimeCode&)+0x128>
40006dac:	e2433002 	sub	r3, r3, #2
40006db0:	e3530001 	cmp	r3, #1
40006db4:	9affffc3 	bls	40006cc8 <McpButtons::Wait(ltc::Source&, ltc::TimeCode&, ltc::TimeCode&)+0x2c4>
40006db8:	eaffff5b 	b	40006b2c <McpButtons::Wait(ltc::Source&, ltc::TimeCode&, ltc::TimeCode&)+0x128>
40006dbc:	e3a03003 	mov	r3, #3
40006dc0:	e5c43016 	strb	r3, [r4, #22]
40006dc4:	eaffff58 	b	40006b2c <McpButtons::Wait(ltc::Source&, ltc::TimeCode&, ltc::TimeCode&)+0x128>

40006dc8 <McpButtons::SetRunState(RunStatus)>:
40006dc8:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
40006dcc:	e1a04000 	mov	r4, r0
40006dd0:	e5801034 	str	r1, [r0, #52]	; 0x34
40006dd4:	e24dd00c 	sub	sp, sp, #12
40006dd8:	e3510003 	cmp	r1, #3
40006ddc:	979ff101 	ldrls	pc, [pc, r1, lsl #2]
40006de0:	ea000096 	b	40007040 <McpButtons::SetRunState(RunStatus)+0x278>
40006de4:	40006f08 	andmi	r6, r0, r8, lsl #30
40006de8:	40006e9c 	mulmi	r0, ip, lr
40006dec:	40006e48 	andmi	r6, r0, r8, asr #28
40006df0:	40006df4 	strdmi	r6, [r0], -r4
40006df4:	e5d00000 	ldrb	r0, [r0]
40006df8:	e3a03013 	mov	r3, #19
40006dfc:	e5cd3004 	strb	r3, [sp, #4]
40006e00:	e3e03055 	mvn	r3, #85	; 0x55
40006e04:	e5cd3005 	strb	r3, [sp, #5]
40006e08:	eb009208 	bl	4002b630 <h3_i2c_set_slave_address(unsigned char)>
40006e0c:	e5940004 	ldr	r0, [r4, #4]
40006e10:	eb0091ff 	bl	4002b614 <h3_i2c_set_baudrate(unsigned long)>
40006e14:	e3a01002 	mov	r1, #2
40006e18:	e28d0004 	add	r0, sp, #4
40006e1c:	eb009179 	bl	4002b408 <h3_i2c_write(char const*, unsigned long)>
40006e20:	e304307c 	movw	r3, #16508	; 0x407c
40006e24:	e3443003 	movt	r3, #16387	; 0x4003
40006e28:	e5933000 	ldr	r3, [r3]
40006e2c:	e5930014 	ldr	r0, [r3, #20]
40006e30:	e3500000 	cmp	r0, #0
40006e34:	0a000081 	beq	40007040 <McpButtons::SetRunState(RunStatus)+0x278>
40006e38:	e5901000 	ldr	r1, [r0]
40006e3c:	e30d2ddc 	movw	r2, #56796	; 0xdddc
40006e40:	e3442002 	movt	r2, #16386	; 0x4002
40006e44:	ea000028 	b	40006eec <McpButtons::SetRunState(RunStatus)+0x124>
40006e48:	e5d00000 	ldrb	r0, [r0]
40006e4c:	e3a03013 	mov	r3, #19
40006e50:	e5cd3004 	strb	r3, [sp, #4]
40006e54:	e3e0300f 	mvn	r3, #15
40006e58:	e5cd3005 	strb	r3, [sp, #5]
40006e5c:	eb0091f3 	bl	4002b630 <h3_i2c_set_slave_address(unsigned char)>
40006e60:	e5940004 	ldr	r0, [r4, #4]
40006e64:	eb0091ea 	bl	4002b614 <h3_i2c_set_baudrate(unsigned long)>
40006e68:	e3a01002 	mov	r1, #2
40006e6c:	e28d0004 	add	r0, sp, #4
40006e70:	eb009164 	bl	4002b408 <h3_i2c_write(char const*, unsigned long)>
40006e74:	e304307c 	movw	r3, #16508	; 0x407c
40006e78:	e3443003 	movt	r3, #16387	; 0x4003
40006e7c:	e5933000 	ldr	r3, [r3]
40006e80:	e5930014 	ldr	r0, [r3, #20]
40006e84:	e3500000 	cmp	r0, #0
40006e88:	0a00006c 	beq	40007040 <McpButtons::SetRunState(RunStatus)+0x278>
40006e8c:	e5901000 	ldr	r1, [r0]
40006e90:	e30d2dcc 	movw	r2, #56780	; 0xddcc
40006e94:	e3442002 	movt	r2, #16386	; 0x4002
40006e98:	ea000013 	b	40006eec <McpButtons::SetRunState(RunStatus)+0x124>
40006e9c:	e5d00000 	ldrb	r0, [r0]
40006ea0:	e3a03013 	mov	r3, #19
40006ea4:	e5cd3004 	strb	r3, [sp, #4]
40006ea8:	e3a0300f 	mov	r3, #15
40006eac:	e5cd3005 	strb	r3, [sp, #5]
40006eb0:	eb0091de 	bl	4002b630 <h3_i2c_set_slave_address(unsigned char)>
40006eb4:	e5940004 	ldr	r0, [r4, #4]
40006eb8:	eb0091d5 	bl	4002b614 <h3_i2c_set_baudrate(unsigned long)>
40006ebc:	e3a01002 	mov	r1, #2
40006ec0:	e28d0004 	add	r0, sp, #4
40006ec4:	eb00914f 	bl	4002b408 <h3_i2c_write(char const*, unsigned long)>
40006ec8:	e304307c 	movw	r3, #16508	; 0x407c
40006ecc:	e3443003 	movt	r3, #16387	; 0x4003
40006ed0:	e5933000 	ldr	r3, [r3]
40006ed4:	e5930014 	ldr	r0, [r3, #20]
40006ed8:	e3500000 	cmp	r0, #0
40006edc:	0a000057 	beq	40007040 <McpButtons::SetRunState(RunStatus)+0x278>
40006ee0:	e5901000 	ldr	r1, [r0]
40006ee4:	e30d2dbc 	movw	r2, #56764	; 0xddbc
40006ee8:	e3442002 	movt	r2, #16386	; 0x4002
40006eec:	e591e01c 	ldr	lr, [r1, #28]
40006ef0:	e3a0300c 	mov	r3, #12
40006ef4:	e3a01004 	mov	r1, #4
40006ef8:	e1a0c00e 	mov	ip, lr
40006efc:	e28dd00c 	add	sp, sp, #12
40006f00:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
40006f04:	e12fff1c 	bx	ip
40006f08:	e5d01017 	ldrb	r1, [r0, #23]
40006f0c:	e3a03001 	mov	r3, #1
40006f10:	e5d00000 	ldrb	r0, [r0]
40006f14:	e3a02013 	mov	r2, #19
40006f18:	e1a03113 	lsl	r3, r3, r1
40006f1c:	e304607c 	movw	r6, #16508	; 0x407c
40006f20:	e5cd3005 	strb	r3, [sp, #5]
40006f24:	e5cd2004 	strb	r2, [sp, #4]
40006f28:	eb0091c0 	bl	4002b630 <h3_i2c_set_slave_address(unsigned char)>
40006f2c:	e3446003 	movt	r6, #16387	; 0x4003
40006f30:	e5940004 	ldr	r0, [r4, #4]
40006f34:	eb0091b6 	bl	4002b614 <h3_i2c_set_baudrate(unsigned long)>
40006f38:	e3a01002 	mov	r1, #2
40006f3c:	e28d0004 	add	r0, sp, #4
40006f40:	eb009130 	bl	4002b408 <h3_i2c_write(char const*, unsigned long)>
40006f44:	e5963000 	ldr	r3, [r6]
40006f48:	e5d47017 	ldrb	r7, [r4, #23]
40006f4c:	e5d4904b 	ldrb	r9, [r4, #75]	; 0x4b
40006f50:	e5934014 	ldr	r4, [r3, #20]
40006f54:	e3540000 	cmp	r4, #0
40006f58:	0a000034 	beq	40007030 <McpButtons::SetRunState(RunStatus)+0x268>
40006f5c:	e5948008 	ldr	r8, [r4, #8]
40006f60:	e3a01000 	mov	r1, #0
40006f64:	e5943000 	ldr	r3, [r4]
40006f68:	e1a00004 	mov	r0, r4
40006f6c:	e594a004 	ldr	sl, [r4, #4]
40006f70:	e248b001 	sub	fp, r8, #1
40006f74:	e5933020 	ldr	r3, [r3, #32]
40006f78:	e1a0200b 	mov	r2, fp
40006f7c:	e12fff33 	blx	r3
40006f80:	e25aa001 	subs	sl, sl, #1
40006f84:	0a000008 	beq	40006fac <McpButtons::SetRunState(RunStatus)+0x1e4>
40006f88:	e3a05000 	mov	r5, #0
40006f8c:	e5943000 	ldr	r3, [r4]
40006f90:	e2855001 	add	r5, r5, #1
40006f94:	e3a01020 	mov	r1, #32
40006f98:	e1a00004 	mov	r0, r4
40006f9c:	e5933014 	ldr	r3, [r3, #20]
40006fa0:	e12fff33 	blx	r3
40006fa4:	e15a0005 	cmp	sl, r5
40006fa8:	1afffff7 	bne	40006f8c <McpButtons::SetRunState(RunStatus)+0x1c4>
40006fac:	e5943000 	ldr	r3, [r4]
40006fb0:	e1a0200b 	mov	r2, fp
40006fb4:	e30dad40 	movw	sl, #56640	; 0xdd40
40006fb8:	e3a0b00c 	mov	fp, #12
40006fbc:	e00b079b 	mul	fp, fp, r7
40006fc0:	e344a002 	movt	sl, #16386	; 0x4002
40006fc4:	e1a00004 	mov	r0, r4
40006fc8:	e5933020 	ldr	r3, [r3, #32]
40006fcc:	e3a01000 	mov	r1, #0
40006fd0:	e08b500a 	add	r5, fp, sl
40006fd4:	e12fff33 	blx	r3
40006fd8:	e7db300a 	ldrb	r3, [fp, sl]
40006fdc:	e5940004 	ldr	r0, [r4, #4]
40006fe0:	e3530000 	cmp	r3, #0
40006fe4:	0a00000b 	beq	40007018 <McpButtons::SetRunState(RunStatus)+0x250>
40006fe8:	e3500000 	cmp	r0, #0
40006fec:	0a000043 	beq	40007100 <McpButtons::SetRunState(RunStatus)+0x338>
40006ff0:	e0850000 	add	r0, r5, r0
40006ff4:	e1a02005 	mov	r2, r5
40006ff8:	e3a03001 	mov	r3, #1
40006ffc:	ea000002 	b	4000700c <McpButtons::SetRunState(RunStatus)+0x244>
40007000:	e1520000 	cmp	r2, r0
40007004:	e2833001 	add	r3, r3, #1
40007008:	0a000002 	beq	40007018 <McpButtons::SetRunState(RunStatus)+0x250>
4000700c:	e5f21001 	ldrb	r1, [r2, #1]!
40007010:	e3510000 	cmp	r1, #0
40007014:	1afffff9 	bne	40007000 <McpButtons::SetRunState(RunStatus)+0x238>
40007018:	e5942000 	ldr	r2, [r4]
4000701c:	e1a01008 	mov	r1, r8
40007020:	e1a00004 	mov	r0, r4
40007024:	e592a01c 	ldr	sl, [r2, #28]
40007028:	e1a02005 	mov	r2, r5
4000702c:	e12fff3a 	blx	sl
40007030:	e3570006 	cmp	r7, #6
40007034:	0a000003 	beq	40007048 <McpButtons::SetRunState(RunStatus)+0x280>
40007038:	e3570003 	cmp	r7, #3
4000703c:	0a00002c 	beq	400070f4 <McpButtons::SetRunState(RunStatus)+0x32c>
40007040:	e28dd00c 	add	sp, sp, #12
40007044:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
40007048:	e5963000 	ldr	r3, [r6]
4000704c:	e5930014 	ldr	r0, [r3, #20]
40007050:	e3500000 	cmp	r0, #0
40007054:	0a000006 	beq	40007074 <McpButtons::SetRunState(RunStatus)+0x2ac>
40007058:	e5901004 	ldr	r1, [r0, #4]
4000705c:	e3a02003 	mov	r2, #3
40007060:	e5903000 	ldr	r3, [r0]
40007064:	e2411003 	sub	r1, r1, #3
40007068:	e5933020 	ldr	r3, [r3, #32]
4000706c:	e6ef1071 	uxtb	r1, r1
40007070:	e12fff33 	blx	r3
40007074:	e3590000 	cmp	r9, #0
40007078:	1a000016 	bne	400070d8 <McpButtons::SetRunState(RunStatus)+0x310>
4000707c:	eb0061fb 	bl	4001f870 <ntp_client_get_status()>
40007080:	e3500004 	cmp	r0, #4
40007084:	0a000002 	beq	40007094 <McpButtons::SetRunState(RunStatus)+0x2cc>
40007088:	eb0061f8 	bl	4001f870 <ntp_client_get_status()>
4000708c:	e3500000 	cmp	r0, #0
40007090:	1a00001c 	bne	40007108 <McpButtons::SetRunState(RunStatus)+0x340>
40007094:	e303357c 	movw	r3, #13692	; 0x357c
40007098:	e3443006 	movt	r3, #16390	; 0x4006
4000709c:	e5933000 	ldr	r3, [r3]
400070a0:	e5d3300a 	ldrb	r3, [r3, #10]
400070a4:	e3530000 	cmp	r3, #0
400070a8:	0affffe4 	beq	40007040 <McpButtons::SetRunState(RunStatus)+0x278>
400070ac:	e5963000 	ldr	r3, [r6]
400070b0:	e5930014 	ldr	r0, [r3, #20]
400070b4:	e3500000 	cmp	r0, #0
400070b8:	0affffe0 	beq	40007040 <McpButtons::SetRunState(RunStatus)+0x278>
400070bc:	e5903000 	ldr	r3, [r0]
400070c0:	e30d1bf4 	movw	r1, #56308	; 0xdbf4
400070c4:	e3441002 	movt	r1, #16386	; 0x4002
400070c8:	e5933018 	ldr	r3, [r3, #24]
400070cc:	e28dd00c 	add	sp, sp, #12
400070d0:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
400070d4:	e12fff13 	bx	r3
400070d8:	e30839a8 	movw	r3, #35240	; 0x89a8
400070dc:	e3443005 	movt	r3, #16389	; 0x4005
400070e0:	e5930000 	ldr	r0, [r3]
400070e4:	e5901040 	ldr	r1, [r0, #64]	; 0x40
400070e8:	e28dd00c 	add	sp, sp, #12
400070ec:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
400070f0:	eafff85d 	b	4000526c <GPS::Display(gps::Status)>
400070f4:	e28dd00c 	add	sp, sp, #12
400070f8:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
400070fc:	ea0022dd 	b	4000fc78 <tcnet::display::show()>
40007100:	e3a03001 	mov	r3, #1
40007104:	eaffffc3 	b	40007018 <McpButtons::SetRunState(RunStatus)+0x250>
40007108:	eb0061d8 	bl	4001f870 <ntp_client_get_status()>
4000710c:	e3500005 	cmp	r0, #5
40007110:	0affffdf 	beq	40007094 <McpButtons::SetRunState(RunStatus)+0x2cc>
40007114:	e5963000 	ldr	r3, [r6]
40007118:	e5930014 	ldr	r0, [r3, #20]
4000711c:	e3500000 	cmp	r0, #0
40007120:	0affffc6 	beq	40007040 <McpButtons::SetRunState(RunStatus)+0x278>
40007124:	e5903000 	ldr	r3, [r0]
40007128:	e30d1bf0 	movw	r1, #56304	; 0xdbf0
4000712c:	e3441002 	movt	r1, #16386	; 0x4002
40007130:	eaffffe4 	b	400070c8 <McpButtons::SetRunState(RunStatus)+0x300>

40007134 <McpButtons::HandleRunActionSelect()>:
40007134:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
40007138:	e304607c 	movw	r6, #16508	; 0x407c
4000713c:	e3446003 	movt	r6, #16387	; 0x4003
40007140:	e24dd00c 	sub	sp, sp, #12
40007144:	e1a04000 	mov	r4, r0
40007148:	e5965000 	ldr	r5, [r6]
4000714c:	e5d53011 	ldrb	r3, [r5, #17]
40007150:	e3530000 	cmp	r3, #0
40007154:	1a000013 	bne	400071a8 <McpButtons::HandleRunActionSelect()+0x74>
40007158:	e5943038 	ldr	r3, [r4, #56]	; 0x38
4000715c:	e3a02b03 	mov	r2, #3072	; 0xc00
40007160:	e34021c2 	movt	r2, #450	; 0x1c2
40007164:	e5922084 	ldr	r2, [r2, #132]	; 0x84
40007168:	e0423003 	sub	r3, r2, r3
4000716c:	e3530f4b 	cmp	r3, #300	; 0x12c
40007170:	3a00000a 	bcc	400071a0 <McpButtons::HandleRunActionSelect()+0x6c>
40007174:	e5943034 	ldr	r3, [r4, #52]	; 0x34
40007178:	e5842038 	str	r2, [r4, #56]	; 0x38
4000717c:	e3530000 	cmp	r3, #0
40007180:	03a01001 	moveq	r1, #1
40007184:	0a000019 	beq	400071f0 <McpButtons::HandleRunActionSelect()+0xbc>
40007188:	e3530001 	cmp	r3, #1
4000718c:	0a000016 	beq	400071ec <McpButtons::HandleRunActionSelect()+0xb8>
40007190:	e3530002 	cmp	r3, #2
40007194:	0a000019 	beq	40007200 <McpButtons::HandleRunActionSelect()+0xcc>
40007198:	e3530003 	cmp	r3, #3
4000719c:	0a000069 	beq	40007348 <McpButtons::HandleRunActionSelect()+0x214>
400071a0:	e28dd00c 	add	sp, sp, #12
400071a4:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
400071a8:	e5950014 	ldr	r0, [r5, #20]
400071ac:	e3500000 	cmp	r0, #0
400071b0:	0affffe8 	beq	40007158 <McpButtons::HandleRunActionSelect()+0x24>
400071b4:	e5903000 	ldr	r3, [r0]
400071b8:	e3a01000 	mov	r1, #0
400071bc:	e5c51011 	strb	r1, [r5, #17]
400071c0:	e5932028 	ldr	r2, [r3, #40]	; 0x28
400071c4:	e30237c8 	movw	r3, #10184	; 0x27c8
400071c8:	e3443000 	movt	r3, #16384	; 0x4000
400071cc:	e1520003 	cmp	r2, r3
400071d0:	1a00005a 	bne	40007340 <McpButtons::HandleRunActionSelect()+0x20c>
400071d4:	e595100c 	ldr	r1, [r5, #12]
400071d8:	e1a00005 	mov	r0, r5
400071dc:	e2511000 	subs	r1, r1, #0
400071e0:	13a01001 	movne	r1, #1
400071e4:	eb0076fd 	bl	40024de0 <Display::SetSleepTimer(bool)>
400071e8:	eaffffda 	b	40007158 <McpButtons::HandleRunActionSelect()+0x24>
400071ec:	e3a01000 	mov	r1, #0
400071f0:	e1a00004 	mov	r0, r4
400071f4:	e28dd00c 	add	sp, sp, #12
400071f8:	e8bd43f0 	pop	{r4, r5, r6, r7, r8, r9, lr}
400071fc:	eafffef1 	b	40006dc8 <McpButtons::SetRunState(RunStatus)>
40007200:	e3047084 	movw	r7, #16516	; 0x4084
40007204:	e3447003 	movt	r7, #16387	; 0x4003
40007208:	e5970000 	ldr	r0, [r7]
4000720c:	eb00559c 	bl	4001c884 <ConfigStore::Flash()>
40007210:	e2505000 	subs	r5, r0, #0
40007214:	1afffffb 	bne	40007208 <McpButtons::HandleRunActionSelect()+0xd4>
40007218:	e30d0df8 	movw	r0, #56824	; 0xddf8
4000721c:	e3440002 	movt	r0, #16386	; 0x4002
40007220:	eb00965a 	bl	4002cb90 <printf>
40007224:	e5d40000 	ldrb	r0, [r4]
40007228:	e3a03013 	mov	r3, #19
4000722c:	e5cd3004 	strb	r3, [sp, #4]
40007230:	e3e03000 	mvn	r3, #0
40007234:	e5cd3005 	strb	r3, [sp, #5]
40007238:	eb0090fc 	bl	4002b630 <h3_i2c_set_slave_address(unsigned char)>
4000723c:	e5940004 	ldr	r0, [r4, #4]
40007240:	eb0090f3 	bl	4002b614 <h3_i2c_set_baudrate(unsigned long)>
40007244:	e3a01002 	mov	r1, #2
40007248:	e28d0004 	add	r0, sp, #4
4000724c:	eb00906d 	bl	4002b408 <h3_i2c_write(char const*, unsigned long)>
40007250:	e5963000 	ldr	r3, [r6]
40007254:	e5930014 	ldr	r0, [r3, #20]
40007258:	e3500000 	cmp	r0, #0
4000725c:	0a000031 	beq	40007328 <McpButtons::HandleRunActionSelect()+0x1f4>
40007260:	e5903000 	ldr	r3, [r0]
40007264:	e593300c 	ldr	r3, [r3, #12]
40007268:	e12fff33 	blx	r3
4000726c:	e5963000 	ldr	r3, [r6]
40007270:	e5936014 	ldr	r6, [r3, #20]
40007274:	e3560000 	cmp	r6, #0
40007278:	0a00002a 	beq	40007328 <McpButtons::HandleRunActionSelect()+0x1f4>
4000727c:	e5967008 	ldr	r7, [r6, #8]
40007280:	e1a01005 	mov	r1, r5
40007284:	e8960108 	ldm	r6, {r3, r8}
40007288:	e2479001 	sub	r9, r7, #1
4000728c:	e1a00006 	mov	r0, r6
40007290:	e5933020 	ldr	r3, [r3, #32]
40007294:	e1a02009 	mov	r2, r9
40007298:	e12fff33 	blx	r3
4000729c:	e2588001 	subs	r8, r8, #1
400072a0:	0a000007 	beq	400072c4 <McpButtons::HandleRunActionSelect()+0x190>
400072a4:	e5963000 	ldr	r3, [r6]
400072a8:	e2855001 	add	r5, r5, #1
400072ac:	e3a01020 	mov	r1, #32
400072b0:	e1a00006 	mov	r0, r6
400072b4:	e5933014 	ldr	r3, [r3, #20]
400072b8:	e12fff33 	blx	r3
400072bc:	e1550008 	cmp	r5, r8
400072c0:	1afffff7 	bne	400072a4 <McpButtons::HandleRunActionSelect()+0x170>
400072c4:	e5963000 	ldr	r3, [r6]
400072c8:	e1a00006 	mov	r0, r6
400072cc:	e1a02009 	mov	r2, r9
400072d0:	e3a01000 	mov	r1, #0
400072d4:	e5933020 	ldr	r3, [r3, #32]
400072d8:	e12fff33 	blx	r3
400072dc:	e5960004 	ldr	r0, [r6, #4]
400072e0:	e3500000 	cmp	r0, #0
400072e4:	0a000022 	beq	40007374 <McpButtons::HandleRunActionSelect()+0x240>
400072e8:	e59f108c 	ldr	r1, [pc, #140]	; 4000737c <McpButtons::HandleRunActionSelect()+0x248>
400072ec:	e280c001 	add	ip, r0, #1
400072f0:	e3a03001 	mov	r3, #1
400072f4:	e1530000 	cmp	r3, r0
400072f8:	e2833001 	add	r3, r3, #1
400072fc:	0a00001a 	beq	4000736c <McpButtons::HandleRunActionSelect()+0x238>
40007300:	e5f12001 	ldrb	r2, [r1, #1]!
40007304:	e3520000 	cmp	r2, #0
40007308:	1afffff9 	bne	400072f4 <McpButtons::HandleRunActionSelect()+0x1c0>
4000730c:	e5961000 	ldr	r1, [r6]
40007310:	e30d2dec 	movw	r2, #56812	; 0xddec
40007314:	e3442002 	movt	r2, #16386	; 0x4002
40007318:	e1a00006 	mov	r0, r6
4000731c:	e591401c 	ldr	r4, [r1, #28]
40007320:	e1a01007 	mov	r1, r7
40007324:	e12fff34 	blx	r4
40007328:	e3043088 	movw	r3, #16520	; 0x4088
4000732c:	e3443003 	movt	r3, #16387	; 0x4003
40007330:	e5930000 	ldr	r0, [r3]
40007334:	e28dd00c 	add	sp, sp, #12
40007338:	e8bd43f0 	pop	{r4, r5, r6, r7, r8, r9, lr}
4000733c:	ea007c64 	b	400264d4 <Hardware::Reboot()>
40007340:	e12fff32 	blx	r2
40007344:	eaffffa2 	b	400071d4 <McpButtons::HandleRunActionSelect()+0xa0>
40007348:	e1a00004 	mov	r0, r4
4000734c:	e3a01000 	mov	r1, #0
40007350:	ebfffe9c 	bl	40006dc8 <McpButtons::SetRunState(RunStatus)>
40007354:	e3043094 	movw	r3, #16532	; 0x4094
40007358:	e3443003 	movt	r3, #16387	; 0x4003
4000735c:	e5930000 	ldr	r0, [r3]
40007360:	e28dd00c 	add	sp, sp, #12
40007364:	e8bd43f0 	pop	{r4, r5, r6, r7, r8, r9, lr}
40007368:	ea0024e8 	b	40010710 <LtcGenerator::ActionReset()>
4000736c:	e1a0300c 	mov	r3, ip
40007370:	eaffffe5 	b	4000730c <McpButtons::HandleRunActionSelect()+0x1d8>
40007374:	e3a03001 	mov	r3, #1
40007378:	eaffffe3 	b	4000730c <McpButtons::HandleRunActionSelect()+0x1d8>
4000737c:	4002dded 	andmi	sp, r2, sp, ror #27

40007380 <McpButtons::Run()>:
40007380:	e5d03020 	ldrb	r3, [r0, #32]
40007384:	e3530000 	cmp	r3, #0
40007388:	012fff1e 	bxeq	lr
4000738c:	e3a03b02 	mov	r3, #2048	; 0x800
40007390:	e34031c2 	movt	r3, #450	; 0x1c2
40007394:	e92d4030 	push	{r4, r5, lr}
40007398:	e24dd00c 	sub	sp, sp, #12
4000739c:	e5933010 	ldr	r3, [r3, #16]
400073a0:	e2135080 	ands	r5, r3, #128	; 0x80
400073a4:	1a000034 	bne	4000747c <McpButtons::Run()+0xfc>
400073a8:	e1a04000 	mov	r4, r0
400073ac:	e3a03012 	mov	r3, #18
400073b0:	e5d00000 	ldrb	r0, [r0]
400073b4:	e5cd3000 	strb	r3, [sp]
400073b8:	eb00909c 	bl	4002b630 <h3_i2c_set_slave_address(unsigned char)>
400073bc:	e5940004 	ldr	r0, [r4, #4]
400073c0:	eb009093 	bl	4002b614 <h3_i2c_set_baudrate(unsigned long)>
400073c4:	e3a01001 	mov	r1, #1
400073c8:	e1a0000d 	mov	r0, sp
400073cc:	eb00900d 	bl	4002b408 <h3_i2c_write(char const*, unsigned long)>
400073d0:	e5d40000 	ldrb	r0, [r4]
400073d4:	e5cd5004 	strb	r5, [sp, #4]
400073d8:	eb009094 	bl	4002b630 <h3_i2c_set_slave_address(unsigned char)>
400073dc:	e5940004 	ldr	r0, [r4, #4]
400073e0:	eb00908b 	bl	4002b614 <h3_i2c_set_baudrate(unsigned long)>
400073e4:	e3a01001 	mov	r1, #1
400073e8:	e28d0004 	add	r0, sp, #4
400073ec:	eb00902e 	bl	4002b4ac <h3_i2c_read(char*, unsigned long)>
400073f0:	e5d42017 	ldrb	r2, [r4, #23]
400073f4:	e5dd1004 	ldrb	r1, [sp, #4]
400073f8:	e5d43021 	ldrb	r3, [r4, #33]	; 0x21
400073fc:	e3520004 	cmp	r2, #4
40007400:	e5c41021 	strb	r1, [r4, #33]	; 0x21
40007404:	e1c13003 	bic	r3, r1, r3
40007408:	0a000034 	beq	400074e0 <McpButtons::Run()+0x160>
4000740c:	e3520006 	cmp	r2, #6
40007410:	0a000028 	beq	400074b8 <McpButtons::Run()+0x138>
40007414:	e3130004 	tst	r3, #4
40007418:	1a000044 	bne	40007530 <McpButtons::Run()+0x1b0>
4000741c:	e3130008 	tst	r3, #8
40007420:	1a000017 	bne	40007484 <McpButtons::Run()+0x104>
40007424:	e3130010 	tst	r3, #16
40007428:	0a00000c 	beq	40007460 <McpButtons::Run()+0xe0>
4000742c:	e5943034 	ldr	r3, [r4, #52]	; 0x34
40007430:	e3530001 	cmp	r3, #1
40007434:	03a01002 	moveq	r1, #2
40007438:	0a000038 	beq	40007520 <McpButtons::Run()+0x1a0>
4000743c:	e3530000 	cmp	r3, #0
40007440:	1a00000d 	bne	4000747c <McpButtons::Run()+0xfc>
40007444:	e594101c 	ldr	r1, [r4, #28]
40007448:	e3043094 	movw	r3, #16532	; 0x4094
4000744c:	e3443003 	movt	r3, #16387	; 0x4003
40007450:	e5930000 	ldr	r0, [r3]
40007454:	e28dd00c 	add	sp, sp, #12
40007458:	e8bd4030 	pop	{r4, r5, lr}
4000745c:	ea0025ca 	b	40010b8c <LtcGenerator::ActionForward(long)>
40007460:	e2840030 	add	r0, r4, #48	; 0x30
40007464:	eb004112 	bl	400178b4 <RotaryEncoder::Process(unsigned char)>
40007468:	e5c40032 	strb	r0, [r4, #50]	; 0x32
4000746c:	e3500020 	cmp	r0, #32
40007470:	0a000003 	beq	40007484 <McpButtons::Run()+0x104>
40007474:	e3500010 	cmp	r0, #16
40007478:	0affffeb 	beq	4000742c <McpButtons::Run()+0xac>
4000747c:	e28dd00c 	add	sp, sp, #12
40007480:	e8bd8030 	pop	{r4, r5, pc}
40007484:	e5943034 	ldr	r3, [r4, #52]	; 0x34
40007488:	e3530002 	cmp	r3, #2
4000748c:	03a01001 	moveq	r1, #1
40007490:	0a000022 	beq	40007520 <McpButtons::Run()+0x1a0>
40007494:	e3530000 	cmp	r3, #0
40007498:	1afffff7 	bne	4000747c <McpButtons::Run()+0xfc>
4000749c:	e594101c 	ldr	r1, [r4, #28]
400074a0:	e3043094 	movw	r3, #16532	; 0x4094
400074a4:	e3443003 	movt	r3, #16387	; 0x4003
400074a8:	e5930000 	ldr	r0, [r3]
400074ac:	e28dd00c 	add	sp, sp, #12
400074b0:	e8bd4030 	pop	{r4, r5, lr}
400074b4:	ea0025d6 	b	40010c14 <LtcGenerator::ActionBackward(long)>
400074b8:	e3130020 	tst	r3, #32
400074bc:	1a00002d 	bne	40007578 <McpButtons::Run()+0x1f8>
400074c0:	e3130040 	tst	r3, #64	; 0x40
400074c4:	0affffd2 	beq	40007414 <McpButtons::Run()+0x94>
400074c8:	e3043090 	movw	r3, #16528	; 0x4090
400074cc:	e3443003 	movt	r3, #16387	; 0x4003
400074d0:	e5930000 	ldr	r0, [r3]
400074d4:	e28dd00c 	add	sp, sp, #12
400074d8:	e8bd4030 	pop	{r4, r5, lr}
400074dc:	ea00322d 	b	40013d98 <SystimeReader::ActionStop()>
400074e0:	e3130020 	tst	r3, #32
400074e4:	1a000015 	bne	40007540 <McpButtons::Run()+0x1c0>
400074e8:	e2132040 	ands	r2, r3, #64	; 0x40
400074ec:	1a00001b 	bne	40007560 <McpButtons::Run()+0x1e0>
400074f0:	e3130080 	tst	r3, #128	; 0x80
400074f4:	0affffc6 	beq	40007414 <McpButtons::Run()+0x94>
400074f8:	e5d43018 	ldrb	r3, [r4, #24]
400074fc:	e3530000 	cmp	r3, #0
40007500:	0a000022 	beq	40007590 <McpButtons::Run()+0x210>
40007504:	e5943034 	ldr	r3, [r4, #52]	; 0x34
40007508:	e3530000 	cmp	r3, #0
4000750c:	03a01003 	moveq	r1, #3
40007510:	0a000002 	beq	40007520 <McpButtons::Run()+0x1a0>
40007514:	e3530003 	cmp	r3, #3
40007518:	1affffd7 	bne	4000747c <McpButtons::Run()+0xfc>
4000751c:	e1a01002 	mov	r1, r2
40007520:	e1a00004 	mov	r0, r4
40007524:	e28dd00c 	add	sp, sp, #12
40007528:	e8bd4030 	pop	{r4, r5, lr}
4000752c:	eafffe25 	b	40006dc8 <McpButtons::SetRunState(RunStatus)>
40007530:	e1a00004 	mov	r0, r4
40007534:	e28dd00c 	add	sp, sp, #12
40007538:	e8bd4030 	pop	{r4, r5, lr}
4000753c:	eafffefc 	b	40007134 <McpButtons::HandleRunActionSelect()>
40007540:	e5d41018 	ldrb	r1, [r4, #24]
40007544:	e3043094 	movw	r3, #16532	; 0x4094
40007548:	e3443003 	movt	r3, #16387	; 0x4003
4000754c:	e2211001 	eor	r1, r1, #1
40007550:	e5930000 	ldr	r0, [r3]
40007554:	e28dd00c 	add	sp, sp, #12
40007558:	e8bd4030 	pop	{r4, r5, lr}
4000755c:	ea0023ce 	b	4001049c <LtcGenerator::ActionStart(bool)>
40007560:	e3043094 	movw	r3, #16532	; 0x4094
40007564:	e3443003 	movt	r3, #16387	; 0x4003
40007568:	e5930000 	ldr	r0, [r3]
4000756c:	e28dd00c 	add	sp, sp, #12
40007570:	e8bd4030 	pop	{r4, r5, lr}
40007574:	ea0023de 	b	400104f4 <LtcGenerator::ActionStop()>
40007578:	e3043090 	movw	r3, #16528	; 0x4090
4000757c:	e3443003 	movt	r3, #16387	; 0x4003
40007580:	e5930000 	ldr	r0, [r3]
40007584:	e28dd00c 	add	sp, sp, #12
40007588:	e8bd4030 	pop	{r4, r5, lr}
4000758c:	ea0031f2 	b	40013d5c <SystimeReader::ActionStart()>
40007590:	e3043094 	movw	r3, #16532	; 0x4094
40007594:	e3443003 	movt	r3, #16387	; 0x4003
40007598:	e5930000 	ldr	r0, [r3]
4000759c:	e28dd00c 	add	sp, sp, #12
400075a0:	e8bd4030 	pop	{r4, r5, lr}
400075a4:	ea0023d5 	b	40010500 <LtcGenerator::ActionResume()>

400075a8 <McpButtons::HandleInternalKeyEsc() [clone .part.0]>:
400075a8:	e92d4070 	push	{r4, r5, r6, lr}
400075ac:	e304407c 	movw	r4, #16508	; 0x407c
400075b0:	e3444003 	movt	r4, #16387	; 0x4003
400075b4:	e1a05000 	mov	r5, r0
400075b8:	e5943000 	ldr	r3, [r4]
400075bc:	e5930014 	ldr	r0, [r3, #20]
400075c0:	e3500000 	cmp	r0, #0
400075c4:	0a00001c 	beq	4000763c <McpButtons::HandleInternalKeyEsc() [clone .part.0]+0x94>
400075c8:	e5903000 	ldr	r3, [r0]
400075cc:	e3a01000 	mov	r1, #0
400075d0:	e5933024 	ldr	r3, [r3, #36]	; 0x24
400075d4:	e12fff33 	blx	r3
400075d8:	e5943000 	ldr	r3, [r4]
400075dc:	e5930014 	ldr	r0, [r3, #20]
400075e0:	e3500000 	cmp	r0, #0
400075e4:	0a000014 	beq	4000763c <McpButtons::HandleInternalKeyEsc() [clone .part.0]+0x94>
400075e8:	e5903000 	ldr	r3, [r0]
400075ec:	e3a02000 	mov	r2, #0
400075f0:	e1a01002 	mov	r1, r2
400075f4:	e5933020 	ldr	r3, [r3, #32]
400075f8:	e12fff33 	blx	r3
400075fc:	e5943000 	ldr	r3, [r4]
40007600:	e5930014 	ldr	r0, [r3, #20]
40007604:	e3500000 	cmp	r0, #0
40007608:	0a00000b 	beq	4000763c <McpButtons::HandleInternalKeyEsc() [clone .part.0]+0x94>
4000760c:	e5903000 	ldr	r3, [r0]
40007610:	e3a01001 	mov	r1, #1
40007614:	e5933010 	ldr	r3, [r3, #16]
40007618:	e12fff33 	blx	r3
4000761c:	e5943000 	ldr	r3, [r4]
40007620:	e5930014 	ldr	r0, [r3, #20]
40007624:	e3500000 	cmp	r0, #0
40007628:	0a000003 	beq	4000763c <McpButtons::HandleInternalKeyEsc() [clone .part.0]+0x94>
4000762c:	e5903000 	ldr	r3, [r0]
40007630:	e3a01002 	mov	r1, #2
40007634:	e5933010 	ldr	r3, [r3, #16]
40007638:	e12fff33 	blx	r3
4000763c:	e3a03000 	mov	r3, #0
40007640:	e5c53016 	strb	r3, [r5, #22]
40007644:	e8bd8070 	pop	{r4, r5, r6, pc}

40007648 <McpButtons::HandleInternalTimeCodeStart(ltc::TimeCode&)>:
40007648:	e92d4070 	push	{r4, r5, r6, lr}
4000764c:	e2805040 	add	r5, r0, #64	; 0x40
40007650:	e1a02001 	mov	r2, r1
40007654:	e1a03005 	mov	r3, r5
40007658:	e590103c 	ldr	r1, [r0, #60]	; 0x3c
4000765c:	e1a04000 	mov	r4, r0
40007660:	e2800008 	add	r0, r0, #8
40007664:	ebfff698 	bl	400050cc <DisplayEditTimeCode::HandleKey(int, ltc::TimeCode&, char*)>
40007668:	e30726ec 	movw	r2, #30444	; 0x76ec
4000766c:	e3442005 	movt	r2, #16389	; 0x4005
40007670:	e5d23001 	ldrb	r3, [r2, #1]
40007674:	e3530000 	cmp	r3, #0
40007678:	1a00000d 	bne	400076b4 <McpButtons::HandleInternalTimeCodeStart(ltc::TimeCode&)+0x6c>
4000767c:	e3073704 	movw	r3, #30468	; 0x7704
40007680:	e1a01005 	mov	r1, r5
40007684:	e3443005 	movt	r3, #16389	; 0x4005
40007688:	e5933000 	ldr	r3, [r3]
4000768c:	e5930004 	ldr	r0, [r3, #4]
40007690:	e5903000 	ldr	r3, [r0]
40007694:	e593300c 	ldr	r3, [r3, #12]
40007698:	e12fff33 	blx	r3
4000769c:	e594303c 	ldr	r3, [r4, #60]	; 0x3c
400076a0:	e353001b 	cmp	r3, #27
400076a4:	18bd8070 	popne	{r4, r5, r6, pc}
400076a8:	e1a00004 	mov	r0, r4
400076ac:	e8bd4070 	pop	{r4, r5, r6, lr}
400076b0:	eaffffbc 	b	400075a8 <McpButtons::HandleInternalKeyEsc() [clone .part.0]>
400076b4:	e5d23008 	ldrb	r3, [r2, #8]
400076b8:	e3530000 	cmp	r3, #0
400076bc:	0a000002 	beq	400076cc <McpButtons::HandleInternalTimeCodeStart(ltc::TimeCode&)+0x84>
400076c0:	e5d23009 	ldrb	r3, [r2, #9]
400076c4:	e3530000 	cmp	r3, #0
400076c8:	1afffff3 	bne	4000769c <McpButtons::HandleInternalTimeCodeStart(ltc::TimeCode&)+0x54>
400076cc:	e3043078 	movw	r3, #16504	; 0x4078
400076d0:	e1a01005 	mov	r1, r5
400076d4:	e3443003 	movt	r3, #16387	; 0x4003
400076d8:	e5930000 	ldr	r0, [r3]
400076dc:	eb003455 	bl	40014838 <LtcDisplayRgb::Show(char const*)>
400076e0:	eaffffed 	b	4000769c <McpButtons::HandleInternalTimeCodeStart(ltc::TimeCode&)+0x54>

400076e4 <McpButtons::HandleInternalTimeCodeStop(ltc::TimeCode&)>:
400076e4:	e92d4070 	push	{r4, r5, r6, lr}
400076e8:	e2805040 	add	r5, r0, #64	; 0x40
400076ec:	e1a02001 	mov	r2, r1
400076f0:	e1a03005 	mov	r3, r5
400076f4:	e590103c 	ldr	r1, [r0, #60]	; 0x3c
400076f8:	e1a04000 	mov	r4, r0
400076fc:	e2800008 	add	r0, r0, #8
40007700:	ebfff671 	bl	400050cc <DisplayEditTimeCode::HandleKey(int, ltc::TimeCode&, char*)>
40007704:	e30726ec 	movw	r2, #30444	; 0x76ec
40007708:	e3442005 	movt	r2, #16389	; 0x4005
4000770c:	e5d23001 	ldrb	r3, [r2, #1]
40007710:	e3530000 	cmp	r3, #0
40007714:	1a00000d 	bne	40007750 <McpButtons::HandleInternalTimeCodeStop(ltc::TimeCode&)+0x6c>
40007718:	e3073704 	movw	r3, #30468	; 0x7704
4000771c:	e1a01005 	mov	r1, r5
40007720:	e3443005 	movt	r3, #16389	; 0x4005
40007724:	e5933000 	ldr	r3, [r3]
40007728:	e5930004 	ldr	r0, [r3, #4]
4000772c:	e5903000 	ldr	r3, [r0]
40007730:	e593300c 	ldr	r3, [r3, #12]
40007734:	e12fff33 	blx	r3
40007738:	e594303c 	ldr	r3, [r4, #60]	; 0x3c
4000773c:	e353001b 	cmp	r3, #27
40007740:	18bd8070 	popne	{r4, r5, r6, pc}
40007744:	e1a00004 	mov	r0, r4
40007748:	e8bd4070 	pop	{r4, r5, r6, lr}
4000774c:	eaffff95 	b	400075a8 <McpButtons::HandleInternalKeyEsc() [clone .part.0]>
40007750:	e5d23008 	ldrb	r3, [r2, #8]
40007754:	e3530000 	cmp	r3, #0
40007758:	0a000002 	beq	40007768 <McpButtons::HandleInternalTimeCodeStop(ltc::TimeCode&)+0x84>
4000775c:	e5d23009 	ldrb	r3, [r2, #9]
40007760:	e3530000 	cmp	r3, #0
40007764:	1afffff3 	bne	40007738 <McpButtons::HandleInternalTimeCodeStop(ltc::TimeCode&)+0x54>
40007768:	e3043078 	movw	r3, #16504	; 0x4078
4000776c:	e1a01005 	mov	r1, r5
40007770:	e3443003 	movt	r3, #16387	; 0x4003
40007774:	e5930000 	ldr	r0, [r3]
40007778:	eb00342e 	bl	40014838 <LtcDisplayRgb::Show(char const*)>
4000777c:	eaffffed 	b	40007738 <McpButtons::HandleInternalTimeCodeStop(ltc::TimeCode&)+0x54>

40007780 <McpButtons::HandleInternalTimeCodeFps(ltc::TimeCode&)>:
40007780:	e92d4010 	push	{r4, lr}
40007784:	e1a04000 	mov	r4, r0
40007788:	e2812004 	add	r2, r1, #4
4000778c:	e2800014 	add	r0, r0, #20
40007790:	e5901028 	ldr	r1, [r0, #40]	; 0x28
40007794:	ebfff573 	bl	40004d68 <DisplayEditFps::HandleKey(int, unsigned char&)>
40007798:	e594303c 	ldr	r3, [r4, #60]	; 0x3c
4000779c:	e353001b 	cmp	r3, #27
400077a0:	18bd8010 	popne	{r4, pc}
400077a4:	e1a00004 	mov	r0, r4
400077a8:	e8bd4010 	pop	{r4, lr}
400077ac:	eaffff7d 	b	400075a8 <McpButtons::HandleInternalKeyEsc() [clone .part.0]>

400077b0 <Display::Printf(unsigned long, char const*, ...)>:
400077b0:	e92d000c 	push	{r2, r3}
400077b4:	e92d4070 	push	{r4, r5, r6, lr}
400077b8:	e24dd028 	sub	sp, sp, #40	; 0x28
400077bc:	e5904014 	ldr	r4, [r0, #20]
400077c0:	e3540000 	cmp	r4, #0
400077c4:	0a00000f 	beq	40007808 <Display::Printf(unsigned long, char const*, ...)+0x58>
400077c8:	e59d2038 	ldr	r2, [sp, #56]	; 0x38
400077cc:	e1a05000 	mov	r5, r0
400077d0:	e28d303c 	add	r3, sp, #60	; 0x3c
400077d4:	e1a06001 	mov	r6, r1
400077d8:	e58d3004 	str	r3, [sp, #4]
400077dc:	e3a01020 	mov	r1, #32
400077e0:	e28d0008 	add	r0, sp, #8
400077e4:	eb009519 	bl	4002cc50 <vsnprintf>
400077e8:	e1a04000 	mov	r4, r0
400077ec:	e28d2008 	add	r2, sp, #8
400077f0:	e5950014 	ldr	r0, [r5, #20]
400077f4:	e1a01006 	mov	r1, r6
400077f8:	e5903000 	ldr	r3, [r0]
400077fc:	e593501c 	ldr	r5, [r3, #28]
40007800:	e1a03004 	mov	r3, r4
40007804:	e12fff35 	blx	r5
40007808:	e1a00004 	mov	r0, r4
4000780c:	e28dd028 	add	sp, sp, #40	; 0x28
40007810:	e8bd4070 	pop	{r4, r5, r6, lr}
40007814:	e28dd008 	add	sp, sp, #8
40007818:	e12fff1e 	bx	lr

4000781c <net::display_emac_config()>:
4000781c:	e92d4010 	push	{r4, lr}
40007820:	e304407c 	movw	r4, #16508	; 0x407c
40007824:	e3444003 	movt	r4, #16387	; 0x4003
40007828:	e5943000 	ldr	r3, [r4]
4000782c:	e5930014 	ldr	r0, [r3, #20]
40007830:	e3500000 	cmp	r0, #0
40007834:	08bd8010 	popeq	{r4, pc}
40007838:	e5903000 	ldr	r3, [r0]
4000783c:	e3a01003 	mov	r1, #3
40007840:	e5933010 	ldr	r3, [r3, #16]
40007844:	e12fff33 	blx	r3
40007848:	e5943000 	ldr	r3, [r4]
4000784c:	e5930014 	ldr	r0, [r3, #20]
40007850:	e3500000 	cmp	r0, #0
40007854:	08bd8010 	popeq	{r4, pc}
40007858:	e5903000 	ldr	r3, [r0]
4000785c:	e30d1e04 	movw	r1, #56836	; 0xde04
40007860:	e8bd4010 	pop	{r4, lr}
40007864:	e3441002 	movt	r1, #16386	; 0x4002
40007868:	e5933018 	ldr	r3, [r3, #24]
4000786c:	e12fff13 	bx	r3

40007870 <net::display_emac_start()>:
40007870:	e92d4010 	push	{r4, lr}
40007874:	e304407c 	movw	r4, #16508	; 0x407c
40007878:	e3444003 	movt	r4, #16387	; 0x4003
4000787c:	e5943000 	ldr	r3, [r4]
40007880:	e5930014 	ldr	r0, [r3, #20]
40007884:	e3500000 	cmp	r0, #0
40007888:	08bd8010 	popeq	{r4, pc}
4000788c:	e5903000 	ldr	r3, [r0]
40007890:	e3a01003 	mov	r1, #3
40007894:	e5933010 	ldr	r3, [r3, #16]
40007898:	e12fff33 	blx	r3
4000789c:	e5943000 	ldr	r3, [r4]
400078a0:	e5930014 	ldr	r0, [r3, #20]
400078a4:	e3500000 	cmp	r0, #0
400078a8:	08bd8010 	popeq	{r4, pc}
400078ac:	e5903000 	ldr	r3, [r0]
400078b0:	e30d1e14 	movw	r1, #56852	; 0xde14
400078b4:	e8bd4010 	pop	{r4, lr}
400078b8:	e3441002 	movt	r1, #16386	; 0x4002
400078bc:	e5933018 	ldr	r3, [r3, #24]
400078c0:	e12fff13 	bx	r3

400078c4 <net::display_emac_status(bool)>:
400078c4:	e92d4070 	push	{r4, r5, r6, lr}
400078c8:	e304407c 	movw	r4, #16508	; 0x407c
400078cc:	e3444003 	movt	r4, #16387	; 0x4003
400078d0:	e1a05000 	mov	r5, r0
400078d4:	e5943000 	ldr	r3, [r4]
400078d8:	e5930014 	ldr	r0, [r3, #20]
400078dc:	e3500000 	cmp	r0, #0
400078e0:	0a000018 	beq	40007948 <net::display_emac_status(bool)+0x84>
400078e4:	e5903000 	ldr	r3, [r0]
400078e8:	e3a01003 	mov	r1, #3
400078ec:	e5933010 	ldr	r3, [r3, #16]
400078f0:	e12fff33 	blx	r3
400078f4:	e5943000 	ldr	r3, [r4]
400078f8:	e5930014 	ldr	r0, [r3, #20]
400078fc:	e3500000 	cmp	r0, #0
40007900:	0a000010 	beq	40007948 <net::display_emac_status(bool)+0x84>
40007904:	e5903000 	ldr	r3, [r0]
40007908:	e30d1e24 	movw	r1, #56868	; 0xde24
4000790c:	e3441002 	movt	r1, #16386	; 0x4002
40007910:	e5933018 	ldr	r3, [r3, #24]
40007914:	e12fff33 	blx	r3
40007918:	e3550000 	cmp	r5, #0
4000791c:	0a00000b 	beq	40007950 <net::display_emac_status(bool)+0x8c>
40007920:	e5943000 	ldr	r3, [r4]
40007924:	e5930014 	ldr	r0, [r3, #20]
40007928:	e3500000 	cmp	r0, #0
4000792c:	08bd8070 	popeq	{r4, r5, r6, pc}
40007930:	e5903000 	ldr	r3, [r0]
40007934:	e30d1e34 	movw	r1, #56884	; 0xde34
40007938:	e8bd4070 	pop	{r4, r5, r6, lr}
4000793c:	e3441002 	movt	r1, #16386	; 0x4002
40007940:	e5933018 	ldr	r3, [r3, #24]
40007944:	e12fff13 	bx	r3
40007948:	e3550000 	cmp	r5, #0
4000794c:	18bd8070 	popne	{r4, r5, r6, pc}
40007950:	e5943000 	ldr	r3, [r4]
40007954:	e5930014 	ldr	r0, [r3, #20]
40007958:	e3500000 	cmp	r0, #0
4000795c:	08bd8070 	popeq	{r4, r5, r6, pc}
40007960:	e5903000 	ldr	r3, [r0]
40007964:	e30d1e38 	movw	r1, #56888	; 0xde38
40007968:	e8bd4070 	pop	{r4, r5, r6, lr}
4000796c:	e3441002 	movt	r1, #16386	; 0x4002
40007970:	e5933018 	ldr	r3, [r3, #24]
40007974:	e12fff13 	bx	r3

40007978 <net::display_ip()>:
40007978:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
4000797c:	e304407c 	movw	r4, #16508	; 0x407c
40007980:	e3444003 	movt	r4, #16387	; 0x4003
40007984:	e24dd01c 	sub	sp, sp, #28
40007988:	e5946000 	ldr	r6, [r4]
4000798c:	e5960014 	ldr	r0, [r6, #20]
40007990:	e3500000 	cmp	r0, #0
40007994:	0a000004 	beq	400079ac <net::display_ip()+0x34>
40007998:	e5903000 	ldr	r3, [r0]
4000799c:	e3a01003 	mov	r1, #3
400079a0:	e5933010 	ldr	r3, [r3, #16]
400079a4:	e12fff33 	blx	r3
400079a8:	e5946000 	ldr	r6, [r4]
400079ac:	e30a573c 	movw	r5, #42812	; 0xa73c
400079b0:	e3445005 	movt	r5, #16389	; 0x4005
400079b4:	e5952000 	ldr	r2, [r5]
400079b8:	e5950004 	ldr	r0, [r5, #4]
400079bc:	e7e77452 	ubfx	r7, r2, #8, #8
400079c0:	e6ef9072 	uxtb	r9, r2
400079c4:	e7e78852 	ubfx	r8, r2, #16, #8
400079c8:	e1a04c22 	lsr	r4, r2, #24
400079cc:	eb009784 	bl	4002d7e4 <__popcountsi2>
400079d0:	e5d5201a 	ldrb	r2, [r5, #26]
400079d4:	e3120004 	tst	r2, #4
400079d8:	13a0305a 	movne	r3, #90	; 0x5a
400079dc:	1a000002 	bne	400079ec <net::display_ip()+0x74>
400079e0:	e3120002 	tst	r2, #2
400079e4:	13a03044 	movne	r3, #68	; 0x44
400079e8:	03a03053 	moveq	r3, #83	; 0x53
400079ec:	e58d3010 	str	r3, [sp, #16]
400079f0:	e30d2e40 	movw	r2, #56896	; 0xde40
400079f4:	e58d000c 	str	r0, [sp, #12]
400079f8:	e1a03009 	mov	r3, r9
400079fc:	e3442002 	movt	r2, #16386	; 0x4002
40007a00:	e1a00006 	mov	r0, r6
40007a04:	e58d4008 	str	r4, [sp, #8]
40007a08:	e3a01003 	mov	r1, #3
40007a0c:	e58d8004 	str	r8, [sp, #4]
40007a10:	e58d7000 	str	r7, [sp]
40007a14:	ebffff65 	bl	400077b0 <Display::Printf(unsigned long, char const*, ...)>
40007a18:	e28dd01c 	add	sp, sp, #28
40007a1c:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}

40007a20 <net::display_netmask()>:
40007a20:	eaffffd4 	b	40007978 <net::display_ip()>

40007a24 <net::display_gateway()>:
40007a24:	e12fff1e 	bx	lr

40007a28 <net::display_hostname()>:
40007a28:	e12fff1e 	bx	lr

40007a2c <Network::SendTo(long, void const*, unsigned long, unsigned long, unsigned short) [clone .isra.0]>:
40007a2c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40007a30:	e59fe018 	ldr	lr, [pc, #24]	; 40007a50 <Network::SendTo(long, void const*, unsigned long, unsigned long, unsigned short) [clone .isra.0]+0x24>
40007a34:	e1ddc0b4 	ldrh	ip, [sp, #4]
40007a38:	e59ee000 	ldr	lr, [lr]
40007a3c:	e35e0000 	cmp	lr, #0
40007a40:	049df004 	popeq	{pc}		; (ldreq pc, [sp], #4)
40007a44:	e58dc004 	str	ip, [sp, #4]
40007a48:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
40007a4c:	ea006a49 	b	40022378 <net::udp_send(long, unsigned char const*, unsigned long, unsigned long, unsigned short)>
40007a50:	4005a73c 	andmi	sl, r5, ip, lsr r7

40007a54 <RemoteConfig::HandleDisplayGet()>:
40007a54:	e59f3050 	ldr	r3, [pc, #80]	; 40007aac <RemoteConfig::HandleDisplayGet()+0x58>
40007a58:	e92d4013 	push	{r0, r1, r4, lr}
40007a5c:	e1a04000 	mov	r4, r0
40007a60:	e5933000 	ldr	r3, [r3]
40007a64:	e59f2044 	ldr	r2, [pc, #68]	; 40007ab0 <RemoteConfig::HandleDisplayGet()+0x5c>
40007a68:	e5d31011 	ldrb	r1, [r3, #17]
40007a6c:	e590000c 	ldr	r0, [r0, #12]
40007a70:	e59f303c 	ldr	r3, [pc, #60]	; 40007ab4 <RemoteConfig::HandleDisplayGet()+0x60>
40007a74:	e3510000 	cmp	r1, #0
40007a78:	11a03002 	movne	r3, r2
40007a7c:	e300158b 	movw	r1, #1419	; 0x58b
40007a80:	e59f2030 	ldr	r2, [pc, #48]	; 40007ab8 <RemoteConfig::HandleDisplayGet()+0x64>
40007a84:	eb00945e 	bl	4002cc04 <snprintf>
40007a88:	e594100c 	ldr	r1, [r4, #12]
40007a8c:	e3023905 	movw	r3, #10501	; 0x2905
40007a90:	e58d3000 	str	r3, [sp]
40007a94:	e1a02000 	mov	r2, r0
40007a98:	e5943014 	ldr	r3, [r4, #20]
40007a9c:	e5940010 	ldr	r0, [r4, #16]
40007aa0:	ebffffe1 	bl	40007a2c <Network::SendTo(long, void const*, unsigned long, unsigned long, unsigned short) [clone .isra.0]>
40007aa4:	e28dd008 	add	sp, sp, #8
40007aa8:	e8bd8010 	pop	{r4, pc}
40007aac:	4003407c 	andmi	r4, r3, ip, ror r0
40007ab0:	4002e331 	andmi	lr, r2, r1, lsr r3
40007ab4:	4002e31d 	andmi	lr, r2, sp, lsl r3
40007ab8:	4002de52 	andmi	sp, r2, r2, asr lr

40007abc <RemoteConfig::HandleUptime()>:
40007abc:	e5d0301f 	ldrb	r3, [r0, #31]
40007ac0:	e3530000 	cmp	r3, #0
40007ac4:	012fff1e 	bxeq	lr
40007ac8:	e92d4013 	push	{r0, r1, r4, lr}
40007acc:	e1a04000 	mov	r4, r0
40007ad0:	eb007aa3 	bl	40026564 <hardware_uptime_seconds()>
40007ad4:	e59f2030 	ldr	r2, [pc, #48]	; 40007b0c <RemoteConfig::HandleUptime()+0x50>
40007ad8:	e1a03000 	mov	r3, r0
40007adc:	e594000c 	ldr	r0, [r4, #12]
40007ae0:	e300158b 	movw	r1, #1419	; 0x58b
40007ae4:	eb009446 	bl	4002cc04 <snprintf>
40007ae8:	e3023905 	movw	r3, #10501	; 0x2905
40007aec:	e1a02000 	mov	r2, r0
40007af0:	e58d3000 	str	r3, [sp]
40007af4:	e5943014 	ldr	r3, [r4, #20]
40007af8:	e594100c 	ldr	r1, [r4, #12]
40007afc:	e5940010 	ldr	r0, [r4, #16]
40007b00:	ebffffc9 	bl	40007a2c <Network::SendTo(long, void const*, unsigned long, unsigned long, unsigned short) [clone .isra.0]>
40007b04:	e28dd008 	add	sp, sp, #8
40007b08:	e8bd8010 	pop	{r4, pc}
40007b0c:	4002de5e 	andmi	sp, r2, lr, asr lr

40007b10 <RemoteConfig::HandleVersion()>:
40007b10:	e92d4013 	push	{r0, r1, r4, lr}
40007b14:	e1a04000 	mov	r4, r0
40007b18:	e59f3030 	ldr	r3, [pc, #48]	; 40007b50 <RemoteConfig::HandleVersion()+0x40>
40007b1c:	e300158b 	movw	r1, #1419	; 0x58b
40007b20:	e59f202c 	ldr	r2, [pc, #44]	; 40007b54 <RemoteConfig::HandleVersion()+0x44>
40007b24:	e590000c 	ldr	r0, [r0, #12]
40007b28:	eb009435 	bl	4002cc04 <snprintf>
40007b2c:	e594100c 	ldr	r1, [r4, #12]
40007b30:	e3023905 	movw	r3, #10501	; 0x2905
40007b34:	e58d3000 	str	r3, [sp]
40007b38:	e1a02000 	mov	r2, r0
40007b3c:	e5943014 	ldr	r3, [r4, #20]
40007b40:	e5940010 	ldr	r0, [r4, #16]
40007b44:	ebffffb8 	bl	40007a2c <Network::SendTo(long, void const*, unsigned long, unsigned long, unsigned short) [clone .isra.0]>
40007b48:	e28dd008 	add	sp, sp, #8
40007b4c:	e8bd8010 	pop	{r4, pc}
40007b50:	40034010 	andmi	r4, r3, r0, lsl r0
40007b54:	4002de6b 	andmi	sp, r2, fp, ror #28

40007b58 <RemoteConfig::HandleTftpGet()>:
40007b58:	e92d4013 	push	{r0, r1, r4, lr}
40007b5c:	e1a04000 	mov	r4, r0
40007b60:	eb0004e6 	bl	40008f00 <RemoteConfig::PlatformHandleTftpGet()>
40007b64:	e5d41028 	ldrb	r1, [r4, #40]	; 0x28
40007b68:	e59f203c 	ldr	r2, [pc, #60]	; 40007bac <RemoteConfig::HandleTftpGet()+0x54>
40007b6c:	e59f303c 	ldr	r3, [pc, #60]	; 40007bb0 <RemoteConfig::HandleTftpGet()+0x58>
40007b70:	e3510000 	cmp	r1, #0
40007b74:	e594000c 	ldr	r0, [r4, #12]
40007b78:	01a03002 	moveq	r3, r2
40007b7c:	e59f2030 	ldr	r2, [pc, #48]	; 40007bb4 <RemoteConfig::HandleTftpGet()+0x5c>
40007b80:	e300158b 	movw	r1, #1419	; 0x58b
40007b84:	eb00941e 	bl	4002cc04 <snprintf>
40007b88:	e594100c 	ldr	r1, [r4, #12]
40007b8c:	e3023905 	movw	r3, #10501	; 0x2905
40007b90:	e58d3000 	str	r3, [sp]
40007b94:	e1a02000 	mov	r2, r0
40007b98:	e5943014 	ldr	r3, [r4, #20]
40007b9c:	e5940010 	ldr	r0, [r4, #16]
40007ba0:	ebffffa1 	bl	40007a2c <Network::SendTo(long, void const*, unsigned long, unsigned long, unsigned short) [clone .isra.0]>
40007ba4:	e28dd008 	add	sp, sp, #8
40007ba8:	e8bd8010 	pop	{r4, pc}
40007bac:	4002e331 	andmi	lr, r2, r1, lsr r3
40007bb0:	4002e31d 	andmi	lr, r2, sp, lsl r3
40007bb4:	4002de77 	andmi	sp, r2, r7, ror lr

40007bb8 <RemoteConfig::HandleList()>:
40007bb8:	e92d40f0 	push	{r4, r5, r6, r7, lr}
40007bbc:	e1a04000 	mov	r4, r0
40007bc0:	e5903000 	ldr	r3, [r0]
40007bc4:	e3a02012 	mov	r2, #18
40007bc8:	e590500c 	ldr	r5, [r0, #12]
40007bcc:	e24dd024 	sub	sp, sp, #36	; 0x24
40007bd0:	e59f00d0 	ldr	r0, [pc, #208]	; 40007ca8 <RemoteConfig::HandleList()+0xf0>
40007bd4:	e59fc0d0 	ldr	ip, [pc, #208]	; 40007cac <RemoteConfig::HandleList()+0xf4>
40007bd8:	e2855007 	add	r5, r5, #7
40007bdc:	e0200392 	mla	r0, r2, r3, r0
40007be0:	e5943004 	ldr	r3, [r4, #4]
40007be4:	e3a0200c 	mov	r2, #12
40007be8:	e59fe0c0 	ldr	lr, [pc, #192]	; 40007cb0 <RemoteConfig::HandleList()+0xf8>
40007bec:	e02cc392 	mla	ip, r2, r3, ip
40007bf0:	e59f30bc 	ldr	r3, [pc, #188]	; 40007cb4 <RemoteConfig::HandleList()+0xfc>
40007bf4:	e5947008 	ldr	r7, [r4, #8]
40007bf8:	e5932000 	ldr	r2, [r3]
40007bfc:	e5de3009 	ldrb	r3, [lr, #9]
40007c00:	e1a06c22 	lsr	r6, r2, #24
40007c04:	e1a01822 	lsr	r1, r2, #16
40007c08:	e3530000 	cmp	r3, #0
40007c0c:	e6ef3072 	uxtb	r3, r2
40007c10:	e1a02422 	lsr	r2, r2, #8
40007c14:	0a000016 	beq	40007c74 <RemoteConfig::HandleList()+0xbc>
40007c18:	e58d000c 	str	r0, [sp, #12]
40007c1c:	e6ef1071 	uxtb	r1, r1
40007c20:	e58d1004 	str	r1, [sp, #4]
40007c24:	e6ef2072 	uxtb	r2, r2
40007c28:	e58d2000 	str	r2, [sp]
40007c2c:	e28ee009 	add	lr, lr, #9
40007c30:	e59f2080 	ldr	r2, [pc, #128]	; 40007cb8 <RemoteConfig::HandleList()+0x100>
40007c34:	e3001584 	movw	r1, #1412	; 0x584
40007c38:	e58de018 	str	lr, [sp, #24]
40007c3c:	e1a00005 	mov	r0, r5
40007c40:	e58d7014 	str	r7, [sp, #20]
40007c44:	e58dc010 	str	ip, [sp, #16]
40007c48:	e58d6008 	str	r6, [sp, #8]
40007c4c:	eb0093ec 	bl	4002cc04 <snprintf>
40007c50:	e3023905 	movw	r3, #10501	; 0x2905
40007c54:	e1a02000 	mov	r2, r0
40007c58:	e58d3000 	str	r3, [sp]
40007c5c:	e1a01005 	mov	r1, r5
40007c60:	e5943014 	ldr	r3, [r4, #20]
40007c64:	e5940010 	ldr	r0, [r4, #16]
40007c68:	ebffff6f 	bl	40007a2c <Network::SendTo(long, void const*, unsigned long, unsigned long, unsigned short) [clone .isra.0]>
40007c6c:	e28dd024 	add	sp, sp, #36	; 0x24
40007c70:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
40007c74:	e58d000c 	str	r0, [sp, #12]
40007c78:	e6ef1071 	uxtb	r1, r1
40007c7c:	e58d1004 	str	r1, [sp, #4]
40007c80:	e6ef2072 	uxtb	r2, r2
40007c84:	e58d2000 	str	r2, [sp]
40007c88:	e3001584 	movw	r1, #1412	; 0x584
40007c8c:	e59f2028 	ldr	r2, [pc, #40]	; 40007cbc <RemoteConfig::HandleList()+0x104>
40007c90:	e1a00005 	mov	r0, r5
40007c94:	e58d7014 	str	r7, [sp, #20]
40007c98:	e58dc010 	str	ip, [sp, #16]
40007c9c:	e58d6008 	str	r6, [sp, #8]
40007ca0:	eb0093d7 	bl	4002cc04 <snprintf>
40007ca4:	eaffffe9 	b	40007c50 <RemoteConfig::HandleList()+0x98>
40007ca8:	4002dfac 	andmi	sp, r2, ip, lsr #31
40007cac:	4002e096 	mulmi	r2, r6, r0
40007cb0:	40034098 	mulmi	r3, r8, r0
40007cb4:	4005a73c 	andmi	sl, r5, ip, lsr r7
40007cb8:	4002de80 	andmi	sp, r2, r0, lsl #29
40007cbc:	4002de99 	mulmi	r2, r9, lr

40007cc0 <Display::SetSleep(bool)>:
40007cc0:	e92d4070 	push	{r4, r5, r6, lr}
40007cc4:	e1a04000 	mov	r4, r0
40007cc8:	e5900014 	ldr	r0, [r0, #20]
40007ccc:	e3500000 	cmp	r0, #0
40007cd0:	08bd8070 	popeq	{r4, r5, r6, pc}
40007cd4:	e5903000 	ldr	r3, [r0]
40007cd8:	e1a05001 	mov	r5, r1
40007cdc:	e5c41011 	strb	r1, [r4, #17]
40007ce0:	e5933028 	ldr	r3, [r3, #40]	; 0x28
40007ce4:	e12fff33 	blx	r3
40007ce8:	e3550000 	cmp	r5, #0
40007cec:	18bd8070 	popne	{r4, r5, r6, pc}
40007cf0:	e594100c 	ldr	r1, [r4, #12]
40007cf4:	e1a00004 	mov	r0, r4
40007cf8:	e8bd4070 	pop	{r4, r5, r6, lr}
40007cfc:	e2511000 	subs	r1, r1, #0
40007d00:	13a01001 	movne	r1, #1
40007d04:	ea007435 	b	40024de0 <Display::SetSleepTimer(bool)>

40007d08 <RemoteConfig::HandleTftpSet()>:
40007d08:	e5903018 	ldr	r3, [r0, #24]
40007d0c:	e3530006 	cmp	r3, #6
40007d10:	112fff1e 	bxne	lr
40007d14:	e590300c 	ldr	r3, [r0, #12]
40007d18:	e92d4010 	push	{r4, lr}
40007d1c:	e1a04000 	mov	r4, r0
40007d20:	e5d33006 	ldrb	r3, [r3, #6]
40007d24:	e3530030 	cmp	r3, #48	; 0x30
40007d28:	13a03001 	movne	r3, #1
40007d2c:	03a03000 	moveq	r3, #0
40007d30:	e5c03028 	strb	r3, [r0, #40]	; 0x28
40007d34:	0a000003 	beq	40007d48 <RemoteConfig::HandleTftpSet()+0x40>
40007d38:	e59f3014 	ldr	r3, [pc, #20]	; 40007d54 <RemoteConfig::HandleTftpSet()+0x4c>
40007d3c:	e3a01000 	mov	r1, #0
40007d40:	e5930000 	ldr	r0, [r3]
40007d44:	ebffffdd 	bl	40007cc0 <Display::SetSleep(bool)>
40007d48:	e1a00004 	mov	r0, r4
40007d4c:	e8bd4010 	pop	{r4, lr}
40007d50:	ea000426 	b	40008df0 <RemoteConfig::PlatformHandleTftpSet()>
40007d54:	4003407c 	andmi	r4, r3, ip, ror r0

40007d58 <RemoteConfig::HandleDisplaySet()>:
40007d58:	e5903018 	ldr	r3, [r0, #24]
40007d5c:	e3530009 	cmp	r3, #9
40007d60:	112fff1e 	bxne	lr
40007d64:	e590300c 	ldr	r3, [r0, #12]
40007d68:	e92d4010 	push	{r4, lr}
40007d6c:	e5d31009 	ldrb	r1, [r3, #9]
40007d70:	e59f3014 	ldr	r3, [pc, #20]	; 40007d8c <RemoteConfig::HandleDisplaySet()+0x34>
40007d74:	e2411030 	sub	r1, r1, #48	; 0x30
40007d78:	e16f1f11 	clz	r1, r1
40007d7c:	e5930000 	ldr	r0, [r3]
40007d80:	e1a012a1 	lsr	r1, r1, #5
40007d84:	ebffffcd 	bl	40007cc0 <Display::SetSleep(bool)>
40007d88:	e8bd8010 	pop	{r4, pc}
40007d8c:	4003407c 	andmi	r4, r3, ip, ror r0

40007d90 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned long)>:
40007d90:	e92d4070 	push	{r4, r5, r6, lr}
40007d94:	e1a04000 	mov	r4, r0
40007d98:	e880000e 	stm	r0, {r1, r2, r3}
40007d9c:	e59fe0b0 	ldr	lr, [pc, #176]	; 40007e54 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned long)+0xc4>
40007da0:	e3a00000 	mov	r0, #0
40007da4:	e584000c 	str	r0, [r4, #12]
40007da8:	e3e0c000 	mvn	ip, #0
40007dac:	e584c010 	str	ip, [r4, #16]
40007db0:	e3a05007 	mov	r5, #7
40007db4:	e59fc09c 	ldr	ip, [pc, #156]	; 40007e58 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned long)+0xc8>
40007db8:	e5840014 	str	r0, [r4, #20]
40007dbc:	e5840018 	str	r0, [r4, #24]
40007dc0:	e584001c 	str	r0, [r4, #28]
40007dc4:	e1c402b0 	strh	r0, [r4, #32]
40007dc8:	e5840024 	str	r0, [r4, #36]	; 0x24
40007dcc:	e5c40028 	strb	r0, [r4, #40]	; 0x28
40007dd0:	e584002c 	str	r0, [r4, #44]	; 0x2c
40007dd4:	e59f0080 	ldr	r0, [pc, #128]	; 40007e5c <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned long)+0xcc>
40007dd8:	e5804000 	str	r4, [r0]
40007ddc:	e1a0000c 	mov	r0, ip
40007de0:	e2555001 	subs	r5, r5, #1
40007de4:	14de6001 	ldrbne	r6, [lr], #1
40007de8:	14cc6001 	strbne	r6, [ip], #1
40007dec:	1afffffb 	bne	40007de0 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned long)+0x50>
40007df0:	e5c01006 	strb	r1, [r0, #6]
40007df4:	e5c02007 	strb	r2, [r0, #7]
40007df8:	e5c03008 	strb	r3, [r0, #8]
40007dfc:	e5c05009 	strb	r5, [r0, #9]
40007e00:	e3020905 	movw	r0, #10501	; 0x2905
40007e04:	e59f1054 	ldr	r1, [pc, #84]	; 40007e60 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned long)+0xd0>
40007e08:	eb00690e 	bl	40022248 <net::udp_begin(unsigned short, void (*)(unsigned char const*, unsigned long, unsigned long, unsigned short))>
40007e0c:	e5840010 	str	r0, [r4, #16]
40007e10:	e1a03005 	mov	r3, r5
40007e14:	e1a02005 	mov	r2, r5
40007e18:	e1a01005 	mov	r1, r5
40007e1c:	e1a00005 	mov	r0, r5
40007e20:	eb005bb0 	bl	4001ece8 <mdns_service_record_add(char const*, mdns::Services, char const*, unsigned short)>
40007e24:	e1a03005 	mov	r3, r5
40007e28:	e1a02005 	mov	r2, r5
40007e2c:	e3a01001 	mov	r1, #1
40007e30:	e1a00005 	mov	r0, r5
40007e34:	eb005bab 	bl	4001ece8 <mdns_service_record_add(char const*, mdns::Services, char const*, unsigned short)>
40007e38:	e3a00048 	mov	r0, #72	; 0x48
40007e3c:	eb009565 	bl	4002d3d8 <operator new(unsigned int)>
40007e40:	e1a05000 	mov	r5, r0
40007e44:	eb0004f7 	bl	40009228 <HttpDaemon::HttpDaemon()>
40007e48:	e584502c 	str	r5, [r4, #44]	; 0x2c
40007e4c:	e1a00004 	mov	r0, r4
40007e50:	e8bd8070 	pop	{r4, r5, r6, pc}
40007e54:	4005a750 	andmi	sl, r5, r0, asr r7
40007e58:	40034098 	mulmi	r3, r8, r0
40007e5c:	40034050 	andmi	r4, r3, r0, asr r0
40007e60:	40008510 	andmi	r8, r0, r0, lsl r5

40007e64 <RemoteConfig::GetStringNode() const>:
40007e64:	e59f3010 	ldr	r3, [pc, #16]	; 40007e7c <RemoteConfig::GetStringNode() const+0x18>
40007e68:	e5d30006 	ldrb	r0, [r3, #6]
40007e6c:	e59f300c 	ldr	r3, [pc, #12]	; 40007e80 <RemoteConfig::GetStringNode() const+0x1c>
40007e70:	e0800180 	add	r0, r0, r0, lsl #3
40007e74:	e0830080 	add	r0, r3, r0, lsl #1
40007e78:	e12fff1e 	bx	lr
40007e7c:	40034098 	mulmi	r3, r8, r0
40007e80:	4002dfac 	andmi	sp, r2, ip, lsr #31

40007e84 <RemoteConfig::GetStringOutput() const>:
40007e84:	e59f3010 	ldr	r3, [pc, #16]	; 40007e9c <RemoteConfig::GetStringOutput() const+0x18>
40007e88:	e5d30007 	ldrb	r0, [r3, #7]
40007e8c:	e59f300c 	ldr	r3, [pc, #12]	; 40007ea0 <RemoteConfig::GetStringOutput() const+0x1c>
40007e90:	e0800080 	add	r0, r0, r0, lsl #1
40007e94:	e0830100 	add	r0, r3, r0, lsl #2
40007e98:	e12fff1e 	bx	lr
40007e9c:	40034098 	mulmi	r3, r8, r0
40007ea0:	4002e096 	mulmi	r2, r6, r0

40007ea4 <RemoteConfig::SetDisable(bool)>:
40007ea4:	e92d4070 	push	{r4, r5, r6, lr}
40007ea8:	e2514000 	subs	r4, r1, #0
40007eac:	e5d0601c 	ldrb	r6, [r0, #28]
40007eb0:	e1a05000 	mov	r5, r0
40007eb4:	0a00000a 	beq	40007ee4 <RemoteConfig::SetDisable(bool)+0x40>
40007eb8:	e3560000 	cmp	r6, #0
40007ebc:	18bd8070 	popne	{r4, r5, r6, pc}
40007ec0:	e3020905 	movw	r0, #10501	; 0x2905
40007ec4:	eb0068f7 	bl	400222a8 <net::udp_end(unsigned short)>
40007ec8:	e3e03000 	mvn	r3, #0
40007ecc:	e1a00006 	mov	r0, r6
40007ed0:	e5853010 	str	r3, [r5, #16]
40007ed4:	eb005be1 	bl	4001ee60 <mdns_service_record_delete(mdns::Services)>
40007ed8:	e3a03001 	mov	r3, #1
40007edc:	e5c5301c 	strb	r3, [r5, #28]
40007ee0:	e8bd8070 	pop	{r4, r5, r6, pc}
40007ee4:	e3560000 	cmp	r6, #0
40007ee8:	08bd8070 	popeq	{r4, r5, r6, pc}
40007eec:	e59f1024 	ldr	r1, [pc, #36]	; 40007f18 <RemoteConfig::SetDisable(bool)+0x74>
40007ef0:	e3020905 	movw	r0, #10501	; 0x2905
40007ef4:	eb0068d3 	bl	40022248 <net::udp_begin(unsigned short, void (*)(unsigned char const*, unsigned long, unsigned long, unsigned short))>
40007ef8:	e5850010 	str	r0, [r5, #16]
40007efc:	e1a03004 	mov	r3, r4
40007f00:	e1a02004 	mov	r2, r4
40007f04:	e1a01004 	mov	r1, r4
40007f08:	e1a00004 	mov	r0, r4
40007f0c:	eb005b75 	bl	4001ece8 <mdns_service_record_add(char const*, mdns::Services, char const*, unsigned short)>
40007f10:	e5c5401c 	strb	r4, [r5, #28]
40007f14:	e8bd8070 	pop	{r4, r5, r6, pc}
40007f18:	40008510 	andmi	r8, r0, r0, lsl r5

40007f1c <RemoteConfig::SetDisplayName(char const*)>:
40007f1c:	e59f3040 	ldr	r3, [pc, #64]	; 40007f64 <RemoteConfig::SetDisplayName(char const*)+0x48>
40007f20:	e2411001 	sub	r1, r1, #1
40007f24:	e3a02017 	mov	r2, #23
40007f28:	e5f10001 	ldrb	r0, [r1, #1]!
40007f2c:	e3500000 	cmp	r0, #0
40007f30:	1a000004 	bne	40007f48 <RemoteConfig::SetDisplayName(char const*)+0x2c>
40007f34:	e0832002 	add	r2, r3, r2
40007f38:	e1530002 	cmp	r3, r2
40007f3c:	0a000004 	beq	40007f54 <RemoteConfig::SetDisplayName(char const*)+0x38>
40007f40:	e4c30001 	strb	r0, [r3], #1
40007f44:	eafffffb 	b	40007f38 <RemoteConfig::SetDisplayName(char const*)+0x1c>
40007f48:	e4c30001 	strb	r0, [r3], #1
40007f4c:	e2522001 	subs	r2, r2, #1
40007f50:	1afffff4 	bne	40007f28 <RemoteConfig::SetDisplayName(char const*)+0xc>
40007f54:	e59f300c 	ldr	r3, [pc, #12]	; 40007f68 <RemoteConfig::SetDisplayName(char const*)+0x4c>
40007f58:	e3a02000 	mov	r2, #0
40007f5c:	e5c32020 	strb	r2, [r3, #32]
40007f60:	e12fff1e 	bx	lr
40007f64:	400340a1 	andmi	r4, r3, r1, lsr #1
40007f68:	40034098 	mulmi	r3, r8, r0

40007f6c <RemoteConfig::HandleGet(void*, unsigned long)>:
40007f6c:	e92d407f 	push	{r0, r1, r2, r3, r4, r5, r6, lr}
40007f70:	e2515000 	subs	r5, r1, #0
40007f74:	e1a04000 	mov	r4, r0
40007f78:	e1a06002 	mov	r6, r2
40007f7c:	1a000010 	bne	40007fc4 <RemoteConfig::HandleGet(void*, unsigned long)+0x58>
40007f80:	e590100c 	ldr	r1, [r0, #12]
40007f84:	e3003588 	movw	r3, #1416	; 0x588
40007f88:	e58d300c 	str	r3, [sp, #12]
40007f8c:	e28d200c 	add	r2, sp, #12
40007f90:	e2811005 	add	r1, r1, #5
40007f94:	eb000343 	bl	40008ca8 <RemoteConfig::GetIndex(void const*, unsigned long&)>
40007f98:	e3500000 	cmp	r0, #0
40007f9c:	aa000017 	bge	40008000 <RemoteConfig::HandleGet(void*, unsigned long)+0x94>
40007fa0:	e59f10e0 	ldr	r1, [pc, #224]	; 40008088 <RemoteConfig::HandleGet(void*, unsigned long)+0x11c>
40007fa4:	e3023905 	movw	r3, #10501	; 0x2905
40007fa8:	e58d3000 	str	r3, [sp]
40007fac:	e3a0200b 	mov	r2, #11
40007fb0:	e5943014 	ldr	r3, [r4, #20]
40007fb4:	e5940010 	ldr	r0, [r4, #16]
40007fb8:	ebfffe9b 	bl	40007a2c <Network::SendTo(long, void const*, unsigned long, unsigned long, unsigned short) [clone .isra.0]>
40007fbc:	e3a0000c 	mov	r0, #12
40007fc0:	ea000024 	b	40008058 <RemoteConfig::HandleGet(void*, unsigned long)+0xec>
40007fc4:	e58d200c 	str	r2, [sp, #12]
40007fc8:	e28d200c 	add	r2, sp, #12
40007fcc:	e580500c 	str	r5, [r0, #12]
40007fd0:	eb000334 	bl	40008ca8 <RemoteConfig::GetIndex(void const*, unsigned long&)>
40007fd4:	e3500000 	cmp	r0, #0
40007fd8:	aa000008 	bge	40008000 <RemoteConfig::HandleGet(void*, unsigned long)+0x94>
40007fdc:	e356000b 	cmp	r6, #11
40007fe0:	90851006 	addls	r1, r5, r6
40007fe4:	8285100b 	addhi	r1, r5, #11
40007fe8:	e59f3098 	ldr	r3, [pc, #152]	; 40008088 <RemoteConfig::HandleGet(void*, unsigned long)+0x11c>
40007fec:	e1510005 	cmp	r1, r5
40007ff0:	0afffff1 	beq	40007fbc <RemoteConfig::HandleGet(void*, unsigned long)+0x50>
40007ff4:	e4d32001 	ldrb	r2, [r3], #1
40007ff8:	e4c52001 	strb	r2, [r5], #1
40007ffc:	eafffffa 	b	40007fec <RemoteConfig::HandleGet(void*, unsigned long)+0x80>
40008000:	e59f1084 	ldr	r1, [pc, #132]	; 4000808c <RemoteConfig::HandleGet(void*, unsigned long)+0x120>
40008004:	e3a03018 	mov	r3, #24
40008008:	e0030093 	mul	r3, r3, r0
4000800c:	e0812003 	add	r2, r1, r3
40008010:	e7913003 	ldr	r3, [r1, r3]
40008014:	e28d100c 	add	r1, sp, #12
40008018:	e5922004 	ldr	r2, [r2, #4]
4000801c:	e08400c2 	add	r0, r4, r2, asr #1
40008020:	e3120001 	tst	r2, #1
40008024:	179420c2 	ldrne	r2, [r4, r2, asr #1]
40008028:	17923003 	ldrne	r3, [r2, r3]
4000802c:	e12fff33 	blx	r3
40008030:	e3550000 	cmp	r5, #0
40008034:	1a000009 	bne	40008060 <RemoteConfig::HandleGet(void*, unsigned long)+0xf4>
40008038:	e59d200c 	ldr	r2, [sp, #12]
4000803c:	e3023905 	movw	r3, #10501	; 0x2905
40008040:	e58d3000 	str	r3, [sp]
40008044:	e594100c 	ldr	r1, [r4, #12]
40008048:	e5943014 	ldr	r3, [r4, #20]
4000804c:	e5940010 	ldr	r0, [r4, #16]
40008050:	ebfffe75 	bl	40007a2c <Network::SendTo(long, void const*, unsigned long, unsigned long, unsigned short) [clone .isra.0]>
40008054:	e59d000c 	ldr	r0, [sp, #12]
40008058:	e28dd010 	add	sp, sp, #16
4000805c:	e8bd8070 	pop	{r4, r5, r6, pc}
40008060:	e594300c 	ldr	r3, [r4, #12]
40008064:	e59d200c 	ldr	r2, [sp, #12]
40008068:	e1560002 	cmp	r6, r2
4000806c:	90831006 	addls	r1, r3, r6
40008070:	80831002 	addhi	r1, r3, r2
40008074:	e1530001 	cmp	r3, r1
40008078:	0afffff5 	beq	40008054 <RemoteConfig::HandleGet(void*, unsigned long)+0xe8>
4000807c:	e4d32001 	ldrb	r2, [r3], #1
40008080:	e4c52001 	strb	r2, [r5], #1
40008084:	eafffffa 	b	40008074 <RemoteConfig::HandleGet(void*, unsigned long)+0x108>
40008088:	4002deaf 	andmi	sp, r2, pc, lsr #29
4000808c:	4002e240 	andmi	lr, r2, r0, asr #4

40008090 <RemoteConfig::HandleGetNoParams()>:
40008090:	e3a02000 	mov	r2, #0
40008094:	e1a01002 	mov	r1, r2
40008098:	eaffffb3 	b	40007f6c <RemoteConfig::HandleGet(void*, unsigned long)>

4000809c <RemoteConfig::HandleGetRconfigTxt(unsigned long&)>:
4000809c:	e92d4030 	push	{r4, r5, lr}
400080a0:	e1a04000 	mov	r4, r0
400080a4:	e24dd02c 	sub	sp, sp, #44	; 0x2c
400080a8:	e1a05001 	mov	r5, r1
400080ac:	e28d0008 	add	r0, sp, #8
400080b0:	eb0001b1 	bl	4000877c <RemoteConfigParams::RemoteConfigParams()>
400080b4:	e594200c 	ldr	r2, [r4, #12]
400080b8:	e300358c 	movw	r3, #1420	; 0x58c
400080bc:	e58d5000 	str	r5, [sp]
400080c0:	e3a01000 	mov	r1, #0
400080c4:	e28d0008 	add	r0, sp, #8
400080c8:	eb000212 	bl	40008918 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)>
400080cc:	e28dd02c 	add	sp, sp, #44	; 0x2c
400080d0:	e8bd8030 	pop	{r4, r5, pc}

400080d4 <RemoteConfig::HandleGetEnvTxt(unsigned long&)>:
400080d4:	e92d4037 	push	{r0, r1, r2, r4, r5, lr}
400080d8:	e1a04000 	mov	r4, r0
400080dc:	e1a05001 	mov	r5, r1
400080e0:	e28d0004 	add	r0, sp, #4
400080e4:	eb005246 	bl	4001ca04 <EnvParams::EnvParams()>
400080e8:	e594100c 	ldr	r1, [r4, #12]
400080ec:	e1a03005 	mov	r3, r5
400080f0:	e300258c 	movw	r2, #1420	; 0x58c
400080f4:	e28d0004 	add	r0, sp, #4
400080f8:	eb005285 	bl	4001cb14 <EnvParams::Builder(char*, unsigned long, unsigned long&)>
400080fc:	e28dd00c 	add	sp, sp, #12
40008100:	e8bd8030 	pop	{r4, r5, pc}

40008104 <RemoteConfig::HandleGetNetworkTxt(unsigned long&)>:
40008104:	e92d4030 	push	{r4, r5, lr}
40008108:	e1a04000 	mov	r4, r0
4000810c:	e24dd06c 	sub	sp, sp, #108	; 0x6c
40008110:	e1a05001 	mov	r5, r1
40008114:	e28d0008 	add	r0, sp, #8
40008118:	eb006929 	bl	400225c4 <NetworkParams::NetworkParams()>
4000811c:	e594200c 	ldr	r2, [r4, #12]
40008120:	e300358c 	movw	r3, #1420	; 0x58c
40008124:	e58d5000 	str	r5, [sp]
40008128:	e3a01000 	mov	r1, #0
4000812c:	e28d0008 	add	r0, sp, #8
40008130:	eb0069d6 	bl	40022890 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)>
40008134:	e28dd06c 	add	sp, sp, #108	; 0x6c
40008138:	e8bd8030 	pop	{r4, r5, pc}

4000813c <RemoteConfig::HandleGetArtnetTxt(unsigned long&)>:
4000813c:	e92d4030 	push	{r4, r5, lr}
40008140:	e1a04000 	mov	r4, r0
40008144:	e24dd0ec 	sub	sp, sp, #236	; 0xec
40008148:	e1a05001 	mov	r5, r1
4000814c:	e28d000c 	add	r0, sp, #12
40008150:	eb000e9c 	bl	4000bbc8 <ArtNetParams::ArtNetParams()>
40008154:	e594200c 	ldr	r2, [r4, #12]
40008158:	e300358c 	movw	r3, #1420	; 0x58c
4000815c:	e58d5000 	str	r5, [sp]
40008160:	e3a01000 	mov	r1, #0
40008164:	e28d000c 	add	r0, sp, #12
40008168:	eb00102e 	bl	4000c228 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)>
4000816c:	e28dd0ec 	add	sp, sp, #236	; 0xec
40008170:	e8bd8030 	pop	{r4, r5, pc}

40008174 <RemoteConfig::HandleGetLtcTxt(unsigned long&)>:
40008174:	e92d4030 	push	{r4, r5, lr}
40008178:	e1a04000 	mov	r4, r0
4000817c:	e24dd034 	sub	sp, sp, #52	; 0x34
40008180:	e1a05001 	mov	r5, r1
40008184:	e28d000c 	add	r0, sp, #12
40008188:	eb00198e 	bl	4000e7c8 <LtcParams::LtcParams()>
4000818c:	e594200c 	ldr	r2, [r4, #12]
40008190:	e300358c 	movw	r3, #1420	; 0x58c
40008194:	e58d5000 	str	r5, [sp]
40008198:	e3a01000 	mov	r1, #0
4000819c:	e28d000c 	add	r0, sp, #12
400081a0:	eb001c81 	bl	4000f3ac <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)>
400081a4:	e28dd034 	add	sp, sp, #52	; 0x34
400081a8:	e8bd8030 	pop	{r4, r5, pc}

400081ac <RemoteConfig::HandleGetLdisplayTxt(unsigned long&)>:
400081ac:	e92d4030 	push	{r4, r5, lr}
400081b0:	e1a04000 	mov	r4, r0
400081b4:	e24dd03c 	sub	sp, sp, #60	; 0x3c
400081b8:	e1a05001 	mov	r5, r1
400081bc:	e28d0008 	add	r0, sp, #8
400081c0:	eb0013d6 	bl	4000d120 <LtcDisplayParams::LtcDisplayParams()>
400081c4:	e594200c 	ldr	r2, [r4, #12]
400081c8:	e300358c 	movw	r3, #1420	; 0x58c
400081cc:	e58d5000 	str	r5, [sp]
400081d0:	e3a01000 	mov	r1, #0
400081d4:	e28d0008 	add	r0, sp, #8
400081d8:	eb001535 	bl	4000d6b4 <LtcDisplayParams::Builder(ltcdisplayparams::Params const*, char*, unsigned long, unsigned long&)>
400081dc:	e28dd03c 	add	sp, sp, #60	; 0x3c
400081e0:	e8bd8030 	pop	{r4, r5, pc}

400081e4 <RemoteConfig::HandleGetTCNetTxt(unsigned long&)>:
400081e4:	e92d4030 	push	{r4, r5, lr}
400081e8:	e1a04000 	mov	r4, r0
400081ec:	e24dd01c 	sub	sp, sp, #28
400081f0:	e1a05001 	mov	r5, r1
400081f4:	e28d0008 	add	r0, sp, #8
400081f8:	eb003737 	bl	40015edc <TCNetParams::TCNetParams()>
400081fc:	e594200c 	ldr	r2, [r4, #12]
40008200:	e300358c 	movw	r3, #1420	; 0x58c
40008204:	e58d5000 	str	r5, [sp]
40008208:	e3a01000 	mov	r1, #0
4000820c:	e28d0008 	add	r0, sp, #8
40008210:	eb0037db 	bl	40016184 <TCNetParams::Builder(tcnetparams::Params const*, char*, unsigned long, unsigned long&)>
40008214:	e28dd01c 	add	sp, sp, #28
40008218:	e8bd8030 	pop	{r4, r5, pc}

4000821c <RemoteConfig::HandleGetGpsTxt(unsigned long&)>:
4000821c:	e92d4030 	push	{r4, r5, lr}
40008220:	e1a04000 	mov	r4, r0
40008224:	e24dd01c 	sub	sp, sp, #28
40008228:	e1a05001 	mov	r5, r1
4000822c:	e28d000c 	add	r0, sp, #12
40008230:	eb00476a 	bl	40019fe0 <GPSParams::GPSParams()>
40008234:	e594200c 	ldr	r2, [r4, #12]
40008238:	e300358c 	movw	r3, #1420	; 0x58c
4000823c:	e58d5000 	str	r5, [sp]
40008240:	e3a01000 	mov	r1, #0
40008244:	e28d000c 	add	r0, sp, #12
40008248:	eb0047e3 	bl	4001a1dc <GPSParams::Builder(gpsparams::Params const*, char*, unsigned long, unsigned long&)>
4000824c:	e28dd01c 	add	sp, sp, #28
40008250:	e8bd8030 	pop	{r4, r5, pc}

40008254 <RemoteConfig::HandleGetLtcEtcTxt(unsigned long&)>:
40008254:	e92d4030 	push	{r4, r5, lr}
40008258:	e1a04000 	mov	r4, r0
4000825c:	e24dd024 	sub	sp, sp, #36	; 0x24
40008260:	e1a05001 	mov	r5, r1
40008264:	e28d000c 	add	r0, sp, #12
40008268:	eb0017a6 	bl	4000e108 <LtcEtcParams::LtcEtcParams()>
4000826c:	e594200c 	ldr	r2, [r4, #12]
40008270:	e300358c 	movw	r3, #1420	; 0x58c
40008274:	e58d5000 	str	r5, [sp]
40008278:	e3a01000 	mov	r1, #0
4000827c:	e28d000c 	add	r0, sp, #12
40008280:	eb001843 	bl	4000e394 <LtcEtcParams::Builder(ltcetcparams::Params const*, char*, unsigned long, unsigned long&)>
40008284:	e28dd024 	add	sp, sp, #36	; 0x24
40008288:	e8bd8030 	pop	{r4, r5, pc}

4000828c <RemoteConfig::HandleSet(void*, unsigned long)>:
4000828c:	e92d4030 	push	{r4, r5, lr}
40008290:	e2515000 	subs	r5, r1, #0
40008294:	e24dd014 	sub	sp, sp, #20
40008298:	e1a04000 	mov	r4, r0
4000829c:	e58d2004 	str	r2, [sp, #4]
400082a0:	1a000012 	bne	400082f0 <RemoteConfig::HandleSet(void*, unsigned long)+0x64>
400082a4:	e590100c 	ldr	r1, [r0, #12]
400082a8:	e28d200c 	add	r2, sp, #12
400082ac:	e300358b 	movw	r3, #1419	; 0x58b
400082b0:	e58d300c 	str	r3, [sp, #12]
400082b4:	e2811001 	add	r1, r1, #1
400082b8:	eb00027a 	bl	40008ca8 <RemoteConfig::GetIndex(void const*, unsigned long&)>
400082bc:	e3500000 	cmp	r0, #0
400082c0:	ba00001d 	blt	4000833c <RemoteConfig::HandleSet(void*, unsigned long)+0xb0>
400082c4:	e59f3090 	ldr	r3, [pc, #144]	; 4000835c <RemoteConfig::HandleSet(void*, unsigned long)+0xd0>
400082c8:	e3a02018 	mov	r2, #24
400082cc:	e0233092 	mla	r3, r2, r0, r3
400082d0:	e593200c 	ldr	r2, [r3, #12]
400082d4:	e5933008 	ldr	r3, [r3, #8]
400082d8:	e08400c2 	add	r0, r4, r2, asr #1
400082dc:	e3120001 	tst	r2, #1
400082e0:	179420c2 	ldrne	r2, [r4, r2, asr #1]
400082e4:	17923003 	ldrne	r3, [r2, r3]
400082e8:	e12fff33 	blx	r3
400082ec:	ea000012 	b	4000833c <RemoteConfig::HandleSet(void*, unsigned long)+0xb0>
400082f0:	e300358c 	movw	r3, #1420	; 0x58c
400082f4:	e1520003 	cmp	r2, r3
400082f8:	8a00000f 	bhi	4000833c <RemoteConfig::HandleSet(void*, unsigned long)+0xb0>
400082fc:	e59f305c 	ldr	r3, [pc, #92]	; 40008360 <RemoteConfig::HandleSet(void*, unsigned long)+0xd4>
40008300:	e5d33000 	ldrb	r3, [r3]
40008304:	e3130001 	tst	r3, #1
40008308:	0a00000d 	beq	40008344 <RemoteConfig::HandleSet(void*, unsigned long)+0xb8>
4000830c:	e5d53000 	ldrb	r3, [r5]
40008310:	e353007b 	cmp	r3, #123	; 0x7b
40008314:	1a00000a 	bne	40008344 <RemoteConfig::HandleSet(void*, unsigned long)+0xb8>
40008318:	e2421001 	sub	r1, r2, #1
4000831c:	e1a00005 	mov	r0, r5
40008320:	e3a02000 	mov	r2, #0
40008324:	e6ff1071 	uxth	r1, r1
40008328:	eb00739e 	bl	400251a8 <properties::convert_json_file(char*, unsigned long, bool)>
4000832c:	e3500000 	cmp	r0, #0
40008330:	c6ff0070 	uxthgt	r0, r0
40008334:	c5840018 	strgt	r0, [r4, #24]
40008338:	ca000002 	bgt	40008348 <RemoteConfig::HandleSet(void*, unsigned long)+0xbc>
4000833c:	e28dd014 	add	sp, sp, #20
40008340:	e8bd8030 	pop	{r4, r5, pc}
40008344:	e5842018 	str	r2, [r4, #24]
40008348:	e584500c 	str	r5, [r4, #12]
4000834c:	e28d2004 	add	r2, sp, #4
40008350:	e2851001 	add	r1, r5, #1
40008354:	e1a00004 	mov	r0, r4
40008358:	eaffffd6 	b	400082b8 <RemoteConfig::HandleSet(void*, unsigned long)+0x2c>
4000835c:	4002e240 	andmi	lr, r2, r0, asr #4
40008360:	40062eb1 			; <UNDEFINED> instruction: 0x40062eb1

40008364 <RemoteConfig::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)>:
40008364:	e242c001 	sub	ip, r2, #1
40008368:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
4000836c:	e1a0e000 	mov	lr, r0
40008370:	e5802018 	str	r2, [r0, #24]
40008374:	e580100c 	str	r1, [r0, #12]
40008378:	e5803014 	str	r3, [r0, #20]
4000837c:	e7d1400c 	ldrb	r4, [r1, ip]
40008380:	e354000a 	cmp	r4, #10
40008384:	11a0c002 	movne	ip, r2
40008388:	e580c018 	str	ip, [r0, #24]
4000838c:	e5d14000 	ldrb	r4, [r1]
40008390:	e354003f 	cmp	r4, #63	; 0x3f
40008394:	1a000027 	bne	40008438 <RemoteConfig::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xd4>
40008398:	e24cc001 	sub	ip, ip, #1
4000839c:	e3a02000 	mov	r2, #0
400083a0:	e580c018 	str	ip, [r0, #24]
400083a4:	e59f014c 	ldr	r0, [pc, #332]	; 400084f8 <RemoteConfig::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x194>
400083a8:	e1a06000 	mov	r6, r0
400083ac:	e5d0500e 	ldrb	r5, [r0, #14]
400083b0:	e1d040bc 	ldrh	r4, [r0, #12]
400083b4:	e3550000 	cmp	r5, #0
400083b8:	0a000009 	beq	400083e4 <RemoteConfig::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x80>
400083bc:	e15c0004 	cmp	ip, r4
400083c0:	8a000009 	bhi	400083ec <RemoteConfig::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x88>
400083c4:	e2822001 	add	r2, r2, #1
400083c8:	e2800010 	add	r0, r0, #16
400083cc:	e3520008 	cmp	r2, #8
400083d0:	1afffff5 	bne	400083ac <RemoteConfig::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x48>
400083d4:	e3021905 	movw	r1, #10501	; 0x2905
400083d8:	e58d101c 	str	r1, [sp, #28]
400083dc:	e59f1118 	ldr	r1, [pc, #280]	; 400084fc <RemoteConfig::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x198>
400083e0:	ea00003a 	b	400084d0 <RemoteConfig::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x16c>
400083e4:	e15c0004 	cmp	ip, r4
400083e8:	1afffff5 	bne	400083c4 <RemoteConfig::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x60>
400083ec:	e5905008 	ldr	r5, [r0, #8]
400083f0:	e2817001 	add	r7, r1, #1
400083f4:	e0854004 	add	r4, r5, r4
400083f8:	e1540005 	cmp	r4, r5
400083fc:	0a000004 	beq	40008414 <RemoteConfig::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xb0>
40008400:	e4d79001 	ldrb	r9, [r7], #1
40008404:	e4d58001 	ldrb	r8, [r5], #1
40008408:	e1590008 	cmp	r9, r8
4000840c:	0afffff9 	beq	400083f8 <RemoteConfig::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x94>
40008410:	eaffffeb 	b	400083c4 <RemoteConfig::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x60>
40008414:	e0863202 	add	r3, r6, r2, lsl #4
40008418:	e5931004 	ldr	r1, [r3, #4]
4000841c:	e7963202 	ldr	r3, [r6, r2, lsl #4]
40008420:	e08e00c1 	add	r0, lr, r1, asr #1
40008424:	e3110001 	tst	r1, #1
40008428:	179e20c1 	ldrne	r2, [lr, r1, asr #1]
4000842c:	17923003 	ldrne	r3, [r2, r3]
40008430:	e8bd43f0 	pop	{r4, r5, r6, r7, r8, r9, lr}
40008434:	e12fff13 	bx	r3
40008438:	e5d0201d 	ldrb	r2, [r0, #29]
4000843c:	e3520000 	cmp	r2, #0
40008440:	18bd83f0 	popne	{r4, r5, r6, r7, r8, r9, pc}
40008444:	e3540023 	cmp	r4, #35	; 0x23
40008448:	1a000002 	bne	40008458 <RemoteConfig::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xf4>
4000844c:	e8bd43f0 	pop	{r4, r5, r6, r7, r8, r9, lr}
40008450:	e1a01002 	mov	r1, r2
40008454:	eaffff8c 	b	4000828c <RemoteConfig::HandleSet(void*, unsigned long)>
40008458:	e3540021 	cmp	r4, #33	; 0x21
4000845c:	18bd83f0 	popne	{r4, r5, r6, r7, r8, r9, pc}
40008460:	e24c2001 	sub	r2, ip, #1
40008464:	e5802018 	str	r2, [r0, #24]
40008468:	e3520005 	cmp	r2, #5
4000846c:	9a000013 	bls	400084c0 <RemoteConfig::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x15c>
40008470:	e59f4088 	ldr	r4, [pc, #136]	; 40008500 <RemoteConfig::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x19c>
40008474:	e2810001 	add	r0, r1, #1
40008478:	e2817006 	add	r7, r1, #6
4000847c:	e1a0c000 	mov	ip, r0
40008480:	e15c0007 	cmp	ip, r7
40008484:	0a000014 	beq	400084dc <RemoteConfig::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x178>
40008488:	e4dc6001 	ldrb	r6, [ip], #1
4000848c:	e4d45001 	ldrb	r5, [r4], #1
40008490:	e1560005 	cmp	r6, r5
40008494:	0afffff9 	beq	40008480 <RemoteConfig::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x11c>
40008498:	e3520008 	cmp	r2, #8
4000849c:	9a000007 	bls	400084c0 <RemoteConfig::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x15c>
400084a0:	e59f205c 	ldr	r2, [pc, #92]	; 40008504 <RemoteConfig::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x1a0>
400084a4:	e2811009 	add	r1, r1, #9
400084a8:	e1500001 	cmp	r0, r1
400084ac:	0a00000f 	beq	400084f0 <RemoteConfig::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x18c>
400084b0:	e4d04001 	ldrb	r4, [r0], #1
400084b4:	e4d2c001 	ldrb	ip, [r2], #1
400084b8:	e154000c 	cmp	r4, ip
400084bc:	0afffff9 	beq	400084a8 <RemoteConfig::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x144>
400084c0:	e59f1040 	ldr	r1, [pc, #64]	; 40008508 <RemoteConfig::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x1a4>
400084c4:	e3022905 	movw	r2, #10501	; 0x2905
400084c8:	e58d201c 	str	r2, [sp, #28]
400084cc:	e3a02008 	mov	r2, #8
400084d0:	e59e0010 	ldr	r0, [lr, #16]
400084d4:	e8bd43f0 	pop	{r4, r5, r6, r7, r8, r9, lr}
400084d8:	eafffd53 	b	40007a2c <Network::SendTo(long, void const*, unsigned long, unsigned long, unsigned short) [clone .isra.0]>
400084dc:	e3a03000 	mov	r3, #0
400084e0:	e59f2024 	ldr	r2, [pc, #36]	; 4000850c <RemoteConfig::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x1a8>
400084e4:	e1a0000e 	mov	r0, lr
400084e8:	e7923203 	ldr	r3, [r2, r3, lsl #4]
400084ec:	eaffffcf 	b	40008430 <RemoteConfig::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xcc>
400084f0:	e3a03001 	mov	r3, #1
400084f4:	eafffff9 	b	400084e0 <RemoteConfig::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x17c>
400084f8:	4002df2c 	andmi	sp, r2, ip, lsr #30
400084fc:	4002ded3 	ldrdmi	sp, [r2], -r3
40008500:	4002debb 			; <UNDEFINED> instruction: 0x4002debb
40008504:	4002dec1 	andmi	sp, r2, r1, asr #29
40008508:	4002deca 	andmi	sp, r2, sl, asr #29
4000850c:	4002dedc 	ldrdmi	sp, [r2], -ip

40008510 <RemoteConfig::staticCallbackFunction(unsigned char const*, unsigned long, unsigned long, unsigned short)>:
40008510:	e92d4007 	push	{r0, r1, r2, lr}
40008514:	e58d3000 	str	r3, [sp]
40008518:	e1a03002 	mov	r3, r2
4000851c:	e1a02001 	mov	r2, r1
40008520:	e1a01000 	mov	r1, r0
40008524:	e59f000c 	ldr	r0, [pc, #12]	; 40008538 <RemoteConfig::staticCallbackFunction(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x28>
40008528:	e5900000 	ldr	r0, [r0]
4000852c:	ebffff8c 	bl	40008364 <RemoteConfig::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)>
40008530:	e28dd00c 	add	sp, sp, #12
40008534:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40008538:	40034050 	andmi	r4, r3, r0, asr r0

4000853c <RemoteConfig::HandleSetRconfigTxt()>:
4000853c:	e92d4010 	push	{r4, lr}
40008540:	e1a04000 	mov	r4, r0
40008544:	e24dd020 	sub	sp, sp, #32
40008548:	e1a0000d 	mov	r0, sp
4000854c:	eb00008a 	bl	4000877c <RemoteConfigParams::RemoteConfigParams()>
40008550:	e5942018 	ldr	r2, [r4, #24]
40008554:	e1a0000d 	mov	r0, sp
40008558:	e594100c 	ldr	r1, [r4, #12]
4000855c:	eb0000a7 	bl	40008800 <RemoteConfigParams::Load(char const*, unsigned long)>
40008560:	e1a01004 	mov	r1, r4
40008564:	e1a0000d 	mov	r0, sp
40008568:	eb000165 	bl	40008b04 <RemoteConfigParams::Set(RemoteConfig*)>
4000856c:	e28dd020 	add	sp, sp, #32
40008570:	e8bd8010 	pop	{r4, pc}

40008574 <RemoteConfig::HandleSetEnvTxt()>:
40008574:	e92d4013 	push	{r0, r1, r4, lr}
40008578:	e1a04000 	mov	r4, r0
4000857c:	e28d0004 	add	r0, sp, #4
40008580:	eb00511f 	bl	4001ca04 <EnvParams::EnvParams()>
40008584:	e5942018 	ldr	r2, [r4, #24]
40008588:	e28d0004 	add	r0, sp, #4
4000858c:	e594100c 	ldr	r1, [r4, #12]
40008590:	eb00511c 	bl	4001ca08 <EnvParams::LoadAndSet(char const*, unsigned long)>
40008594:	e28dd008 	add	sp, sp, #8
40008598:	e8bd8010 	pop	{r4, pc}

4000859c <RemoteConfig::HandleSetNetworkTxt()>:
4000859c:	e92d4010 	push	{r4, lr}
400085a0:	e1a04000 	mov	r4, r0
400085a4:	e24dd060 	sub	sp, sp, #96	; 0x60
400085a8:	e1a0000d 	mov	r0, sp
400085ac:	eb006804 	bl	400225c4 <NetworkParams::NetworkParams()>
400085b0:	e5942018 	ldr	r2, [r4, #24]
400085b4:	e1a0000d 	mov	r0, sp
400085b8:	e594100c 	ldr	r1, [r4, #12]
400085bc:	eb006823 	bl	40022650 <NetworkParams::Load(char const*, unsigned long)>
400085c0:	e28dd060 	add	sp, sp, #96	; 0x60
400085c4:	e8bd8010 	pop	{r4, pc}

400085c8 <RemoteConfig::HandleSetArtnetTxt()>:
400085c8:	e92d4010 	push	{r4, lr}
400085cc:	e1a04000 	mov	r4, r0
400085d0:	e24dd0e0 	sub	sp, sp, #224	; 0xe0
400085d4:	e28d0004 	add	r0, sp, #4
400085d8:	eb000d7a 	bl	4000bbc8 <ArtNetParams::ArtNetParams()>
400085dc:	e5942018 	ldr	r2, [r4, #24]
400085e0:	e28d0004 	add	r0, sp, #4
400085e4:	e594100c 	ldr	r1, [r4, #12]
400085e8:	eb000db0 	bl	4000bcb0 <ArtNetParams::Load(char const*, unsigned long)>
400085ec:	e28dd0e0 	add	sp, sp, #224	; 0xe0
400085f0:	e8bd8010 	pop	{r4, pc}

400085f4 <RemoteConfig::HandleSetLtcTxt()>:
400085f4:	e92d4010 	push	{r4, lr}
400085f8:	e1a04000 	mov	r4, r0
400085fc:	e24dd028 	sub	sp, sp, #40	; 0x28
40008600:	e28d0004 	add	r0, sp, #4
40008604:	eb00186f 	bl	4000e7c8 <LtcParams::LtcParams()>
40008608:	e5942018 	ldr	r2, [r4, #24]
4000860c:	e28d0004 	add	r0, sp, #4
40008610:	e594100c 	ldr	r1, [r4, #12]
40008614:	eb0018b8 	bl	4000e8fc <LtcParams::Load(char const*, unsigned long)>
40008618:	e28dd028 	add	sp, sp, #40	; 0x28
4000861c:	e8bd8010 	pop	{r4, pc}

40008620 <RemoteConfig::HandleSetLdisplayTxt()>:
40008620:	e92d4010 	push	{r4, lr}
40008624:	e1a04000 	mov	r4, r0
40008628:	e24dd030 	sub	sp, sp, #48	; 0x30
4000862c:	e1a0000d 	mov	r0, sp
40008630:	eb0012ba 	bl	4000d120 <LtcDisplayParams::LtcDisplayParams()>
40008634:	e5942018 	ldr	r2, [r4, #24]
40008638:	e1a0000d 	mov	r0, sp
4000863c:	e594100c 	ldr	r1, [r4, #12]
40008640:	eb001307 	bl	4000d264 <LtcDisplayParams::Load(char const*, unsigned long)>
40008644:	e28dd030 	add	sp, sp, #48	; 0x30
40008648:	e8bd8010 	pop	{r4, pc}

4000864c <RemoteConfig::HandleSetTCNetTxt()>:
4000864c:	e92d401f 	push	{r0, r1, r2, r3, r4, lr}
40008650:	e1a04000 	mov	r4, r0
40008654:	e1a0000d 	mov	r0, sp
40008658:	eb00361f 	bl	40015edc <TCNetParams::TCNetParams()>
4000865c:	e5942018 	ldr	r2, [r4, #24]
40008660:	e1a0000d 	mov	r0, sp
40008664:	e594100c 	ldr	r1, [r4, #12]
40008668:	eb003642 	bl	40015f78 <TCNetParams::Load(char const*, unsigned long)>
4000866c:	e28dd010 	add	sp, sp, #16
40008670:	e8bd8010 	pop	{r4, pc}

40008674 <RemoteConfig::HandleSetGpsTxt()>:
40008674:	e92d401f 	push	{r0, r1, r2, r3, r4, lr}
40008678:	e1a04000 	mov	r4, r0
4000867c:	e28d0004 	add	r0, sp, #4
40008680:	eb004656 	bl	40019fe0 <GPSParams::GPSParams()>
40008684:	e5942018 	ldr	r2, [r4, #24]
40008688:	e28d0004 	add	r0, sp, #4
4000868c:	e594100c 	ldr	r1, [r4, #12]
40008690:	eb004675 	bl	4001a06c <GPSParams::Load(char const*, unsigned long)>
40008694:	e28dd010 	add	sp, sp, #16
40008698:	e8bd8010 	pop	{r4, pc}

4000869c <RemoteConfig::HandleSetLtcEtcTxt()>:
4000869c:	e92d4010 	push	{r4, lr}
400086a0:	e1a04000 	mov	r4, r0
400086a4:	e24dd018 	sub	sp, sp, #24
400086a8:	e28d0004 	add	r0, sp, #4
400086ac:	eb001695 	bl	4000e108 <LtcEtcParams::LtcEtcParams()>
400086b0:	e5942018 	ldr	r2, [r4, #24]
400086b4:	e28d0004 	add	r0, sp, #4
400086b8:	e594100c 	ldr	r1, [r4, #12]
400086bc:	eb0016b2 	bl	4000e18c <LtcEtcParams::Load(char const*, unsigned long)>
400086c0:	e28dd018 	add	sp, sp, #24
400086c4:	e8bd8010 	pop	{r4, pc}

400086c8 <RemoteConfig::TftpExit()>:
400086c8:	e590300c 	ldr	r3, [r0, #12]
400086cc:	e3a02006 	mov	r2, #6
400086d0:	e5802018 	str	r2, [r0, #24]
400086d4:	e3a02030 	mov	r2, #48	; 0x30
400086d8:	e5c32006 	strb	r2, [r3, #6]
400086dc:	eafffd89 	b	40007d08 <RemoteConfig::HandleTftpSet()>

400086e0 <RemoteConfig::HandleFactory()>:
400086e0:	e59f3024 	ldr	r3, [pc, #36]	; 4000870c <RemoteConfig::HandleFactory()+0x2c>
400086e4:	e92d4070 	push	{r4, r5, r6, lr}
400086e8:	e3a04000 	mov	r4, #0
400086ec:	e5935000 	ldr	r5, [r3]
400086f0:	e1a01004 	mov	r1, r4
400086f4:	e1a00005 	mov	r0, r5
400086f8:	e2844001 	add	r4, r4, #1
400086fc:	eb00500a 	bl	4001c72c <ConfigStore::ResetSetList(configstore::Store)>
40008700:	e354001b 	cmp	r4, #27
40008704:	1afffff9 	bne	400086f0 <RemoteConfig::HandleFactory()+0x10>
40008708:	e8bd8070 	pop	{r4, r5, r6, pc}
4000870c:	40034084 	andmi	r4, r3, r4, lsl #1

40008710 <RemoteConfigParamsStore::Update(remoteconfigparams::Params const*)>:
40008710:	e92d401f 	push	{r0, r1, r2, r3, r4, lr}
40008714:	e1a03000 	mov	r3, r0
40008718:	e59f0024 	ldr	r0, [pc, #36]	; 40008744 <RemoteConfigParamsStore::Update(remoteconfigparams::Params const*)+0x34>
4000871c:	e3a02000 	mov	r2, #0
40008720:	e58d2008 	str	r2, [sp, #8]
40008724:	e3a01020 	mov	r1, #32
40008728:	e58d1000 	str	r1, [sp]
4000872c:	e3a0100a 	mov	r1, #10
40008730:	e58d2004 	str	r2, [sp, #4]
40008734:	e5900000 	ldr	r0, [r0]
40008738:	eb00500a 	bl	4001c768 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
4000873c:	e28dd014 	add	sp, sp, #20
40008740:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40008744:	40034084 	andmi	r4, r3, r4, lsl #1

40008748 <RemoteConfigParamsStore::Copy(remoteconfigparams::Params*)>:
40008748:	e92d4007 	push	{r0, r1, r2, lr}
4000874c:	e1a02000 	mov	r2, r0
40008750:	e3a01001 	mov	r1, #1
40008754:	e3a00000 	mov	r0, #0
40008758:	e1cd00f0 	strd	r0, [sp]
4000875c:	e59f0014 	ldr	r0, [pc, #20]	; 40008778 <RemoteConfigParamsStore::Copy(remoteconfigparams::Params*)+0x30>
40008760:	e3a03020 	mov	r3, #32
40008764:	e3a0100a 	mov	r1, #10
40008768:	e5900000 	ldr	r0, [r0]
4000876c:	eb00501f 	bl	4001c7f0 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)>
40008770:	e28dd00c 	add	sp, sp, #12
40008774:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40008778:	40034084 	andmi	r4, r3, r4, lsl #1

4000877c <RemoteConfigParams::RemoteConfigParams()>:
4000877c:	e1a03000 	mov	r3, r0
40008780:	e2801020 	add	r1, r0, #32
40008784:	e3a02000 	mov	r2, #0
40008788:	e1530001 	cmp	r3, r1
4000878c:	012fff1e 	bxeq	lr
40008790:	e4c32001 	strb	r2, [r3], #1
40008794:	eafffffb 	b	40008788 <RemoteConfigParams::RemoteConfigParams()+0xc>

40008798 <RemoteConfigParams::Load()>:
40008798:	e3a03000 	mov	r3, #0
4000879c:	e1a02000 	mov	r2, r0
400087a0:	e92d4013 	push	{r0, r1, r4, lr}
400087a4:	e1a04000 	mov	r4, r0
400087a8:	e5c03000 	strb	r3, [r0]
400087ac:	e5c03001 	strb	r3, [r0, #1]
400087b0:	e5c03002 	strb	r3, [r0, #2]
400087b4:	e5c03003 	strb	r3, [r0, #3]
400087b8:	e1a0000d 	mov	r0, sp
400087bc:	e59f1034 	ldr	r1, [pc, #52]	; 400087f8 <RemoteConfigParams::Load()+0x60>
400087c0:	eb007309 	bl	400253ec <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
400087c4:	e59f1030 	ldr	r1, [pc, #48]	; 400087fc <RemoteConfigParams::Load()+0x64>
400087c8:	e1a0000d 	mov	r0, sp
400087cc:	eb007309 	bl	400253f8 <ReadConfigFile::Read(char const*)>
400087d0:	e3500000 	cmp	r0, #0
400087d4:	e1a00004 	mov	r0, r4
400087d8:	0a000004 	beq	400087f0 <RemoteConfigParams::Load()+0x58>
400087dc:	ebffffcb 	bl	40008710 <RemoteConfigParamsStore::Update(remoteconfigparams::Params const*)>
400087e0:	e1a0000d 	mov	r0, sp
400087e4:	eb007302 	bl	400253f4 <ReadConfigFile::~ReadConfigFile()>
400087e8:	e28dd008 	add	sp, sp, #8
400087ec:	e8bd8010 	pop	{r4, pc}
400087f0:	ebffffd4 	bl	40008748 <RemoteConfigParamsStore::Copy(remoteconfigparams::Params*)>
400087f4:	eafffff9 	b	400087e0 <RemoteConfigParams::Load()+0x48>
400087f8:	40008914 	andmi	r8, r0, r4, lsl r9
400087fc:	4002e1a4 	andmi	lr, r2, r4, lsr #3

40008800 <RemoteConfigParams::Load(char const*, unsigned long)>:
40008800:	e3a03000 	mov	r3, #0
40008804:	e92d4073 	push	{r0, r1, r4, r5, r6, lr}
40008808:	e1a04000 	mov	r4, r0
4000880c:	e5c03000 	strb	r3, [r0]
40008810:	e1a05001 	mov	r5, r1
40008814:	e5c03001 	strb	r3, [r0, #1]
40008818:	e1a06002 	mov	r6, r2
4000881c:	e5c03002 	strb	r3, [r0, #2]
40008820:	e1a02000 	mov	r2, r0
40008824:	e5c03003 	strb	r3, [r0, #3]
40008828:	e1a0000d 	mov	r0, sp
4000882c:	e59f1028 	ldr	r1, [pc, #40]	; 4000885c <RemoteConfigParams::Load(char const*, unsigned long)+0x5c>
40008830:	eb0072ed 	bl	400253ec <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
40008834:	e1a02006 	mov	r2, r6
40008838:	e1a01005 	mov	r1, r5
4000883c:	e1a0000d 	mov	r0, sp
40008840:	eb007316 	bl	400254a0 <ReadConfigFile::Read(char const*, unsigned int)>
40008844:	e1a00004 	mov	r0, r4
40008848:	ebffffb0 	bl	40008710 <RemoteConfigParamsStore::Update(remoteconfigparams::Params const*)>
4000884c:	e1a0000d 	mov	r0, sp
40008850:	eb0072e7 	bl	400253f4 <ReadConfigFile::~ReadConfigFile()>
40008854:	e28dd008 	add	sp, sp, #8
40008858:	e8bd8070 	pop	{r4, r5, r6, pc}
4000885c:	40008914 	andmi	r8, r0, r4, lsl r9

40008860 <RemoteConfigParams::SetBool(unsigned char, unsigned long)>:
40008860:	e5903000 	ldr	r3, [r0]
40008864:	e3510000 	cmp	r1, #0
40008868:	11833002 	orrne	r3, r3, r2
4000886c:	01c33002 	biceq	r3, r3, r2
40008870:	e5803000 	str	r3, [r0]
40008874:	e12fff1e 	bx	lr

40008878 <RemoteConfigParams::callbackFunction(char const*)>:
40008878:	e92d41f3 	push	{r0, r1, r4, r5, r6, r7, r8, lr}
4000887c:	e1a04000 	mov	r4, r0
40008880:	e59f7084 	ldr	r7, [pc, #132]	; 4000890c <RemoteConfigParams::callbackFunction(char const*)+0x94>
40008884:	e1a06001 	mov	r6, r1
40008888:	e3a05005 	mov	r5, #5
4000888c:	e5971000 	ldr	r1, [r7]
40008890:	e28d2004 	add	r2, sp, #4
40008894:	e5978004 	ldr	r8, [r7, #4]
40008898:	e1a00006 	mov	r0, r6
4000889c:	eb00740e 	bl	400258dc <Sscan::Uint8(char const*, char const*, unsigned char&)>
400088a0:	e3500000 	cmp	r0, #0
400088a4:	0a000012 	beq	400088f4 <RemoteConfigParams::callbackFunction(char const*)+0x7c>
400088a8:	e2555001 	subs	r5, r5, #1
400088ac:	e2877008 	add	r7, r7, #8
400088b0:	1afffff5 	bne	4000888c <RemoteConfigParams::callbackFunction(char const*)+0x14>
400088b4:	e59f1054 	ldr	r1, [pc, #84]	; 40008910 <RemoteConfigParams::callbackFunction(char const*)+0x98>
400088b8:	e3a03017 	mov	r3, #23
400088bc:	e58d3004 	str	r3, [sp, #4]
400088c0:	e2842008 	add	r2, r4, #8
400088c4:	e28d3004 	add	r3, sp, #4
400088c8:	e1a00006 	mov	r0, r6
400088cc:	eb007320 	bl	40025554 <Sscan::Char(char const*, char const*, char*, unsigned long&)>
400088d0:	e3500000 	cmp	r0, #0
400088d4:	1a00000a 	bne	40008904 <RemoteConfigParams::callbackFunction(char const*)+0x8c>
400088d8:	e59d3004 	ldr	r3, [sp, #4]
400088dc:	e0843003 	add	r3, r4, r3
400088e0:	e5c35008 	strb	r5, [r3, #8]
400088e4:	e5943000 	ldr	r3, [r4]
400088e8:	e3833010 	orr	r3, r3, #16
400088ec:	e5843000 	str	r3, [r4]
400088f0:	ea000003 	b	40008904 <RemoteConfigParams::callbackFunction(char const*)+0x8c>
400088f4:	e5dd1004 	ldrb	r1, [sp, #4]
400088f8:	e1a02008 	mov	r2, r8
400088fc:	e1a00004 	mov	r0, r4
40008900:	ebffffd6 	bl	40008860 <RemoteConfigParams::SetBool(unsigned char, unsigned long)>
40008904:	e28dd008 	add	sp, sp, #8
40008908:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000890c:	4002e1b0 			; <UNDEFINED> instruction: 0x4002e1b0
40008910:	4002e156 	andmi	lr, r2, r6, asr r1

40008914 <RemoteConfigParams::staticCallbackFunction(void*, char const*)>:
40008914:	eaffffd7 	b	40008878 <RemoteConfigParams::callbackFunction(char const*)>

40008918 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)>:
40008918:	e3510000 	cmp	r1, #0
4000891c:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
40008920:	e1a04000 	mov	r4, r0
40008924:	e24dd01c 	sub	sp, sp, #28
40008928:	e1a05002 	mov	r5, r2
4000892c:	e1a06003 	mov	r6, r3
40008930:	0a000006 	beq	40008950 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x38>
40008934:	e1a03000 	mov	r3, r0
40008938:	e2810020 	add	r0, r1, #32
4000893c:	e1510000 	cmp	r1, r0
40008940:	0a000003 	beq	40008954 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x3c>
40008944:	e4d12001 	ldrb	r2, [r1], #1
40008948:	e4c32001 	strb	r2, [r3], #1
4000894c:	eafffffa 	b	4000893c <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x24>
40008950:	ebffff7c 	bl	40008748 <RemoteConfigParamsStore::Copy(remoteconfigparams::Params*)>
40008954:	e59f1184 	ldr	r1, [pc, #388]	; 40008ae0 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x1c8>
40008958:	e1a03006 	mov	r3, r6
4000895c:	e59f7180 	ldr	r7, [pc, #384]	; 40008ae4 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x1cc>
40008960:	e1a02005 	mov	r2, r5
40008964:	e59f817c 	ldr	r8, [pc, #380]	; 40008ae8 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x1d0>
40008968:	e28d000c 	add	r0, sp, #12
4000896c:	e59f5178 	ldr	r5, [pc, #376]	; 40008aec <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x1d4>
40008970:	e3a06005 	mov	r6, #5
40008974:	e59f9174 	ldr	r9, [pc, #372]	; 40008af0 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x1d8>
40008978:	eb00715b 	bl	40024eec <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)>
4000897c:	e1ddc1b2 	ldrh	ip, [sp, #18]
40008980:	e1dda1b0 	ldrh	sl, [sp, #16]
40008984:	e15c000a 	cmp	ip, sl
40008988:	2a00001e 	bcs	40008a08 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0xf0>
4000898c:	e5952004 	ldr	r2, [r5, #4]
40008990:	e594e000 	ldr	lr, [r4]
40008994:	e59d000c 	ldr	r0, [sp, #12]
40008998:	e04aa00c 	sub	sl, sl, ip
4000899c:	e080000c 	add	r0, r0, ip
400089a0:	e1d2c00e 	bics	ip, r2, lr
400089a4:	e5953000 	ldr	r3, [r5]
400089a8:	e00eb002 	and	fp, lr, r2
400089ac:	e5dd1014 	ldrb	r1, [sp, #20]
400089b0:	0a000004 	beq	400089c8 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0xb0>
400089b4:	e3510000 	cmp	r1, #0
400089b8:	1a000007 	bne	400089dc <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0xc4>
400089bc:	e58d1000 	str	r1, [sp]
400089c0:	e1a02009 	mov	r2, r9
400089c4:	ea000009 	b	400089f0 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0xd8>
400089c8:	e3510000 	cmp	r1, #0
400089cc:	03a02001 	moveq	r2, #1
400089d0:	058d2000 	streq	r2, [sp]
400089d4:	01a02008 	moveq	r2, r8
400089d8:	0a000004 	beq	400089f0 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0xd8>
400089dc:	e042200b 	sub	r2, r2, fp
400089e0:	e16f2f12 	clz	r2, r2
400089e4:	e1a022a2 	lsr	r2, r2, #5
400089e8:	e58d2000 	str	r2, [sp]
400089ec:	e1a02007 	mov	r2, r7
400089f0:	e1a0100a 	mov	r1, sl
400089f4:	eb009082 	bl	4002cc04 <snprintf>
400089f8:	e15a0000 	cmp	sl, r0
400089fc:	a1dd31b2 	ldrhge	r3, [sp, #18]
40008a00:	a0830000 	addge	r0, r3, r0
40008a04:	a1cd01b2 	strhge	r0, [sp, #18]
40008a08:	e2566001 	subs	r6, r6, #1
40008a0c:	e2855008 	add	r5, r5, #8
40008a10:	1affffd9 	bne	4000897c <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x64>
40008a14:	e1dd11b2 	ldrh	r1, [sp, #18]
40008a18:	e1dd51b0 	ldrh	r5, [sp, #16]
40008a1c:	e1510005 	cmp	r1, r5
40008a20:	2a000017 	bcs	40008a84 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x16c>
40008a24:	e4942008 	ldr	r2, [r4], #8
40008a28:	e59d000c 	ldr	r0, [sp, #12]
40008a2c:	e5dd3014 	ldrb	r3, [sp, #20]
40008a30:	e3120010 	tst	r2, #16
40008a34:	e0800001 	add	r0, r0, r1
40008a38:	e0455001 	sub	r5, r5, r1
40008a3c:	1a000005 	bne	40008a58 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x140>
40008a40:	e3530000 	cmp	r3, #0
40008a44:	1a000005 	bne	40008a60 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x148>
40008a48:	e59f30a4 	ldr	r3, [pc, #164]	; 40008af4 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x1dc>
40008a4c:	e59f20a4 	ldr	r2, [pc, #164]	; 40008af8 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x1e0>
40008a50:	e58d4000 	str	r4, [sp]
40008a54:	ea000004 	b	40008a6c <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x154>
40008a58:	e3530000 	cmp	r3, #0
40008a5c:	0a00001b 	beq	40008ad0 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x1b8>
40008a60:	e59f308c 	ldr	r3, [pc, #140]	; 40008af4 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x1dc>
40008a64:	e59f2090 	ldr	r2, [pc, #144]	; 40008afc <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x1e4>
40008a68:	e58d4000 	str	r4, [sp]
40008a6c:	e1a01005 	mov	r1, r5
40008a70:	eb009063 	bl	4002cc04 <snprintf>
40008a74:	e1550000 	cmp	r5, r0
40008a78:	a1dd31b2 	ldrhge	r3, [sp, #18]
40008a7c:	a0830000 	addge	r0, r3, r0
40008a80:	a1cd01b2 	strhge	r0, [sp, #18]
40008a84:	e5dd3014 	ldrb	r3, [sp, #20]
40008a88:	e3530000 	cmp	r3, #0
40008a8c:	0a00000a 	beq	40008abc <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x1a4>
40008a90:	e1dd21b2 	ldrh	r2, [sp, #18]
40008a94:	e59d300c 	ldr	r3, [sp, #12]
40008a98:	e0833002 	add	r3, r3, r2
40008a9c:	e3a0207d 	mov	r2, #125	; 0x7d
40008aa0:	e5432001 	strb	r2, [r3, #-1]
40008aa4:	e59d100c 	ldr	r1, [sp, #12]
40008aa8:	e1dd31b2 	ldrh	r3, [sp, #18]
40008aac:	e7c12003 	strb	r2, [r1, r3]
40008ab0:	e1dd31b2 	ldrh	r3, [sp, #18]
40008ab4:	e2833001 	add	r3, r3, #1
40008ab8:	e1cd31b2 	strh	r3, [sp, #18]
40008abc:	e1dd21b2 	ldrh	r2, [sp, #18]
40008ac0:	e59d3040 	ldr	r3, [sp, #64]	; 0x40
40008ac4:	e5832000 	str	r2, [r3]
40008ac8:	e28dd01c 	add	sp, sp, #28
40008acc:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
40008ad0:	e59f301c 	ldr	r3, [pc, #28]	; 40008af4 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x1dc>
40008ad4:	e59f2024 	ldr	r2, [pc, #36]	; 40008b00 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x1e8>
40008ad8:	e58d4000 	str	r4, [sp]
40008adc:	eaffffe2 	b	40008a6c <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x154>
40008ae0:	4002e1a4 	andmi	lr, r2, r4, lsr #3
40008ae4:	4002e132 	andmi	lr, r2, r2, lsr r1
40008ae8:	4002e13c 	andmi	lr, r2, ip, lsr r1
40008aec:	4002e1b0 			; <UNDEFINED> instruction: 0x4002e1b0
40008af0:	4002e13b 	andmi	lr, r2, fp, lsr r1
40008af4:	4002e156 	andmi	lr, r2, r6, asr r1
40008af8:	4002e14e 	andmi	lr, r2, lr, asr #2
40008afc:	4002e143 	andmi	lr, r2, r3, asr #2
40008b00:	4002e14f 	andmi	lr, r2, pc, asr #2

40008b04 <RemoteConfigParams::Set(RemoteConfig*)>:
40008b04:	e92d4070 	push	{r4, r5, r6, lr}
40008b08:	e1a04001 	mov	r4, r1
40008b0c:	e5901000 	ldr	r1, [r0]
40008b10:	e1a05000 	mov	r5, r0
40008b14:	e1a00004 	mov	r0, r4
40008b18:	e2011001 	and	r1, r1, #1
40008b1c:	ebfffce0 	bl	40007ea4 <RemoteConfig::SetDisable(bool)>
40008b20:	e5953000 	ldr	r3, [r5]
40008b24:	e7e020d3 	ubfx	r2, r3, #1, #1
40008b28:	e3130010 	tst	r3, #16
40008b2c:	e5c4201d 	strb	r2, [r4, #29]
40008b30:	e7e02153 	ubfx	r2, r3, #2, #1
40008b34:	e5c4201e 	strb	r2, [r4, #30]
40008b38:	e7e021d3 	ubfx	r2, r3, #3, #1
40008b3c:	e5c4201f 	strb	r2, [r4, #31]
40008b40:	e7e022d3 	ubfx	r2, r3, #5, #1
40008b44:	e5c42020 	strb	r2, [r4, #32]
40008b48:	08bd8070 	popeq	{r4, r5, r6, pc}
40008b4c:	e2851008 	add	r1, r5, #8
40008b50:	e1a00004 	mov	r0, r4
40008b54:	e8bd4070 	pop	{r4, r5, r6, lr}
40008b58:	eafffcef 	b	40007f1c <RemoteConfig::SetDisplayName(char const*)>

40008b5c <RemoteConfig::HandleReboot()>:
40008b5c:	e5d0301e 	ldrb	r3, [r0, #30]
40008b60:	e3530000 	cmp	r3, #0
40008b64:	012fff1e 	bxeq	lr
40008b68:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40008b6c:	e3a03001 	mov	r3, #1
40008b70:	e59f5120 	ldr	r5, [pc, #288]	; 40008c98 <RemoteConfig::HandleReboot()+0x13c>
40008b74:	e5c03021 	strb	r3, [r0, #33]	; 0x21
40008b78:	e5954000 	ldr	r4, [r5]
40008b7c:	e5940014 	ldr	r0, [r4, #20]
40008b80:	e3500000 	cmp	r0, #0
40008b84:	0a000009 	beq	40008bb0 <RemoteConfig::HandleReboot()+0x54>
40008b88:	e5903000 	ldr	r3, [r0]
40008b8c:	e3a01000 	mov	r1, #0
40008b90:	e5c41011 	strb	r1, [r4, #17]
40008b94:	e5933028 	ldr	r3, [r3, #40]	; 0x28
40008b98:	e12fff33 	blx	r3
40008b9c:	e594100c 	ldr	r1, [r4, #12]
40008ba0:	e1a00004 	mov	r0, r4
40008ba4:	e2511000 	subs	r1, r1, #0
40008ba8:	13a01001 	movne	r1, #1
40008bac:	eb00708b 	bl	40024de0 <Display::SetSleepTimer(bool)>
40008bb0:	e59f40e4 	ldr	r4, [pc, #228]	; 40008c9c <RemoteConfig::HandleReboot()+0x140>
40008bb4:	e5940000 	ldr	r0, [r4]
40008bb8:	eb004f31 	bl	4001c884 <ConfigStore::Flash()>
40008bbc:	e3500000 	cmp	r0, #0
40008bc0:	1afffffb 	bne	40008bb4 <RemoteConfig::HandleReboot()+0x58>
40008bc4:	e5953000 	ldr	r3, [r5]
40008bc8:	e5930014 	ldr	r0, [r3, #20]
40008bcc:	e3500000 	cmp	r0, #0
40008bd0:	0a000002 	beq	40008be0 <RemoteConfig::HandleReboot()+0x84>
40008bd4:	e5903000 	ldr	r3, [r0]
40008bd8:	e593300c 	ldr	r3, [r3, #12]
40008bdc:	e12fff33 	blx	r3
40008be0:	e5953000 	ldr	r3, [r5]
40008be4:	e5934014 	ldr	r4, [r3, #20]
40008be8:	e3540000 	cmp	r4, #0
40008bec:	0a000026 	beq	40008c8c <RemoteConfig::HandleReboot()+0x130>
40008bf0:	e1c460d4 	ldrd	r6, [r4, #4]
40008bf4:	e5943000 	ldr	r3, [r4]
40008bf8:	e3a01000 	mov	r1, #0
40008bfc:	e2478001 	sub	r8, r7, #1
40008c00:	e1a00004 	mov	r0, r4
40008c04:	e5933020 	ldr	r3, [r3, #32]
40008c08:	e1a02008 	mov	r2, r8
40008c0c:	e3a05000 	mov	r5, #0
40008c10:	e2466001 	sub	r6, r6, #1
40008c14:	e12fff33 	blx	r3
40008c18:	e1560005 	cmp	r6, r5
40008c1c:	e5943000 	ldr	r3, [r4]
40008c20:	9a000005 	bls	40008c3c <RemoteConfig::HandleReboot()+0xe0>
40008c24:	e5933014 	ldr	r3, [r3, #20]
40008c28:	e3a01020 	mov	r1, #32
40008c2c:	e1a00004 	mov	r0, r4
40008c30:	e2855001 	add	r5, r5, #1
40008c34:	e12fff33 	blx	r3
40008c38:	eafffff6 	b	40008c18 <RemoteConfig::HandleReboot()+0xbc>
40008c3c:	e5933020 	ldr	r3, [r3, #32]
40008c40:	e3a01000 	mov	r1, #0
40008c44:	e1a00004 	mov	r0, r4
40008c48:	e1a02008 	mov	r2, r8
40008c4c:	e12fff33 	blx	r3
40008c50:	e5940004 	ldr	r0, [r4, #4]
40008c54:	e3a03000 	mov	r3, #0
40008c58:	e59f1040 	ldr	r1, [pc, #64]	; 40008ca0 <RemoteConfig::HandleReboot()+0x144>
40008c5c:	e1530000 	cmp	r3, r0
40008c60:	e2833001 	add	r3, r3, #1
40008c64:	2a000002 	bcs	40008c74 <RemoteConfig::HandleReboot()+0x118>
40008c68:	e5f12001 	ldrb	r2, [r1, #1]!
40008c6c:	e3520000 	cmp	r2, #0
40008c70:	1afffff9 	bne	40008c5c <RemoteConfig::HandleReboot()+0x100>
40008c74:	e5942000 	ldr	r2, [r4]
40008c78:	e1a01007 	mov	r1, r7
40008c7c:	e1a00004 	mov	r0, r4
40008c80:	e592501c 	ldr	r5, [r2, #28]
40008c84:	e59f2014 	ldr	r2, [pc, #20]	; 40008ca0 <RemoteConfig::HandleReboot()+0x144>
40008c88:	e12fff35 	blx	r5
40008c8c:	e59f3010 	ldr	r3, [pc, #16]	; 40008ca4 <RemoteConfig::HandleReboot()+0x148>
40008c90:	e5930000 	ldr	r0, [r3]
40008c94:	eb00760e 	bl	400264d4 <Hardware::Reboot()>
40008c98:	4003407c 	andmi	r4, r3, ip, ror r0
40008c9c:	40034084 	andmi	r4, r3, r4, lsl #1
40008ca0:	4002e1d8 	ldrdmi	lr, [r2], -r8
40008ca4:	40034088 	andmi	r4, r3, r8, lsl #1

40008ca8 <RemoteConfig::GetIndex(void const*, unsigned long&)>:
40008ca8:	e92d41f3 	push	{r0, r1, r4, r5, r6, r7, r8, lr}
40008cac:	e3a00000 	mov	r0, #0
40008cb0:	e59fe070 	ldr	lr, [pc, #112]	; 40008d28 <RemoteConfig::GetIndex(void const*, unsigned long&)+0x80>
40008cb4:	e28d6004 	add	r6, sp, #4
40008cb8:	e592c000 	ldr	ip, [r2]
40008cbc:	e5de3014 	ldrb	r3, [lr, #20]
40008cc0:	e59e4010 	ldr	r4, [lr, #16]
40008cc4:	e153000c 	cmp	r3, ip
40008cc8:	e58d3004 	str	r3, [sp, #4]
40008ccc:	31a0c006 	movcc	ip, r6
40008cd0:	21a0c002 	movcs	ip, r2
40008cd4:	e2444001 	sub	r4, r4, #1
40008cd8:	e59c5000 	ldr	r5, [ip]
40008cdc:	e1a0c001 	mov	ip, r1
40008ce0:	e0815005 	add	r5, r1, r5
40008ce4:	e15c0005 	cmp	ip, r5
40008ce8:	0a00000c 	beq	40008d20 <RemoteConfig::GetIndex(void const*, unsigned long&)+0x78>
40008cec:	e5dc8000 	ldrb	r8, [ip]
40008cf0:	e5f47001 	ldrb	r7, [r4, #1]!
40008cf4:	e1580007 	cmp	r8, r7
40008cf8:	0a000006 	beq	40008d18 <RemoteConfig::GetIndex(void const*, unsigned long&)+0x70>
40008cfc:	e2800001 	add	r0, r0, #1
40008d00:	e28ee018 	add	lr, lr, #24
40008d04:	e3500009 	cmp	r0, #9
40008d08:	1affffea 	bne	40008cb8 <RemoteConfig::GetIndex(void const*, unsigned long&)+0x10>
40008d0c:	e3e00000 	mvn	r0, #0
40008d10:	e28dd008 	add	sp, sp, #8
40008d14:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40008d18:	e28cc001 	add	ip, ip, #1
40008d1c:	eafffff0 	b	40008ce4 <RemoteConfig::GetIndex(void const*, unsigned long&)+0x3c>
40008d20:	e5823000 	str	r3, [r2]
40008d24:	eafffff9 	b	40008d10 <RemoteConfig::GetIndex(void const*, unsigned long&)+0x68>
40008d28:	4002e240 	andmi	lr, r2, r0, asr #4

40008d2c <Display::TextStatus(char const*, unsigned long) [clone .isra.0]>:
40008d2c:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
40008d30:	e2504000 	subs	r4, r0, #0
40008d34:	e1a05001 	mov	r5, r1
40008d38:	e1a06002 	mov	r6, r2
40008d3c:	0a000025 	beq	40008dd8 <Display::TextStatus(char const*, unsigned long) [clone .isra.0]+0xac>
40008d40:	e1c480d4 	ldrd	r8, [r4, #4]
40008d44:	e5943000 	ldr	r3, [r4]
40008d48:	e3a01000 	mov	r1, #0
40008d4c:	e249a001 	sub	sl, r9, #1
40008d50:	e3a07000 	mov	r7, #0
40008d54:	e5933020 	ldr	r3, [r3, #32]
40008d58:	e1a0200a 	mov	r2, sl
40008d5c:	e2488001 	sub	r8, r8, #1
40008d60:	e12fff33 	blx	r3
40008d64:	e1580007 	cmp	r8, r7
40008d68:	e5943000 	ldr	r3, [r4]
40008d6c:	9a000005 	bls	40008d88 <Display::TextStatus(char const*, unsigned long) [clone .isra.0]+0x5c>
40008d70:	e5933014 	ldr	r3, [r3, #20]
40008d74:	e3a01020 	mov	r1, #32
40008d78:	e1a00004 	mov	r0, r4
40008d7c:	e2877001 	add	r7, r7, #1
40008d80:	e12fff33 	blx	r3
40008d84:	eafffff6 	b	40008d64 <Display::TextStatus(char const*, unsigned long) [clone .isra.0]+0x38>
40008d88:	e5933020 	ldr	r3, [r3, #32]
40008d8c:	e3a01000 	mov	r1, #0
40008d90:	e1a0200a 	mov	r2, sl
40008d94:	e1a00004 	mov	r0, r4
40008d98:	e12fff33 	blx	r3
40008d9c:	e5941004 	ldr	r1, [r4, #4]
40008da0:	e3a03000 	mov	r3, #0
40008da4:	e7d52003 	ldrb	r2, [r5, r3]
40008da8:	e3520000 	cmp	r2, #0
40008dac:	0a000003 	beq	40008dc0 <Display::TextStatus(char const*, unsigned long) [clone .isra.0]+0x94>
40008db0:	e1510003 	cmp	r1, r3
40008db4:	e2832001 	add	r2, r3, #1
40008db8:	e1a03002 	mov	r3, r2
40008dbc:	8afffff8 	bhi	40008da4 <Display::TextStatus(char const*, unsigned long) [clone .isra.0]+0x78>
40008dc0:	e5942000 	ldr	r2, [r4]
40008dc4:	e1a01009 	mov	r1, r9
40008dc8:	e1a00004 	mov	r0, r4
40008dcc:	e592701c 	ldr	r7, [r2, #28]
40008dd0:	e1a02005 	mov	r2, r5
40008dd4:	e12fff37 	blx	r7
40008dd8:	e3760001 	cmn	r6, #1
40008ddc:	08bd87f0 	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
40008de0:	e1a01005 	mov	r1, r5
40008de4:	e1a00006 	mov	r0, r6
40008de8:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
40008dec:	ea007620 	b	40026674 <console_status>

40008df0 <RemoteConfig::PlatformHandleTftpSet()>:
40008df0:	e5d02028 	ldrb	r2, [r0, #40]	; 0x28
40008df4:	e92d4070 	push	{r4, r5, r6, lr}
40008df8:	e3520000 	cmp	r2, #0
40008dfc:	e5903024 	ldr	r3, [r0, #36]	; 0x24
40008e00:	e1a04000 	mov	r4, r0
40008e04:	0a00000f 	beq	40008e48 <RemoteConfig::PlatformHandleTftpSet()+0x58>
40008e08:	e3530000 	cmp	r3, #0
40008e0c:	18bd8070 	popne	{r4, r5, r6, pc}
40008e10:	e3a00038 	mov	r0, #56	; 0x38
40008e14:	eb00916f 	bl	4002d3d8 <operator new(unsigned int)>
40008e18:	e59f10c4 	ldr	r1, [pc, #196]	; 40008ee4 <RemoteConfig::PlatformHandleTftpSet()+0xf4>
40008e1c:	e3a02a22 	mov	r2, #139264	; 0x22000
40008e20:	e1a05000 	mov	r5, r0
40008e24:	eb0000f0 	bl	400091ec <TFTPFileServer::TFTPFileServer(unsigned char*, unsigned long)>
40008e28:	e59f30b8 	ldr	r3, [pc, #184]	; 40008ee8 <RemoteConfig::PlatformHandleTftpSet()+0xf8>
40008e2c:	e3a02002 	mov	r2, #2
40008e30:	e59f10b4 	ldr	r1, [pc, #180]	; 40008eec <RemoteConfig::PlatformHandleTftpSet()+0xfc>
40008e34:	e5933000 	ldr	r3, [r3]
40008e38:	e5845024 	str	r5, [r4, #36]	; 0x24
40008e3c:	e8bd4070 	pop	{r4, r5, r6, lr}
40008e40:	e5930014 	ldr	r0, [r3, #20]
40008e44:	eaffffb8 	b	40008d2c <Display::TextStatus(char const*, unsigned long) [clone .isra.0]>
40008e48:	e3530000 	cmp	r3, #0
40008e4c:	08bd8070 	popeq	{r4, r5, r6, pc}
40008e50:	e5d32034 	ldrb	r2, [r3, #52]	; 0x34
40008e54:	e3520000 	cmp	r2, #0
40008e58:	1a000013 	bne	40008eac <RemoteConfig::PlatformHandleTftpSet()+0xbc>
40008e5c:	e3a05001 	mov	r5, #1
40008e60:	e5946024 	ldr	r6, [r4, #36]	; 0x24
40008e64:	e3560000 	cmp	r6, #0
40008e68:	0a000006 	beq	40008e88 <RemoteConfig::PlatformHandleTftpSet()+0x98>
40008e6c:	e59f307c 	ldr	r3, [pc, #124]	; 40008ef0 <RemoteConfig::PlatformHandleTftpSet()+0x100>
40008e70:	e1a00006 	mov	r0, r6
40008e74:	e5863000 	str	r3, [r6]
40008e78:	eb005a91 	bl	4001f8c4 <TFTPDaemon::~TFTPDaemon()>
40008e7c:	e3a01038 	mov	r1, #56	; 0x38
40008e80:	e1a00006 	mov	r0, r6
40008e84:	eb009152 	bl	4002d3d4 <operator delete(void*, unsigned int)>
40008e88:	e3a03000 	mov	r3, #0
40008e8c:	e1550003 	cmp	r5, r3
40008e90:	e5843024 	str	r3, [r4, #36]	; 0x24
40008e94:	08bd8070 	popeq	{r4, r5, r6, pc}
40008e98:	e59f3048 	ldr	r3, [pc, #72]	; 40008ee8 <RemoteConfig::PlatformHandleTftpSet()+0xf8>
40008e9c:	e3a02002 	mov	r2, #2
40008ea0:	e59f104c 	ldr	r1, [pc, #76]	; 40008ef4 <RemoteConfig::PlatformHandleTftpSet()+0x104>
40008ea4:	e5933000 	ldr	r3, [r3]
40008ea8:	eaffffe3 	b	40008e3c <RemoteConfig::PlatformHandleTftpSet()+0x4c>
40008eac:	e5932030 	ldr	r2, [r3, #48]	; 0x30
40008eb0:	e59f3040 	ldr	r3, [pc, #64]	; 40008ef8 <RemoteConfig::PlatformHandleTftpSet()+0x108>
40008eb4:	e59f1028 	ldr	r1, [pc, #40]	; 40008ee4 <RemoteConfig::PlatformHandleTftpSet()+0xf4>
40008eb8:	e5930000 	ldr	r0, [r3]
40008ebc:	eb004fa4 	bl	4001cd54 <FlashCodeInstall::WriteFirmware(unsigned char const*, unsigned long)>
40008ec0:	e2505000 	subs	r5, r0, #0
40008ec4:	1affffe4 	bne	40008e5c <RemoteConfig::PlatformHandleTftpSet()+0x6c>
40008ec8:	e59f3018 	ldr	r3, [pc, #24]	; 40008ee8 <RemoteConfig::PlatformHandleTftpSet()+0xf8>
40008ecc:	e3a02001 	mov	r2, #1
40008ed0:	e59f1024 	ldr	r1, [pc, #36]	; 40008efc <RemoteConfig::PlatformHandleTftpSet()+0x10c>
40008ed4:	e5933000 	ldr	r3, [r3]
40008ed8:	e5930014 	ldr	r0, [r3, #20]
40008edc:	ebffff92 	bl	40008d2c <Display::TextStatus(char const*, unsigned long) [clone .isra.0]>
40008ee0:	eaffffde 	b	40008e60 <RemoteConfig::PlatformHandleTftpSet()+0x70>
40008ee4:	400340b9 	strhmi	r4, [r3], -r9
40008ee8:	4003407c 	andmi	r4, r3, ip, ror r0
40008eec:	4002e318 	andmi	lr, r2, r8, lsl r3
40008ef0:	4002e370 	andmi	lr, r2, r0, ror r3
40008ef4:	4002e32c 	andmi	lr, r2, ip, lsr #6
40008ef8:	4005a030 	andmi	sl, r5, r0, lsr r0
40008efc:	4002e320 	andmi	lr, r2, r0, lsr #6

40008f00 <RemoteConfig::PlatformHandleTftpGet()>:
40008f00:	e12fff1e 	bx	lr

40008f04 <TFTPFileServer::FileOpen(char const*, tftp::Mode)>:
40008f04:	e3a00000 	mov	r0, #0
40008f08:	e12fff1e 	bx	lr

40008f0c <TFTPFileServer::FileRead(void*, unsigned int, unsigned int)>:
40008f0c:	e3a00000 	mov	r0, #0
40008f10:	e12fff1e 	bx	lr

40008f14 <TFTPFileServer::Exit()>:
40008f14:	e59f3004 	ldr	r3, [pc, #4]	; 40008f20 <TFTPFileServer::Exit()+0xc>
40008f18:	e5930000 	ldr	r0, [r3]
40008f1c:	eafffde9 	b	400086c8 <RemoteConfig::TftpExit()>
40008f20:	40034050 	andmi	r4, r3, r0, asr r0

40008f24 <TFTPFileServer::~TFTPFileServer()>:
40008f24:	e59f3014 	ldr	r3, [pc, #20]	; 40008f40 <TFTPFileServer::~TFTPFileServer()+0x1c>
40008f28:	e92d4010 	push	{r4, lr}
40008f2c:	e1a04000 	mov	r4, r0
40008f30:	e5803000 	str	r3, [r0]
40008f34:	eb005a62 	bl	4001f8c4 <TFTPDaemon::~TFTPDaemon()>
40008f38:	e1a00004 	mov	r0, r4
40008f3c:	e8bd8010 	pop	{r4, pc}
40008f40:	4002e370 	andmi	lr, r2, r0, ror r3

40008f44 <TFTPFileServer::~TFTPFileServer()>:
40008f44:	e92d4010 	push	{r4, lr}
40008f48:	e1a04000 	mov	r4, r0
40008f4c:	ebfffff4 	bl	40008f24 <TFTPFileServer::~TFTPFileServer()>
40008f50:	e1a00004 	mov	r0, r4
40008f54:	e3a01038 	mov	r1, #56	; 0x38
40008f58:	eb00911d 	bl	4002d3d4 <operator delete(void*, unsigned int)>
40008f5c:	e1a00004 	mov	r0, r4
40008f60:	e8bd8010 	pop	{r4, pc}

40008f64 <Display::SetCursorPos(unsigned long, unsigned long) [clone .isra.0]>:
40008f64:	e2503000 	subs	r3, r0, #0
40008f68:	012fff1e 	bxeq	lr
40008f6c:	e5933000 	ldr	r3, [r3]
40008f70:	e5933020 	ldr	r3, [r3, #32]
40008f74:	e12fff13 	bx	r3

40008f78 <Display::PutChar(int) [clone .isra.0]>:
40008f78:	e2503000 	subs	r3, r0, #0
40008f7c:	012fff1e 	bxeq	lr
40008f80:	e5933000 	ldr	r3, [r3]
40008f84:	e5933014 	ldr	r3, [r3, #20]
40008f88:	e12fff13 	bx	r3

40008f8c <Display::TextStatus(char const*) [clone .isra.0]>:
40008f8c:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
40008f90:	e2504000 	subs	r4, r0, #0
40008f94:	08bd87f0 	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
40008f98:	e9940180 	ldmib	r4, {r7, r8}
40008f9c:	e1a05001 	mov	r5, r1
40008fa0:	e3a06000 	mov	r6, #0
40008fa4:	e2489001 	sub	r9, r8, #1
40008fa8:	e3a01000 	mov	r1, #0
40008fac:	e1a02009 	mov	r2, r9
40008fb0:	e2477001 	sub	r7, r7, #1
40008fb4:	ebffffea 	bl	40008f64 <Display::SetCursorPos(unsigned long, unsigned long) [clone .isra.0]>
40008fb8:	e1570006 	cmp	r7, r6
40008fbc:	9a000004 	bls	40008fd4 <Display::TextStatus(char const*) [clone .isra.0]+0x48>
40008fc0:	e3a01020 	mov	r1, #32
40008fc4:	e1a00004 	mov	r0, r4
40008fc8:	e2866001 	add	r6, r6, #1
40008fcc:	ebffffe9 	bl	40008f78 <Display::PutChar(int) [clone .isra.0]>
40008fd0:	eafffff8 	b	40008fb8 <Display::TextStatus(char const*) [clone .isra.0]+0x2c>
40008fd4:	e3a01000 	mov	r1, #0
40008fd8:	e1a02009 	mov	r2, r9
40008fdc:	e1a00004 	mov	r0, r4
40008fe0:	ebffffdf 	bl	40008f64 <Display::SetCursorPos(unsigned long, unsigned long) [clone .isra.0]>
40008fe4:	e5941004 	ldr	r1, [r4, #4]
40008fe8:	e3a03000 	mov	r3, #0
40008fec:	e7d52003 	ldrb	r2, [r5, r3]
40008ff0:	e3520000 	cmp	r2, #0
40008ff4:	0a000003 	beq	40009008 <Display::TextStatus(char const*) [clone .isra.0]+0x7c>
40008ff8:	e1510003 	cmp	r1, r3
40008ffc:	e2832001 	add	r2, r3, #1
40009000:	e1a03002 	mov	r3, r2
40009004:	8afffff8 	bhi	40008fec <Display::TextStatus(char const*) [clone .isra.0]+0x60>
40009008:	e5942000 	ldr	r2, [r4]
4000900c:	e1a01008 	mov	r1, r8
40009010:	e1a00004 	mov	r0, r4
40009014:	e592e01c 	ldr	lr, [r2, #28]
40009018:	e1a02005 	mov	r2, r5
4000901c:	e1a0c00e 	mov	ip, lr
40009020:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
40009024:	e12fff1c 	bx	ip

40009028 <TFTPFileServer::FileClose()>:
40009028:	e59f3030 	ldr	r3, [pc, #48]	; 40009060 <TFTPFileServer::FileClose()+0x38>
4000902c:	e92d4070 	push	{r4, r5, r6, lr}
40009030:	e3a04001 	mov	r4, #1
40009034:	e5933000 	ldr	r3, [r3]
40009038:	e59f5024 	ldr	r5, [pc, #36]	; 40009064 <TFTPFileServer::FileClose()+0x3c>
4000903c:	e5c04034 	strb	r4, [r0, #52]	; 0x34
40009040:	e5930014 	ldr	r0, [r3, #20]
40009044:	e1a01005 	mov	r1, r5
40009048:	ebffffcf 	bl	40008f8c <Display::TextStatus(char const*) [clone .isra.0]>
4000904c:	e1a01005 	mov	r1, r5
40009050:	e3a00002 	mov	r0, #2
40009054:	eb007586 	bl	40026674 <console_status>
40009058:	e1a00004 	mov	r0, r4
4000905c:	e8bd8070 	pop	{r4, r5, r6, pc}
40009060:	4003407c 	andmi	r4, r3, ip, ror r0
40009064:	4002e335 	andmi	lr, r2, r5, lsr r3

40009068 <TFTPFileServer::FileCreate(char const*, tftp::Mode)>:
40009068:	e3520000 	cmp	r2, #0
4000906c:	1a000018 	bne	400090d4 <TFTPFileServer::FileCreate(char const*, tftp::Mode)+0x6c>
40009070:	e59f206c 	ldr	r2, [pc, #108]	; 400090e4 <TFTPFileServer::FileCreate(char const*, tftp::Mode)+0x7c>
40009074:	e2413001 	sub	r3, r1, #1
40009078:	e92d4010 	push	{r4, lr}
4000907c:	e2811013 	add	r1, r1, #19
40009080:	e1a04000 	mov	r4, r0
40009084:	e4d2c001 	ldrb	ip, [r2], #1
40009088:	e5f30001 	ldrb	r0, [r3, #1]!
4000908c:	e150000c 	cmp	r0, ip
40009090:	1a000011 	bne	400090dc <TFTPFileServer::FileCreate(char const*, tftp::Mode)+0x74>
40009094:	e3500000 	cmp	r0, #0
40009098:	0a000001 	beq	400090a4 <TFTPFileServer::FileCreate(char const*, tftp::Mode)+0x3c>
4000909c:	e1510003 	cmp	r1, r3
400090a0:	1afffff7 	bne	40009084 <TFTPFileServer::FileCreate(char const*, tftp::Mode)+0x1c>
400090a4:	e59f303c 	ldr	r3, [pc, #60]	; 400090e8 <TFTPFileServer::FileCreate(char const*, tftp::Mode)+0x80>
400090a8:	e59f103c 	ldr	r1, [pc, #60]	; 400090ec <TFTPFileServer::FileCreate(char const*, tftp::Mode)+0x84>
400090ac:	e5933000 	ldr	r3, [r3]
400090b0:	e5930014 	ldr	r0, [r3, #20]
400090b4:	ebffffb4 	bl	40008f8c <Display::TextStatus(char const*) [clone .isra.0]>
400090b8:	e59f102c 	ldr	r1, [pc, #44]	; 400090ec <TFTPFileServer::FileCreate(char const*, tftp::Mode)+0x84>
400090bc:	e3a00002 	mov	r0, #2
400090c0:	eb00756b 	bl	40026674 <console_status>
400090c4:	e3a03000 	mov	r3, #0
400090c8:	e3a00001 	mov	r0, #1
400090cc:	e5843030 	str	r3, [r4, #48]	; 0x30
400090d0:	e8bd8010 	pop	{r4, pc}
400090d4:	e3a00000 	mov	r0, #0
400090d8:	e12fff1e 	bx	lr
400090dc:	e3a00000 	mov	r0, #0
400090e0:	e8bd8010 	pop	{r4, pc}
400090e4:	4002e351 	andmi	lr, r2, r1, asr r3
400090e8:	4003407c 	andmi	r4, r3, ip, ror r0
400090ec:	4002e340 	andmi	lr, r2, r0, asr #6

400090f0 <Display::Progress()>:
400090f0:	e92d4070 	push	{r4, r5, r6, lr}
400090f4:	e1a05000 	mov	r5, r0
400090f8:	e5900014 	ldr	r0, [r0, #20]
400090fc:	e59f4050 	ldr	r4, [pc, #80]	; 40009154 <Display::Progress()+0x64>
40009100:	e3500000 	cmp	r0, #0
40009104:	01a01000 	moveq	r1, r0
40009108:	15901004 	ldrne	r1, [r0, #4]
4000910c:	e3500000 	cmp	r0, #0
40009110:	01a02000 	moveq	r2, r0
40009114:	15902008 	ldrne	r2, [r0, #8]
40009118:	e2411001 	sub	r1, r1, #1
4000911c:	e2422001 	sub	r2, r2, #1
40009120:	ebffff8f 	bl	40008f64 <Display::SetCursorPos(unsigned long, unsigned long) [clone .isra.0]>
40009124:	e5943000 	ldr	r3, [r4]
40009128:	e5950014 	ldr	r0, [r5, #20]
4000912c:	e2832001 	add	r2, r3, #1
40009130:	e5842000 	str	r2, [r4]
40009134:	e59f201c 	ldr	r2, [pc, #28]	; 40009158 <Display::Progress()+0x68>
40009138:	e7d21003 	ldrb	r1, [r2, r3]
4000913c:	ebffff8d 	bl	40008f78 <Display::PutChar(int) [clone .isra.0]>
40009140:	e5943000 	ldr	r3, [r4]
40009144:	e3530003 	cmp	r3, #3
40009148:	83a03000 	movhi	r3, #0
4000914c:	85843000 	strhi	r3, [r4]
40009150:	e8bd8070 	pop	{r4, r5, r6, pc}
40009154:	400560bc 	strhmi	r6, [r5], -ip
40009158:	4002e34d 	andmi	lr, r2, sp, asr #6

4000915c <TFTPFileServer::FileWrite(void const*, unsigned int, unsigned int)>:
4000915c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40009160:	e1a07003 	mov	r7, r3
40009164:	e590302c 	ldr	r3, [r0, #44]	; 0x2c
40009168:	e1a05000 	mov	r5, r0
4000916c:	e15704a3 	cmp	r7, r3, lsr #9
40009170:	83a04000 	movhi	r4, #0
40009174:	85804030 	strhi	r4, [r0, #48]	; 0x30
40009178:	8a000011 	bhi	400091c4 <TFTPFileServer::FileWrite(void const*, unsigned int, unsigned int)+0x68>
4000917c:	e3570001 	cmp	r7, #1
40009180:	e1a06001 	mov	r6, r1
40009184:	e1a04002 	mov	r4, r2
40009188:	0a000008 	beq	400091b0 <TFTPFileServer::FileWrite(void const*, unsigned int, unsigned int)+0x54>
4000918c:	e5953028 	ldr	r3, [r5, #40]	; 0x28
40009190:	e2477001 	sub	r7, r7, #1
40009194:	e0862004 	add	r2, r6, r4
40009198:	e0837487 	add	r7, r3, r7, lsl #9
4000919c:	e1520006 	cmp	r2, r6
400091a0:	0a000009 	beq	400091cc <TFTPFileServer::FileWrite(void const*, unsigned int, unsigned int)+0x70>
400091a4:	e4d63001 	ldrb	r3, [r6], #1
400091a8:	e4c73001 	strb	r3, [r7], #1
400091ac:	eafffffa 	b	4000919c <TFTPFileServer::FileWrite(void const*, unsigned int, unsigned int)+0x40>
400091b0:	e1a00001 	mov	r0, r1
400091b4:	eb000413 	bl	4000a208 <tftpfileserver::is_valid(void const*)>
400091b8:	e3500000 	cmp	r0, #0
400091bc:	01a04000 	moveq	r4, r0
400091c0:	1afffff1 	bne	4000918c <TFTPFileServer::FileWrite(void const*, unsigned int, unsigned int)+0x30>
400091c4:	e1a00004 	mov	r0, r4
400091c8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400091cc:	e5953030 	ldr	r3, [r5, #48]	; 0x30
400091d0:	e0833004 	add	r3, r3, r4
400091d4:	e5853030 	str	r3, [r5, #48]	; 0x30
400091d8:	e59f3008 	ldr	r3, [pc, #8]	; 400091e8 <TFTPFileServer::FileWrite(void const*, unsigned int, unsigned int)+0x8c>
400091dc:	e5930000 	ldr	r0, [r3]
400091e0:	ebffffc2 	bl	400090f0 <Display::Progress()>
400091e4:	eafffff6 	b	400091c4 <TFTPFileServer::FileWrite(void const*, unsigned int, unsigned int)+0x68>
400091e8:	4003407c 	andmi	r4, r3, ip, ror r0

400091ec <TFTPFileServer::TFTPFileServer(unsigned char*, unsigned long)>:
400091ec:	e92d4070 	push	{r4, r5, r6, lr}
400091f0:	e1a04000 	mov	r4, r0
400091f4:	e1a06001 	mov	r6, r1
400091f8:	e1a05002 	mov	r5, r2
400091fc:	eb0059d1 	bl	4001f948 <TFTPDaemon::TFTPDaemon()>
40009200:	e59f301c 	ldr	r3, [pc, #28]	; 40009224 <TFTPFileServer::TFTPFileServer(unsigned char*, unsigned long)+0x38>
40009204:	e1a00004 	mov	r0, r4
40009208:	e5846028 	str	r6, [r4, #40]	; 0x28
4000920c:	e5843000 	str	r3, [r4]
40009210:	e3a03000 	mov	r3, #0
40009214:	e584502c 	str	r5, [r4, #44]	; 0x2c
40009218:	e5843030 	str	r3, [r4, #48]	; 0x30
4000921c:	e5c43034 	strb	r3, [r4, #52]	; 0x34
40009220:	e8bd8070 	pop	{r4, r5, r6, pc}
40009224:	4002e370 	andmi	lr, r2, r0, ror r3

40009228 <HttpDaemon::HttpDaemon()>:
40009228:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000922c:	e3e03000 	mvn	r3, #0
40009230:	e5803040 	str	r3, [r0, #64]	; 0x40
40009234:	e3a04000 	mov	r4, #0
40009238:	e5804044 	str	r4, [r0, #68]	; 0x44
4000923c:	e1a06000 	mov	r6, r0
40009240:	e1a05004 	mov	r5, r4
40009244:	e3a00050 	mov	r0, #80	; 0x50
40009248:	e3a07f82 	mov	r7, #520	; 0x208
4000924c:	eb006328 	bl	40021ef4 <net::tcp_begin(unsigned short)>
40009250:	e5860040 	str	r0, [r6, #64]	; 0x40
40009254:	e3a00038 	mov	r0, #56	; 0x38
40009258:	eb00905e 	bl	4002d3d8 <operator new(unsigned int)>
4000925c:	e5804000 	str	r4, [r0]
40009260:	e3a02003 	mov	r2, #3
40009264:	e5963040 	ldr	r3, [r6, #64]	; 0x40
40009268:	e7860104 	str	r0, [r6, r4, lsl #2]
4000926c:	e2844001 	add	r4, r4, #1
40009270:	e580500c 	str	r5, [r0, #12]
40009274:	e3540010 	cmp	r4, #16
40009278:	e9800028 	stmib	r0, {r3, r5}
4000927c:	e5805010 	str	r5, [r0, #16]
40009280:	e3a03005 	mov	r3, #5
40009284:	e5805014 	str	r5, [r0, #20]
40009288:	e5805018 	str	r5, [r0, #24]
4000928c:	e580501c 	str	r5, [r0, #28]
40009290:	e5805020 	str	r5, [r0, #32]
40009294:	e5805024 	str	r5, [r0, #36]	; 0x24
40009298:	e5807028 	str	r7, [r0, #40]	; 0x28
4000929c:	e1c022fc 	strd	r2, [r0, #44]	; 0x2c
400092a0:	e5c05034 	strb	r5, [r0, #52]	; 0x34
400092a4:	1affffea 	bne	40009254 <HttpDaemon::HttpDaemon()+0x2c>
400092a8:	e3a03000 	mov	r3, #0
400092ac:	e3a01002 	mov	r1, #2
400092b0:	e1a02003 	mov	r2, r3
400092b4:	e1a00003 	mov	r0, r3
400092b8:	eb00568a 	bl	4001ece8 <mdns_service_record_add(char const*, mdns::Services, char const*, unsigned short)>
400092bc:	e1a00006 	mov	r0, r6
400092c0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

400092c4 <HttpDeamonHandleRequest::ParseMethod(char*)>:
400092c4:	e1a03001 	mov	r3, r1
400092c8:	e30113b0 	movw	r1, #5040	; 0x13b0
400092cc:	e92d4010 	push	{r4, lr}
400092d0:	e1a04000 	mov	r4, r0
400092d4:	e3441003 	movt	r1, #16387	; 0x4003
400092d8:	e1a00003 	mov	r0, r3
400092dc:	eb008e8a 	bl	4002cd0c <strtok>
400092e0:	e2503000 	subs	r3, r0, #0
400092e4:	0a000038 	beq	400093cc <HttpDeamonHandleRequest::ParseMethod(char*)+0x108>
400092e8:	e5d32000 	ldrb	r2, [r3]
400092ec:	e3520047 	cmp	r2, #71	; 0x47
400092f0:	1a000039 	bne	400093dc <HttpDeamonHandleRequest::ParseMethod(char*)+0x118>
400092f4:	e59fc120 	ldr	ip, [pc, #288]	; 4000941c <HttpDeamonHandleRequest::ParseMethod(char*)+0x158>
400092f8:	e3a02045 	mov	r2, #69	; 0x45
400092fc:	ea000000 	b	40009304 <HttpDeamonHandleRequest::ParseMethod(char*)+0x40>
40009300:	e5fc2001 	ldrb	r2, [ip, #1]!
40009304:	e5f31001 	ldrb	r1, [r3, #1]!
40009308:	e1510002 	cmp	r1, r2
4000930c:	1a00002e 	bne	400093cc <HttpDeamonHandleRequest::ParseMethod(char*)+0x108>
40009310:	e3520000 	cmp	r2, #0
40009314:	1afffff9 	bne	40009300 <HttpDeamonHandleRequest::ParseMethod(char*)+0x3c>
40009318:	e584202c 	str	r2, [r4, #44]	; 0x2c
4000931c:	e30113b0 	movw	r1, #5040	; 0x13b0
40009320:	e3a00000 	mov	r0, #0
40009324:	e3441003 	movt	r1, #16387	; 0x4003
40009328:	eb008e77 	bl	4002cd0c <strtok>
4000932c:	e3500000 	cmp	r0, #0
40009330:	0a000027 	beq	400093d4 <HttpDeamonHandleRequest::ParseMethod(char*)+0x110>
40009334:	e5840018 	str	r0, [r4, #24]
40009338:	e30e139c 	movw	r1, #58268	; 0xe39c
4000933c:	e3441002 	movt	r1, #16386	; 0x4002
40009340:	e3a00000 	mov	r0, #0
40009344:	eb008e70 	bl	4002cd0c <strtok>
40009348:	e2503000 	subs	r3, r0, #0
4000934c:	0a000020 	beq	400093d4 <HttpDeamonHandleRequest::ParseMethod(char*)+0x110>
40009350:	e5d32000 	ldrb	r2, [r3]
40009354:	e3520048 	cmp	r2, #72	; 0x48
40009358:	1a00001d 	bne	400093d4 <HttpDeamonHandleRequest::ParseMethod(char*)+0x110>
4000935c:	e59f10bc 	ldr	r1, [pc, #188]	; 40009420 <HttpDeamonHandleRequest::ParseMethod(char*)+0x15c>
40009360:	e3a00054 	mov	r0, #84	; 0x54
40009364:	ea000000 	b	4000936c <HttpDeamonHandleRequest::ParseMethod(char*)+0xa8>
40009368:	e5f10001 	ldrb	r0, [r1, #1]!
4000936c:	e5f32001 	ldrb	r2, [r3, #1]!
40009370:	e1500002 	cmp	r0, r2
40009374:	1a000016 	bne	400093d4 <HttpDeamonHandleRequest::ParseMethod(char*)+0x110>
40009378:	e3500000 	cmp	r0, #0
4000937c:	1afffff9 	bne	40009368 <HttpDeamonHandleRequest::ParseMethod(char*)+0xa4>
40009380:	e30e13a8 	movw	r1, #58280	; 0xe3a8
40009384:	e3441002 	movt	r1, #16386	; 0x4002
40009388:	eb008e5f 	bl	4002cd0c <strtok>
4000938c:	e3500000 	cmp	r0, #0
40009390:	0a00000f 	beq	400093d4 <HttpDeamonHandleRequest::ParseMethod(char*)+0x110>
40009394:	e5d03000 	ldrb	r3, [r0]
40009398:	e3530031 	cmp	r3, #49	; 0x31
4000939c:	1a00001c 	bne	40009414 <HttpDeamonHandleRequest::ParseMethod(char*)+0x150>
400093a0:	e59f107c 	ldr	r1, [pc, #124]	; 40009424 <HttpDeamonHandleRequest::ParseMethod(char*)+0x160>
400093a4:	e3a0302e 	mov	r3, #46	; 0x2e
400093a8:	ea000000 	b	400093b0 <HttpDeamonHandleRequest::ParseMethod(char*)+0xec>
400093ac:	e5f13001 	ldrb	r3, [r1, #1]!
400093b0:	e5f02001 	ldrb	r2, [r0, #1]!
400093b4:	e1520003 	cmp	r2, r3
400093b8:	1a000015 	bne	40009414 <HttpDeamonHandleRequest::ParseMethod(char*)+0x150>
400093bc:	e3530000 	cmp	r3, #0
400093c0:	1afffff9 	bne	400093ac <HttpDeamonHandleRequest::ParseMethod(char*)+0xe8>
400093c4:	e3a000c8 	mov	r0, #200	; 0xc8
400093c8:	e8bd8010 	pop	{r4, pc}
400093cc:	e30001f5 	movw	r0, #501	; 0x1f5
400093d0:	e8bd8010 	pop	{r4, pc}
400093d4:	e3a00e19 	mov	r0, #400	; 0x190
400093d8:	e8bd8010 	pop	{r4, pc}
400093dc:	e3520050 	cmp	r2, #80	; 0x50
400093e0:	1afffff9 	bne	400093cc <HttpDeamonHandleRequest::ParseMethod(char*)+0x108>
400093e4:	e59f003c 	ldr	r0, [pc, #60]	; 40009428 <HttpDeamonHandleRequest::ParseMethod(char*)+0x164>
400093e8:	e3a0204f 	mov	r2, #79	; 0x4f
400093ec:	ea000000 	b	400093f4 <HttpDeamonHandleRequest::ParseMethod(char*)+0x130>
400093f0:	e5f02001 	ldrb	r2, [r0, #1]!
400093f4:	e5f31001 	ldrb	r1, [r3, #1]!
400093f8:	e1520001 	cmp	r2, r1
400093fc:	1afffff2 	bne	400093cc <HttpDeamonHandleRequest::ParseMethod(char*)+0x108>
40009400:	e3520000 	cmp	r2, #0
40009404:	1afffff9 	bne	400093f0 <HttpDeamonHandleRequest::ParseMethod(char*)+0x12c>
40009408:	e3a03001 	mov	r3, #1
4000940c:	e584302c 	str	r3, [r4, #44]	; 0x2c
40009410:	eaffffc1 	b	4000931c <HttpDeamonHandleRequest::ParseMethod(char*)+0x58>
40009414:	e30001f9 	movw	r0, #505	; 0x1f9
40009418:	e8bd8010 	pop	{r4, pc}
4000941c:	4002e391 	mulmi	r2, r1, r3
40009420:	4002e3a1 	andmi	lr, r2, r1, lsr #7
40009424:	4002e3ad 	andmi	lr, r2, sp, lsr #7
40009428:	4002e395 	mulmi	r2, r5, r3

4000942c <HttpDeamonHandleRequest::ParseHeaderField(char*)>:
4000942c:	e1a03001 	mov	r3, r1
40009430:	e30e13d0 	movw	r1, #58320	; 0xe3d0
40009434:	e92d4070 	push	{r4, r5, r6, lr}
40009438:	e1a05000 	mov	r5, r0
4000943c:	e3441002 	movt	r1, #16386	; 0x4002
40009440:	e1a00003 	mov	r0, r3
40009444:	eb008e30 	bl	4002cd0c <strtok>
40009448:	e3500000 	cmp	r0, #0
4000944c:	0a000037 	beq	40009530 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x104>
40009450:	e2401001 	sub	r1, r0, #1
40009454:	e30ec3b0 	movw	ip, #58288	; 0xe3b0
40009458:	e344c002 	movt	ip, #16386	; 0x4002
4000945c:	e1a0e001 	mov	lr, r1
40009460:	e3a03043 	mov	r3, #67	; 0x43
40009464:	ea000002 	b	40009474 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x48>
40009468:	e3500000 	cmp	r0, #0
4000946c:	0a000031 	beq	40009538 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x10c>
40009470:	e5fc3001 	ldrb	r3, [ip, #1]!
40009474:	e5fe0001 	ldrb	r0, [lr, #1]!
40009478:	e2434041 	sub	r4, r3, #65	; 0x41
4000947c:	e2406041 	sub	r6, r0, #65	; 0x41
40009480:	e1a02000 	mov	r2, r0
40009484:	e3560019 	cmp	r6, #25
40009488:	92802020 	addls	r2, r0, #32
4000948c:	e3540019 	cmp	r4, #25
40009490:	92833020 	addls	r3, r3, #32
40009494:	e1530002 	cmp	r3, r2
40009498:	0afffff2 	beq	40009468 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x3c>
4000949c:	e30e03c0 	movw	r0, #58304	; 0xe3c0
400094a0:	e3a03043 	mov	r3, #67	; 0x43
400094a4:	e3440002 	movt	r0, #16386	; 0x4002
400094a8:	ea000002 	b	400094b8 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x8c>
400094ac:	e3540000 	cmp	r4, #0
400094b0:	0a00000c 	beq	400094e8 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xbc>
400094b4:	e5f03001 	ldrb	r3, [r0, #1]!
400094b8:	e5f14001 	ldrb	r4, [r1, #1]!
400094bc:	e243c041 	sub	ip, r3, #65	; 0x41
400094c0:	e244e041 	sub	lr, r4, #65	; 0x41
400094c4:	e1a02004 	mov	r2, r4
400094c8:	e35e0019 	cmp	lr, #25
400094cc:	92842020 	addls	r2, r4, #32
400094d0:	e35c0019 	cmp	ip, #25
400094d4:	92833020 	addls	r3, r3, #32
400094d8:	e1530002 	cmp	r3, r2
400094dc:	0afffff2 	beq	400094ac <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x80>
400094e0:	e3a000c8 	mov	r0, #200	; 0xc8
400094e4:	e8bd8070 	pop	{r4, r5, r6, pc}
400094e8:	e30113b0 	movw	r1, #5040	; 0x13b0
400094ec:	e1a00004 	mov	r0, r4
400094f0:	e3441003 	movt	r1, #16387	; 0x4003
400094f4:	eb008e04 	bl	4002cd0c <strtok>
400094f8:	e3500000 	cmp	r0, #0
400094fc:	0a00000b 	beq	40009530 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x104>
40009500:	e5d03000 	ldrb	r3, [r0]
40009504:	e3530000 	cmp	r3, #0
40009508:	0a00002d 	beq	400095c4 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x198>
4000950c:	e3a0200a 	mov	r2, #10
40009510:	ea000002 	b	40009520 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xf4>
40009514:	e5f03001 	ldrb	r3, [r0, #1]!
40009518:	e3530000 	cmp	r3, #0
4000951c:	0a000028 	beq	400095c4 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x198>
40009520:	e2433030 	sub	r3, r3, #48	; 0x30
40009524:	e3530009 	cmp	r3, #9
40009528:	e0243492 	mla	r4, r2, r4, r3
4000952c:	9afffff8 	bls	40009514 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xe8>
40009530:	e3a00e19 	mov	r0, #400	; 0x190
40009534:	e8bd8070 	pop	{r4, r5, r6, pc}
40009538:	e30e13d4 	movw	r1, #58324	; 0xe3d4
4000953c:	e3441002 	movt	r1, #16386	; 0x4002
40009540:	eb008df1 	bl	4002cd0c <strtok>
40009544:	e3500000 	cmp	r0, #0
40009548:	0afffff8 	beq	40009530 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x104>
4000954c:	e30e23d8 	movw	r2, #58328	; 0xe3d8
40009550:	e2403001 	sub	r3, r0, #1
40009554:	e3442002 	movt	r2, #16386	; 0x4002
40009558:	e280e00b 	add	lr, r0, #11
4000955c:	e3a01061 	mov	r1, #97	; 0x61
40009560:	ea000002 	b	40009570 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x144>
40009564:	e15e0003 	cmp	lr, r3
40009568:	0a000004 	beq	40009580 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x154>
4000956c:	e5f21001 	ldrb	r1, [r2, #1]!
40009570:	e5f3c001 	ldrb	ip, [r3, #1]!
40009574:	e15c0001 	cmp	ip, r1
40009578:	0afffff9 	beq	40009564 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x138>
4000957c:	eaffffd7 	b	400094e0 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xb4>
40009580:	e5d0200c 	ldrb	r2, [r0, #12]
40009584:	e280300c 	add	r3, r0, #12
40009588:	e352006a 	cmp	r2, #106	; 0x6a
4000958c:	1a00000e 	bne	400095cc <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x1a0>
40009590:	e59f0068 	ldr	r0, [pc, #104]	; 40009600 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x1d4>
40009594:	e3a02073 	mov	r2, #115	; 0x73
40009598:	ea000000 	b	400095a0 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x174>
4000959c:	e5f02001 	ldrb	r2, [r0, #1]!
400095a0:	e5f31001 	ldrb	r1, [r3, #1]!
400095a4:	e1510002 	cmp	r1, r2
400095a8:	1affffcc 	bne	400094e0 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xb4>
400095ac:	e3520000 	cmp	r2, #0
400095b0:	1afffff9 	bne	4000959c <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x170>
400095b4:	e3a03003 	mov	r3, #3
400095b8:	e5853030 	str	r3, [r5, #48]	; 0x30
400095bc:	e3a000c8 	mov	r0, #200	; 0xc8
400095c0:	e8bd8070 	pop	{r4, r5, r6, pc}
400095c4:	e5854010 	str	r4, [r5, #16]
400095c8:	eaffffc4 	b	400094e0 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xb4>
400095cc:	e352006f 	cmp	r2, #111	; 0x6f
400095d0:	1affffc2 	bne	400094e0 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xb4>
400095d4:	e59f0028 	ldr	r0, [pc, #40]	; 40009604 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x1d8>
400095d8:	e3a02063 	mov	r2, #99	; 0x63
400095dc:	ea000000 	b	400095e4 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x1b8>
400095e0:	e5f02001 	ldrb	r2, [r0, #1]!
400095e4:	e5f31001 	ldrb	r1, [r3, #1]!
400095e8:	e1510002 	cmp	r1, r2
400095ec:	1affffbb 	bne	400094e0 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xb4>
400095f0:	e3520000 	cmp	r2, #0
400095f4:	1afffff9 	bne	400095e0 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x1b4>
400095f8:	e3a03004 	mov	r3, #4
400095fc:	eaffffed 	b	400095b8 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x18c>
40009600:	4002e3e9 	andmi	lr, r2, r9, ror #7
40009604:	4002e3f1 	strdmi	lr, [r2], -r1

40009608 <HttpDeamonHandleRequest::ParseRequest()>:
40009608:	e5901014 	ldr	r1, [r0, #20]
4000960c:	e3a02005 	mov	r2, #5
40009610:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40009614:	e3a04000 	mov	r4, #0
40009618:	e1510004 	cmp	r1, r4
4000961c:	e5903024 	ldr	r3, [r0, #36]	; 0x24
40009620:	e5802030 	str	r2, [r0, #48]	; 0x30
40009624:	e5804010 	str	r4, [r0, #16]
40009628:	e580400c 	str	r4, [r0, #12]
4000962c:	0a00001f 	beq	400096b0 <HttpDeamonHandleRequest::ParseRequest()+0xa8>
40009630:	e1a06000 	mov	r6, r0
40009634:	e1a0e003 	mov	lr, r3
40009638:	e1a0c004 	mov	ip, r4
4000963c:	e1a07004 	mov	r7, r4
40009640:	ea000002 	b	40009650 <HttpDeamonHandleRequest::ParseRequest()+0x48>
40009644:	e2844001 	add	r4, r4, #1
40009648:	e1510004 	cmp	r1, r4
4000964c:	9a000017 	bls	400096b0 <HttpDeamonHandleRequest::ParseRequest()+0xa8>
40009650:	e7d32004 	ldrb	r2, [r3, r4]
40009654:	e352000a 	cmp	r2, #10
40009658:	1afffff9 	bne	40009644 <HttpDeamonHandleRequest::ParseRequest()+0x3c>
4000965c:	e0833004 	add	r3, r3, r4
40009660:	e35c0000 	cmp	ip, #0
40009664:	e1a0100e 	mov	r1, lr
40009668:	e1a00006 	mov	r0, r6
4000966c:	e5437001 	strb	r7, [r3, #-1]
40009670:	e28c5001 	add	r5, ip, #1
40009674:	0a00000f 	beq	400096b8 <HttpDeamonHandleRequest::ParseRequest()+0xb0>
40009678:	e5de3000 	ldrb	r3, [lr]
4000967c:	e3530000 	cmp	r3, #0
40009680:	0a00000e 	beq	400096c0 <HttpDeamonHandleRequest::ParseRequest()+0xb8>
40009684:	ebffff68 	bl	4000942c <HttpDeamonHandleRequest::ParseHeaderField(char*)>
40009688:	e35000c8 	cmp	r0, #200	; 0xc8
4000968c:	e2844001 	add	r4, r4, #1
40009690:	e1a0c005 	mov	ip, r5
40009694:	18bd81f0 	popne	{r4, r5, r6, r7, r8, pc}
40009698:	e5963024 	ldr	r3, [r6, #36]	; 0x24
4000969c:	e5961014 	ldr	r1, [r6, #20]
400096a0:	e083e004 	add	lr, r3, r4
400096a4:	e2844001 	add	r4, r4, #1
400096a8:	e1510004 	cmp	r1, r4
400096ac:	8affffe7 	bhi	40009650 <HttpDeamonHandleRequest::ParseRequest()+0x48>
400096b0:	e3a000c8 	mov	r0, #200	; 0xc8
400096b4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400096b8:	ebffff01 	bl	400092c4 <HttpDeamonHandleRequest::ParseMethod(char*)>
400096bc:	eafffff1 	b	40009688 <HttpDeamonHandleRequest::ParseRequest()+0x80>
400096c0:	e5962014 	ldr	r2, [r6, #20]
400096c4:	e2422001 	sub	r2, r2, #1
400096c8:	e0422004 	sub	r2, r2, r4
400096cc:	e6ff2072 	uxth	r2, r2
400096d0:	e586200c 	str	r2, [r6, #12]
400096d4:	e3520000 	cmp	r2, #0
400096d8:	0afffff4 	beq	400096b0 <HttpDeamonHandleRequest::ParseRequest()+0xa8>
400096dc:	e5961024 	ldr	r1, [r6, #36]	; 0x24
400096e0:	e2844001 	add	r4, r4, #1
400096e4:	e3a000c8 	mov	r0, #200	; 0xc8
400096e8:	e0811004 	add	r1, r1, r4
400096ec:	e586101c 	str	r1, [r6, #28]
400096f0:	e7c13002 	strb	r3, [r1, r2]
400096f4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

400096f8 <HttpDeamonHandleRequest::HandleGetTxt()>:
400096f8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400096fc:	e5906018 	ldr	r6, [r0, #24]
40009700:	e5d61006 	ldrb	r1, [r6, #6]
40009704:	e3510000 	cmp	r1, #0
40009708:	0a000038 	beq	400097f0 <HttpDeamonHandleRequest::HandleGetTxt()+0xf8>
4000970c:	e286c006 	add	ip, r6, #6
40009710:	e1a04000 	mov	r4, r0
40009714:	e1a0300c 	mov	r3, ip
40009718:	e5f32001 	ldrb	r2, [r3, #1]!
4000971c:	e3520000 	cmp	r2, #0
40009720:	1afffffc 	bne	40009718 <HttpDeamonHandleRequest::HandleGetTxt()+0x20>
40009724:	e043300c 	sub	r3, r3, ip
40009728:	e3530004 	cmp	r3, #4
4000972c:	9a00002f 	bls	400097f0 <HttpDeamonHandleRequest::HandleGetTxt()+0xf8>
40009730:	e2432004 	sub	r2, r3, #4
40009734:	e08ce002 	add	lr, ip, r2
40009738:	e7dc2002 	ldrb	r2, [ip, r2]
4000973c:	e352002e 	cmp	r2, #46	; 0x2e
40009740:	1a00002a 	bne	400097f0 <HttpDeamonHandleRequest::HandleGetTxt()+0xf8>
40009744:	e59f50d0 	ldr	r5, [pc, #208]	; 4000981c <HttpDeamonHandleRequest::HandleGetTxt()+0x124>
40009748:	e3a02074 	mov	r2, #116	; 0x74
4000974c:	ea000000 	b	40009754 <HttpDeamonHandleRequest::HandleGetTxt()+0x5c>
40009750:	e5f52001 	ldrb	r2, [r5, #1]!
40009754:	e5fe0001 	ldrb	r0, [lr, #1]!
40009758:	e1500002 	cmp	r0, r2
4000975c:	1a000023 	bne	400097f0 <HttpDeamonHandleRequest::HandleGetTxt()+0xf8>
40009760:	e3520000 	cmp	r2, #0
40009764:	1afffff9 	bne	40009750 <HttpDeamonHandleRequest::HandleGetTxt()+0x58>
40009768:	e3027eb1 	movw	r7, #11953	; 0x2eb1
4000976c:	e2866005 	add	r6, r6, #5
40009770:	e3447006 	movt	r7, #16390	; 0x4006
40009774:	e30600c0 	movw	r0, #24768	; 0x60c0
40009778:	e0866003 	add	r6, r6, r3
4000977c:	e5d72000 	ldrb	r2, [r7]
40009780:	e08c3003 	add	r3, ip, r3
40009784:	e3440005 	movt	r0, #16389	; 0x4005
40009788:	e2025001 	and	r5, r2, #1
4000978c:	e3822001 	orr	r2, r2, #1
40009790:	e5c72000 	strb	r2, [r7]
40009794:	ea000000 	b	4000979c <HttpDeamonHandleRequest::HandleGetTxt()+0xa4>
40009798:	e5fc1001 	ldrb	r1, [ip, #1]!
4000979c:	e043200c 	sub	r2, r3, ip
400097a0:	e3510000 	cmp	r1, #0
400097a4:	0a000018 	beq	4000980c <HttpDeamonHandleRequest::HandleGetTxt()+0x114>
400097a8:	e156000c 	cmp	r6, ip
400097ac:	e4c01001 	strb	r1, [r0], #1
400097b0:	1afffff8 	bne	40009798 <HttpDeamonHandleRequest::HandleGetTxt()+0xa0>
400097b4:	e3043050 	movw	r3, #16464	; 0x4050
400097b8:	e30610c0 	movw	r1, #24768	; 0x60c0
400097bc:	e3443003 	movt	r3, #16387	; 0x4003
400097c0:	e3a02a01 	mov	r2, #4096	; 0x1000
400097c4:	e3441005 	movt	r1, #16389	; 0x4005
400097c8:	e5930000 	ldr	r0, [r3]
400097cc:	ebfff9e6 	bl	40007f6c <RemoteConfig::HandleGet(void*, unsigned long)>
400097d0:	e5840008 	str	r0, [r4, #8]
400097d4:	e3550000 	cmp	r5, #0
400097d8:	1a000006 	bne	400097f8 <HttpDeamonHandleRequest::HandleGetTxt()+0x100>
400097dc:	e5d73000 	ldrb	r3, [r7]
400097e0:	e3a000c8 	mov	r0, #200	; 0xc8
400097e4:	e3c33001 	bic	r3, r3, #1
400097e8:	e5c73000 	strb	r3, [r7]
400097ec:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400097f0:	e3a00e19 	mov	r0, #400	; 0x190
400097f4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400097f8:	e5d73000 	ldrb	r3, [r7]
400097fc:	e3a000c8 	mov	r0, #200	; 0xc8
40009800:	e3833001 	orr	r3, r3, #1
40009804:	e5c73000 	strb	r3, [r7]
40009808:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000980c:	e3520000 	cmp	r2, #0
40009810:	0affffe7 	beq	400097b4 <HttpDeamonHandleRequest::HandleGetTxt()+0xbc>
40009814:	eb008a7e 	bl	4002c214 <memset>
40009818:	eaffffe5 	b	400097b4 <HttpDeamonHandleRequest::HandleGetTxt()+0xbc>
4000981c:	4002e401 	andmi	lr, r2, r1, lsl #8

40009820 <HttpDeamonHandleRequest::HandleGet()>:
40009820:	e92d4030 	push	{r4, r5, lr}
40009824:	e30610c0 	movw	r1, #24768	; 0x60c0
40009828:	e3441005 	movt	r1, #16389	; 0x4005
4000982c:	e1a04000 	mov	r4, r0
40009830:	e5900018 	ldr	r0, [r0, #24]
40009834:	e24dd00c 	sub	sp, sp, #12
40009838:	e5841020 	str	r1, [r4, #32]
4000983c:	e3a03000 	mov	r3, #0
40009840:	e58d3004 	str	r3, [sp, #4]
40009844:	e30e2408 	movw	r2, #58376	; 0xe408
40009848:	e3442002 	movt	r2, #16386	; 0x4002
4000984c:	e2403001 	sub	r3, r0, #1
40009850:	e280e005 	add	lr, r0, #5
40009854:	e3a0102f 	mov	r1, #47	; 0x2f
40009858:	ea000002 	b	40009868 <HttpDeamonHandleRequest::HandleGet()+0x48>
4000985c:	e15e0003 	cmp	lr, r3
40009860:	0a000015 	beq	400098bc <HttpDeamonHandleRequest::HandleGet()+0x9c>
40009864:	e5f21001 	ldrb	r1, [r2, #1]!
40009868:	e5f3c001 	ldrb	ip, [r3, #1]!
4000986c:	e15c0001 	cmp	ip, r1
40009870:	0afffff9 	beq	4000985c <HttpDeamonHandleRequest::HandleGet()+0x3c>
40009874:	e5d03000 	ldrb	r3, [r0]
40009878:	e353002f 	cmp	r3, #47	; 0x2f
4000987c:	1a000071 	bne	40009a48 <HttpDeamonHandleRequest::HandleGet()+0x228>
40009880:	e5d03001 	ldrb	r3, [r0, #1]
40009884:	e3530000 	cmp	r3, #0
40009888:	1a000051 	bne	400099d4 <HttpDeamonHandleRequest::HandleGet()+0x1b4>
4000988c:	e30e041c 	movw	r0, #58396	; 0xe41c
40009890:	e2842030 	add	r2, r4, #48	; 0x30
40009894:	e3440002 	movt	r0, #16386	; 0x4002
40009898:	e28d1004 	add	r1, sp, #4
4000989c:	eb000260 	bl	4000a224 <get_file_content(char const*, unsigned long&, http::contentTypes&)>
400098a0:	e59d3004 	ldr	r3, [sp, #4]
400098a4:	e5840020 	str	r0, [r4, #32]
400098a8:	e3530000 	cmp	r3, #0
400098ac:	1a000022 	bne	4000993c <HttpDeamonHandleRequest::HandleGet()+0x11c>
400098b0:	e3a00f65 	mov	r0, #404	; 0x194
400098b4:	e28dd00c 	add	sp, sp, #12
400098b8:	e8bd8030 	pop	{r4, r5, pc}
400098bc:	e3a03003 	mov	r3, #3
400098c0:	e280e007 	add	lr, r0, #7
400098c4:	e5843030 	str	r3, [r4, #48]	; 0x30
400098c8:	e1a0c00e 	mov	ip, lr
400098cc:	e5d05006 	ldrb	r5, [r0, #6]
400098d0:	e3550000 	cmp	r5, #0
400098d4:	e1a01005 	mov	r1, r5
400098d8:	0a00004b 	beq	40009a0c <HttpDeamonHandleRequest::HandleGet()+0x1ec>
400098dc:	e3012505 	movw	r2, #5381	; 0x1505
400098e0:	e0813282 	add	r3, r1, r2, lsl #5
400098e4:	e4dc1001 	ldrb	r1, [ip], #1
400098e8:	e6f23073 	uxtah	r3, r2, r3
400098ec:	e3510000 	cmp	r1, #0
400098f0:	e6ff2073 	uxth	r2, r3
400098f4:	1afffff9 	bne	400098e0 <HttpDeamonHandleRequest::HandleGet()+0xc0>
400098f8:	e304379b 	movw	r3, #18331	; 0x479b
400098fc:	e1520003 	cmp	r2, r3
40009900:	0a00006c 	beq	40009ab8 <HttpDeamonHandleRequest::HandleGet()+0x298>
40009904:	8a000018 	bhi	4000996c <HttpDeamonHandleRequest::HandleGet()+0x14c>
40009908:	e3013661 	movw	r3, #5729	; 0x1661
4000990c:	e1520003 	cmp	r2, r3
40009910:	0a000063 	beq	40009aa4 <HttpDeamonHandleRequest::HandleGet()+0x284>
40009914:	e3023472 	movw	r3, #9330	; 0x2472
40009918:	e1520003 	cmp	r2, r3
4000991c:	1a00000a 	bne	4000994c <HttpDeamonHandleRequest::HandleGet()+0x12c>
40009920:	e30600c0 	movw	r0, #24768	; 0x60c0
40009924:	e3a01a01 	mov	r1, #4096	; 0x1000
40009928:	e3440005 	movt	r0, #16389	; 0x4005
4000992c:	eb0071af 	bl	40025ff0 <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)>
40009930:	e1a03000 	mov	r3, r0
40009934:	e3530000 	cmp	r3, #0
40009938:	0affffdc 	beq	400098b0 <HttpDeamonHandleRequest::HandleGet()+0x90>
4000993c:	e5843008 	str	r3, [r4, #8]
40009940:	e3a000c8 	mov	r0, #200	; 0xc8
40009944:	e28dd00c 	add	sp, sp, #12
40009948:	e8bd8030 	pop	{r4, r5, pc}
4000994c:	e30131fa 	movw	r3, #4602	; 0x11fa
40009950:	e1520003 	cmp	r2, r3
40009954:	1a00002c 	bne	40009a0c <HttpDeamonHandleRequest::HandleGet()+0x1ec>
40009958:	e30600c0 	movw	r0, #24768	; 0x60c0
4000995c:	e3a01a01 	mov	r1, #4096	; 0x1000
40009960:	e3440005 	movt	r0, #16389	; 0x4005
40009964:	eb000224 	bl	4000a1fc <remoteconfig::json_get_directory(char*, unsigned long)>
40009968:	eafffff0 	b	40009930 <HttpDeamonHandleRequest::HandleGet()+0x110>
4000996c:	e308317b 	movw	r3, #33147	; 0x817b
40009970:	e1520003 	cmp	r2, r3
40009974:	0a000045 	beq	40009a90 <HttpDeamonHandleRequest::HandleGet()+0x270>
40009978:	e30b37d9 	movw	r3, #47065	; 0xb7d9
4000997c:	e1520003 	cmp	r2, r3
40009980:	1a00000b 	bne	400099b4 <HttpDeamonHandleRequest::HandleGet()+0x194>
40009984:	e3043050 	movw	r3, #16464	; 0x4050
40009988:	e3443003 	movt	r3, #16387	; 0x4003
4000998c:	e5933000 	ldr	r3, [r3]
40009990:	e5d3301f 	ldrb	r3, [r3, #31]
40009994:	e3530000 	cmp	r3, #0
40009998:	03a00e19 	moveq	r0, #400	; 0x190
4000999c:	0affffe8 	beq	40009944 <HttpDeamonHandleRequest::HandleGet()+0x124>
400099a0:	e30600c0 	movw	r0, #24768	; 0x60c0
400099a4:	e3a01a01 	mov	r1, #4096	; 0x1000
400099a8:	e3440005 	movt	r0, #16389	; 0x4005
400099ac:	eb0001ff 	bl	4000a1b0 <remoteconfig::json_get_uptime(char*, unsigned long)>
400099b0:	eaffffde 	b	40009930 <HttpDeamonHandleRequest::HandleGet()+0x110>
400099b4:	e3063c4b 	movw	r3, #27723	; 0x6c4b
400099b8:	e1520003 	cmp	r2, r3
400099bc:	1a000012 	bne	40009a0c <HttpDeamonHandleRequest::HandleGet()+0x1ec>
400099c0:	e30600c0 	movw	r0, #24768	; 0x60c0
400099c4:	e3a01a01 	mov	r1, #4096	; 0x1000
400099c8:	e3440005 	movt	r0, #16389	; 0x4005
400099cc:	eb0001db 	bl	4000a140 <remoteconfig::json_get_version(char*, unsigned long)>
400099d0:	eaffffd6 	b	40009930 <HttpDeamonHandleRequest::HandleGet()+0x110>
400099d4:	e59fc13c 	ldr	ip, [pc, #316]	; 40009b18 <HttpDeamonHandleRequest::HandleGet()+0x2f8>
400099d8:	e1a02000 	mov	r2, r0
400099dc:	e3a03074 	mov	r3, #116	; 0x74
400099e0:	ea000000 	b	400099e8 <HttpDeamonHandleRequest::HandleGet()+0x1c8>
400099e4:	e5fc3001 	ldrb	r3, [ip, #1]!
400099e8:	e5f21001 	ldrb	r1, [r2, #1]!
400099ec:	e1510003 	cmp	r1, r3
400099f0:	1a000018 	bne	40009a58 <HttpDeamonHandleRequest::HandleGet()+0x238>
400099f4:	e3530000 	cmp	r3, #0
400099f8:	1afffff9 	bne	400099e4 <HttpDeamonHandleRequest::HandleGet()+0x1c4>
400099fc:	e30e0430 	movw	r0, #58416	; 0xe430
40009a00:	e2842030 	add	r2, r4, #48	; 0x30
40009a04:	e3440002 	movt	r0, #16386	; 0x4002
40009a08:	eaffffa2 	b	40009898 <HttpDeamonHandleRequest::HandleGet()+0x78>
40009a0c:	e30e2410 	movw	r2, #58384	; 0xe410
40009a10:	e1a0300e 	mov	r3, lr
40009a14:	e3442002 	movt	r2, #16386	; 0x4002
40009a18:	e280c00e 	add	ip, r0, #14
40009a1c:	e3a01073 	mov	r1, #115	; 0x73
40009a20:	ea000003 	b	40009a34 <HttpDeamonHandleRequest::HandleGet()+0x214>
40009a24:	e153000c 	cmp	r3, ip
40009a28:	0a000027 	beq	40009acc <HttpDeamonHandleRequest::HandleGet()+0x2ac>
40009a2c:	e4d35001 	ldrb	r5, [r3], #1
40009a30:	e5f21001 	ldrb	r1, [r2, #1]!
40009a34:	e1550001 	cmp	r5, r1
40009a38:	0afffff9 	beq	40009a24 <HttpDeamonHandleRequest::HandleGet()+0x204>
40009a3c:	e1a00004 	mov	r0, r4
40009a40:	ebffff2c 	bl	400096f8 <HttpDeamonHandleRequest::HandleGetTxt()>
40009a44:	eaffffbe 	b	40009944 <HttpDeamonHandleRequest::HandleGet()+0x124>
40009a48:	e2842030 	add	r2, r4, #48	; 0x30
40009a4c:	e28d1004 	add	r1, sp, #4
40009a50:	e2800001 	add	r0, r0, #1
40009a54:	eaffff90 	b	4000989c <HttpDeamonHandleRequest::HandleGet()+0x7c>
40009a58:	e59fc0bc 	ldr	ip, [pc, #188]	; 40009b1c <HttpDeamonHandleRequest::HandleGet()+0x2fc>
40009a5c:	e1a02000 	mov	r2, r0
40009a60:	e3a03072 	mov	r3, #114	; 0x72
40009a64:	ea000000 	b	40009a6c <HttpDeamonHandleRequest::HandleGet()+0x24c>
40009a68:	e5fc3001 	ldrb	r3, [ip, #1]!
40009a6c:	e5f21001 	ldrb	r1, [r2, #1]!
40009a70:	e1530001 	cmp	r3, r1
40009a74:	1afffff3 	bne	40009a48 <HttpDeamonHandleRequest::HandleGet()+0x228>
40009a78:	e3530000 	cmp	r3, #0
40009a7c:	1afffff9 	bne	40009a68 <HttpDeamonHandleRequest::HandleGet()+0x248>
40009a80:	e30e043c 	movw	r0, #58428	; 0xe43c
40009a84:	e2842030 	add	r2, r4, #48	; 0x30
40009a88:	e3440002 	movt	r0, #16386	; 0x4002
40009a8c:	eaffff81 	b	40009898 <HttpDeamonHandleRequest::HandleGet()+0x78>
40009a90:	e30600c0 	movw	r0, #24768	; 0x60c0
40009a94:	e3a01a01 	mov	r1, #4096	; 0x1000
40009a98:	e3440005 	movt	r0, #16389	; 0x4005
40009a9c:	eb007535 	bl	40026f78 <remoteconfig::rtc::json_get_rtc(char*, unsigned long)>
40009aa0:	eaffffa2 	b	40009930 <HttpDeamonHandleRequest::HandleGet()+0x110>
40009aa4:	e30600c0 	movw	r0, #24768	; 0x60c0
40009aa8:	e3a01a01 	mov	r1, #4096	; 0x1000
40009aac:	e3440005 	movt	r0, #16389	; 0x4005
40009ab0:	eb00017e 	bl	4000a0b0 <remoteconfig::json_get_list(char*, unsigned long)>
40009ab4:	eaffff9d 	b	40009930 <HttpDeamonHandleRequest::HandleGet()+0x110>
40009ab8:	e30600c0 	movw	r0, #24768	; 0x60c0
40009abc:	e3a01a01 	mov	r1, #4096	; 0x1000
40009ac0:	e3440005 	movt	r0, #16389	; 0x4005
40009ac4:	eb0001c4 	bl	4000a1dc <remoteconfig::json_get_display(char*, unsigned long)>
40009ac8:	eaffff98 	b	40009930 <HttpDeamonHandleRequest::HandleGet()+0x110>
40009acc:	e5d0200e 	ldrb	r2, [r0, #14]
40009ad0:	e280000f 	add	r0, r0, #15
40009ad4:	e3520000 	cmp	r2, #0
40009ad8:	13013505 	movwne	r3, #5381	; 0x1505
40009adc:	0affff73 	beq	400098b0 <HttpDeamonHandleRequest::HandleGet()+0x90>
40009ae0:	e0821283 	add	r1, r2, r3, lsl #5
40009ae4:	e4d02001 	ldrb	r2, [r0], #1
40009ae8:	e6f33071 	uxtah	r3, r3, r1
40009aec:	e3520000 	cmp	r2, #0
40009af0:	e6ff3073 	uxth	r3, r3
40009af4:	1afffff9 	bne	40009ae0 <HttpDeamonHandleRequest::HandleGet()+0x2c0>
40009af8:	e30121fa 	movw	r2, #4602	; 0x11fa
40009afc:	e1530002 	cmp	r3, r2
40009b00:	1affff6a 	bne	400098b0 <HttpDeamonHandleRequest::HandleGet()+0x90>
40009b04:	e30600c0 	movw	r0, #24768	; 0x60c0
40009b08:	e3a01a01 	mov	r1, #4096	; 0x1000
40009b0c:	e3440005 	movt	r0, #16389	; 0x4005
40009b10:	eb0071eb 	bl	400262c4 <remoteconfig::storage::json_get_directory(char*, unsigned long)>
40009b14:	eaffff85 	b	40009930 <HttpDeamonHandleRequest::HandleGet()+0x110>
40009b18:	4002e449 	andmi	lr, r2, r9, asr #8
40009b1c:	4002e429 	andmi	lr, r2, r9, lsr #8

40009b20 <HttpDeamonHandleRequest::HandlePost(bool)>:
40009b20:	e3510000 	cmp	r1, #0
40009b24:	e92d4070 	push	{r4, r5, r6, lr}
40009b28:	e1a04000 	mov	r4, r0
40009b2c:	e24dd008 	sub	sp, sp, #8
40009b30:	0a000022 	beq	40009bc0 <HttpDeamonHandleRequest::HandlePost(bool)+0xa0>
40009b34:	e5d43034 	ldrb	r3, [r4, #52]	; 0x34
40009b38:	e5900024 	ldr	r0, [r0, #36]	; 0x24
40009b3c:	e1d411b4 	ldrh	r1, [r4, #20]
40009b40:	e3530000 	cmp	r3, #0
40009b44:	e584001c 	str	r0, [r4, #28]
40009b48:	e584100c 	str	r1, [r4, #12]
40009b4c:	1a000039 	bne	40009c38 <HttpDeamonHandleRequest::HandlePost(bool)+0x118>
40009b50:	e3025eb1 	movw	r5, #11953	; 0x2eb1
40009b54:	e3043050 	movw	r3, #16464	; 0x4050
40009b58:	e3445006 	movt	r5, #16390	; 0x4006
40009b5c:	e1a02001 	mov	r2, r1
40009b60:	e3443003 	movt	r3, #16387	; 0x4003
40009b64:	e1a01000 	mov	r1, r0
40009b68:	e5d56000 	ldrb	r6, [r5]
40009b6c:	e5930000 	ldr	r0, [r3]
40009b70:	e3863001 	orr	r3, r6, #1
40009b74:	e5c53000 	strb	r3, [r5]
40009b78:	ebfff9c3 	bl	4000828c <RemoteConfig::HandleSet(void*, unsigned long)>
40009b7c:	e5d53000 	ldrb	r3, [r5]
40009b80:	e3160001 	tst	r6, #1
40009b84:	03c33001 	biceq	r3, r3, #1
40009b88:	13833001 	orrne	r3, r3, #1
40009b8c:	e5c53000 	strb	r3, [r5]
40009b90:	e3a03000 	mov	r3, #0
40009b94:	e30e2494 	movw	r2, #58516	; 0xe494
40009b98:	e3442002 	movt	r2, #16386	; 0x4002
40009b9c:	e30600c0 	movw	r0, #24768	; 0x60c0
40009ba0:	e3440005 	movt	r0, #16389	; 0x4005
40009ba4:	e3001fff 	movw	r1, #4095	; 0xfff
40009ba8:	e5843030 	str	r3, [r4, #48]	; 0x30
40009bac:	eb008c14 	bl	4002cc04 <snprintf>
40009bb0:	e5840008 	str	r0, [r4, #8]
40009bb4:	e3a000c8 	mov	r0, #200	; 0xc8
40009bb8:	e28dd008 	add	sp, sp, #8
40009bbc:	e8bd8070 	pop	{r4, r5, r6, pc}
40009bc0:	e5903030 	ldr	r3, [r0, #48]	; 0x30
40009bc4:	e3530003 	cmp	r3, #3
40009bc8:	1a00004c 	bne	40009d00 <HttpDeamonHandleRequest::HandlePost(bool)+0x1e0>
40009bcc:	e590c018 	ldr	ip, [r0, #24]
40009bd0:	e5dc2000 	ldrb	r2, [ip]
40009bd4:	e352002f 	cmp	r2, #47	; 0x2f
40009bd8:	1a00004b 	bne	40009d0c <HttpDeamonHandleRequest::HandlePost(bool)+0x1ec>
40009bdc:	e59f0250 	ldr	r0, [pc, #592]	; 40009e34 <HttpDeamonHandleRequest::HandlePost(bool)+0x314>
40009be0:	e1a0100c 	mov	r1, ip
40009be4:	e3a0306a 	mov	r3, #106	; 0x6a
40009be8:	ea000000 	b	40009bf0 <HttpDeamonHandleRequest::HandlePost(bool)+0xd0>
40009bec:	e5f03001 	ldrb	r3, [r0, #1]!
40009bf0:	e5f12001 	ldrb	r2, [r1, #1]!
40009bf4:	e1520003 	cmp	r2, r3
40009bf8:	1a000044 	bne	40009d10 <HttpDeamonHandleRequest::HandlePost(bool)+0x1f0>
40009bfc:	e3530000 	cmp	r3, #0
40009c00:	1afffff9 	bne	40009bec <HttpDeamonHandleRequest::HandlePost(bool)+0xcc>
40009c04:	e3a03001 	mov	r3, #1
40009c08:	e5c43034 	strb	r3, [r4, #52]	; 0x34
40009c0c:	e5942014 	ldr	r2, [r4, #20]
40009c10:	e5943010 	ldr	r3, [r4, #16]
40009c14:	e1520003 	cmp	r2, r3
40009c18:	3affffe5 	bcc	40009bb4 <HttpDeamonHandleRequest::HandlePost(bool)+0x94>
40009c1c:	e594100c 	ldr	r1, [r4, #12]
40009c20:	e3510000 	cmp	r1, #0
40009c24:	0affffe2 	beq	40009bb4 <HttpDeamonHandleRequest::HandlePost(bool)+0x94>
40009c28:	e5d43034 	ldrb	r3, [r4, #52]	; 0x34
40009c2c:	e594001c 	ldr	r0, [r4, #28]
40009c30:	e3530000 	cmp	r3, #0
40009c34:	0affffc5 	beq	40009b50 <HttpDeamonHandleRequest::HandlePost(bool)+0x30>
40009c38:	e3a02001 	mov	r2, #1
40009c3c:	eb006d59 	bl	400251a8 <properties::convert_json_file(char*, unsigned long, bool)>
40009c40:	e2505000 	subs	r5, r0, #0
40009c44:	da00002d 	ble	40009d00 <HttpDeamonHandleRequest::HandlePost(bool)+0x1e0>
40009c48:	e594301c 	ldr	r3, [r4, #28]
40009c4c:	e3a02000 	mov	r2, #0
40009c50:	e30e1468 	movw	r1, #58472	; 0xe468
40009c54:	e0833005 	add	r3, r3, r5
40009c58:	e3441002 	movt	r1, #16386	; 0x4002
40009c5c:	e5432001 	strb	r2, [r3, #-1]
40009c60:	e28d2007 	add	r2, sp, #7
40009c64:	e594001c 	ldr	r0, [r4, #28]
40009c68:	eb006f1b 	bl	400258dc <Sscan::Uint8(char const*, char const*, unsigned char&)>
40009c6c:	e3500000 	cmp	r0, #0
40009c70:	1a000038 	bne	40009d58 <HttpDeamonHandleRequest::HandlePost(bool)+0x238>
40009c74:	e5dd3007 	ldrb	r3, [sp, #7]
40009c78:	e3530000 	cmp	r3, #0
40009c7c:	0affffc3 	beq	40009b90 <HttpDeamonHandleRequest::HandlePost(bool)+0x70>
40009c80:	e3043050 	movw	r3, #16464	; 0x4050
40009c84:	e3443003 	movt	r3, #16387	; 0x4003
40009c88:	e5930000 	ldr	r0, [r3]
40009c8c:	e5d0301e 	ldrb	r3, [r0, #30]
40009c90:	e3530000 	cmp	r3, #0
40009c94:	0a000019 	beq	40009d00 <HttpDeamonHandleRequest::HandlePost(bool)+0x1e0>
40009c98:	ebfffbaf 	bl	40008b5c <RemoteConfig::HandleReboot()>
40009c9c:	e594001c 	ldr	r0, [r4, #28]
40009ca0:	e30e1484 	movw	r1, #58500	; 0xe484
40009ca4:	e3441002 	movt	r1, #16386	; 0x4002
40009ca8:	e3a0c064 	mov	ip, #100	; 0x64
40009cac:	e2402001 	sub	r2, r0, #1
40009cb0:	e2806004 	add	r6, r0, #4
40009cb4:	e1a03002 	mov	r3, r2
40009cb8:	ea000002 	b	40009cc8 <HttpDeamonHandleRequest::HandlePost(bool)+0x1a8>
40009cbc:	e1560003 	cmp	r6, r3
40009cc0:	0a000055 	beq	40009e1c <HttpDeamonHandleRequest::HandlePost(bool)+0x2fc>
40009cc4:	e5f1c001 	ldrb	ip, [r1, #1]!
40009cc8:	e5f3e001 	ldrb	lr, [r3, #1]!
40009ccc:	e15e000c 	cmp	lr, ip
40009cd0:	0afffff9 	beq	40009cbc <HttpDeamonHandleRequest::HandlePost(bool)+0x19c>
40009cd4:	e30e348c 	movw	r3, #58508	; 0xe48c
40009cd8:	e280e003 	add	lr, r0, #3
40009cdc:	e3443002 	movt	r3, #16386	; 0x4002
40009ce0:	e3a0c072 	mov	ip, #114	; 0x72
40009ce4:	ea000002 	b	40009cf4 <HttpDeamonHandleRequest::HandlePost(bool)+0x1d4>
40009ce8:	e152000e 	cmp	r2, lr
40009cec:	0a00004d 	beq	40009e28 <HttpDeamonHandleRequest::HandlePost(bool)+0x308>
40009cf0:	e5f3c001 	ldrb	ip, [r3, #1]!
40009cf4:	e5f21001 	ldrb	r1, [r2, #1]!
40009cf8:	e151000c 	cmp	r1, ip
40009cfc:	0afffff9 	beq	40009ce8 <HttpDeamonHandleRequest::HandlePost(bool)+0x1c8>
40009d00:	e3a00e19 	mov	r0, #400	; 0x190
40009d04:	e28dd008 	add	sp, sp, #8
40009d08:	e8bd8070 	pop	{r4, r5, r6, pc}
40009d0c:	e3a0302f 	mov	r3, #47	; 0x2f
40009d10:	e0433002 	sub	r3, r3, r2
40009d14:	e16f3f13 	clz	r3, r3
40009d18:	e1a032a3 	lsr	r3, r3, #5
40009d1c:	e5c43034 	strb	r3, [r4, #52]	; 0x34
40009d20:	e5dc3000 	ldrb	r3, [ip]
40009d24:	e353002f 	cmp	r3, #47	; 0x2f
40009d28:	03a0306a 	moveq	r3, #106	; 0x6a
40009d2c:	059f1104 	ldreq	r1, [pc, #260]	; 40009e38 <HttpDeamonHandleRequest::HandlePost(bool)+0x318>
40009d30:	0a000003 	beq	40009d44 <HttpDeamonHandleRequest::HandlePost(bool)+0x224>
40009d34:	ea000005 	b	40009d50 <HttpDeamonHandleRequest::HandlePost(bool)+0x230>
40009d38:	e3530000 	cmp	r3, #0
40009d3c:	0affffb2 	beq	40009c0c <HttpDeamonHandleRequest::HandlePost(bool)+0xec>
40009d40:	e5f13001 	ldrb	r3, [r1, #1]!
40009d44:	e5fc2001 	ldrb	r2, [ip, #1]!
40009d48:	e1520003 	cmp	r2, r3
40009d4c:	0afffff9 	beq	40009d38 <HttpDeamonHandleRequest::HandlePost(bool)+0x218>
40009d50:	e3a00f65 	mov	r0, #404	; 0x194
40009d54:	eaffff97 	b	40009bb8 <HttpDeamonHandleRequest::HandlePost(bool)+0x98>
40009d58:	e594001c 	ldr	r0, [r4, #28]
40009d5c:	e30e1470 	movw	r1, #58480	; 0xe470
40009d60:	e3441002 	movt	r1, #16386	; 0x4002
40009d64:	e28d2007 	add	r2, sp, #7
40009d68:	eb006edb 	bl	400258dc <Sscan::Uint8(char const*, char const*, unsigned char&)>
40009d6c:	e3500000 	cmp	r0, #0
40009d70:	1a000017 	bne	40009dd4 <HttpDeamonHandleRequest::HandlePost(bool)+0x2b4>
40009d74:	e5dd6007 	ldrb	r6, [sp, #7]
40009d78:	e304307c 	movw	r3, #16508	; 0x407c
40009d7c:	e3443003 	movt	r3, #16387	; 0x4003
40009d80:	e16f1f16 	clz	r1, r6
40009d84:	e5935000 	ldr	r5, [r3]
40009d88:	e1a012a1 	lsr	r1, r1, #5
40009d8c:	e5950014 	ldr	r0, [r5, #20]
40009d90:	e3500000 	cmp	r0, #0
40009d94:	0affff7d 	beq	40009b90 <HttpDeamonHandleRequest::HandlePost(bool)+0x70>
40009d98:	e5903000 	ldr	r3, [r0]
40009d9c:	e5c51011 	strb	r1, [r5, #17]
40009da0:	e5932028 	ldr	r2, [r3, #40]	; 0x28
40009da4:	e30237c8 	movw	r3, #10184	; 0x27c8
40009da8:	e3443000 	movt	r3, #16384	; 0x4000
40009dac:	e1520003 	cmp	r2, r3
40009db0:	1a000017 	bne	40009e14 <HttpDeamonHandleRequest::HandlePost(bool)+0x2f4>
40009db4:	e3560000 	cmp	r6, #0
40009db8:	0affff74 	beq	40009b90 <HttpDeamonHandleRequest::HandlePost(bool)+0x70>
40009dbc:	e595100c 	ldr	r1, [r5, #12]
40009dc0:	e1a00005 	mov	r0, r5
40009dc4:	e2511000 	subs	r1, r1, #0
40009dc8:	13a01001 	movne	r1, #1
40009dcc:	eb006c03 	bl	40024de0 <Display::SetSleepTimer(bool)>
40009dd0:	eaffff6e 	b	40009b90 <HttpDeamonHandleRequest::HandlePost(bool)+0x70>
40009dd4:	e594001c 	ldr	r0, [r4, #28]
40009dd8:	e30e1478 	movw	r1, #58488	; 0xe478
40009ddc:	e3441002 	movt	r1, #16386	; 0x4002
40009de0:	e28d2007 	add	r2, sp, #7
40009de4:	eb006ebc 	bl	400258dc <Sscan::Uint8(char const*, char const*, unsigned char&)>
40009de8:	e3500000 	cmp	r0, #0
40009dec:	1affffaa 	bne	40009c9c <HttpDeamonHandleRequest::HandlePost(bool)+0x17c>
40009df0:	e5dd2007 	ldrb	r2, [sp, #7]
40009df4:	e3043088 	movw	r3, #16520	; 0x4088
40009df8:	e3443003 	movt	r3, #16387	; 0x4003
40009dfc:	e3520000 	cmp	r2, #0
40009e00:	e5930000 	ldr	r0, [r3]
40009e04:	13a01004 	movne	r1, #4
40009e08:	03a01002 	moveq	r1, #2
40009e0c:	eb00703c 	bl	40025f04 <Hardware::SetMode(hardware::ledblink::Mode)>
40009e10:	eaffff5e 	b	40009b90 <HttpDeamonHandleRequest::HandlePost(bool)+0x70>
40009e14:	e12fff32 	blx	r2
40009e18:	eaffffe5 	b	40009db4 <HttpDeamonHandleRequest::HandlePost(bool)+0x294>
40009e1c:	e1a01005 	mov	r1, r5
40009e20:	eb0070c3 	bl	40026134 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)>
40009e24:	eaffff59 	b	40009b90 <HttpDeamonHandleRequest::HandlePost(bool)+0x70>
40009e28:	e1a01005 	mov	r1, r5
40009e2c:	eb007496 	bl	4002708c <remoteconfig::rtc::json_set_rtc(char const*, unsigned long)>
40009e30:	eaffff56 	b	40009b90 <HttpDeamonHandleRequest::HandlePost(bool)+0x70>
40009e34:	4002e451 	andmi	lr, r2, r1, asr r4
40009e38:	4002e461 	andmi	lr, r2, r1, ror #8

40009e3c <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)>:
40009e3c:	e5903028 	ldr	r3, [r0, #40]	; 0x28
40009e40:	e92d4030 	push	{r4, r5, lr}
40009e44:	e3530f82 	cmp	r3, #520	; 0x208
40009e48:	e5801014 	str	r1, [r0, #20]
40009e4c:	e24dd014 	sub	sp, sp, #20
40009e50:	e5802024 	str	r2, [r0, #36]	; 0x24
40009e54:	e1a04000 	mov	r4, r0
40009e58:	0a000061 	beq	40009fe4 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x1a8>
40009e5c:	e35300c8 	cmp	r3, #200	; 0xc8
40009e60:	0a000056 	beq	40009fc0 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x184>
40009e64:	e300219e 	movw	r2, #414	; 0x19e
40009e68:	e1530002 	cmp	r3, r2
40009e6c:	ca000044 	bgt	40009f84 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x148>
40009e70:	e3530e19 	cmp	r3, #400	; 0x190
40009e74:	ba000012 	blt	40009ec4 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x88>
40009e78:	e2432e19 	sub	r2, r3, #400	; 0x190
40009e7c:	e352000e 	cmp	r2, #14
40009e80:	979ff102 	ldrls	pc, [pc, r2, lsl #2]
40009e84:	ea00000e 	b	40009ec4 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x88>
40009e88:	4000a038 	andmi	sl, r0, r8, lsr r0
40009e8c:	40009ec4 	andmi	r9, r0, r4, asr #29
40009e90:	40009ec4 	andmi	r9, r0, r4, asr #29
40009e94:	40009ec4 	andmi	r9, r0, r4, asr #29
40009e98:	4000a06c 	andmi	sl, r0, ip, rrx
40009e9c:	40009ec4 	andmi	r9, r0, r4, asr #29
40009ea0:	40009ec4 	andmi	r9, r0, r4, asr #29
40009ea4:	40009ec4 	andmi	r9, r0, r4, asr #29
40009ea8:	40009ec4 	andmi	r9, r0, r4, asr #29
40009eac:	40009ec4 	andmi	r9, r0, r4, asr #29
40009eb0:	40009ec4 	andmi	r9, r0, r4, asr #29
40009eb4:	40009ec4 	andmi	r9, r0, r4, asr #29
40009eb8:	40009ec4 	andmi	r9, r0, r4, asr #29
40009ebc:	4000a020 	andmi	sl, r0, r0, lsr #32
40009ec0:	4000a02c 	andmi	sl, r0, ip, lsr #32
40009ec4:	e30e5508 	movw	r5, #58632	; 0xe508
40009ec8:	e3445002 	movt	r5, #16386	; 0x4002
40009ecc:	e58d5004 	str	r5, [sp, #4]
40009ed0:	e3a02000 	mov	r2, #0
40009ed4:	e5842030 	str	r2, [r4, #48]	; 0x30
40009ed8:	e30600c0 	movw	r0, #24768	; 0x60c0
40009edc:	e3440005 	movt	r0, #16389	; 0x4005
40009ee0:	e30e2598 	movw	r2, #58776	; 0xe598
40009ee4:	e5840020 	str	r0, [r4, #32]
40009ee8:	e3001fff 	movw	r1, #4095	; 0xfff
40009eec:	e3442002 	movt	r2, #16386	; 0x4002
40009ef0:	e58d5000 	str	r5, [sp]
40009ef4:	eb008b42 	bl	4002cc04 <snprintf>
40009ef8:	e594c024 	ldr	ip, [r4, #36]	; 0x24
40009efc:	e5943028 	ldr	r3, [r4, #40]	; 0x28
40009f00:	e5840008 	str	r0, [r4, #8]
40009f04:	e58d000c 	str	r0, [sp, #12]
40009f08:	e30e164c 	movw	r1, #58956	; 0xe64c
40009f0c:	e58d5000 	str	r5, [sp]
40009f10:	e1a0000c 	mov	r0, ip
40009f14:	e594c030 	ldr	ip, [r4, #48]	; 0x30
40009f18:	e30e25f4 	movw	r2, #58868	; 0xe5f4
40009f1c:	e3441002 	movt	r1, #16386	; 0x4002
40009f20:	e081128c 	add	r1, r1, ip, lsl #5
40009f24:	e58d1008 	str	r1, [sp, #8]
40009f28:	e3041080 	movw	r1, #16512	; 0x4080
40009f2c:	e3441003 	movt	r1, #16387	; 0x4003
40009f30:	e3442002 	movt	r2, #16386	; 0x4002
40009f34:	e5911000 	ldr	r1, [r1]
40009f38:	e2811014 	add	r1, r1, #20
40009f3c:	e58d1004 	str	r1, [sp, #4]
40009f40:	e3001fff 	movw	r1, #4095	; 0xfff
40009f44:	eb008b2e 	bl	4002cc04 <snprintf>
40009f48:	e5943000 	ldr	r3, [r4]
40009f4c:	e1a02000 	mov	r2, r0
40009f50:	e5941024 	ldr	r1, [r4, #36]	; 0x24
40009f54:	e5940004 	ldr	r0, [r4, #4]
40009f58:	eb006031 	bl	40022024 <net::tcp_write(long, unsigned char const*, unsigned long, unsigned long)>
40009f5c:	e5941020 	ldr	r1, [r4, #32]
40009f60:	e5940004 	ldr	r0, [r4, #4]
40009f64:	e5943000 	ldr	r3, [r4]
40009f68:	e5942008 	ldr	r2, [r4, #8]
40009f6c:	eb00602c 	bl	40022024 <net::tcp_write(long, unsigned char const*, unsigned long, unsigned long)>
40009f70:	e3a00f82 	mov	r0, #520	; 0x208
40009f74:	e3a01003 	mov	r1, #3
40009f78:	e1c402f8 	strd	r0, [r4, #40]	; 0x28
40009f7c:	e28dd014 	add	sp, sp, #20
40009f80:	e8bd8030 	pop	{r4, r5, pc}
40009f84:	e30021f5 	movw	r2, #501	; 0x1f5
40009f88:	e1530002 	cmp	r3, r2
40009f8c:	0a000020 	beq	4000a014 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x1d8>
40009f90:	e30021f9 	movw	r2, #505	; 0x1f9
40009f94:	e1530002 	cmp	r3, r2
40009f98:	030e54f0 	movweq	r5, #58608	; 0xe4f0
40009f9c:	03445002 	movteq	r5, #16386	; 0x4002
40009fa0:	0affffc9 	beq	40009ecc <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x90>
40009fa4:	e30e2508 	movw	r2, #58632	; 0xe508
40009fa8:	e30e557c 	movw	r5, #58748	; 0xe57c
40009fac:	e3442002 	movt	r2, #16386	; 0x4002
40009fb0:	e3530f7d 	cmp	r3, #500	; 0x1f4
40009fb4:	e3445002 	movt	r5, #16386	; 0x4002
40009fb8:	11a05002 	movne	r5, r2
40009fbc:	eaffffc2 	b	40009ecc <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x90>
40009fc0:	e590102c 	ldr	r1, [r0, #44]	; 0x2c
40009fc4:	e1a0c002 	mov	ip, r2
40009fc8:	e3510001 	cmp	r1, #1
40009fcc:	0a00001c 	beq	4000a044 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x208>
40009fd0:	e5940008 	ldr	r0, [r4, #8]
40009fd4:	e30e5594 	movw	r5, #58772	; 0xe594
40009fd8:	e3445002 	movt	r5, #16386	; 0x4002
40009fdc:	e3a030c8 	mov	r3, #200	; 0xc8
40009fe0:	eaffffc7 	b	40009f04 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0xc8>
40009fe4:	ebfffd87 	bl	40009608 <HttpDeamonHandleRequest::ParseRequest()>
40009fe8:	e5840028 	str	r0, [r4, #40]	; 0x28
40009fec:	e35000c8 	cmp	r0, #200	; 0xc8
40009ff0:	e1a03000 	mov	r3, r0
40009ff4:	1affff9a 	bne	40009e64 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x28>
40009ff8:	e594302c 	ldr	r3, [r4, #44]	; 0x2c
40009ffc:	e3530000 	cmp	r3, #0
4000a000:	0a00001c 	beq	4000a078 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x23c>
4000a004:	e3530001 	cmp	r3, #1
4000a008:	0a00001d 	beq	4000a084 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x248>
4000a00c:	e594c024 	ldr	ip, [r4, #36]	; 0x24
4000a010:	eaffffee 	b	40009fd0 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x194>
4000a014:	e30e554c 	movw	r5, #58700	; 0xe54c
4000a018:	e3445002 	movt	r5, #16386	; 0x4002
4000a01c:	eaffffaa 	b	40009ecc <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x90>
4000a020:	e30e5518 	movw	r5, #58648	; 0xe518
4000a024:	e3445002 	movt	r5, #16386	; 0x4002
4000a028:	eaffffa7 	b	40009ecc <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x90>
4000a02c:	e30e5534 	movw	r5, #58676	; 0xe534
4000a030:	e3445002 	movt	r5, #16386	; 0x4002
4000a034:	eaffffa4 	b	40009ecc <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x90>
4000a038:	e30e5564 	movw	r5, #58724	; 0xe564
4000a03c:	e3445002 	movt	r5, #16386	; 0x4002
4000a040:	eaffffa1 	b	40009ecc <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x90>
4000a044:	ebfffeb5 	bl	40009b20 <HttpDeamonHandleRequest::HandlePost(bool)>
4000a048:	e5840028 	str	r0, [r4, #40]	; 0x28
4000a04c:	e35000c8 	cmp	r0, #200	; 0xc8
4000a050:	e1a03000 	mov	r3, r0
4000a054:	1affff82 	bne	40009e64 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x28>
4000a058:	e594c024 	ldr	ip, [r4, #36]	; 0x24
4000a05c:	e30e5594 	movw	r5, #58772	; 0xe594
4000a060:	e5940008 	ldr	r0, [r4, #8]
4000a064:	e3445002 	movt	r5, #16386	; 0x4002
4000a068:	eaffffa5 	b	40009f04 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0xc8>
4000a06c:	e30e5570 	movw	r5, #58736	; 0xe570
4000a070:	e3445002 	movt	r5, #16386	; 0x4002
4000a074:	eaffff94 	b	40009ecc <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x90>
4000a078:	e1a00004 	mov	r0, r4
4000a07c:	ebfffde7 	bl	40009820 <HttpDeamonHandleRequest::HandleGet()>
4000a080:	eafffff0 	b	4000a048 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x20c>
4000a084:	e3a01000 	mov	r1, #0
4000a088:	e1a00004 	mov	r0, r4
4000a08c:	ebfffea3 	bl	40009b20 <HttpDeamonHandleRequest::HandlePost(bool)>
4000a090:	e5840028 	str	r0, [r4, #40]	; 0x28
4000a094:	e35000c8 	cmp	r0, #200	; 0xc8
4000a098:	e1a03000 	mov	r3, r0
4000a09c:	1affff70 	bne	40009e64 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x28>
4000a0a0:	e594300c 	ldr	r3, [r4, #12]
4000a0a4:	e3530000 	cmp	r3, #0
4000a0a8:	1affffd7 	bne	4000a00c <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x1d0>
4000a0ac:	eaffffb2 	b	40009f7c <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x140>

4000a0b0 <remoteconfig::json_get_list(char*, unsigned long)>:
4000a0b0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000a0b4:	e1a05000 	mov	r5, r0
4000a0b8:	e59f8070 	ldr	r8, [pc, #112]	; 4000a130 <remoteconfig::json_get_list(char*, unsigned long)+0x80>
4000a0bc:	e24dd020 	sub	sp, sp, #32
4000a0c0:	e59f306c 	ldr	r3, [pc, #108]	; 4000a134 <remoteconfig::json_get_list(char*, unsigned long)+0x84>
4000a0c4:	e1a06001 	mov	r6, r1
4000a0c8:	e5980000 	ldr	r0, [r8]
4000a0cc:	e5934000 	ldr	r4, [r3]
4000a0d0:	ebfff763 	bl	40007e64 <RemoteConfig::GetStringNode() const>
4000a0d4:	e1a07000 	mov	r7, r0
4000a0d8:	e5980000 	ldr	r0, [r8]
4000a0dc:	ebfff768 	bl	40007e84 <RemoteConfig::GetStringOutput() const>
4000a0e0:	e59f3050 	ldr	r3, [pc, #80]	; 4000a138 <remoteconfig::json_get_list(char*, unsigned long)+0x88>
4000a0e4:	e1a01006 	mov	r1, r6
4000a0e8:	e5d32008 	ldrb	r2, [r3, #8]
4000a0ec:	e2833009 	add	r3, r3, #9
4000a0f0:	e58d300c 	str	r3, [sp, #12]
4000a0f4:	e1a03c24 	lsr	r3, r4, #24
4000a0f8:	e58d3008 	str	r3, [sp, #8]
4000a0fc:	e7e73854 	ubfx	r3, r4, #16, #8
4000a100:	e58d3004 	str	r3, [sp, #4]
4000a104:	e7e73454 	ubfx	r3, r4, #8, #8
4000a108:	e58d2018 	str	r2, [sp, #24]
4000a10c:	e58d0014 	str	r0, [sp, #20]
4000a110:	e1a00005 	mov	r0, r5
4000a114:	e58d3000 	str	r3, [sp]
4000a118:	e6ef3074 	uxtb	r3, r4
4000a11c:	e59f2018 	ldr	r2, [pc, #24]	; 4000a13c <remoteconfig::json_get_list(char*, unsigned long)+0x8c>
4000a120:	e58d7010 	str	r7, [sp, #16]
4000a124:	eb008ab6 	bl	4002cc04 <snprintf>
4000a128:	e28dd020 	add	sp, sp, #32
4000a12c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000a130:	40034050 	andmi	r4, r3, r0, asr r0
4000a134:	4005a73c 	andmi	sl, r5, ip, lsr r7
4000a138:	40034098 	mulmi	r3, r8, r0
4000a13c:	4002e6ec 	andmi	lr, r2, ip, ror #13

4000a140 <remoteconfig::json_get_version(char*, unsigned long)>:
4000a140:	e59f305c 	ldr	r3, [pc, #92]	; 4000a1a4 <remoteconfig::json_get_version(char*, unsigned long)+0x64>
4000a144:	e92d4030 	push	{r4, r5, lr}
4000a148:	e24dd024 	sub	sp, sp, #36	; 0x24
4000a14c:	e1a04000 	mov	r4, r0
4000a150:	e1a05001 	mov	r5, r1
4000a154:	e5930000 	ldr	r0, [r3]
4000a158:	e28d101f 	add	r1, sp, #31
4000a15c:	eb0070d7 	bl	400264c0 <Hardware::GetBoardName(unsigned char&)>
4000a160:	e59f3040 	ldr	r3, [pc, #64]	; 4000a1a8 <remoteconfig::json_get_version(char*, unsigned long)+0x68>
4000a164:	e3a02008 	mov	r2, #8
4000a168:	e58d2010 	str	r2, [sp, #16]
4000a16c:	e1a01005 	mov	r1, r5
4000a170:	e58d3014 	str	r3, [sp, #20]
4000a174:	e243200b 	sub	r2, r3, #11
4000a178:	e58d200c 	str	r2, [sp, #12]
4000a17c:	e243300e 	sub	r3, r3, #14
4000a180:	e58d3000 	str	r3, [sp]
4000a184:	e3a0200b 	mov	r2, #11
4000a188:	e98d0005 	stmib	sp, {r0, r2}
4000a18c:	e59f2018 	ldr	r2, [pc, #24]	; 4000a1ac <remoteconfig::json_get_version(char*, unsigned long)+0x6c>
4000a190:	e3a03003 	mov	r3, #3
4000a194:	e1a00004 	mov	r0, r4
4000a198:	eb008a99 	bl	4002cc04 <snprintf>
4000a19c:	e28dd024 	add	sp, sp, #36	; 0x24
4000a1a0:	e8bd8030 	pop	{r4, r5, pc}
4000a1a4:	40034088 	andmi	r4, r3, r8, lsl #1
4000a1a8:	400570ce 	andmi	r7, r5, lr, asr #1
4000a1ac:	4002e74b 	andmi	lr, r2, fp, asr #14

4000a1b0 <remoteconfig::json_get_uptime(char*, unsigned long)>:
4000a1b0:	e92d4070 	push	{r4, r5, r6, lr}
4000a1b4:	e1a04000 	mov	r4, r0
4000a1b8:	e1a05001 	mov	r5, r1
4000a1bc:	eb0070e8 	bl	40026564 <hardware_uptime_seconds()>
4000a1c0:	e59f2010 	ldr	r2, [pc, #16]	; 4000a1d8 <remoteconfig::json_get_uptime(char*, unsigned long)+0x28>
4000a1c4:	e1a03000 	mov	r3, r0
4000a1c8:	e1a01005 	mov	r1, r5
4000a1cc:	e1a00004 	mov	r0, r4
4000a1d0:	e8bd4070 	pop	{r4, r5, r6, lr}
4000a1d4:	ea008a8a 	b	4002cc04 <snprintf>
4000a1d8:	4002e791 	mulmi	r2, r1, r7

4000a1dc <remoteconfig::json_get_display(char*, unsigned long)>:
4000a1dc:	e59f3010 	ldr	r3, [pc, #16]	; 4000a1f4 <remoteconfig::json_get_display(char*, unsigned long)+0x18>
4000a1e0:	e59f2010 	ldr	r2, [pc, #16]	; 4000a1f8 <remoteconfig::json_get_display(char*, unsigned long)+0x1c>
4000a1e4:	e5933000 	ldr	r3, [r3]
4000a1e8:	e5d33011 	ldrb	r3, [r3, #17]
4000a1ec:	e2233001 	eor	r3, r3, #1
4000a1f0:	ea008a83 	b	4002cc04 <snprintf>
4000a1f4:	4003407c 	andmi	r4, r3, ip, ror r0
4000a1f8:	4002e7a0 	andmi	lr, r2, r0, lsr #15

4000a1fc <remoteconfig::json_get_directory(char*, unsigned long)>:
4000a1fc:	e59f2000 	ldr	r2, [pc]	; 4000a204 <remoteconfig::json_get_directory(char*, unsigned long)+0x8>
4000a200:	ea008a7f 	b	4002cc04 <snprintf>
4000a204:	4002e7af 	andmi	lr, r2, pc, lsr #15

4000a208 <tftpfileserver::is_valid(void const*)>:
4000a208:	e92d4007 	push	{r0, r1, r2, lr}
4000a20c:	e1a01000 	mov	r1, r0
4000a210:	e1a0000d 	mov	r0, sp
4000a214:	eb004ca1 	bl	4001d4a0 <UBootHeader::UBootHeader(unsigned char*)>
4000a218:	e5dd0004 	ldrb	r0, [sp, #4]
4000a21c:	e28dd00c 	add	sp, sp, #12
4000a220:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

4000a224 <get_file_content(char const*, unsigned long&, http::contentTypes&)>:
4000a224:	e92d4070 	push	{r4, r5, r6, lr}
4000a228:	e1a0e000 	mov	lr, r0
4000a22c:	e59f3058 	ldr	r3, [pc, #88]	; 4000a28c <get_file_content(char const*, unsigned long&, http::contentTypes&)+0x68>
4000a230:	e3a0000a 	mov	r0, #10
4000a234:	e593c000 	ldr	ip, [r3]
4000a238:	e24e5001 	sub	r5, lr, #1
4000a23c:	e24cc001 	sub	ip, ip, #1
4000a240:	e5f56001 	ldrb	r6, [r5, #1]!
4000a244:	e5fc4001 	ldrb	r4, [ip, #1]!
4000a248:	e1540006 	cmp	r4, r6
4000a24c:	1a000007 	bne	4000a270 <get_file_content(char const*, unsigned long&, http::contentTypes&)+0x4c>
4000a250:	e3540000 	cmp	r4, #0
4000a254:	1afffff9 	bne	4000a240 <get_file_content(char const*, unsigned long&, http::contentTypes&)+0x1c>
4000a258:	e5930008 	ldr	r0, [r3, #8]
4000a25c:	e5810000 	str	r0, [r1]
4000a260:	e593100c 	ldr	r1, [r3, #12]
4000a264:	e5930004 	ldr	r0, [r3, #4]
4000a268:	e5821000 	str	r1, [r2]
4000a26c:	e8bd8070 	pop	{r4, r5, r6, pc}
4000a270:	e2500001 	subs	r0, r0, #1
4000a274:	e2833010 	add	r3, r3, #16
4000a278:	1affffed 	bne	4000a234 <get_file_content(char const*, unsigned long&, http::contentTypes&)+0x10>
4000a27c:	e5810000 	str	r0, [r1]
4000a280:	e3a03005 	mov	r3, #5
4000a284:	e5823000 	str	r3, [r2]
4000a288:	e8bd8070 	pop	{r4, r5, r6, pc}
4000a28c:	4002ee28 	andmi	lr, r2, r8, lsr #28

4000a290 <ArtNetNode::staticCallbackFunctionLedPanelOff(long)>:
4000a290:	e12fff1e 	bx	lr

4000a294 <strncpy.isra.0>:
4000a294:	e3520000 	cmp	r2, #0
4000a298:	012fff1e 	bxeq	lr
4000a29c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4000a2a0:	ea000003 	b	4000a2b4 <strncpy.isra.0+0x20>
4000a2a4:	e4c0c001 	strb	ip, [r0], #1
4000a2a8:	e35e0000 	cmp	lr, #0
4000a2ac:	e1a0200e 	mov	r2, lr
4000a2b0:	049df004 	popeq	{pc}		; (ldreq pc, [sp], #4)
4000a2b4:	e4d1c001 	ldrb	ip, [r1], #1
4000a2b8:	e242e001 	sub	lr, r2, #1
4000a2bc:	e35c0000 	cmp	ip, #0
4000a2c0:	1afffff7 	bne	4000a2a4 <strncpy.isra.0+0x10>
4000a2c4:	e0802002 	add	r2, r0, r2
4000a2c8:	e1a03000 	mov	r3, r0
4000a2cc:	e4c3c001 	strb	ip, [r3], #1
4000a2d0:	e1520003 	cmp	r2, r3
4000a2d4:	1afffffc 	bne	4000a2cc <strncpy.isra.0+0x38>
4000a2d8:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

4000a2dc <ArtNetNode::Start()>:
4000a2dc:	e92d4010 	push	{r4, lr}
4000a2e0:	e3a01000 	mov	r1, #0
4000a2e4:	e5d030fb 	ldrb	r3, [r0, #251]	; 0xfb
4000a2e8:	e1a04000 	mov	r4, r0
4000a2ec:	e59f205c 	ldr	r2, [pc, #92]	; 4000a350 <ArtNetNode::Start()+0x74>
4000a2f0:	e1e03d83 	mvn	r3, r3, lsl #27
4000a2f4:	e5d2201a 	ldrb	r2, [r2, #26]
4000a2f8:	e1e03da3 	mvn	r3, r3, lsr #27
4000a2fc:	e5c030fb 	strb	r3, [r0, #251]	; 0xfb
4000a300:	e2022002 	and	r2, r2, #2
4000a304:	e5d031b8 	ldrb	r3, [r0, #440]	; 0x1b8
4000a308:	e20330e9 	and	r3, r3, #233	; 0xe9
4000a30c:	e1833002 	orr	r3, r3, r2
4000a310:	e383300d 	orr	r3, r3, #13
4000a314:	e5c031b8 	strb	r3, [r0, #440]	; 0x1b8
4000a318:	e3a03021 	mov	r3, #33	; 0x21
4000a31c:	e5c031bd 	strb	r3, [r0, #445]	; 0x1bd
4000a320:	e3010936 	movw	r0, #6454	; 0x1936
4000a324:	eb005fc7 	bl	40022248 <net::udp_begin(unsigned short, void (*)(unsigned char const*, unsigned long, unsigned long, unsigned short))>
4000a328:	e5840000 	str	r0, [r4]
4000a32c:	e3a000c8 	mov	r0, #200	; 0xc8
4000a330:	e59f101c 	ldr	r1, [pc, #28]	; 4000a354 <ArtNetNode::Start()+0x78>
4000a334:	eb0075f9 	bl	40027b20 <SoftwareTimerAdd(unsigned long, void (*)(long))>
4000a338:	e59f3018 	ldr	r3, [pc, #24]	; 4000a358 <ArtNetNode::Start()+0x7c>
4000a33c:	e3a01002 	mov	r1, #2
4000a340:	e5c41099 	strb	r1, [r4, #153]	; 0x99
4000a344:	e5930000 	ldr	r0, [r3]
4000a348:	e8bd4010 	pop	{r4, lr}
4000a34c:	ea006eec 	b	40025f04 <Hardware::SetMode(hardware::ledblink::Mode)>
4000a350:	4005a73c 	andmi	sl, r5, ip, lsr r7
4000a354:	4000a290 	mulmi	r0, r0, r2
4000a358:	40034088 	andmi	r4, r3, r8, lsl #1

4000a35c <ArtNetNode::SetShortName(unsigned long, char const*)>:
4000a35c:	e92d407f 	push	{r0, r1, r2, r3, r4, r5, r6, lr}
4000a360:	e3a05028 	mov	r5, #40	; 0x28
4000a364:	e0250195 	mla	r5, r5, r1, r0
4000a368:	e1a04001 	mov	r4, r1
4000a36c:	e2521000 	subs	r1, r2, #0
4000a370:	e1a06000 	mov	r6, r0
4000a374:	e2855034 	add	r5, r5, #52	; 0x34
4000a378:	1a00001b 	bne	4000a3ec <ArtNetNode::SetShortName(unsigned long, char const*)+0x90>
4000a37c:	e59f2078 	ldr	r2, [pc, #120]	; 4000a3fc <ArtNetNode::SetShortName(unsigned long, char const*)+0xa0>
4000a380:	e2843001 	add	r3, r4, #1
4000a384:	e3a01011 	mov	r1, #17
4000a388:	e1a00005 	mov	r0, r5
4000a38c:	eb008a1c 	bl	4002cc04 <snprintf>
4000a390:	e3a03028 	mov	r3, #40	; 0x28
4000a394:	e3a01000 	mov	r1, #0
4000a398:	e0236493 	mla	r3, r3, r4, r6
4000a39c:	e5c31045 	strb	r1, [r3, #69]	; 0x45
4000a3a0:	e5d63099 	ldrb	r3, [r6, #153]	; 0x99
4000a3a4:	e3530002 	cmp	r3, #2
4000a3a8:	1a00000d 	bne	4000a3e4 <ArtNetNode::SetShortName(unsigned long, char const*)+0x88>
4000a3ac:	e3540003 	cmp	r4, #3
4000a3b0:	8a00000b 	bhi	4000a3e4 <ArtNetNode::SetShortName(unsigned long, char const*)+0x88>
4000a3b4:	e58d1008 	str	r1, [sp, #8]
4000a3b8:	e3a03012 	mov	r3, #18
4000a3bc:	e59f003c 	ldr	r0, [pc, #60]	; 4000a400 <ArtNetNode::SetShortName(unsigned long, char const*)+0xa4>
4000a3c0:	e3a01080 	mov	r1, #128	; 0x80
4000a3c4:	e0020493 	mul	r2, r3, r4
4000a3c8:	e1a04411 	lsl	r4, r1, r4
4000a3cc:	e3a01019 	mov	r1, #25
4000a3d0:	e88d0018 	stm	sp, {r3, r4}
4000a3d4:	e5900000 	ldr	r0, [r0]
4000a3d8:	e1a03005 	mov	r3, r5
4000a3dc:	e2822053 	add	r2, r2, #83	; 0x53
4000a3e0:	eb0048e0 	bl	4001c768 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
4000a3e4:	e28dd010 	add	sp, sp, #16
4000a3e8:	e8bd8070 	pop	{r4, r5, r6, pc}
4000a3ec:	e3a02011 	mov	r2, #17
4000a3f0:	e1a00005 	mov	r0, r5
4000a3f4:	ebffffa6 	bl	4000a294 <strncpy.isra.0>
4000a3f8:	eaffffe4 	b	4000a390 <ArtNetNode::SetShortName(unsigned long, char const*)+0x34>
4000a3fc:	400305ef 	andmi	r0, r3, pc, ror #11
4000a400:	40034084 	andmi	r4, r3, r4, lsl #1

4000a404 <ArtNetNode::GetLongNameDefault(char*)>:
4000a404:	e59f3048 	ldr	r3, [pc, #72]	; 4000a454 <ArtNetNode::GetLongNameDefault(char*)+0x50>
4000a408:	e92d4010 	push	{r4, lr}
4000a40c:	e24dd018 	sub	sp, sp, #24
4000a410:	e5930000 	ldr	r0, [r3]
4000a414:	e1a04001 	mov	r4, r1
4000a418:	e28d1017 	add	r1, sp, #23
4000a41c:	eb007027 	bl	400264c0 <Hardware::GetBoardName(unsigned char&)>
4000a420:	e59f2030 	ldr	r2, [pc, #48]	; 4000a458 <ArtNetNode::GetLongNameDefault(char*)+0x54>
4000a424:	e1a03000 	mov	r3, r0
4000a428:	e3a0103f 	mov	r1, #63	; 0x3f
4000a42c:	e1a00004 	mov	r0, r4
4000a430:	e58d2008 	str	r2, [sp, #8]
4000a434:	e3a02003 	mov	r2, #3
4000a438:	e58d2004 	str	r2, [sp, #4]
4000a43c:	e59f2018 	ldr	r2, [pc, #24]	; 4000a45c <ArtNetNode::GetLongNameDefault(char*)+0x58>
4000a440:	e58d2000 	str	r2, [sp]
4000a444:	e59f2014 	ldr	r2, [pc, #20]	; 4000a460 <ArtNetNode::GetLongNameDefault(char*)+0x5c>
4000a448:	eb0089ed 	bl	4002cc04 <snprintf>
4000a44c:	e28dd018 	add	sp, sp, #24
4000a450:	e8bd8010 	pop	{r4, pc}
4000a454:	40034088 	andmi	r4, r3, r8, lsl #1
4000a458:	4003239f 	mulmi	r3, pc, r3	; <UNPREDICTABLE>
4000a45c:	40030603 	andmi	r0, r3, r3, lsl #12
4000a460:	400305f7 	strdmi	r0, [r3], -r7

4000a464 <ArtNetNode::SetLongName(char const*)>:
4000a464:	e3510000 	cmp	r1, #0
4000a468:	e92d4030 	push	{r4, r5, lr}
4000a46c:	e1a04000 	mov	r4, r0
4000a470:	e24dd014 	sub	sp, sp, #20
4000a474:	e2805e11 	add	r5, r0, #272	; 0x110
4000a478:	1a000014 	bne	4000a4d0 <ArtNetNode::SetLongName(char const*)+0x6c>
4000a47c:	e1a01005 	mov	r1, r5
4000a480:	ebffffdf 	bl	4000a404 <ArtNetNode::GetLongNameDefault(char*)>
4000a484:	e5d42099 	ldrb	r2, [r4, #153]	; 0x99
4000a488:	e3a03000 	mov	r3, #0
4000a48c:	e5c4314f 	strb	r3, [r4, #335]	; 0x14f
4000a490:	e3520002 	cmp	r2, #2
4000a494:	1a000011 	bne	4000a4e0 <ArtNetNode::SetLongName(char const*)+0x7c>
4000a498:	e59f0048 	ldr	r0, [pc, #72]	; 4000a4e8 <ArtNetNode::SetLongName(char const*)+0x84>
4000a49c:	e3a02013 	mov	r2, #19
4000a4a0:	e58d3008 	str	r3, [sp, #8]
4000a4a4:	e3a03040 	mov	r3, #64	; 0x40
4000a4a8:	e58d3004 	str	r3, [sp, #4]
4000a4ac:	e3a01019 	mov	r1, #25
4000a4b0:	e58d3000 	str	r3, [sp]
4000a4b4:	e1a03005 	mov	r3, r5
4000a4b8:	e5900000 	ldr	r0, [r0]
4000a4bc:	eb0048a9 	bl	4001c768 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
4000a4c0:	e1a00005 	mov	r0, r5
4000a4c4:	e28dd014 	add	sp, sp, #20
4000a4c8:	e8bd4030 	pop	{r4, r5, lr}
4000a4cc:	eaffea21 	b	40004d58 <artnet::display_longname(char const*)>
4000a4d0:	e3a0203f 	mov	r2, #63	; 0x3f
4000a4d4:	e1a00005 	mov	r0, r5
4000a4d8:	ebffff6d 	bl	4000a294 <strncpy.isra.0>
4000a4dc:	eaffffe8 	b	4000a484 <ArtNetNode::SetLongName(char const*)+0x20>
4000a4e0:	e28dd014 	add	sp, sp, #20
4000a4e4:	e8bd8030 	pop	{r4, r5, pc}
4000a4e8:	40034084 	andmi	r4, r3, r4, lsl #1

4000a4ec <ArtNetNode::ArtNetNode()>:
4000a4ec:	e3a03000 	mov	r3, #0
4000a4f0:	e3e02000 	mvn	r2, #0
4000a4f4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000a4f8:	e2805e1d 	add	r5, r0, #464	; 0x1d0
4000a4fc:	e1c020f0 	strd	r2, [r0]
4000a500:	e59f21d8 	ldr	r2, [pc, #472]	; 4000a6e0 <ArtNetNode::ArtNetNode()+0x1f4>
4000a504:	e1a04000 	mov	r4, r0
4000a508:	e580300c 	str	r3, [r0, #12]
4000a50c:	e2855003 	add	r5, r5, #3
4000a510:	e5820000 	str	r0, [r2]
4000a514:	e28020e4 	add	r2, r0, #228	; 0xe4
4000a518:	e5803010 	str	r3, [r0, #16]
4000a51c:	e1a01002 	mov	r1, r2
4000a520:	e5803014 	str	r3, [r0, #20]
4000a524:	e1a06002 	mov	r6, r2
4000a528:	e5803018 	str	r3, [r0, #24]
4000a52c:	e580301c 	str	r3, [r0, #28]
4000a530:	e1550001 	cmp	r5, r1
4000a534:	1a000006 	bne	4000a554 <ArtNetNode::ArtNetNode()+0x68>
4000a538:	e59f31a4 	ldr	r3, [pc, #420]	; 4000a6e4 <ArtNetNode::ArtNetNode()+0x1f8>
4000a53c:	e28400ec 	add	r0, r4, #236	; 0xec
4000a540:	e1500002 	cmp	r0, r2
4000a544:	0a000004 	beq	4000a55c <ArtNetNode::ArtNetNode()+0x70>
4000a548:	e4d31001 	ldrb	r1, [r3], #1
4000a54c:	e4c21001 	strb	r1, [r2], #1
4000a550:	eafffffa 	b	4000a540 <ArtNetNode::ArtNetNode()+0x54>
4000a554:	e4c13001 	strb	r3, [r1], #1
4000a558:	eafffff4 	b	4000a530 <ArtNetNode::ArtNetNode()+0x44>
4000a55c:	e59f1184 	ldr	r1, [pc, #388]	; 4000a6e8 <ArtNetNode::ArtNetNode()+0x1fc>
4000a560:	e3a03c21 	mov	r3, #8448	; 0x2100
4000a564:	e1c43ebc 	strh	r3, [r4, #236]	; 0xec
4000a568:	e3013936 	movw	r3, #6454	; 0x1936
4000a56c:	e1c43fb2 	strh	r3, [r4, #242]	; 0xf2
4000a570:	e59f3174 	ldr	r3, [pc, #372]	; 4000a6ec <ArtNetNode::ArtNetNode()+0x200>
4000a574:	e5d32000 	ldrb	r2, [r3]
4000a578:	e5c420f4 	strb	r2, [r4, #244]	; 0xf4
4000a57c:	e5d33001 	ldrb	r3, [r3, #1]
4000a580:	e5c430f5 	strb	r3, [r4, #245]	; 0xf5
4000a584:	e59f3164 	ldr	r3, [pc, #356]	; 4000a6f0 <ArtNetNode::ArtNetNode()+0x204>
4000a588:	e5d32000 	ldrb	r2, [r3]
4000a58c:	e5c420f8 	strb	r2, [r4, #248]	; 0xf8
4000a590:	e5d33001 	ldrb	r3, [r3, #1]
4000a594:	e5c430f9 	strb	r3, [r4, #249]	; 0xf9
4000a598:	e59f3154 	ldr	r3, [pc, #340]	; 4000a6f4 <ArtNetNode::ArtNetNode()+0x208>
4000a59c:	e5d32001 	ldrb	r2, [r3, #1]
4000a5a0:	e5d33000 	ldrb	r3, [r3]
4000a5a4:	e5c420fc 	strb	r2, [r4, #252]	; 0xfc
4000a5a8:	e2842e1b 	add	r2, r4, #432	; 0x1b0
4000a5ac:	e5c430fd 	strb	r3, [r4, #253]	; 0xfd
4000a5b0:	e2843f6b 	add	r3, r4, #428	; 0x1ac
4000a5b4:	e2833001 	add	r3, r3, #1
4000a5b8:	e2822003 	add	r2, r2, #3
4000a5bc:	e1520003 	cmp	r2, r3
4000a5c0:	14d10001 	ldrbne	r0, [r1], #1
4000a5c4:	14c30001 	strbne	r0, [r3], #1
4000a5c8:	1afffffb 	bne	4000a5bc <ArtNetNode::ArtNetNode()+0xd0>
4000a5cc:	e2843050 	add	r3, r4, #80	; 0x50
4000a5d0:	e28470b4 	add	r7, r4, #180	; 0xb4
4000a5d4:	e1a08003 	mov	r8, r3
4000a5d8:	e3a02000 	mov	r2, #0
4000a5dc:	e1570003 	cmp	r7, r3
4000a5e0:	14c32001 	strbne	r2, [r3], #1
4000a5e4:	1afffffc 	bne	4000a5dc <ArtNetNode::ArtNetNode()+0xf0>
4000a5e8:	e3003101 	movw	r3, #257	; 0x101
4000a5ec:	e3a02ffa 	mov	r2, #1000	; 0x3e8
4000a5f0:	e1c439b8 	strh	r3, [r4, #152]	; 0x98
4000a5f4:	e30031b1 	movw	r3, #433	; 0x1b1
4000a5f8:	e1a00004 	mov	r0, r4
4000a5fc:	e19430b3 	ldrh	r3, [r4, r3]
4000a600:	e6bf3fb3 	rev16	r3, r3
4000a604:	e6ff3073 	uxth	r3, r3
4000a608:	e731f213 	udiv	r1, r3, r2
4000a60c:	e0633192 	mls	r3, r2, r1, r3
4000a610:	e3a01000 	mov	r1, #0
4000a614:	e584305c 	str	r3, [r4, #92]	; 0x5c
4000a618:	ebffff91 	bl	4000a464 <ArtNetNode::SetLongName(char const*)>
4000a61c:	e2843020 	add	r3, r4, #32
4000a620:	e3a02000 	mov	r2, #0
4000a624:	e1580003 	cmp	r8, r3
4000a628:	14c32001 	strbne	r2, [r3], #1
4000a62c:	1afffffc 	bne	4000a624 <ArtNetNode::ArtNetNode()+0x138>
4000a630:	e59f80c0 	ldr	r8, [pc, #192]	; 4000a6f8 <ArtNetNode::ArtNetNode()+0x20c>
4000a634:	e3a02000 	mov	r2, #0
4000a638:	e1a01002 	mov	r1, r2
4000a63c:	e1a00004 	mov	r0, r4
4000a640:	e598300c 	ldr	r3, [r8, #12]
4000a644:	e5843048 	str	r3, [r4, #72]	; 0x48
4000a648:	e3a03002 	mov	r3, #2
4000a64c:	e5843028 	str	r3, [r4, #40]	; 0x28
4000a650:	ebffff41 	bl	4000a35c <ArtNetNode::SetShortName(unsigned long, char const*)>
4000a654:	e1a02007 	mov	r2, r7
4000a658:	e28430d8 	add	r3, r4, #216	; 0xd8
4000a65c:	e3a01000 	mov	r1, #0
4000a660:	e1530002 	cmp	r3, r2
4000a664:	14c21001 	strbne	r1, [r2], #1
4000a668:	1afffffc 	bne	4000a660 <ArtNetNode::ArtNetNode()+0x174>
4000a66c:	e3a02c01 	mov	r2, #256	; 0x100
4000a670:	e1c42bbc 	strh	r2, [r4, #188]	; 0xbc
4000a674:	e1c42cb8 	strh	r2, [r4, #200]	; 0xc8
4000a678:	e3e0205f 	mvn	r2, #95	; 0x5f
4000a67c:	e5c420d1 	strb	r2, [r4, #209]	; 0xd1
4000a680:	e3a02000 	mov	r2, #0
4000a684:	e1560003 	cmp	r6, r3
4000a688:	14c32001 	strbne	r2, [r3], #1
4000a68c:	1afffffc 	bne	4000a684 <ArtNetNode::ArtNetNode()+0x198>
4000a690:	e598300c 	ldr	r3, [r8, #12]
4000a694:	e59f2048 	ldr	r2, [pc, #72]	; 4000a6e4 <ArtNetNode::ArtNetNode()+0x1f8>
4000a698:	e58430d8 	str	r3, [r4, #216]	; 0xd8
4000a69c:	e2843f76 	add	r3, r4, #472	; 0x1d8
4000a6a0:	e2833003 	add	r3, r3, #3
4000a6a4:	e1530005 	cmp	r3, r5
4000a6a8:	14d21001 	ldrbne	r1, [r2], #1
4000a6ac:	14c51001 	strbne	r1, [r5], #1
4000a6b0:	1afffffb 	bne	4000a6a4 <ArtNetNode::ArtNetNode()+0x1b8>
4000a6b4:	e3a02000 	mov	r2, #0
4000a6b8:	e3e01068 	mvn	r1, #104	; 0x68
4000a6bc:	e5c421db 	strb	r2, [r4, #475]	; 0x1db
4000a6c0:	e1a00004 	mov	r0, r4
4000a6c4:	e5c31001 	strb	r1, [r3, #1]
4000a6c8:	e30031de 	movw	r3, #478	; 0x1de
4000a6cc:	e5c421dd 	strb	r2, [r4, #477]	; 0x1dd
4000a6d0:	e3a0100e 	mov	r1, #14
4000a6d4:	e18410b3 	strh	r1, [r4, r3]
4000a6d8:	e5c421e0 	strb	r2, [r4, #480]	; 0x1e0
4000a6dc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000a6e0:	400576dc 	ldrdmi	r7, [r5], -ip
4000a6e4:	40030603 	andmi	r0, r3, r3, lsl #12
4000a6e8:	4005a750 	andmi	sl, r5, r0, asr r7
4000a6ec:	40030b46 	andmi	r0, r3, r6, asr #22
4000a6f0:	40030b42 	andmi	r0, r3, r2, asr #22
4000a6f4:	40030b44 	andmi	r0, r3, r4, asr #22
4000a6f8:	4005a73c 	andmi	sl, r5, ip, lsr r7

4000a6fc <ArtNetNode::SetNetworkDataLossCondition()>:
4000a6fc:	e59020c4 	ldr	r2, [r0, #196]	; 0xc4
4000a700:	e3a03000 	mov	r3, #0
4000a704:	e5c0309e 	strb	r3, [r0, #158]	; 0x9e
4000a708:	e5c0309d 	strb	r3, [r0, #157]	; 0x9d
4000a70c:	e59030b8 	ldr	r3, [r0, #184]	; 0xb8
4000a710:	e1730002 	cmn	r3, r2
4000a714:	012fff1e 	bxeq	lr
4000a718:	e92d4010 	push	{r4, lr}
4000a71c:	e1a04000 	mov	r4, r0
4000a720:	e5d031bd 	ldrb	r3, [r0, #445]	; 0x1bd
4000a724:	e20330c0 	and	r3, r3, #192	; 0xc0
4000a728:	e3530040 	cmp	r3, #64	; 0x40
4000a72c:	0a000007 	beq	4000a750 <ArtNetNode::SetNetworkDataLossCondition()+0x54>
4000a730:	9a00000b 	bls	4000a764 <ArtNetNode::SetNetworkDataLossCondition()+0x68>
4000a734:	e3530080 	cmp	r3, #128	; 0x80
4000a738:	1a000009 	bne	4000a764 <ArtNetNode::SetNetworkDataLossCondition()+0x68>
4000a73c:	e5940014 	ldr	r0, [r4, #20]
4000a740:	e5903000 	ldr	r3, [r0]
4000a744:	e5933028 	ldr	r3, [r3, #40]	; 0x28
4000a748:	e12fff33 	blx	r3
4000a74c:	ea000004 	b	4000a764 <ArtNetNode::SetNetworkDataLossCondition()+0x68>
4000a750:	e5940014 	ldr	r0, [r4, #20]
4000a754:	e3a01001 	mov	r1, #1
4000a758:	e5903000 	ldr	r3, [r0]
4000a75c:	e5933024 	ldr	r3, [r3, #36]	; 0x24
4000a760:	e12fff33 	blx	r3
4000a764:	e59f2010 	ldr	r2, [pc, #16]	; 4000a77c <ArtNetNode::SetNetworkDataLossCondition()+0x80>
4000a768:	e3a03000 	mov	r3, #0
4000a76c:	e58430b8 	str	r3, [r4, #184]	; 0xb8
4000a770:	e58430c4 	str	r3, [r4, #196]	; 0xc4
4000a774:	e5823600 	str	r3, [r2, #1536]	; 0x600
4000a778:	e8bd8010 	pop	{r4, pc}
4000a77c:	400570d8 	ldrdmi	r7, [r5], -r8

4000a780 <ArtNetNode::Process(unsigned long)>:
4000a780:	e590300c 	ldr	r3, [r0, #12]
4000a784:	e3510000 	cmp	r1, #0
4000a788:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000a78c:	e1a05000 	mov	r5, r0
4000a790:	1a000021 	bne	4000a81c <ArtNetNode::Process(unsigned long)+0x9c>
4000a794:	e5901010 	ldr	r1, [r0, #16]
4000a798:	e302270f 	movw	r2, #9999	; 0x270f
4000a79c:	e0433001 	sub	r3, r3, r1
4000a7a0:	e1530002 	cmp	r3, r2
4000a7a4:	8a000017 	bhi	4000a808 <ArtNetNode::Process(unsigned long)+0x88>
4000a7a8:	e3530ffa 	cmp	r3, #1000	; 0x3e8
4000a7ac:	2a000016 	bcs	4000a80c <ArtNetNode::Process(unsigned long)+0x8c>
4000a7b0:	e1a04005 	mov	r4, r5
4000a7b4:	e2856030 	add	r6, r5, #48	; 0x30
4000a7b8:	e3a07000 	mov	r7, #0
4000a7bc:	e5942068 	ldr	r2, [r4, #104]	; 0x68
4000a7c0:	e2843068 	add	r3, r4, #104	; 0x68
4000a7c4:	e3520000 	cmp	r2, #0
4000a7c8:	0a000004 	beq	4000a7e0 <ArtNetNode::Process(unsigned long)+0x60>
4000a7cc:	e595100c 	ldr	r1, [r5, #12]
4000a7d0:	e595005c 	ldr	r0, [r5, #92]	; 0x5c
4000a7d4:	e0412002 	sub	r2, r1, r2
4000a7d8:	e1520000 	cmp	r2, r0
4000a7dc:	8a000003 	bhi	4000a7f0 <ArtNetNode::Process(unsigned long)+0x70>
4000a7e0:	e284400c 	add	r4, r4, #12
4000a7e4:	e1540006 	cmp	r4, r6
4000a7e8:	1afffff3 	bne	4000a7bc <ArtNetNode::Process(unsigned long)+0x3c>
4000a7ec:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000a7f0:	e594206c 	ldr	r2, [r4, #108]	; 0x6c
4000a7f4:	e3a01000 	mov	r1, #0
4000a7f8:	e5847068 	str	r7, [r4, #104]	; 0x68
4000a7fc:	e1a00005 	mov	r0, r5
4000a800:	eb0002a1 	bl	4000b28c <ArtNetNode::SendPollReply(unsigned long, unsigned long, artnet::ArtPollQueue*)>
4000a804:	eafffff5 	b	4000a7e0 <ArtNetNode::Process(unsigned long)+0x60>
4000a808:	ebffffbb 	bl	4000a6fc <ArtNetNode::SetNetworkDataLossCondition()>
4000a80c:	e5d530a2 	ldrb	r3, [r5, #162]	; 0xa2
4000a810:	e3c33002 	bic	r3, r3, #2
4000a814:	e5c530a2 	strb	r3, [r5, #162]	; 0xa2
4000a818:	eaffffe4 	b	4000a7b0 <ArtNetNode::Process(unsigned long)+0x30>
4000a81c:	e5d0209d 	ldrb	r2, [r0, #157]	; 0x9d
4000a820:	e5803010 	str	r3, [r0, #16]
4000a824:	e3520000 	cmp	r2, #0
4000a828:	0a000004 	beq	4000a840 <ArtNetNode::Process(unsigned long)+0xc0>
4000a82c:	e5902064 	ldr	r2, [r0, #100]	; 0x64
4000a830:	e0433002 	sub	r3, r3, r2
4000a834:	e3530efa 	cmp	r3, #4000	; 0xfa0
4000a838:	23a03000 	movcs	r3, #0
4000a83c:	25c0309d 	strbcs	r3, [r0, #157]	; 0x9d
4000a840:	e351000b 	cmp	r1, #11
4000a844:	9a000011 	bls	4000a890 <ArtNetNode::Process(unsigned long)+0x110>
4000a848:	e5950004 	ldr	r0, [r5, #4]
4000a84c:	e5d0300a 	ldrb	r3, [r0, #10]
4000a850:	e3530000 	cmp	r3, #0
4000a854:	1a00000d 	bne	4000a890 <ArtNetNode::Process(unsigned long)+0x110>
4000a858:	e5d0300b 	ldrb	r3, [r0, #11]
4000a85c:	e353000e 	cmp	r3, #14
4000a860:	1a00000a 	bne	4000a890 <ArtNetNode::Process(unsigned long)+0x110>
4000a864:	e59fc0f8 	ldr	ip, [pc, #248]	; 4000a964 <ArtNetNode::Process(unsigned long)+0x1e4>
4000a868:	e2403001 	sub	r3, r0, #1
4000a86c:	e280e007 	add	lr, r0, #7
4000a870:	e3a02041 	mov	r2, #65	; 0x41
4000a874:	ea000002 	b	4000a884 <ArtNetNode::Process(unsigned long)+0x104>
4000a878:	e153000e 	cmp	r3, lr
4000a87c:	0a000019 	beq	4000a8e8 <ArtNetNode::Process(unsigned long)+0x168>
4000a880:	e4dc2001 	ldrb	r2, [ip], #1
4000a884:	e5f31001 	ldrb	r1, [r3, #1]!
4000a888:	e1510002 	cmp	r1, r2
4000a88c:	0afffff9 	beq	4000a878 <ArtNetNode::Process(unsigned long)+0xf8>
4000a890:	e1a04005 	mov	r4, r5
4000a894:	e2856030 	add	r6, r5, #48	; 0x30
4000a898:	e3a07000 	mov	r7, #0
4000a89c:	e5942068 	ldr	r2, [r4, #104]	; 0x68
4000a8a0:	e2843068 	add	r3, r4, #104	; 0x68
4000a8a4:	e3520000 	cmp	r2, #0
4000a8a8:	0a000004 	beq	4000a8c0 <ArtNetNode::Process(unsigned long)+0x140>
4000a8ac:	e595100c 	ldr	r1, [r5, #12]
4000a8b0:	e0412002 	sub	r2, r1, r2
4000a8b4:	e595105c 	ldr	r1, [r5, #92]	; 0x5c
4000a8b8:	e1520001 	cmp	r2, r1
4000a8bc:	8a000003 	bhi	4000a8d0 <ArtNetNode::Process(unsigned long)+0x150>
4000a8c0:	e284400c 	add	r4, r4, #12
4000a8c4:	e1560004 	cmp	r6, r4
4000a8c8:	1afffff3 	bne	4000a89c <ArtNetNode::Process(unsigned long)+0x11c>
4000a8cc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000a8d0:	e594206c 	ldr	r2, [r4, #108]	; 0x6c
4000a8d4:	e3a01000 	mov	r1, #0
4000a8d8:	e5847068 	str	r7, [r4, #104]	; 0x68
4000a8dc:	e1a00005 	mov	r0, r5
4000a8e0:	eb000269 	bl	4000b28c <ArtNetNode::SendPollReply(unsigned long, unsigned long, artnet::ArtPollQueue*)>
4000a8e4:	eafffff5 	b	4000a8c0 <ArtNetNode::Process(unsigned long)+0x140>
4000a8e8:	e5d02009 	ldrb	r2, [r0, #9]
4000a8ec:	e5d03008 	ldrb	r3, [r0, #8]
4000a8f0:	e0833402 	add	r3, r3, r2, lsl #8
4000a8f4:	e6ff3073 	uxth	r3, r3
4000a8f8:	e3530c97 	cmp	r3, #38656	; 0x9700
4000a8fc:	0a000007 	beq	4000a920 <ArtNetNode::Process(unsigned long)+0x1a0>
4000a900:	8a00000d 	bhi	4000a93c <ArtNetNode::Process(unsigned long)+0x1bc>
4000a904:	e3530a02 	cmp	r3, #8192	; 0x2000
4000a908:	0a000008 	beq	4000a930 <ArtNetNode::Process(unsigned long)+0x1b0>
4000a90c:	e3530a06 	cmp	r3, #24576	; 0x6000
4000a910:	1affffde 	bne	4000a890 <ArtNetNode::Process(unsigned long)+0x110>
4000a914:	e1a00005 	mov	r0, r5
4000a918:	eb0000e8 	bl	4000acc0 <ArtNetNode::HandleAddress()>
4000a91c:	eaffffdb 	b	4000a890 <ArtNetNode::Process(unsigned long)+0x110>
4000a920:	e5953018 	ldr	r3, [r5, #24]
4000a924:	e280000e 	add	r0, r0, #14
4000a928:	e12fff33 	blx	r3
4000a92c:	eaffffd7 	b	4000a890 <ArtNetNode::Process(unsigned long)+0x110>
4000a930:	e1a00005 	mov	r0, r5
4000a934:	eb00039d 	bl	4000b7b0 <ArtNetNode::HandlePoll()>
4000a938:	eaffffd4 	b	4000a890 <ArtNetNode::Process(unsigned long)+0x110>
4000a93c:	e3530b26 	cmp	r3, #38912	; 0x9800
4000a940:	0a000004 	beq	4000a958 <ArtNetNode::Process(unsigned long)+0x1d8>
4000a944:	e3530b3e 	cmp	r3, #63488	; 0xf800
4000a948:	1affffd0 	bne	4000a890 <ArtNetNode::Process(unsigned long)+0x110>
4000a94c:	e1a00005 	mov	r0, r5
4000a950:	eb0001b3 	bl	4000b024 <ArtNetNode::HandleIpProg()>
4000a954:	eaffffcd 	b	4000a890 <ArtNetNode::Process(unsigned long)+0x110>
4000a958:	e1a00005 	mov	r0, r5
4000a95c:	eb0003e0 	bl	4000b8e4 <ArtNetNode::HandleTimeSync()>
4000a960:	eaffffca 	b	4000a890 <ArtNetNode::Process(unsigned long)+0x110>
4000a964:	40030604 	andmi	r0, r3, r4, lsl #12

4000a968 <ArtNetNode::MakePortAddress(unsigned short, unsigned long)>:
4000a968:	e3a03028 	mov	r3, #40	; 0x28
4000a96c:	e201100f 	and	r1, r1, #15
4000a970:	e0220293 	mla	r2, r3, r2, r0
4000a974:	e5d23023 	ldrb	r3, [r2, #35]	; 0x23
4000a978:	e5d20024 	ldrb	r0, [r2, #36]	; 0x24
4000a97c:	e1a03403 	lsl	r3, r3, #8
4000a980:	e1a00200 	lsl	r0, r0, #4
4000a984:	e2033c7f 	and	r3, r3, #32512	; 0x7f00
4000a988:	e6ef0070 	uxtb	r0, r0
4000a98c:	e1830000 	orr	r0, r3, r0
4000a990:	e1800001 	orr	r0, r0, r1
4000a994:	e12fff1e 	bx	lr

4000a998 <ArtNetStore::SaveUniverse(unsigned long)>:
4000a998:	e92d407f 	push	{r0, r1, r2, r3, r4, r5, r6, lr}
4000a99c:	e3a02028 	mov	r2, #40	; 0x28
4000a9a0:	e59f3060 	ldr	r3, [pc, #96]	; 4000aa08 <ArtNetStore::SaveUniverse(unsigned long)+0x70>
4000a9a4:	e0212290 	mla	r1, r0, r2, r2
4000a9a8:	e5933000 	ldr	r3, [r3]
4000a9ac:	e7931001 	ldr	r1, [r3, r1]
4000a9b0:	e3510002 	cmp	r1, #2
4000a9b4:	0a000011 	beq	4000aa00 <ArtNetStore::SaveUniverse(unsigned long)+0x68>
4000a9b8:	e0233092 	mla	r3, r2, r0, r3
4000a9bc:	e3500003 	cmp	r0, #3
4000a9c0:	e1d332b0 	ldrh	r3, [r3, #32]
4000a9c4:	e1cd31b6 	strh	r3, [sp, #22]
4000a9c8:	8a00000c 	bhi	4000aa00 <ArtNetStore::SaveUniverse(unsigned long)+0x68>
4000a9cc:	e3a03000 	mov	r3, #0
4000a9d0:	e3a01019 	mov	r1, #25
4000a9d4:	e58d3008 	str	r3, [sp, #8]
4000a9d8:	e3a03002 	mov	r3, #2
4000a9dc:	e1a02080 	lsl	r2, r0, #1
4000a9e0:	e1a00013 	lsl	r0, r3, r0
4000a9e4:	e2822005 	add	r2, r2, #5
4000a9e8:	e58d0004 	str	r0, [sp, #4]
4000a9ec:	e59f0018 	ldr	r0, [pc, #24]	; 4000aa0c <ArtNetStore::SaveUniverse(unsigned long)+0x74>
4000a9f0:	e58d3000 	str	r3, [sp]
4000a9f4:	e28d3016 	add	r3, sp, #22
4000a9f8:	e5900000 	ldr	r0, [r0]
4000a9fc:	eb004759 	bl	4001c768 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
4000aa00:	e28dd01c 	add	sp, sp, #28
4000aa04:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4000aa08:	400576dc 	ldrdmi	r7, [r5], -ip
4000aa0c:	40034084 	andmi	r4, r3, r4, lsl #1

4000aa10 <ArtNetNode::SetUniverseSwitch(unsigned long, lightset::PortDir, unsigned char)>:
4000aa10:	e3520002 	cmp	r2, #2
4000aa14:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000aa18:	e1a04000 	mov	r4, r0
4000aa1c:	e1a05001 	mov	r5, r1
4000aa20:	e1a06003 	mov	r6, r3
4000aa24:	1a000011 	bne	4000aa70 <ArtNetNode::SetUniverseSwitch(unsigned long, lightset::PortDir, unsigned char)+0x60>
4000aa28:	e3a03028 	mov	r3, #40	; 0x28
4000aa2c:	e0230193 	mla	r3, r3, r1, r0
4000aa30:	e5932028 	ldr	r2, [r3, #40]	; 0x28
4000aa34:	e3520001 	cmp	r2, #1
4000aa38:	05d020a3 	ldrbeq	r2, [r0, #163]	; 0xa3
4000aa3c:	02422001 	subeq	r2, r2, #1
4000aa40:	05c020a3 	strbeq	r2, [r0, #163]	; 0xa3
4000aa44:	e3a02002 	mov	r2, #2
4000aa48:	e5832028 	str	r2, [r3, #40]	; 0x28
4000aa4c:	e5d43099 	ldrb	r3, [r4, #153]	; 0x99
4000aa50:	e3530002 	cmp	r3, #2
4000aa54:	18bd81f0 	popne	{r4, r5, r6, r7, r8, pc}
4000aa58:	e1a00005 	mov	r0, r5
4000aa5c:	ebffffcd 	bl	4000a998 <ArtNetStore::SaveUniverse(unsigned long)>
4000aa60:	e1a01006 	mov	r1, r6
4000aa64:	e1a00005 	mov	r0, r5
4000aa68:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
4000aa6c:	eaffe8ba 	b	40004d5c <artnet::display_universe_switch(unsigned long, unsigned char)>
4000aa70:	e3520001 	cmp	r2, #1
4000aa74:	1afffff4 	bne	4000aa4c <ArtNetNode::SetUniverseSwitch(unsigned long, lightset::PortDir, unsigned char)+0x3c>
4000aa78:	e3a07028 	mov	r7, #40	; 0x28
4000aa7c:	e0270197 	mla	r7, r7, r1, r0
4000aa80:	e5972028 	ldr	r2, [r7, #40]	; 0x28
4000aa84:	e3520001 	cmp	r2, #1
4000aa88:	0a000006 	beq	4000aaa8 <ArtNetNode::SetUniverseSwitch(unsigned long, lightset::PortDir, unsigned char)+0x98>
4000aa8c:	e5d030a3 	ldrb	r3, [r0, #163]	; 0xa3
4000aa90:	e3520000 	cmp	r2, #0
4000aa94:	e2833001 	add	r3, r3, #1
4000aa98:	e5c030a3 	strb	r3, [r0, #163]	; 0xa3
4000aa9c:	05d030a4 	ldrbeq	r3, [r0, #164]	; 0xa4
4000aaa0:	02433001 	subeq	r3, r3, #1
4000aaa4:	05c030a4 	strbeq	r3, [r0, #164]	; 0xa4
4000aaa8:	e3a08028 	mov	r8, #40	; 0x28
4000aaac:	e206300f 	and	r3, r6, #15
4000aab0:	e0284598 	mla	r8, r8, r5, r4
4000aab4:	e1a02005 	mov	r2, r5
4000aab8:	e1a01006 	mov	r1, r6
4000aabc:	e5c83022 	strb	r3, [r8, #34]	; 0x22
4000aac0:	e1a00004 	mov	r0, r4
4000aac4:	ebffffa7 	bl	4000a968 <ArtNetNode::MakePortAddress(unsigned short, unsigned long)>
4000aac8:	e1c802b0 	strh	r0, [r8, #32]
4000aacc:	e3a03001 	mov	r3, #1
4000aad0:	e5873028 	str	r3, [r7, #40]	; 0x28
4000aad4:	eaffffdc 	b	4000aa4c <ArtNetNode::SetUniverseSwitch(unsigned long, lightset::PortDir, unsigned char)+0x3c>

4000aad8 <ArtNetNode::SetSubnetSwitch(unsigned long, unsigned char)>:
4000aad8:	e92d4070 	push	{r4, r5, r6, lr}
4000aadc:	e3a05028 	mov	r5, #40	; 0x28
4000aae0:	e0250195 	mla	r5, r5, r1, r0
4000aae4:	e1a06000 	mov	r6, r0
4000aae8:	e1a04001 	mov	r4, r1
4000aaec:	e5c52024 	strb	r2, [r5, #36]	; 0x24
4000aaf0:	e1a02001 	mov	r2, r1
4000aaf4:	e1d512b0 	ldrh	r1, [r5, #32]
4000aaf8:	ebffff9a 	bl	4000a968 <ArtNetNode::MakePortAddress(unsigned short, unsigned long)>
4000aafc:	e5d63099 	ldrb	r3, [r6, #153]	; 0x99
4000ab00:	e1c502b0 	strh	r0, [r5, #32]
4000ab04:	e3530002 	cmp	r3, #2
4000ab08:	18bd8070 	popne	{r4, r5, r6, pc}
4000ab0c:	e1a00004 	mov	r0, r4
4000ab10:	ebffffa0 	bl	4000a998 <ArtNetStore::SaveUniverse(unsigned long)>
4000ab14:	e8bd8070 	pop	{r4, r5, r6, pc}

4000ab18 <ArtNetNode::SetNetSwitch(unsigned long, unsigned char)>:
4000ab18:	e92d4070 	push	{r4, r5, r6, lr}
4000ab1c:	e3a05028 	mov	r5, #40	; 0x28
4000ab20:	e0250195 	mla	r5, r5, r1, r0
4000ab24:	e1a06000 	mov	r6, r0
4000ab28:	e1a04001 	mov	r4, r1
4000ab2c:	e5c52023 	strb	r2, [r5, #35]	; 0x23
4000ab30:	e1a02001 	mov	r2, r1
4000ab34:	e1d512b0 	ldrh	r1, [r5, #32]
4000ab38:	ebffff8a 	bl	4000a968 <ArtNetNode::MakePortAddress(unsigned short, unsigned long)>
4000ab3c:	e5d63099 	ldrb	r3, [r6, #153]	; 0x99
4000ab40:	e1c502b0 	strh	r0, [r5, #32]
4000ab44:	e3530002 	cmp	r3, #2
4000ab48:	18bd8070 	popne	{r4, r5, r6, pc}
4000ab4c:	e1a00004 	mov	r0, r4
4000ab50:	ebffff90 	bl	4000a998 <ArtNetStore::SaveUniverse(unsigned long)>
4000ab54:	e8bd8070 	pop	{r4, r5, r6, pc}

4000ab58 <ArtNetNode::SetMergeMode(unsigned long, lightset::MergeMode)>:
4000ab58:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
4000ab5c:	e1a05002 	mov	r5, r2
4000ab60:	e3a02024 	mov	r2, #36	; 0x24
4000ab64:	e3550001 	cmp	r5, #1
4000ab68:	e0230192 	mla	r3, r2, r1, r0
4000ab6c:	e0220192 	mla	r2, r2, r1, r0
4000ab70:	e5d330d0 	ldrb	r3, [r3, #208]	; 0xd0
4000ab74:	e24dd01c 	sub	sp, sp, #28
4000ab78:	e1a04001 	mov	r4, r1
4000ab7c:	03833002 	orreq	r3, r3, #2
4000ab80:	120330fd 	andne	r3, r3, #253	; 0xfd
4000ab84:	e5c230d0 	strb	r3, [r2, #208]	; 0xd0
4000ab88:	e5d09099 	ldrb	r9, [r0, #153]	; 0x99
4000ab8c:	e3590002 	cmp	r9, #2
4000ab90:	1a000020 	bne	4000ac18 <ArtNetNode::SetMergeMode(unsigned long, lightset::MergeMode)+0xc0>
4000ab94:	e3510003 	cmp	r1, #3
4000ab98:	8a000019 	bhi	4000ac04 <ArtNetNode::SetMergeMode(unsigned long, lightset::MergeMode)+0xac>
4000ab9c:	e59f707c 	ldr	r7, [pc, #124]	; 4000ac20 <ArtNetNode::SetMergeMode(unsigned long, lightset::MergeMode)+0xc8>
4000aba0:	e3a06000 	mov	r6, #0
4000aba4:	e58d6004 	str	r6, [sp, #4]
4000aba8:	e3a0800f 	mov	r8, #15
4000abac:	e5970000 	ldr	r0, [r7]
4000abb0:	e1a03009 	mov	r3, r9
4000abb4:	e58d8000 	str	r8, [sp]
4000abb8:	e28d2016 	add	r2, sp, #22
4000abbc:	e3a01019 	mov	r1, #25
4000abc0:	eb00470a 	bl	4001c7f0 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)>
4000abc4:	e1dd11b6 	ldrh	r1, [sp, #22]
4000abc8:	e3a00003 	mov	r0, #3
4000abcc:	e1a02084 	lsl	r2, r4, #1
4000abd0:	e58d6008 	str	r6, [sp, #8]
4000abd4:	e1a03002 	mov	r3, r2
4000abd8:	e1c12210 	bic	r2, r1, r0, lsl r2
4000abdc:	e0051000 	and	r1, r5, r0
4000abe0:	e58d6004 	str	r6, [sp, #4]
4000abe4:	e1822311 	orr	r2, r2, r1, lsl r3
4000abe8:	e28d3016 	add	r3, sp, #22
4000abec:	e1cd21b6 	strh	r2, [sp, #22]
4000abf0:	e3a01019 	mov	r1, #25
4000abf4:	e5970000 	ldr	r0, [r7]
4000abf8:	e1a02008 	mov	r2, r8
4000abfc:	e58d9000 	str	r9, [sp]
4000ac00:	eb0046d8 	bl	4001c768 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
4000ac04:	e1a01005 	mov	r1, r5
4000ac08:	e1a00004 	mov	r0, r4
4000ac0c:	e28dd01c 	add	sp, sp, #28
4000ac10:	e8bd43f0 	pop	{r4, r5, r6, r7, r8, r9, lr}
4000ac14:	eaffe851 	b	40004d60 <artnet::display_merge_mode(unsigned long, lightset::MergeMode)>
4000ac18:	e28dd01c 	add	sp, sp, #28
4000ac1c:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
4000ac20:	40034084 	andmi	r4, r3, r4, lsl #1

4000ac24 <ArtNetNode::SetFailSafe(artnetnode::FailSafe)>:
4000ac24:	e5d031bd 	ldrb	r3, [r0, #445]	; 0x1bd
4000ac28:	e2412008 	sub	r2, r1, #8
4000ac2c:	e203303f 	and	r3, r3, #63	; 0x3f
4000ac30:	e3520004 	cmp	r2, #4
4000ac34:	979ff102 	ldrls	pc, [pc, r2, lsl #2]
4000ac38:	ea000005 	b	4000ac54 <ArtNetNode::SetFailSafe(artnetnode::FailSafe)+0x30>
4000ac3c:	4000ac54 	andmi	sl, r0, r4, asr ip
4000ac40:	4000ac50 	andmi	sl, r0, r0, asr ip
4000ac44:	4000acb0 			; <UNDEFINED> instruction: 0x4000acb0
4000ac48:	4000ac54 	andmi	sl, r0, r4, asr ip
4000ac4c:	4000ac54 	andmi	sl, r0, r4, asr ip
4000ac50:	e3833040 	orr	r3, r3, #64	; 0x40
4000ac54:	e5c031bd 	strb	r3, [r0, #445]	; 0x1bd
4000ac58:	e5d03099 	ldrb	r3, [r0, #153]	; 0x99
4000ac5c:	e3530002 	cmp	r3, #2
4000ac60:	112fff1e 	bxne	lr
4000ac64:	e92d4010 	push	{r4, lr}
4000ac68:	e24dd018 	sub	sp, sp, #24
4000ac6c:	e2014003 	and	r4, r1, #3
4000ac70:	e3a00020 	mov	r0, #32
4000ac74:	e5cd4017 	strb	r4, [sp, #23]
4000ac78:	e3a01000 	mov	r1, #0
4000ac7c:	e1cd00f4 	strd	r0, [sp, #4]
4000ac80:	e59f0034 	ldr	r0, [pc, #52]	; 4000acbc <ArtNetNode::SetFailSafe(artnetnode::FailSafe)+0x98>
4000ac84:	e3a03001 	mov	r3, #1
4000ac88:	e58d3000 	str	r3, [sp]
4000ac8c:	e3a02012 	mov	r2, #18
4000ac90:	e5900000 	ldr	r0, [r0]
4000ac94:	e28d3017 	add	r3, sp, #23
4000ac98:	e3a01019 	mov	r1, #25
4000ac9c:	eb0046b1 	bl	4001c768 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
4000aca0:	e1a00004 	mov	r0, r4
4000aca4:	e28dd018 	add	sp, sp, #24
4000aca8:	e8bd4010 	pop	{r4, lr}
4000acac:	eaffe82c 	b	40004d64 <artnet::display_failsafe(unsigned char)>
4000acb0:	e1e03c83 	mvn	r3, r3, lsl #25
4000acb4:	e1e03ca3 	mvn	r3, r3, lsr #25
4000acb8:	eaffffe5 	b	4000ac54 <ArtNetNode::SetFailSafe(artnetnode::FailSafe)+0x30>
4000acbc:	40034084 	andmi	r4, r3, r4, lsl #1

4000acc0 <ArtNetNode::HandleAddress()>:
4000acc0:	e92d40f7 	push	{r0, r1, r2, r4, r5, r6, r7, lr}
4000acc4:	e3a03001 	mov	r3, #1
4000acc8:	e5906004 	ldr	r6, [r0, #4]
4000accc:	e1a04000 	mov	r4, r0
4000acd0:	e5c03098 	strb	r3, [r0, #152]	; 0x98
4000acd4:	e5d6500d 	ldrb	r5, [r6, #13]
4000acd8:	e5d6300e 	ldrb	r3, [r6, #14]
4000acdc:	e3550000 	cmp	r5, #0
4000ace0:	12455001 	subne	r5, r5, #1
4000ace4:	e3530000 	cmp	r3, #0
4000ace8:	0a000004 	beq	4000ad00 <ArtNetNode::HandleAddress()+0x40>
4000acec:	e286200e 	add	r2, r6, #14
4000acf0:	e1a01005 	mov	r1, r5
4000acf4:	ebfffd98 	bl	4000a35c <ArtNetNode::SetShortName(unsigned long, char const*)>
4000acf8:	e3a03006 	mov	r3, #6
4000acfc:	e5c43098 	strb	r3, [r4, #152]	; 0x98
4000ad00:	e5d63020 	ldrb	r3, [r6, #32]
4000ad04:	e3530000 	cmp	r3, #0
4000ad08:	0a000004 	beq	4000ad20 <ArtNetNode::HandleAddress()+0x60>
4000ad0c:	e2861020 	add	r1, r6, #32
4000ad10:	e1a00004 	mov	r0, r4
4000ad14:	ebfffdd2 	bl	4000a464 <ArtNetNode::SetLongName(char const*)>
4000ad18:	e3a03007 	mov	r3, #7
4000ad1c:	e5c43098 	strb	r3, [r4, #152]	; 0x98
4000ad20:	e5d62068 	ldrb	r2, [r6, #104]	; 0x68
4000ad24:	e3520000 	cmp	r2, #0
4000ad28:	1a000047 	bne	4000ae4c <ArtNetNode::HandleAddress()+0x18c>
4000ad2c:	e1a01005 	mov	r1, r5
4000ad30:	e1a00004 	mov	r0, r4
4000ad34:	ebffff67 	bl	4000aad8 <ArtNetNode::SetSubnetSwitch(unsigned long, unsigned char)>
4000ad38:	e5d6200c 	ldrb	r2, [r6, #12]
4000ad3c:	e3520000 	cmp	r2, #0
4000ad40:	1a000045 	bne	4000ae5c <ArtNetNode::HandleAddress()+0x19c>
4000ad44:	e1a01005 	mov	r1, r5
4000ad48:	e1a00004 	mov	r0, r4
4000ad4c:	ebffff71 	bl	4000ab18 <ArtNetNode::SetNetSwitch(unsigned long, unsigned char)>
4000ad50:	e5d63064 	ldrb	r3, [r6, #100]	; 0x64
4000ad54:	e353007f 	cmp	r3, #127	; 0x7f
4000ad58:	0a00000d 	beq	4000ad94 <ArtNetNode::HandleAddress()+0xd4>
4000ad5c:	e3a02028 	mov	r2, #40	; 0x28
4000ad60:	e0222295 	mla	r2, r5, r2, r2
4000ad64:	e7942002 	ldr	r2, [r4, r2]
4000ad68:	e3520001 	cmp	r2, #1
4000ad6c:	1a000008 	bne	4000ad94 <ArtNetNode::HandleAddress()+0xd4>
4000ad70:	e3530000 	cmp	r3, #0
4000ad74:	01a03002 	moveq	r3, r2
4000ad78:	0a000002 	beq	4000ad88 <ArtNetNode::HandleAddress()+0xc8>
4000ad7c:	e3130080 	tst	r3, #128	; 0x80
4000ad80:	0a000003 	beq	4000ad94 <ArtNetNode::HandleAddress()+0xd4>
4000ad84:	e203307f 	and	r3, r3, #127	; 0x7f
4000ad88:	e1a01005 	mov	r1, r5
4000ad8c:	e1a00004 	mov	r0, r4
4000ad90:	ebffff1e 	bl	4000aa10 <ArtNetNode::SetUniverseSwitch(unsigned long, lightset::PortDir, unsigned char)>
4000ad94:	e5d62060 	ldrb	r2, [r6, #96]	; 0x60
4000ad98:	e352007f 	cmp	r2, #127	; 0x7f
4000ad9c:	0a00000e 	beq	4000addc <ArtNetNode::HandleAddress()+0x11c>
4000ada0:	e3a03028 	mov	r3, #40	; 0x28
4000ada4:	e0233395 	mla	r3, r5, r3, r3
4000ada8:	e7941003 	ldr	r1, [r4, r3]
4000adac:	e3510000 	cmp	r1, #0
4000adb0:	1a000009 	bne	4000addc <ArtNetNode::HandleAddress()+0x11c>
4000adb4:	e3520000 	cmp	r2, #0
4000adb8:	03a03001 	moveq	r3, #1
4000adbc:	0a000003 	beq	4000add0 <ArtNetNode::HandleAddress()+0x110>
4000adc0:	e3120080 	tst	r2, #128	; 0x80
4000adc4:	0a000004 	beq	4000addc <ArtNetNode::HandleAddress()+0x11c>
4000adc8:	e202307f 	and	r3, r2, #127	; 0x7f
4000adcc:	e1a02001 	mov	r2, r1
4000add0:	e1a01005 	mov	r1, r5
4000add4:	e1a00004 	mov	r0, r4
4000add8:	ebffff0c 	bl	4000aa10 <ArtNetNode::SetUniverseSwitch(unsigned long, lightset::PortDir, unsigned char)>
4000addc:	e5d6106a 	ldrb	r1, [r6, #106]	; 0x6a
4000ade0:	e3510013 	cmp	r1, #19
4000ade4:	8a000020 	bhi	4000ae6c <ArtNetNode::HandleAddress()+0x1ac>
4000ade8:	e3510000 	cmp	r1, #0
4000adec:	0a000026 	beq	4000ae8c <ArtNetNode::HandleAddress()+0x1cc>
4000adf0:	e2413001 	sub	r3, r1, #1
4000adf4:	e3530012 	cmp	r3, #18
4000adf8:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
4000adfc:	ea000022 	b	4000ae8c <ArtNetNode::HandleAddress()+0x1cc>
4000ae00:	4000aea8 	andmi	sl, r0, r8, lsr #29
4000ae04:	4000aec8 	andmi	sl, r0, r8, asr #29
4000ae08:	4000aef0 	strdmi	sl, [r0], -r0
4000ae0c:	4000af18 	andmi	sl, r0, r8, lsl pc
4000ae10:	4000ae8c 	andmi	sl, r0, ip, lsl #29
4000ae14:	4000ae8c 	andmi	sl, r0, ip, lsl #29
4000ae18:	4000ae8c 	andmi	sl, r0, ip, lsl #29
4000ae1c:	4000af3c 	andmi	sl, r0, ip, lsr pc
4000ae20:	4000af3c 	andmi	sl, r0, ip, lsr pc
4000ae24:	4000af3c 	andmi	sl, r0, ip, lsr pc
4000ae28:	4000af3c 	andmi	sl, r0, ip, lsr pc
4000ae2c:	4000af3c 	andmi	sl, r0, ip, lsr pc
4000ae30:	4000ae8c 	andmi	sl, r0, ip, lsl #29
4000ae34:	4000ae8c 	andmi	sl, r0, ip, lsl #29
4000ae38:	4000ae8c 	andmi	sl, r0, ip, lsl #29
4000ae3c:	4000af48 	andmi	sl, r0, r8, asr #30
4000ae40:	4000af48 	andmi	sl, r0, r8, asr #30
4000ae44:	4000af48 	andmi	sl, r0, r8, asr #30
4000ae48:	4000af48 	andmi	sl, r0, r8, asr #30
4000ae4c:	e3120080 	tst	r2, #128	; 0x80
4000ae50:	0affffb8 	beq	4000ad38 <ArtNetNode::HandleAddress()+0x78>
4000ae54:	e202207f 	and	r2, r2, #127	; 0x7f
4000ae58:	eaffffb3 	b	4000ad2c <ArtNetNode::HandleAddress()+0x6c>
4000ae5c:	e3120080 	tst	r2, #128	; 0x80
4000ae60:	0affffba 	beq	4000ad50 <ArtNetNode::HandleAddress()+0x90>
4000ae64:	e202207f 	and	r2, r2, #127	; 0x7f
4000ae68:	eaffffb5 	b	4000ad44 <ArtNetNode::HandleAddress()+0x84>
4000ae6c:	e3510053 	cmp	r1, #83	; 0x53
4000ae70:	8a000003 	bhi	4000ae84 <ArtNetNode::HandleAddress()+0x1c4>
4000ae74:	e351004f 	cmp	r1, #79	; 0x4f
4000ae78:	9a000003 	bls	4000ae8c <ArtNetNode::HandleAddress()+0x1cc>
4000ae7c:	e3a02000 	mov	r2, #0
4000ae80:	ea000031 	b	4000af4c <ArtNetNode::HandleAddress()+0x28c>
4000ae84:	e3510090 	cmp	r1, #144	; 0x90
4000ae88:	0a000033 	beq	4000af5c <ArtNetNode::HandleAddress()+0x29c>
4000ae8c:	e5942008 	ldr	r2, [r4, #8]
4000ae90:	e3a03000 	mov	r3, #0
4000ae94:	e5d6100d 	ldrb	r1, [r6, #13]
4000ae98:	e1a00004 	mov	r0, r4
4000ae9c:	e28dd00c 	add	sp, sp, #12
4000aea0:	e8bd40f0 	pop	{r4, r5, r6, r7, lr}
4000aea4:	ea0000f8 	b	4000b28c <ArtNetNode::SendPollReply(unsigned long, unsigned long, artnet::ArtPollQueue*)>
4000aea8:	e3a03000 	mov	r3, #0
4000aeac:	e5c4309e 	strb	r3, [r4, #158]	; 0x9e
4000aeb0:	e58430b8 	str	r3, [r4, #184]	; 0xb8
4000aeb4:	e58430c4 	str	r3, [r4, #196]	; 0xc4
4000aeb8:	e5d430d0 	ldrb	r3, [r4, #208]	; 0xd0
4000aebc:	e3c33008 	bic	r3, r3, #8
4000aec0:	e5c430d0 	strb	r3, [r4, #208]	; 0xd0
4000aec4:	eafffff0 	b	4000ae8c <ArtNetNode::HandleAddress()+0x1cc>
4000aec8:	e59f30fc 	ldr	r3, [pc, #252]	; 4000afcc <ArtNetNode::HandleAddress()+0x30c>
4000aecc:	e3a02000 	mov	r2, #0
4000aed0:	e3a01002 	mov	r1, #2
4000aed4:	e5930000 	ldr	r0, [r3]
4000aed8:	eb006c2e 	bl	40025f98 <Hardware::SetModeWithLock(hardware::ledblink::Mode, bool)>
4000aedc:	e5d430fb 	ldrb	r3, [r4, #251]	; 0xfb
4000aee0:	e1e03d03 	mvn	r3, r3, lsl #26
4000aee4:	e1e03d23 	mvn	r3, r3, lsr #26
4000aee8:	e5c430fb 	strb	r3, [r4, #251]	; 0xfb
4000aeec:	eaffffe6 	b	4000ae8c <ArtNetNode::HandleAddress()+0x1cc>
4000aef0:	e59f30d4 	ldr	r3, [pc, #212]	; 4000afcc <ArtNetNode::HandleAddress()+0x30c>
4000aef4:	e3a02001 	mov	r2, #1
4000aef8:	e3a01000 	mov	r1, #0
4000aefc:	e5930000 	ldr	r0, [r3]
4000af00:	eb006c24 	bl	40025f98 <Hardware::SetModeWithLock(hardware::ledblink::Mode, bool)>
4000af04:	e5d430fb 	ldrb	r3, [r4, #251]	; 0xfb
4000af08:	e203303f 	and	r3, r3, #63	; 0x3f
4000af0c:	e1e03c83 	mvn	r3, r3, lsl #25
4000af10:	e1e03ca3 	mvn	r3, r3, lsr #25
4000af14:	eafffff3 	b	4000aee8 <ArtNetNode::HandleAddress()+0x228>
4000af18:	e59f30ac 	ldr	r3, [pc, #172]	; 4000afcc <ArtNetNode::HandleAddress()+0x30c>
4000af1c:	e3a02001 	mov	r2, #1
4000af20:	e3a01004 	mov	r1, #4
4000af24:	e5930000 	ldr	r0, [r3]
4000af28:	eb006c1a 	bl	40025f98 <Hardware::SetModeWithLock(hardware::ledblink::Mode, bool)>
4000af2c:	e5d430fb 	ldrb	r3, [r4, #251]	; 0xfb
4000af30:	e203303f 	and	r3, r3, #63	; 0x3f
4000af34:	e3833040 	orr	r3, r3, #64	; 0x40
4000af38:	eaffffea 	b	4000aee8 <ArtNetNode::HandleAddress()+0x228>
4000af3c:	e1a00004 	mov	r0, r4
4000af40:	ebffff37 	bl	4000ac24 <ArtNetNode::SetFailSafe(artnetnode::FailSafe)>
4000af44:	eaffffd0 	b	4000ae8c <ArtNetNode::HandleAddress()+0x1cc>
4000af48:	e3a02001 	mov	r2, #1
4000af4c:	e1a01005 	mov	r1, r5
4000af50:	e1a00004 	mov	r0, r4
4000af54:	ebfffeff 	bl	4000ab58 <ArtNetNode::SetMergeMode(unsigned long, lightset::MergeMode)>
4000af58:	eaffffcb 	b	4000ae8c <ArtNetNode::HandleAddress()+0x1cc>
4000af5c:	e3a03028 	mov	r3, #40	; 0x28
4000af60:	e0233395 	mla	r3, r5, r3, r3
4000af64:	e0843003 	add	r3, r4, r3
4000af68:	e5930004 	ldr	r0, [r3, #4]
4000af6c:	e3500000 	cmp	r0, #0
4000af70:	1affffc5 	bne	4000ae8c <ArtNetNode::HandleAddress()+0x1cc>
4000af74:	e59f3054 	ldr	r3, [pc, #84]	; 4000afd0 <ArtNetNode::HandleAddress()+0x310>
4000af78:	e3002604 	movw	r2, #1540	; 0x604
4000af7c:	e0020592 	mul	r2, r2, r5
4000af80:	e2822b01 	add	r2, r2, #1024	; 0x400
4000af84:	e0822003 	add	r2, r2, r3
4000af88:	e282cc02 	add	ip, r2, #512	; 0x200
4000af8c:	e1a01002 	mov	r1, r2
4000af90:	e151000c 	cmp	r1, ip
4000af94:	14c10001 	strbne	r0, [r1], #1
4000af98:	1afffffc 	bne	4000af90 <ArtNetNode::HandleAddress()+0x2d0>
4000af9c:	e5940014 	ldr	r0, [r4, #20]
4000afa0:	e3001604 	movw	r1, #1540	; 0x604
4000afa4:	e0213591 	mla	r1, r1, r5, r3
4000afa8:	e3a03c02 	mov	r3, #512	; 0x200
4000afac:	e3a0c001 	mov	ip, #1
4000afb0:	e5813600 	str	r3, [r1, #1536]	; 0x600
4000afb4:	e5901000 	ldr	r1, [r0]
4000afb8:	e58dc000 	str	ip, [sp]
4000afbc:	e5917010 	ldr	r7, [r1, #16]
4000afc0:	e1a01005 	mov	r1, r5
4000afc4:	e12fff37 	blx	r7
4000afc8:	eaffffaf 	b	4000ae8c <ArtNetNode::HandleAddress()+0x1cc>
4000afcc:	40034088 	andmi	r4, r3, r8, lsl #1
4000afd0:	400570d8 	ldrdmi	r7, [r5], -r8

4000afd4 <memcpy.isra.0>:
4000afd4:	e0812002 	add	r2, r1, r2
4000afd8:	e1510002 	cmp	r1, r2
4000afdc:	012fff1e 	bxeq	lr
4000afe0:	e4d13001 	ldrb	r3, [r1], #1
4000afe4:	e4c03001 	strb	r3, [r0], #1
4000afe8:	eafffffa 	b	4000afd8 <memcpy.isra.0+0x4>

4000afec <memcmp>:
4000afec:	e0802002 	add	r2, r0, r2
4000aff0:	e2411001 	sub	r1, r1, #1
4000aff4:	e1500002 	cmp	r0, r2
4000aff8:	0a000007 	beq	4000b01c <memcmp+0x30>
4000affc:	e5d03000 	ldrb	r3, [r0]
4000b000:	e5f1c001 	ldrb	ip, [r1, #1]!
4000b004:	e153000c 	cmp	r3, ip
4000b008:	0a000001 	beq	4000b014 <memcmp+0x28>
4000b00c:	e043000c 	sub	r0, r3, ip
4000b010:	e12fff1e 	bx	lr
4000b014:	e2800001 	add	r0, r0, #1
4000b018:	eafffff5 	b	4000aff4 <memcmp+0x8>
4000b01c:	e3a00000 	mov	r0, #0
4000b020:	e12fff1e 	bx	lr

4000b024 <ArtNetNode::HandleIpProg()>:
4000b024:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000b028:	e24dd01c 	sub	sp, sp, #28
4000b02c:	e59f623c 	ldr	r6, [pc, #572]	; 4000b270 <ArtNetNode::HandleIpProg()+0x24c>
4000b030:	e1a04000 	mov	r4, r0
4000b034:	e5905004 	ldr	r5, [r0, #4]
4000b038:	e5d6301a 	ldrb	r3, [r6, #26]
4000b03c:	e5d5700e 	ldrb	r7, [r5, #14]
4000b040:	e7e030d3 	ubfx	r3, r3, #1, #1
4000b044:	e58d300c 	str	r3, [sp, #12]
4000b048:	e3a03000 	mov	r3, #0
4000b04c:	e5c53008 	strb	r3, [r5, #8]
4000b050:	e3e03006 	mvn	r3, #6
4000b054:	e5c53009 	strb	r3, [r5, #9]
4000b058:	e20730c0 	and	r3, r7, #192	; 0xc0
4000b05c:	e59f8210 	ldr	r8, [pc, #528]	; 4000b274 <ArtNetNode::HandleIpProg()+0x250>
4000b060:	e35300c0 	cmp	r3, #192	; 0xc0
4000b064:	e5980000 	ldr	r0, [r8]
4000b068:	1a000000 	bne	4000b070 <ArtNetNode::HandleIpProg()+0x4c>
4000b06c:	eb0054ed 	bl	40020428 <Network::EnableDhcp()>
4000b070:	e2073088 	and	r3, r7, #136	; 0x88
4000b074:	e3530088 	cmp	r3, #136	; 0x88
4000b078:	1a000002 	bne	4000b088 <ArtNetNode::HandleIpProg()+0x64>
4000b07c:	e5980000 	ldr	r0, [r8]
4000b080:	e3a01000 	mov	r1, #0
4000b084:	eb005478 	bl	4002026c <Network::SetIp(unsigned long)>
4000b088:	e59fa1e8 	ldr	sl, [pc, #488]	; 4000b278 <ArtNetNode::HandleIpProg()+0x254>
4000b08c:	e2073084 	and	r3, r7, #132	; 0x84
4000b090:	e3530084 	cmp	r3, #132	; 0x84
4000b094:	e2859010 	add	r9, r5, #16
4000b098:	1a000006 	bne	4000b0b8 <ArtNetNode::HandleIpProg()+0x94>
4000b09c:	e1a01009 	mov	r1, r9
4000b0a0:	e1a0000a 	mov	r0, sl
4000b0a4:	e3a02004 	mov	r2, #4
4000b0a8:	ebffffc9 	bl	4000afd4 <memcpy.isra.0>
4000b0ac:	e59a1000 	ldr	r1, [sl]
4000b0b0:	e5980000 	ldr	r0, [r8]
4000b0b4:	eb00546c 	bl	4002026c <Network::SetIp(unsigned long)>
4000b0b8:	e2073082 	and	r3, r7, #130	; 0x82
4000b0bc:	e285b014 	add	fp, r5, #20
4000b0c0:	e3530082 	cmp	r3, #130	; 0x82
4000b0c4:	1a000006 	bne	4000b0e4 <ArtNetNode::HandleIpProg()+0xc0>
4000b0c8:	e59f01a8 	ldr	r0, [pc, #424]	; 4000b278 <ArtNetNode::HandleIpProg()+0x254>
4000b0cc:	e1a0100b 	mov	r1, fp
4000b0d0:	e3a02004 	mov	r2, #4
4000b0d4:	ebffffbe 	bl	4000afd4 <memcpy.isra.0>
4000b0d8:	e59a1000 	ldr	r1, [sl]
4000b0dc:	e5980000 	ldr	r0, [r8]
4000b0e0:	eb00547b 	bl	400202d4 <Network::SetNetmask(unsigned long)>
4000b0e4:	e2077090 	and	r7, r7, #144	; 0x90
4000b0e8:	e285301a 	add	r3, r5, #26
4000b0ec:	e3570090 	cmp	r7, #144	; 0x90
4000b0f0:	1a000008 	bne	4000b118 <ArtNetNode::HandleIpProg()+0xf4>
4000b0f4:	e59f017c 	ldr	r0, [pc, #380]	; 4000b278 <ArtNetNode::HandleIpProg()+0x254>
4000b0f8:	e1a01003 	mov	r1, r3
4000b0fc:	e58d3010 	str	r3, [sp, #16]
4000b100:	e3a02004 	mov	r2, #4
4000b104:	ebffffb2 	bl	4000afd4 <memcpy.isra.0>
4000b108:	e59a1000 	ldr	r1, [sl]
4000b10c:	e5980000 	ldr	r0, [r8]
4000b110:	eb005487 	bl	40020334 <Network::SetGatewayIp(unsigned long)>
4000b114:	e59d3010 	ldr	r3, [sp, #16]
4000b118:	e5d6201a 	ldrb	r2, [r6, #26]
4000b11c:	e3a08000 	mov	r8, #0
4000b120:	e58d3014 	str	r3, [sp, #20]
4000b124:	e1a00009 	mov	r0, r9
4000b128:	e59d300c 	ldr	r3, [sp, #12]
4000b12c:	e2122002 	ands	r2, r2, #2
4000b130:	e59fa140 	ldr	sl, [pc, #320]	; 4000b278 <ArtNetNode::HandleIpProg()+0x254>
4000b134:	13a02040 	movne	r2, #64	; 0x40
4000b138:	e5c5201a 	strb	r2, [r5, #26]
4000b13c:	e5d6201a 	ldrb	r2, [r6, #26]
4000b140:	e1a0100a 	mov	r1, sl
4000b144:	e5c5801b 	strb	r8, [r5, #27]
4000b148:	e7e020d2 	ubfx	r2, r2, #1, #1
4000b14c:	e0233002 	eor	r3, r3, r2
4000b150:	e5962000 	ldr	r2, [r6]
4000b154:	e58d3010 	str	r3, [sp, #16]
4000b158:	e58a2000 	str	r2, [sl]
4000b15c:	e3a02004 	mov	r2, #4
4000b160:	ebffffa1 	bl	4000afec <memcmp>
4000b164:	e1a07000 	mov	r7, r0
4000b168:	e3a02004 	mov	r2, #4
4000b16c:	e1a0100a 	mov	r1, sl
4000b170:	e1a00009 	mov	r0, r9
4000b174:	ebffff96 	bl	4000afd4 <memcpy.isra.0>
4000b178:	e5962004 	ldr	r2, [r6, #4]
4000b17c:	e1a0100a 	mov	r1, sl
4000b180:	e1a0000b 	mov	r0, fp
4000b184:	e58a2000 	str	r2, [sl]
4000b188:	e3a02004 	mov	r2, #4
4000b18c:	ebffff96 	bl	4000afec <memcmp>
4000b190:	e58d000c 	str	r0, [sp, #12]
4000b194:	e3a02004 	mov	r2, #4
4000b198:	e1a0100a 	mov	r1, sl
4000b19c:	e1a0000b 	mov	r0, fp
4000b1a0:	ebffff8b 	bl	4000afd4 <memcpy.isra.0>
4000b1a4:	e59d3014 	ldr	r3, [sp, #20]
4000b1a8:	e1a0100a 	mov	r1, sl
4000b1ac:	e5962008 	ldr	r2, [r6, #8]
4000b1b0:	e1a00003 	mov	r0, r3
4000b1b4:	e58a2000 	str	r2, [sl]
4000b1b8:	e3a02004 	mov	r2, #4
4000b1bc:	ebffff8a 	bl	4000afec <memcmp>
4000b1c0:	e59d300c 	ldr	r3, [sp, #12]
4000b1c4:	e3a02004 	mov	r2, #4
4000b1c8:	e1a0100a 	mov	r1, sl
4000b1cc:	e1877003 	orr	r7, r7, r3
4000b1d0:	e1973000 	orrs	r3, r7, r0
4000b1d4:	e285001c 	add	r0, r5, #28
4000b1d8:	e59d7010 	ldr	r7, [sp, #16]
4000b1dc:	13877001 	orrne	r7, r7, #1
4000b1e0:	ebffff7b 	bl	4000afd4 <memcpy.isra.0>
4000b1e4:	e5962000 	ldr	r2, [r6]
4000b1e8:	e5c58020 	strb	r8, [r5, #32]
4000b1ec:	e1520008 	cmp	r2, r8
4000b1f0:	e5c58021 	strb	r8, [r5, #33]	; 0x21
4000b1f4:	e1c400d0 	ldrd	r0, [r4]
4000b1f8:	e5943008 	ldr	r3, [r4, #8]
4000b1fc:	0a000003 	beq	4000b210 <ArtNetNode::HandleIpProg()+0x1ec>
4000b200:	e3012936 	movw	r2, #6454	; 0x1936
4000b204:	e58d2000 	str	r2, [sp]
4000b208:	e3a02022 	mov	r2, #34	; 0x22
4000b20c:	eb005c59 	bl	40022378 <net::udp_send(long, unsigned char const*, unsigned long, unsigned long, unsigned short)>
4000b210:	e3570000 	cmp	r7, #0
4000b214:	0a000013 	beq	4000b268 <ArtNetNode::HandleIpProg()+0x244>
4000b218:	e5d431b8 	ldrb	r3, [r4, #440]	; 0x1b8
4000b21c:	e1a01009 	mov	r1, r9
4000b220:	e5d6201a 	ldrb	r2, [r6, #26]
4000b224:	e28400ee 	add	r0, r4, #238	; 0xee
4000b228:	e3c33002 	bic	r3, r3, #2
4000b22c:	e2022002 	and	r2, r2, #2
4000b230:	e1833002 	orr	r3, r3, r2
4000b234:	e3a02004 	mov	r2, #4
4000b238:	e5c431b8 	strb	r3, [r4, #440]	; 0x1b8
4000b23c:	ebffff64 	bl	4000afd4 <memcpy.isra.0>
4000b240:	e5d4309a 	ldrb	r3, [r4, #154]	; 0x9a
4000b244:	e3530000 	cmp	r3, #0
4000b248:	0a000006 	beq	4000b268 <ArtNetNode::HandleIpProg()+0x244>
4000b24c:	e5942008 	ldr	r2, [r4, #8]
4000b250:	e3a03000 	mov	r3, #0
4000b254:	e1a01003 	mov	r1, r3
4000b258:	e1a00004 	mov	r0, r4
4000b25c:	e28dd01c 	add	sp, sp, #28
4000b260:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000b264:	ea000008 	b	4000b28c <ArtNetNode::SendPollReply(unsigned long, unsigned long, artnet::ArtPollQueue*)>
4000b268:	e28dd01c 	add	sp, sp, #28
4000b26c:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000b270:	4005a73c 	andmi	sl, r5, ip, lsr r7
4000b274:	40034080 	andmi	r4, r3, r0, lsl #1
4000b278:	400576e0 	andmi	r7, r5, r0, ror #13

4000b27c <LightSet::GetUserData()>:
4000b27c:	e3a00000 	mov	r0, #0
4000b280:	e12fff1e 	bx	lr

4000b284 <LightSet::GetRefreshRate()>:
4000b284:	e3a00000 	mov	r0, #0
4000b288:	e12fff1e 	bx	lr

4000b28c <ArtNetNode::SendPollReply(unsigned long, unsigned long, artnet::ArtPollQueue*)>:
4000b28c:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000b290:	e30a573c 	movw	r5, #42812	; 0xa73c
4000b294:	e3445005 	movt	r5, #16389	; 0x4005
4000b298:	e307c6e4 	movw	ip, #30436	; 0x76e4
4000b29c:	e344c005 	movt	ip, #16389	; 0x4005
4000b2a0:	e1a04000 	mov	r4, r0
4000b2a4:	e1a06002 	mov	r6, r2
4000b2a8:	e28020ee 	add	r2, r0, #238	; 0xee
4000b2ac:	e5950000 	ldr	r0, [r5]
4000b2b0:	e24dd00c 	sub	sp, sp, #12
4000b2b4:	e284e0f2 	add	lr, r4, #242	; 0xf2
4000b2b8:	e58c0000 	str	r0, [ip]
4000b2bc:	e1a0000c 	mov	r0, ip
4000b2c0:	e4d0c001 	ldrb	ip, [r0], #1
4000b2c4:	e4c2c001 	strb	ip, [r2], #1
4000b2c8:	e152000e 	cmp	r2, lr
4000b2cc:	1afffffb 	bne	4000b2c0 <ArtNetNode::SendPollReply(unsigned long, unsigned long, artnet::ArtPollQueue*)+0x34>
4000b2d0:	e3510000 	cmp	r1, #0
4000b2d4:	0a000101 	beq	4000b6e0 <ArtNetNode::SendPollReply(unsigned long, unsigned long, artnet::ArtPollQueue*)+0x454>
4000b2d8:	e3510001 	cmp	r1, #1
4000b2dc:	1a0000fb 	bne	4000b6d0 <ArtNetNode::SendPollReply(unsigned long, unsigned long, artnet::ArtPollQueue*)+0x444>
4000b2e0:	e5d42023 	ldrb	r2, [r4, #35]	; 0x23
4000b2e4:	e2840046 	add	r0, r4, #70	; 0x46
4000b2e8:	e5d43024 	ldrb	r3, [r4, #36]	; 0x24
4000b2ec:	e3a01001 	mov	r1, #1
4000b2f0:	e5c420f6 	strb	r2, [r4, #246]	; 0xf6
4000b2f4:	e28420fe 	add	r2, r4, #254	; 0xfe
4000b2f8:	e5c430f7 	strb	r3, [r4, #247]	; 0xf7
4000b2fc:	e2843034 	add	r3, r4, #52	; 0x34
4000b300:	e5c411b7 	strb	r1, [r4, #439]	; 0x1b7
4000b304:	e4d31001 	ldrb	r1, [r3], #1
4000b308:	e1530000 	cmp	r3, r0
4000b30c:	e4c21001 	strb	r1, [r2], #1
4000b310:	1afffffb 	bne	4000b304 <ArtNetNode::SendPollReply(unsigned long, unsigned long, artnet::ArtPollQueue*)+0x78>
4000b314:	e5940014 	ldr	r0, [r4, #20]
4000b318:	e3500000 	cmp	r0, #0
4000b31c:	0a000013 	beq	4000b370 <ArtNetNode::SendPollReply(unsigned long, unsigned long, artnet::ArtPollQueue*)+0xe4>
4000b320:	e5902000 	ldr	r2, [r0]
4000b324:	e30b3284 	movw	r3, #45700	; 0xb284
4000b328:	e3443000 	movt	r3, #16384	; 0x4000
4000b32c:	e5922020 	ldr	r2, [r2, #32]
4000b330:	e1520003 	cmp	r2, r3
4000b334:	03a02000 	moveq	r2, #0
4000b338:	01a03002 	moveq	r3, r2
4000b33c:	1a000115 	bne	4000b798 <ArtNetNode::SendPollReply(unsigned long, unsigned long, artnet::ArtPollQueue*)+0x50c>
4000b340:	e5c431c7 	strb	r3, [r4, #455]	; 0x1c7
4000b344:	e30b327c 	movw	r3, #45692	; 0xb27c
4000b348:	e5c421c6 	strb	r2, [r4, #454]	; 0x1c6
4000b34c:	e5902000 	ldr	r2, [r0]
4000b350:	e3443000 	movt	r3, #16384	; 0x4000
4000b354:	e592201c 	ldr	r2, [r2, #28]
4000b358:	e1520003 	cmp	r2, r3
4000b35c:	03a02000 	moveq	r2, #0
4000b360:	01a03002 	moveq	r3, r2
4000b364:	1a000107 	bne	4000b788 <ArtNetNode::SendPollReply(unsigned long, unsigned long, artnet::ArtPollQueue*)+0x4fc>
4000b368:	e5c431c5 	strb	r3, [r4, #453]	; 0x1c5
4000b36c:	e5c421c4 	strb	r2, [r4, #452]	; 0x1c4
4000b370:	e5d4e098 	ldrb	lr, [r4, #152]	; 0x98
4000b374:	e2847e15 	add	r7, r4, #336	; 0x150
4000b378:	e5943058 	ldr	r3, [r4, #88]	; 0x58
4000b37c:	e30c9ccd 	movw	r9, #52429	; 0xcccd
4000b380:	e34c9ccc 	movt	r9, #52428	; 0xcccc
4000b384:	e2877001 	add	r7, r7, #1
4000b388:	e1a0c00e 	mov	ip, lr
4000b38c:	e2841f55 	add	r1, r4, #340	; 0x154
4000b390:	e3a0a00a 	mov	sl, #10
4000b394:	e2833001 	add	r3, r3, #1
4000b398:	e5843058 	str	r3, [r4, #88]	; 0x58
4000b39c:	e3a02023 	mov	r2, #35	; 0x23
4000b3a0:	e5c42150 	strb	r2, [r4, #336]	; 0x150
4000b3a4:	e0820c99 	umull	r0, r2, r9, ip
4000b3a8:	e35c0009 	cmp	ip, #9
4000b3ac:	e1a0000c 	mov	r0, ip
4000b3b0:	e1a021a2 	lsr	r2, r2, #3
4000b3b4:	83a00000 	movhi	r0, #0
4000b3b8:	e06bc29a 	mls	fp, sl, r2, ip
4000b3bc:	93a00001 	movls	r0, #1
4000b3c0:	e1a0c002 	mov	ip, r2
4000b3c4:	e28b2030 	add	r2, fp, #48	; 0x30
4000b3c8:	e1a08001 	mov	r8, r1
4000b3cc:	e4412001 	strb	r2, [r1], #-1
4000b3d0:	e1570001 	cmp	r7, r1
4000b3d4:	91a02000 	movls	r2, r0
4000b3d8:	83802001 	orrhi	r2, r0, #1
4000b3dc:	e3520000 	cmp	r2, #0
4000b3e0:	0affffef 	beq	4000b3a4 <ArtNetNode::SendPollReply(unsigned long, unsigned long, artnet::ArtPollQueue*)+0x118>
4000b3e4:	e1570001 	cmp	r7, r1
4000b3e8:	8a000037 	bhi	4000b4cc <ArtNetNode::SendPollReply(unsigned long, unsigned long, artnet::ArtPollQueue*)+0x240>
4000b3ec:	e2840f5b 	add	r0, r4, #364	; 0x16c
4000b3f0:	e2482002 	sub	r2, r8, #2
4000b3f4:	e2800003 	add	r0, r0, #3
4000b3f8:	e284ce15 	add	ip, r4, #336	; 0x150
4000b3fc:	e1520000 	cmp	r2, r0
4000b400:	83a02001 	movhi	r2, #1
4000b404:	93a02000 	movls	r2, #0
4000b408:	e37c0020 	cmn	ip, #32
4000b40c:	83a02000 	movhi	r2, #0
4000b410:	e3520000 	cmp	r2, #0
4000b414:	02411001 	subeq	r1, r1, #1
4000b418:	0a000026 	beq	4000b4b8 <ArtNetNode::SendPollReply(unsigned long, unsigned long, artnet::ArtPollQueue*)+0x22c>
4000b41c:	e2488021 	sub	r8, r8, #33	; 0x21
4000b420:	e3a02030 	mov	r2, #48	; 0x30
4000b424:	f558f012 	pld	[r8, #-18]	; 0xffffffee
4000b428:	e2481001 	sub	r1, r8, #1
4000b42c:	e1500001 	cmp	r0, r1
4000b430:	e2488020 	sub	r8, r8, #32
4000b434:	e5c82040 	strb	r2, [r8, #64]	; 0x40
4000b438:	e5c8203f 	strb	r2, [r8, #63]	; 0x3f
4000b43c:	e5c8203e 	strb	r2, [r8, #62]	; 0x3e
4000b440:	e5c8203d 	strb	r2, [r8, #61]	; 0x3d
4000b444:	e5c8203c 	strb	r2, [r8, #60]	; 0x3c
4000b448:	e5c8203b 	strb	r2, [r8, #59]	; 0x3b
4000b44c:	e5c8203a 	strb	r2, [r8, #58]	; 0x3a
4000b450:	e5c82039 	strb	r2, [r8, #57]	; 0x39
4000b454:	e5c82038 	strb	r2, [r8, #56]	; 0x38
4000b458:	e5c82037 	strb	r2, [r8, #55]	; 0x37
4000b45c:	e5c82036 	strb	r2, [r8, #54]	; 0x36
4000b460:	e5c82035 	strb	r2, [r8, #53]	; 0x35
4000b464:	e5c82034 	strb	r2, [r8, #52]	; 0x34
4000b468:	e5c82033 	strb	r2, [r8, #51]	; 0x33
4000b46c:	e5c82032 	strb	r2, [r8, #50]	; 0x32
4000b470:	e5c82031 	strb	r2, [r8, #49]	; 0x31
4000b474:	e5c82030 	strb	r2, [r8, #48]	; 0x30
4000b478:	e5c8202f 	strb	r2, [r8, #47]	; 0x2f
4000b47c:	e5c8202e 	strb	r2, [r8, #46]	; 0x2e
4000b480:	e5c8202d 	strb	r2, [r8, #45]	; 0x2d
4000b484:	e5c8202c 	strb	r2, [r8, #44]	; 0x2c
4000b488:	e5c8202b 	strb	r2, [r8, #43]	; 0x2b
4000b48c:	e5c8202a 	strb	r2, [r8, #42]	; 0x2a
4000b490:	e5c82029 	strb	r2, [r8, #41]	; 0x29
4000b494:	e5c82028 	strb	r2, [r8, #40]	; 0x28
4000b498:	e5c82027 	strb	r2, [r8, #39]	; 0x27
4000b49c:	e5c82026 	strb	r2, [r8, #38]	; 0x26
4000b4a0:	e5c82025 	strb	r2, [r8, #37]	; 0x25
4000b4a4:	e5c82024 	strb	r2, [r8, #36]	; 0x24
4000b4a8:	e5c82023 	strb	r2, [r8, #35]	; 0x23
4000b4ac:	e5c82022 	strb	r2, [r8, #34]	; 0x22
4000b4b0:	e5c82021 	strb	r2, [r8, #33]	; 0x21
4000b4b4:	3affffda 	bcc	4000b424 <ArtNetNode::SendPollReply(unsigned long, unsigned long, artnet::ArtPollQueue*)+0x198>
4000b4b8:	e3a02030 	mov	r2, #48	; 0x30
4000b4bc:	e1570001 	cmp	r7, r1
4000b4c0:	e2411001 	sub	r1, r1, #1
4000b4c4:	e5c12002 	strb	r2, [r1, #2]
4000b4c8:	9afffffb 	bls	4000b4bc <ArtNetNode::SendPollReply(unsigned long, unsigned long, artnet::ArtPollQueue*)+0x230>
4000b4cc:	e3a01020 	mov	r1, #32
4000b4d0:	e2842f55 	add	r2, r4, #340	; 0x154
4000b4d4:	e5c41155 	strb	r1, [r4, #341]	; 0x155
4000b4d8:	e3a0105b 	mov	r1, #91	; 0x5b
4000b4dc:	e5c41156 	strb	r1, [r4, #342]	; 0x156
4000b4e0:	e30c8ccd 	movw	r8, #52429	; 0xcccd
4000b4e4:	e34c8ccc 	movt	r8, #52428	; 0xcccc
4000b4e8:	e2841f56 	add	r1, r4, #344	; 0x158
4000b4ec:	e2822003 	add	r2, r2, #3
4000b4f0:	e2811002 	add	r1, r1, #2
4000b4f4:	e3a0900a 	mov	r9, #10
4000b4f8:	e080c398 	umull	ip, r0, r8, r3
4000b4fc:	e3530009 	cmp	r3, #9
4000b500:	e1a0c003 	mov	ip, r3
4000b504:	e1a001a0 	lsr	r0, r0, #3
4000b508:	83a0c000 	movhi	ip, #0
4000b50c:	e06a3099 	mls	sl, r9, r0, r3
4000b510:	93a0c001 	movls	ip, #1
4000b514:	e1a03000 	mov	r3, r0
4000b518:	e28a0030 	add	r0, sl, #48	; 0x30
4000b51c:	e1a07001 	mov	r7, r1
4000b520:	e4410001 	strb	r0, [r1], #-1
4000b524:	e1520001 	cmp	r2, r1
4000b528:	838cc001 	orrhi	ip, ip, #1
4000b52c:	e35c0000 	cmp	ip, #0
4000b530:	0afffff0 	beq	4000b4f8 <ArtNetNode::SendPollReply(unsigned long, unsigned long, artnet::ArtPollQueue*)+0x26c>
4000b534:	e1520001 	cmp	r2, r1
4000b538:	8a000038 	bhi	4000b620 <ArtNetNode::SendPollReply(unsigned long, unsigned long, artnet::ArtPollQueue*)+0x394>
4000b53c:	e2840f5d 	add	r0, r4, #372	; 0x174
4000b540:	e2473002 	sub	r3, r7, #2
4000b544:	e284cf55 	add	ip, r4, #340	; 0x154
4000b548:	e2800001 	add	r0, r0, #1
4000b54c:	e1530000 	cmp	r3, r0
4000b550:	e28cc002 	add	ip, ip, #2
4000b554:	83a03001 	movhi	r3, #1
4000b558:	93a03000 	movls	r3, #0
4000b55c:	e37c0020 	cmn	ip, #32
4000b560:	83a03000 	movhi	r3, #0
4000b564:	e3530000 	cmp	r3, #0
4000b568:	02411001 	subeq	r1, r1, #1
4000b56c:	0a000026 	beq	4000b60c <ArtNetNode::SendPollReply(unsigned long, unsigned long, artnet::ArtPollQueue*)+0x380>
4000b570:	e2477021 	sub	r7, r7, #33	; 0x21
4000b574:	e3a03030 	mov	r3, #48	; 0x30
4000b578:	f557f012 	pld	[r7, #-18]	; 0xffffffee
4000b57c:	e2471001 	sub	r1, r7, #1
4000b580:	e1510000 	cmp	r1, r0
4000b584:	e2477020 	sub	r7, r7, #32
4000b588:	e5c73040 	strb	r3, [r7, #64]	; 0x40
4000b58c:	e5c7303f 	strb	r3, [r7, #63]	; 0x3f
4000b590:	e5c7303e 	strb	r3, [r7, #62]	; 0x3e
4000b594:	e5c7303d 	strb	r3, [r7, #61]	; 0x3d
4000b598:	e5c7303c 	strb	r3, [r7, #60]	; 0x3c
4000b59c:	e5c7303b 	strb	r3, [r7, #59]	; 0x3b
4000b5a0:	e5c7303a 	strb	r3, [r7, #58]	; 0x3a
4000b5a4:	e5c73039 	strb	r3, [r7, #57]	; 0x39
4000b5a8:	e5c73038 	strb	r3, [r7, #56]	; 0x38
4000b5ac:	e5c73037 	strb	r3, [r7, #55]	; 0x37
4000b5b0:	e5c73036 	strb	r3, [r7, #54]	; 0x36
4000b5b4:	e5c73035 	strb	r3, [r7, #53]	; 0x35
4000b5b8:	e5c73034 	strb	r3, [r7, #52]	; 0x34
4000b5bc:	e5c73033 	strb	r3, [r7, #51]	; 0x33
4000b5c0:	e5c73032 	strb	r3, [r7, #50]	; 0x32
4000b5c4:	e5c73031 	strb	r3, [r7, #49]	; 0x31
4000b5c8:	e5c73030 	strb	r3, [r7, #48]	; 0x30
4000b5cc:	e5c7302f 	strb	r3, [r7, #47]	; 0x2f
4000b5d0:	e5c7302e 	strb	r3, [r7, #46]	; 0x2e
4000b5d4:	e5c7302d 	strb	r3, [r7, #45]	; 0x2d
4000b5d8:	e5c7302c 	strb	r3, [r7, #44]	; 0x2c
4000b5dc:	e5c7302b 	strb	r3, [r7, #43]	; 0x2b
4000b5e0:	e5c7302a 	strb	r3, [r7, #42]	; 0x2a
4000b5e4:	e5c73029 	strb	r3, [r7, #41]	; 0x29
4000b5e8:	e5c73028 	strb	r3, [r7, #40]	; 0x28
4000b5ec:	e5c73027 	strb	r3, [r7, #39]	; 0x27
4000b5f0:	e5c73026 	strb	r3, [r7, #38]	; 0x26
4000b5f4:	e5c73025 	strb	r3, [r7, #37]	; 0x25
4000b5f8:	e5c73024 	strb	r3, [r7, #36]	; 0x24
4000b5fc:	e5c73023 	strb	r3, [r7, #35]	; 0x23
4000b600:	e5c73022 	strb	r3, [r7, #34]	; 0x22
4000b604:	e5c73021 	strb	r3, [r7, #33]	; 0x21
4000b608:	8affffda 	bhi	4000b578 <ArtNetNode::SendPollReply(unsigned long, unsigned long, artnet::ArtPollQueue*)+0x2ec>
4000b60c:	e3a03030 	mov	r3, #48	; 0x30
4000b610:	e1520001 	cmp	r2, r1
4000b614:	e2411001 	sub	r1, r1, #1
4000b618:	e5c13002 	strb	r3, [r1, #2]
4000b61c:	9afffffb 	bls	4000b610 <ArtNetNode::SendPollReply(unsigned long, unsigned long, artnet::ArtPollQueue*)+0x384>
4000b620:	e3a0305d 	mov	r3, #93	; 0x5d
4000b624:	e35e000f 	cmp	lr, #15
4000b628:	e5c4315b 	strb	r3, [r4, #347]	; 0x15b
4000b62c:	e3a02020 	mov	r2, #32
4000b630:	e5c4215c 	strb	r2, [r4, #348]	; 0x15c
4000b634:	e2843f57 	add	r3, r4, #348	; 0x15c
4000b638:	e2833001 	add	r3, r3, #1
4000b63c:	9a000034 	bls	4000b714 <ArtNetNode::SendPollReply(unsigned long, unsigned long, artnet::ArtPollQueue*)+0x488>
4000b640:	e300c60c 	movw	ip, #1548	; 0x60c
4000b644:	e3a02055 	mov	r2, #85	; 0x55
4000b648:	e344c003 	movt	ip, #16387	; 0x4003
4000b64c:	e1a0100c 	mov	r1, ip
4000b650:	e28cc031 	add	ip, ip, #49	; 0x31
4000b654:	e281e032 	add	lr, r1, #50	; 0x32
4000b658:	ea000000 	b	4000b660 <ArtNetNode::SendPollReply(unsigned long, unsigned long, artnet::ArtPollQueue*)+0x3d4>
4000b65c:	e5f12001 	ldrb	r2, [r1, #1]!
4000b660:	e04e0001 	sub	r0, lr, r1
4000b664:	e3520000 	cmp	r2, #0
4000b668:	0a00002e 	beq	4000b728 <ArtNetNode::SendPollReply(unsigned long, unsigned long, artnet::ArtPollQueue*)+0x49c>
4000b66c:	e15c0001 	cmp	ip, r1
4000b670:	e4c32001 	strb	r2, [r3], #1
4000b674:	1afffff8 	bne	4000b65c <ArtNetNode::SendPollReply(unsigned long, unsigned long, artnet::ArtPollQueue*)+0x3d0>
4000b678:	e5943028 	ldr	r3, [r4, #40]	; 0x28
4000b67c:	e3530001 	cmp	r3, #1
4000b680:	0a000031 	beq	4000b74c <ArtNetNode::SendPollReply(unsigned long, unsigned long, artnet::ArtPollQueue*)+0x4c0>
4000b684:	e3a03000 	mov	r3, #0
4000b688:	e5c43192 	strb	r3, [r4, #402]	; 0x192
4000b68c:	e1a02003 	mov	r2, r3
4000b690:	e5c4319a 	strb	r3, [r4, #410]	; 0x19a
4000b694:	e5c431b9 	strb	r3, [r4, #441]	; 0x1b9
4000b698:	e5c43196 	strb	r3, [r4, #406]	; 0x196
4000b69c:	e5c431a2 	strb	r3, [r4, #418]	; 0x1a2
4000b6a0:	e5c4319e 	strb	r3, [r4, #414]	; 0x19e
4000b6a4:	e5953000 	ldr	r3, [r5]
4000b6a8:	e1a01004 	mov	r1, r4
4000b6ac:	e5c42191 	strb	r2, [r4, #401]	; 0x191
4000b6b0:	e49100e4 	ldr	r0, [r1], #228	; 0xe4
4000b6b4:	e3530000 	cmp	r3, #0
4000b6b8:	0a000004 	beq	4000b6d0 <ArtNetNode::SendPollReply(unsigned long, unsigned long, artnet::ArtPollQueue*)+0x444>
4000b6bc:	e3012936 	movw	r2, #6454	; 0x1936
4000b6c0:	e1a03006 	mov	r3, r6
4000b6c4:	e58d2000 	str	r2, [sp]
4000b6c8:	e3a020ef 	mov	r2, #239	; 0xef
4000b6cc:	eb005b29 	bl	40022378 <net::udp_send(long, unsigned char const*, unsigned long, unsigned long, unsigned short)>
4000b6d0:	e3a03000 	mov	r3, #0
4000b6d4:	e5c4309f 	strb	r3, [r4, #159]	; 0x9f
4000b6d8:	e28dd00c 	add	sp, sp, #12
4000b6dc:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000b6e0:	e3530000 	cmp	r3, #0
4000b6e4:	0afffefd 	beq	4000b2e0 <ArtNetNode::SendPollReply(unsigned long, unsigned long, artnet::ArtPollQueue*)+0x54>
4000b6e8:	e1d422b0 	ldrh	r2, [r4, #32]
4000b6ec:	e1d310ba 	ldrh	r1, [r3, #10]
4000b6f0:	e1510002 	cmp	r1, r2
4000b6f4:	8afffff5 	bhi	4000b6d0 <ArtNetNode::SendPollReply(unsigned long, unsigned long, artnet::ArtPollQueue*)+0x444>
4000b6f8:	e1d330b8 	ldrh	r3, [r3, #8]
4000b6fc:	e1530002 	cmp	r3, r2
4000b700:	2afffef6 	bcs	4000b2e0 <ArtNetNode::SendPollReply(unsigned long, unsigned long, artnet::ArtPollQueue*)+0x54>
4000b704:	e3a03000 	mov	r3, #0
4000b708:	e5c4309f 	strb	r3, [r4, #159]	; 0x9f
4000b70c:	e28dd00c 	add	sp, sp, #12
4000b710:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000b714:	e30028cc 	movw	r2, #2252	; 0x8cc
4000b718:	e3442003 	movt	r2, #16387	; 0x4003
4000b71c:	e792c10e 	ldr	ip, [r2, lr, lsl #2]
4000b720:	e5dc2000 	ldrb	r2, [ip]
4000b724:	eaffffc8 	b	4000b64c <ArtNetNode::SendPollReply(unsigned long, unsigned long, artnet::ArtPollQueue*)+0x3c0>
4000b728:	e3500000 	cmp	r0, #0
4000b72c:	0affffd1 	beq	4000b678 <ArtNetNode::SendPollReply(unsigned long, unsigned long, artnet::ArtPollQueue*)+0x3ec>
4000b730:	e0830000 	add	r0, r3, r0
4000b734:	e4c32001 	strb	r2, [r3], #1
4000b738:	e1530000 	cmp	r3, r0
4000b73c:	1afffffc 	bne	4000b734 <ArtNetNode::SendPollReply(unsigned long, unsigned long, artnet::ArtPollQueue*)+0x4a8>
4000b740:	e5943028 	ldr	r3, [r4, #40]	; 0x28
4000b744:	e3530001 	cmp	r3, #1
4000b748:	1affffcd 	bne	4000b684 <ArtNetNode::SendPollReply(unsigned long, unsigned long, artnet::ArtPollQueue*)+0x3f8>
4000b74c:	e5d41192 	ldrb	r1, [r4, #402]	; 0x192
4000b750:	e1a02003 	mov	r2, r3
4000b754:	e1e03c81 	mvn	r3, r1, lsl #25
4000b758:	e1e03ca3 	mvn	r3, r3, lsr #25
4000b75c:	e5c43192 	strb	r3, [r4, #402]	; 0x192
4000b760:	e5d430d0 	ldrb	r3, [r4, #208]	; 0xd0
4000b764:	e5c4319a 	strb	r3, [r4, #410]	; 0x19a
4000b768:	e5d430d1 	ldrb	r3, [r4, #209]	; 0xd1
4000b76c:	e5c431b9 	strb	r3, [r4, #441]	; 0x1b9
4000b770:	e3a03000 	mov	r3, #0
4000b774:	e5c43196 	strb	r3, [r4, #406]	; 0x196
4000b778:	e5c4319e 	strb	r3, [r4, #414]	; 0x19e
4000b77c:	e5d43022 	ldrb	r3, [r4, #34]	; 0x22
4000b780:	e5c431a2 	strb	r3, [r4, #418]	; 0x1a2
4000b784:	eaffffc6 	b	4000b6a4 <ArtNetNode::SendPollReply(unsigned long, unsigned long, artnet::ArtPollQueue*)+0x418>
4000b788:	e12fff32 	blx	r2
4000b78c:	e7e72450 	ubfx	r2, r0, #8, #8
4000b790:	e6ef3070 	uxtb	r3, r0
4000b794:	eafffef3 	b	4000b368 <ArtNetNode::SendPollReply(unsigned long, unsigned long, artnet::ArtPollQueue*)+0xdc>
4000b798:	e12fff32 	blx	r2
4000b79c:	e1a03000 	mov	r3, r0
4000b7a0:	e7e72453 	ubfx	r2, r3, #8, #8
4000b7a4:	e6ef3073 	uxtb	r3, r3
4000b7a8:	e5940014 	ldr	r0, [r4, #20]
4000b7ac:	eafffee3 	b	4000b340 <ArtNetNode::SendPollReply(unsigned long, unsigned long, artnet::ArtPollQueue*)+0xb4>

4000b7b0 <ArtNetNode::HandlePoll()>:
4000b7b0:	e5903004 	ldr	r3, [r0, #4]
4000b7b4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4000b7b8:	e5d3200c 	ldrb	r2, [r3, #12]
4000b7bc:	e7e020d2 	ubfx	r2, r2, #1, #1
4000b7c0:	e5c0209a 	strb	r2, [r0, #154]	; 0x9a
4000b7c4:	e5d3200c 	ldrb	r2, [r3, #12]
4000b7c8:	e2122004 	ands	r2, r2, #4
4000b7cc:	05c0209b 	strbeq	r2, [r0, #155]	; 0x9b
4000b7d0:	05802050 	streq	r2, [r0, #80]	; 0x50
4000b7d4:	0a00000f 	beq	4000b818 <ArtNetNode::HandlePoll()+0x68>
4000b7d8:	e5902054 	ldr	r2, [r0, #84]	; 0x54
4000b7dc:	e3a01001 	mov	r1, #1
4000b7e0:	e5d0c09c 	ldrb	ip, [r0, #156]	; 0x9c
4000b7e4:	e5c0109b 	strb	r1, [r0, #155]	; 0x9b
4000b7e8:	e3520000 	cmp	r2, #0
4000b7ec:	1a000023 	bne	4000b880 <ArtNetNode::HandlePoll()+0xd0>
4000b7f0:	e590e008 	ldr	lr, [r0, #8]
4000b7f4:	e35c0000 	cmp	ip, #0
4000b7f8:	e580e054 	str	lr, [r0, #84]	; 0x54
4000b7fc:	1a000021 	bne	4000b888 <ArtNetNode::HandlePoll()+0xd8>
4000b800:	e5d3200d 	ldrb	r2, [r3, #13]
4000b804:	e5c020a5 	strb	r2, [r0, #165]	; 0xa5
4000b808:	e5d3200c 	ldrb	r2, [r3, #12]
4000b80c:	e3120008 	tst	r2, #8
4000b810:	1580e050 	strne	lr, [r0, #80]	; 0x50
4000b814:	0a00002e 	beq	4000b8d4 <ArtNetNode::HandlePoll()+0x124>
4000b818:	e5d3200c 	ldrb	r2, [r3, #12]
4000b81c:	e280c098 	add	ip, r0, #152	; 0x98
4000b820:	e2122001 	ands	r2, r2, #1
4000b824:	01a01002 	moveq	r1, r2
4000b828:	0307efff 	movweq	lr, #32767	; 0x7fff
4000b82c:	15d3e00f 	ldrbne	lr, [r3, #15]
4000b830:	15d31011 	ldrbne	r1, [r3, #17]
4000b834:	e2803068 	add	r3, r0, #104	; 0x68
4000b838:	e5932000 	ldr	r2, [r3]
4000b83c:	e3520000 	cmp	r2, #0
4000b840:	0a000005 	beq	4000b85c <ArtNetNode::HandlePoll()+0xac>
4000b844:	e283300c 	add	r3, r3, #12
4000b848:	e15c0003 	cmp	ip, r3
4000b84c:	049df004 	popeq	{pc}		; (ldreq pc, [sp], #4)
4000b850:	e5932000 	ldr	r2, [r3]
4000b854:	e3520000 	cmp	r2, #0
4000b858:	1afffff9 	bne	4000b844 <ArtNetNode::HandlePoll()+0x94>
4000b85c:	e3a02b03 	mov	r2, #3072	; 0xc00
4000b860:	e34021c2 	movt	r2, #450	; 0x1c2
4000b864:	e5922084 	ldr	r2, [r2, #132]	; 0x84
4000b868:	e5832000 	str	r2, [r3]
4000b86c:	e5902008 	ldr	r2, [r0, #8]
4000b870:	e1c3e0b8 	strh	lr, [r3, #8]
4000b874:	e1c310ba 	strh	r1, [r3, #10]
4000b878:	e5832004 	str	r2, [r3, #4]
4000b87c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4000b880:	e35c0000 	cmp	ip, #0
4000b884:	0a000009 	beq	4000b8b0 <ArtNetNode::HandlePoll()+0x100>
4000b888:	e30a273c 	movw	r2, #42812	; 0xa73c
4000b88c:	e3442005 	movt	r2, #16389	; 0x4005
4000b890:	e592100c 	ldr	r1, [r2, #12]
4000b894:	e5d3200d 	ldrb	r2, [r3, #13]
4000b898:	e5d0c0a5 	ldrb	ip, [r0, #165]	; 0xa5
4000b89c:	e152000c 	cmp	r2, ip
4000b8a0:	21a0200c 	movcs	r2, ip
4000b8a4:	e5c020a5 	strb	r2, [r0, #165]	; 0xa5
4000b8a8:	e5801050 	str	r1, [r0, #80]	; 0x50
4000b8ac:	eaffffd9 	b	4000b818 <ArtNetNode::HandlePoll()+0x68>
4000b8b0:	e590e008 	ldr	lr, [r0, #8]
4000b8b4:	e152000e 	cmp	r2, lr
4000b8b8:	0affffd0 	beq	4000b800 <ArtNetNode::HandlePoll()+0x50>
4000b8bc:	e5c0109c 	strb	r1, [r0, #156]	; 0x9c
4000b8c0:	e30a273c 	movw	r2, #42812	; 0xa73c
4000b8c4:	e3442005 	movt	r2, #16389	; 0x4005
4000b8c8:	e592100c 	ldr	r1, [r2, #12]
4000b8cc:	e5801050 	str	r1, [r0, #80]	; 0x50
4000b8d0:	eaffffef 	b	4000b894 <ArtNetNode::HandlePoll()+0xe4>
4000b8d4:	e30a273c 	movw	r2, #42812	; 0xa73c
4000b8d8:	e3442005 	movt	r2, #16389	; 0x4005
4000b8dc:	e592100c 	ldr	r1, [r2, #12]
4000b8e0:	eafffff0 	b	4000b8a8 <ArtNetNode::HandlePoll()+0xf8>

4000b8e4 <ArtNetNode::HandleTimeSync()>:
4000b8e4:	e5903004 	ldr	r3, [r0, #4]
4000b8e8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4000b8ec:	e24dd02c 	sub	sp, sp, #44	; 0x2c
4000b8f0:	e5d3200f 	ldrb	r2, [r3, #15]
4000b8f4:	e28d1004 	add	r1, sp, #4
4000b8f8:	e58d2004 	str	r2, [sp, #4]
4000b8fc:	e5d32010 	ldrb	r2, [r3, #16]
4000b900:	e58d2008 	str	r2, [sp, #8]
4000b904:	e5d32011 	ldrb	r2, [r3, #17]
4000b908:	e58d200c 	str	r2, [sp, #12]
4000b90c:	e5d32012 	ldrb	r2, [r3, #18]
4000b910:	e58d2010 	str	r2, [sp, #16]
4000b914:	e5d32013 	ldrb	r2, [r3, #19]
4000b918:	e58d2014 	str	r2, [sp, #20]
4000b91c:	e5d32014 	ldrb	r2, [r3, #20]
4000b920:	e5d33015 	ldrb	r3, [r3, #21]
4000b924:	e0833402 	add	r3, r3, r2, lsl #8
4000b928:	e58d3018 	str	r3, [sp, #24]
4000b92c:	e59f300c 	ldr	r3, [pc, #12]	; 4000b940 <ArtNetNode::HandleTimeSync()+0x5c>
4000b930:	e5930000 	ldr	r0, [r3]
4000b934:	eb006d23 	bl	40026dc8 <HwClock::Set(tm const*)>
4000b938:	e28dd02c 	add	sp, sp, #44	; 0x2c
4000b93c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4000b940:	40034088 	andmi	r4, r3, r8, lsl #1

4000b944 <ArtNetNode::Print()>:
4000b944:	e59f20b8 	ldr	r2, [pc, #184]	; 4000ba04 <ArtNetNode::Print()+0xc0>
4000b948:	e92d4013 	push	{r0, r1, r4, lr}
4000b94c:	e1a04000 	mov	r4, r0
4000b950:	e5d23001 	ldrb	r3, [r2, #1]
4000b954:	e3a01003 	mov	r1, #3
4000b958:	e5d22000 	ldrb	r2, [r2]
4000b95c:	e59f00a4 	ldr	r0, [pc, #164]	; 4000ba08 <ArtNetNode::Print()+0xc4>
4000b960:	eb00848a 	bl	4002cb90 <printf>
4000b964:	e59f00a0 	ldr	r0, [pc, #160]	; 4000ba0c <ArtNetNode::Print()+0xc8>
4000b968:	e2841e11 	add	r1, r4, #272	; 0x110
4000b96c:	eb008487 	bl	4002cb90 <printf>
4000b970:	e5941048 	ldr	r1, [r4, #72]	; 0x48
4000b974:	e59f0094 	ldr	r0, [pc, #148]	; 4000ba10 <ArtNetNode::Print()+0xcc>
4000b978:	e1a03c21 	lsr	r3, r1, #24
4000b97c:	e7e72451 	ubfx	r2, r1, #8, #8
4000b980:	e58d3000 	str	r3, [sp]
4000b984:	e7e73851 	ubfx	r3, r1, #16, #8
4000b988:	e6ef1071 	uxtb	r1, r1
4000b98c:	eb00847f 	bl	4002cb90 <printf>
4000b990:	e5d430a3 	ldrb	r3, [r4, #163]	; 0xa3
4000b994:	e3530000 	cmp	r3, #0
4000b998:	0a000017 	beq	4000b9fc <ArtNetNode::Print()+0xb8>
4000b99c:	e59f0070 	ldr	r0, [pc, #112]	; 4000ba14 <ArtNetNode::Print()+0xd0>
4000b9a0:	eb00847a 	bl	4002cb90 <printf>
4000b9a4:	e5943028 	ldr	r3, [r4, #40]	; 0x28
4000b9a8:	e1d422b0 	ldrh	r2, [r4, #32]
4000b9ac:	e3530001 	cmp	r3, #1
4000b9b0:	1a000011 	bne	4000b9fc <ArtNetNode::Print()+0xb8>
4000b9b4:	e5d430d0 	ldrb	r3, [r4, #208]	; 0xd0
4000b9b8:	e59f1058 	ldr	r1, [pc, #88]	; 4000ba18 <ArtNetNode::Print()+0xd4>
4000b9bc:	e59f0058 	ldr	r0, [pc, #88]	; 4000ba1c <ArtNetNode::Print()+0xd8>
4000b9c0:	e3130002 	tst	r3, #2
4000b9c4:	e59f3054 	ldr	r3, [pc, #84]	; 4000ba20 <ArtNetNode::Print()+0xdc>
4000b9c8:	01a03001 	moveq	r3, r1
4000b9cc:	e3a01000 	mov	r1, #0
4000b9d0:	eb00846e 	bl	4002cb90 <printf>
4000b9d4:	e1d41dd1 	ldrsb	r1, [r4, #209]	; 0xd1
4000b9d8:	e59f2044 	ldr	r2, [pc, #68]	; 4000ba24 <ArtNetNode::Print()+0xe0>
4000b9dc:	e59f3044 	ldr	r3, [pc, #68]	; 4000ba28 <ArtNetNode::Print()+0xe4>
4000b9e0:	e3510000 	cmp	r1, #0
4000b9e4:	e59f0040 	ldr	r0, [pc, #64]	; 4000ba2c <ArtNetNode::Print()+0xe8>
4000b9e8:	a1a01002 	movge	r1, r2
4000b9ec:	b1a01003 	movlt	r1, r3
4000b9f0:	e28dd008 	add	sp, sp, #8
4000b9f4:	e8bd4010 	pop	{r4, lr}
4000b9f8:	ea008464 	b	4002cb90 <printf>
4000b9fc:	e28dd008 	add	sp, sp, #8
4000ba00:	e8bd8010 	pop	{r4, pc}
4000ba04:	40030b46 	andmi	r0, r3, r6, asr #22
4000ba08:	40030918 	andmi	r0, r3, r8, lsl r9
4000ba0c:	4003092b 	andmi	r0, r3, fp, lsr #18
4000ba10:	4003093d 	andmi	r0, r3, sp, lsr r9
4000ba14:	40030958 	andmi	r0, r3, r8, asr r9
4000ba18:	4003090c 	andmi	r0, r3, ip, lsl #18
4000ba1c:	40030961 	andmi	r0, r3, r1, ror #18
4000ba20:	40030910 	andmi	r0, r3, r0, lsl r9
4000ba24:	40030914 	andmi	r0, r3, r4, lsl r9
4000ba28:	4003303a 	andmi	r3, r3, sl, lsr r0
4000ba2c:	40032946 	andmi	r2, r3, r6, asr #18

4000ba30 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]>:
4000ba30:	e1d0c0b6 	ldrh	ip, [r0, #6]
4000ba34:	e92d4037 	push	{r0, r1, r2, r4, r5, lr}
4000ba38:	e1d050b4 	ldrh	r5, [r0, #4]
4000ba3c:	e15c0005 	cmp	ip, r5
4000ba40:	2a000017 	bcs	4000baa4 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]+0x74>
4000ba44:	e045500c 	sub	r5, r5, ip
4000ba48:	e1a04000 	mov	r4, r0
4000ba4c:	e5900000 	ldr	r0, [r0]
4000ba50:	e3530000 	cmp	r3, #0
4000ba54:	e080000c 	add	r0, r0, ip
4000ba58:	e5d4c008 	ldrb	ip, [r4, #8]
4000ba5c:	1a000005 	bne	4000ba78 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]+0x48>
4000ba60:	e35c0000 	cmp	ip, #0
4000ba64:	1a000005 	bne	4000ba80 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]+0x50>
4000ba68:	e58d2000 	str	r2, [sp]
4000ba6c:	e1a03001 	mov	r3, r1
4000ba70:	e59f2044 	ldr	r2, [pc, #68]	; 4000babc <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]+0x8c>
4000ba74:	ea000004 	b	4000ba8c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]+0x5c>
4000ba78:	e35c0000 	cmp	ip, #0
4000ba7c:	0a00000a 	beq	4000baac <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]+0x7c>
4000ba80:	e58d2000 	str	r2, [sp]
4000ba84:	e1a03001 	mov	r3, r1
4000ba88:	e59f2030 	ldr	r2, [pc, #48]	; 4000bac0 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]+0x90>
4000ba8c:	e1a01005 	mov	r1, r5
4000ba90:	eb00845b 	bl	4002cc04 <snprintf>
4000ba94:	e1550000 	cmp	r5, r0
4000ba98:	a1d430b6 	ldrhge	r3, [r4, #6]
4000ba9c:	a0830000 	addge	r0, r3, r0
4000baa0:	a1c400b6 	strhge	r0, [r4, #6]
4000baa4:	e28dd00c 	add	sp, sp, #12
4000baa8:	e8bd8030 	pop	{r4, r5, pc}
4000baac:	e58d2000 	str	r2, [sp]
4000bab0:	e1a03001 	mov	r3, r1
4000bab4:	e59f2008 	ldr	r2, [pc, #8]	; 4000bac4 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]+0x94>
4000bab8:	eafffff3 	b	4000ba8c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]+0x5c>
4000babc:	4002e14e 	andmi	lr, r2, lr, asr #2
4000bac0:	4002e143 	andmi	lr, r2, r3, asr #2
4000bac4:	4002e14f 	andmi	lr, r2, pc, asr #2

4000bac8 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>:
4000bac8:	e92d4037 	push	{r0, r1, r2, r4, r5, lr}
4000bacc:	e1a03001 	mov	r3, r1
4000bad0:	e1d050b4 	ldrh	r5, [r0, #4]
4000bad4:	e1d010b6 	ldrh	r1, [r0, #6]
4000bad8:	e1510005 	cmp	r1, r5
4000badc:	2a000015 	bcs	4000bb38 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x70>
4000bae0:	e0455001 	sub	r5, r5, r1
4000bae4:	e1a04000 	mov	r4, r0
4000bae8:	e5900000 	ldr	r0, [r0]
4000baec:	e3520000 	cmp	r2, #0
4000baf0:	e0800001 	add	r0, r0, r1
4000baf4:	e5d41008 	ldrb	r1, [r4, #8]
4000baf8:	1a000004 	bne	4000bb10 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x48>
4000bafc:	e3510000 	cmp	r1, #0
4000bb00:	1a000004 	bne	4000bb18 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x50>
4000bb04:	e59f2044 	ldr	r2, [pc, #68]	; 4000bb50 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x88>
4000bb08:	e58d1000 	str	r1, [sp]
4000bb0c:	ea000003 	b	4000bb20 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x58>
4000bb10:	e3510000 	cmp	r1, #0
4000bb14:	0a000009 	beq	4000bb40 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x78>
4000bb18:	e58d2000 	str	r2, [sp]
4000bb1c:	e59f2030 	ldr	r2, [pc, #48]	; 4000bb54 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x8c>
4000bb20:	e1a01005 	mov	r1, r5
4000bb24:	eb008436 	bl	4002cc04 <snprintf>
4000bb28:	e1550000 	cmp	r5, r0
4000bb2c:	a1d430b6 	ldrhge	r3, [r4, #6]
4000bb30:	a0830000 	addge	r0, r3, r0
4000bb34:	a1c400b6 	strhge	r0, [r4, #6]
4000bb38:	e28dd00c 	add	sp, sp, #12
4000bb3c:	e8bd8030 	pop	{r4, r5, pc}
4000bb40:	e3a02001 	mov	r2, #1
4000bb44:	e58d2000 	str	r2, [sp]
4000bb48:	e59f2008 	ldr	r2, [pc, #8]	; 4000bb58 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x90>
4000bb4c:	eafffff3 	b	4000bb20 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x58>
4000bb50:	4002e13b 	andmi	lr, r2, fp, lsr r1
4000bb54:	4002e132 	andmi	lr, r2, r2, lsr r1
4000bb58:	4002e13c 	andmi	lr, r2, ip, lsr r1

4000bb5c <ArtNetParamsStore::Update(artnetparams::Params const*)>:
4000bb5c:	e92d401f 	push	{r0, r1, r2, r3, r4, lr}
4000bb60:	e1a03000 	mov	r3, r0
4000bb64:	e59f0024 	ldr	r0, [pc, #36]	; 4000bb90 <ArtNetParamsStore::Update(artnetparams::Params const*)+0x34>
4000bb68:	e3a02000 	mov	r2, #0
4000bb6c:	e58d2008 	str	r2, [sp, #8]
4000bb70:	e3a010dc 	mov	r1, #220	; 0xdc
4000bb74:	e58d1000 	str	r1, [sp]
4000bb78:	e3a01019 	mov	r1, #25
4000bb7c:	e58d2004 	str	r2, [sp, #4]
4000bb80:	e5900000 	ldr	r0, [r0]
4000bb84:	eb0042f7 	bl	4001c768 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
4000bb88:	e28dd014 	add	sp, sp, #20
4000bb8c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4000bb90:	40034084 	andmi	r4, r3, r4, lsl #1

4000bb94 <ArtNetParamsStore::Copy(artnetparams::Params*)>:
4000bb94:	e92d4007 	push	{r0, r1, r2, lr}
4000bb98:	e1a02000 	mov	r2, r0
4000bb9c:	e3a01001 	mov	r1, #1
4000bba0:	e3a00000 	mov	r0, #0
4000bba4:	e1cd00f0 	strd	r0, [sp]
4000bba8:	e59f0014 	ldr	r0, [pc, #20]	; 4000bbc4 <ArtNetParamsStore::Copy(artnetparams::Params*)+0x30>
4000bbac:	e3a030dc 	mov	r3, #220	; 0xdc
4000bbb0:	e3a01019 	mov	r1, #25
4000bbb4:	e5900000 	ldr	r0, [r0]
4000bbb8:	eb00430c 	bl	4001c7f0 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)>
4000bbbc:	e28dd00c 	add	sp, sp, #12
4000bbc0:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4000bbc4:	40034084 	andmi	r4, r3, r4, lsl #1

4000bbc8 <ArtNetParams::ArtNetParams()>:
4000bbc8:	e59f3070 	ldr	r3, [pc, #112]	; 4000bc40 <ArtNetParams::ArtNetParams()+0x78>
4000bbcc:	e92d4070 	push	{r4, r5, r6, lr}
4000bbd0:	e1a04000 	mov	r4, r0
4000bbd4:	e5930000 	ldr	r0, [r3]
4000bbd8:	e28420dc 	add	r2, r4, #220	; 0xdc
4000bbdc:	e1a03004 	mov	r3, r4
4000bbe0:	e3a05000 	mov	r5, #0
4000bbe4:	e1530002 	cmp	r3, r2
4000bbe8:	14c35001 	strbne	r5, [r3], #1
4000bbec:	1afffffc 	bne	4000bbe4 <ArtNetParams::ArtNetParams()+0x1c>
4000bbf0:	e5c45006 	strb	r5, [r4, #6]
4000bbf4:	e3a03001 	mov	r3, #1
4000bbf8:	e5c43005 	strb	r3, [r4, #5]
4000bbfc:	e3a02002 	mov	r2, #2
4000bc00:	e1d430bd 	ldrh	r3, [r4, #13]
4000bc04:	e2841013 	add	r1, r4, #19
4000bc08:	e5c42007 	strb	r2, [r4, #7]
4000bc0c:	e3a02003 	mov	r2, #3
4000bc10:	e5c42009 	strb	r2, [r4, #9]
4000bc14:	e3833055 	orr	r3, r3, #85	; 0x55
4000bc18:	e5c45008 	strb	r5, [r4, #8]
4000bc1c:	e3a02004 	mov	r2, #4
4000bc20:	e5c4500a 	strb	r5, [r4, #10]
4000bc24:	e5c4200b 	strb	r2, [r4, #11]
4000bc28:	e5c4500c 	strb	r5, [r4, #12]
4000bc2c:	e1c430bd 	strh	r3, [r4, #13]
4000bc30:	ebfff9f3 	bl	4000a404 <ArtNetNode::GetLongNameDefault(char*)>
4000bc34:	e5c45012 	strb	r5, [r4, #18]
4000bc38:	e1a00004 	mov	r0, r4
4000bc3c:	e8bd8070 	pop	{r4, r5, r6, pc}
4000bc40:	400576dc 	ldrdmi	r7, [r5], -ip

4000bc44 <ArtNetParams::Load()>:
4000bc44:	e3a03000 	mov	r3, #0
4000bc48:	e1a02000 	mov	r2, r0
4000bc4c:	e92d4013 	push	{r0, r1, r4, lr}
4000bc50:	e1a04000 	mov	r4, r0
4000bc54:	e5c03000 	strb	r3, [r0]
4000bc58:	e5c03001 	strb	r3, [r0, #1]
4000bc5c:	e5c03002 	strb	r3, [r0, #2]
4000bc60:	e5c03003 	strb	r3, [r0, #3]
4000bc64:	e1a0000d 	mov	r0, sp
4000bc68:	e59f1038 	ldr	r1, [pc, #56]	; 4000bca8 <ArtNetParams::Load()+0x64>
4000bc6c:	eb0065de 	bl	400253ec <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
4000bc70:	e59f1034 	ldr	r1, [pc, #52]	; 4000bcac <ArtNetParams::Load()+0x68>
4000bc74:	e1a0000d 	mov	r0, sp
4000bc78:	eb0065de 	bl	400253f8 <ReadConfigFile::Read(char const*)>
4000bc7c:	e3500000 	cmp	r0, #0
4000bc80:	e1a00004 	mov	r0, r4
4000bc84:	0a000005 	beq	4000bca0 <ArtNetParams::Load()+0x5c>
4000bc88:	ebffffb3 	bl	4000bb5c <ArtNetParamsStore::Update(artnetparams::Params const*)>
4000bc8c:	e1a0000d 	mov	r0, sp
4000bc90:	eb0065d7 	bl	400253f4 <ReadConfigFile::~ReadConfigFile()>
4000bc94:	e3a00001 	mov	r0, #1
4000bc98:	e28dd008 	add	sp, sp, #8
4000bc9c:	e8bd8010 	pop	{r4, pc}
4000bca0:	ebffffbb 	bl	4000bb94 <ArtNetParamsStore::Copy(artnetparams::Params*)>
4000bca4:	eafffff8 	b	4000bc8c <ArtNetParams::Load()+0x48>
4000bca8:	4000c224 	andmi	ip, r0, r4, lsr #4
4000bcac:	40030b37 	andmi	r0, r3, r7, lsr fp

4000bcb0 <ArtNetParams::Load(char const*, unsigned long)>:
4000bcb0:	e3a03000 	mov	r3, #0
4000bcb4:	e92d4073 	push	{r0, r1, r4, r5, r6, lr}
4000bcb8:	e1a04000 	mov	r4, r0
4000bcbc:	e5c03000 	strb	r3, [r0]
4000bcc0:	e1a05001 	mov	r5, r1
4000bcc4:	e5c03001 	strb	r3, [r0, #1]
4000bcc8:	e1a06002 	mov	r6, r2
4000bccc:	e5c03002 	strb	r3, [r0, #2]
4000bcd0:	e1a02000 	mov	r2, r0
4000bcd4:	e5c03003 	strb	r3, [r0, #3]
4000bcd8:	e1a0000d 	mov	r0, sp
4000bcdc:	e59f1028 	ldr	r1, [pc, #40]	; 4000bd0c <ArtNetParams::Load(char const*, unsigned long)+0x5c>
4000bce0:	eb0065c1 	bl	400253ec <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
4000bce4:	e1a02006 	mov	r2, r6
4000bce8:	e1a01005 	mov	r1, r5
4000bcec:	e1a0000d 	mov	r0, sp
4000bcf0:	eb0065ea 	bl	400254a0 <ReadConfigFile::Read(char const*, unsigned int)>
4000bcf4:	e1a00004 	mov	r0, r4
4000bcf8:	ebffff97 	bl	4000bb5c <ArtNetParamsStore::Update(artnetparams::Params const*)>
4000bcfc:	e1a0000d 	mov	r0, sp
4000bd00:	eb0065bb 	bl	400253f4 <ReadConfigFile::~ReadConfigFile()>
4000bd04:	e28dd008 	add	sp, sp, #8
4000bd08:	e8bd8070 	pop	{r4, r5, r6, pc}
4000bd0c:	4000c224 	andmi	ip, r0, r4, lsr #4

4000bd10 <ArtNetParams::SetBool(unsigned char, unsigned long)>:
4000bd10:	e5903000 	ldr	r3, [r0]
4000bd14:	e3510000 	cmp	r1, #0
4000bd18:	11833002 	orrne	r3, r3, r2
4000bd1c:	01c33002 	biceq	r3, r3, r2
4000bd20:	e5803000 	str	r3, [r0]
4000bd24:	e12fff1e 	bx	lr

4000bd28 <ArtNetParams::callbackFunction(char const*)>:
4000bd28:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000bd2c:	e1a04000 	mov	r4, r0
4000bd30:	e59fa4b0 	ldr	sl, [pc, #1200]	; 4000c1e8 <ArtNetParams::callbackFunction(char const*)+0x4c0>
4000bd34:	e24dd04c 	sub	sp, sp, #76	; 0x4c
4000bd38:	e1a06001 	mov	r6, r1
4000bd3c:	e2807053 	add	r7, r0, #83	; 0x53
4000bd40:	e3a05000 	mov	r5, #0
4000bd44:	e1a0200d 	mov	r2, sp
4000bd48:	e1a0100a 	mov	r1, sl
4000bd4c:	e1a00006 	mov	r0, r6
4000bd50:	eb0066c9 	bl	4002587c <Sscan::Uint16(char const*, char const*, unsigned short&)>
4000bd54:	e3500000 	cmp	r0, #0
4000bd58:	1a00000f 	bne	4000bd9c <ArtNetParams::callbackFunction(char const*)+0x74>
4000bd5c:	e1dd10b0 	ldrh	r1, [sp]
4000bd60:	e3510000 	cmp	r1, #0
4000bd64:	0a00000a 	beq	4000bd94 <ArtNetParams::callbackFunction(char const*)+0x6c>
4000bd68:	e0843085 	add	r3, r4, r5, lsl #1
4000bd6c:	e1c310b5 	strh	r1, [r3, #5]
4000bd70:	e3a03002 	mov	r3, #2
4000bd74:	e5942000 	ldr	r2, [r4]
4000bd78:	e1a03513 	lsl	r3, r3, r5
4000bd7c:	e2855001 	add	r5, r5, #1
4000bd80:	e6ff5075 	uxth	r5, r5
4000bd84:	e1510005 	cmp	r1, r5
4000bd88:	11833002 	orrne	r3, r3, r2
4000bd8c:	01c23003 	biceq	r3, r2, r3
4000bd90:	e5843000 	str	r3, [r4]
4000bd94:	e28dd04c 	add	sp, sp, #76	; 0x4c
4000bd98:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000bd9c:	e59f1448 	ldr	r1, [pc, #1096]	; 4000c1ec <ArtNetParams::callbackFunction(char const*)+0x4c4>
4000bda0:	e3a03007 	mov	r3, #7
4000bda4:	e58d3004 	str	r3, [sp, #4]
4000bda8:	e3a03012 	mov	r3, #18
4000bdac:	e00b0593 	mul	fp, r3, r5
4000bdb0:	e28d2008 	add	r2, sp, #8
4000bdb4:	e28d3004 	add	r3, sp, #4
4000bdb8:	e081100b 	add	r1, r1, fp
4000bdbc:	e1a00006 	mov	r0, r6
4000bdc0:	eb0065e3 	bl	40025554 <Sscan::Char(char const*, char const*, char*, unsigned long&)>
4000bdc4:	e3500000 	cmp	r0, #0
4000bdc8:	1a00003a 	bne	4000beb8 <ArtNetParams::callbackFunction(char const*)+0x190>
4000bdcc:	e5dd3008 	ldrb	r3, [sp, #8]
4000bdd0:	e3833020 	orr	r3, r3, #32
4000bdd4:	e3530069 	cmp	r3, #105	; 0x69
4000bdd8:	1a000018 	bne	4000be40 <ArtNetParams::callbackFunction(char const*)+0x118>
4000bddc:	e5dd3009 	ldrb	r3, [sp, #9]
4000bde0:	e3833020 	orr	r3, r3, #32
4000bde4:	e353006e 	cmp	r3, #110	; 0x6e
4000bde8:	1a000030 	bne	4000beb0 <ArtNetParams::callbackFunction(char const*)+0x188>
4000bdec:	e5dd300a 	ldrb	r3, [sp, #10]
4000bdf0:	e3833020 	orr	r3, r3, #32
4000bdf4:	e3530070 	cmp	r3, #112	; 0x70
4000bdf8:	1a00002c 	bne	4000beb0 <ArtNetParams::callbackFunction(char const*)+0x188>
4000bdfc:	e5dd300b 	ldrb	r3, [sp, #11]
4000be00:	e3833020 	orr	r3, r3, #32
4000be04:	e3530075 	cmp	r3, #117	; 0x75
4000be08:	1a000028 	bne	4000beb0 <ArtNetParams::callbackFunction(char const*)+0x188>
4000be0c:	e5dd300c 	ldrb	r3, [sp, #12]
4000be10:	e3833020 	orr	r3, r3, #32
4000be14:	e2533074 	subs	r3, r3, #116	; 0x74
4000be18:	13a03001 	movne	r3, #1
4000be1c:	e1a05085 	lsl	r5, r5, #1
4000be20:	e3a02003 	mov	r2, #3
4000be24:	e1d410bd 	ldrh	r1, [r4, #13]
4000be28:	e3530002 	cmp	r3, #2
4000be2c:	13a03001 	movne	r3, #1
4000be30:	e1c12512 	bic	r2, r1, r2, lsl r5
4000be34:	e1822513 	orr	r2, r2, r3, lsl r5
4000be38:	e1c420bd 	strh	r2, [r4, #13]
4000be3c:	eaffffd4 	b	4000bd94 <ArtNetParams::callbackFunction(char const*)+0x6c>
4000be40:	e3530064 	cmp	r3, #100	; 0x64
4000be44:	1a000019 	bne	4000beb0 <ArtNetParams::callbackFunction(char const*)+0x188>
4000be48:	e5dd3009 	ldrb	r3, [sp, #9]
4000be4c:	e3833020 	orr	r3, r3, #32
4000be50:	e3530069 	cmp	r3, #105	; 0x69
4000be54:	1a000015 	bne	4000beb0 <ArtNetParams::callbackFunction(char const*)+0x188>
4000be58:	e5dd300a 	ldrb	r3, [sp, #10]
4000be5c:	e3833020 	orr	r3, r3, #32
4000be60:	e3530073 	cmp	r3, #115	; 0x73
4000be64:	1a000011 	bne	4000beb0 <ArtNetParams::callbackFunction(char const*)+0x188>
4000be68:	e5dd300b 	ldrb	r3, [sp, #11]
4000be6c:	e3833020 	orr	r3, r3, #32
4000be70:	e3530061 	cmp	r3, #97	; 0x61
4000be74:	1a00000d 	bne	4000beb0 <ArtNetParams::callbackFunction(char const*)+0x188>
4000be78:	e5dd300c 	ldrb	r3, [sp, #12]
4000be7c:	e3833020 	orr	r3, r3, #32
4000be80:	e3530062 	cmp	r3, #98	; 0x62
4000be84:	1a000009 	bne	4000beb0 <ArtNetParams::callbackFunction(char const*)+0x188>
4000be88:	e5dd300d 	ldrb	r3, [sp, #13]
4000be8c:	e3833020 	orr	r3, r3, #32
4000be90:	e353006c 	cmp	r3, #108	; 0x6c
4000be94:	1a000005 	bne	4000beb0 <ArtNetParams::callbackFunction(char const*)+0x188>
4000be98:	e5dd300e 	ldrb	r3, [sp, #14]
4000be9c:	e3833020 	orr	r3, r3, #32
4000bea0:	e3530065 	cmp	r3, #101	; 0x65
4000bea4:	13a03001 	movne	r3, #1
4000bea8:	03a03002 	moveq	r3, #2
4000beac:	eaffffda 	b	4000be1c <ArtNetParams::callbackFunction(char const*)+0xf4>
4000beb0:	e3a03001 	mov	r3, #1
4000beb4:	eaffffd8 	b	4000be1c <ArtNetParams::callbackFunction(char const*)+0xf4>
4000beb8:	e59f1330 	ldr	r1, [pc, #816]	; 4000c1f0 <ArtNetParams::callbackFunction(char const*)+0x4c8>
4000bebc:	e3a09003 	mov	r9, #3
4000bec0:	e58d9004 	str	r9, [sp, #4]
4000bec4:	e28d3004 	add	r3, sp, #4
4000bec8:	e081100b 	add	r1, r1, fp
4000becc:	e28d2008 	add	r2, sp, #8
4000bed0:	e1a00006 	mov	r0, r6
4000bed4:	eb00659e 	bl	40025554 <Sscan::Char(char const*, char const*, char*, unsigned long&)>
4000bed8:	e3500000 	cmp	r0, #0
4000bedc:	1a000012 	bne	4000bf2c <ArtNetParams::callbackFunction(char const*)+0x204>
4000bee0:	e1d430bf 	ldrh	r3, [r4, #15]
4000bee4:	e1a05085 	lsl	r5, r5, #1
4000bee8:	e1c39519 	bic	r9, r3, r9, lsl r5
4000beec:	e5dd3008 	ldrb	r3, [sp, #8]
4000bef0:	e3833020 	orr	r3, r3, #32
4000bef4:	e353006c 	cmp	r3, #108	; 0x6c
4000bef8:	1a000008 	bne	4000bf20 <ArtNetParams::callbackFunction(char const*)+0x1f8>
4000befc:	e5dd3009 	ldrb	r3, [sp, #9]
4000bf00:	e3833020 	orr	r3, r3, #32
4000bf04:	e3530074 	cmp	r3, #116	; 0x74
4000bf08:	1a000004 	bne	4000bf20 <ArtNetParams::callbackFunction(char const*)+0x1f8>
4000bf0c:	e5dd000a 	ldrb	r0, [sp, #10]
4000bf10:	e3800020 	orr	r0, r0, #32
4000bf14:	e2400070 	sub	r0, r0, #112	; 0x70
4000bf18:	e16f0f10 	clz	r0, r0
4000bf1c:	e1a002a0 	lsr	r0, r0, #5
4000bf20:	e1890510 	orr	r0, r9, r0, lsl r5
4000bf24:	e1c400bf 	strh	r0, [r4, #15]
4000bf28:	eaffff99 	b	4000bd94 <ArtNetParams::callbackFunction(char const*)+0x6c>
4000bf2c:	e59f02c0 	ldr	r0, [pc, #704]	; 4000c1f4 <ArtNetParams::callbackFunction(char const*)+0x4cc>
4000bf30:	e3a03011 	mov	r3, #17
4000bf34:	e58d3004 	str	r3, [sp, #4]
4000bf38:	e3a0100e 	mov	r1, #14
4000bf3c:	e0210591 	mla	r1, r1, r5, r0
4000bf40:	e28d3004 	add	r3, sp, #4
4000bf44:	e1a02007 	mov	r2, r7
4000bf48:	e1a00006 	mov	r0, r6
4000bf4c:	e2858001 	add	r8, r5, #1
4000bf50:	eb00657f 	bl	40025554 <Sscan::Char(char const*, char const*, char*, unsigned long&)>
4000bf54:	e3500000 	cmp	r0, #0
4000bf58:	1a000019 	bne	4000bfc4 <ArtNetParams::callbackFunction(char const*)+0x29c>
4000bf5c:	e59d2004 	ldr	r2, [sp, #4]
4000bf60:	e3a01011 	mov	r1, #17
4000bf64:	e084300b 	add	r3, r4, fp
4000bf68:	e2477001 	sub	r7, r7, #1
4000bf6c:	e0833002 	add	r3, r3, r2
4000bf70:	e59f2280 	ldr	r2, [pc, #640]	; 4000c1f8 <ArtNetParams::callbackFunction(char const*)+0x4d0>
4000bf74:	e5c30053 	strb	r0, [r3, #83]	; 0x53
4000bf78:	e1a03008 	mov	r3, r8
4000bf7c:	e28d0008 	add	r0, sp, #8
4000bf80:	eb00831f 	bl	4002cc04 <snprintf>
4000bf84:	e28d2008 	add	r2, sp, #8
4000bf88:	e5f73001 	ldrb	r3, [r7, #1]!
4000bf8c:	e4d21001 	ldrb	r1, [r2], #1
4000bf90:	e1530001 	cmp	r3, r1
4000bf94:	1a000005 	bne	4000bfb0 <ArtNetParams::callbackFunction(char const*)+0x288>
4000bf98:	e3530000 	cmp	r3, #0
4000bf9c:	1afffff9 	bne	4000bf88 <ArtNetParams::callbackFunction(char const*)+0x260>
4000bfa0:	e5943000 	ldr	r3, [r4]
4000bfa4:	e3a02080 	mov	r2, #128	; 0x80
4000bfa8:	e1c35512 	bic	r5, r3, r2, lsl r5
4000bfac:	ea000002 	b	4000bfbc <ArtNetParams::callbackFunction(char const*)+0x294>
4000bfb0:	e5943000 	ldr	r3, [r4]
4000bfb4:	e3a02080 	mov	r2, #128	; 0x80
4000bfb8:	e1835512 	orr	r5, r3, r2, lsl r5
4000bfbc:	e5845000 	str	r5, [r4]
4000bfc0:	eaffff73 	b	4000bd94 <ArtNetParams::callbackFunction(char const*)+0x6c>
4000bfc4:	e3580004 	cmp	r8, #4
4000bfc8:	e28aa010 	add	sl, sl, #16
4000bfcc:	e2877012 	add	r7, r7, #18
4000bfd0:	11a05008 	movne	r5, r8
4000bfd4:	1affff5a 	bne	4000bd44 <ArtNetParams::callbackFunction(char const*)+0x1c>
4000bfd8:	e59f121c 	ldr	r1, [pc, #540]	; 4000c1fc <ArtNetParams::callbackFunction(char const*)+0x4d4>
4000bfdc:	e3a07008 	mov	r7, #8
4000bfe0:	e08d2007 	add	r2, sp, r7
4000bfe4:	e1a0300d 	mov	r3, sp
4000bfe8:	e58d7000 	str	r7, [sp]
4000bfec:	e1a00006 	mov	r0, r6
4000bff0:	eb006557 	bl	40025554 <Sscan::Char(char const*, char const*, char*, unsigned long&)>
4000bff4:	e3500000 	cmp	r0, #0
4000bff8:	1a000024 	bne	4000c090 <ArtNetParams::callbackFunction(char const*)+0x368>
4000bffc:	e59f11fc 	ldr	r1, [pc, #508]	; 4000c200 <ArtNetParams::callbackFunction(char const*)+0x4d8>
4000c000:	e1a02008 	mov	r2, r8
4000c004:	e08d0007 	add	r0, sp, r7
4000c008:	ebfffbf7 	bl	4000afec <memcmp>
4000c00c:	e5945000 	ldr	r5, [r4]
4000c010:	e3500000 	cmp	r0, #0
4000c014:	0a000011 	beq	4000c060 <ArtNetParams::callbackFunction(char const*)+0x338>
4000c018:	e59f11e4 	ldr	r1, [pc, #484]	; 4000c204 <ArtNetParams::callbackFunction(char const*)+0x4dc>
4000c01c:	e1a02009 	mov	r2, r9
4000c020:	e08d0007 	add	r0, sp, r7
4000c024:	ebfffbf0 	bl	4000afec <memcmp>
4000c028:	e3500000 	cmp	r0, #0
4000c02c:	0a000010 	beq	4000c074 <ArtNetParams::callbackFunction(char const*)+0x34c>
4000c030:	e59f11d0 	ldr	r1, [pc, #464]	; 4000c208 <ArtNetParams::callbackFunction(char const*)+0x4e0>
4000c034:	e3a02002 	mov	r2, #2
4000c038:	e08d0007 	add	r0, sp, r7
4000c03c:	ebfffbea 	bl	4000afec <memcmp>
4000c040:	e3500000 	cmp	r0, #0
4000c044:	0a00000d 	beq	4000c080 <ArtNetParams::callbackFunction(char const*)+0x358>
4000c048:	e59f11bc 	ldr	r1, [pc, #444]	; 4000c20c <ArtNetParams::callbackFunction(char const*)+0x4e4>
4000c04c:	e1a02007 	mov	r2, r7
4000c050:	e08d0007 	add	r0, sp, r7
4000c054:	ebfffbe4 	bl	4000afec <memcmp>
4000c058:	e3500000 	cmp	r0, #0
4000c05c:	0a000009 	beq	4000c088 <ArtNetParams::callbackFunction(char const*)+0x360>
4000c060:	e3c55020 	bic	r5, r5, #32
4000c064:	e3a03000 	mov	r3, #0
4000c068:	e5845000 	str	r5, [r4]
4000c06c:	e5c43012 	strb	r3, [r4, #18]
4000c070:	eaffff47 	b	4000bd94 <ArtNetParams::callbackFunction(char const*)+0x6c>
4000c074:	e3a03001 	mov	r3, #1
4000c078:	e3855020 	orr	r5, r5, #32
4000c07c:	eafffff9 	b	4000c068 <ArtNetParams::callbackFunction(char const*)+0x340>
4000c080:	e3a03002 	mov	r3, #2
4000c084:	eafffffb 	b	4000c078 <ArtNetParams::callbackFunction(char const*)+0x350>
4000c088:	e3a03003 	mov	r3, #3
4000c08c:	eafffff9 	b	4000c078 <ArtNetParams::callbackFunction(char const*)+0x350>
4000c090:	e59f1178 	ldr	r1, [pc, #376]	; 4000c210 <ArtNetParams::callbackFunction(char const*)+0x4e8>
4000c094:	e3a0303f 	mov	r3, #63	; 0x3f
4000c098:	e58d3000 	str	r3, [sp]
4000c09c:	e2845013 	add	r5, r4, #19
4000c0a0:	e1a02005 	mov	r2, r5
4000c0a4:	e1a0300d 	mov	r3, sp
4000c0a8:	e1a00006 	mov	r0, r6
4000c0ac:	eb006528 	bl	40025554 <Sscan::Char(char const*, char const*, char*, unsigned long&)>
4000c0b0:	e3500000 	cmp	r0, #0
4000c0b4:	13a05000 	movne	r5, #0
4000c0b8:	159f7154 	ldrne	r7, [pc, #340]	; 4000c214 <ArtNetParams::callbackFunction(char const*)+0x4ec>
4000c0bc:	1a000013 	bne	4000c110 <ArtNetParams::callbackFunction(char const*)+0x3e8>
4000c0c0:	e59d3000 	ldr	r3, [sp]
4000c0c4:	e28d1008 	add	r1, sp, #8
4000c0c8:	e0843003 	add	r3, r4, r3
4000c0cc:	e5c30013 	strb	r0, [r3, #19]
4000c0d0:	e59f3140 	ldr	r3, [pc, #320]	; 4000c218 <ArtNetParams::callbackFunction(char const*)+0x4f0>
4000c0d4:	e5930000 	ldr	r0, [r3]
4000c0d8:	ebfff8c9 	bl	4000a404 <ArtNetNode::GetLongNameDefault(char*)>
4000c0dc:	e28d2008 	add	r2, sp, #8
4000c0e0:	e4d53001 	ldrb	r3, [r5], #1
4000c0e4:	e4d21001 	ldrb	r1, [r2], #1
4000c0e8:	e1530001 	cmp	r3, r1
4000c0ec:	1a000004 	bne	4000c104 <ArtNetParams::callbackFunction(char const*)+0x3dc>
4000c0f0:	e3530000 	cmp	r3, #0
4000c0f4:	1afffff9 	bne	4000c0e0 <ArtNetParams::callbackFunction(char const*)+0x3b8>
4000c0f8:	e5943000 	ldr	r3, [r4]
4000c0fc:	e3c33040 	bic	r3, r3, #64	; 0x40
4000c100:	eaffff22 	b	4000bd90 <ArtNetParams::callbackFunction(char const*)+0x68>
4000c104:	e5943000 	ldr	r3, [r4]
4000c108:	e3833040 	orr	r3, r3, #64	; 0x40
4000c10c:	eaffff1f 	b	4000bd90 <ArtNetParams::callbackFunction(char const*)+0x68>
4000c110:	e58d8004 	str	r8, [sp, #4]
4000c114:	e28d3004 	add	r3, sp, #4
4000c118:	e28d2008 	add	r2, sp, #8
4000c11c:	e1a01007 	mov	r1, r7
4000c120:	e1a00006 	mov	r0, r6
4000c124:	eb00650a 	bl	40025554 <Sscan::Char(char const*, char const*, char*, unsigned long&)>
4000c128:	e3500000 	cmp	r0, #0
4000c12c:	1a000017 	bne	4000c190 <ArtNetParams::callbackFunction(char const*)+0x468>
4000c130:	e1d439bc 	ldrh	r3, [r4, #156]	; 0x9c
4000c134:	e3a02003 	mov	r2, #3
4000c138:	e1a05085 	lsl	r5, r5, #1
4000c13c:	e1c33512 	bic	r3, r3, r2, lsl r5
4000c140:	e5dd2008 	ldrb	r2, [sp, #8]
4000c144:	e3822020 	orr	r2, r2, #32
4000c148:	e3520073 	cmp	r2, #115	; 0x73
4000c14c:	1a00000c 	bne	4000c184 <ArtNetParams::callbackFunction(char const*)+0x45c>
4000c150:	e5dd2009 	ldrb	r2, [sp, #9]
4000c154:	e3822020 	orr	r2, r2, #32
4000c158:	e3520061 	cmp	r2, #97	; 0x61
4000c15c:	1a000008 	bne	4000c184 <ArtNetParams::callbackFunction(char const*)+0x45c>
4000c160:	e5dd200a 	ldrb	r2, [sp, #10]
4000c164:	e3822020 	orr	r2, r2, #32
4000c168:	e3520063 	cmp	r2, #99	; 0x63
4000c16c:	1a000004 	bne	4000c184 <ArtNetParams::callbackFunction(char const*)+0x45c>
4000c170:	e5dd000b 	ldrb	r0, [sp, #11]
4000c174:	e3800020 	orr	r0, r0, #32
4000c178:	e240006e 	sub	r0, r0, #110	; 0x6e
4000c17c:	e16f0f10 	clz	r0, r0
4000c180:	e1a002a0 	lsr	r0, r0, #5
4000c184:	e1835510 	orr	r5, r3, r0, lsl r5
4000c188:	e1c459bc 	strh	r5, [r4, #156]	; 0x9c
4000c18c:	eaffff00 	b	4000bd94 <ArtNetParams::callbackFunction(char const*)+0x6c>
4000c190:	e2855001 	add	r5, r5, #1
4000c194:	e2877010 	add	r7, r7, #16
4000c198:	e3550004 	cmp	r5, #4
4000c19c:	1affffdb 	bne	4000c110 <ArtNetParams::callbackFunction(char const*)+0x3e8>
4000c1a0:	e59f1074 	ldr	r1, [pc, #116]	; 4000c21c <ArtNetParams::callbackFunction(char const*)+0x4f4>
4000c1a4:	e28d2004 	add	r2, sp, #4
4000c1a8:	e1a00006 	mov	r0, r6
4000c1ac:	eb0065ca 	bl	400258dc <Sscan::Uint8(char const*, char const*, unsigned char&)>
4000c1b0:	e3500000 	cmp	r0, #0
4000c1b4:	03a02802 	moveq	r2, #131072	; 0x20000
4000c1b8:	0a000006 	beq	4000c1d8 <ArtNetParams::callbackFunction(char const*)+0x4b0>
4000c1bc:	e59f105c 	ldr	r1, [pc, #92]	; 4000c220 <ArtNetParams::callbackFunction(char const*)+0x4f8>
4000c1c0:	e28d2004 	add	r2, sp, #4
4000c1c4:	e1a00006 	mov	r0, r6
4000c1c8:	eb0065c3 	bl	400258dc <Sscan::Uint8(char const*, char const*, unsigned char&)>
4000c1cc:	e3500000 	cmp	r0, #0
4000c1d0:	1afffeef 	bne	4000bd94 <ArtNetParams::callbackFunction(char const*)+0x6c>
4000c1d4:	e3a02b02 	mov	r2, #2048	; 0x800
4000c1d8:	e5dd1004 	ldrb	r1, [sp, #4]
4000c1dc:	e1a00004 	mov	r0, r4
4000c1e0:	ebfffeca 	bl	4000bd10 <ArtNetParams::SetBool(unsigned char, unsigned long)>
4000c1e4:	eafffeea 	b	4000bd94 <ArtNetParams::callbackFunction(char const*)+0x6c>
4000c1e8:	40030aa9 	andmi	r0, r3, r9, lsr #21
4000c1ec:	40030a19 	andmi	r0, r3, r9, lsl sl
4000c1f0:	40030a61 	andmi	r0, r3, r1, ror #20
4000c1f4:	400309e1 	andmi	r0, r3, r1, ror #19
4000c1f8:	400305ef 	andmi	r0, r3, pc, ror #11
4000c1fc:	400309b8 			; <UNDEFINED> instruction: 0x400309b8
4000c200:	40030975 	andmi	r0, r3, r5, ror r9
4000c204:	4003097a 	andmi	r0, r3, sl, ror r9
4000c208:	40030714 	andmi	r0, r3, r4, lsl r7
4000c20c:	4003097e 	andmi	r0, r3, lr, ror r9
4000c210:	400309d7 	ldrdmi	r0, [r3], -r7
4000c214:	40030af7 	strdmi	r0, [r3], -r7
4000c218:	400576dc 	ldrdmi	r7, [r5], -ip
4000c21c:	40030ae9 	andmi	r0, r3, r9, ror #21
4000c220:	400309c1 	andmi	r0, r3, r1, asr #19

4000c224 <ArtNetParams::staticCallbackFunction(void*, char const*)>:
4000c224:	eafffebf 	b	4000bd28 <ArtNetParams::callbackFunction(char const*)>

4000c228 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)>:
4000c228:	e3510000 	cmp	r1, #0
4000c22c:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
4000c230:	e1a04000 	mov	r4, r0
4000c234:	e24dd01c 	sub	sp, sp, #28
4000c238:	e1a05002 	mov	r5, r2
4000c23c:	e1a06003 	mov	r6, r3
4000c240:	0a000006 	beq	4000c260 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x38>
4000c244:	e1a03000 	mov	r3, r0
4000c248:	e28100dc 	add	r0, r1, #220	; 0xdc
4000c24c:	e1510000 	cmp	r1, r0
4000c250:	0a000003 	beq	4000c264 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x3c>
4000c254:	e4d12001 	ldrb	r2, [r1], #1
4000c258:	e4c32001 	strb	r2, [r3], #1
4000c25c:	eafffffa 	b	4000c24c <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x24>
4000c260:	ebfffe4b 	bl	4000bb94 <ArtNetParamsStore::Copy(artnetparams::Params*)>
4000c264:	e59f12fc 	ldr	r1, [pc, #764]	; 4000c568 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x340>
4000c268:	e1a02005 	mov	r2, r5
4000c26c:	e1a05004 	mov	r5, r4
4000c270:	e1a03006 	mov	r3, r6
4000c274:	e28d000c 	add	r0, sp, #12
4000c278:	eb00631b 	bl	40024eec <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)>
4000c27c:	e4953013 	ldr	r3, [r5], #19
4000c280:	e3130040 	tst	r3, #64	; 0x40
4000c284:	1a000003 	bne	4000c298 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x70>
4000c288:	e59f32dc 	ldr	r3, [pc, #732]	; 4000c56c <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x344>
4000c28c:	e1a01005 	mov	r1, r5
4000c290:	e5930000 	ldr	r0, [r3]
4000c294:	ebfff85a 	bl	4000a404 <ArtNetNode::GetLongNameDefault(char*)>
4000c298:	e5943000 	ldr	r3, [r4]
4000c29c:	e1a02005 	mov	r2, r5
4000c2a0:	e59f12c8 	ldr	r1, [pc, #712]	; 4000c570 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x348>
4000c2a4:	e28d000c 	add	r0, sp, #12
4000c2a8:	e7e03353 	ubfx	r3, r3, #6, #1
4000c2ac:	ebfffddf 	bl	4000ba30 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]>
4000c2b0:	e5d43012 	ldrb	r3, [r4, #18]
4000c2b4:	e3530001 	cmp	r3, #1
4000c2b8:	059f22b4 	ldreq	r2, [pc, #692]	; 4000c574 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x34c>
4000c2bc:	0a000006 	beq	4000c2dc <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0xb4>
4000c2c0:	e3530002 	cmp	r3, #2
4000c2c4:	059f22ac 	ldreq	r2, [pc, #684]	; 4000c578 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x350>
4000c2c8:	0a000003 	beq	4000c2dc <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0xb4>
4000c2cc:	e59f12a8 	ldr	r1, [pc, #680]	; 4000c57c <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x354>
4000c2d0:	e3530003 	cmp	r3, #3
4000c2d4:	e59f22a4 	ldr	r2, [pc, #676]	; 4000c580 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x358>
4000c2d8:	01a02001 	moveq	r2, r1
4000c2dc:	e5943000 	ldr	r3, [r4]
4000c2e0:	e28d000c 	add	r0, sp, #12
4000c2e4:	e59f1298 	ldr	r1, [pc, #664]	; 4000c584 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x35c>
4000c2e8:	e7e032d3 	ubfx	r3, r3, #5, #1
4000c2ec:	e59f6294 	ldr	r6, [pc, #660]	; 4000c588 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x360>
4000c2f0:	ebfffdce 	bl	4000ba30 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]>
4000c2f4:	e59f7290 	ldr	r7, [pc, #656]	; 4000c58c <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x364>
4000c2f8:	e3a03000 	mov	r3, #0
4000c2fc:	e5962000 	ldr	r2, [r6]
4000c300:	e1520003 	cmp	r2, r3
4000c304:	93833001 	orrls	r3, r3, #1
4000c308:	e3530000 	cmp	r3, #0
4000c30c:	1a000043 	bne	4000c420 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x1f8>
4000c310:	e1dd11b2 	ldrh	r1, [sp, #18]
4000c314:	e1dd51b0 	ldrh	r5, [sp, #16]
4000c318:	e1510005 	cmp	r1, r5
4000c31c:	2a000018 	bcs	4000c384 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x15c>
4000c320:	e59d000c 	ldr	r0, [sp, #12]
4000c324:	e0455001 	sub	r5, r5, r1
4000c328:	e0800001 	add	r0, r0, r1
4000c32c:	e5941000 	ldr	r1, [r4]
4000c330:	e5dd2014 	ldrb	r2, [sp, #20]
4000c334:	e1d430b5 	ldrh	r3, [r4, #5]
4000c338:	e3110002 	tst	r1, #2
4000c33c:	1a000005 	bne	4000c358 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x130>
4000c340:	e3520000 	cmp	r2, #0
4000c344:	1a000005 	bne	4000c360 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x138>
4000c348:	e58d3000 	str	r3, [sp]
4000c34c:	e1a03007 	mov	r3, r7
4000c350:	e59f2238 	ldr	r2, [pc, #568]	; 4000c590 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x368>
4000c354:	ea000004 	b	4000c36c <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x144>
4000c358:	e3520000 	cmp	r2, #0
4000c35c:	0a000026 	beq	4000c3fc <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x1d4>
4000c360:	e58d3000 	str	r3, [sp]
4000c364:	e1a03007 	mov	r3, r7
4000c368:	e59f2224 	ldr	r2, [pc, #548]	; 4000c594 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x36c>
4000c36c:	e1a01005 	mov	r1, r5
4000c370:	eb008223 	bl	4002cc04 <snprintf>
4000c374:	e1550000 	cmp	r5, r0
4000c378:	a1dd31b2 	ldrhge	r3, [sp, #18]
4000c37c:	a0830000 	addge	r0, r3, r0
4000c380:	a1cd01b2 	strhge	r0, [sp, #18]
4000c384:	e1d430bd 	ldrh	r3, [r4, #13]
4000c388:	e2133003 	ands	r3, r3, #3
4000c38c:	059f2204 	ldreq	r2, [pc, #516]	; 4000c598 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x370>
4000c390:	0a000003 	beq	4000c3a4 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x17c>
4000c394:	e59f1200 	ldr	r1, [pc, #512]	; 4000c59c <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x374>
4000c398:	e3530002 	cmp	r3, #2
4000c39c:	e59f21fc 	ldr	r2, [pc, #508]	; 4000c5a0 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x378>
4000c3a0:	01a02001 	moveq	r2, r1
4000c3a4:	e2533001 	subs	r3, r3, #1
4000c3a8:	e28d000c 	add	r0, sp, #12
4000c3ac:	e59f11f0 	ldr	r1, [pc, #496]	; 4000c5a4 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x37c>
4000c3b0:	13a03001 	movne	r3, #1
4000c3b4:	ebfffd9d 	bl	4000ba30 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]>
4000c3b8:	e1a02004 	mov	r2, r4
4000c3bc:	e4923053 	ldr	r3, [r2], #83	; 0x53
4000c3c0:	e2033080 	and	r3, r3, #128	; 0x80
4000c3c4:	e3530000 	cmp	r3, #0
4000c3c8:	13a03001 	movne	r3, #1
4000c3cc:	03a03000 	moveq	r3, #0
4000c3d0:	1a00000d 	bne	4000c40c <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x1e4>
4000c3d4:	e59f1190 	ldr	r1, [pc, #400]	; 4000c56c <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x344>
4000c3d8:	e1a0c002 	mov	ip, r2
4000c3dc:	e5911000 	ldr	r1, [r1]
4000c3e0:	e2810034 	add	r0, r1, #52	; 0x34
4000c3e4:	e2811046 	add	r1, r1, #70	; 0x46
4000c3e8:	e1500001 	cmp	r0, r1
4000c3ec:	0a000006 	beq	4000c40c <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x1e4>
4000c3f0:	e4d0e001 	ldrb	lr, [r0], #1
4000c3f4:	e4cce001 	strb	lr, [ip], #1
4000c3f8:	eafffffa 	b	4000c3e8 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x1c0>
4000c3fc:	e58d3000 	str	r3, [sp]
4000c400:	e1a03007 	mov	r3, r7
4000c404:	e59f219c 	ldr	r2, [pc, #412]	; 4000c5a8 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x380>
4000c408:	eaffffd7 	b	4000c36c <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x144>
4000c40c:	e59f1198 	ldr	r1, [pc, #408]	; 4000c5ac <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x384>
4000c410:	e28d000c 	add	r0, sp, #12
4000c414:	ebfffd85 	bl	4000ba30 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]>
4000c418:	e3a03001 	mov	r3, #1
4000c41c:	eaffffb6 	b	4000c2fc <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0xd4>
4000c420:	e59f1188 	ldr	r1, [pc, #392]	; 4000c5b0 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x388>
4000c424:	e28d000c 	add	r0, sp, #12
4000c428:	e59f9184 	ldr	r9, [pc, #388]	; 4000c5b4 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x38c>
4000c42c:	e3a05000 	mov	r5, #0
4000c430:	e59f8180 	ldr	r8, [pc, #384]	; 4000c5b8 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x390>
4000c434:	eb006343 	bl	40025148 <PropertiesBuilder::AddComment(char const*)>
4000c438:	e59f717c 	ldr	r7, [pc, #380]	; 4000c5bc <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x394>
4000c43c:	e5963000 	ldr	r3, [r6]
4000c440:	e1530005 	cmp	r3, r5
4000c444:	9a00000e 	bls	4000c484 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x25c>
4000c448:	e1a02085 	lsl	r2, r5, #1
4000c44c:	e1a01009 	mov	r1, r9
4000c450:	e1d430bf 	ldrh	r3, [r4, #15]
4000c454:	e28d000c 	add	r0, sp, #12
4000c458:	e2855001 	add	r5, r5, #1
4000c45c:	e2899012 	add	r9, r9, #18
4000c460:	e1a03253 	asr	r3, r3, r2
4000c464:	e2033003 	and	r3, r3, #3
4000c468:	e3530000 	cmp	r3, #0
4000c46c:	13a03001 	movne	r3, #1
4000c470:	03a03000 	moveq	r3, #0
4000c474:	01a02008 	moveq	r2, r8
4000c478:	11a02007 	movne	r2, r7
4000c47c:	ebfffd6b 	bl	4000ba30 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]>
4000c480:	eaffffed 	b	4000c43c <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x214>
4000c484:	e59f1134 	ldr	r1, [pc, #308]	; 4000c5c0 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x398>
4000c488:	e28d000c 	add	r0, sp, #12
4000c48c:	e59f9130 	ldr	r9, [pc, #304]	; 4000c5c4 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x39c>
4000c490:	e3a05000 	mov	r5, #0
4000c494:	e59f812c 	ldr	r8, [pc, #300]	; 4000c5c8 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x3a0>
4000c498:	eb00632a 	bl	40025148 <PropertiesBuilder::AddComment(char const*)>
4000c49c:	e59f7128 	ldr	r7, [pc, #296]	; 4000c5cc <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x3a4>
4000c4a0:	e5963000 	ldr	r3, [r6]
4000c4a4:	e1530005 	cmp	r3, r5
4000c4a8:	9a00000e 	bls	4000c4e8 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x2c0>
4000c4ac:	e1a02085 	lsl	r2, r5, #1
4000c4b0:	e1a01009 	mov	r1, r9
4000c4b4:	e1d439bc 	ldrh	r3, [r4, #156]	; 0x9c
4000c4b8:	e28d000c 	add	r0, sp, #12
4000c4bc:	e2855001 	add	r5, r5, #1
4000c4c0:	e2899010 	add	r9, r9, #16
4000c4c4:	e1a03253 	asr	r3, r3, r2
4000c4c8:	e2033003 	and	r3, r3, #3
4000c4cc:	e3530000 	cmp	r3, #0
4000c4d0:	13a03001 	movne	r3, #1
4000c4d4:	03a03000 	moveq	r3, #0
4000c4d8:	01a02008 	moveq	r2, r8
4000c4dc:	11a02007 	movne	r2, r7
4000c4e0:	ebfffd52 	bl	4000ba30 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]>
4000c4e4:	eaffffed 	b	4000c4a0 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x278>
4000c4e8:	e5942000 	ldr	r2, [r4]
4000c4ec:	e28d000c 	add	r0, sp, #12
4000c4f0:	e59f10d8 	ldr	r1, [pc, #216]	; 4000c5d0 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x3a8>
4000c4f4:	e7e028d2 	ubfx	r2, r2, #17, #1
4000c4f8:	ebfffd72 	bl	4000bac8 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
4000c4fc:	e59f10d0 	ldr	r1, [pc, #208]	; 4000c5d4 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x3ac>
4000c500:	e28d000c 	add	r0, sp, #12
4000c504:	eb00630f 	bl	40025148 <PropertiesBuilder::AddComment(char const*)>
4000c508:	e5942000 	ldr	r2, [r4]
4000c50c:	e28d000c 	add	r0, sp, #12
4000c510:	e59f10c0 	ldr	r1, [pc, #192]	; 4000c5d8 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x3b0>
4000c514:	e7e025d2 	ubfx	r2, r2, #11, #1
4000c518:	ebfffd6a 	bl	4000bac8 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
4000c51c:	e5dd3014 	ldrb	r3, [sp, #20]
4000c520:	e3530000 	cmp	r3, #0
4000c524:	0a00000a 	beq	4000c554 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x32c>
4000c528:	e1dd21b2 	ldrh	r2, [sp, #18]
4000c52c:	e59d300c 	ldr	r3, [sp, #12]
4000c530:	e0833002 	add	r3, r3, r2
4000c534:	e3a0207d 	mov	r2, #125	; 0x7d
4000c538:	e5432001 	strb	r2, [r3, #-1]
4000c53c:	e59d100c 	ldr	r1, [sp, #12]
4000c540:	e1dd31b2 	ldrh	r3, [sp, #18]
4000c544:	e7c12003 	strb	r2, [r1, r3]
4000c548:	e1dd31b2 	ldrh	r3, [sp, #18]
4000c54c:	e2833001 	add	r3, r3, #1
4000c550:	e1cd31b2 	strh	r3, [sp, #18]
4000c554:	e1dd21b2 	ldrh	r2, [sp, #18]
4000c558:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
4000c55c:	e5832000 	str	r2, [r3]
4000c560:	e28dd01c 	add	sp, sp, #28
4000c564:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
4000c568:	40030b37 	andmi	r0, r3, r7, lsr fp
4000c56c:	400576dc 	ldrdmi	r7, [r5], -ip
4000c570:	400309d7 	ldrdmi	r0, [r3], -r7
4000c574:	4003097a 	andmi	r0, r3, sl, ror r9
4000c578:	40030714 	andmi	r0, r3, r4, lsl r7
4000c57c:	4003097e 	andmi	r0, r3, lr, ror r9
4000c580:	40030975 	andmi	r0, r3, r5, ror r9
4000c584:	400309b8 			; <UNDEFINED> instruction: 0x400309b8
4000c588:	400576e8 	andmi	r7, r5, r8, ror #13
4000c58c:	40030aa9 	andmi	r0, r3, r9, lsr #21
4000c590:	4002e13b 	andmi	lr, r2, fp, lsr r1
4000c594:	4002e132 	andmi	lr, r2, r2, lsr r1
4000c598:	40030f0d 	andmi	r0, r3, sp, lsl #30
4000c59c:	40030987 	andmi	r0, r3, r7, lsl #19
4000c5a0:	40031030 	andmi	r1, r3, r0, lsr r0
4000c5a4:	40030a19 	andmi	r0, r3, r9, lsl sl
4000c5a8:	4002e13c 	andmi	lr, r2, ip, lsr r1
4000c5ac:	400309e1 	andmi	r0, r3, r1, ror #19
4000c5b0:	400309a3 	andmi	r0, r3, r3, lsr #19
4000c5b4:	40030a61 	andmi	r0, r3, r1, ror #20
4000c5b8:	4003098f 	andmi	r0, r3, pc, lsl #19
4000c5bc:	40030993 	mulmi	r3, r3, r9
4000c5c0:	400309ae 	andmi	r0, r3, lr, lsr #19
4000c5c4:	40030af7 	strdmi	r0, [r3], -r7
4000c5c8:	40030997 	mulmi	r3, r7, r9
4000c5cc:	4003099e 	mulmi	r3, lr, r9
4000c5d0:	40030ae9 	andmi	r0, r3, r9, ror #21
4000c5d4:	4002df03 	andmi	sp, r2, r3, lsl #30
4000c5d8:	400309c1 	andmi	r0, r3, r1, asr #19

4000c5dc <ArtNetParams::Set()>:
4000c5dc:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000c5e0:	e3a03001 	mov	r3, #1
4000c5e4:	e59f60a4 	ldr	r6, [pc, #164]	; 4000c690 <ArtNetParams::Set()+0xb4>
4000c5e8:	e1a04000 	mov	r4, r0
4000c5ec:	e5863000 	str	r3, [r6]
4000c5f0:	e59f309c 	ldr	r3, [pc, #156]	; 4000c694 <ArtNetParams::Set()+0xb8>
4000c5f4:	e5935000 	ldr	r5, [r3]
4000c5f8:	e5903000 	ldr	r3, [r0]
4000c5fc:	e3130040 	tst	r3, #64	; 0x40
4000c600:	0a000002 	beq	4000c610 <ArtNetParams::Set()+0x34>
4000c604:	e2801013 	add	r1, r0, #19
4000c608:	e1a00005 	mov	r0, r5
4000c60c:	ebfff794 	bl	4000a464 <ArtNetNode::SetLongName(char const*)>
4000c610:	e3a01000 	mov	r1, #0
4000c614:	e2847053 	add	r7, r4, #83	; 0x53
4000c618:	e5963000 	ldr	r3, [r6]
4000c61c:	e1530001 	cmp	r3, r1
4000c620:	93811001 	orrls	r1, r1, #1
4000c624:	e3510000 	cmp	r1, #0
4000c628:	1a00000c 	bne	4000c660 <ArtNetParams::Set()+0x84>
4000c62c:	e5942000 	ldr	r2, [r4]
4000c630:	e1a00005 	mov	r0, r5
4000c634:	e2122080 	ands	r2, r2, #128	; 0x80
4000c638:	01a01002 	moveq	r1, r2
4000c63c:	11a02007 	movne	r2, r7
4000c640:	ebfff745 	bl	4000a35c <ArtNetNode::SetShortName(unsigned long, char const*)>
4000c644:	e1d420bf 	ldrh	r2, [r4, #15]
4000c648:	e3a01000 	mov	r1, #0
4000c64c:	e1a00005 	mov	r0, r5
4000c650:	e2022003 	and	r2, r2, #3
4000c654:	ebfff93f 	bl	4000ab58 <ArtNetNode::SetMergeMode(unsigned long, lightset::MergeMode)>
4000c658:	e3a01001 	mov	r1, #1
4000c65c:	eaffffed 	b	4000c618 <ArtNetParams::Set()+0x3c>
4000c660:	e5d41012 	ldrb	r1, [r4, #18]
4000c664:	e1a00005 	mov	r0, r5
4000c668:	e3510003 	cmp	r1, #3
4000c66c:	92811008 	addls	r1, r1, #8
4000c670:	83a01008 	movhi	r1, #8
4000c674:	96ef1071 	uxtbls	r1, r1
4000c678:	ebfff969 	bl	4000ac24 <ArtNetNode::SetFailSafe(artnetnode::FailSafe)>
4000c67c:	e5943000 	ldr	r3, [r4]
4000c680:	e3130b02 	tst	r3, #2048	; 0x800
4000c684:	13a03001 	movne	r3, #1
4000c688:	15c530a0 	strbne	r3, [r5, #160]	; 0xa0
4000c68c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000c690:	400576e8 	andmi	r7, r5, r8, ror #13
4000c694:	400576dc 	ldrdmi	r7, [r5], -ip

4000c698 <ltc::itoa(unsigned long, char*)>:
4000c698:	e3500000 	cmp	r0, #0
4000c69c:	1a000003 	bne	4000c6b0 <ltc::itoa(unsigned long, char*)+0x18>
4000c6a0:	e3a03030 	mov	r3, #48	; 0x30
4000c6a4:	e5c13000 	strb	r3, [r1]
4000c6a8:	e5c13001 	strb	r3, [r1, #1]
4000c6ac:	e12fff1e 	bx	lr
4000c6b0:	e3a0200a 	mov	r2, #10
4000c6b4:	e733f210 	udiv	r3, r0, r2
4000c6b8:	e0600392 	mls	r0, r2, r3, r0
4000c6bc:	e283c030 	add	ip, r3, #48	; 0x30
4000c6c0:	e5c1c000 	strb	ip, [r1]
4000c6c4:	e2800030 	add	r0, r0, #48	; 0x30
4000c6c8:	e5c10001 	strb	r0, [r1, #1]
4000c6cc:	e12fff1e 	bx	lr

4000c6d0 <ltc::get_type(ltc::Type)>:
4000c6d0:	e3500004 	cmp	r0, #4
4000c6d4:	93a0200c 	movls	r2, #12
4000c6d8:	959f3008 	ldrls	r3, [pc, #8]	; 4000c6e8 <ltc::get_type(ltc::Type)+0x18>
4000c6dc:	90203092 	mlals	r0, r2, r0, r3
4000c6e0:	859f0004 	ldrhi	r0, [pc, #4]	; 4000c6ec <ltc::get_type(ltc::Type)+0x1c>
4000c6e4:	e12fff1e 	bx	lr
4000c6e8:	40030b4f 	andmi	r0, r3, pc, asr #22
4000c6ec:	40030b7f 	andmi	r0, r3, pc, ror fp

4000c6f0 <ltc::get_type(unsigned char)>:
4000c6f0:	e2400018 	sub	r0, r0, #24
4000c6f4:	e6ef0070 	uxtb	r0, r0
4000c6f8:	e3500006 	cmp	r0, #6
4000c6fc:	959f3008 	ldrls	r3, [pc, #8]	; 4000c70c <ltc::get_type(unsigned char)+0x1c>
4000c700:	97d30000 	ldrbls	r0, [r3, r0]
4000c704:	83a00004 	movhi	r0, #4
4000c708:	e12fff1e 	bx	lr
4000c70c:	40030b48 	andmi	r0, r3, r8, asr #22

4000c710 <ltc::init_timecode(char*)>:
4000c710:	e280100b 	add	r1, r0, #11
4000c714:	e1a03000 	mov	r3, r0
4000c718:	e3a02020 	mov	r2, #32
4000c71c:	e1530001 	cmp	r3, r1
4000c720:	14c32001 	strbne	r2, [r3], #1
4000c724:	1afffffc 	bne	4000c71c <ltc::init_timecode(char*)+0xc>
4000c728:	e3a0303a 	mov	r3, #58	; 0x3a
4000c72c:	e5c03002 	strb	r3, [r0, #2]
4000c730:	e5c03005 	strb	r3, [r0, #5]
4000c734:	e5c03008 	strb	r3, [r0, #8]
4000c738:	e12fff1e 	bx	lr

4000c73c <ltc::init_systemtime(char*)>:
4000c73c:	e280100b 	add	r1, r0, #11
4000c740:	e1a03000 	mov	r3, r0
4000c744:	e3a02020 	mov	r2, #32
4000c748:	e1530001 	cmp	r3, r1
4000c74c:	14c32001 	strbne	r2, [r3], #1
4000c750:	1afffffc 	bne	4000c748 <ltc::init_systemtime(char*)+0xc>
4000c754:	e3a0303a 	mov	r3, #58	; 0x3a
4000c758:	e5c03002 	strb	r3, [r0, #2]
4000c75c:	e5c03005 	strb	r3, [r0, #5]
4000c760:	e12fff1e 	bx	lr

4000c764 <ltc::itoa_base10(ltc::TimeCode const*, char*)>:
4000c764:	e92d4070 	push	{r4, r5, r6, lr}
4000c768:	e1a04000 	mov	r4, r0
4000c76c:	e5d00003 	ldrb	r0, [r0, #3]
4000c770:	e1a05001 	mov	r5, r1
4000c774:	ebffffc7 	bl	4000c698 <ltc::itoa(unsigned long, char*)>
4000c778:	e5d40002 	ldrb	r0, [r4, #2]
4000c77c:	e2811003 	add	r1, r1, #3
4000c780:	ebffffc4 	bl	4000c698 <ltc::itoa(unsigned long, char*)>
4000c784:	e5d40001 	ldrb	r0, [r4, #1]
4000c788:	e2851006 	add	r1, r5, #6
4000c78c:	ebffffc1 	bl	4000c698 <ltc::itoa(unsigned long, char*)>
4000c790:	e5d40000 	ldrb	r0, [r4]
4000c794:	e2851009 	add	r1, r5, #9
4000c798:	e8bd4070 	pop	{r4, r5, r6, lr}
4000c79c:	eaffffbd 	b	4000c698 <ltc::itoa(unsigned long, char*)>

4000c7a0 <ltc::itoa_base10(tm const*, char*)>:
4000c7a0:	e92d4070 	push	{r4, r5, r6, lr}
4000c7a4:	e1a04000 	mov	r4, r0
4000c7a8:	e5900008 	ldr	r0, [r0, #8]
4000c7ac:	e1a05001 	mov	r5, r1
4000c7b0:	ebffffb8 	bl	4000c698 <ltc::itoa(unsigned long, char*)>
4000c7b4:	e5940004 	ldr	r0, [r4, #4]
4000c7b8:	e2811003 	add	r1, r1, #3
4000c7bc:	ebffffb5 	bl	4000c698 <ltc::itoa(unsigned long, char*)>
4000c7c0:	e5940000 	ldr	r0, [r4]
4000c7c4:	e2851006 	add	r1, r5, #6
4000c7c8:	e8bd4070 	pop	{r4, r5, r6, lr}
4000c7cc:	eaffffb1 	b	4000c698 <ltc::itoa(unsigned long, char*)>

4000c7d0 <ltc::parse_timecode(char const*, unsigned char, ltc::TimeCode*)>:
4000c7d0:	e5d03002 	ldrb	r3, [r0, #2]
4000c7d4:	e353003a 	cmp	r3, #58	; 0x3a
4000c7d8:	0a000001 	beq	4000c7e4 <ltc::parse_timecode(char const*, unsigned char, ltc::TimeCode*)+0x14>
4000c7dc:	e3a00000 	mov	r0, #0
4000c7e0:	e12fff1e 	bx	lr
4000c7e4:	e5d03005 	ldrb	r3, [r0, #5]
4000c7e8:	e353003a 	cmp	r3, #58	; 0x3a
4000c7ec:	1afffffa 	bne	4000c7dc <ltc::parse_timecode(char const*, unsigned char, ltc::TimeCode*)+0xc>
4000c7f0:	e5d03008 	ldrb	r3, [r0, #8]
4000c7f4:	e353003a 	cmp	r3, #58	; 0x3a
4000c7f8:	1afffff7 	bne	4000c7dc <ltc::parse_timecode(char const*, unsigned char, ltc::TimeCode*)+0xc>
4000c7fc:	e5d0c009 	ldrb	ip, [r0, #9]
4000c800:	e24cc030 	sub	ip, ip, #48	; 0x30
4000c804:	e35c0003 	cmp	ip, #3
4000c808:	8afffff3 	bhi	4000c7dc <ltc::parse_timecode(char const*, unsigned char, ltc::TimeCode*)+0xc>
4000c80c:	e5d0300a 	ldrb	r3, [r0, #10]
4000c810:	e2433030 	sub	r3, r3, #48	; 0x30
4000c814:	e3530009 	cmp	r3, #9
4000c818:	8affffef 	bhi	4000c7dc <ltc::parse_timecode(char const*, unsigned char, ltc::TimeCode*)+0xc>
4000c81c:	e08cc10c 	add	ip, ip, ip, lsl #2
4000c820:	e083308c 	add	r3, r3, ip, lsl #1
4000c824:	e6ef3073 	uxtb	r3, r3
4000c828:	e1530001 	cmp	r3, r1
4000c82c:	2affffea 	bcs	4000c7dc <ltc::parse_timecode(char const*, unsigned char, ltc::TimeCode*)+0xc>
4000c830:	e5c23000 	strb	r3, [r2]
4000c834:	e5d01006 	ldrb	r1, [r0, #6]
4000c838:	e2411030 	sub	r1, r1, #48	; 0x30
4000c83c:	e3510005 	cmp	r1, #5
4000c840:	8affffe5 	bhi	4000c7dc <ltc::parse_timecode(char const*, unsigned char, ltc::TimeCode*)+0xc>
4000c844:	e5d03007 	ldrb	r3, [r0, #7]
4000c848:	e2433030 	sub	r3, r3, #48	; 0x30
4000c84c:	e3530009 	cmp	r3, #9
4000c850:	8affffe1 	bhi	4000c7dc <ltc::parse_timecode(char const*, unsigned char, ltc::TimeCode*)+0xc>
4000c854:	e0811101 	add	r1, r1, r1, lsl #2
4000c858:	e0833081 	add	r3, r3, r1, lsl #1
4000c85c:	e6ef3073 	uxtb	r3, r3
4000c860:	e353003b 	cmp	r3, #59	; 0x3b
4000c864:	8affffdc 	bhi	4000c7dc <ltc::parse_timecode(char const*, unsigned char, ltc::TimeCode*)+0xc>
4000c868:	e5c23001 	strb	r3, [r2, #1]
4000c86c:	e5d01003 	ldrb	r1, [r0, #3]
4000c870:	e2411030 	sub	r1, r1, #48	; 0x30
4000c874:	e3510005 	cmp	r1, #5
4000c878:	8affffd7 	bhi	4000c7dc <ltc::parse_timecode(char const*, unsigned char, ltc::TimeCode*)+0xc>
4000c87c:	e5d03004 	ldrb	r3, [r0, #4]
4000c880:	e2433030 	sub	r3, r3, #48	; 0x30
4000c884:	e3530009 	cmp	r3, #9
4000c888:	8affffd3 	bhi	4000c7dc <ltc::parse_timecode(char const*, unsigned char, ltc::TimeCode*)+0xc>
4000c88c:	e0811101 	add	r1, r1, r1, lsl #2
4000c890:	e0833081 	add	r3, r3, r1, lsl #1
4000c894:	e6ef3073 	uxtb	r3, r3
4000c898:	e353003b 	cmp	r3, #59	; 0x3b
4000c89c:	8affffce 	bhi	4000c7dc <ltc::parse_timecode(char const*, unsigned char, ltc::TimeCode*)+0xc>
4000c8a0:	e5c23002 	strb	r3, [r2, #2]
4000c8a4:	e5d01000 	ldrb	r1, [r0]
4000c8a8:	e2411030 	sub	r1, r1, #48	; 0x30
4000c8ac:	e3510002 	cmp	r1, #2
4000c8b0:	8affffc9 	bhi	4000c7dc <ltc::parse_timecode(char const*, unsigned char, ltc::TimeCode*)+0xc>
4000c8b4:	e5d03001 	ldrb	r3, [r0, #1]
4000c8b8:	e2433030 	sub	r3, r3, #48	; 0x30
4000c8bc:	e3530009 	cmp	r3, #9
4000c8c0:	8affffc5 	bhi	4000c7dc <ltc::parse_timecode(char const*, unsigned char, ltc::TimeCode*)+0xc>
4000c8c4:	e0811101 	add	r1, r1, r1, lsl #2
4000c8c8:	e0833081 	add	r3, r3, r1, lsl #1
4000c8cc:	e6ef3073 	uxtb	r3, r3
4000c8d0:	e3530017 	cmp	r3, #23
4000c8d4:	8affffc0 	bhi	4000c7dc <ltc::parse_timecode(char const*, unsigned char, ltc::TimeCode*)+0xc>
4000c8d8:	e5c23003 	strb	r3, [r2, #3]
4000c8dc:	e3a00001 	mov	r0, #1
4000c8e0:	e12fff1e 	bx	lr

4000c8e4 <ltc::parse_timecode_rate(char const*, unsigned char&)>:
4000c8e4:	e5d02000 	ldrb	r2, [r0]
4000c8e8:	e2422030 	sub	r2, r2, #48	; 0x30
4000c8ec:	e3520003 	cmp	r2, #3
4000c8f0:	8a000020 	bhi	4000c978 <ltc::parse_timecode_rate(char const*, unsigned char&)+0x94>
4000c8f4:	e5d03001 	ldrb	r3, [r0, #1]
4000c8f8:	e2433030 	sub	r3, r3, #48	; 0x30
4000c8fc:	e3530009 	cmp	r3, #9
4000c900:	8a00001c 	bhi	4000c978 <ltc::parse_timecode_rate(char const*, unsigned char&)+0x94>
4000c904:	e0822102 	add	r2, r2, r2, lsl #2
4000c908:	e0833082 	add	r3, r3, r2, lsl #1
4000c90c:	e6ef3073 	uxtb	r3, r3
4000c910:	e2432018 	sub	r2, r3, #24
4000c914:	e3520006 	cmp	r2, #6
4000c918:	979ff102 	ldrls	pc, [pc, r2, lsl #2]
4000c91c:	ea000015 	b	4000c978 <ltc::parse_timecode_rate(char const*, unsigned char&)+0x94>
4000c920:	4000c93c 	andmi	ip, r0, ip, lsr r9
4000c924:	4000c954 	andmi	ip, r0, r4, asr r9
4000c928:	4000c978 	andmi	ip, r0, r8, ror r9
4000c92c:	4000c978 	andmi	ip, r0, r8, ror r9
4000c930:	4000c978 	andmi	ip, r0, r8, ror r9
4000c934:	4000c960 	andmi	ip, r0, r0, ror #18
4000c938:	4000c96c 	andmi	ip, r0, ip, ror #18
4000c93c:	e59f203c 	ldr	r2, [pc, #60]	; 4000c980 <ltc::parse_timecode_rate(char const*, unsigned char&)+0x9c>
4000c940:	e3a00000 	mov	r0, #0
4000c944:	e5c20000 	strb	r0, [r2]
4000c948:	e3a00001 	mov	r0, #1
4000c94c:	e5c13000 	strb	r3, [r1]
4000c950:	e12fff1e 	bx	lr
4000c954:	e59f2024 	ldr	r2, [pc, #36]	; 4000c980 <ltc::parse_timecode_rate(char const*, unsigned char&)+0x9c>
4000c958:	e3a00001 	mov	r0, #1
4000c95c:	eafffff8 	b	4000c944 <ltc::parse_timecode_rate(char const*, unsigned char&)+0x60>
4000c960:	e59f2018 	ldr	r2, [pc, #24]	; 4000c980 <ltc::parse_timecode_rate(char const*, unsigned char&)+0x9c>
4000c964:	e3a00002 	mov	r0, #2
4000c968:	eafffff5 	b	4000c944 <ltc::parse_timecode_rate(char const*, unsigned char&)+0x60>
4000c96c:	e59f200c 	ldr	r2, [pc, #12]	; 4000c980 <ltc::parse_timecode_rate(char const*, unsigned char&)+0x9c>
4000c970:	e3a00003 	mov	r0, #3
4000c974:	eafffff2 	b	4000c944 <ltc::parse_timecode_rate(char const*, unsigned char&)+0x60>
4000c978:	e3a00000 	mov	r0, #0
4000c97c:	e12fff1e 	bx	lr
4000c980:	400576fc 	strdmi	r7, [r5], -ip

4000c984 <LtcDisplayMax72197Segment::~LtcDisplayMax72197Segment()>:
4000c984:	e12fff1e 	bx	lr

4000c988 <LtcDisplayMax72197Segment::~LtcDisplayMax72197Segment()>:
4000c988:	e92d4010 	push	{r4, lr}
4000c98c:	e3a0100c 	mov	r1, #12
4000c990:	e1a04000 	mov	r4, r0
4000c994:	eb00828e 	bl	4002d3d4 <operator delete(void*, unsigned int)>
4000c998:	e1a00004 	mov	r0, r4
4000c99c:	e8bd8010 	pop	{r4, pc}

4000c9a0 <HAL_SPI::Setup()>:
4000c9a0:	e92d4010 	push	{r4, lr}
4000c9a4:	e1a04000 	mov	r4, r0
4000c9a8:	e5d00004 	ldrb	r0, [r0, #4]
4000c9ac:	eb007bb0 	bl	4002b874 <h3_spi_chipSelect(unsigned char)>
4000c9b0:	e5d40005 	ldrb	r0, [r4, #5]
4000c9b4:	eb007ba6 	bl	4002b854 <h3_spi_setDataMode(unsigned char)>
4000c9b8:	e5940000 	ldr	r0, [r4]
4000c9bc:	e8bd4010 	pop	{r4, lr}
4000c9c0:	ea007b91 	b	4002b80c <h3_spi_set_speed_hz(unsigned long)>

4000c9c4 <MAX7219::WriteRegister(unsigned long, unsigned long, bool)>:
4000c9c4:	e6ef2072 	uxtb	r2, r2
4000c9c8:	e3530000 	cmp	r3, #0
4000c9cc:	e1822401 	orr	r2, r2, r1, lsl #8
4000c9d0:	e92d4010 	push	{r4, lr}
4000c9d4:	e6ff4072 	uxth	r4, r2
4000c9d8:	0a000000 	beq	4000c9e0 <MAX7219::WriteRegister(unsigned long, unsigned long, bool)+0x1c>
4000c9dc:	ebffffef 	bl	4000c9a0 <HAL_SPI::Setup()>
4000c9e0:	e1a00004 	mov	r0, r4
4000c9e4:	e8bd4010 	pop	{r4, lr}
4000c9e8:	ea007bf5 	b	4002b9c4 <h3_spi_write(unsigned short)>

4000c9ec <LtcDisplayMax72197Segment::Show(char const*)>:
4000c9ec:	e92d4070 	push	{r4, r5, r6, lr}
4000c9f0:	e1a05001 	mov	r5, r1
4000c9f4:	e5d12000 	ldrb	r2, [r1]
4000c9f8:	e2804004 	add	r4, r0, #4
4000c9fc:	e1a00004 	mov	r0, r4
4000ca00:	e3a03001 	mov	r3, #1
4000ca04:	e2422030 	sub	r2, r2, #48	; 0x30
4000ca08:	e3a01008 	mov	r1, #8
4000ca0c:	ebffffec 	bl	4000c9c4 <MAX7219::WriteRegister(unsigned long, unsigned long, bool)>
4000ca10:	e5d52001 	ldrb	r2, [r5, #1]
4000ca14:	e1a00004 	mov	r0, r4
4000ca18:	e3a03000 	mov	r3, #0
4000ca1c:	e3a01007 	mov	r1, #7
4000ca20:	e2422030 	sub	r2, r2, #48	; 0x30
4000ca24:	e3822080 	orr	r2, r2, #128	; 0x80
4000ca28:	ebffffe5 	bl	4000c9c4 <MAX7219::WriteRegister(unsigned long, unsigned long, bool)>
4000ca2c:	e5d52003 	ldrb	r2, [r5, #3]
4000ca30:	e1a00004 	mov	r0, r4
4000ca34:	e3a03000 	mov	r3, #0
4000ca38:	e3a01006 	mov	r1, #6
4000ca3c:	e2422030 	sub	r2, r2, #48	; 0x30
4000ca40:	ebffffdf 	bl	4000c9c4 <MAX7219::WriteRegister(unsigned long, unsigned long, bool)>
4000ca44:	e5d52004 	ldrb	r2, [r5, #4]
4000ca48:	e1a00004 	mov	r0, r4
4000ca4c:	e3a03000 	mov	r3, #0
4000ca50:	e3a01005 	mov	r1, #5
4000ca54:	e2422030 	sub	r2, r2, #48	; 0x30
4000ca58:	e3822080 	orr	r2, r2, #128	; 0x80
4000ca5c:	ebffffd8 	bl	4000c9c4 <MAX7219::WriteRegister(unsigned long, unsigned long, bool)>
4000ca60:	e5d52006 	ldrb	r2, [r5, #6]
4000ca64:	e1a00004 	mov	r0, r4
4000ca68:	e3a03000 	mov	r3, #0
4000ca6c:	e3a01004 	mov	r1, #4
4000ca70:	e2422030 	sub	r2, r2, #48	; 0x30
4000ca74:	ebffffd2 	bl	4000c9c4 <MAX7219::WriteRegister(unsigned long, unsigned long, bool)>
4000ca78:	e5d52007 	ldrb	r2, [r5, #7]
4000ca7c:	e1a00004 	mov	r0, r4
4000ca80:	e3a03000 	mov	r3, #0
4000ca84:	e3a01003 	mov	r1, #3
4000ca88:	e2422030 	sub	r2, r2, #48	; 0x30
4000ca8c:	e3822080 	orr	r2, r2, #128	; 0x80
4000ca90:	ebffffcb 	bl	4000c9c4 <MAX7219::WriteRegister(unsigned long, unsigned long, bool)>
4000ca94:	e5d52009 	ldrb	r2, [r5, #9]
4000ca98:	e1a00004 	mov	r0, r4
4000ca9c:	e3a03000 	mov	r3, #0
4000caa0:	e3a01002 	mov	r1, #2
4000caa4:	e2422030 	sub	r2, r2, #48	; 0x30
4000caa8:	ebffffc5 	bl	4000c9c4 <MAX7219::WriteRegister(unsigned long, unsigned long, bool)>
4000caac:	e5d5200a 	ldrb	r2, [r5, #10]
4000cab0:	e3a03000 	mov	r3, #0
4000cab4:	e3a01001 	mov	r1, #1
4000cab8:	e1a00004 	mov	r0, r4
4000cabc:	e2422030 	sub	r2, r2, #48	; 0x30
4000cac0:	ebffffbf 	bl	4000c9c4 <MAX7219::WriteRegister(unsigned long, unsigned long, bool)>
4000cac4:	e8bd8070 	pop	{r4, r5, r6, pc}

4000cac8 <LtcDisplayMax72197Segment::ShowSysTime(char const*)>:
4000cac8:	e92d4070 	push	{r4, r5, r6, lr}
4000cacc:	e2804004 	add	r4, r0, #4
4000cad0:	e1a05001 	mov	r5, r1
4000cad4:	e1a00004 	mov	r0, r4
4000cad8:	ebffffb0 	bl	4000c9a0 <HAL_SPI::Setup()>
4000cadc:	e300080f 	movw	r0, #2063	; 0x80f
4000cae0:	eb007bb7 	bl	4002b9c4 <h3_spi_write(unsigned short)>
4000cae4:	e5d52000 	ldrb	r2, [r5]
4000cae8:	e1a00004 	mov	r0, r4
4000caec:	e3a03000 	mov	r3, #0
4000caf0:	e3a01007 	mov	r1, #7
4000caf4:	e2422030 	sub	r2, r2, #48	; 0x30
4000caf8:	ebffffb1 	bl	4000c9c4 <MAX7219::WriteRegister(unsigned long, unsigned long, bool)>
4000cafc:	e5d52001 	ldrb	r2, [r5, #1]
4000cb00:	e1a00004 	mov	r0, r4
4000cb04:	e3a03000 	mov	r3, #0
4000cb08:	e3a01006 	mov	r1, #6
4000cb0c:	e2422030 	sub	r2, r2, #48	; 0x30
4000cb10:	e3822080 	orr	r2, r2, #128	; 0x80
4000cb14:	ebffffaa 	bl	4000c9c4 <MAX7219::WriteRegister(unsigned long, unsigned long, bool)>
4000cb18:	e5d52003 	ldrb	r2, [r5, #3]
4000cb1c:	e1a00004 	mov	r0, r4
4000cb20:	e3a03000 	mov	r3, #0
4000cb24:	e3a01005 	mov	r1, #5
4000cb28:	e2422030 	sub	r2, r2, #48	; 0x30
4000cb2c:	ebffffa4 	bl	4000c9c4 <MAX7219::WriteRegister(unsigned long, unsigned long, bool)>
4000cb30:	e5d52004 	ldrb	r2, [r5, #4]
4000cb34:	e1a00004 	mov	r0, r4
4000cb38:	e3a03000 	mov	r3, #0
4000cb3c:	e3a01004 	mov	r1, #4
4000cb40:	e2422030 	sub	r2, r2, #48	; 0x30
4000cb44:	e3822080 	orr	r2, r2, #128	; 0x80
4000cb48:	ebffff9d 	bl	4000c9c4 <MAX7219::WriteRegister(unsigned long, unsigned long, bool)>
4000cb4c:	e5d52006 	ldrb	r2, [r5, #6]
4000cb50:	e1a00004 	mov	r0, r4
4000cb54:	e3a03000 	mov	r3, #0
4000cb58:	e3a01003 	mov	r1, #3
4000cb5c:	e2422030 	sub	r2, r2, #48	; 0x30
4000cb60:	ebffff97 	bl	4000c9c4 <MAX7219::WriteRegister(unsigned long, unsigned long, bool)>
4000cb64:	e5d52007 	ldrb	r2, [r5, #7]
4000cb68:	e1a00004 	mov	r0, r4
4000cb6c:	e3a03000 	mov	r3, #0
4000cb70:	e3a01002 	mov	r1, #2
4000cb74:	e2422030 	sub	r2, r2, #48	; 0x30
4000cb78:	ebffff91 	bl	4000c9c4 <MAX7219::WriteRegister(unsigned long, unsigned long, bool)>
4000cb7c:	e8bd4070 	pop	{r4, r5, r6, lr}
4000cb80:	e300010f 	movw	r0, #271	; 0x10f
4000cb84:	ea007b8e 	b	4002b9c4 <h3_spi_write(unsigned short)>

4000cb88 <LtcDisplayMax72197Segment::WriteChar(unsigned char, unsigned char)>:
4000cb88:	e3520007 	cmp	r2, #7
4000cb8c:	812fff1e 	bxhi	lr
4000cb90:	e282c001 	add	ip, r2, #1
4000cb94:	e3a03001 	mov	r3, #1
4000cb98:	e1a02001 	mov	r2, r1
4000cb9c:	e2800004 	add	r0, r0, #4
4000cba0:	e6ef107c 	uxtb	r1, ip
4000cba4:	e92d4010 	push	{r4, lr}
4000cba8:	ebffff85 	bl	4000c9c4 <MAX7219::WriteRegister(unsigned long, unsigned long, bool)>
4000cbac:	e8bd8010 	pop	{r4, pc}

4000cbb0 <LtcDisplayMax72197Segment::Init(unsigned char)>:
4000cbb0:	e92d4070 	push	{r4, r5, r6, lr}
4000cbb4:	e2804004 	add	r4, r0, #4
4000cbb8:	e1a00004 	mov	r0, r4
4000cbbc:	e1a05001 	mov	r5, r1
4000cbc0:	ebffff76 	bl	4000c9a0 <HAL_SPI::Setup()>
4000cbc4:	e3000c01 	movw	r0, #3073	; 0xc01
4000cbc8:	eb007b7d 	bl	4002b9c4 <h3_spi_write(unsigned short)>
4000cbcc:	e3a00c0f 	mov	r0, #3840	; 0xf00
4000cbd0:	eb007b7b 	bl	4002b9c4 <h3_spi_write(unsigned short)>
4000cbd4:	e30009ff 	movw	r0, #2559	; 0x9ff
4000cbd8:	eb007b79 	bl	4002b9c4 <h3_spi_write(unsigned short)>
4000cbdc:	e3000b07 	movw	r0, #2823	; 0xb07
4000cbe0:	eb007b77 	bl	4002b9c4 <h3_spi_write(unsigned short)>
4000cbe4:	e205200f 	and	r2, r5, #15
4000cbe8:	e3a03000 	mov	r3, #0
4000cbec:	e3a0100a 	mov	r1, #10
4000cbf0:	e1a00004 	mov	r0, r4
4000cbf4:	e3a05007 	mov	r5, #7
4000cbf8:	ebffff71 	bl	4000c9c4 <MAX7219::WriteRegister(unsigned long, unsigned long, bool)>
4000cbfc:	e1a00004 	mov	r0, r4
4000cc00:	ebffff66 	bl	4000c9a0 <HAL_SPI::Setup()>
4000cc04:	e300080f 	movw	r0, #2063	; 0x80f
4000cc08:	eb007b6d 	bl	4002b9c4 <h3_spi_write(unsigned short)>
4000cc0c:	e1a01005 	mov	r1, r5
4000cc10:	e3a03000 	mov	r3, #0
4000cc14:	e3a0200f 	mov	r2, #15
4000cc18:	e1a00004 	mov	r0, r4
4000cc1c:	ebffff68 	bl	4000c9c4 <MAX7219::WriteRegister(unsigned long, unsigned long, bool)>
4000cc20:	e2555001 	subs	r5, r5, #1
4000cc24:	1afffff8 	bne	4000cc0c <LtcDisplayMax72197Segment::Init(unsigned char)+0x5c>
4000cc28:	e1a00004 	mov	r0, r4
4000cc2c:	ebffff5b 	bl	4000c9a0 <HAL_SPI::Setup()>
4000cc30:	e3a00d1e 	mov	r0, #1920	; 0x780
4000cc34:	eb007b62 	bl	4002b9c4 <h3_spi_write(unsigned short)>
4000cc38:	e3a00d16 	mov	r0, #1408	; 0x580
4000cc3c:	eb007b60 	bl	4002b9c4 <h3_spi_write(unsigned short)>
4000cc40:	e8bd4070 	pop	{r4, r5, r6, lr}
4000cc44:	e3a00d0e 	mov	r0, #896	; 0x380
4000cc48:	ea007b5d 	b	4002b9c4 <h3_spi_write(unsigned short)>

4000cc4c <LtcDisplayMax72197Segment::LtcDisplayMax72197Segment()>:
4000cc4c:	e59f3034 	ldr	r3, [pc, #52]	; 4000cc88 <LtcDisplayMax72197Segment::LtcDisplayMax72197Segment()+0x3c>
4000cc50:	e92d4010 	push	{r4, lr}
4000cc54:	e1a04000 	mov	r4, r0
4000cc58:	e5803000 	str	r3, [r0]
4000cc5c:	e59f3028 	ldr	r3, [pc, #40]	; 4000cc8c <LtcDisplayMax72197Segment::LtcDisplayMax72197Segment()+0x40>
4000cc60:	e5803004 	str	r3, [r0, #4]
4000cc64:	e3a03000 	mov	r3, #0
4000cc68:	e1c030b8 	strh	r3, [r0, #8]
4000cc6c:	ebffd0aa 	bl	40000f1c <h3_spi_begin()>
4000cc70:	e59f3018 	ldr	r3, [pc, #24]	; 4000cc90 <LtcDisplayMax72197Segment::LtcDisplayMax72197Segment()+0x44>
4000cc74:	e1a00004 	mov	r0, r4
4000cc78:	e5843000 	str	r3, [r4]
4000cc7c:	e59f3010 	ldr	r3, [pc, #16]	; 4000cc94 <LtcDisplayMax72197Segment::LtcDisplayMax72197Segment()+0x48>
4000cc80:	e5834000 	str	r4, [r3]
4000cc84:	e8bd8010 	pop	{r4, pc}
4000cc88:	40030b94 	mulmi	r3, r4, fp
4000cc8c:	001e8480 	andseq	r8, lr, r0, lsl #9
4000cc90:	40030bb4 			; <UNDEFINED> instruction: 0x40030bb4
4000cc94:	40057700 	andmi	r7, r5, r0, lsl #14

4000cc98 <LtcDisplayMax7219Matrix::WriteChar(unsigned char, unsigned char)>:
4000cc98:	e12fff1e 	bx	lr

4000cc9c <LtcDisplayMax7219Matrix::Init(unsigned char)>:
4000cc9c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000cca0:	e1a06001 	mov	r6, r1
4000cca4:	e59f7090 	ldr	r7, [pc, #144]	; 4000cd3c <LtcDisplayMax7219Matrix::Init(unsigned char)+0xa0>
4000cca8:	e3a04000 	mov	r4, #0
4000ccac:	e2805004 	add	r5, r0, #4
4000ccb0:	e1a02007 	mov	r2, r7
4000ccb4:	e1a01004 	mov	r1, r4
4000ccb8:	e1a00005 	mov	r0, r5
4000ccbc:	e2844001 	add	r4, r4, #1
4000ccc0:	e2877008 	add	r7, r7, #8
4000ccc4:	eb00639a 	bl	40025b34 <Max7219Matrix::UpdateCharacter(unsigned long, unsigned char const*)>
4000ccc8:	e354000a 	cmp	r4, #10
4000cccc:	1afffff7 	bne	4000ccb0 <LtcDisplayMax7219Matrix::Init(unsigned char)+0x14>
4000ccd0:	e59f7068 	ldr	r7, [pc, #104]	; 4000cd40 <LtcDisplayMax7219Matrix::Init(unsigned char)+0xa4>
4000ccd4:	e1a02007 	mov	r2, r7
4000ccd8:	e1a01004 	mov	r1, r4
4000ccdc:	e1a00005 	mov	r0, r5
4000cce0:	e2844001 	add	r4, r4, #1
4000cce4:	e2877008 	add	r7, r7, #8
4000cce8:	eb006391 	bl	40025b34 <Max7219Matrix::UpdateCharacter(unsigned long, unsigned char const*)>
4000ccec:	e3540014 	cmp	r4, #20
4000ccf0:	1afffff7 	bne	4000ccd4 <LtcDisplayMax7219Matrix::Init(unsigned char)+0x38>
4000ccf4:	e59f7048 	ldr	r7, [pc, #72]	; 4000cd44 <LtcDisplayMax7219Matrix::Init(unsigned char)+0xa8>
4000ccf8:	e1a02007 	mov	r2, r7
4000ccfc:	e1a01004 	mov	r1, r4
4000cd00:	e1a00005 	mov	r0, r5
4000cd04:	e2844001 	add	r4, r4, #1
4000cd08:	e2877008 	add	r7, r7, #8
4000cd0c:	eb006388 	bl	40025b34 <Max7219Matrix::UpdateCharacter(unsigned long, unsigned char const*)>
4000cd10:	e354001e 	cmp	r4, #30
4000cd14:	1afffff7 	bne	4000ccf8 <LtcDisplayMax7219Matrix::Init(unsigned char)+0x5c>
4000cd18:	e1a02006 	mov	r2, r6
4000cd1c:	e1a00005 	mov	r0, r5
4000cd20:	e3a01008 	mov	r1, #8
4000cd24:	eb0063ce 	bl	40025c64 <Max7219Matrix::Init(unsigned short, unsigned char)>
4000cd28:	e59f1018 	ldr	r1, [pc, #24]	; 4000cd48 <LtcDisplayMax7219Matrix::Init(unsigned char)+0xac>
4000cd2c:	e1a00005 	mov	r0, r5
4000cd30:	e3a02007 	mov	r2, #7
4000cd34:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
4000cd38:	ea006349 	b	40025a64 <Max7219Matrix::Write(char const*, unsigned short)>
4000cd3c:	40030be4 	andmi	r0, r3, r4, ror #23
4000cd40:	40030c84 	andmi	r0, r3, r4, lsl #25
4000cd44:	40030c34 	andmi	r0, r3, r4, lsr ip
4000cd48:	40030bcc 	andmi	r0, r3, ip, asr #23

4000cd4c <LtcDisplayMax7219Matrix::~LtcDisplayMax7219Matrix()>:
4000cd4c:	e59f3014 	ldr	r3, [pc, #20]	; 4000cd68 <LtcDisplayMax7219Matrix::~LtcDisplayMax7219Matrix()+0x1c>
4000cd50:	e92d4010 	push	{r4, lr}
4000cd54:	e1a04000 	mov	r4, r0
4000cd58:	e4803004 	str	r3, [r0], #4
4000cd5c:	eb006338 	bl	40025a44 <Max7219Matrix::~Max7219Matrix()>
4000cd60:	e1a00004 	mov	r0, r4
4000cd64:	e8bd8010 	pop	{r4, pc}
4000cd68:	40030cdc 	ldrdmi	r0, [r3], -ip

4000cd6c <LtcDisplayMax7219Matrix::~LtcDisplayMax7219Matrix()>:
4000cd6c:	e92d4010 	push	{r4, lr}
4000cd70:	e1a04000 	mov	r4, r0
4000cd74:	ebfffff4 	bl	4000cd4c <LtcDisplayMax7219Matrix::~LtcDisplayMax7219Matrix()>
4000cd78:	e1a00004 	mov	r0, r4
4000cd7c:	e3a01020 	mov	r1, #32
4000cd80:	eb008193 	bl	4002d3d4 <operator delete(void*, unsigned int)>
4000cd84:	e1a00004 	mov	r0, r4
4000cd88:	e8bd8010 	pop	{r4, pc}

4000cd8c <offset(char, char)>:
4000cd8c:	e1a03000 	mov	r3, r0
4000cd90:	e2110001 	ands	r0, r1, #1
4000cd94:	1a000005 	bne	4000cdb0 <offset(char, char)+0x24>
4000cd98:	e243302c 	sub	r3, r3, #44	; 0x2c
4000cd9c:	e6ef3073 	uxtb	r3, r3
4000cda0:	e353000f 	cmp	r3, #15
4000cda4:	959f200c 	ldrls	r2, [pc, #12]	; 4000cdb8 <offset(char, char)+0x2c>
4000cda8:	919200d3 	ldrsbls	r0, [r2, r3]
4000cdac:	e12fff1e 	bx	lr
4000cdb0:	e3a00000 	mov	r0, #0
4000cdb4:	e12fff1e 	bx	lr
4000cdb8:	40030bd4 	ldrdmi	r0, [r3], -r4

4000cdbc <LtcDisplayMax7219Matrix::Show(char const*)>:
4000cdbc:	e92d4070 	push	{r4, r5, r6, lr}
4000cdc0:	e1a04001 	mov	r4, r1
4000cdc4:	e5d11007 	ldrb	r1, [r1, #7]
4000cdc8:	e1a05000 	mov	r5, r0
4000cdcc:	e5d43000 	ldrb	r3, [r4]
4000cdd0:	e5c03016 	strb	r3, [r0, #22]
4000cdd4:	e5d40002 	ldrb	r0, [r4, #2]
4000cdd8:	ebffffeb 	bl	4000cd8c <offset(char, char)>
4000cddc:	e5d43001 	ldrb	r3, [r4, #1]
4000cde0:	e0833000 	add	r3, r3, r0
4000cde4:	e5c53017 	strb	r3, [r5, #23]
4000cde8:	e5d43003 	ldrb	r3, [r4, #3]
4000cdec:	e5c53018 	strb	r3, [r5, #24]
4000cdf0:	e5d40005 	ldrb	r0, [r4, #5]
4000cdf4:	ebffffe4 	bl	4000cd8c <offset(char, char)>
4000cdf8:	e5d43004 	ldrb	r3, [r4, #4]
4000cdfc:	e0833000 	add	r3, r3, r0
4000ce00:	e5c53019 	strb	r3, [r5, #25]
4000ce04:	e5d43006 	ldrb	r3, [r4, #6]
4000ce08:	e5c5301a 	strb	r3, [r5, #26]
4000ce0c:	e5d40008 	ldrb	r0, [r4, #8]
4000ce10:	ebffffdd 	bl	4000cd8c <offset(char, char)>
4000ce14:	e5d43007 	ldrb	r3, [r4, #7]
4000ce18:	e2851016 	add	r1, r5, #22
4000ce1c:	e3a02008 	mov	r2, #8
4000ce20:	e0833000 	add	r3, r3, r0
4000ce24:	e2850004 	add	r0, r5, #4
4000ce28:	e5c5301b 	strb	r3, [r5, #27]
4000ce2c:	e5d43009 	ldrb	r3, [r4, #9]
4000ce30:	e5c5301c 	strb	r3, [r5, #28]
4000ce34:	e5d4300a 	ldrb	r3, [r4, #10]
4000ce38:	e5c5301d 	strb	r3, [r5, #29]
4000ce3c:	e8bd4070 	pop	{r4, r5, r6, lr}
4000ce40:	ea006307 	b	40025a64 <Max7219Matrix::Write(char const*, unsigned short)>

4000ce44 <LtcDisplayMax7219Matrix::ShowSysTime(char const*)>:
4000ce44:	e92d4070 	push	{r4, r5, r6, lr}
4000ce48:	e1a05001 	mov	r5, r1
4000ce4c:	e5d11007 	ldrb	r1, [r1, #7]
4000ce50:	e3a06020 	mov	r6, #32
4000ce54:	e5c06016 	strb	r6, [r0, #22]
4000ce58:	e1a04000 	mov	r4, r0
4000ce5c:	e5d53000 	ldrb	r3, [r5]
4000ce60:	e5c03017 	strb	r3, [r0, #23]
4000ce64:	e5d50002 	ldrb	r0, [r5, #2]
4000ce68:	ebffffc7 	bl	4000cd8c <offset(char, char)>
4000ce6c:	e5d53001 	ldrb	r3, [r5, #1]
4000ce70:	e0833000 	add	r3, r3, r0
4000ce74:	e5c43018 	strb	r3, [r4, #24]
4000ce78:	e5d53003 	ldrb	r3, [r5, #3]
4000ce7c:	e5c43019 	strb	r3, [r4, #25]
4000ce80:	e5d50005 	ldrb	r0, [r5, #5]
4000ce84:	ebffffc0 	bl	4000cd8c <offset(char, char)>
4000ce88:	e5d53004 	ldrb	r3, [r5, #4]
4000ce8c:	e2841016 	add	r1, r4, #22
4000ce90:	e3a02008 	mov	r2, #8
4000ce94:	e0833000 	add	r3, r3, r0
4000ce98:	e2840004 	add	r0, r4, #4
4000ce9c:	e5c4301a 	strb	r3, [r4, #26]
4000cea0:	e5d53006 	ldrb	r3, [r5, #6]
4000cea4:	e5c4301b 	strb	r3, [r4, #27]
4000cea8:	e5d53007 	ldrb	r3, [r5, #7]
4000ceac:	e5c4601d 	strb	r6, [r4, #29]
4000ceb0:	e5c4301c 	strb	r3, [r4, #28]
4000ceb4:	e8bd4070 	pop	{r4, r5, r6, lr}
4000ceb8:	ea0062e9 	b	40025a64 <Max7219Matrix::Write(char const*, unsigned short)>

4000cebc <LtcDisplayMax7219Matrix::LtcDisplayMax7219Matrix()>:
4000cebc:	e59f3024 	ldr	r3, [pc, #36]	; 4000cee8 <LtcDisplayMax7219Matrix::LtcDisplayMax7219Matrix()+0x2c>
4000cec0:	e92d4010 	push	{r4, lr}
4000cec4:	e1a04000 	mov	r4, r0
4000cec8:	e4803004 	str	r3, [r0], #4
4000cecc:	eb006391 	bl	40025d18 <Max7219Matrix::Max7219Matrix()>
4000ced0:	e59f3014 	ldr	r3, [pc, #20]	; 4000ceec <LtcDisplayMax7219Matrix::LtcDisplayMax7219Matrix()+0x30>
4000ced4:	e1a00004 	mov	r0, r4
4000ced8:	e5843000 	str	r3, [r4]
4000cedc:	e59f300c 	ldr	r3, [pc, #12]	; 4000cef0 <LtcDisplayMax7219Matrix::LtcDisplayMax7219Matrix()+0x34>
4000cee0:	e5834000 	str	r4, [r3]
4000cee4:	e8bd8010 	pop	{r4, pc}
4000cee8:	40030b94 	mulmi	r3, r4, fp
4000ceec:	40030cdc 	ldrdmi	r0, [r3], -ip
4000cef0:	40057708 	andmi	r7, r5, r8, lsl #14

4000cef4 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]>:
4000cef4:	e1d0c0b6 	ldrh	ip, [r0, #6]
4000cef8:	e92d4037 	push	{r0, r1, r2, r4, r5, lr}
4000cefc:	e1d050b4 	ldrh	r5, [r0, #4]
4000cf00:	e15c0005 	cmp	ip, r5
4000cf04:	2a000017 	bcs	4000cf68 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x74>
4000cf08:	e045500c 	sub	r5, r5, ip
4000cf0c:	e1a04000 	mov	r4, r0
4000cf10:	e5900000 	ldr	r0, [r0]
4000cf14:	e3530000 	cmp	r3, #0
4000cf18:	e080000c 	add	r0, r0, ip
4000cf1c:	e5d4c008 	ldrb	ip, [r4, #8]
4000cf20:	1a000005 	bne	4000cf3c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x48>
4000cf24:	e35c0000 	cmp	ip, #0
4000cf28:	1a000005 	bne	4000cf44 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x50>
4000cf2c:	e58d2000 	str	r2, [sp]
4000cf30:	e1a03001 	mov	r3, r1
4000cf34:	e59f2044 	ldr	r2, [pc, #68]	; 4000cf80 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x8c>
4000cf38:	ea000004 	b	4000cf50 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x5c>
4000cf3c:	e35c0000 	cmp	ip, #0
4000cf40:	0a00000a 	beq	4000cf70 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x7c>
4000cf44:	e58d2000 	str	r2, [sp]
4000cf48:	e1a03001 	mov	r3, r1
4000cf4c:	e59f2030 	ldr	r2, [pc, #48]	; 4000cf84 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x90>
4000cf50:	e1a01005 	mov	r1, r5
4000cf54:	eb007f2a 	bl	4002cc04 <snprintf>
4000cf58:	e1550000 	cmp	r5, r0
4000cf5c:	a1d430b6 	ldrhge	r3, [r4, #6]
4000cf60:	a0830000 	addge	r0, r3, r0
4000cf64:	a1c400b6 	strhge	r0, [r4, #6]
4000cf68:	e28dd00c 	add	sp, sp, #12
4000cf6c:	e8bd8030 	pop	{r4, r5, pc}
4000cf70:	e58d2000 	str	r2, [sp]
4000cf74:	e1a03001 	mov	r3, r1
4000cf78:	e59f2008 	ldr	r2, [pc, #8]	; 4000cf88 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x94>
4000cf7c:	eafffff3 	b	4000cf50 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x5c>
4000cf80:	4002e13b 	andmi	lr, r2, fp, lsr r1
4000cf84:	4002e132 	andmi	lr, r2, r2, lsr r1
4000cf88:	4002e13c 	andmi	lr, r2, ip, lsr r1

4000cf8c <int PropertiesBuilder::add_part<char*>(char*, unsigned long, char const*, char*, bool, int) [clone .isra.0]>:
4000cf8c:	e92d4010 	push	{r4, lr}
4000cf90:	e1a0c000 	mov	ip, r0
4000cf94:	e5dd400c 	ldrb	r4, [sp, #12]
4000cf98:	e1a00001 	mov	r0, r1
4000cf9c:	e1a0e003 	mov	lr, r3
4000cfa0:	e1a01002 	mov	r1, r2
4000cfa4:	e59d2008 	ldr	r2, [sp, #8]
4000cfa8:	e3540000 	cmp	r4, #0
4000cfac:	1a000004 	bne	4000cfc4 <int PropertiesBuilder::add_part<char*>(char*, unsigned long, char const*, char*, bool, int) [clone .isra.0]+0x38>
4000cfb0:	e35c0000 	cmp	ip, #0
4000cfb4:	1a000006 	bne	4000cfd4 <int PropertiesBuilder::add_part<char*>(char*, unsigned long, char const*, char*, bool, int) [clone .isra.0]+0x48>
4000cfb8:	e58d2008 	str	r2, [sp, #8]
4000cfbc:	e59f2024 	ldr	r2, [pc, #36]	; 4000cfe8 <int PropertiesBuilder::add_part<char*>(char*, unsigned long, char const*, char*, bool, int) [clone .isra.0]+0x5c>
4000cfc0:	ea000006 	b	4000cfe0 <int PropertiesBuilder::add_part<char*>(char*, unsigned long, char const*, char*, bool, int) [clone .isra.0]+0x54>
4000cfc4:	e35c0000 	cmp	ip, #0
4000cfc8:	058d2008 	streq	r2, [sp, #8]
4000cfcc:	059f2018 	ldreq	r2, [pc, #24]	; 4000cfec <int PropertiesBuilder::add_part<char*>(char*, unsigned long, char const*, char*, bool, int) [clone .isra.0]+0x60>
4000cfd0:	0a000002 	beq	4000cfe0 <int PropertiesBuilder::add_part<char*>(char*, unsigned long, char const*, char*, bool, int) [clone .isra.0]+0x54>
4000cfd4:	e58d2008 	str	r2, [sp, #8]
4000cfd8:	e1a0300e 	mov	r3, lr
4000cfdc:	e59f200c 	ldr	r2, [pc, #12]	; 4000cff0 <int PropertiesBuilder::add_part<char*>(char*, unsigned long, char const*, char*, bool, int) [clone .isra.0]+0x64>
4000cfe0:	e8bd4010 	pop	{r4, lr}
4000cfe4:	ea007f06 	b	4002cc04 <snprintf>
4000cfe8:	4002e14e 	andmi	lr, r2, lr, asr #2
4000cfec:	4002e14f 	andmi	lr, r2, pc, asr #2
4000cff0:	4002e143 	andmi	lr, r2, r3, asr #2

4000cff4 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]>:
4000cff4:	e92d4037 	push	{r0, r1, r2, r4, r5, lr}
4000cff8:	e1a04000 	mov	r4, r0
4000cffc:	e1d000b6 	ldrh	r0, [r0, #6]
4000d000:	e1d450b4 	ldrh	r5, [r4, #4]
4000d004:	e1500005 	cmp	r0, r5
4000d008:	2a00000b 	bcs	4000d03c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]+0x48>
4000d00c:	e594c000 	ldr	ip, [r4]
4000d010:	e0455000 	sub	r5, r5, r0
4000d014:	e1cd20f0 	strd	r2, [sp]
4000d018:	e1a03001 	mov	r3, r1
4000d01c:	e1a02005 	mov	r2, r5
4000d020:	e08c1000 	add	r1, ip, r0
4000d024:	e5d40008 	ldrb	r0, [r4, #8]
4000d028:	ebffffd7 	bl	4000cf8c <int PropertiesBuilder::add_part<char*>(char*, unsigned long, char const*, char*, bool, int) [clone .isra.0]>
4000d02c:	e1550000 	cmp	r5, r0
4000d030:	a1d430b6 	ldrhge	r3, [r4, #6]
4000d034:	a0830000 	addge	r0, r3, r0
4000d038:	a1c400b6 	strhge	r0, [r4, #6]
4000d03c:	e28dd00c 	add	sp, sp, #12
4000d040:	e8bd8030 	pop	{r4, r5, pc}

4000d044 <strncasecmp>:
4000d044:	e0812002 	add	r2, r1, r2
4000d048:	e240c001 	sub	ip, r0, #1
4000d04c:	e1520001 	cmp	r2, r1
4000d050:	1a000015 	bne	4000d0ac <strncasecmp+0x68>
4000d054:	e3a00000 	mov	r0, #0
4000d058:	e12fff1e 	bx	lr
4000d05c:	e3500000 	cmp	r0, #0
4000d060:	08bd8010 	popeq	{r4, pc}
4000d064:	e2811001 	add	r1, r1, #1
4000d068:	e1520001 	cmp	r2, r1
4000d06c:	0a00000c 	beq	4000d0a4 <strncasecmp+0x60>
4000d070:	e5fc0001 	ldrb	r0, [ip, #1]!
4000d074:	e2403041 	sub	r3, r0, #65	; 0x41
4000d078:	e1a0e000 	mov	lr, r0
4000d07c:	e3530019 	cmp	r3, #25
4000d080:	e5d13000 	ldrb	r3, [r1]
4000d084:	9280e020 	addls	lr, r0, #32
4000d088:	e2434041 	sub	r4, r3, #65	; 0x41
4000d08c:	e3540019 	cmp	r4, #25
4000d090:	92833020 	addls	r3, r3, #32
4000d094:	e153000e 	cmp	r3, lr
4000d098:	0affffef 	beq	4000d05c <strncasecmp+0x18>
4000d09c:	e04e0003 	sub	r0, lr, r3
4000d0a0:	e8bd8010 	pop	{r4, pc}
4000d0a4:	e3a00000 	mov	r0, #0
4000d0a8:	e8bd8010 	pop	{r4, pc}
4000d0ac:	e92d4010 	push	{r4, lr}
4000d0b0:	eaffffee 	b	4000d070 <strncasecmp+0x2c>

4000d0b4 <LtcDisplayParamsStore::Update(ltcdisplayparams::Params const*)>:
4000d0b4:	e92d401f 	push	{r0, r1, r2, r3, r4, lr}
4000d0b8:	e1a03000 	mov	r3, r0
4000d0bc:	e59f0024 	ldr	r0, [pc, #36]	; 4000d0e8 <LtcDisplayParamsStore::Update(ltcdisplayparams::Params const*)+0x34>
4000d0c0:	e3a02000 	mov	r2, #0
4000d0c4:	e58d2008 	str	r2, [sp, #8]
4000d0c8:	e3a0102e 	mov	r1, #46	; 0x2e
4000d0cc:	e58d1000 	str	r1, [sp]
4000d0d0:	e3a0100e 	mov	r1, #14
4000d0d4:	e58d2004 	str	r2, [sp, #4]
4000d0d8:	e5900000 	ldr	r0, [r0]
4000d0dc:	eb003da1 	bl	4001c768 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
4000d0e0:	e28dd014 	add	sp, sp, #20
4000d0e4:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4000d0e8:	40034084 	andmi	r4, r3, r4, lsl #1

4000d0ec <LtcDisplayParamsStore::Copy(ltcdisplayparams::Params*)>:
4000d0ec:	e92d4007 	push	{r0, r1, r2, lr}
4000d0f0:	e1a02000 	mov	r2, r0
4000d0f4:	e3a01001 	mov	r1, #1
4000d0f8:	e3a00000 	mov	r0, #0
4000d0fc:	e1cd00f0 	strd	r0, [sp]
4000d100:	e59f0014 	ldr	r0, [pc, #20]	; 4000d11c <LtcDisplayParamsStore::Copy(ltcdisplayparams::Params*)+0x30>
4000d104:	e3a0302e 	mov	r3, #46	; 0x2e
4000d108:	e3a0100e 	mov	r1, #14
4000d10c:	e5900000 	ldr	r0, [r0]
4000d110:	eb003db6 	bl	4001c7f0 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)>
4000d114:	e28dd00c 	add	sp, sp, #12
4000d118:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4000d11c:	40034084 	andmi	r4, r3, r4, lsl #1

4000d120 <LtcDisplayParams::LtcDisplayParams()>:
4000d120:	e3a02003 	mov	r2, #3
4000d124:	e3a01004 	mov	r1, #4
4000d128:	e5c02006 	strb	r2, [r0, #6]
4000d12c:	e3e02000 	mvn	r2, #0
4000d130:	e5c02007 	strb	r2, [r0, #7]
4000d134:	e3a03000 	mov	r3, #0
4000d138:	e5c01005 	strb	r1, [r0, #5]
4000d13c:	e3a01002 	mov	r1, #2
4000d140:	e5c02009 	strb	r2, [r0, #9]
4000d144:	e5c0200d 	strb	r2, [r0, #13]
4000d148:	e5c02011 	strb	r2, [r0, #17]
4000d14c:	e5c02013 	strb	r2, [r0, #19]
4000d150:	e5c02014 	strb	r2, [r0, #20]
4000d154:	e5c02015 	strb	r2, [r0, #21]
4000d158:	e5c02019 	strb	r2, [r0, #25]
4000d15c:	e3e0207f 	mvn	r2, #127	; 0x7f
4000d160:	e5c0100a 	strb	r1, [r0, #10]
4000d164:	e3e01003 	mvn	r1, #3
4000d168:	e5c0201b 	strb	r2, [r0, #27]
4000d16c:	e5c0201c 	strb	r2, [r0, #28]
4000d170:	e5c0201d 	strb	r2, [r0, #29]
4000d174:	e3a02070 	mov	r2, #112	; 0x70
4000d178:	e5c03000 	strb	r3, [r0]
4000d17c:	e5c03001 	strb	r3, [r0, #1]
4000d180:	e5c03002 	strb	r3, [r0, #2]
4000d184:	e5c03003 	strb	r3, [r0, #3]
4000d188:	e5c03004 	strb	r3, [r0, #4]
4000d18c:	e5c03008 	strb	r3, [r0, #8]
4000d190:	e5c0300b 	strb	r3, [r0, #11]
4000d194:	e5c0300c 	strb	r3, [r0, #12]
4000d198:	e5c0300e 	strb	r3, [r0, #14]
4000d19c:	e5c0300f 	strb	r3, [r0, #15]
4000d1a0:	e5c01010 	strb	r1, [r0, #16]
4000d1a4:	e280102c 	add	r1, r0, #44	; 0x2c
4000d1a8:	e5c03012 	strb	r3, [r0, #18]
4000d1ac:	e5c03016 	strb	r3, [r0, #22]
4000d1b0:	e5c03017 	strb	r3, [r0, #23]
4000d1b4:	e5c03018 	strb	r3, [r0, #24]
4000d1b8:	e5c0301a 	strb	r3, [r0, #26]
4000d1bc:	e5c0301e 	strb	r3, [r0, #30]
4000d1c0:	e5c0201f 	strb	r2, [r0, #31]
4000d1c4:	e5c02020 	strb	r2, [r0, #32]
4000d1c8:	e5c02021 	strb	r2, [r0, #33]	; 0x21
4000d1cc:	e3a02020 	mov	r2, #32
4000d1d0:	e5c03022 	strb	r3, [r0, #34]	; 0x22
4000d1d4:	e5c03023 	strb	r3, [r0, #35]	; 0x23
4000d1d8:	e2803024 	add	r3, r0, #36	; 0x24
4000d1dc:	e1530001 	cmp	r3, r1
4000d1e0:	14c32001 	strbne	r2, [r3], #1
4000d1e4:	1afffffc 	bne	4000d1dc <LtcDisplayParams::LtcDisplayParams()+0xbc>
4000d1e8:	e3a0307f 	mov	r3, #127	; 0x7f
4000d1ec:	e5c0302c 	strb	r3, [r0, #44]	; 0x2c
4000d1f0:	e3a03000 	mov	r3, #0
4000d1f4:	e5c0302d 	strb	r3, [r0, #45]	; 0x2d
4000d1f8:	e12fff1e 	bx	lr

4000d1fc <LtcDisplayParams::Load()>:
4000d1fc:	e3a03000 	mov	r3, #0
4000d200:	e1a02000 	mov	r2, r0
4000d204:	e92d4013 	push	{r0, r1, r4, lr}
4000d208:	e1a04000 	mov	r4, r0
4000d20c:	e5c03000 	strb	r3, [r0]
4000d210:	e5c03001 	strb	r3, [r0, #1]
4000d214:	e5c03002 	strb	r3, [r0, #2]
4000d218:	e5c03003 	strb	r3, [r0, #3]
4000d21c:	e1a0000d 	mov	r0, sp
4000d220:	e59f1034 	ldr	r1, [pc, #52]	; 4000d25c <LtcDisplayParams::Load()+0x60>
4000d224:	eb006070 	bl	400253ec <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
4000d228:	e59f1030 	ldr	r1, [pc, #48]	; 4000d260 <LtcDisplayParams::Load()+0x64>
4000d22c:	e1a0000d 	mov	r0, sp
4000d230:	eb006070 	bl	400253f8 <ReadConfigFile::Read(char const*)>
4000d234:	e3500000 	cmp	r0, #0
4000d238:	e1a00004 	mov	r0, r4
4000d23c:	0a000004 	beq	4000d254 <LtcDisplayParams::Load()+0x58>
4000d240:	ebffff9b 	bl	4000d0b4 <LtcDisplayParamsStore::Update(ltcdisplayparams::Params const*)>
4000d244:	e1a0000d 	mov	r0, sp
4000d248:	eb006069 	bl	400253f4 <ReadConfigFile::~ReadConfigFile()>
4000d24c:	e28dd008 	add	sp, sp, #8
4000d250:	e8bd8010 	pop	{r4, pc}
4000d254:	ebffffa4 	bl	4000d0ec <LtcDisplayParamsStore::Copy(ltcdisplayparams::Params*)>
4000d258:	eafffff9 	b	4000d244 <LtcDisplayParams::Load()+0x48>
4000d25c:	4000d6b0 			; <UNDEFINED> instruction: 0x4000d6b0
4000d260:	40030e82 	andmi	r0, r3, r2, lsl #29

4000d264 <LtcDisplayParams::Load(char const*, unsigned long)>:
4000d264:	e3a03000 	mov	r3, #0
4000d268:	e92d4073 	push	{r0, r1, r4, r5, r6, lr}
4000d26c:	e1a04000 	mov	r4, r0
4000d270:	e5c03000 	strb	r3, [r0]
4000d274:	e1a05001 	mov	r5, r1
4000d278:	e5c03001 	strb	r3, [r0, #1]
4000d27c:	e1a06002 	mov	r6, r2
4000d280:	e5c03002 	strb	r3, [r0, #2]
4000d284:	e1a02000 	mov	r2, r0
4000d288:	e5c03003 	strb	r3, [r0, #3]
4000d28c:	e1a0000d 	mov	r0, sp
4000d290:	e59f1028 	ldr	r1, [pc, #40]	; 4000d2c0 <LtcDisplayParams::Load(char const*, unsigned long)+0x5c>
4000d294:	eb006054 	bl	400253ec <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
4000d298:	e1a02006 	mov	r2, r6
4000d29c:	e1a01005 	mov	r1, r5
4000d2a0:	e1a0000d 	mov	r0, sp
4000d2a4:	eb00607d 	bl	400254a0 <ReadConfigFile::Read(char const*, unsigned int)>
4000d2a8:	e1a00004 	mov	r0, r4
4000d2ac:	ebffff80 	bl	4000d0b4 <LtcDisplayParamsStore::Update(ltcdisplayparams::Params const*)>
4000d2b0:	e1a0000d 	mov	r0, sp
4000d2b4:	eb00604e 	bl	400253f4 <ReadConfigFile::~ReadConfigFile()>
4000d2b8:	e28dd008 	add	sp, sp, #8
4000d2bc:	e8bd8070 	pop	{r4, r5, r6, pc}
4000d2c0:	4000d6b0 			; <UNDEFINED> instruction: 0x4000d6b0

4000d2c4 <LtcDisplayParams::callbackFunction(char const*)>:
4000d2c4:	e92d40f0 	push	{r4, r5, r6, r7, lr}
4000d2c8:	e1a05001 	mov	r5, r1
4000d2cc:	e59f13a4 	ldr	r1, [pc, #932]	; 4000d678 <LtcDisplayParams::callbackFunction(char const*)+0x3b4>
4000d2d0:	e24dd024 	sub	sp, sp, #36	; 0x24
4000d2d4:	e3a0300f 	mov	r3, #15
4000d2d8:	e1a04000 	mov	r4, r0
4000d2dc:	e58d300c 	str	r3, [sp, #12]
4000d2e0:	e28d2007 	add	r2, sp, #7
4000d2e4:	e1a00005 	mov	r0, r5
4000d2e8:	eb00617b 	bl	400258dc <Sscan::Uint8(char const*, char const*, unsigned char&)>
4000d2ec:	e3500000 	cmp	r0, #0
4000d2f0:	1a000007 	bne	4000d314 <LtcDisplayParams::callbackFunction(char const*)+0x50>
4000d2f4:	e5dd2007 	ldrb	r2, [sp, #7]
4000d2f8:	e5943000 	ldr	r3, [r4]
4000d2fc:	e5c4202c 	strb	r2, [r4, #44]	; 0x2c
4000d300:	e352007f 	cmp	r2, #127	; 0x7f
4000d304:	03c33c02 	biceq	r3, r3, #512	; 0x200
4000d308:	13833c02 	orrne	r3, r3, #512	; 0x200
4000d30c:	e5843000 	str	r3, [r4]
4000d310:	ea000079 	b	4000d4fc <LtcDisplayParams::callbackFunction(char const*)+0x238>
4000d314:	e59f1360 	ldr	r1, [pc, #864]	; 4000d67c <LtcDisplayParams::callbackFunction(char const*)+0x3b8>
4000d318:	e28d2007 	add	r2, sp, #7
4000d31c:	e1a00005 	mov	r0, r5
4000d320:	eb00616d 	bl	400258dc <Sscan::Uint8(char const*, char const*, unsigned char&)>
4000d324:	e3500000 	cmp	r0, #0
4000d328:	1a000008 	bne	4000d350 <LtcDisplayParams::callbackFunction(char const*)+0x8c>
4000d32c:	e5dd3007 	ldrb	r3, [sp, #7]
4000d330:	e3530000 	cmp	r3, #0
4000d334:	13a03001 	movne	r3, #1
4000d338:	03a03000 	moveq	r3, #0
4000d33c:	e5c4302d 	strb	r3, [r4, #45]	; 0x2d
4000d340:	e5943000 	ldr	r3, [r4]
4000d344:	03c33b01 	biceq	r3, r3, #1024	; 0x400
4000d348:	13833b01 	orrne	r3, r3, #1024	; 0x400
4000d34c:	eaffffee 	b	4000d30c <LtcDisplayParams::callbackFunction(char const*)+0x48>
4000d350:	e59f1328 	ldr	r1, [pc, #808]	; 4000d680 <LtcDisplayParams::callbackFunction(char const*)+0x3bc>
4000d354:	e28d300c 	add	r3, sp, #12
4000d358:	e28d2010 	add	r2, sp, #16
4000d35c:	e1a00005 	mov	r0, r5
4000d360:	eb00607b 	bl	40025554 <Sscan::Char(char const*, char const*, char*, unsigned long&)>
4000d364:	e2506000 	subs	r6, r0, #0
4000d368:	1a00000b 	bne	4000d39c <LtcDisplayParams::callbackFunction(char const*)+0xd8>
4000d36c:	e59d200c 	ldr	r2, [sp, #12]
4000d370:	e28d0010 	add	r0, sp, #16
4000d374:	e59f1308 	ldr	r1, [pc, #776]	; 4000d684 <LtcDisplayParams::callbackFunction(char const*)+0x3c0>
4000d378:	ebffff31 	bl	4000d044 <strncasecmp>
4000d37c:	e5943000 	ldr	r3, [r4]
4000d380:	e3500000 	cmp	r0, #0
4000d384:	15c46004 	strbne	r6, [r4, #4]
4000d388:	03a02001 	moveq	r2, #1
4000d38c:	01833002 	orreq	r3, r3, r2
4000d390:	13c33001 	bicne	r3, r3, #1
4000d394:	05c42004 	strbeq	r2, [r4, #4]
4000d398:	eaffffdb 	b	4000d30c <LtcDisplayParams::callbackFunction(char const*)+0x48>
4000d39c:	e59f12e4 	ldr	r1, [pc, #740]	; 4000d688 <LtcDisplayParams::callbackFunction(char const*)+0x3c4>
4000d3a0:	e28d2007 	add	r2, sp, #7
4000d3a4:	e1a00005 	mov	r0, r5
4000d3a8:	eb00614b 	bl	400258dc <Sscan::Uint8(char const*, char const*, unsigned char&)>
4000d3ac:	e3500000 	cmp	r0, #0
4000d3b0:	1a000008 	bne	4000d3d8 <LtcDisplayParams::callbackFunction(char const*)+0x114>
4000d3b4:	e5dd2007 	ldrb	r2, [sp, #7]
4000d3b8:	e352000f 	cmp	r2, #15
4000d3bc:	8a00004e 	bhi	4000d4fc <LtcDisplayParams::callbackFunction(char const*)+0x238>
4000d3c0:	e5943000 	ldr	r3, [r4]
4000d3c4:	e3520004 	cmp	r2, #4
4000d3c8:	e5c42005 	strb	r2, [r4, #5]
4000d3cc:	03c33002 	biceq	r3, r3, #2
4000d3d0:	13833002 	orrne	r3, r3, #2
4000d3d4:	eaffffcc 	b	4000d30c <LtcDisplayParams::callbackFunction(char const*)+0x48>
4000d3d8:	e59f12ac 	ldr	r1, [pc, #684]	; 4000d68c <LtcDisplayParams::callbackFunction(char const*)+0x3c8>
4000d3dc:	e3a06008 	mov	r6, #8
4000d3e0:	e58d600c 	str	r6, [sp, #12]
4000d3e4:	e28d300c 	add	r3, sp, #12
4000d3e8:	e28d2010 	add	r2, sp, #16
4000d3ec:	e1a00005 	mov	r0, r5
4000d3f0:	eb006057 	bl	40025554 <Sscan::Char(char const*, char const*, char*, unsigned long&)>
4000d3f4:	e3500000 	cmp	r0, #0
4000d3f8:	1a000015 	bne	4000d454 <LtcDisplayParams::callbackFunction(char const*)+0x190>
4000d3fc:	e59d500c 	ldr	r5, [sp, #12]
4000d400:	e28d3020 	add	r3, sp, #32
4000d404:	e59f1278 	ldr	r1, [pc, #632]	; 4000d684 <LtcDisplayParams::callbackFunction(char const*)+0x3c0>
4000d408:	e0833005 	add	r3, r3, r5
4000d40c:	e1a02005 	mov	r2, r5
4000d410:	e5430010 	strb	r0, [r3, #-16]
4000d414:	e28d0010 	add	r0, sp, #16
4000d418:	ebffff09 	bl	4000d044 <strncasecmp>
4000d41c:	e3500000 	cmp	r0, #0
4000d420:	05c40023 	strbeq	r0, [r4, #35]	; 0x23
4000d424:	0a000007 	beq	4000d448 <LtcDisplayParams::callbackFunction(char const*)+0x184>
4000d428:	e59f1260 	ldr	r1, [pc, #608]	; 4000d690 <LtcDisplayParams::callbackFunction(char const*)+0x3cc>
4000d42c:	e1a02005 	mov	r2, r5
4000d430:	e28d0010 	add	r0, sp, #16
4000d434:	ebffff02 	bl	4000d044 <strncasecmp>
4000d438:	e3500000 	cmp	r0, #0
4000d43c:	1a00002e 	bne	4000d4fc <LtcDisplayParams::callbackFunction(char const*)+0x238>
4000d440:	e3a03001 	mov	r3, #1
4000d444:	e5c43023 	strb	r3, [r4, #35]	; 0x23
4000d448:	e5943000 	ldr	r3, [r4]
4000d44c:	e3833080 	orr	r3, r3, #128	; 0x80
4000d450:	eaffffad 	b	4000d30c <LtcDisplayParams::callbackFunction(char const*)+0x48>
4000d454:	e59f1238 	ldr	r1, [pc, #568]	; 4000d694 <LtcDisplayParams::callbackFunction(char const*)+0x3d0>
4000d458:	e28d300c 	add	r3, sp, #12
4000d45c:	e58d600c 	str	r6, [sp, #12]
4000d460:	e28d2010 	add	r2, sp, #16
4000d464:	e1a00005 	mov	r0, r5
4000d468:	eb006039 	bl	40025554 <Sscan::Char(char const*, char const*, char*, unsigned long&)>
4000d46c:	e3500000 	cmp	r0, #0
4000d470:	1a00000d 	bne	4000d4ac <LtcDisplayParams::callbackFunction(char const*)+0x1e8>
4000d474:	e59d300c 	ldr	r3, [sp, #12]
4000d478:	e28d2020 	add	r2, sp, #32
4000d47c:	e0823003 	add	r3, r2, r3
4000d480:	e5430010 	strb	r0, [r3, #-16]
4000d484:	e28d0010 	add	r0, sp, #16
4000d488:	eb002bf7 	bl	4001846c <pixel::pixel_get_type(char const*)>
4000d48c:	e5943000 	ldr	r3, [r4]
4000d490:	e350000e 	cmp	r0, #14
4000d494:	15c40006 	strbne	r0, [r4, #6]
4000d498:	03a02003 	moveq	r2, #3
4000d49c:	03c33004 	biceq	r3, r3, #4
4000d4a0:	13833004 	orrne	r3, r3, #4
4000d4a4:	05c42006 	strbeq	r2, [r4, #6]
4000d4a8:	eaffff97 	b	4000d30c <LtcDisplayParams::callbackFunction(char const*)+0x48>
4000d4ac:	e59f11e4 	ldr	r1, [pc, #484]	; 4000d698 <LtcDisplayParams::callbackFunction(char const*)+0x3d4>
4000d4b0:	e3a03003 	mov	r3, #3
4000d4b4:	e58d300c 	str	r3, [sp, #12]
4000d4b8:	e28d2010 	add	r2, sp, #16
4000d4bc:	e28d300c 	add	r3, sp, #12
4000d4c0:	e1a00005 	mov	r0, r5
4000d4c4:	eb006022 	bl	40025554 <Sscan::Char(char const*, char const*, char*, unsigned long&)>
4000d4c8:	e3500000 	cmp	r0, #0
4000d4cc:	1a00000c 	bne	4000d504 <LtcDisplayParams::callbackFunction(char const*)+0x240>
4000d4d0:	e59d300c 	ldr	r3, [sp, #12]
4000d4d4:	e28d2020 	add	r2, sp, #32
4000d4d8:	e0823003 	add	r3, r2, r3
4000d4dc:	e5430010 	strb	r0, [r3, #-16]
4000d4e0:	e28d0010 	add	r0, sp, #16
4000d4e4:	eb002bfa 	bl	400184d4 <pixel::pixel_get_map(char const*)>
4000d4e8:	e3500006 	cmp	r0, #6
4000d4ec:	15c40008 	strbne	r0, [r4, #8]
4000d4f0:	15943000 	ldrne	r3, [r4]
4000d4f4:	13833010 	orrne	r3, r3, #16
4000d4f8:	1affff83 	bne	4000d30c <LtcDisplayParams::callbackFunction(char const*)+0x48>
4000d4fc:	e28dd024 	add	sp, sp, #36	; 0x24
4000d500:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
4000d504:	e59f1190 	ldr	r1, [pc, #400]	; 4000d69c <LtcDisplayParams::callbackFunction(char const*)+0x3d8>
4000d508:	e28d2007 	add	r2, sp, #7
4000d50c:	e1a00005 	mov	r0, r5
4000d510:	eb0060f1 	bl	400258dc <Sscan::Uint8(char const*, char const*, unsigned char&)>
4000d514:	e3500000 	cmp	r0, #0
4000d518:	1a000006 	bne	4000d538 <LtcDisplayParams::callbackFunction(char const*)+0x274>
4000d51c:	e5dd3007 	ldrb	r3, [sp, #7]
4000d520:	e3530000 	cmp	r3, #0
4000d524:	15c43009 	strbne	r3, [r4, #9]
4000d528:	15943000 	ldrne	r3, [r4]
4000d52c:	13833020 	orrne	r3, r3, #32
4000d530:	1affff75 	bne	4000d30c <LtcDisplayParams::callbackFunction(char const*)+0x48>
4000d534:	eafffff0 	b	4000d4fc <LtcDisplayParams::callbackFunction(char const*)+0x238>
4000d538:	e59f1160 	ldr	r1, [pc, #352]	; 4000d6a0 <LtcDisplayParams::callbackFunction(char const*)+0x3dc>
4000d53c:	e3a03004 	mov	r3, #4
4000d540:	e58d300c 	str	r3, [sp, #12]
4000d544:	e28d2010 	add	r2, sp, #16
4000d548:	e28d300c 	add	r3, sp, #12
4000d54c:	e1a00005 	mov	r0, r5
4000d550:	eb005fff 	bl	40025554 <Sscan::Char(char const*, char const*, char*, unsigned long&)>
4000d554:	e3500000 	cmp	r0, #0
4000d558:	1a00001c 	bne	4000d5d0 <LtcDisplayParams::callbackFunction(char const*)+0x30c>
4000d55c:	e59d300c 	ldr	r3, [sp, #12]
4000d560:	e28d2020 	add	r2, sp, #32
4000d564:	e59f1138 	ldr	r1, [pc, #312]	; 4000d6a4 <LtcDisplayParams::callbackFunction(char const*)+0x3e0>
4000d568:	e0823003 	add	r3, r2, r3
4000d56c:	e5430010 	strb	r0, [r3, #-16]
4000d570:	e28de010 	add	lr, sp, #16
4000d574:	e241c001 	sub	ip, r1, #1
4000d578:	e4de3001 	ldrb	r3, [lr], #1
4000d57c:	e2432041 	sub	r2, r3, #65	; 0x41
4000d580:	e1a05003 	mov	r5, r3
4000d584:	e3520019 	cmp	r2, #25
4000d588:	e5fc2001 	ldrb	r2, [ip, #1]!
4000d58c:	92835020 	addls	r5, r3, #32
4000d590:	e2426041 	sub	r6, r2, #65	; 0x41
4000d594:	e3560019 	cmp	r6, #25
4000d598:	92822020 	addls	r2, r2, #32
4000d59c:	e1520005 	cmp	r2, r5
4000d5a0:	1a000005 	bne	4000d5bc <LtcDisplayParams::callbackFunction(char const*)+0x2f8>
4000d5a4:	e3530000 	cmp	r3, #0
4000d5a8:	1afffff2 	bne	4000d578 <LtcDisplayParams::callbackFunction(char const*)+0x2b4>
4000d5ac:	e5943000 	ldr	r3, [r4]
4000d5b0:	e5c4000a 	strb	r0, [r4, #10]
4000d5b4:	e3833040 	orr	r3, r3, #64	; 0x40
4000d5b8:	eaffff53 	b	4000d30c <LtcDisplayParams::callbackFunction(char const*)+0x48>
4000d5bc:	e2800001 	add	r0, r0, #1
4000d5c0:	e2811005 	add	r1, r1, #5
4000d5c4:	e3500003 	cmp	r0, #3
4000d5c8:	1affffe8 	bne	4000d570 <LtcDisplayParams::callbackFunction(char const*)+0x2ac>
4000d5cc:	eaffffca 	b	4000d4fc <LtcDisplayParams::callbackFunction(char const*)+0x238>
4000d5d0:	e59f70d0 	ldr	r7, [pc, #208]	; 4000d6a8 <LtcDisplayParams::callbackFunction(char const*)+0x3e4>
4000d5d4:	e3a06000 	mov	r6, #0
4000d5d8:	e28d2008 	add	r2, sp, #8
4000d5dc:	e1a01007 	mov	r1, r7
4000d5e0:	e1a00005 	mov	r0, r5
4000d5e4:	eb006049 	bl	40025710 <Sscan::Hex24Uint32(char const*, char const*, unsigned long&)>
4000d5e8:	e3500000 	cmp	r0, #0
4000d5ec:	1a000007 	bne	4000d610 <LtcDisplayParams::callbackFunction(char const*)+0x34c>
4000d5f0:	e0843106 	add	r3, r4, r6, lsl #2
4000d5f4:	e59d2008 	ldr	r2, [sp, #8]
4000d5f8:	e583200b 	str	r2, [r3, #11]
4000d5fc:	e3a02b02 	mov	r2, #2048	; 0x800
4000d600:	e5943000 	ldr	r3, [r4]
4000d604:	e1836612 	orr	r6, r3, r2, lsl r6
4000d608:	e5846000 	str	r6, [r4]
4000d60c:	eaffffba 	b	4000d4fc <LtcDisplayParams::callbackFunction(char const*)+0x238>
4000d610:	e2866001 	add	r6, r6, #1
4000d614:	e2877018 	add	r7, r7, #24
4000d618:	e3560006 	cmp	r6, #6
4000d61c:	1affffed 	bne	4000d5d8 <LtcDisplayParams::callbackFunction(char const*)+0x314>
4000d620:	e59f1084 	ldr	r1, [pc, #132]	; 4000d6ac <LtcDisplayParams::callbackFunction(char const*)+0x3e8>
4000d624:	e3a03008 	mov	r3, #8
4000d628:	e58d300c 	str	r3, [sp, #12]
4000d62c:	e2842024 	add	r2, r4, #36	; 0x24
4000d630:	e28d300c 	add	r3, sp, #12
4000d634:	e1a00005 	mov	r0, r5
4000d638:	eb005fc5 	bl	40025554 <Sscan::Char(char const*, char const*, char*, unsigned long&)>
4000d63c:	e3500000 	cmp	r0, #0
4000d640:	1affffad 	bne	4000d4fc <LtcDisplayParams::callbackFunction(char const*)+0x238>
4000d644:	e59d300c 	ldr	r3, [sp, #12]
4000d648:	e3e01023 	mvn	r1, #35	; 0x23
4000d64c:	e0411004 	sub	r1, r1, r4
4000d650:	e3a02020 	mov	r2, #32
4000d654:	e2833024 	add	r3, r3, #36	; 0x24
4000d658:	e0843003 	add	r3, r4, r3
4000d65c:	e0810003 	add	r0, r1, r3
4000d660:	e3500007 	cmp	r0, #7
4000d664:	94c32001 	strbls	r2, [r3], #1
4000d668:	9afffffb 	bls	4000d65c <LtcDisplayParams::callbackFunction(char const*)+0x398>
4000d66c:	e5943000 	ldr	r3, [r4]
4000d670:	e3833c01 	orr	r3, r3, #256	; 0x100
4000d674:	eaffff24 	b	4000d30c <LtcDisplayParams::callbackFunction(char const*)+0x48>
4000d678:	40030e73 	andmi	r0, r3, r3, ror lr
4000d67c:	40030e63 	andmi	r0, r3, r3, ror #28
4000d680:	40030e56 	andmi	r0, r3, r6, asr lr
4000d684:	40030cf4 	strdmi	r0, [r3], -r4
4000d688:	40030e44 	andmi	r0, r3, r4, asr #28
4000d68c:	40030d8d 	andmi	r0, r3, sp, lsl #27
4000d690:	40030cfd 	strdmi	r0, [r3], -sp
4000d694:	40032db4 			; <UNDEFINED> instruction: 0x40032db4
4000d698:	40032da4 	andmi	r2, r3, r4, lsr #27
4000d69c:	40030e3a 	andmi	r0, r3, sl, lsr lr
4000d6a0:	40030e29 	andmi	r0, r3, r9, lsr #28
4000d6a4:	40030e8f 	andmi	r0, r3, pc, lsl #29
4000d6a8:	40030d99 	mulmi	r3, r9, sp
4000d6ac:	40030d84 	andmi	r0, r3, r4, lsl #27

4000d6b0 <LtcDisplayParams::staticCallbackFunction(void*, char const*)>:
4000d6b0:	eaffff03 	b	4000d2c4 <LtcDisplayParams::callbackFunction(char const*)>

4000d6b4 <LtcDisplayParams::Builder(ltcdisplayparams::Params const*, char*, unsigned long, unsigned long&)>:
4000d6b4:	e3510000 	cmp	r1, #0
4000d6b8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000d6bc:	e1a04000 	mov	r4, r0
4000d6c0:	e24dd020 	sub	sp, sp, #32
4000d6c4:	e1a05002 	mov	r5, r2
4000d6c8:	e1a06003 	mov	r6, r3
4000d6cc:	0a000006 	beq	4000d6ec <LtcDisplayParams::Builder(ltcdisplayparams::Params const*, char*, unsigned long, unsigned long&)+0x38>
4000d6d0:	e1a03000 	mov	r3, r0
4000d6d4:	e281002e 	add	r0, r1, #46	; 0x2e
4000d6d8:	e1500001 	cmp	r0, r1
4000d6dc:	0a000003 	beq	4000d6f0 <LtcDisplayParams::Builder(ltcdisplayparams::Params const*, char*, unsigned long, unsigned long&)+0x3c>
4000d6e0:	e4d12001 	ldrb	r2, [r1], #1
4000d6e4:	e4c32001 	strb	r2, [r3], #1
4000d6e8:	eafffffa 	b	4000d6d8 <LtcDisplayParams::Builder(ltcdisplayparams::Params const*, char*, unsigned long, unsigned long&)+0x24>
4000d6ec:	ebfffe7e 	bl	4000d0ec <LtcDisplayParamsStore::Copy(ltcdisplayparams::Params*)>
4000d6f0:	e59f12c8 	ldr	r1, [pc, #712]	; 4000d9c0 <LtcDisplayParams::Builder(ltcdisplayparams::Params const*, char*, unsigned long, unsigned long&)+0x30c>
4000d6f4:	e1a03006 	mov	r3, r6
4000d6f8:	e1a02005 	mov	r2, r5
4000d6fc:	e28d0014 	add	r0, sp, #20
4000d700:	eb005df9 	bl	40024eec <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)>
4000d704:	e59f12b8 	ldr	r1, [pc, #696]	; 4000d9c4 <LtcDisplayParams::Builder(ltcdisplayparams::Params const*, char*, unsigned long, unsigned long&)+0x310>
4000d708:	e28d0014 	add	r0, sp, #20
4000d70c:	eb005e8d 	bl	40025148 <PropertiesBuilder::AddComment(char const*)>
4000d710:	e5943000 	ldr	r3, [r4]
4000d714:	e28d0014 	add	r0, sp, #20
4000d718:	e5d4202c 	ldrb	r2, [r4, #44]	; 0x2c
4000d71c:	e7e034d3 	ubfx	r3, r3, #9, #1
4000d720:	e59f12a0 	ldr	r1, [pc, #672]	; 4000d9c8 <LtcDisplayParams::Builder(ltcdisplayparams::Params const*, char*, unsigned long, unsigned long&)+0x314>
4000d724:	ebfffdf2 	bl	4000cef4 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]>
4000d728:	e59f129c 	ldr	r1, [pc, #668]	; 4000d9cc <LtcDisplayParams::Builder(ltcdisplayparams::Params const*, char*, unsigned long, unsigned long&)+0x318>
4000d72c:	e28d0014 	add	r0, sp, #20
4000d730:	eb005e84 	bl	40025148 <PropertiesBuilder::AddComment(char const*)>
4000d734:	e5943000 	ldr	r3, [r4]
4000d738:	e28d0014 	add	r0, sp, #20
4000d73c:	e5d4202d 	ldrb	r2, [r4, #45]	; 0x2d
4000d740:	e7e03553 	ubfx	r3, r3, #10, #1
4000d744:	e59f1284 	ldr	r1, [pc, #644]	; 4000d9d0 <LtcDisplayParams::Builder(ltcdisplayparams::Params const*, char*, unsigned long, unsigned long&)+0x31c>
4000d748:	ebfffde9 	bl	4000cef4 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]>
4000d74c:	e59f1280 	ldr	r1, [pc, #640]	; 4000d9d4 <LtcDisplayParams::Builder(ltcdisplayparams::Params const*, char*, unsigned long, unsigned long&)+0x320>
4000d750:	e28d0014 	add	r0, sp, #20
4000d754:	eb005e7b 	bl	40025148 <PropertiesBuilder::AddComment(char const*)>
4000d758:	e5d40004 	ldrb	r0, [r4, #4]
4000d75c:	e5943000 	ldr	r3, [r4]
4000d760:	e59f1270 	ldr	r1, [pc, #624]	; 4000d9d8 <LtcDisplayParams::Builder(ltcdisplayparams::Params const*, char*, unsigned long, unsigned long&)+0x324>
4000d764:	e3500001 	cmp	r0, #1
4000d768:	e59f226c 	ldr	r2, [pc, #620]	; 4000d9dc <LtcDisplayParams::Builder(ltcdisplayparams::Params const*, char*, unsigned long, unsigned long&)+0x328>
4000d76c:	e2033001 	and	r3, r3, #1
4000d770:	11a02001 	movne	r2, r1
4000d774:	e28d0014 	add	r0, sp, #20
4000d778:	e59f1260 	ldr	r1, [pc, #608]	; 4000d9e0 <LtcDisplayParams::Builder(ltcdisplayparams::Params const*, char*, unsigned long, unsigned long&)+0x32c>
4000d77c:	ebfffe1c 	bl	4000cff4 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]>
4000d780:	e5943000 	ldr	r3, [r4]
4000d784:	e28d0014 	add	r0, sp, #20
4000d788:	e5d42005 	ldrb	r2, [r4, #5]
4000d78c:	e7e030d3 	ubfx	r3, r3, #1, #1
4000d790:	e59f124c 	ldr	r1, [pc, #588]	; 4000d9e4 <LtcDisplayParams::Builder(ltcdisplayparams::Params const*, char*, unsigned long, unsigned long&)+0x330>
4000d794:	ebfffdd6 	bl	4000cef4 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]>
4000d798:	e59f1248 	ldr	r1, [pc, #584]	; 4000d9e8 <LtcDisplayParams::Builder(ltcdisplayparams::Params const*, char*, unsigned long, unsigned long&)+0x334>
4000d79c:	e28d0014 	add	r0, sp, #20
4000d7a0:	eb005e68 	bl	40025148 <PropertiesBuilder::AddComment(char const*)>
4000d7a4:	e5943000 	ldr	r3, [r4]
4000d7a8:	e28d0014 	add	r0, sp, #20
4000d7ac:	e5d42009 	ldrb	r2, [r4, #9]
4000d7b0:	e7e032d3 	ubfx	r3, r3, #5, #1
4000d7b4:	e59f1230 	ldr	r1, [pc, #560]	; 4000d9ec <LtcDisplayParams::Builder(ltcdisplayparams::Params const*, char*, unsigned long, unsigned long&)+0x338>
4000d7b8:	ebfffdcd 	bl	4000cef4 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]>
4000d7bc:	e5d4300a 	ldrb	r3, [r4, #10]
4000d7c0:	e3530000 	cmp	r3, #0
4000d7c4:	059f2224 	ldreq	r2, [pc, #548]	; 4000d9f0 <LtcDisplayParams::Builder(ltcdisplayparams::Params const*, char*, unsigned long, unsigned long&)+0x33c>
4000d7c8:	0a000003 	beq	4000d7dc <LtcDisplayParams::Builder(ltcdisplayparams::Params const*, char*, unsigned long, unsigned long&)+0x128>
4000d7cc:	e59f1220 	ldr	r1, [pc, #544]	; 4000d9f4 <LtcDisplayParams::Builder(ltcdisplayparams::Params const*, char*, unsigned long, unsigned long&)+0x340>
4000d7d0:	e3530001 	cmp	r3, #1
4000d7d4:	e59f221c 	ldr	r2, [pc, #540]	; 4000d9f8 <LtcDisplayParams::Builder(ltcdisplayparams::Params const*, char*, unsigned long, unsigned long&)+0x344>
4000d7d8:	11a02001 	movne	r2, r1
4000d7dc:	e5943000 	ldr	r3, [r4]
4000d7e0:	e28d0014 	add	r0, sp, #20
4000d7e4:	e59f1210 	ldr	r1, [pc, #528]	; 4000d9fc <LtcDisplayParams::Builder(ltcdisplayparams::Params const*, char*, unsigned long, unsigned long&)+0x348>
4000d7e8:	e3a05000 	mov	r5, #0
4000d7ec:	e7e03353 	ubfx	r3, r3, #6, #1
4000d7f0:	e3a07b02 	mov	r7, #2048	; 0x800
4000d7f4:	e59f6204 	ldr	r6, [pc, #516]	; 4000da00 <LtcDisplayParams::Builder(ltcdisplayparams::Params const*, char*, unsigned long, unsigned long&)+0x34c>
4000d7f8:	e3a08006 	mov	r8, #6
4000d7fc:	ebfffdfc 	bl	4000cff4 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]>
4000d800:	e5943000 	ldr	r3, [r4]
4000d804:	e2852002 	add	r2, r5, #2
4000d808:	e58d8000 	str	r8, [sp]
4000d80c:	e1a01006 	mov	r1, r6
4000d810:	e0033517 	and	r3, r3, r7, lsl r5
4000d814:	e28d0014 	add	r0, sp, #20
4000d818:	e0842102 	add	r2, r4, r2, lsl #2
4000d81c:	e2866018 	add	r6, r6, #24
4000d820:	e1530517 	cmp	r3, r7, lsl r5
4000d824:	e2855001 	add	r5, r5, #1
4000d828:	e5922003 	ldr	r2, [r2, #3]
4000d82c:	03a03001 	moveq	r3, #1
4000d830:	13a03000 	movne	r3, #0
4000d834:	eb005d7e 	bl	40024e34 <PropertiesBuilder::AddHex(char const*, unsigned long, bool, int)>
4000d838:	e3550006 	cmp	r5, #6
4000d83c:	1affffef 	bne	4000d800 <LtcDisplayParams::Builder(ltcdisplayparams::Params const*, char*, unsigned long, unsigned long&)+0x14c>
4000d840:	e59f11bc 	ldr	r1, [pc, #444]	; 4000da04 <LtcDisplayParams::Builder(ltcdisplayparams::Params const*, char*, unsigned long, unsigned long&)+0x350>
4000d844:	e28d0014 	add	r0, sp, #20
4000d848:	eb005e3e 	bl	40025148 <PropertiesBuilder::AddComment(char const*)>
4000d84c:	e5d40023 	ldrb	r0, [r4, #35]	; 0x23
4000d850:	e5943000 	ldr	r3, [r4]
4000d854:	e59f117c 	ldr	r1, [pc, #380]	; 4000d9d8 <LtcDisplayParams::Builder(ltcdisplayparams::Params const*, char*, unsigned long, unsigned long&)+0x324>
4000d858:	e3500000 	cmp	r0, #0
4000d85c:	e59f2178 	ldr	r2, [pc, #376]	; 4000d9dc <LtcDisplayParams::Builder(ltcdisplayparams::Params const*, char*, unsigned long, unsigned long&)+0x328>
4000d860:	e28d0014 	add	r0, sp, #20
4000d864:	e7e033d3 	ubfx	r3, r3, #7, #1
4000d868:	11a02001 	movne	r2, r1
4000d86c:	e59f1194 	ldr	r1, [pc, #404]	; 4000da08 <LtcDisplayParams::Builder(ltcdisplayparams::Params const*, char*, unsigned long, unsigned long&)+0x354>
4000d870:	ebfffddf 	bl	4000cff4 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]>
4000d874:	e5d40006 	ldrb	r0, [r4, #6]
4000d878:	eb002af4 	bl	40018450 <pixel::pixel_get_type(pixel::Type)>
4000d87c:	e5943000 	ldr	r3, [r4]
4000d880:	e1a02000 	mov	r2, r0
4000d884:	e59f1180 	ldr	r1, [pc, #384]	; 4000da0c <LtcDisplayParams::Builder(ltcdisplayparams::Params const*, char*, unsigned long, unsigned long&)+0x358>
4000d888:	e28d0014 	add	r0, sp, #20
4000d88c:	e7e03153 	ubfx	r3, r3, #2, #1
4000d890:	ebfffdd7 	bl	4000cff4 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]>
4000d894:	e59f1174 	ldr	r1, [pc, #372]	; 4000da10 <LtcDisplayParams::Builder(ltcdisplayparams::Params const*, char*, unsigned long, unsigned long&)+0x35c>
4000d898:	e28d0014 	add	r0, sp, #20
4000d89c:	eb005e29 	bl	40025148 <PropertiesBuilder::AddComment(char const*)>
4000d8a0:	e5943000 	ldr	r3, [r4]
4000d8a4:	e2133010 	ands	r3, r3, #16
4000d8a8:	1a00000a 	bne	4000d8d8 <LtcDisplayParams::Builder(ltcdisplayparams::Params const*, char*, unsigned long, unsigned long&)+0x224>
4000d8ac:	e5d42006 	ldrb	r2, [r4, #6]
4000d8b0:	e20210f7 	and	r1, r2, #247	; 0xf7
4000d8b4:	e3510001 	cmp	r1, #1
4000d8b8:	0a000005 	beq	4000d8d4 <LtcDisplayParams::Builder(ltcdisplayparams::Params const*, char*, unsigned long, unsigned long&)+0x220>
4000d8bc:	e3520008 	cmp	r2, #8
4000d8c0:	03a03004 	moveq	r3, #4
4000d8c4:	0a000002 	beq	4000d8d4 <LtcDisplayParams::Builder(ltcdisplayparams::Params const*, char*, unsigned long, unsigned long&)+0x220>
4000d8c8:	e352000a 	cmp	r2, #10
4000d8cc:	13a03002 	movne	r3, #2
4000d8d0:	03a03005 	moveq	r3, #5
4000d8d4:	e5c43008 	strb	r3, [r4, #8]
4000d8d8:	e5d40008 	ldrb	r0, [r4, #8]
4000d8dc:	e1a05004 	mov	r5, r4
4000d8e0:	eb002b18 	bl	40018548 <pixel::pixel_get_map(pixel::Map)>
4000d8e4:	e4953024 	ldr	r3, [r5], #36	; 0x24
4000d8e8:	e1a02000 	mov	r2, r0
4000d8ec:	e59f1120 	ldr	r1, [pc, #288]	; 4000da14 <LtcDisplayParams::Builder(ltcdisplayparams::Params const*, char*, unsigned long, unsigned long&)+0x360>
4000d8f0:	e28d0014 	add	r0, sp, #20
4000d8f4:	e7e03253 	ubfx	r3, r3, #4, #1
4000d8f8:	ebfffdbd 	bl	4000cff4 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]>
4000d8fc:	e59f1114 	ldr	r1, [pc, #276]	; 4000da18 <LtcDisplayParams::Builder(ltcdisplayparams::Params const*, char*, unsigned long, unsigned long&)+0x364>
4000d900:	e28d0014 	add	r0, sp, #20
4000d904:	eb005e0f 	bl	40025148 <PropertiesBuilder::AddComment(char const*)>
4000d908:	e28d3008 	add	r3, sp, #8
4000d90c:	e284002c 	add	r0, r4, #44	; 0x2c
4000d910:	e1a02003 	mov	r2, r3
4000d914:	e1500005 	cmp	r0, r5
4000d918:	14d51001 	ldrbne	r1, [r5], #1
4000d91c:	14c31001 	strbne	r1, [r3], #1
4000d920:	1afffffb 	bne	4000d914 <LtcDisplayParams::Builder(ltcdisplayparams::Params const*, char*, unsigned long, unsigned long&)+0x260>
4000d924:	e1dd11ba 	ldrh	r1, [sp, #26]
4000d928:	e3a03000 	mov	r3, #0
4000d92c:	e1dd51b8 	ldrh	r5, [sp, #24]
4000d930:	e5cd3010 	strb	r3, [sp, #16]
4000d934:	e1510005 	cmp	r1, r5
4000d938:	2a00000d 	bcs	4000d974 <LtcDisplayParams::Builder(ltcdisplayparams::Params const*, char*, unsigned long, unsigned long&)+0x2c0>
4000d93c:	e5943000 	ldr	r3, [r4]
4000d940:	e59d0014 	ldr	r0, [sp, #20]
4000d944:	e0455001 	sub	r5, r5, r1
4000d948:	e7e03453 	ubfx	r3, r3, #8, #1
4000d94c:	e1cd20f0 	strd	r2, [sp]
4000d950:	e0801001 	add	r1, r0, r1
4000d954:	e1a02005 	mov	r2, r5
4000d958:	e59f30bc 	ldr	r3, [pc, #188]	; 4000da1c <LtcDisplayParams::Builder(ltcdisplayparams::Params const*, char*, unsigned long, unsigned long&)+0x368>
4000d95c:	e5dd001c 	ldrb	r0, [sp, #28]
4000d960:	ebfffd89 	bl	4000cf8c <int PropertiesBuilder::add_part<char*>(char*, unsigned long, char const*, char*, bool, int) [clone .isra.0]>
4000d964:	e1550000 	cmp	r5, r0
4000d968:	a1dd31ba 	ldrhge	r3, [sp, #26]
4000d96c:	a0830000 	addge	r0, r3, r0
4000d970:	a1cd01ba 	strhge	r0, [sp, #26]
4000d974:	e5dd301c 	ldrb	r3, [sp, #28]
4000d978:	e3530000 	cmp	r3, #0
4000d97c:	0a00000a 	beq	4000d9ac <LtcDisplayParams::Builder(ltcdisplayparams::Params const*, char*, unsigned long, unsigned long&)+0x2f8>
4000d980:	e1dd21ba 	ldrh	r2, [sp, #26]
4000d984:	e59d3014 	ldr	r3, [sp, #20]
4000d988:	e0833002 	add	r3, r3, r2
4000d98c:	e3a0207d 	mov	r2, #125	; 0x7d
4000d990:	e5432001 	strb	r2, [r3, #-1]
4000d994:	e59d1014 	ldr	r1, [sp, #20]
4000d998:	e1dd31ba 	ldrh	r3, [sp, #26]
4000d99c:	e7c12003 	strb	r2, [r1, r3]
4000d9a0:	e1dd31ba 	ldrh	r3, [sp, #26]
4000d9a4:	e2833001 	add	r3, r3, #1
4000d9a8:	e1cd31ba 	strh	r3, [sp, #26]
4000d9ac:	e1dd21ba 	ldrh	r2, [sp, #26]
4000d9b0:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
4000d9b4:	e5832000 	str	r2, [r3]
4000d9b8:	e28dd020 	add	sp, sp, #32
4000d9bc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000d9c0:	40030e82 	andmi	r0, r3, r2, lsl #29
4000d9c4:	40030d0c 	andmi	r0, r3, ip, lsl #26
4000d9c8:	40030e73 	andmi	r0, r3, r3, ror lr
4000d9cc:	40030d1c 	andmi	r0, r3, ip, lsl sp
4000d9d0:	40030e63 	andmi	r0, r3, r3, ror #28
4000d9d4:	40030d2b 	andmi	r0, r3, fp, lsr #26
4000d9d8:	40030cfd 	strdmi	r0, [r3], -sp
4000d9dc:	40030cf4 	strdmi	r0, [r3], -r4
4000d9e0:	40030e56 	andmi	r0, r3, r6, asr lr
4000d9e4:	40030e44 	andmi	r0, r3, r4, asr #28
4000d9e8:	40030d33 	andmi	r0, r3, r3, lsr sp
4000d9ec:	40030e3a 	andmi	r0, r3, sl, lsr lr
4000d9f0:	4003097a 	andmi	r0, r3, sl, ror r9
4000d9f4:	40030d09 	andmi	r0, r3, r9, lsl #26
4000d9f8:	40030d04 	andmi	r0, r3, r4, lsl #26
4000d9fc:	40030e29 	andmi	r0, r3, r9, lsr #28
4000da00:	40030d99 	mulmi	r3, r9, sp
4000da04:	40030d49 	andmi	r0, r3, r9, asr #26
4000da08:	40030d8d 	andmi	r0, r3, sp, lsl #27
4000da0c:	40032db4 			; <UNDEFINED> instruction: 0x40032db4
4000da10:	40030d5b 	andmi	r0, r3, fp, asr sp
4000da14:	40032da4 	andmi	r2, r3, r4, lsr #27
4000da18:	40030d6f 	andmi	r0, r3, pc, ror #26
4000da1c:	40030d84 	andmi	r0, r3, r4, lsl #27

4000da20 <LtcDisplayParams::Set(LtcDisplayRgb*)>:
4000da20:	e5903000 	ldr	r3, [r0]
4000da24:	e3a0cb02 	mov	ip, #2048	; 0x800
4000da28:	e2811018 	add	r1, r1, #24
4000da2c:	e3130010 	tst	r3, #16
4000da30:	15d02008 	ldrbne	r2, [r0, #8]
4000da34:	15012008 	strne	r2, [r1, #-8]
4000da38:	e3130020 	tst	r3, #32
4000da3c:	15d03009 	ldrbne	r3, [r0, #9]
4000da40:	15813018 	strne	r3, [r1, #24]
4000da44:	e5903000 	ldr	r3, [r0]
4000da48:	e3130040 	tst	r3, #64	; 0x40
4000da4c:	15d0300a 	ldrbne	r3, [r0, #10]
4000da50:	15813030 	strne	r3, [r1, #48]	; 0x30
4000da54:	e3a03000 	mov	r3, #0
4000da58:	e5902000 	ldr	r2, [r0]
4000da5c:	e002231c 	and	r2, r2, ip, lsl r3
4000da60:	e152031c 	cmp	r2, ip, lsl r3
4000da64:	02832002 	addeq	r2, r3, #2
4000da68:	00802102 	addeq	r2, r0, r2, lsl #2
4000da6c:	05922003 	ldreq	r2, [r2, #3]
4000da70:	07812103 	streq	r2, [r1, r3, lsl #2]
4000da74:	e2833001 	add	r3, r3, #1
4000da78:	e3530006 	cmp	r3, #6
4000da7c:	1afffff5 	bne	4000da58 <LtcDisplayParams::Set(LtcDisplayRgb*)+0x38>
4000da80:	e12fff1e 	bx	lr

4000da84 <from_hex(char const*)>:
4000da84:	e5d03001 	ldrb	r3, [r0, #1]
4000da88:	e5d00000 	ldrb	r0, [r0]
4000da8c:	e3530039 	cmp	r3, #57	; 0x39
4000da90:	83833020 	orrhi	r3, r3, #32
4000da94:	92433030 	subls	r3, r3, #48	; 0x30
4000da98:	82433057 	subhi	r3, r3, #87	; 0x57
4000da9c:	e3500039 	cmp	r0, #57	; 0x39
4000daa0:	83800020 	orrhi	r0, r0, #32
4000daa4:	92400030 	subls	r0, r0, #48	; 0x30
4000daa8:	82400057 	subhi	r0, r0, #87	; 0x57
4000daac:	e1830200 	orr	r0, r3, r0, lsl #4
4000dab0:	e6ef0070 	uxtb	r0, r0
4000dab4:	e12fff1e 	bx	lr

4000dab8 <ltcetc::get_udp_terminator(char const*)>:
4000dab8:	e59f105c 	ldr	r1, [pc, #92]	; 4000db1c <ltcetc::get_udp_terminator(char const*)+0x64>
4000dabc:	e1a0c000 	mov	ip, r0
4000dac0:	e3a00000 	mov	r0, #0
4000dac4:	e92d4070 	push	{r4, r5, r6, lr}
4000dac8:	e24c4001 	sub	r4, ip, #1
4000dacc:	e241e001 	sub	lr, r1, #1
4000dad0:	e5f43001 	ldrb	r3, [r4, #1]!
4000dad4:	e2432041 	sub	r2, r3, #65	; 0x41
4000dad8:	e1a05003 	mov	r5, r3
4000dadc:	e3520019 	cmp	r2, #25
4000dae0:	e5fe2001 	ldrb	r2, [lr, #1]!
4000dae4:	92835020 	addls	r5, r3, #32
4000dae8:	e2426041 	sub	r6, r2, #65	; 0x41
4000daec:	e3560019 	cmp	r6, #25
4000daf0:	92822020 	addls	r2, r2, #32
4000daf4:	e1520005 	cmp	r2, r5
4000daf8:	1a000002 	bne	4000db08 <ltcetc::get_udp_terminator(char const*)+0x50>
4000dafc:	e3530000 	cmp	r3, #0
4000db00:	1afffff2 	bne	4000dad0 <ltcetc::get_udp_terminator(char const*)+0x18>
4000db04:	e8bd8070 	pop	{r4, r5, r6, pc}
4000db08:	e2800001 	add	r0, r0, #1
4000db0c:	e2811005 	add	r1, r1, #5
4000db10:	e3500004 	cmp	r0, #4
4000db14:	1affffeb 	bne	4000dac8 <ltcetc::get_udp_terminator(char const*)+0x10>
4000db18:	e8bd8070 	pop	{r4, r5, r6, pc}
4000db1c:	40030f3d 	andmi	r0, r3, sp, lsr pc

4000db20 <ltcetc::get_udp_terminator(ltcetc::UdpTerminator)>:
4000db20:	e3500003 	cmp	r0, #3
4000db24:	d0800100 	addle	r0, r0, r0, lsl #2
4000db28:	d59f3008 	ldrle	r3, [pc, #8]	; 4000db38 <ltcetc::get_udp_terminator(ltcetc::UdpTerminator)+0x18>
4000db2c:	d0830000 	addle	r0, r3, r0
4000db30:	c59f0004 	ldrgt	r0, [pc, #4]	; 4000db3c <ltcetc::get_udp_terminator(ltcetc::UdpTerminator)+0x1c>
4000db34:	e12fff1e 	bx	lr
4000db38:	40030f3d 	andmi	r0, r3, sp, lsr pc
4000db3c:	40030e9e 	mulmi	r3, lr, lr

4000db40 <LtcEtc::Start()>:
4000db40:	e5903004 	ldr	r3, [r0, #4]
4000db44:	e92d4010 	push	{r4, lr}
4000db48:	e3530000 	cmp	r3, #0
4000db4c:	e1a04000 	mov	r4, r0
4000db50:	0a000005 	beq	4000db6c <LtcEtc::Start()+0x2c>
4000db54:	e1d000bc 	ldrh	r0, [r0, #12]
4000db58:	e3500000 	cmp	r0, #0
4000db5c:	0a000002 	beq	4000db6c <LtcEtc::Start()+0x2c>
4000db60:	e3a01000 	mov	r1, #0
4000db64:	eb0051b7 	bl	40022248 <net::udp_begin(unsigned short, void (*)(unsigned char const*, unsigned long, unsigned long, unsigned short))>
4000db68:	e5840014 	str	r0, [r4, #20]
4000db6c:	e1d400be 	ldrh	r0, [r4, #14]
4000db70:	e3500000 	cmp	r0, #0
4000db74:	0a000008 	beq	4000db9c <LtcEtc::Start()+0x5c>
4000db78:	e59f1080 	ldr	r1, [pc, #128]	; 4000dc00 <LtcEtc::Start()+0xc0>
4000db7c:	eb0051b1 	bl	40022248 <net::udp_begin(unsigned short, void (*)(unsigned char const*, unsigned long, unsigned long, unsigned short))>
4000db80:	e5840018 	str	r0, [r4, #24]
4000db84:	e3500000 	cmp	r0, #0
4000db88:	ba000003 	blt	4000db9c <LtcEtc::Start()+0x5c>
4000db8c:	e5940008 	ldr	r0, [r4, #8]
4000db90:	e3500000 	cmp	r0, #0
4000db94:	0a000000 	beq	4000db9c <LtcEtc::Start()+0x5c>
4000db98:	eb004da2 	bl	40021228 <net::igmp_join(unsigned long)>
4000db9c:	e59f2060 	ldr	r2, [pc, #96]	; 4000dc04 <LtcEtc::Start()+0xc4>
4000dba0:	e3a01005 	mov	r1, #5
4000dba4:	e59f005c 	ldr	r0, [pc, #92]	; 4000dc08 <LtcEtc::Start()+0xc8>
4000dba8:	e1a03002 	mov	r3, r2
4000dbac:	e2511001 	subs	r1, r1, #1
4000dbb0:	24d0c001 	ldrbcs	ip, [r0], #1
4000dbb4:	24c2c001 	strbcs	ip, [r2], #1
4000dbb8:	2afffffb 	bcs	4000dbac <LtcEtc::Start()+0x6c>
4000dbbc:	e59f0048 	ldr	r0, [pc, #72]	; 4000dc0c <LtcEtc::Start()+0xcc>
4000dbc0:	e3a0200f 	mov	r2, #15
4000dbc4:	e59f1044 	ldr	r1, [pc, #68]	; 4000dc10 <LtcEtc::Start()+0xd0>
4000dbc8:	e2522001 	subs	r2, r2, #1
4000dbcc:	24d0c001 	ldrbcs	ip, [r0], #1
4000dbd0:	24c1c001 	strbcs	ip, [r1], #1
4000dbd4:	2afffffb 	bcs	4000dbc8 <LtcEtc::Start()+0x88>
4000dbd8:	e3a02020 	mov	r2, #32
4000dbdc:	e5c32016 	strb	r2, [r3, #22]
4000dbe0:	e5c32019 	strb	r2, [r3, #25]
4000dbe4:	e5c3201c 	strb	r2, [r3, #28]
4000dbe8:	e5c3201f 	strb	r2, [r3, #31]
4000dbec:	e3a02046 	mov	r2, #70	; 0x46
4000dbf0:	e5c32020 	strb	r2, [r3, #32]
4000dbf4:	e3a02037 	mov	r2, #55	; 0x37
4000dbf8:	e5c32021 	strb	r2, [r3, #33]	; 0x21
4000dbfc:	e8bd8010 	pop	{r4, pc}
4000dc00:	4000deac 	andmi	sp, r0, ip, lsr #29
4000dc04:	4005770c 	andmi	r7, r5, ip, lsl #14
4000dc08:	40030f38 	andmi	r0, r3, r8, lsr pc
4000dc0c:	40030f29 	andmi	r0, r3, r9, lsr #30
4000dc10:	40057711 	andmi	r7, r5, r1, lsl r7

4000dc14 <LtcEtc::Send(midi::Timecode const*)>:
4000dc14:	e5903014 	ldr	r3, [r0, #20]
4000dc18:	e3530000 	cmp	r3, #0
4000dc1c:	b12fff1e 	bxlt	lr
4000dc20:	e92d4007 	push	{r0, r1, r2, lr}
4000dc24:	e1a0c000 	mov	ip, r0
4000dc28:	e5d13004 	ldrb	r3, [r1, #4]
4000dc2c:	e5d12003 	ldrb	r2, [r1, #3]
4000dc30:	e1a03283 	lsl	r3, r3, #5
4000dc34:	e202201f 	and	r2, r2, #31
4000dc38:	e2033060 	and	r3, r3, #96	; 0x60
4000dc3c:	e1833002 	orr	r3, r3, r2
4000dc40:	e59f2128 	ldr	r2, [pc, #296]	; 4000dd70 <LtcEtc::Send(midi::Timecode const*)+0x15c>
4000dc44:	e1a00243 	asr	r0, r3, #4
4000dc48:	e203300f 	and	r3, r3, #15
4000dc4c:	e3530009 	cmp	r3, #9
4000dc50:	e2800030 	add	r0, r0, #48	; 0x30
4000dc54:	e5c20014 	strb	r0, [r2, #20]
4000dc58:	92833030 	addls	r3, r3, #48	; 0x30
4000dc5c:	82833037 	addhi	r3, r3, #55	; 0x37
4000dc60:	e5c23015 	strb	r3, [r2, #21]
4000dc64:	e5d10002 	ldrb	r0, [r1, #2]
4000dc68:	e1a03220 	lsr	r3, r0, #4
4000dc6c:	e350009f 	cmp	r0, #159	; 0x9f
4000dc70:	92833030 	addls	r3, r3, #48	; 0x30
4000dc74:	82833037 	addhi	r3, r3, #55	; 0x37
4000dc78:	e5c23017 	strb	r3, [r2, #23]
4000dc7c:	e5d13002 	ldrb	r3, [r1, #2]
4000dc80:	e203300f 	and	r3, r3, #15
4000dc84:	e3530009 	cmp	r3, #9
4000dc88:	92833030 	addls	r3, r3, #48	; 0x30
4000dc8c:	82833037 	addhi	r3, r3, #55	; 0x37
4000dc90:	e5c23018 	strb	r3, [r2, #24]
4000dc94:	e5d10001 	ldrb	r0, [r1, #1]
4000dc98:	e1a03220 	lsr	r3, r0, #4
4000dc9c:	e350009f 	cmp	r0, #159	; 0x9f
4000dca0:	92833030 	addls	r3, r3, #48	; 0x30
4000dca4:	82833037 	addhi	r3, r3, #55	; 0x37
4000dca8:	e5c2301a 	strb	r3, [r2, #26]
4000dcac:	e5d13001 	ldrb	r3, [r1, #1]
4000dcb0:	e203300f 	and	r3, r3, #15
4000dcb4:	e3530009 	cmp	r3, #9
4000dcb8:	92833030 	addls	r3, r3, #48	; 0x30
4000dcbc:	82833037 	addhi	r3, r3, #55	; 0x37
4000dcc0:	e5c2301b 	strb	r3, [r2, #27]
4000dcc4:	e5d10000 	ldrb	r0, [r1]
4000dcc8:	e1a03220 	lsr	r3, r0, #4
4000dccc:	e350009f 	cmp	r0, #159	; 0x9f
4000dcd0:	92833030 	addls	r3, r3, #48	; 0x30
4000dcd4:	82833037 	addhi	r3, r3, #55	; 0x37
4000dcd8:	e5c2301d 	strb	r3, [r2, #29]
4000dcdc:	e5d13000 	ldrb	r3, [r1]
4000dce0:	e203300f 	and	r3, r3, #15
4000dce4:	e3530009 	cmp	r3, #9
4000dce8:	92833030 	addls	r3, r3, #48	; 0x30
4000dcec:	82833037 	addhi	r3, r3, #55	; 0x37
4000dcf0:	e5c2301e 	strb	r3, [r2, #30]
4000dcf4:	e59c3010 	ldr	r3, [ip, #16]
4000dcf8:	e3530002 	cmp	r3, #2
4000dcfc:	0a000006 	beq	4000dd1c <LtcEtc::Send(midi::Timecode const*)+0x108>
4000dd00:	e3530003 	cmp	r3, #3
4000dd04:	0a000013 	beq	4000dd58 <LtcEtc::Send(midi::Timecode const*)+0x144>
4000dd08:	e3530001 	cmp	r3, #1
4000dd0c:	03a0300d 	moveq	r3, #13
4000dd10:	0a000002 	beq	4000dd20 <LtcEtc::Send(midi::Timecode const*)+0x10c>
4000dd14:	e3a02022 	mov	r2, #34	; 0x22
4000dd18:	ea000002 	b	4000dd28 <LtcEtc::Send(midi::Timecode const*)+0x114>
4000dd1c:	e3a0300a 	mov	r3, #10
4000dd20:	e5c23022 	strb	r3, [r2, #34]	; 0x22
4000dd24:	e3a02023 	mov	r2, #35	; 0x23
4000dd28:	e59c0014 	ldr	r0, [ip, #20]
4000dd2c:	e59c3004 	ldr	r3, [ip, #4]
4000dd30:	e1dc10bc 	ldrh	r1, [ip, #12]
4000dd34:	e59fc038 	ldr	ip, [pc, #56]	; 4000dd74 <LtcEtc::Send(midi::Timecode const*)+0x160>
4000dd38:	e59cc000 	ldr	ip, [ip]
4000dd3c:	e35c0000 	cmp	ip, #0
4000dd40:	0a000002 	beq	4000dd50 <LtcEtc::Send(midi::Timecode const*)+0x13c>
4000dd44:	e58d1000 	str	r1, [sp]
4000dd48:	e59f1020 	ldr	r1, [pc, #32]	; 4000dd70 <LtcEtc::Send(midi::Timecode const*)+0x15c>
4000dd4c:	eb005189 	bl	40022378 <net::udp_send(long, unsigned char const*, unsigned long, unsigned long, unsigned short)>
4000dd50:	e28dd00c 	add	sp, sp, #12
4000dd54:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4000dd58:	e3a0300d 	mov	r3, #13
4000dd5c:	e5c23022 	strb	r3, [r2, #34]	; 0x22
4000dd60:	e3a0300a 	mov	r3, #10
4000dd64:	e5c23023 	strb	r3, [r2, #35]	; 0x23
4000dd68:	e3a02024 	mov	r2, #36	; 0x24
4000dd6c:	eaffffed 	b	4000dd28 <LtcEtc::Send(midi::Timecode const*)+0x114>
4000dd70:	4005770c 	andmi	r7, r5, ip, lsl #14
4000dd74:	4005a73c 	andmi	sl, r5, ip, lsr r7

4000dd78 <LtcEtc::ParseTimeCode()>:
4000dd78:	e92d4013 	push	{r0, r1, r4, lr}
4000dd7c:	e590401c 	ldr	r4, [r0, #28]
4000dd80:	e3540000 	cmp	r4, #0
4000dd84:	0a000014 	beq	4000dddc <LtcEtc::ParseTimeCode()+0x64>
4000dd88:	e5902000 	ldr	r2, [r0]
4000dd8c:	e1a0100d 	mov	r1, sp
4000dd90:	e2820014 	add	r0, r2, #20
4000dd94:	ebffff3a 	bl	4000da84 <from_hex(char const*)>
4000dd98:	e200301f 	and	r3, r0, #31
4000dd9c:	e1a002a0 	lsr	r0, r0, #5
4000dda0:	e5cd0004 	strb	r0, [sp, #4]
4000dda4:	e2820017 	add	r0, r2, #23
4000dda8:	e5cd3003 	strb	r3, [sp, #3]
4000ddac:	ebffff34 	bl	4000da84 <from_hex(char const*)>
4000ddb0:	e5cd0002 	strb	r0, [sp, #2]
4000ddb4:	e282001a 	add	r0, r2, #26
4000ddb8:	ebffff31 	bl	4000da84 <from_hex(char const*)>
4000ddbc:	e5cd0001 	strb	r0, [sp, #1]
4000ddc0:	e282001d 	add	r0, r2, #29
4000ddc4:	ebffff2e 	bl	4000da84 <from_hex(char const*)>
4000ddc8:	e5cd0000 	strb	r0, [sp]
4000ddcc:	e1a00004 	mov	r0, r4
4000ddd0:	e5943000 	ldr	r3, [r4]
4000ddd4:	e5933008 	ldr	r3, [r3, #8]
4000ddd8:	e12fff33 	blx	r3
4000dddc:	e28dd008 	add	sp, sp, #8
4000dde0:	e8bd8010 	pop	{r4, pc}

4000dde4 <LtcEtc::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)>:
4000dde4:	e5801000 	str	r1, [r0]
4000dde8:	e3520022 	cmp	r2, #34	; 0x22
4000ddec:	1a000009 	bne	4000de18 <LtcEtc::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x34>
4000ddf0:	e5903010 	ldr	r3, [r0, #16]
4000ddf4:	e3530000 	cmp	r3, #0
4000ddf8:	112fff1e 	bxne	lr
4000ddfc:	e59f20a4 	ldr	r2, [pc, #164]	; 4000dea8 <LtcEtc::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xc4>
4000de00:	e2413001 	sub	r3, r1, #1
4000de04:	e2811013 	add	r1, r1, #19
4000de08:	e1530001 	cmp	r3, r1
4000de0c:	0a000024 	beq	4000dea4 <LtcEtc::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xc0>
4000de10:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4000de14:	ea00001c 	b	4000de8c <LtcEtc::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xa8>
4000de18:	e3520023 	cmp	r2, #35	; 0x23
4000de1c:	1a00000e 	bne	4000de5c <LtcEtc::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x78>
4000de20:	e5903010 	ldr	r3, [r0, #16]
4000de24:	e3530003 	cmp	r3, #3
4000de28:	012fff1e 	bxeq	lr
4000de2c:	e3530001 	cmp	r3, #1
4000de30:	1a000003 	bne	4000de44 <LtcEtc::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x60>
4000de34:	e5d13022 	ldrb	r3, [r1, #34]	; 0x22
4000de38:	e353000d 	cmp	r3, #13
4000de3c:	112fff1e 	bxne	lr
4000de40:	eaffffed 	b	4000ddfc <LtcEtc::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x18>
4000de44:	e3530002 	cmp	r3, #2
4000de48:	05d13022 	ldrbeq	r3, [r1, #34]	; 0x22
4000de4c:	1affffea 	bne	4000ddfc <LtcEtc::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x18>
4000de50:	e353000a 	cmp	r3, #10
4000de54:	112fff1e 	bxne	lr
4000de58:	eaffffe7 	b	4000ddfc <LtcEtc::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x18>
4000de5c:	e3520024 	cmp	r2, #36	; 0x24
4000de60:	1affffe5 	bne	4000ddfc <LtcEtc::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x18>
4000de64:	e5903010 	ldr	r3, [r0, #16]
4000de68:	e3530003 	cmp	r3, #3
4000de6c:	112fff1e 	bxne	lr
4000de70:	e5d13022 	ldrb	r3, [r1, #34]	; 0x22
4000de74:	e353000d 	cmp	r3, #13
4000de78:	112fff1e 	bxne	lr
4000de7c:	e5d13023 	ldrb	r3, [r1, #35]	; 0x23
4000de80:	eafffff2 	b	4000de50 <LtcEtc::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x6c>
4000de84:	e1530001 	cmp	r3, r1
4000de88:	0a000004 	beq	4000dea0 <LtcEtc::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xbc>
4000de8c:	e4d2c001 	ldrb	ip, [r2], #1
4000de90:	e5f3e001 	ldrb	lr, [r3, #1]!
4000de94:	e15e000c 	cmp	lr, ip
4000de98:	0afffff9 	beq	4000de84 <LtcEtc::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xa0>
4000de9c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4000dea0:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
4000dea4:	eaffffb3 	b	4000dd78 <LtcEtc::ParseTimeCode()>
4000dea8:	4005770c 	andmi	r7, r5, ip, lsl #14

4000deac <LtcEtc::staticCallbackFunction(unsigned char const*, unsigned long, unsigned long, unsigned short)>:
4000deac:	e92d4007 	push	{r0, r1, r2, lr}
4000deb0:	e58d3000 	str	r3, [sp]
4000deb4:	e1a03002 	mov	r3, r2
4000deb8:	e1a02001 	mov	r2, r1
4000debc:	e1a01000 	mov	r1, r0
4000dec0:	e59f000c 	ldr	r0, [pc, #12]	; 4000ded4 <LtcEtc::staticCallbackFunction(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x28>
4000dec4:	e5900000 	ldr	r0, [r0]
4000dec8:	ebffffc5 	bl	4000dde4 <LtcEtc::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)>
4000decc:	e28dd00c 	add	sp, sp, #12
4000ded0:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4000ded4:	40034074 	andmi	r4, r3, r4, ror r0

4000ded8 <LtcEtc::Print()>:
4000ded8:	e92d4013 	push	{r0, r1, r4, lr}
4000dedc:	e1a04000 	mov	r4, r0
4000dee0:	e59f00b4 	ldr	r0, [pc, #180]	; 4000df9c <LtcEtc::Print()+0xc4>
4000dee4:	eb007b6b 	bl	4002cc98 <puts>
4000dee8:	e5941004 	ldr	r1, [r4, #4]
4000deec:	e3510000 	cmp	r1, #0
4000def0:	0a000023 	beq	4000df84 <LtcEtc::Print()+0xac>
4000def4:	e1d430bc 	ldrh	r3, [r4, #12]
4000def8:	e3530000 	cmp	r3, #0
4000defc:	0a000020 	beq	4000df84 <LtcEtc::Print()+0xac>
4000df00:	e58d3004 	str	r3, [sp, #4]
4000df04:	e1a03c21 	lsr	r3, r1, #24
4000df08:	e7e72451 	ubfx	r2, r1, #8, #8
4000df0c:	e58d3000 	str	r3, [sp]
4000df10:	e59f0088 	ldr	r0, [pc, #136]	; 4000dfa0 <LtcEtc::Print()+0xc8>
4000df14:	e7e73851 	ubfx	r3, r1, #16, #8
4000df18:	e6ef1071 	uxtb	r1, r1
4000df1c:	eb007b1b 	bl	4002cb90 <printf>
4000df20:	e1d410be 	ldrh	r1, [r4, #14]
4000df24:	e3510000 	cmp	r1, #0
4000df28:	0a000018 	beq	4000df90 <LtcEtc::Print()+0xb8>
4000df2c:	e59f0070 	ldr	r0, [pc, #112]	; 4000dfa4 <LtcEtc::Print()+0xcc>
4000df30:	eb007b16 	bl	4002cb90 <printf>
4000df34:	e5941008 	ldr	r1, [r4, #8]
4000df38:	e3510000 	cmp	r1, #0
4000df3c:	0a000006 	beq	4000df5c <LtcEtc::Print()+0x84>
4000df40:	e1a03c21 	lsr	r3, r1, #24
4000df44:	e7e72451 	ubfx	r2, r1, #8, #8
4000df48:	e58d3000 	str	r3, [sp]
4000df4c:	e59f0054 	ldr	r0, [pc, #84]	; 4000dfa8 <LtcEtc::Print()+0xd0>
4000df50:	e7e73851 	ubfx	r3, r1, #16, #8
4000df54:	e6ef1071 	uxtb	r1, r1
4000df58:	eb007b0c 	bl	4002cb90 <printf>
4000df5c:	e5941010 	ldr	r1, [r4, #16]
4000df60:	e59f0044 	ldr	r0, [pc, #68]	; 4000dfac <LtcEtc::Print()+0xd4>
4000df64:	e3510003 	cmp	r1, #3
4000df68:	d0811101 	addle	r1, r1, r1, lsl #2
4000df6c:	d59f303c 	ldrle	r3, [pc, #60]	; 4000dfb0 <LtcEtc::Print()+0xd8>
4000df70:	c59f103c 	ldrgt	r1, [pc, #60]	; 4000dfb4 <LtcEtc::Print()+0xdc>
4000df74:	d0831001 	addle	r1, r3, r1
4000df78:	e28dd008 	add	sp, sp, #8
4000df7c:	e8bd4010 	pop	{r4, lr}
4000df80:	ea007b02 	b	4002cb90 <printf>
4000df84:	e59f002c 	ldr	r0, [pc, #44]	; 4000dfb8 <LtcEtc::Print()+0xe0>
4000df88:	eb007b42 	bl	4002cc98 <puts>
4000df8c:	eaffffe3 	b	4000df20 <LtcEtc::Print()+0x48>
4000df90:	e59f0024 	ldr	r0, [pc, #36]	; 4000dfbc <LtcEtc::Print()+0xe4>
4000df94:	eb007b3f 	bl	4002cc98 <puts>
4000df98:	eaffffef 	b	4000df5c <LtcEtc::Print()+0x84>
4000df9c:	40030ea8 	andmi	r0, r3, r8, lsr #29
4000dfa0:	40030eb4 			; <UNDEFINED> instruction: 0x40030eb4
4000dfa4:	40030edd 	ldrdmi	r0, [r3], -sp
4000dfa8:	40030eee 	andmi	r0, r3, lr, ror #29
4000dfac:	40030f13 	andmi	r0, r3, r3, lsl pc
4000dfb0:	40030f3d 	andmi	r0, r3, sp, lsr pc
4000dfb4:	40030e9e 	mulmi	r3, lr, lr
4000dfb8:	40030ed2 	ldrdmi	r0, [r3], -r2
4000dfbc:	40030f09 	andmi	r0, r3, r9, lsl #30

4000dfc0 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, int) [clone .isra.0]>:
4000dfc0:	e1d0c0b6 	ldrh	ip, [r0, #6]
4000dfc4:	e92d4037 	push	{r0, r1, r2, r4, r5, lr}
4000dfc8:	e1d050b4 	ldrh	r5, [r0, #4]
4000dfcc:	e15c0005 	cmp	ip, r5
4000dfd0:	2a000017 	bcs	4000e034 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, int) [clone .isra.0]+0x74>
4000dfd4:	e045500c 	sub	r5, r5, ip
4000dfd8:	e1a04000 	mov	r4, r0
4000dfdc:	e5900000 	ldr	r0, [r0]
4000dfe0:	e3530000 	cmp	r3, #0
4000dfe4:	e080000c 	add	r0, r0, ip
4000dfe8:	e5d4c008 	ldrb	ip, [r4, #8]
4000dfec:	1a000005 	bne	4000e008 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, int) [clone .isra.0]+0x48>
4000dff0:	e35c0000 	cmp	ip, #0
4000dff4:	1a000005 	bne	4000e010 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, int) [clone .isra.0]+0x50>
4000dff8:	e58d2000 	str	r2, [sp]
4000dffc:	e1a03001 	mov	r3, r1
4000e000:	e59f2044 	ldr	r2, [pc, #68]	; 4000e04c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, int) [clone .isra.0]+0x8c>
4000e004:	ea000004 	b	4000e01c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, int) [clone .isra.0]+0x5c>
4000e008:	e35c0000 	cmp	ip, #0
4000e00c:	0a00000a 	beq	4000e03c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, int) [clone .isra.0]+0x7c>
4000e010:	e58d2000 	str	r2, [sp]
4000e014:	e1a03001 	mov	r3, r1
4000e018:	e59f2030 	ldr	r2, [pc, #48]	; 4000e050 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, int) [clone .isra.0]+0x90>
4000e01c:	e1a01005 	mov	r1, r5
4000e020:	eb007af7 	bl	4002cc04 <snprintf>
4000e024:	e1550000 	cmp	r5, r0
4000e028:	a1d430b6 	ldrhge	r3, [r4, #6]
4000e02c:	a0830000 	addge	r0, r3, r0
4000e030:	a1c400b6 	strhge	r0, [r4, #6]
4000e034:	e28dd00c 	add	sp, sp, #12
4000e038:	e8bd8030 	pop	{r4, r5, pc}
4000e03c:	e58d2000 	str	r2, [sp]
4000e040:	e1a03001 	mov	r3, r1
4000e044:	e59f2008 	ldr	r2, [pc, #8]	; 4000e054 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, int) [clone .isra.0]+0x94>
4000e048:	eafffff3 	b	4000e01c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, int) [clone .isra.0]+0x5c>
4000e04c:	4002e13b 	andmi	lr, r2, fp, lsr r1
4000e050:	4002e132 	andmi	lr, r2, r2, lsr r1
4000e054:	4002e13c 	andmi	lr, r2, ip, lsr r1

4000e058 <LtcEtcParamsStore::Update(ltcetcparams::Params const*)>:
4000e058:	e92d401f 	push	{r0, r1, r2, r3, r4, lr}
4000e05c:	e1a03000 	mov	r3, r0
4000e060:	e59f0024 	ldr	r0, [pc, #36]	; 4000e08c <LtcEtcParamsStore::Update(ltcetcparams::Params const*)+0x34>
4000e064:	e3a02000 	mov	r2, #0
4000e068:	e58d2008 	str	r2, [sp, #8]
4000e06c:	e3a01011 	mov	r1, #17
4000e070:	e58d1000 	str	r1, [sp]
4000e074:	e3a01005 	mov	r1, #5
4000e078:	e58d2004 	str	r2, [sp, #4]
4000e07c:	e5900000 	ldr	r0, [r0]
4000e080:	eb0039b8 	bl	4001c768 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
4000e084:	e28dd014 	add	sp, sp, #20
4000e088:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4000e08c:	40034084 	andmi	r4, r3, r4, lsl #1

4000e090 <LtcEtcParamsStore::Copy(ltcetcparams::Params*)>:
4000e090:	e92d4007 	push	{r0, r1, r2, lr}
4000e094:	e1a02000 	mov	r2, r0
4000e098:	e3a01001 	mov	r1, #1
4000e09c:	e3a00000 	mov	r0, #0
4000e0a0:	e1cd00f0 	strd	r0, [sp]
4000e0a4:	e59f0014 	ldr	r0, [pc, #20]	; 4000e0c0 <LtcEtcParamsStore::Copy(ltcetcparams::Params*)+0x30>
4000e0a8:	e3a03011 	mov	r3, #17
4000e0ac:	e3a01005 	mov	r1, #5
4000e0b0:	e5900000 	ldr	r0, [r0]
4000e0b4:	eb0039cd 	bl	4001c7f0 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)>
4000e0b8:	e28dd00c 	add	sp, sp, #12
4000e0bc:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4000e0c0:	40034084 	andmi	r4, r3, r4, lsl #1

4000e0c4 <network::is_private_ip(unsigned long)>:
4000e0c4:	e7e73450 	ubfx	r3, r0, #8, #8
4000e0c8:	e6ef0070 	uxtb	r0, r0
4000e0cc:	e35000ac 	cmp	r0, #172	; 0xac
4000e0d0:	0a000005 	beq	4000e0ec <network::is_private_ip(unsigned long)+0x28>
4000e0d4:	e35000c0 	cmp	r0, #192	; 0xc0
4000e0d8:	0a000008 	beq	4000e100 <network::is_private_ip(unsigned long)+0x3c>
4000e0dc:	e350000a 	cmp	r0, #10
4000e0e0:	13a00000 	movne	r0, #0
4000e0e4:	03a00001 	moveq	r0, #1
4000e0e8:	e12fff1e 	bx	lr
4000e0ec:	e2430010 	sub	r0, r3, #16
4000e0f0:	e350000f 	cmp	r0, #15
4000e0f4:	83a00000 	movhi	r0, #0
4000e0f8:	93a00001 	movls	r0, #1
4000e0fc:	e12fff1e 	bx	lr
4000e100:	e35300a8 	cmp	r3, #168	; 0xa8
4000e104:	eafffff5 	b	4000e0e0 <network::is_private_ip(unsigned long)+0x1c>

4000e108 <LtcEtcParams::LtcEtcParams()>:
4000e108:	e1a03000 	mov	r3, r0
4000e10c:	e2801011 	add	r1, r0, #17
4000e110:	e3a02000 	mov	r2, #0
4000e114:	e1530001 	cmp	r3, r1
4000e118:	012fff1e 	bxeq	lr
4000e11c:	e4c32001 	strb	r2, [r3], #1
4000e120:	eafffffb 	b	4000e114 <LtcEtcParams::LtcEtcParams()+0xc>

4000e124 <LtcEtcParams::Load()>:
4000e124:	e3a03000 	mov	r3, #0
4000e128:	e1a02000 	mov	r2, r0
4000e12c:	e92d4013 	push	{r0, r1, r4, lr}
4000e130:	e1a04000 	mov	r4, r0
4000e134:	e5c03000 	strb	r3, [r0]
4000e138:	e5c03001 	strb	r3, [r0, #1]
4000e13c:	e5c03002 	strb	r3, [r0, #2]
4000e140:	e5c03003 	strb	r3, [r0, #3]
4000e144:	e1a0000d 	mov	r0, sp
4000e148:	e59f1034 	ldr	r1, [pc, #52]	; 4000e184 <LtcEtcParams::Load()+0x60>
4000e14c:	eb005ca6 	bl	400253ec <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
4000e150:	e59f1030 	ldr	r1, [pc, #48]	; 4000e188 <LtcEtcParams::Load()+0x64>
4000e154:	e1a0000d 	mov	r0, sp
4000e158:	eb005ca6 	bl	400253f8 <ReadConfigFile::Read(char const*)>
4000e15c:	e3500000 	cmp	r0, #0
4000e160:	e1a00004 	mov	r0, r4
4000e164:	0a000004 	beq	4000e17c <LtcEtcParams::Load()+0x58>
4000e168:	ebffffba 	bl	4000e058 <LtcEtcParamsStore::Update(ltcetcparams::Params const*)>
4000e16c:	e1a0000d 	mov	r0, sp
4000e170:	eb005c9f 	bl	400253f4 <ReadConfigFile::~ReadConfigFile()>
4000e174:	e28dd008 	add	sp, sp, #8
4000e178:	e8bd8010 	pop	{r4, pc}
4000e17c:	ebffffc3 	bl	4000e090 <LtcEtcParamsStore::Copy(ltcetcparams::Params*)>
4000e180:	eafffff9 	b	4000e16c <LtcEtcParams::Load()+0x48>
4000e184:	4000e390 	mulmi	r0, r0, r3
4000e188:	40030fc7 	andmi	r0, r3, r7, asr #31

4000e18c <LtcEtcParams::Load(char const*, unsigned long)>:
4000e18c:	e3a03000 	mov	r3, #0
4000e190:	e92d4073 	push	{r0, r1, r4, r5, r6, lr}
4000e194:	e1a04000 	mov	r4, r0
4000e198:	e5c03000 	strb	r3, [r0]
4000e19c:	e1a05001 	mov	r5, r1
4000e1a0:	e5c03001 	strb	r3, [r0, #1]
4000e1a4:	e1a06002 	mov	r6, r2
4000e1a8:	e5c03002 	strb	r3, [r0, #2]
4000e1ac:	e1a02000 	mov	r2, r0
4000e1b0:	e5c03003 	strb	r3, [r0, #3]
4000e1b4:	e1a0000d 	mov	r0, sp
4000e1b8:	e59f1028 	ldr	r1, [pc, #40]	; 4000e1e8 <LtcEtcParams::Load(char const*, unsigned long)+0x5c>
4000e1bc:	eb005c8a 	bl	400253ec <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
4000e1c0:	e1a02006 	mov	r2, r6
4000e1c4:	e1a01005 	mov	r1, r5
4000e1c8:	e1a0000d 	mov	r0, sp
4000e1cc:	eb005cb3 	bl	400254a0 <ReadConfigFile::Read(char const*, unsigned int)>
4000e1d0:	e1a00004 	mov	r0, r4
4000e1d4:	ebffff9f 	bl	4000e058 <LtcEtcParamsStore::Update(ltcetcparams::Params const*)>
4000e1d8:	e1a0000d 	mov	r0, sp
4000e1dc:	eb005c84 	bl	400253f4 <ReadConfigFile::~ReadConfigFile()>
4000e1e0:	e28dd008 	add	sp, sp, #8
4000e1e4:	e8bd8070 	pop	{r4, r5, r6, pc}
4000e1e8:	4000e390 	mulmi	r0, r0, r3

4000e1ec <LtcEtcParams::callbackFunction(char const*)>:
4000e1ec:	e92d4030 	push	{r4, r5, lr}
4000e1f0:	e1a05001 	mov	r5, r1
4000e1f4:	e59f1180 	ldr	r1, [pc, #384]	; 4000e37c <LtcEtcParams::callbackFunction(char const*)+0x190>
4000e1f8:	e24dd01c 	sub	sp, sp, #28
4000e1fc:	e1a04000 	mov	r4, r0
4000e200:	e28d2008 	add	r2, sp, #8
4000e204:	e1a00005 	mov	r0, r5
4000e208:	eb005d65 	bl	400257a4 <Sscan::IpAddress(char const*, char const*, unsigned long&)>
4000e20c:	e3500000 	cmp	r0, #0
4000e210:	1a000013 	bne	4000e264 <LtcEtcParams::callbackFunction(char const*)+0x78>
4000e214:	e59d5008 	ldr	r5, [sp, #8]
4000e218:	e1a00005 	mov	r0, r5
4000e21c:	ebffffa8 	bl	4000e0c4 <network::is_private_ip(unsigned long)>
4000e220:	e5943000 	ldr	r3, [r4]
4000e224:	e3500000 	cmp	r0, #0
4000e228:	1a000002 	bne	4000e238 <LtcEtcParams::callbackFunction(char const*)+0x4c>
4000e22c:	e20520f0 	and	r2, r5, #240	; 0xf0
4000e230:	e35200e0 	cmp	r2, #224	; 0xe0
4000e234:	1a000004 	bne	4000e24c <LtcEtcParams::callbackFunction(char const*)+0x60>
4000e238:	e5845004 	str	r5, [r4, #4]
4000e23c:	e3833001 	orr	r3, r3, #1
4000e240:	e5843000 	str	r3, [r4]
4000e244:	e28dd01c 	add	sp, sp, #28
4000e248:	e8bd8030 	pop	{r4, r5, pc}
4000e24c:	e3c33001 	bic	r3, r3, #1
4000e250:	e5c40004 	strb	r0, [r4, #4]
4000e254:	e5c40005 	strb	r0, [r4, #5]
4000e258:	e5c40006 	strb	r0, [r4, #6]
4000e25c:	e5c40007 	strb	r0, [r4, #7]
4000e260:	eafffff6 	b	4000e240 <LtcEtcParams::callbackFunction(char const*)+0x54>
4000e264:	e59f1114 	ldr	r1, [pc, #276]	; 4000e380 <LtcEtcParams::callbackFunction(char const*)+0x194>
4000e268:	e28d2008 	add	r2, sp, #8
4000e26c:	e1a00005 	mov	r0, r5
4000e270:	eb005d4b 	bl	400257a4 <Sscan::IpAddress(char const*, char const*, unsigned long&)>
4000e274:	e3500000 	cmp	r0, #0
4000e278:	1a00000b 	bne	4000e2ac <LtcEtcParams::callbackFunction(char const*)+0xc0>
4000e27c:	e59d2008 	ldr	r2, [sp, #8]
4000e280:	e5943000 	ldr	r3, [r4]
4000e284:	e20210f0 	and	r1, r2, #240	; 0xf0
4000e288:	e35100e0 	cmp	r1, #224	; 0xe0
4000e28c:	13c33004 	bicne	r3, r3, #4
4000e290:	03833004 	orreq	r3, r3, #4
4000e294:	05842008 	streq	r2, [r4, #8]
4000e298:	15c40004 	strbne	r0, [r4, #4]
4000e29c:	15c40005 	strbne	r0, [r4, #5]
4000e2a0:	15c40006 	strbne	r0, [r4, #6]
4000e2a4:	15c40007 	strbne	r0, [r4, #7]
4000e2a8:	eaffffe4 	b	4000e240 <LtcEtcParams::callbackFunction(char const*)+0x54>
4000e2ac:	e59f10d0 	ldr	r1, [pc, #208]	; 4000e384 <LtcEtcParams::callbackFunction(char const*)+0x198>
4000e2b0:	e28d2006 	add	r2, sp, #6
4000e2b4:	e1a00005 	mov	r0, r5
4000e2b8:	eb005d6f 	bl	4002587c <Sscan::Uint16(char const*, char const*, unsigned short&)>
4000e2bc:	e3500000 	cmp	r0, #0
4000e2c0:	1a000008 	bne	4000e2e8 <LtcEtcParams::callbackFunction(char const*)+0xfc>
4000e2c4:	e1dd20b6 	ldrh	r2, [sp, #6]
4000e2c8:	e5943000 	ldr	r3, [r4]
4000e2cc:	e3520b01 	cmp	r2, #1024	; 0x400
4000e2d0:	33c33002 	biccc	r3, r3, #2
4000e2d4:	23833002 	orrcs	r3, r3, #2
4000e2d8:	21c420bc 	strhcs	r2, [r4, #12]
4000e2dc:	35c4000c 	strbcc	r0, [r4, #12]
4000e2e0:	35c4000d 	strbcc	r0, [r4, #13]
4000e2e4:	eaffffd5 	b	4000e240 <LtcEtcParams::callbackFunction(char const*)+0x54>
4000e2e8:	e59f1098 	ldr	r1, [pc, #152]	; 4000e388 <LtcEtcParams::callbackFunction(char const*)+0x19c>
4000e2ec:	e28d2006 	add	r2, sp, #6
4000e2f0:	e1a00005 	mov	r0, r5
4000e2f4:	eb005d60 	bl	4002587c <Sscan::Uint16(char const*, char const*, unsigned short&)>
4000e2f8:	e3500000 	cmp	r0, #0
4000e2fc:	1a000008 	bne	4000e324 <LtcEtcParams::callbackFunction(char const*)+0x138>
4000e300:	e1dd20b6 	ldrh	r2, [sp, #6]
4000e304:	e5943000 	ldr	r3, [r4]
4000e308:	e3520b01 	cmp	r2, #1024	; 0x400
4000e30c:	33c33008 	biccc	r3, r3, #8
4000e310:	23833008 	orrcs	r3, r3, #8
4000e314:	21c420be 	strhcs	r2, [r4, #14]
4000e318:	35c4000e 	strbcc	r0, [r4, #14]
4000e31c:	35c4000f 	strbcc	r0, [r4, #15]
4000e320:	eaffffc6 	b	4000e240 <LtcEtcParams::callbackFunction(char const*)+0x54>
4000e324:	e59f1060 	ldr	r1, [pc, #96]	; 4000e38c <LtcEtcParams::callbackFunction(char const*)+0x1a0>
4000e328:	e3a03005 	mov	r3, #5
4000e32c:	e58d300c 	str	r3, [sp, #12]
4000e330:	e28d2010 	add	r2, sp, #16
4000e334:	e28d300c 	add	r3, sp, #12
4000e338:	e1a00005 	mov	r0, r5
4000e33c:	eb005c84 	bl	40025554 <Sscan::Char(char const*, char const*, char*, unsigned long&)>
4000e340:	e3500000 	cmp	r0, #0
4000e344:	1affffbe 	bne	4000e244 <LtcEtcParams::callbackFunction(char const*)+0x58>
4000e348:	e59d300c 	ldr	r3, [sp, #12]
4000e34c:	e28d2018 	add	r2, sp, #24
4000e350:	e0823003 	add	r3, r2, r3
4000e354:	e5430008 	strb	r0, [r3, #-8]
4000e358:	e28d0010 	add	r0, sp, #16
4000e35c:	ebfffdd5 	bl	4000dab8 <ltcetc::get_udp_terminator(char const*)>
4000e360:	e5943000 	ldr	r3, [r4]
4000e364:	e3d02004 	bics	r2, r0, #4
4000e368:	05c42010 	strbeq	r2, [r4, #16]
4000e36c:	03c33010 	biceq	r3, r3, #16
4000e370:	13833010 	orrne	r3, r3, #16
4000e374:	15c40010 	strbne	r0, [r4, #16]
4000e378:	eaffffb0 	b	4000e240 <LtcEtcParams::callbackFunction(char const*)+0x54>
4000e37c:	40030fb8 			; <UNDEFINED> instruction: 0x40030fb8
4000e380:	40030f93 	mulmi	r3, r3, pc	; <UNPREDICTABLE>
4000e384:	40030fa7 	andmi	r0, r3, r7, lsr #31
4000e388:	40030f87 	andmi	r0, r3, r7, lsl #31
4000e38c:	40030f78 	andmi	r0, r3, r8, ror pc

4000e390 <LtcEtcParams::staticCallbackFunction(void*, char const*)>:
4000e390:	eaffff95 	b	4000e1ec <LtcEtcParams::callbackFunction(char const*)>

4000e394 <LtcEtcParams::Builder(ltcetcparams::Params const*, char*, unsigned long, unsigned long&)>:
4000e394:	e3510000 	cmp	r1, #0
4000e398:	e92d4070 	push	{r4, r5, r6, lr}
4000e39c:	e1a04000 	mov	r4, r0
4000e3a0:	e24dd018 	sub	sp, sp, #24
4000e3a4:	e1a05002 	mov	r5, r2
4000e3a8:	e1a06003 	mov	r6, r3
4000e3ac:	0a000006 	beq	4000e3cc <LtcEtcParams::Builder(ltcetcparams::Params const*, char*, unsigned long, unsigned long&)+0x38>
4000e3b0:	e1a03000 	mov	r3, r0
4000e3b4:	e2810011 	add	r0, r1, #17
4000e3b8:	e1500001 	cmp	r0, r1
4000e3bc:	0a000003 	beq	4000e3d0 <LtcEtcParams::Builder(ltcetcparams::Params const*, char*, unsigned long, unsigned long&)+0x3c>
4000e3c0:	e4d12001 	ldrb	r2, [r1], #1
4000e3c4:	e4c32001 	strb	r2, [r3], #1
4000e3c8:	eafffffa 	b	4000e3b8 <LtcEtcParams::Builder(ltcetcparams::Params const*, char*, unsigned long, unsigned long&)+0x24>
4000e3cc:	ebffff2f 	bl	4000e090 <LtcEtcParamsStore::Copy(ltcetcparams::Params*)>
4000e3d0:	e59f1168 	ldr	r1, [pc, #360]	; 4000e540 <LtcEtcParams::Builder(ltcetcparams::Params const*, char*, unsigned long, unsigned long&)+0x1ac>
4000e3d4:	e1a02005 	mov	r2, r5
4000e3d8:	e1a03006 	mov	r3, r6
4000e3dc:	e28d000c 	add	r0, sp, #12
4000e3e0:	eb005ac1 	bl	40024eec <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)>
4000e3e4:	e59f1158 	ldr	r1, [pc, #344]	; 4000e544 <LtcEtcParams::Builder(ltcetcparams::Params const*, char*, unsigned long, unsigned long&)+0x1b0>
4000e3e8:	e28d000c 	add	r0, sp, #12
4000e3ec:	eb005b55 	bl	40025148 <PropertiesBuilder::AddComment(char const*)>
4000e3f0:	e5943000 	ldr	r3, [r4]
4000e3f4:	e28d000c 	add	r0, sp, #12
4000e3f8:	e5942004 	ldr	r2, [r4, #4]
4000e3fc:	e59f1144 	ldr	r1, [pc, #324]	; 4000e548 <LtcEtcParams::Builder(ltcetcparams::Params const*, char*, unsigned long, unsigned long&)+0x1b4>
4000e400:	e2033001 	and	r3, r3, #1
4000e404:	eb005aee 	bl	40024fc4 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)>
4000e408:	e5943000 	ldr	r3, [r4]
4000e40c:	e28d000c 	add	r0, sp, #12
4000e410:	e1d420bc 	ldrh	r2, [r4, #12]
4000e414:	e7e030d3 	ubfx	r3, r3, #1, #1
4000e418:	e59f112c 	ldr	r1, [pc, #300]	; 4000e54c <LtcEtcParams::Builder(ltcetcparams::Params const*, char*, unsigned long, unsigned long&)+0x1b8>
4000e41c:	ebfffee7 	bl	4000dfc0 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, int) [clone .isra.0]>
4000e420:	e59f1128 	ldr	r1, [pc, #296]	; 4000e550 <LtcEtcParams::Builder(ltcetcparams::Params const*, char*, unsigned long, unsigned long&)+0x1bc>
4000e424:	e28d000c 	add	r0, sp, #12
4000e428:	eb005b46 	bl	40025148 <PropertiesBuilder::AddComment(char const*)>
4000e42c:	e5943000 	ldr	r3, [r4]
4000e430:	e28d000c 	add	r0, sp, #12
4000e434:	e5942008 	ldr	r2, [r4, #8]
4000e438:	e7e03153 	ubfx	r3, r3, #2, #1
4000e43c:	e59f1110 	ldr	r1, [pc, #272]	; 4000e554 <LtcEtcParams::Builder(ltcetcparams::Params const*, char*, unsigned long, unsigned long&)+0x1c0>
4000e440:	eb005adf 	bl	40024fc4 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)>
4000e444:	e5943000 	ldr	r3, [r4]
4000e448:	e28d000c 	add	r0, sp, #12
4000e44c:	e1d420be 	ldrh	r2, [r4, #14]
4000e450:	e7e031d3 	ubfx	r3, r3, #3, #1
4000e454:	e59f10fc 	ldr	r1, [pc, #252]	; 4000e558 <LtcEtcParams::Builder(ltcetcparams::Params const*, char*, unsigned long, unsigned long&)+0x1c4>
4000e458:	ebfffed8 	bl	4000dfc0 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, int) [clone .isra.0]>
4000e45c:	e59f10f8 	ldr	r1, [pc, #248]	; 4000e55c <LtcEtcParams::Builder(ltcetcparams::Params const*, char*, unsigned long, unsigned long&)+0x1c8>
4000e460:	e28d000c 	add	r0, sp, #12
4000e464:	eb005b37 	bl	40025148 <PropertiesBuilder::AddComment(char const*)>
4000e468:	e5d40010 	ldrb	r0, [r4, #16]
4000e46c:	ebfffdab 	bl	4000db20 <ltcetc::get_udp_terminator(ltcetc::UdpTerminator)>
4000e470:	e1dd11b2 	ldrh	r1, [sp, #18]
4000e474:	e1a02000 	mov	r2, r0
4000e478:	e1dd51b0 	ldrh	r5, [sp, #16]
4000e47c:	e1510005 	cmp	r1, r5
4000e480:	2a000017 	bcs	4000e4e4 <LtcEtcParams::Builder(ltcetcparams::Params const*, char*, unsigned long, unsigned long&)+0x150>
4000e484:	e59d300c 	ldr	r3, [sp, #12]
4000e488:	e0455001 	sub	r5, r5, r1
4000e48c:	e0830001 	add	r0, r3, r1
4000e490:	e5941000 	ldr	r1, [r4]
4000e494:	e5dd3014 	ldrb	r3, [sp, #20]
4000e498:	e3110010 	tst	r1, #16
4000e49c:	1a000005 	bne	4000e4b8 <LtcEtcParams::Builder(ltcetcparams::Params const*, char*, unsigned long, unsigned long&)+0x124>
4000e4a0:	e3530000 	cmp	r3, #0
4000e4a4:	1a000005 	bne	4000e4c0 <LtcEtcParams::Builder(ltcetcparams::Params const*, char*, unsigned long, unsigned long&)+0x12c>
4000e4a8:	e58d2000 	str	r2, [sp]
4000e4ac:	e59f30ac 	ldr	r3, [pc, #172]	; 4000e560 <LtcEtcParams::Builder(ltcetcparams::Params const*, char*, unsigned long, unsigned long&)+0x1cc>
4000e4b0:	e59f20ac 	ldr	r2, [pc, #172]	; 4000e564 <LtcEtcParams::Builder(ltcetcparams::Params const*, char*, unsigned long, unsigned long&)+0x1d0>
4000e4b4:	ea000004 	b	4000e4cc <LtcEtcParams::Builder(ltcetcparams::Params const*, char*, unsigned long, unsigned long&)+0x138>
4000e4b8:	e3530000 	cmp	r3, #0
4000e4bc:	0a00001b 	beq	4000e530 <LtcEtcParams::Builder(ltcetcparams::Params const*, char*, unsigned long, unsigned long&)+0x19c>
4000e4c0:	e58d2000 	str	r2, [sp]
4000e4c4:	e59f3094 	ldr	r3, [pc, #148]	; 4000e560 <LtcEtcParams::Builder(ltcetcparams::Params const*, char*, unsigned long, unsigned long&)+0x1cc>
4000e4c8:	e59f2098 	ldr	r2, [pc, #152]	; 4000e568 <LtcEtcParams::Builder(ltcetcparams::Params const*, char*, unsigned long, unsigned long&)+0x1d4>
4000e4cc:	e1a01005 	mov	r1, r5
4000e4d0:	eb0079cb 	bl	4002cc04 <snprintf>
4000e4d4:	e1550000 	cmp	r5, r0
4000e4d8:	a1dd31b2 	ldrhge	r3, [sp, #18]
4000e4dc:	a0830000 	addge	r0, r3, r0
4000e4e0:	a1cd01b2 	strhge	r0, [sp, #18]
4000e4e4:	e5dd3014 	ldrb	r3, [sp, #20]
4000e4e8:	e3530000 	cmp	r3, #0
4000e4ec:	0a00000a 	beq	4000e51c <LtcEtcParams::Builder(ltcetcparams::Params const*, char*, unsigned long, unsigned long&)+0x188>
4000e4f0:	e1dd21b2 	ldrh	r2, [sp, #18]
4000e4f4:	e59d300c 	ldr	r3, [sp, #12]
4000e4f8:	e0833002 	add	r3, r3, r2
4000e4fc:	e3a0207d 	mov	r2, #125	; 0x7d
4000e500:	e5432001 	strb	r2, [r3, #-1]
4000e504:	e59d100c 	ldr	r1, [sp, #12]
4000e508:	e1dd31b2 	ldrh	r3, [sp, #18]
4000e50c:	e7c12003 	strb	r2, [r1, r3]
4000e510:	e1dd31b2 	ldrh	r3, [sp, #18]
4000e514:	e2833001 	add	r3, r3, #1
4000e518:	e1cd31b2 	strh	r3, [sp, #18]
4000e51c:	e1dd21b2 	ldrh	r2, [sp, #18]
4000e520:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
4000e524:	e5832000 	str	r2, [r3]
4000e528:	e28dd018 	add	sp, sp, #24
4000e52c:	e8bd8070 	pop	{r4, r5, r6, pc}
4000e530:	e58d2000 	str	r2, [sp]
4000e534:	e59f3024 	ldr	r3, [pc, #36]	; 4000e560 <LtcEtcParams::Builder(ltcetcparams::Params const*, char*, unsigned long, unsigned long&)+0x1cc>
4000e538:	e59f202c 	ldr	r2, [pc, #44]	; 4000e56c <LtcEtcParams::Builder(ltcetcparams::Params const*, char*, unsigned long, unsigned long&)+0x1d8>
4000e53c:	eaffffe2 	b	4000e4cc <LtcEtcParams::Builder(ltcetcparams::Params const*, char*, unsigned long, unsigned long&)+0x138>
4000e540:	40030fc7 	andmi	r0, r3, r7, asr #31
4000e544:	40030f51 	andmi	r0, r3, r1, asr pc
4000e548:	40030fb8 			; <UNDEFINED> instruction: 0x40030fb8
4000e54c:	40030fa7 	andmi	r0, r3, r7, lsr #31
4000e550:	40030f55 	andmi	r0, r3, r5, asr pc
4000e554:	40030f93 	mulmi	r3, r3, pc	; <UNPREDICTABLE>
4000e558:	40030f87 	andmi	r0, r3, r7, lsl #31
4000e55c:	40030f58 	andmi	r0, r3, r8, asr pc
4000e560:	40030f78 	andmi	r0, r3, r8, ror pc
4000e564:	4002e14e 	andmi	lr, r2, lr, asr #2
4000e568:	4002e143 	andmi	lr, r2, r3, asr #2
4000e56c:	4002e14f 	andmi	lr, r2, pc, asr #2

4000e570 <LtcEtcParams::Set()>:
4000e570:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000e574:	e1a05000 	mov	r5, r0
4000e578:	e5906000 	ldr	r6, [r0]
4000e57c:	e59f309c 	ldr	r3, [pc, #156]	; 4000e620 <LtcEtcParams::Set()+0xb0>
4000e580:	e3160001 	tst	r6, #1
4000e584:	e5934000 	ldr	r4, [r3]
4000e588:	0a000009 	beq	4000e5b4 <LtcEtcParams::Set()+0x44>
4000e58c:	e5907004 	ldr	r7, [r0, #4]
4000e590:	e1a00007 	mov	r0, r7
4000e594:	ebfffeca 	bl	4000e0c4 <network::is_private_ip(unsigned long)>
4000e598:	e3500000 	cmp	r0, #0
4000e59c:	1a000003 	bne	4000e5b0 <LtcEtcParams::Set()+0x40>
4000e5a0:	e20730f0 	and	r3, r7, #240	; 0xf0
4000e5a4:	e35300e0 	cmp	r3, #224	; 0xe0
4000e5a8:	15840004 	strne	r0, [r4, #4]
4000e5ac:	1a000000 	bne	4000e5b4 <LtcEtcParams::Set()+0x44>
4000e5b0:	e5847004 	str	r7, [r4, #4]
4000e5b4:	e3160002 	tst	r6, #2
4000e5b8:	0a000004 	beq	4000e5d0 <LtcEtcParams::Set()+0x60>
4000e5bc:	e1d530bc 	ldrh	r3, [r5, #12]
4000e5c0:	e6ff2073 	uxth	r2, r3
4000e5c4:	e3520b01 	cmp	r2, #1024	; 0x400
4000e5c8:	33a03000 	movcc	r3, #0
4000e5cc:	e1c430bc 	strh	r3, [r4, #12]
4000e5d0:	e3160004 	tst	r6, #4
4000e5d4:	0a000004 	beq	4000e5ec <LtcEtcParams::Set()+0x7c>
4000e5d8:	e5953008 	ldr	r3, [r5, #8]
4000e5dc:	e20320f0 	and	r2, r3, #240	; 0xf0
4000e5e0:	e35200e0 	cmp	r2, #224	; 0xe0
4000e5e4:	13a03000 	movne	r3, #0
4000e5e8:	e5843008 	str	r3, [r4, #8]
4000e5ec:	e3160008 	tst	r6, #8
4000e5f0:	0a000004 	beq	4000e608 <LtcEtcParams::Set()+0x98>
4000e5f4:	e1d530be 	ldrh	r3, [r5, #14]
4000e5f8:	e6ff2073 	uxth	r2, r3
4000e5fc:	e3520b01 	cmp	r2, #1024	; 0x400
4000e600:	33a03000 	movcc	r3, #0
4000e604:	e1c430be 	strh	r3, [r4, #14]
4000e608:	e3160010 	tst	r6, #16
4000e60c:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
4000e610:	e5d53010 	ldrb	r3, [r5, #16]
4000e614:	e3530003 	cmp	r3, #3
4000e618:	d5843010 	strle	r3, [r4, #16]
4000e61c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000e620:	40034074 	andmi	r4, r3, r4, ror r0

4000e624 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]>:
4000e624:	e1d0c0b6 	ldrh	ip, [r0, #6]
4000e628:	e92d4037 	push	{r0, r1, r2, r4, r5, lr}
4000e62c:	e1d050b4 	ldrh	r5, [r0, #4]
4000e630:	e15c0005 	cmp	ip, r5
4000e634:	2a000017 	bcs	4000e698 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x74>
4000e638:	e045500c 	sub	r5, r5, ip
4000e63c:	e1a04000 	mov	r4, r0
4000e640:	e5900000 	ldr	r0, [r0]
4000e644:	e3530000 	cmp	r3, #0
4000e648:	e080000c 	add	r0, r0, ip
4000e64c:	e5d4c008 	ldrb	ip, [r4, #8]
4000e650:	1a000005 	bne	4000e66c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x48>
4000e654:	e35c0000 	cmp	ip, #0
4000e658:	1a000005 	bne	4000e674 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x50>
4000e65c:	e58d2000 	str	r2, [sp]
4000e660:	e1a03001 	mov	r3, r1
4000e664:	e59f2044 	ldr	r2, [pc, #68]	; 4000e6b0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x8c>
4000e668:	ea000004 	b	4000e680 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x5c>
4000e66c:	e35c0000 	cmp	ip, #0
4000e670:	0a00000a 	beq	4000e6a0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x7c>
4000e674:	e58d2000 	str	r2, [sp]
4000e678:	e1a03001 	mov	r3, r1
4000e67c:	e59f2030 	ldr	r2, [pc, #48]	; 4000e6b4 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x90>
4000e680:	e1a01005 	mov	r1, r5
4000e684:	eb00795e 	bl	4002cc04 <snprintf>
4000e688:	e1550000 	cmp	r5, r0
4000e68c:	a1d430b6 	ldrhge	r3, [r4, #6]
4000e690:	a0830000 	addge	r0, r3, r0
4000e694:	a1c400b6 	strhge	r0, [r4, #6]
4000e698:	e28dd00c 	add	sp, sp, #12
4000e69c:	e8bd8030 	pop	{r4, r5, pc}
4000e6a0:	e58d2000 	str	r2, [sp]
4000e6a4:	e1a03001 	mov	r3, r1
4000e6a8:	e59f2008 	ldr	r2, [pc, #8]	; 4000e6b8 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x94>
4000e6ac:	eafffff3 	b	4000e680 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x5c>
4000e6b0:	4002e13b 	andmi	lr, r2, fp, lsr r1
4000e6b4:	4002e132 	andmi	lr, r2, r2, lsr r1
4000e6b8:	4002e13c 	andmi	lr, r2, ip, lsr r1

4000e6bc <bool PropertiesBuilder::Add<bool>(char const*, bool, bool, int) [clone .isra.0]>:
4000e6bc:	e1d0c0b6 	ldrh	ip, [r0, #6]
4000e6c0:	e92d4037 	push	{r0, r1, r2, r4, r5, lr}
4000e6c4:	e1d050b4 	ldrh	r5, [r0, #4]
4000e6c8:	e15c0005 	cmp	ip, r5
4000e6cc:	2a000017 	bcs	4000e730 <bool PropertiesBuilder::Add<bool>(char const*, bool, bool, int) [clone .isra.0]+0x74>
4000e6d0:	e045500c 	sub	r5, r5, ip
4000e6d4:	e1a04000 	mov	r4, r0
4000e6d8:	e5900000 	ldr	r0, [r0]
4000e6dc:	e3530000 	cmp	r3, #0
4000e6e0:	e080000c 	add	r0, r0, ip
4000e6e4:	e5d4c008 	ldrb	ip, [r4, #8]
4000e6e8:	1a000005 	bne	4000e704 <bool PropertiesBuilder::Add<bool>(char const*, bool, bool, int) [clone .isra.0]+0x48>
4000e6ec:	e35c0000 	cmp	ip, #0
4000e6f0:	1a000005 	bne	4000e70c <bool PropertiesBuilder::Add<bool>(char const*, bool, bool, int) [clone .isra.0]+0x50>
4000e6f4:	e58d2000 	str	r2, [sp]
4000e6f8:	e1a03001 	mov	r3, r1
4000e6fc:	e59f2044 	ldr	r2, [pc, #68]	; 4000e748 <bool PropertiesBuilder::Add<bool>(char const*, bool, bool, int) [clone .isra.0]+0x8c>
4000e700:	ea000004 	b	4000e718 <bool PropertiesBuilder::Add<bool>(char const*, bool, bool, int) [clone .isra.0]+0x5c>
4000e704:	e35c0000 	cmp	ip, #0
4000e708:	0a00000a 	beq	4000e738 <bool PropertiesBuilder::Add<bool>(char const*, bool, bool, int) [clone .isra.0]+0x7c>
4000e70c:	e58d2000 	str	r2, [sp]
4000e710:	e1a03001 	mov	r3, r1
4000e714:	e59f2030 	ldr	r2, [pc, #48]	; 4000e74c <bool PropertiesBuilder::Add<bool>(char const*, bool, bool, int) [clone .isra.0]+0x90>
4000e718:	e1a01005 	mov	r1, r5
4000e71c:	eb007938 	bl	4002cc04 <snprintf>
4000e720:	e1550000 	cmp	r5, r0
4000e724:	a1d430b6 	ldrhge	r3, [r4, #6]
4000e728:	a0830000 	addge	r0, r3, r0
4000e72c:	a1c400b6 	strhge	r0, [r4, #6]
4000e730:	e28dd00c 	add	sp, sp, #12
4000e734:	e8bd8030 	pop	{r4, r5, pc}
4000e738:	e58d2000 	str	r2, [sp]
4000e73c:	e1a03001 	mov	r3, r1
4000e740:	e59f2008 	ldr	r2, [pc, #8]	; 4000e750 <bool PropertiesBuilder::Add<bool>(char const*, bool, bool, int) [clone .isra.0]+0x94>
4000e744:	eafffff3 	b	4000e718 <bool PropertiesBuilder::Add<bool>(char const*, bool, bool, int) [clone .isra.0]+0x5c>
4000e748:	4002e13b 	andmi	lr, r2, fp, lsr r1
4000e74c:	4002e132 	andmi	lr, r2, r2, lsr r1
4000e750:	4002e13c 	andmi	lr, r2, ip, lsr r1

4000e754 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>:
4000e754:	e1a03002 	mov	r3, r2
4000e758:	eaffffd7 	b	4000e6bc <bool PropertiesBuilder::Add<bool>(char const*, bool, bool, int) [clone .isra.0]>

4000e75c <ltcparams::store::update(ltcparams::Params const*)>:
4000e75c:	e92d401f 	push	{r0, r1, r2, r3, r4, lr}
4000e760:	e1a03000 	mov	r3, r0
4000e764:	e59f0024 	ldr	r0, [pc, #36]	; 4000e790 <ltcparams::store::update(ltcparams::Params const*)+0x34>
4000e768:	e3a02000 	mov	r2, #0
4000e76c:	e58d2008 	str	r2, [sp, #8]
4000e770:	e3a01023 	mov	r1, #35	; 0x23
4000e774:	e58d1000 	str	r1, [sp]
4000e778:	e3a01003 	mov	r1, #3
4000e77c:	e58d2004 	str	r2, [sp, #4]
4000e780:	e5900000 	ldr	r0, [r0]
4000e784:	eb0037f7 	bl	4001c768 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
4000e788:	e28dd014 	add	sp, sp, #20
4000e78c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4000e790:	40034084 	andmi	r4, r3, r4, lsl #1

4000e794 <ltcparams::store::copy(ltcparams::Params*)>:
4000e794:	e92d4007 	push	{r0, r1, r2, lr}
4000e798:	e1a02000 	mov	r2, r0
4000e79c:	e3a01001 	mov	r1, #1
4000e7a0:	e3a00000 	mov	r0, #0
4000e7a4:	e1cd00f0 	strd	r0, [sp]
4000e7a8:	e59f0014 	ldr	r0, [pc, #20]	; 4000e7c4 <ltcparams::store::copy(ltcparams::Params*)+0x30>
4000e7ac:	e3a03023 	mov	r3, #35	; 0x23
4000e7b0:	e3a01003 	mov	r1, #3
4000e7b4:	e5900000 	ldr	r0, [r0]
4000e7b8:	eb00380c 	bl	4001c7f0 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)>
4000e7bc:	e28dd00c 	add	sp, sp, #12
4000e7c0:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4000e7c4:	40034084 	andmi	r4, r3, r4, lsl #1

4000e7c8 <LtcParams::LtcParams()>:
4000e7c8:	e92d4013 	push	{r0, r1, r4, lr}
4000e7cc:	e1a03000 	mov	r3, r0
4000e7d0:	e1a04000 	mov	r4, r0
4000e7d4:	e2801023 	add	r1, r0, #35	; 0x23
4000e7d8:	e3a02000 	mov	r2, #0
4000e7dc:	e1530001 	cmp	r3, r1
4000e7e0:	14c32001 	strbne	r2, [r3], #1
4000e7e4:	1afffffc 	bne	4000e7dc <LtcParams::LtcParams()+0x14>
4000e7e8:	e3a00000 	mov	r0, #0
4000e7ec:	eb007ab9 	bl	4002d2d8 <time>
4000e7f0:	e58d0004 	str	r0, [sp, #4]
4000e7f4:	e28d0004 	add	r0, sp, #4
4000e7f8:	eb0079ed 	bl	4002cfb4 <localtime>
4000e7fc:	e3a03000 	mov	r3, #0
4000e800:	e5c43004 	strb	r3, [r4, #4]
4000e804:	e3a0301c 	mov	r3, #28
4000e808:	e5c43006 	strb	r3, [r4, #6]
4000e80c:	e5903014 	ldr	r3, [r0, #20]
4000e810:	e2433064 	sub	r3, r3, #100	; 0x64
4000e814:	e5c4300a 	strb	r3, [r4, #10]
4000e818:	e5903010 	ldr	r3, [r0, #16]
4000e81c:	e2833001 	add	r3, r3, #1
4000e820:	e5c4300b 	strb	r3, [r4, #11]
4000e824:	e590300c 	ldr	r3, [r0, #12]
4000e828:	e3a00019 	mov	r0, #25
4000e82c:	e5c4000f 	strb	r0, [r4, #15]
4000e830:	e5c4300c 	strb	r3, [r4, #12]
4000e834:	e3a03018 	mov	r3, #24
4000e838:	e5c43014 	strb	r3, [r4, #20]
4000e83c:	e3a0303b 	mov	r3, #59	; 0x3b
4000e840:	e5c43015 	strb	r3, [r4, #21]
4000e844:	e5c43016 	strb	r3, [r4, #22]
4000e848:	e3a03017 	mov	r3, #23
4000e84c:	e5c43017 	strb	r3, [r4, #23]
4000e850:	e3a03040 	mov	r3, #64	; 0x40
4000e854:	e5c43019 	strb	r3, [r4, #25]
4000e858:	e3a0301f 	mov	r3, #31
4000e85c:	e5c4301a 	strb	r3, [r4, #26]
4000e860:	e3a03005 	mov	r3, #5
4000e864:	e5c4301d 	strb	r3, [r4, #29]
4000e868:	e59f301c 	ldr	r3, [pc, #28]	; 4000e88c <LtcParams::LtcParams()+0xc4>
4000e86c:	e593300c 	ldr	r3, [r3, #12]
4000e870:	e584301f 	str	r3, [r4, #31]
4000e874:	ebfff79d 	bl	4000c6f0 <ltc::get_type(unsigned char)>
4000e878:	e59f3010 	ldr	r3, [pc, #16]	; 4000e890 <LtcParams::LtcParams()+0xc8>
4000e87c:	e5c30000 	strb	r0, [r3]
4000e880:	e1a00004 	mov	r0, r4
4000e884:	e28dd008 	add	sp, sp, #8
4000e888:	e8bd8010 	pop	{r4, pc}
4000e88c:	4005a73c 	andmi	sl, r5, ip, lsr r7
4000e890:	400576fc 	strdmi	r7, [r5], -ip

4000e894 <LtcParams::Load()>:
4000e894:	e3a03000 	mov	r3, #0
4000e898:	e1a02000 	mov	r2, r0
4000e89c:	e92d4013 	push	{r0, r1, r4, lr}
4000e8a0:	e1a04000 	mov	r4, r0
4000e8a4:	e5c03000 	strb	r3, [r0]
4000e8a8:	e5c03001 	strb	r3, [r0, #1]
4000e8ac:	e5c03002 	strb	r3, [r0, #2]
4000e8b0:	e5c03003 	strb	r3, [r0, #3]
4000e8b4:	e1a0000d 	mov	r0, sp
4000e8b8:	e59f1034 	ldr	r1, [pc, #52]	; 4000e8f4 <LtcParams::Load()+0x60>
4000e8bc:	eb005aca 	bl	400253ec <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
4000e8c0:	e59f1030 	ldr	r1, [pc, #48]	; 4000e8f8 <LtcParams::Load()+0x64>
4000e8c4:	e1a0000d 	mov	r0, sp
4000e8c8:	eb005aca 	bl	400253f8 <ReadConfigFile::Read(char const*)>
4000e8cc:	e3500000 	cmp	r0, #0
4000e8d0:	e1a00004 	mov	r0, r4
4000e8d4:	0a000004 	beq	4000e8ec <LtcParams::Load()+0x58>
4000e8d8:	ebffff9f 	bl	4000e75c <ltcparams::store::update(ltcparams::Params const*)>
4000e8dc:	e1a0000d 	mov	r0, sp
4000e8e0:	eb005ac3 	bl	400253f4 <ReadConfigFile::~ReadConfigFile()>
4000e8e4:	e28dd008 	add	sp, sp, #8
4000e8e8:	e8bd8010 	pop	{r4, pc}
4000e8ec:	ebffffa8 	bl	4000e794 <ltcparams::store::copy(ltcparams::Params*)>
4000e8f0:	eafffff9 	b	4000e8dc <LtcParams::Load()+0x48>
4000e8f4:	4000f1e8 	andmi	pc, r0, r8, ror #3
4000e8f8:	40031204 	andmi	r1, r3, r4, lsl #4

4000e8fc <LtcParams::Load(char const*, unsigned long)>:
4000e8fc:	e3a03000 	mov	r3, #0
4000e900:	e92d4073 	push	{r0, r1, r4, r5, r6, lr}
4000e904:	e1a04000 	mov	r4, r0
4000e908:	e5c03000 	strb	r3, [r0]
4000e90c:	e1a05001 	mov	r5, r1
4000e910:	e5c03001 	strb	r3, [r0, #1]
4000e914:	e1a06002 	mov	r6, r2
4000e918:	e5c03002 	strb	r3, [r0, #2]
4000e91c:	e1a02000 	mov	r2, r0
4000e920:	e5c03003 	strb	r3, [r0, #3]
4000e924:	e1a0000d 	mov	r0, sp
4000e928:	e59f1028 	ldr	r1, [pc, #40]	; 4000e958 <LtcParams::Load(char const*, unsigned long)+0x5c>
4000e92c:	eb005aae 	bl	400253ec <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
4000e930:	e1a02006 	mov	r2, r6
4000e934:	e1a01005 	mov	r1, r5
4000e938:	e1a0000d 	mov	r0, sp
4000e93c:	eb005ad7 	bl	400254a0 <ReadConfigFile::Read(char const*, unsigned int)>
4000e940:	e1a00004 	mov	r0, r4
4000e944:	ebffff84 	bl	4000e75c <ltcparams::store::update(ltcparams::Params const*)>
4000e948:	e1a0000d 	mov	r0, sp
4000e94c:	eb005aa8 	bl	400253f4 <ReadConfigFile::~ReadConfigFile()>
4000e950:	e28dd008 	add	sp, sp, #8
4000e954:	e8bd8070 	pop	{r4, r5, r6, pc}
4000e958:	4000f1e8 	andmi	pc, r0, r8, ror #3

4000e95c <LtcParams::HandleDisabledOutput(char const*, char const*, ltc::Destination::Output)>:
4000e95c:	e92d4037 	push	{r0, r1, r2, r4, r5, lr}
4000e960:	e1a04000 	mov	r4, r0
4000e964:	e1a00001 	mov	r0, r1
4000e968:	e1a01002 	mov	r1, r2
4000e96c:	e28d2007 	add	r2, sp, #7
4000e970:	e1a05003 	mov	r5, r3
4000e974:	eb005bd8 	bl	400258dc <Sscan::Uint8(char const*, char const*, unsigned char&)>
4000e978:	e3500000 	cmp	r0, #0
4000e97c:	1a000009 	bne	4000e9a8 <LtcParams::HandleDisabledOutput(char const*, char const*, ltc::Destination::Output)+0x4c>
4000e980:	e5dd3007 	ldrb	r3, [sp, #7]
4000e984:	e5d42007 	ldrb	r2, [r4, #7]
4000e988:	e3530000 	cmp	r3, #0
4000e98c:	11822005 	orrne	r2, r2, r5
4000e990:	15943000 	ldrne	r3, [r4]
4000e994:	01c22005 	biceq	r2, r2, r5
4000e998:	15c42007 	strbne	r2, [r4, #7]
4000e99c:	13833008 	orrne	r3, r3, #8
4000e9a0:	15843000 	strne	r3, [r4]
4000e9a4:	05c42007 	strbeq	r2, [r4, #7]
4000e9a8:	e28dd00c 	add	sp, sp, #12
4000e9ac:	e8bd8030 	pop	{r4, r5, pc}

4000e9b0 <LtcParams::SetBool(unsigned char, unsigned char&, unsigned long)>:
4000e9b0:	e3510000 	cmp	r1, #0
4000e9b4:	05c21000 	strbeq	r1, [r2]
4000e9b8:	13a01001 	movne	r1, #1
4000e9bc:	05902000 	ldreq	r2, [r0]
4000e9c0:	15c21000 	strbne	r1, [r2]
4000e9c4:	15902000 	ldrne	r2, [r0]
4000e9c8:	01c23003 	biceq	r3, r2, r3
4000e9cc:	11823003 	orrne	r3, r2, r3
4000e9d0:	e5803000 	str	r3, [r0]
4000e9d4:	e12fff1e 	bx	lr

4000e9d8 <LtcParams::SetValue(bool, unsigned char, unsigned char&, unsigned long)>:
4000e9d8:	e59dc000 	ldr	ip, [sp]
4000e9dc:	e3510000 	cmp	r1, #0
4000e9e0:	15c32000 	strbne	r2, [r3]
4000e9e4:	05903000 	ldreq	r3, [r0]
4000e9e8:	15903000 	ldrne	r3, [r0]
4000e9ec:	01c3300c 	biceq	r3, r3, ip
4000e9f0:	1183300c 	orrne	r3, r3, ip
4000e9f4:	e5803000 	str	r3, [r0]
4000e9f8:	e12fff1e 	bx	lr

4000e9fc <LtcParams::callbackFunction(char const*)>:
4000e9fc:	e92d4030 	push	{r4, r5, lr}
4000ea00:	e24dd02c 	sub	sp, sp, #44	; 0x2c
4000ea04:	e1a05001 	mov	r5, r1
4000ea08:	e3a0300f 	mov	r3, #15
4000ea0c:	e58d3010 	str	r3, [sp, #16]
4000ea10:	e1a04000 	mov	r4, r0
4000ea14:	e59f172c 	ldr	r1, [pc, #1836]	; 4000f148 <LtcParams::callbackFunction(char const*)+0x74c>
4000ea18:	e28d3010 	add	r3, sp, #16
4000ea1c:	e28d2018 	add	r2, sp, #24
4000ea20:	e1a00005 	mov	r0, r5
4000ea24:	eb005aca 	bl	40025554 <Sscan::Char(char const*, char const*, char*, unsigned long&)>
4000ea28:	e3500000 	cmp	r0, #0
4000ea2c:	1a00000d 	bne	4000ea68 <LtcParams::callbackFunction(char const*)+0x6c>
4000ea30:	e59d3010 	ldr	r3, [sp, #16]
4000ea34:	e28d2028 	add	r2, sp, #40	; 0x28
4000ea38:	e28d1018 	add	r1, sp, #24
4000ea3c:	e0823003 	add	r3, r2, r3
4000ea40:	e5430010 	strb	r0, [r3, #-16]
4000ea44:	e1a00004 	mov	r0, r4
4000ea48:	eb0003e8 	bl	4000f9f0 <LtcParams::GetSourceType(char const*)>
4000ea4c:	e5943000 	ldr	r3, [r4]
4000ea50:	e3500000 	cmp	r0, #0
4000ea54:	e5c40004 	strb	r0, [r4, #4]
4000ea58:	03c33001 	biceq	r3, r3, #1
4000ea5c:	13833001 	orrne	r3, r3, #1
4000ea60:	e5843000 	str	r3, [r4]
4000ea64:	ea000050 	b	4000ebac <LtcParams::callbackFunction(char const*)+0x1b0>
4000ea68:	e59f16dc 	ldr	r1, [pc, #1756]	; 4000f14c <LtcParams::callbackFunction(char const*)+0x750>
4000ea6c:	e28d200d 	add	r2, sp, #13
4000ea70:	e1a00005 	mov	r0, r5
4000ea74:	eb005b98 	bl	400258dc <Sscan::Uint8(char const*, char const*, unsigned char&)>
4000ea78:	e3500000 	cmp	r0, #0
4000ea7c:	1a000009 	bne	4000eaa8 <LtcParams::callbackFunction(char const*)+0xac>
4000ea80:	e5dd200d 	ldrb	r2, [sp, #13]
4000ea84:	e5943000 	ldr	r3, [r4]
4000ea88:	e2421002 	sub	r1, r2, #2
4000ea8c:	e351001d 	cmp	r1, #29
4000ea90:	83c33004 	bichi	r3, r3, #4
4000ea94:	83a0201c 	movhi	r2, #28
4000ea98:	95c42006 	strbls	r2, [r4, #6]
4000ea9c:	93833004 	orrls	r3, r3, #4
4000eaa0:	85c42006 	strbhi	r2, [r4, #6]
4000eaa4:	eaffffed 	b	4000ea60 <LtcParams::callbackFunction(char const*)+0x64>
4000eaa8:	e59f16a0 	ldr	r1, [pc, #1696]	; 4000f150 <LtcParams::callbackFunction(char const*)+0x754>
4000eaac:	e28d200d 	add	r2, sp, #13
4000eab0:	e1a00005 	mov	r0, r5
4000eab4:	eb005b88 	bl	400258dc <Sscan::Uint8(char const*, char const*, unsigned char&)>
4000eab8:	e3500000 	cmp	r0, #0
4000eabc:	1a000005 	bne	4000ead8 <LtcParams::callbackFunction(char const*)+0xdc>
4000eac0:	e5dd200d 	ldrb	r2, [sp, #13]
4000eac4:	e5943000 	ldr	r3, [r4]
4000eac8:	e3520000 	cmp	r2, #0
4000eacc:	03c33010 	biceq	r3, r3, #16
4000ead0:	13833010 	orrne	r3, r3, #16
4000ead4:	eaffffe1 	b	4000ea60 <LtcParams::callbackFunction(char const*)+0x64>
4000ead8:	e59f1674 	ldr	r1, [pc, #1652]	; 4000f154 <LtcParams::callbackFunction(char const*)+0x758>
4000eadc:	e28d200d 	add	r2, sp, #13
4000eae0:	e1a00005 	mov	r0, r5
4000eae4:	eb005b7c 	bl	400258dc <Sscan::Uint8(char const*, char const*, unsigned char&)>
4000eae8:	e3500000 	cmp	r0, #0
4000eaec:	1a000005 	bne	4000eb08 <LtcParams::callbackFunction(char const*)+0x10c>
4000eaf0:	e5dd200d 	ldrb	r2, [sp, #13]
4000eaf4:	e5943000 	ldr	r3, [r4]
4000eaf8:	e3520000 	cmp	r2, #0
4000eafc:	03c33002 	biceq	r3, r3, #2
4000eb00:	13833002 	orrne	r3, r3, #2
4000eb04:	eaffffd5 	b	4000ea60 <LtcParams::callbackFunction(char const*)+0x64>
4000eb08:	e59f1648 	ldr	r1, [pc, #1608]	; 4000f158 <LtcParams::callbackFunction(char const*)+0x75c>
4000eb0c:	e28d200d 	add	r2, sp, #13
4000eb10:	e1a00005 	mov	r0, r5
4000eb14:	eb005b70 	bl	400258dc <Sscan::Uint8(char const*, char const*, unsigned char&)>
4000eb18:	e3500000 	cmp	r0, #0
4000eb1c:	1a000005 	bne	4000eb38 <LtcParams::callbackFunction(char const*)+0x13c>
4000eb20:	e5dd200d 	ldrb	r2, [sp, #13]
4000eb24:	e5943000 	ldr	r3, [r4]
4000eb28:	e3520000 	cmp	r2, #0
4000eb2c:	03c33302 	biceq	r3, r3, #134217728	; 0x8000000
4000eb30:	13833302 	orrne	r3, r3, #134217728	; 0x8000000
4000eb34:	eaffffc9 	b	4000ea60 <LtcParams::callbackFunction(char const*)+0x64>
4000eb38:	e59f161c 	ldr	r1, [pc, #1564]	; 4000f15c <LtcParams::callbackFunction(char const*)+0x760>
4000eb3c:	e2843009 	add	r3, r4, #9
4000eb40:	e2842008 	add	r2, r4, #8
4000eb44:	e1a00005 	mov	r0, r5
4000eb48:	eb005b7b 	bl	4002593c <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)>
4000eb4c:	e3500000 	cmp	r0, #0
4000eb50:	1a000017 	bne	4000ebb4 <LtcParams::callbackFunction(char const*)+0x1b8>
4000eb54:	e1d410d8 	ldrsb	r1, [r4, #8]
4000eb58:	e281300c 	add	r3, r1, #12
4000eb5c:	e6ef3073 	uxtb	r3, r3
4000eb60:	e353001a 	cmp	r3, #26
4000eb64:	8a00000d 	bhi	4000eba0 <LtcParams::callbackFunction(char const*)+0x1a4>
4000eb68:	e5d40009 	ldrb	r0, [r4, #9]
4000eb6c:	e3500000 	cmp	r0, #0
4000eb70:	0a00000d 	beq	4000ebac <LtcParams::callbackFunction(char const*)+0x1b0>
4000eb74:	e59f35e4 	ldr	r3, [pc, #1508]	; 4000f160 <LtcParams::callbackFunction(char const*)+0x764>
4000eb78:	e3a0200b 	mov	r2, #11
4000eb7c:	e1d3c0d0 	ldrsb	ip, [r3]
4000eb80:	e15c0001 	cmp	ip, r1
4000eb84:	1a000002 	bne	4000eb94 <LtcParams::callbackFunction(char const*)+0x198>
4000eb88:	e5d3c001 	ldrb	ip, [r3, #1]
4000eb8c:	e15c0000 	cmp	ip, r0
4000eb90:	0a000005 	beq	4000ebac <LtcParams::callbackFunction(char const*)+0x1b0>
4000eb94:	e2522001 	subs	r2, r2, #1
4000eb98:	e2833002 	add	r3, r3, #2
4000eb9c:	1afffff6 	bne	4000eb7c <LtcParams::callbackFunction(char const*)+0x180>
4000eba0:	e3a03000 	mov	r3, #0
4000eba4:	e5c43008 	strb	r3, [r4, #8]
4000eba8:	e5c43009 	strb	r3, [r4, #9]
4000ebac:	e28dd02c 	add	sp, sp, #44	; 0x2c
4000ebb0:	e8bd8030 	pop	{r4, r5, pc}
4000ebb4:	e59f15a8 	ldr	r1, [pc, #1448]	; 4000f164 <LtcParams::callbackFunction(char const*)+0x768>
4000ebb8:	e28d200d 	add	r2, sp, #13
4000ebbc:	e1a00005 	mov	r0, r5
4000ebc0:	eb005b45 	bl	400258dc <Sscan::Uint8(char const*, char const*, unsigned char&)>
4000ebc4:	e3500000 	cmp	r0, #0
4000ebc8:	1a000005 	bne	4000ebe4 <LtcParams::callbackFunction(char const*)+0x1e8>
4000ebcc:	e5dd200d 	ldrb	r2, [sp, #13]
4000ebd0:	e5943000 	ldr	r3, [r4]
4000ebd4:	e3520000 	cmp	r2, #0
4000ebd8:	03c33020 	biceq	r3, r3, #32
4000ebdc:	13833020 	orrne	r3, r3, #32
4000ebe0:	eaffff9e 	b	4000ea60 <LtcParams::callbackFunction(char const*)+0x64>
4000ebe4:	e59f157c 	ldr	r1, [pc, #1404]	; 4000f168 <LtcParams::callbackFunction(char const*)+0x76c>
4000ebe8:	e28d200d 	add	r2, sp, #13
4000ebec:	e1a00005 	mov	r0, r5
4000ebf0:	eb005b39 	bl	400258dc <Sscan::Uint8(char const*, char const*, unsigned char&)>
4000ebf4:	e3500000 	cmp	r0, #0
4000ebf8:	1a000005 	bne	4000ec14 <LtcParams::callbackFunction(char const*)+0x218>
4000ebfc:	e5dd200d 	ldrb	r2, [sp, #13]
4000ec00:	e5943000 	ldr	r3, [r4]
4000ec04:	e3520000 	cmp	r2, #0
4000ec08:	03c33c02 	biceq	r3, r3, #512	; 0x200
4000ec0c:	13833c02 	orrne	r3, r3, #512	; 0x200
4000ec10:	eaffff92 	b	4000ea60 <LtcParams::callbackFunction(char const*)+0x64>
4000ec14:	e59f2550 	ldr	r2, [pc, #1360]	; 4000f16c <LtcParams::callbackFunction(char const*)+0x770>
4000ec18:	e3a03001 	mov	r3, #1
4000ec1c:	e1a01005 	mov	r1, r5
4000ec20:	e1a00004 	mov	r0, r4
4000ec24:	ebffff4c 	bl	4000e95c <LtcParams::HandleDisabledOutput(char const*, char const*, ltc::Destination::Output)>
4000ec28:	e59f2540 	ldr	r2, [pc, #1344]	; 4000f170 <LtcParams::callbackFunction(char const*)+0x774>
4000ec2c:	e3a03002 	mov	r3, #2
4000ec30:	e1a01005 	mov	r1, r5
4000ec34:	e1a00004 	mov	r0, r4
4000ec38:	ebffff47 	bl	4000e95c <LtcParams::HandleDisabledOutput(char const*, char const*, ltc::Destination::Output)>
4000ec3c:	e59f2530 	ldr	r2, [pc, #1328]	; 4000f174 <LtcParams::callbackFunction(char const*)+0x778>
4000ec40:	e3a03010 	mov	r3, #16
4000ec44:	e1a01005 	mov	r1, r5
4000ec48:	e1a00004 	mov	r0, r4
4000ec4c:	ebffff42 	bl	4000e95c <LtcParams::HandleDisabledOutput(char const*, char const*, ltc::Destination::Output)>
4000ec50:	e59f2520 	ldr	r2, [pc, #1312]	; 4000f178 <LtcParams::callbackFunction(char const*)+0x77c>
4000ec54:	e3a03004 	mov	r3, #4
4000ec58:	e1a01005 	mov	r1, r5
4000ec5c:	e1a00004 	mov	r0, r4
4000ec60:	ebffff3d 	bl	4000e95c <LtcParams::HandleDisabledOutput(char const*, char const*, ltc::Destination::Output)>
4000ec64:	e59f2510 	ldr	r2, [pc, #1296]	; 4000f17c <LtcParams::callbackFunction(char const*)+0x780>
4000ec68:	e3a03008 	mov	r3, #8
4000ec6c:	e1a01005 	mov	r1, r5
4000ec70:	e1a00004 	mov	r0, r4
4000ec74:	ebffff38 	bl	4000e95c <LtcParams::HandleDisabledOutput(char const*, char const*, ltc::Destination::Output)>
4000ec78:	e59f2500 	ldr	r2, [pc, #1280]	; 4000f180 <LtcParams::callbackFunction(char const*)+0x784>
4000ec7c:	e3a03080 	mov	r3, #128	; 0x80
4000ec80:	e1a01005 	mov	r1, r5
4000ec84:	e1a00004 	mov	r0, r4
4000ec88:	ebffff33 	bl	4000e95c <LtcParams::HandleDisabledOutput(char const*, char const*, ltc::Destination::Output)>
4000ec8c:	e59f24f0 	ldr	r2, [pc, #1264]	; 4000f184 <LtcParams::callbackFunction(char const*)+0x788>
4000ec90:	e3a03020 	mov	r3, #32
4000ec94:	e1a01005 	mov	r1, r5
4000ec98:	e1a00004 	mov	r0, r4
4000ec9c:	ebffff2e 	bl	4000e95c <LtcParams::HandleDisabledOutput(char const*, char const*, ltc::Destination::Output)>
4000eca0:	e59f14e0 	ldr	r1, [pc, #1248]	; 4000f188 <LtcParams::callbackFunction(char const*)+0x78c>
4000eca4:	e28d200d 	add	r2, sp, #13
4000eca8:	e1a00005 	mov	r0, r5
4000ecac:	eb005b0a 	bl	400258dc <Sscan::Uint8(char const*, char const*, unsigned char&)>
4000ecb0:	e3500000 	cmp	r0, #0
4000ecb4:	1a000009 	bne	4000ece0 <LtcParams::callbackFunction(char const*)+0x2e4>
4000ecb8:	e5dd200d 	ldrb	r2, [sp, #13]
4000ecbc:	e3a03040 	mov	r3, #64	; 0x40
4000ecc0:	e58d3000 	str	r3, [sp]
4000ecc4:	e284300a 	add	r3, r4, #10
4000ecc8:	e3520012 	cmp	r2, #18
4000eccc:	93a01000 	movls	r1, #0
4000ecd0:	83a01001 	movhi	r1, #1
4000ecd4:	e1a00004 	mov	r0, r4
4000ecd8:	ebffff3e 	bl	4000e9d8 <LtcParams::SetValue(bool, unsigned char, unsigned char&, unsigned long)>
4000ecdc:	eaffffb2 	b	4000ebac <LtcParams::callbackFunction(char const*)+0x1b0>
4000ece0:	e59f14a4 	ldr	r1, [pc, #1188]	; 4000f18c <LtcParams::callbackFunction(char const*)+0x790>
4000ece4:	e28d200d 	add	r2, sp, #13
4000ece8:	e1a00005 	mov	r0, r5
4000ecec:	eb005afa 	bl	400258dc <Sscan::Uint8(char const*, char const*, unsigned char&)>
4000ecf0:	e3500000 	cmp	r0, #0
4000ecf4:	1a000008 	bne	4000ed1c <LtcParams::callbackFunction(char const*)+0x320>
4000ecf8:	e5dd200d 	ldrb	r2, [sp, #13]
4000ecfc:	e3a03080 	mov	r3, #128	; 0x80
4000ed00:	e58d3000 	str	r3, [sp]
4000ed04:	e284300b 	add	r3, r4, #11
4000ed08:	e2421001 	sub	r1, r2, #1
4000ed0c:	e351000b 	cmp	r1, #11
4000ed10:	83a01000 	movhi	r1, #0
4000ed14:	93a01001 	movls	r1, #1
4000ed18:	eaffffed 	b	4000ecd4 <LtcParams::callbackFunction(char const*)+0x2d8>
4000ed1c:	e59f146c 	ldr	r1, [pc, #1132]	; 4000f190 <LtcParams::callbackFunction(char const*)+0x794>
4000ed20:	e28d200d 	add	r2, sp, #13
4000ed24:	e1a00005 	mov	r0, r5
4000ed28:	eb005aeb 	bl	400258dc <Sscan::Uint8(char const*, char const*, unsigned char&)>
4000ed2c:	e3500000 	cmp	r0, #0
4000ed30:	1a000006 	bne	4000ed50 <LtcParams::callbackFunction(char const*)+0x354>
4000ed34:	e5dd200d 	ldrb	r2, [sp, #13]
4000ed38:	e3a03c01 	mov	r3, #256	; 0x100
4000ed3c:	e58d3000 	str	r3, [sp]
4000ed40:	e284300c 	add	r3, r4, #12
4000ed44:	e2421001 	sub	r1, r2, #1
4000ed48:	e351001e 	cmp	r1, #30
4000ed4c:	eaffffef 	b	4000ed10 <LtcParams::callbackFunction(char const*)+0x314>
4000ed50:	e59f143c 	ldr	r1, [pc, #1084]	; 4000f194 <LtcParams::callbackFunction(char const*)+0x798>
4000ed54:	e28d200d 	add	r2, sp, #13
4000ed58:	e1a00005 	mov	r0, r5
4000ed5c:	eb005ade 	bl	400258dc <Sscan::Uint8(char const*, char const*, unsigned char&)>
4000ed60:	e3500000 	cmp	r0, #0
4000ed64:	1a00000e 	bne	4000eda4 <LtcParams::callbackFunction(char const*)+0x3a8>
4000ed68:	e5dd200d 	ldrb	r2, [sp, #13]
4000ed6c:	e3a03b02 	mov	r3, #2048	; 0x800
4000ed70:	e58d3000 	str	r3, [sp]
4000ed74:	e1a00004 	mov	r0, r4
4000ed78:	e2421018 	sub	r1, r2, #24
4000ed7c:	e284300f 	add	r3, r4, #15
4000ed80:	e3510006 	cmp	r1, #6
4000ed84:	83a01000 	movhi	r1, #0
4000ed88:	93a01001 	movls	r1, #1
4000ed8c:	ebffff11 	bl	4000e9d8 <LtcParams::SetValue(bool, unsigned char, unsigned char&, unsigned long)>
4000ed90:	e5d4000f 	ldrb	r0, [r4, #15]
4000ed94:	ebfff655 	bl	4000c6f0 <ltc::get_type(unsigned char)>
4000ed98:	e59f33f8 	ldr	r3, [pc, #1016]	; 4000f198 <LtcParams::callbackFunction(char const*)+0x79c>
4000ed9c:	e5c30000 	strb	r0, [r3]
4000eda0:	eaffff81 	b	4000ebac <LtcParams::callbackFunction(char const*)+0x1b0>
4000eda4:	e59f13f0 	ldr	r1, [pc, #1008]	; 4000f19c <LtcParams::callbackFunction(char const*)+0x7a0>
4000eda8:	e28d200d 	add	r2, sp, #13
4000edac:	e1a00005 	mov	r0, r5
4000edb0:	eb005ac9 	bl	400258dc <Sscan::Uint8(char const*, char const*, unsigned char&)>
4000edb4:	e3500000 	cmp	r0, #0
4000edb8:	1a000005 	bne	4000edd4 <LtcParams::callbackFunction(char const*)+0x3d8>
4000edbc:	e5dd200d 	ldrb	r2, [sp, #13]
4000edc0:	e3a03a01 	mov	r3, #4096	; 0x1000
4000edc4:	e58d3000 	str	r3, [sp]
4000edc8:	e2843010 	add	r3, r4, #16
4000edcc:	e352001e 	cmp	r2, #30
4000edd0:	eaffffce 	b	4000ed10 <LtcParams::callbackFunction(char const*)+0x314>
4000edd4:	e59f13c4 	ldr	r1, [pc, #964]	; 4000f1a0 <LtcParams::callbackFunction(char const*)+0x7a4>
4000edd8:	e28d200d 	add	r2, sp, #13
4000eddc:	e1a00005 	mov	r0, r5
4000ede0:	eb005abd 	bl	400258dc <Sscan::Uint8(char const*, char const*, unsigned char&)>
4000ede4:	e3500000 	cmp	r0, #0
4000ede8:	1a000005 	bne	4000ee04 <LtcParams::callbackFunction(char const*)+0x408>
4000edec:	e5dd200d 	ldrb	r2, [sp, #13]
4000edf0:	e3a03a02 	mov	r3, #8192	; 0x2000
4000edf4:	e58d3000 	str	r3, [sp]
4000edf8:	e2843011 	add	r3, r4, #17
4000edfc:	e352003b 	cmp	r2, #59	; 0x3b
4000ee00:	eaffffc2 	b	4000ed10 <LtcParams::callbackFunction(char const*)+0x314>
4000ee04:	e59f1398 	ldr	r1, [pc, #920]	; 4000f1a4 <LtcParams::callbackFunction(char const*)+0x7a8>
4000ee08:	e28d200d 	add	r2, sp, #13
4000ee0c:	e1a00005 	mov	r0, r5
4000ee10:	eb005ab1 	bl	400258dc <Sscan::Uint8(char const*, char const*, unsigned char&)>
4000ee14:	e3500000 	cmp	r0, #0
4000ee18:	1a000004 	bne	4000ee30 <LtcParams::callbackFunction(char const*)+0x434>
4000ee1c:	e5dd200d 	ldrb	r2, [sp, #13]
4000ee20:	e3a03901 	mov	r3, #16384	; 0x4000
4000ee24:	e58d3000 	str	r3, [sp]
4000ee28:	e2843012 	add	r3, r4, #18
4000ee2c:	eafffff2 	b	4000edfc <LtcParams::callbackFunction(char const*)+0x400>
4000ee30:	e59f1370 	ldr	r1, [pc, #880]	; 4000f1a8 <LtcParams::callbackFunction(char const*)+0x7ac>
4000ee34:	e28d200d 	add	r2, sp, #13
4000ee38:	e1a00005 	mov	r0, r5
4000ee3c:	eb005aa6 	bl	400258dc <Sscan::Uint8(char const*, char const*, unsigned char&)>
4000ee40:	e3500000 	cmp	r0, #0
4000ee44:	1a000005 	bne	4000ee60 <LtcParams::callbackFunction(char const*)+0x464>
4000ee48:	e5dd200d 	ldrb	r2, [sp, #13]
4000ee4c:	e3a03902 	mov	r3, #32768	; 0x8000
4000ee50:	e58d3000 	str	r3, [sp]
4000ee54:	e2843013 	add	r3, r4, #19
4000ee58:	e3520017 	cmp	r2, #23
4000ee5c:	eaffffab 	b	4000ed10 <LtcParams::callbackFunction(char const*)+0x314>
4000ee60:	e59f1344 	ldr	r1, [pc, #836]	; 4000f1ac <LtcParams::callbackFunction(char const*)+0x7b0>
4000ee64:	e28d200d 	add	r2, sp, #13
4000ee68:	e1a00005 	mov	r0, r5
4000ee6c:	eb005a9a 	bl	400258dc <Sscan::Uint8(char const*, char const*, unsigned char&)>
4000ee70:	e3500000 	cmp	r0, #0
4000ee74:	1a000004 	bne	4000ee8c <LtcParams::callbackFunction(char const*)+0x490>
4000ee78:	e5dd200d 	ldrb	r2, [sp, #13]
4000ee7c:	e3a03801 	mov	r3, #65536	; 0x10000
4000ee80:	e58d3000 	str	r3, [sp]
4000ee84:	e2843014 	add	r3, r4, #20
4000ee88:	eaffffcf 	b	4000edcc <LtcParams::callbackFunction(char const*)+0x3d0>
4000ee8c:	e59f131c 	ldr	r1, [pc, #796]	; 4000f1b0 <LtcParams::callbackFunction(char const*)+0x7b4>
4000ee90:	e28d200d 	add	r2, sp, #13
4000ee94:	e1a00005 	mov	r0, r5
4000ee98:	eb005a8f 	bl	400258dc <Sscan::Uint8(char const*, char const*, unsigned char&)>
4000ee9c:	e3500000 	cmp	r0, #0
4000eea0:	1a000004 	bne	4000eeb8 <LtcParams::callbackFunction(char const*)+0x4bc>
4000eea4:	e5dd200d 	ldrb	r2, [sp, #13]
4000eea8:	e3a03802 	mov	r3, #131072	; 0x20000
4000eeac:	e58d3000 	str	r3, [sp]
4000eeb0:	e2843015 	add	r3, r4, #21
4000eeb4:	eaffffd0 	b	4000edfc <LtcParams::callbackFunction(char const*)+0x400>
4000eeb8:	e59f12f4 	ldr	r1, [pc, #756]	; 4000f1b4 <LtcParams::callbackFunction(char const*)+0x7b8>
4000eebc:	e28d200d 	add	r2, sp, #13
4000eec0:	e1a00005 	mov	r0, r5
4000eec4:	eb005a84 	bl	400258dc <Sscan::Uint8(char const*, char const*, unsigned char&)>
4000eec8:	e3500000 	cmp	r0, #0
4000eecc:	1a000004 	bne	4000eee4 <LtcParams::callbackFunction(char const*)+0x4e8>
4000eed0:	e5dd200d 	ldrb	r2, [sp, #13]
4000eed4:	e3a03701 	mov	r3, #262144	; 0x40000
4000eed8:	e58d3000 	str	r3, [sp]
4000eedc:	e2843016 	add	r3, r4, #22
4000eee0:	eaffffc5 	b	4000edfc <LtcParams::callbackFunction(char const*)+0x400>
4000eee4:	e59f12cc 	ldr	r1, [pc, #716]	; 4000f1b8 <LtcParams::callbackFunction(char const*)+0x7bc>
4000eee8:	e28d200d 	add	r2, sp, #13
4000eeec:	e1a00005 	mov	r0, r5
4000eef0:	eb005a79 	bl	400258dc <Sscan::Uint8(char const*, char const*, unsigned char&)>
4000eef4:	e3500000 	cmp	r0, #0
4000eef8:	1a000004 	bne	4000ef10 <LtcParams::callbackFunction(char const*)+0x514>
4000eefc:	e5dd200d 	ldrb	r2, [sp, #13]
4000ef00:	e3a03702 	mov	r3, #524288	; 0x80000
4000ef04:	e58d3000 	str	r3, [sp]
4000ef08:	e2843017 	add	r3, r4, #23
4000ef0c:	eaffffd1 	b	4000ee58 <LtcParams::callbackFunction(char const*)+0x45c>
4000ef10:	e59f12a4 	ldr	r1, [pc, #676]	; 4000f1bc <LtcParams::callbackFunction(char const*)+0x7c0>
4000ef14:	e28d200d 	add	r2, sp, #13
4000ef18:	e1a00005 	mov	r0, r5
4000ef1c:	eb005a6e 	bl	400258dc <Sscan::Uint8(char const*, char const*, unsigned char&)>
4000ef20:	e3500000 	cmp	r0, #0
4000ef24:	03a03502 	moveq	r3, #8388608	; 0x800000
4000ef28:	0284201c 	addeq	r2, r4, #28
4000ef2c:	0a000014 	beq	4000ef84 <LtcParams::callbackFunction(char const*)+0x588>
4000ef30:	e59f1288 	ldr	r1, [pc, #648]	; 4000f1c0 <LtcParams::callbackFunction(char const*)+0x7c4>
4000ef34:	e28d200d 	add	r2, sp, #13
4000ef38:	e1a00005 	mov	r0, r5
4000ef3c:	eb005a66 	bl	400258dc <Sscan::Uint8(char const*, char const*, unsigned char&)>
4000ef40:	e3500000 	cmp	r0, #0
4000ef44:	1a000006 	bne	4000ef64 <LtcParams::callbackFunction(char const*)+0x568>
4000ef48:	e5dd200d 	ldrb	r2, [sp, #13]
4000ef4c:	e3a03401 	mov	r3, #16777216	; 0x1000000
4000ef50:	e58d3000 	str	r3, [sp]
4000ef54:	e284301d 	add	r3, r4, #29
4000ef58:	e2421001 	sub	r1, r2, #1
4000ef5c:	e3510062 	cmp	r1, #98	; 0x62
4000ef60:	eaffff6a 	b	4000ed10 <LtcParams::callbackFunction(char const*)+0x314>
4000ef64:	e59f1258 	ldr	r1, [pc, #600]	; 4000f1c4 <LtcParams::callbackFunction(char const*)+0x7c8>
4000ef68:	e28d200d 	add	r2, sp, #13
4000ef6c:	e1a00005 	mov	r0, r5
4000ef70:	eb005a59 	bl	400258dc <Sscan::Uint8(char const*, char const*, unsigned char&)>
4000ef74:	e3500000 	cmp	r0, #0
4000ef78:	1a000005 	bne	4000ef94 <LtcParams::callbackFunction(char const*)+0x598>
4000ef7c:	e3a03402 	mov	r3, #33554432	; 0x2000000
4000ef80:	e284201e 	add	r2, r4, #30
4000ef84:	e5dd100d 	ldrb	r1, [sp, #13]
4000ef88:	e1a00004 	mov	r0, r4
4000ef8c:	ebfffe87 	bl	4000e9b0 <LtcParams::SetBool(unsigned char, unsigned char&, unsigned long)>
4000ef90:	eaffff05 	b	4000ebac <LtcParams::callbackFunction(char const*)+0x1b0>
4000ef94:	e59f122c 	ldr	r1, [pc, #556]	; 4000f1c8 <LtcParams::callbackFunction(char const*)+0x7cc>
4000ef98:	e28d200d 	add	r2, sp, #13
4000ef9c:	e1a00005 	mov	r0, r5
4000efa0:	eb005a4d 	bl	400258dc <Sscan::Uint8(char const*, char const*, unsigned char&)>
4000efa4:	e3500000 	cmp	r0, #0
4000efa8:	1a000005 	bne	4000efc4 <LtcParams::callbackFunction(char const*)+0x5c8>
4000efac:	e5dd200d 	ldrb	r2, [sp, #13]
4000efb0:	e5943000 	ldr	r3, [r4]
4000efb4:	e3520000 	cmp	r2, #0
4000efb8:	03c33201 	biceq	r3, r3, #268435456	; 0x10000000
4000efbc:	13833201 	orrne	r3, r3, #268435456	; 0x10000000
4000efc0:	eafffea6 	b	4000ea60 <LtcParams::callbackFunction(char const*)+0x64>
4000efc4:	e59f1200 	ldr	r1, [pc, #512]	; 4000f1cc <LtcParams::callbackFunction(char const*)+0x7d0>
4000efc8:	e28d200d 	add	r2, sp, #13
4000efcc:	e1a00005 	mov	r0, r5
4000efd0:	eb005a41 	bl	400258dc <Sscan::Uint8(char const*, char const*, unsigned char&)>
4000efd4:	e3500000 	cmp	r0, #0
4000efd8:	1a000005 	bne	4000eff4 <LtcParams::callbackFunction(char const*)+0x5f8>
4000efdc:	e5dd200d 	ldrb	r2, [sp, #13]
4000efe0:	e5943000 	ldr	r3, [r4]
4000efe4:	e3520000 	cmp	r2, #0
4000efe8:	03c33202 	biceq	r3, r3, #536870912	; 0x20000000
4000efec:	13833202 	orrne	r3, r3, #536870912	; 0x20000000
4000eff0:	eafffe9a 	b	4000ea60 <LtcParams::callbackFunction(char const*)+0x64>
4000eff4:	e59f11d4 	ldr	r1, [pc, #468]	; 4000f1d0 <LtcParams::callbackFunction(char const*)+0x7d4>
4000eff8:	e28d200d 	add	r2, sp, #13
4000effc:	e1a00005 	mov	r0, r5
4000f000:	eb005a35 	bl	400258dc <Sscan::Uint8(char const*, char const*, unsigned char&)>
4000f004:	e3500000 	cmp	r0, #0
4000f008:	1a000005 	bne	4000f024 <LtcParams::callbackFunction(char const*)+0x628>
4000f00c:	e5dd200d 	ldrb	r2, [sp, #13]
4000f010:	e5943000 	ldr	r3, [r4]
4000f014:	e3520000 	cmp	r2, #0
4000f018:	03c33601 	biceq	r3, r3, #1048576	; 0x100000
4000f01c:	13833601 	orrne	r3, r3, #1048576	; 0x100000
4000f020:	eafffe8e 	b	4000ea60 <LtcParams::callbackFunction(char const*)+0x64>
4000f024:	e59f11a8 	ldr	r1, [pc, #424]	; 4000f1d4 <LtcParams::callbackFunction(char const*)+0x7d8>
4000f028:	e28d200e 	add	r2, sp, #14
4000f02c:	e1a00005 	mov	r0, r5
4000f030:	eb005a11 	bl	4002587c <Sscan::Uint16(char const*, char const*, unsigned short&)>
4000f034:	e3500000 	cmp	r0, #0
4000f038:	1a00000a 	bne	4000f068 <LtcParams::callbackFunction(char const*)+0x66c>
4000f03c:	e1dd20be 	ldrh	r2, [sp, #14]
4000f040:	e5943000 	ldr	r3, [r4]
4000f044:	e3520b01 	cmp	r2, #1024	; 0x400
4000f048:	33c33602 	biccc	r3, r3, #2097152	; 0x200000
4000f04c:	33a02040 	movcc	r2, #64	; 0x40
4000f050:	35c42019 	strbcc	r2, [r4, #25]
4000f054:	33a0201f 	movcc	r2, #31
4000f058:	21c421b9 	strhcs	r2, [r4, #25]
4000f05c:	23833602 	orrcs	r3, r3, #2097152	; 0x200000
4000f060:	35c4201a 	strbcc	r2, [r4, #26]
4000f064:	eafffe7d 	b	4000ea60 <LtcParams::callbackFunction(char const*)+0x64>
4000f068:	e59f1168 	ldr	r1, [pc, #360]	; 4000f1d8 <LtcParams::callbackFunction(char const*)+0x7dc>
4000f06c:	e28d200d 	add	r2, sp, #13
4000f070:	e1a00005 	mov	r0, r5
4000f074:	eb005a18 	bl	400258dc <Sscan::Uint8(char const*, char const*, unsigned char&)>
4000f078:	e3500000 	cmp	r0, #0
4000f07c:	1a000009 	bne	4000f0a8 <LtcParams::callbackFunction(char const*)+0x6ac>
4000f080:	e5dd300d 	ldrb	r3, [sp, #13]
4000f084:	e3530000 	cmp	r3, #0
4000f088:	13a03001 	movne	r3, #1
4000f08c:	05d4301b 	ldrbeq	r3, [r4, #27]
4000f090:	020330fe 	andeq	r3, r3, #254	; 0xfe
4000f094:	0a00000f 	beq	4000f0d8 <LtcParams::callbackFunction(char const*)+0x6dc>
4000f098:	e5c4301b 	strb	r3, [r4, #27]
4000f09c:	e5943000 	ldr	r3, [r4]
4000f0a0:	e3833501 	orr	r3, r3, #4194304	; 0x400000
4000f0a4:	eafffe6d 	b	4000ea60 <LtcParams::callbackFunction(char const*)+0x64>
4000f0a8:	e59f112c 	ldr	r1, [pc, #300]	; 4000f1dc <LtcParams::callbackFunction(char const*)+0x7e0>
4000f0ac:	e28d200d 	add	r2, sp, #13
4000f0b0:	e1a00005 	mov	r0, r5
4000f0b4:	eb005a08 	bl	400258dc <Sscan::Uint8(char const*, char const*, unsigned char&)>
4000f0b8:	e3500000 	cmp	r0, #0
4000f0bc:	1a00000b 	bne	4000f0f0 <LtcParams::callbackFunction(char const*)+0x6f4>
4000f0c0:	e5dd300d 	ldrb	r3, [sp, #13]
4000f0c4:	e3530000 	cmp	r3, #0
4000f0c8:	13a03002 	movne	r3, #2
4000f0cc:	1afffff1 	bne	4000f098 <LtcParams::callbackFunction(char const*)+0x69c>
4000f0d0:	e5d4301b 	ldrb	r3, [r4, #27]
4000f0d4:	e20330fd 	and	r3, r3, #253	; 0xfd
4000f0d8:	e5c4301b 	strb	r3, [r4, #27]
4000f0dc:	e3530000 	cmp	r3, #0
4000f0e0:	1afffeb1 	bne	4000ebac <LtcParams::callbackFunction(char const*)+0x1b0>
4000f0e4:	e5943000 	ldr	r3, [r4]
4000f0e8:	e3c33501 	bic	r3, r3, #4194304	; 0x400000
4000f0ec:	eafffe5b 	b	4000ea60 <LtcParams::callbackFunction(char const*)+0x64>
4000f0f0:	e59f10e8 	ldr	r1, [pc, #232]	; 4000f1e0 <LtcParams::callbackFunction(char const*)+0x7e4>
4000f0f4:	e28d2014 	add	r2, sp, #20
4000f0f8:	e1a00005 	mov	r0, r5
4000f0fc:	eb0059a8 	bl	400257a4 <Sscan::IpAddress(char const*, char const*, unsigned long&)>
4000f100:	e3500000 	cmp	r0, #0
4000f104:	1afffea8 	bne	4000ebac <LtcParams::callbackFunction(char const*)+0x1b0>
4000f108:	e59f10d4 	ldr	r1, [pc, #212]	; 4000f1e4 <LtcParams::callbackFunction(char const*)+0x7e8>
4000f10c:	e59dc014 	ldr	ip, [sp, #20]
4000f110:	e5912004 	ldr	r2, [r1, #4]
4000f114:	e5910000 	ldr	r0, [r1]
4000f118:	e5943000 	ldr	r3, [r4]
4000f11c:	e0000002 	and	r0, r0, r2
4000f120:	e002200c 	and	r2, r2, ip
4000f124:	e1500002 	cmp	r0, r2
4000f128:	13c33301 	bicne	r3, r3, #67108864	; 0x4000000
4000f12c:	03833301 	orreq	r3, r3, #67108864	; 0x4000000
4000f130:	15843000 	strne	r3, [r4]
4000f134:	1591300c 	ldrne	r3, [r1, #12]
4000f138:	05843000 	streq	r3, [r4]
4000f13c:	0584c01f 	streq	ip, [r4, #31]
4000f140:	1584301f 	strne	r3, [r4, #31]
4000f144:	eafffe98 	b	4000ebac <LtcParams::callbackFunction(char const*)+0x1b0>
4000f148:	400311fd 	strdmi	r1, [r3], -sp
4000f14c:	40031139 	andmi	r1, r3, r9, lsr r1
4000f150:	4003116b 	andmi	r1, r3, fp, ror #2
4000f154:	400311f2 	strdmi	r1, [r3], -r2
4000f158:	400311e8 	andmi	r1, r3, r8, ror #3
4000f15c:	400311dd 	ldrdmi	r1, [r3], -sp
4000f160:	4002dc1c 	andmi	sp, r2, ip, lsl ip
4000f164:	4003115a 	andmi	r1, r3, sl, asr r1
4000f168:	40031140 	andmi	r1, r3, r0, asr #2
4000f16c:	400311cd 	andmi	r1, r3, sp, asr #3
4000f170:	400311bd 			; <UNDEFINED> instruction: 0x400311bd
4000f174:	40031195 	mulmi	r3, r5, r1
4000f178:	400311b0 			; <UNDEFINED> instruction: 0x400311b0
4000f17c:	400311a1 	andmi	r1, r3, r1, lsr #3
4000f180:	40031184 	andmi	r1, r3, r4, lsl #3
4000f184:	40031178 	andmi	r1, r3, r8, ror r1
4000f188:	40031155 	andmi	r1, r3, r5, asr r1
4000f18c:	4003114f 	andmi	r1, r3, pc, asr #2
4000f190:	4003114b 	andmi	r1, r3, fp, asr #2
4000f194:	40031129 	andmi	r1, r3, r9, lsr #2
4000f198:	400576fc 	strdmi	r7, [r5], -ip
4000f19c:	4003111d 	andmi	r1, r3, sp, lsl r1
4000f1a0:	40031110 	andmi	r1, r3, r0, lsl r1
4000f1a4:	40031103 	andmi	r1, r3, r3, lsl #2
4000f1a8:	400310f8 	strdmi	r1, [r3], -r8
4000f1ac:	400310e0 	andmi	r1, r3, r0, ror #1
4000f1b0:	400310d4 	ldrdmi	r1, [r3], -r4
4000f1b4:	400310c8 	andmi	r1, r3, r8, asr #1
4000f1b8:	400310be 	strhmi	r1, [r3], -lr
4000f1bc:	400310a5 	andmi	r1, r3, r5, lsr #1
4000f1c0:	40031098 	mulmi	r3, r8, r0
4000f1c4:	4003108e 	andmi	r1, r3, lr, lsl #1
4000f1c8:	400310eb 	andmi	r1, r3, fp, ror #1
4000f1cc:	400310b2 	strhmi	r1, [r3], -r2
4000f1d0:	40031083 	andmi	r1, r3, r3, lsl #1
4000f1d4:	4003107a 	andmi	r1, r3, sl, ror r0
4000f1d8:	4003106c 	andmi	r1, r3, ip, rrx
4000f1dc:	4003105c 	andmi	r1, r3, ip, asr r0
4000f1e0:	4003112d 	andmi	r1, r3, sp, lsr #2
4000f1e4:	4005a73c 	andmi	sl, r5, ip, lsr r7

4000f1e8 <LtcParams::staticCallbackFunction(void*, char const*)>:
4000f1e8:	eafffe03 	b	4000e9fc <LtcParams::callbackFunction(char const*)>

4000f1ec <LtcParams::Set(ltc::TimeCode*, ltc::TimeCode*)>:
4000f1ec:	e5d03007 	ldrb	r3, [r0, #7]
4000f1f0:	e59fc1a8 	ldr	ip, [pc, #424]	; 4000f3a0 <LtcParams::Set(ltc::TimeCode*, ltc::TimeCode*)+0x1b4>
4000f1f4:	e92d4070 	push	{r4, r5, r6, lr}
4000f1f8:	e203e001 	and	lr, r3, #1
4000f1fc:	e5cce000 	strb	lr, [ip]
4000f200:	e7e0e0d3 	ubfx	lr, r3, #1, #1
4000f204:	e5cce001 	strb	lr, [ip, #1]
4000f208:	e7e0e153 	ubfx	lr, r3, #2, #1
4000f20c:	e5904000 	ldr	r4, [r0]
4000f210:	e5cce002 	strb	lr, [ip, #2]
4000f214:	e7e0e1d3 	ubfx	lr, r3, #3, #1
4000f218:	e2145c02 	ands	r5, r4, #512	; 0x200
4000f21c:	e5cce003 	strb	lr, [ip, #3]
4000f220:	e7e0e253 	ubfx	lr, r3, #4, #1
4000f224:	e5cce004 	strb	lr, [ip, #4]
4000f228:	e7e0e2d3 	ubfx	lr, r3, #5, #1
4000f22c:	e5cce005 	strb	lr, [ip, #5]
4000f230:	03a0e001 	moveq	lr, #1
4000f234:	13a0e000 	movne	lr, #0
4000f238:	e5cce006 	strb	lr, [ip, #6]
4000f23c:	e1a0e3a3 	lsr	lr, r3, #7
4000f240:	e5cce007 	strb	lr, [ip, #7]
4000f244:	e5d0e01b 	ldrb	lr, [r0, #27]
4000f248:	e25e6001 	subs	r6, lr, #1
4000f24c:	13a06001 	movne	r6, #1
4000f250:	e5cc6008 	strb	r6, [ip, #8]
4000f254:	e25e6002 	subs	r6, lr, #2
4000f258:	13a06001 	movne	r6, #1
4000f25c:	e3550000 	cmp	r5, #0
4000f260:	e5cc6009 	strb	r6, [ip, #9]
4000f264:	03833040 	orreq	r3, r3, #64	; 0x40
4000f268:	e59fc134 	ldr	ip, [pc, #308]	; 4000f3a4 <LtcParams::Set(ltc::TimeCode*, ltc::TimeCode*)+0x1b8>
4000f26c:	e35e0001 	cmp	lr, #1
4000f270:	e58c3000 	str	r3, [ip]
4000f274:	1a000035 	bne	4000f350 <LtcParams::Set(ltc::TimeCode*, ltc::TimeCode*)+0x164>
4000f278:	e59c3000 	ldr	r3, [ip]
4000f27c:	e3833c02 	orr	r3, r3, #512	; 0x200
4000f280:	e58c3000 	str	r3, [ip]
4000f284:	e3140a0f 	tst	r4, #61440	; 0xf000
4000f288:	0a000036 	beq	4000f368 <LtcParams::Set(ltc::TimeCode*, ltc::TimeCode*)+0x17c>
4000f28c:	e3a03000 	mov	r3, #0
4000f290:	e5c13000 	strb	r3, [r1]
4000f294:	e5c13001 	strb	r3, [r1, #1]
4000f298:	e5c13002 	strb	r3, [r1, #2]
4000f29c:	e5c13003 	strb	r3, [r1, #3]
4000f2a0:	e5c13004 	strb	r3, [r1, #4]
4000f2a4:	e5903000 	ldr	r3, [r0]
4000f2a8:	e3130a01 	tst	r3, #4096	; 0x1000
4000f2ac:	15d0c010 	ldrbne	ip, [r0, #16]
4000f2b0:	15c1c000 	strbne	ip, [r1]
4000f2b4:	e3130a02 	tst	r3, #8192	; 0x2000
4000f2b8:	15d0c011 	ldrbne	ip, [r0, #17]
4000f2bc:	15c1c001 	strbne	ip, [r1, #1]
4000f2c0:	e3130901 	tst	r3, #16384	; 0x4000
4000f2c4:	15d0c012 	ldrbne	ip, [r0, #18]
4000f2c8:	15c1c002 	strbne	ip, [r1, #2]
4000f2cc:	e3130902 	tst	r3, #32768	; 0x8000
4000f2d0:	0a000001 	beq	4000f2dc <LtcParams::Set(ltc::TimeCode*, ltc::TimeCode*)+0xf0>
4000f2d4:	e5d03013 	ldrb	r3, [r0, #19]
4000f2d8:	e5c13003 	strb	r3, [r1, #3]
4000f2dc:	e59fc0c4 	ldr	ip, [pc, #196]	; 4000f3a8 <LtcParams::Set(ltc::TimeCode*, ltc::TimeCode*)+0x1bc>
4000f2e0:	e5dc3000 	ldrb	r3, [ip]
4000f2e4:	e5c13004 	strb	r3, [r1, #4]
4000f2e8:	e5903000 	ldr	r3, [r0]
4000f2ec:	e313080f 	tst	r3, #983040	; 0xf0000
4000f2f0:	0a000023 	beq	4000f384 <LtcParams::Set(ltc::TimeCode*, ltc::TimeCode*)+0x198>
4000f2f4:	e3a03000 	mov	r3, #0
4000f2f8:	e5c23000 	strb	r3, [r2]
4000f2fc:	e5c23001 	strb	r3, [r2, #1]
4000f300:	e5c23002 	strb	r3, [r2, #2]
4000f304:	e5c23003 	strb	r3, [r2, #3]
4000f308:	e5c23004 	strb	r3, [r2, #4]
4000f30c:	e5903000 	ldr	r3, [r0]
4000f310:	e3130801 	tst	r3, #65536	; 0x10000
4000f314:	15d01014 	ldrbne	r1, [r0, #20]
4000f318:	15c21000 	strbne	r1, [r2]
4000f31c:	e3130802 	tst	r3, #131072	; 0x20000
4000f320:	15d01015 	ldrbne	r1, [r0, #21]
4000f324:	15c21001 	strbne	r1, [r2, #1]
4000f328:	e3130701 	tst	r3, #262144	; 0x40000
4000f32c:	15d01016 	ldrbne	r1, [r0, #22]
4000f330:	15c21002 	strbne	r1, [r2, #2]
4000f334:	e3130702 	tst	r3, #524288	; 0x80000
4000f338:	0a000001 	beq	4000f344 <LtcParams::Set(ltc::TimeCode*, ltc::TimeCode*)+0x158>
4000f33c:	e5d03017 	ldrb	r3, [r0, #23]
4000f340:	e5c23003 	strb	r3, [r2, #3]
4000f344:	e5dc3000 	ldrb	r3, [ip]
4000f348:	e5c23004 	strb	r3, [r2, #4]
4000f34c:	e8bd8070 	pop	{r4, r5, r6, pc}
4000f350:	e59c3000 	ldr	r3, [ip]
4000f354:	e35e0002 	cmp	lr, #2
4000f358:	e3833c01 	orr	r3, r3, #256	; 0x100
4000f35c:	e58c3000 	str	r3, [ip]
4000f360:	0affffc7 	beq	4000f284 <LtcParams::Set(ltc::TimeCode*, ltc::TimeCode*)+0x98>
4000f364:	eaffffc3 	b	4000f278 <LtcParams::Set(ltc::TimeCode*, ltc::TimeCode*)+0x8c>
4000f368:	e5d03010 	ldrb	r3, [r0, #16]
4000f36c:	e5c13000 	strb	r3, [r1]
4000f370:	e5d03011 	ldrb	r3, [r0, #17]
4000f374:	e5c13001 	strb	r3, [r1, #1]
4000f378:	e5d03012 	ldrb	r3, [r0, #18]
4000f37c:	e5c13002 	strb	r3, [r1, #2]
4000f380:	eaffffd3 	b	4000f2d4 <LtcParams::Set(ltc::TimeCode*, ltc::TimeCode*)+0xe8>
4000f384:	e5d03014 	ldrb	r3, [r0, #20]
4000f388:	e5c23000 	strb	r3, [r2]
4000f38c:	e5d03015 	ldrb	r3, [r0, #21]
4000f390:	e5c23001 	strb	r3, [r2, #1]
4000f394:	e5d03016 	ldrb	r3, [r0, #22]
4000f398:	e5c23002 	strb	r3, [r2, #2]
4000f39c:	eaffffe6 	b	4000f33c <LtcParams::Set(ltc::TimeCode*, ltc::TimeCode*)+0x150>
4000f3a0:	400576ec 	andmi	r7, r5, ip, ror #13
4000f3a4:	400576f8 	strdmi	r7, [r5], -r8
4000f3a8:	400576fc 	strdmi	r7, [r5], -ip

4000f3ac <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)>:
4000f3ac:	e3510000 	cmp	r1, #0
4000f3b0:	e92d4070 	push	{r4, r5, r6, lr}
4000f3b4:	e1a04000 	mov	r4, r0
4000f3b8:	e24dd018 	sub	sp, sp, #24
4000f3bc:	e1a05002 	mov	r5, r2
4000f3c0:	e1a06003 	mov	r6, r3
4000f3c4:	0a000006 	beq	4000f3e4 <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x38>
4000f3c8:	e1a03000 	mov	r3, r0
4000f3cc:	e2810023 	add	r0, r1, #35	; 0x23
4000f3d0:	e1500001 	cmp	r0, r1
4000f3d4:	0a000003 	beq	4000f3e8 <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x3c>
4000f3d8:	e4d12001 	ldrb	r2, [r1], #1
4000f3dc:	e4c32001 	strb	r2, [r3], #1
4000f3e0:	eafffffa 	b	4000f3d0 <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x24>
4000f3e4:	ebfffcea 	bl	4000e794 <ltcparams::store::copy(ltcparams::Params*)>
4000f3e8:	e59f1504 	ldr	r1, [pc, #1284]	; 4000f8f4 <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x548>
4000f3ec:	e1a02005 	mov	r2, r5
4000f3f0:	e1a03006 	mov	r3, r6
4000f3f4:	e28d000c 	add	r0, sp, #12
4000f3f8:	eb0056bb 	bl	40024eec <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)>
4000f3fc:	e5d41004 	ldrb	r1, [r4, #4]
4000f400:	e1a00004 	mov	r0, r4
4000f404:	eb000171 	bl	4000f9d0 <LtcParams::GetSourceType(ltc::Source)>
4000f408:	e1dd11b2 	ldrh	r1, [sp, #18]
4000f40c:	e1a02000 	mov	r2, r0
4000f410:	e1dd51b0 	ldrh	r5, [sp, #16]
4000f414:	e1510005 	cmp	r1, r5
4000f418:	2a000017 	bcs	4000f47c <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0xd0>
4000f41c:	e59d300c 	ldr	r3, [sp, #12]
4000f420:	e0455001 	sub	r5, r5, r1
4000f424:	e0830001 	add	r0, r3, r1
4000f428:	e5941000 	ldr	r1, [r4]
4000f42c:	e5dd3014 	ldrb	r3, [sp, #20]
4000f430:	e3110001 	tst	r1, #1
4000f434:	1a000005 	bne	4000f450 <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0xa4>
4000f438:	e3530000 	cmp	r3, #0
4000f43c:	1a000005 	bne	4000f458 <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0xac>
4000f440:	e58d2000 	str	r2, [sp]
4000f444:	e59f34ac 	ldr	r3, [pc, #1196]	; 4000f8f8 <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x54c>
4000f448:	e59f24ac 	ldr	r2, [pc, #1196]	; 4000f8fc <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x550>
4000f44c:	ea000004 	b	4000f464 <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0xb8>
4000f450:	e3530000 	cmp	r3, #0
4000f454:	0a0000ea 	beq	4000f804 <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x458>
4000f458:	e58d2000 	str	r2, [sp]
4000f45c:	e59f3494 	ldr	r3, [pc, #1172]	; 4000f8f8 <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x54c>
4000f460:	e59f2498 	ldr	r2, [pc, #1176]	; 4000f900 <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x554>
4000f464:	e1a01005 	mov	r1, r5
4000f468:	eb0075e5 	bl	4002cc04 <snprintf>
4000f46c:	e1550000 	cmp	r5, r0
4000f470:	a1dd31b2 	ldrhge	r3, [sp, #18]
4000f474:	a0830000 	addge	r0, r3, r0
4000f478:	a1cd01b2 	strhge	r0, [sp, #18]
4000f47c:	e59f1480 	ldr	r1, [pc, #1152]	; 4000f904 <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x558>
4000f480:	e28d000c 	add	r0, sp, #12
4000f484:	eb00572f 	bl	40025148 <PropertiesBuilder::AddComment(char const*)>
4000f488:	e5d42007 	ldrb	r2, [r4, #7]
4000f48c:	e28d000c 	add	r0, sp, #12
4000f490:	e59f1470 	ldr	r1, [pc, #1136]	; 4000f908 <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x55c>
4000f494:	e2022001 	and	r2, r2, #1
4000f498:	ebfffcad 	bl	4000e754 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
4000f49c:	e5d42007 	ldrb	r2, [r4, #7]
4000f4a0:	e28d000c 	add	r0, sp, #12
4000f4a4:	e59f1460 	ldr	r1, [pc, #1120]	; 4000f90c <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x560>
4000f4a8:	e7e020d2 	ubfx	r2, r2, #1, #1
4000f4ac:	ebfffca8 	bl	4000e754 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
4000f4b0:	e5d42007 	ldrb	r2, [r4, #7]
4000f4b4:	e28d000c 	add	r0, sp, #12
4000f4b8:	e59f1450 	ldr	r1, [pc, #1104]	; 4000f910 <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x564>
4000f4bc:	e7e02252 	ubfx	r2, r2, #4, #1
4000f4c0:	ebfffca3 	bl	4000e754 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
4000f4c4:	e5d42007 	ldrb	r2, [r4, #7]
4000f4c8:	e28d000c 	add	r0, sp, #12
4000f4cc:	e59f1440 	ldr	r1, [pc, #1088]	; 4000f914 <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x568>
4000f4d0:	e7e02152 	ubfx	r2, r2, #2, #1
4000f4d4:	ebfffc9e 	bl	4000e754 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
4000f4d8:	e5d42007 	ldrb	r2, [r4, #7]
4000f4dc:	e28d000c 	add	r0, sp, #12
4000f4e0:	e59f1430 	ldr	r1, [pc, #1072]	; 4000f918 <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x56c>
4000f4e4:	e7e021d2 	ubfx	r2, r2, #3, #1
4000f4e8:	ebfffc99 	bl	4000e754 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
4000f4ec:	e5d42007 	ldrb	r2, [r4, #7]
4000f4f0:	e28d000c 	add	r0, sp, #12
4000f4f4:	e59f1420 	ldr	r1, [pc, #1056]	; 4000f91c <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x570>
4000f4f8:	e1a023a2 	lsr	r2, r2, #7
4000f4fc:	ebfffc94 	bl	4000e754 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
4000f500:	e5d42007 	ldrb	r2, [r4, #7]
4000f504:	e28d000c 	add	r0, sp, #12
4000f508:	e59f1410 	ldr	r1, [pc, #1040]	; 4000f920 <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x574>
4000f50c:	e7e022d2 	ubfx	r2, r2, #5, #1
4000f510:	ebfffc8f 	bl	4000e754 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
4000f514:	e59f1408 	ldr	r1, [pc, #1032]	; 4000f924 <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x578>
4000f518:	e28d000c 	add	r0, sp, #12
4000f51c:	eb005709 	bl	40025148 <PropertiesBuilder::AddComment(char const*)>
4000f520:	e5942000 	ldr	r2, [r4]
4000f524:	e28d000c 	add	r0, sp, #12
4000f528:	e59f13f8 	ldr	r1, [pc, #1016]	; 4000f928 <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x57c>
4000f52c:	e7e02252 	ubfx	r2, r2, #4, #1
4000f530:	ebfffc87 	bl	4000e754 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
4000f534:	e5942000 	ldr	r2, [r4]
4000f538:	e28d000c 	add	r0, sp, #12
4000f53c:	e59f13e8 	ldr	r1, [pc, #1000]	; 4000f92c <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x580>
4000f540:	e7e022d2 	ubfx	r2, r2, #5, #1
4000f544:	ebfffc82 	bl	4000e754 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
4000f548:	e59f13e0 	ldr	r1, [pc, #992]	; 4000f930 <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x584>
4000f54c:	e28d000c 	add	r0, sp, #12
4000f550:	eb0056fc 	bl	40025148 <PropertiesBuilder::AddComment(char const*)>
4000f554:	e5942000 	ldr	r2, [r4]
4000f558:	e28d000c 	add	r0, sp, #12
4000f55c:	e59f13d0 	ldr	r1, [pc, #976]	; 4000f934 <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x588>
4000f560:	e7e020d2 	ubfx	r2, r2, #1, #1
4000f564:	ebfffc7a 	bl	4000e754 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
4000f568:	e5942000 	ldr	r2, [r4]
4000f56c:	e28d000c 	add	r0, sp, #12
4000f570:	e59f13c0 	ldr	r1, [pc, #960]	; 4000f938 <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x58c>
4000f574:	e7e02dd2 	ubfx	r2, r2, #27, #1
4000f578:	ebfffc75 	bl	4000e754 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
4000f57c:	e5d43009 	ldrb	r3, [r4, #9]
4000f580:	e28d000c 	add	r0, sp, #12
4000f584:	e1d420d8 	ldrsb	r2, [r4, #8]
4000f588:	e59f13ac 	ldr	r1, [pc, #940]	; 4000f93c <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x590>
4000f58c:	eb0056c1 	bl	40025098 <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)>
4000f590:	e59f13a8 	ldr	r1, [pc, #936]	; 4000f940 <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x594>
4000f594:	e28d000c 	add	r0, sp, #12
4000f598:	eb0056ea 	bl	40025148 <PropertiesBuilder::AddComment(char const*)>
4000f59c:	e5943000 	ldr	r3, [r4]
4000f5a0:	e28d000c 	add	r0, sp, #12
4000f5a4:	e5d4200f 	ldrb	r2, [r4, #15]
4000f5a8:	e7e035d3 	ubfx	r3, r3, #11, #1
4000f5ac:	e59f1390 	ldr	r1, [pc, #912]	; 4000f944 <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x598>
4000f5b0:	ebfffc1b 	bl	4000e624 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]>
4000f5b4:	e5943000 	ldr	r3, [r4]
4000f5b8:	e28d000c 	add	r0, sp, #12
4000f5bc:	e5d42013 	ldrb	r2, [r4, #19]
4000f5c0:	e7e037d3 	ubfx	r3, r3, #15, #1
4000f5c4:	e59f137c 	ldr	r1, [pc, #892]	; 4000f948 <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x59c>
4000f5c8:	ebfffc15 	bl	4000e624 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]>
4000f5cc:	e5943000 	ldr	r3, [r4]
4000f5d0:	e28d000c 	add	r0, sp, #12
4000f5d4:	e5d42012 	ldrb	r2, [r4, #18]
4000f5d8:	e7e03753 	ubfx	r3, r3, #14, #1
4000f5dc:	e59f1368 	ldr	r1, [pc, #872]	; 4000f94c <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x5a0>
4000f5e0:	ebfffc0f 	bl	4000e624 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]>
4000f5e4:	e5943000 	ldr	r3, [r4]
4000f5e8:	e28d000c 	add	r0, sp, #12
4000f5ec:	e5d42011 	ldrb	r2, [r4, #17]
4000f5f0:	e7e036d3 	ubfx	r3, r3, #13, #1
4000f5f4:	e59f1354 	ldr	r1, [pc, #852]	; 4000f950 <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x5a4>
4000f5f8:	ebfffc09 	bl	4000e624 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]>
4000f5fc:	e5943000 	ldr	r3, [r4]
4000f600:	e28d000c 	add	r0, sp, #12
4000f604:	e5d42010 	ldrb	r2, [r4, #16]
4000f608:	e7e03653 	ubfx	r3, r3, #12, #1
4000f60c:	e59f1340 	ldr	r1, [pc, #832]	; 4000f954 <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x5a8>
4000f610:	ebfffc03 	bl	4000e624 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]>
4000f614:	e5943000 	ldr	r3, [r4]
4000f618:	e28d000c 	add	r0, sp, #12
4000f61c:	e5d42017 	ldrb	r2, [r4, #23]
4000f620:	e7e039d3 	ubfx	r3, r3, #19, #1
4000f624:	e59f132c 	ldr	r1, [pc, #812]	; 4000f958 <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x5ac>
4000f628:	ebfffbfd 	bl	4000e624 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]>
4000f62c:	e5943000 	ldr	r3, [r4]
4000f630:	e28d000c 	add	r0, sp, #12
4000f634:	e5d42016 	ldrb	r2, [r4, #22]
4000f638:	e7e03953 	ubfx	r3, r3, #18, #1
4000f63c:	e59f1318 	ldr	r1, [pc, #792]	; 4000f95c <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x5b0>
4000f640:	ebfffbf7 	bl	4000e624 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]>
4000f644:	e5943000 	ldr	r3, [r4]
4000f648:	e28d000c 	add	r0, sp, #12
4000f64c:	e5d42015 	ldrb	r2, [r4, #21]
4000f650:	e7e038d3 	ubfx	r3, r3, #17, #1
4000f654:	e59f1304 	ldr	r1, [pc, #772]	; 4000f960 <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x5b4>
4000f658:	ebfffbf1 	bl	4000e624 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]>
4000f65c:	e5943000 	ldr	r3, [r4]
4000f660:	e28d000c 	add	r0, sp, #12
4000f664:	e5d42014 	ldrb	r2, [r4, #20]
4000f668:	e7e03853 	ubfx	r3, r3, #16, #1
4000f66c:	e59f12f0 	ldr	r1, [pc, #752]	; 4000f964 <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x5b8>
4000f670:	ebfffbeb 	bl	4000e624 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]>
4000f674:	e5943000 	ldr	r3, [r4]
4000f678:	e28d000c 	add	r0, sp, #12
4000f67c:	e5d4201e 	ldrb	r2, [r4, #30]
4000f680:	e7e03cd3 	ubfx	r3, r3, #25, #1
4000f684:	e59f12dc 	ldr	r1, [pc, #732]	; 4000f968 <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x5bc>
4000f688:	ebfffbe5 	bl	4000e624 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]>
4000f68c:	e5942000 	ldr	r2, [r4]
4000f690:	e28d000c 	add	r0, sp, #12
4000f694:	e59f12d0 	ldr	r1, [pc, #720]	; 4000f96c <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x5c0>
4000f698:	e7e02e52 	ubfx	r2, r2, #28, #1
4000f69c:	ebfffc2c 	bl	4000e754 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
4000f6a0:	e5942000 	ldr	r2, [r4]
4000f6a4:	e28d000c 	add	r0, sp, #12
4000f6a8:	e59f12c0 	ldr	r1, [pc, #704]	; 4000f970 <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x5c4>
4000f6ac:	e7e02ed2 	ubfx	r2, r2, #29, #1
4000f6b0:	ebfffc27 	bl	4000e754 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
4000f6b4:	e59f12b8 	ldr	r1, [pc, #696]	; 4000f974 <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x5c8>
4000f6b8:	e28d000c 	add	r0, sp, #12
4000f6bc:	eb0056a1 	bl	40025148 <PropertiesBuilder::AddComment(char const*)>
4000f6c0:	e5942000 	ldr	r2, [r4]
4000f6c4:	e28d000c 	add	r0, sp, #12
4000f6c8:	e59f12a8 	ldr	r1, [pc, #680]	; 4000f978 <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x5cc>
4000f6cc:	e7e02bd2 	ubfx	r2, r2, #23, #1
4000f6d0:	ebfffc1f 	bl	4000e754 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
4000f6d4:	e5943000 	ldr	r3, [r4]
4000f6d8:	e28d000c 	add	r0, sp, #12
4000f6dc:	e5d4201d 	ldrb	r2, [r4, #29]
4000f6e0:	e7e03c53 	ubfx	r3, r3, #24, #1
4000f6e4:	e59f1290 	ldr	r1, [pc, #656]	; 4000f97c <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x5d0>
4000f6e8:	ebfffbcd 	bl	4000e624 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]>
4000f6ec:	e59f128c 	ldr	r1, [pc, #652]	; 4000f980 <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x5d4>
4000f6f0:	e28d000c 	add	r0, sp, #12
4000f6f4:	eb005693 	bl	40025148 <PropertiesBuilder::AddComment(char const*)>
4000f6f8:	e5943000 	ldr	r3, [r4]
4000f6fc:	e28d000c 	add	r0, sp, #12
4000f700:	e594201f 	ldr	r2, [r4, #31]
4000f704:	e7e03d53 	ubfx	r3, r3, #26, #1
4000f708:	e59f1274 	ldr	r1, [pc, #628]	; 4000f984 <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x5d8>
4000f70c:	eb00562c 	bl	40024fc4 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)>
4000f710:	e59f1270 	ldr	r1, [pc, #624]	; 4000f988 <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x5dc>
4000f714:	e28d000c 	add	r0, sp, #12
4000f718:	eb00568a 	bl	40025148 <PropertiesBuilder::AddComment(char const*)>
4000f71c:	e5943000 	ldr	r3, [r4]
4000f720:	e28d000c 	add	r0, sp, #12
4000f724:	e5d42006 	ldrb	r2, [r4, #6]
4000f728:	e7e03153 	ubfx	r3, r3, #2, #1
4000f72c:	e59f1258 	ldr	r1, [pc, #600]	; 4000f98c <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x5e0>
4000f730:	ebfffbbb 	bl	4000e624 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]>
4000f734:	e59f1254 	ldr	r1, [pc, #596]	; 4000f990 <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x5e4>
4000f738:	e28d000c 	add	r0, sp, #12
4000f73c:	eb005681 	bl	40025148 <PropertiesBuilder::AddComment(char const*)>
4000f740:	e5942000 	ldr	r2, [r4]
4000f744:	e28d000c 	add	r0, sp, #12
4000f748:	e59f1244 	ldr	r1, [pc, #580]	; 4000f994 <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x5e8>
4000f74c:	e7e024d2 	ubfx	r2, r2, #9, #1
4000f750:	ebfffbff 	bl	4000e754 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
4000f754:	e5943000 	ldr	r3, [r4]
4000f758:	e28d000c 	add	r0, sp, #12
4000f75c:	e5d4200a 	ldrb	r2, [r4, #10]
4000f760:	e7e03353 	ubfx	r3, r3, #6, #1
4000f764:	e59f122c 	ldr	r1, [pc, #556]	; 4000f998 <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x5ec>
4000f768:	ebfffbad 	bl	4000e624 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]>
4000f76c:	e5943000 	ldr	r3, [r4]
4000f770:	e28d000c 	add	r0, sp, #12
4000f774:	e5d4200b 	ldrb	r2, [r4, #11]
4000f778:	e7e033d3 	ubfx	r3, r3, #7, #1
4000f77c:	e59f1218 	ldr	r1, [pc, #536]	; 4000f99c <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x5f0>
4000f780:	ebfffba7 	bl	4000e624 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]>
4000f784:	e5943000 	ldr	r3, [r4]
4000f788:	e28d000c 	add	r0, sp, #12
4000f78c:	e5d4200c 	ldrb	r2, [r4, #12]
4000f790:	e7e03453 	ubfx	r3, r3, #8, #1
4000f794:	e59f1204 	ldr	r1, [pc, #516]	; 4000f9a0 <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x5f4>
4000f798:	ebfffba1 	bl	4000e624 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]>
4000f79c:	e59f1200 	ldr	r1, [pc, #512]	; 4000f9a4 <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x5f8>
4000f7a0:	e28d000c 	add	r0, sp, #12
4000f7a4:	eb005667 	bl	40025148 <PropertiesBuilder::AddComment(char const*)>
4000f7a8:	e5942000 	ldr	r2, [r4]
4000f7ac:	e28d000c 	add	r0, sp, #12
4000f7b0:	e59f11f0 	ldr	r1, [pc, #496]	; 4000f9a8 <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x5fc>
4000f7b4:	e7e02a52 	ubfx	r2, r2, #20, #1
4000f7b8:	ebfffbe5 	bl	4000e754 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
4000f7bc:	e1dd11b2 	ldrh	r1, [sp, #18]
4000f7c0:	e1dd51b0 	ldrh	r5, [sp, #16]
4000f7c4:	e1510005 	cmp	r1, r5
4000f7c8:	2a00001c 	bcs	4000f840 <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x494>
4000f7cc:	e59d000c 	ldr	r0, [sp, #12]
4000f7d0:	e0455001 	sub	r5, r5, r1
4000f7d4:	e0800001 	add	r0, r0, r1
4000f7d8:	e5941000 	ldr	r1, [r4]
4000f7dc:	e5dd2014 	ldrb	r2, [sp, #20]
4000f7e0:	e1d431b9 	ldrh	r3, [r4, #25]
4000f7e4:	e3110602 	tst	r1, #2097152	; 0x200000
4000f7e8:	1a000009 	bne	4000f814 <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x468>
4000f7ec:	e3520000 	cmp	r2, #0
4000f7f0:	1a000009 	bne	4000f81c <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x470>
4000f7f4:	e58d3000 	str	r3, [sp]
4000f7f8:	e59f21ac 	ldr	r2, [pc, #428]	; 4000f9ac <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x600>
4000f7fc:	e59f31ac 	ldr	r3, [pc, #428]	; 4000f9b0 <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x604>
4000f800:	ea000008 	b	4000f828 <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x47c>
4000f804:	e58d2000 	str	r2, [sp]
4000f808:	e59f30e8 	ldr	r3, [pc, #232]	; 4000f8f8 <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x54c>
4000f80c:	e59f21a0 	ldr	r2, [pc, #416]	; 4000f9b4 <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x608>
4000f810:	eaffff13 	b	4000f464 <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0xb8>
4000f814:	e3520000 	cmp	r2, #0
4000f818:	0a000031 	beq	4000f8e4 <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x538>
4000f81c:	e58d3000 	str	r3, [sp]
4000f820:	e59f2190 	ldr	r2, [pc, #400]	; 4000f9b8 <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x60c>
4000f824:	e59f3184 	ldr	r3, [pc, #388]	; 4000f9b0 <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x604>
4000f828:	e1a01005 	mov	r1, r5
4000f82c:	eb0074f4 	bl	4002cc04 <snprintf>
4000f830:	e1550000 	cmp	r5, r0
4000f834:	a1dd31b2 	ldrhge	r3, [sp, #18]
4000f838:	a0830000 	addge	r0, r3, r0
4000f83c:	a1cd01b2 	strhge	r0, [sp, #18]
4000f840:	e59f1174 	ldr	r1, [pc, #372]	; 4000f9bc <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x610>
4000f844:	e28d000c 	add	r0, sp, #12
4000f848:	eb00563e 	bl	40025148 <PropertiesBuilder::AddComment(char const*)>
4000f84c:	e5d4301b 	ldrb	r3, [r4, #27]
4000f850:	e28d000c 	add	r0, sp, #12
4000f854:	e59f1164 	ldr	r1, [pc, #356]	; 4000f9c0 <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x614>
4000f858:	e2433001 	sub	r3, r3, #1
4000f85c:	e16f3f13 	clz	r3, r3
4000f860:	e1a032a3 	lsr	r3, r3, #5
4000f864:	e1a02003 	mov	r2, r3
4000f868:	ebfffb93 	bl	4000e6bc <bool PropertiesBuilder::Add<bool>(char const*, bool, bool, int) [clone .isra.0]>
4000f86c:	e59f1150 	ldr	r1, [pc, #336]	; 4000f9c4 <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x618>
4000f870:	e28d000c 	add	r0, sp, #12
4000f874:	eb005633 	bl	40025148 <PropertiesBuilder::AddComment(char const*)>
4000f878:	e5d4301b 	ldrb	r3, [r4, #27]
4000f87c:	e28d000c 	add	r0, sp, #12
4000f880:	e59f1140 	ldr	r1, [pc, #320]	; 4000f9c8 <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x61c>
4000f884:	e2433002 	sub	r3, r3, #2
4000f888:	e16f3f13 	clz	r3, r3
4000f88c:	e1a032a3 	lsr	r3, r3, #5
4000f890:	e1a02003 	mov	r2, r3
4000f894:	ebfffb88 	bl	4000e6bc <bool PropertiesBuilder::Add<bool>(char const*, bool, bool, int) [clone .isra.0]>
4000f898:	e5dd3014 	ldrb	r3, [sp, #20]
4000f89c:	e3530000 	cmp	r3, #0
4000f8a0:	0a00000a 	beq	4000f8d0 <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x524>
4000f8a4:	e1dd21b2 	ldrh	r2, [sp, #18]
4000f8a8:	e59d300c 	ldr	r3, [sp, #12]
4000f8ac:	e0833002 	add	r3, r3, r2
4000f8b0:	e3a0207d 	mov	r2, #125	; 0x7d
4000f8b4:	e5432001 	strb	r2, [r3, #-1]
4000f8b8:	e59d100c 	ldr	r1, [sp, #12]
4000f8bc:	e1dd31b2 	ldrh	r3, [sp, #18]
4000f8c0:	e7c12003 	strb	r2, [r1, r3]
4000f8c4:	e1dd31b2 	ldrh	r3, [sp, #18]
4000f8c8:	e2833001 	add	r3, r3, #1
4000f8cc:	e1cd31b2 	strh	r3, [sp, #18]
4000f8d0:	e1dd21b2 	ldrh	r2, [sp, #18]
4000f8d4:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
4000f8d8:	e5832000 	str	r2, [r3]
4000f8dc:	e28dd018 	add	sp, sp, #24
4000f8e0:	e8bd8070 	pop	{r4, r5, r6, pc}
4000f8e4:	e58d3000 	str	r3, [sp]
4000f8e8:	e59f20dc 	ldr	r2, [pc, #220]	; 4000f9cc <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x620>
4000f8ec:	e59f30bc 	ldr	r3, [pc, #188]	; 4000f9b0 <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x604>
4000f8f0:	eaffffcc 	b	4000f828 <LtcParams::Builder(ltcparams::Params const*, char*, unsigned long, unsigned long&)+0x47c>
4000f8f4:	40031204 	andmi	r1, r3, r4, lsl #4
4000f8f8:	400311fd 	strdmi	r1, [r3], -sp
4000f8fc:	4002e14e 	andmi	lr, r2, lr, asr #2
4000f900:	4002e143 	andmi	lr, r2, r3, asr #2
4000f904:	40030fcf 	andmi	r0, r3, pc, asr #31
4000f908:	400311cd 	andmi	r1, r3, sp, asr #3
4000f90c:	400311bd 			; <UNDEFINED> instruction: 0x400311bd
4000f910:	40031195 	mulmi	r3, r5, r1
4000f914:	400311b0 			; <UNDEFINED> instruction: 0x400311b0
4000f918:	400311a1 	andmi	r1, r3, r1, lsr #3
4000f91c:	40031184 	andmi	r1, r3, r4, lsl #3
4000f920:	40031178 	andmi	r1, r3, r8, ror r1
4000f924:	40030fdf 	ldrdmi	r0, [r3], -pc	; <UNPREDICTABLE>
4000f928:	4003116b 	andmi	r1, r3, fp, ror #2
4000f92c:	4003115a 	andmi	r1, r3, sl, asr r1
4000f930:	40030ff2 	strdmi	r0, [r3], -r2
4000f934:	400311f2 	strdmi	r1, [r3], -r2
4000f938:	400311e8 	andmi	r1, r3, r8, ror #3
4000f93c:	400311dd 	ldrdmi	r1, [r3], -sp
4000f940:	40031001 	andmi	r1, r3, r1
4000f944:	40031129 	andmi	r1, r3, r9, lsr #2
4000f948:	400310f8 	strdmi	r1, [r3], -r8
4000f94c:	40031103 	andmi	r1, r3, r3, lsl #2
4000f950:	40031110 	andmi	r1, r3, r0, lsl r1
4000f954:	4003111d 	andmi	r1, r3, sp, lsl r1
4000f958:	400310be 	strhmi	r1, [r3], -lr
4000f95c:	400310c8 	andmi	r1, r3, r8, asr #1
4000f960:	400310d4 	ldrdmi	r1, [r3], -r4
4000f964:	400310e0 	andmi	r1, r3, r0, ror #1
4000f968:	4003108e 	andmi	r1, r3, lr, lsl #1
4000f96c:	400310eb 	andmi	r1, r3, fp, ror #1
4000f970:	400310b2 	strhmi	r1, [r3], -r2
4000f974:	40031011 	andmi	r1, r3, r1, lsl r0
4000f978:	400310a5 	andmi	r1, r3, r5, lsr #1
4000f97c:	40031098 	mulmi	r3, r8, r0
4000f980:	4003101d 	andmi	r1, r3, sp, lsl r0
4000f984:	4003112d 	andmi	r1, r3, sp, lsr #2
4000f988:	4003102c 	andmi	r1, r3, ip, lsr #32
4000f98c:	40031139 	andmi	r1, r3, r9, lsr r1
4000f990:	40031037 	andmi	r1, r3, r7, lsr r0
4000f994:	40031140 	andmi	r1, r3, r0, asr #2
4000f998:	40031155 	andmi	r1, r3, r5, asr r1
4000f99c:	4003114f 	andmi	r1, r3, pc, asr #2
4000f9a0:	4003114b 	andmi	r1, r3, fp, asr #2
4000f9a4:	40031042 	andmi	r1, r3, r2, asr #32
4000f9a8:	40031083 	andmi	r1, r3, r3, lsl #1
4000f9ac:	4002e13b 	andmi	lr, r2, fp, lsr r1
4000f9b0:	4003107a 	andmi	r1, r3, sl, ror r0
4000f9b4:	4002e14f 	andmi	lr, r2, pc, asr #2
4000f9b8:	4002e132 	andmi	lr, r2, r2, lsr r1
4000f9bc:	4003104d 	andmi	r1, r3, sp, asr #32
4000f9c0:	4003106c 	andmi	r1, r3, ip, rrx
4000f9c4:	40031509 	andmi	r1, r3, r9, lsl #10
4000f9c8:	4003105c 	andmi	r1, r3, ip, asr r0
4000f9cc:	4002e13c 	andmi	lr, r2, ip, lsr r1

4000f9d0 <LtcParams::GetSourceType(ltc::Source)>:
4000f9d0:	e3510007 	cmp	r1, #7
4000f9d4:	90811181 	addls	r1, r1, r1, lsl #3
4000f9d8:	959f0008 	ldrls	r0, [pc, #8]	; 4000f9e8 <LtcParams::GetSourceType(ltc::Source)+0x18>
4000f9dc:	90800001 	addls	r0, r0, r1
4000f9e0:	859f0004 	ldrhi	r0, [pc, #4]	; 4000f9ec <LtcParams::GetSourceType(ltc::Source)+0x1c>
4000f9e4:	e12fff1e 	bx	lr
4000f9e8:	4003120c 	andmi	r1, r3, ip, lsl #4
4000f9ec:	40030e9e 	mulmi	r3, lr, lr

4000f9f0 <LtcParams::GetSourceType(char const*)>:
4000f9f0:	e59fc060 	ldr	ip, [pc, #96]	; 4000fa58 <LtcParams::GetSourceType(char const*)+0x68>
4000f9f4:	e3a00000 	mov	r0, #0
4000f9f8:	e92d4070 	push	{r4, r5, r6, lr}
4000f9fc:	e24c4001 	sub	r4, ip, #1
4000fa00:	e241e001 	sub	lr, r1, #1
4000fa04:	e5f43001 	ldrb	r3, [r4, #1]!
4000fa08:	e2432041 	sub	r2, r3, #65	; 0x41
4000fa0c:	e1a05003 	mov	r5, r3
4000fa10:	e3520019 	cmp	r2, #25
4000fa14:	e5fe2001 	ldrb	r2, [lr, #1]!
4000fa18:	92835020 	addls	r5, r3, #32
4000fa1c:	e2426041 	sub	r6, r2, #65	; 0x41
4000fa20:	e3560019 	cmp	r6, #25
4000fa24:	92822020 	addls	r2, r2, #32
4000fa28:	e1520005 	cmp	r2, r5
4000fa2c:	1a000003 	bne	4000fa40 <LtcParams::GetSourceType(char const*)+0x50>
4000fa30:	e3530000 	cmp	r3, #0
4000fa34:	1afffff2 	bne	4000fa04 <LtcParams::GetSourceType(char const*)+0x14>
4000fa38:	e6ef0070 	uxtb	r0, r0
4000fa3c:	e8bd8070 	pop	{r4, r5, r6, pc}
4000fa40:	e2800001 	add	r0, r0, #1
4000fa44:	e28cc009 	add	ip, ip, #9
4000fa48:	e3500008 	cmp	r0, #8
4000fa4c:	1affffea 	bne	4000f9fc <LtcParams::GetSourceType(char const*)+0xc>
4000fa50:	e3a00000 	mov	r0, #0
4000fa54:	e8bd8070 	pop	{r4, r5, r6, pc}
4000fa58:	4003120c 	andmi	r1, r3, ip, lsl #4

4000fa5c <NtpServer::staticCallbackFunction(unsigned char const*, unsigned long, unsigned long, unsigned short)>:
4000fa5c:	e3510030 	cmp	r1, #48	; 0x30
4000fa60:	112fff1e 	bxne	lr
4000fa64:	e92d4013 	push	{r0, r1, r4, lr}
4000fa68:	e1a0e001 	mov	lr, r1
4000fa6c:	e5d01000 	ldrb	r1, [r0]
4000fa70:	e2011003 	and	r1, r1, #3
4000fa74:	e3510003 	cmp	r1, #3
4000fa78:	1a000010 	bne	4000fac0 <NtpServer::staticCallbackFunction(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x64>
4000fa7c:	e59f1044 	ldr	r1, [pc, #68]	; 4000fac8 <NtpServer::staticCallbackFunction(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x6c>
4000fa80:	e591c000 	ldr	ip, [r1]
4000fa84:	e59f1040 	ldr	r1, [pc, #64]	; 4000facc <NtpServer::staticCallbackFunction(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x70>
4000fa88:	e5914000 	ldr	r4, [r1]
4000fa8c:	e58c401c 	str	r4, [ip, #28]
4000fa90:	e3540000 	cmp	r4, #0
4000fa94:	e5901028 	ldr	r1, [r0, #40]	; 0x28
4000fa98:	e58c1028 	str	r1, [ip, #40]	; 0x28
4000fa9c:	e590102c 	ldr	r1, [r0, #44]	; 0x2c
4000faa0:	e59c000c 	ldr	r0, [ip, #12]
4000faa4:	e58c102c 	str	r1, [ip, #44]	; 0x2c
4000faa8:	e28c1010 	add	r1, ip, #16
4000faac:	0a000003 	beq	4000fac0 <NtpServer::staticCallbackFunction(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x64>
4000fab0:	e58d3000 	str	r3, [sp]
4000fab4:	e1a03002 	mov	r3, r2
4000fab8:	e1a0200e 	mov	r2, lr
4000fabc:	eb004a2d 	bl	40022378 <net::udp_send(long, unsigned char const*, unsigned long, unsigned long, unsigned short)>
4000fac0:	e28dd008 	add	sp, sp, #8
4000fac4:	e8bd8010 	pop	{r4, pc}
4000fac8:	40057730 	andmi	r7, r5, r0, lsr r7
4000facc:	4005a73c 	andmi	sl, r5, ip, lsr r7

4000fad0 <NtpServer::NtpServer(unsigned long, unsigned long, unsigned long)>:
4000fad0:	e92d4030 	push	{r4, r5, lr}
4000fad4:	e3a0c000 	mov	ip, #0
4000fad8:	e580c000 	str	ip, [r0]
4000fadc:	e1a04000 	mov	r4, r0
4000fae0:	e580c004 	str	ip, [r0, #4]
4000fae4:	e24dd02c 	sub	sp, sp, #44	; 0x2c
4000fae8:	e580c008 	str	ip, [r0, #8]
4000faec:	e3e00000 	mvn	r0, #0
4000faf0:	e584000c 	str	r0, [r4, #12]
4000faf4:	e28de004 	add	lr, sp, #4
4000faf8:	e59f0044 	ldr	r0, [pc, #68]	; 4000fb44 <NtpServer::NtpServer(unsigned long, unsigned long, unsigned long)+0x74>
4000fafc:	e3a05025 	mov	r5, #37	; 0x25
4000fb00:	e5804000 	str	r4, [r0]
4000fb04:	e1a0000e 	mov	r0, lr
4000fb08:	e2555001 	subs	r5, r5, #1
4000fb0c:	14cec001 	strbne	ip, [lr], #1
4000fb10:	1afffffc 	bne	4000fb08 <NtpServer::NtpServer(unsigned long, unsigned long, unsigned long)+0x38>
4000fb14:	e58d3010 	str	r3, [sp, #16]
4000fb18:	e2811064 	add	r1, r1, #100	; 0x64
4000fb1c:	e58d1018 	str	r1, [sp, #24]
4000fb20:	e2422001 	sub	r2, r2, #1
4000fb24:	e58d2014 	str	r2, [sp, #20]
4000fb28:	eb00752f 	bl	4002cfec <mktime>
4000fb2c:	e59f3014 	ldr	r3, [pc, #20]	; 4000fb48 <NtpServer::NtpServer(unsigned long, unsigned long, unsigned long)+0x78>
4000fb30:	e0803003 	add	r3, r0, r3
4000fb34:	e1a00004 	mov	r0, r4
4000fb38:	e5843000 	str	r3, [r4]
4000fb3c:	e28dd02c 	add	sp, sp, #44	; 0x2c
4000fb40:	e8bd8030 	pop	{r4, r5, pc}
4000fb44:	40057730 	andmi	r7, r5, r0, lsr r7
4000fb48:	83aa7e80 			; <UNDEFINED> instruction: 0x83aa7e80

4000fb4c <NtpServer::Start()>:
4000fb4c:	e92d4010 	push	{r4, lr}
4000fb50:	e1a04000 	mov	r4, r0
4000fb54:	e59f101c 	ldr	r1, [pc, #28]	; 4000fb78 <NtpServer::Start()+0x2c>
4000fb58:	e3a0007b 	mov	r0, #123	; 0x7b
4000fb5c:	eb0049b9 	bl	40022248 <net::udp_begin(unsigned short, void (*)(unsigned char const*, unsigned long, unsigned long, unsigned short))>
4000fb60:	e59f2014 	ldr	r2, [pc, #20]	; 4000fb7c <NtpServer::Start()+0x30>
4000fb64:	e3a03000 	mov	r3, #0
4000fb68:	e584000c 	str	r0, [r4, #12]
4000fb6c:	e1c421f0 	strd	r2, [r4, #16]
4000fb70:	e5843018 	str	r3, [r4, #24]
4000fb74:	e8bd8010 	pop	{r4, pc}
4000fb78:	4000fa5c 	andmi	pc, r0, ip, asr sl	; <UNPREDICTABLE>
4000fb7c:	f6040224 			; <UNDEFINED> instruction: 0xf6040224

4000fb80 <NtpServer::Print()>:
4000fb80:	e92d4013 	push	{r0, r1, r4, lr}
4000fb84:	e1a04000 	mov	r4, r0
4000fb88:	e59f004c 	ldr	r0, [pc, #76]	; 4000fbdc <NtpServer::Print()+0x5c>
4000fb8c:	e3a01004 	mov	r1, #4
4000fb90:	eb0073fe 	bl	4002cb90 <printf>
4000fb94:	e59f0044 	ldr	r0, [pc, #68]	; 4000fbe0 <NtpServer::Print()+0x60>
4000fb98:	e3a0107b 	mov	r1, #123	; 0x7b
4000fb9c:	eb0073fb 	bl	4002cb90 <printf>
4000fba0:	e59f003c 	ldr	r0, [pc, #60]	; 4000fbe4 <NtpServer::Print()+0x64>
4000fba4:	e3a01002 	mov	r1, #2
4000fba8:	eb0073f8 	bl	4002cb90 <printf>
4000fbac:	e5942000 	ldr	r2, [r4]
4000fbb0:	e28d0004 	add	r0, sp, #4
4000fbb4:	e59f302c 	ldr	r3, [pc, #44]	; 4000fbe8 <NtpServer::Print()+0x68>
4000fbb8:	e0823003 	add	r3, r2, r3
4000fbbc:	e58d3004 	str	r3, [sp, #4]
4000fbc0:	eb0074fb 	bl	4002cfb4 <localtime>
4000fbc4:	eb007152 	bl	4002c114 <asctime>
4000fbc8:	e1a01000 	mov	r1, r0
4000fbcc:	e59f0018 	ldr	r0, [pc, #24]	; 4000fbec <NtpServer::Print()+0x6c>
4000fbd0:	eb0073ee 	bl	4002cb90 <printf>
4000fbd4:	e28dd008 	add	sp, sp, #8
4000fbd8:	e8bd8010 	pop	{r4, pc}
4000fbdc:	40031254 	andmi	r1, r3, r4, asr r2
4000fbe0:	40031264 	andmi	r1, r3, r4, ror #4
4000fbe4:	40031270 	andmi	r1, r3, r0, ror r2
4000fbe8:	7c558180 	ldfvcp	f0, [r5], {128}	; 0x80
4000fbec:	400305ff 	strdmi	r0, [r3], -pc	; <UNPREDICTABLE>

4000fbf0 <Display::PutString(char const*) [clone .isra.0]>:
4000fbf0:	e2503000 	subs	r3, r0, #0
4000fbf4:	012fff1e 	bxeq	lr
4000fbf8:	e5933000 	ldr	r3, [r3]
4000fbfc:	e5933018 	ldr	r3, [r3, #24]
4000fc00:	e12fff13 	bx	r3

4000fc04 <Display::PutChar(int) [clone .isra.0]>:
4000fc04:	e2503000 	subs	r3, r0, #0
4000fc08:	012fff1e 	bxeq	lr
4000fc0c:	e5933000 	ldr	r3, [r3]
4000fc10:	e5933014 	ldr	r3, [r3, #20]
4000fc14:	e12fff13 	bx	r3

4000fc18 <TCNet::GetLayerName(tcnet::Layer)>:
4000fc18:	e3500007 	cmp	r0, #7
4000fc1c:	979ff100 	ldrls	pc, [pc, r0, lsl #2]
4000fc20:	ea000010 	b	4000fc68 <TCNet::GetLayerName(tcnet::Layer)+0x50>
4000fc24:	4000fc4c 	andmi	pc, r0, ip, asr #24
4000fc28:	4000fc4c 	andmi	pc, r0, ip, asr #24
4000fc2c:	4000fc4c 	andmi	pc, r0, ip, asr #24
4000fc30:	4000fc4c 	andmi	pc, r0, ip, asr #24
4000fc34:	4000fc70 	andmi	pc, r0, r0, ror ip	; <UNPREDICTABLE>
4000fc38:	4000fc44 	andmi	pc, r0, r4, asr #24
4000fc3c:	4000fc58 	andmi	pc, r0, r8, asr ip	; <UNPREDICTABLE>
4000fc40:	4000fc60 	andmi	pc, r0, r0, ror #24
4000fc44:	e3a00042 	mov	r0, #66	; 0x42
4000fc48:	e12fff1e 	bx	lr
4000fc4c:	e2800031 	add	r0, r0, #49	; 0x31
4000fc50:	e6ef0070 	uxtb	r0, r0
4000fc54:	e12fff1e 	bx	lr
4000fc58:	e3a0004d 	mov	r0, #77	; 0x4d
4000fc5c:	e12fff1e 	bx	lr
4000fc60:	e3a00043 	mov	r0, #67	; 0x43
4000fc64:	e12fff1e 	bx	lr
4000fc68:	e3a00020 	mov	r0, #32
4000fc6c:	e12fff1e 	bx	lr
4000fc70:	e3a00041 	mov	r0, #65	; 0x41
4000fc74:	e12fff1e 	bx	lr

4000fc78 <tcnet::display::show()>:
4000fc78:	e92d407f 	push	{r0, r1, r2, r3, r4, r5, r6, lr}
4000fc7c:	e59f40c4 	ldr	r4, [pc, #196]	; 4000fd48 <tcnet::display::show()+0xd0>
4000fc80:	e5943000 	ldr	r3, [r4]
4000fc84:	e5930014 	ldr	r0, [r3, #20]
4000fc88:	e3500000 	cmp	r0, #0
4000fc8c:	0a000004 	beq	4000fca4 <tcnet::display::show()+0x2c>
4000fc90:	e5903000 	ldr	r3, [r0]
4000fc94:	e3a02003 	mov	r2, #3
4000fc98:	e3a01006 	mov	r1, #6
4000fc9c:	e5933020 	ldr	r3, [r3, #32]
4000fca0:	e12fff33 	blx	r3
4000fca4:	e5943000 	ldr	r3, [r4]
4000fca8:	e3a0104c 	mov	r1, #76	; 0x4c
4000fcac:	e59f5098 	ldr	r5, [pc, #152]	; 4000fd4c <tcnet::display::show()+0xd4>
4000fcb0:	e5930014 	ldr	r0, [r3, #20]
4000fcb4:	ebffffd2 	bl	4000fc04 <Display::PutChar(int) [clone .isra.0]>
4000fcb8:	e5953000 	ldr	r3, [r5]
4000fcbc:	e5946000 	ldr	r6, [r4]
4000fcc0:	e5930030 	ldr	r0, [r3, #48]	; 0x30
4000fcc4:	ebffffd3 	bl	4000fc18 <TCNet::GetLayerName(tcnet::Layer)>
4000fcc8:	e1a01000 	mov	r1, r0
4000fccc:	e5960014 	ldr	r0, [r6, #20]
4000fcd0:	ebffffcb 	bl	4000fc04 <Display::PutChar(int) [clone .isra.0]>
4000fcd4:	e5953000 	ldr	r3, [r5]
4000fcd8:	e5d32035 	ldrb	r2, [r3, #53]	; 0x35
4000fcdc:	e3520000 	cmp	r2, #0
4000fce0:	03a00006 	moveq	r0, #6
4000fce4:	05d31034 	ldrbeq	r1, [r3, #52]	; 0x34
4000fce8:	15943000 	ldrne	r3, [r4]
4000fcec:	05943000 	ldreq	r3, [r4]
4000fcf0:	059f2058 	ldreq	r2, [pc, #88]	; 4000fd50 <tcnet::display::show()+0xd8>
4000fcf4:	159f1058 	ldrne	r1, [pc, #88]	; 4000fd54 <tcnet::display::show()+0xdc>
4000fcf8:	00212190 	mlaeq	r1, r0, r1, r2
4000fcfc:	e5930014 	ldr	r0, [r3, #20]
4000fd00:	ebffffba 	bl	4000fbf0 <Display::PutString(char const*) [clone .isra.0]>
4000fd04:	e59f204c 	ldr	r2, [pc, #76]	; 4000fd58 <tcnet::display::show()+0xe0>
4000fd08:	e28d3004 	add	r3, sp, #4
4000fd0c:	e5920000 	ldr	r0, [r2]
4000fd10:	e5921004 	ldr	r1, [r2, #4]
4000fd14:	e8a30003 	stmia	r3!, {r0, r1}
4000fd18:	e3a03000 	mov	r3, #0
4000fd1c:	e5cd300c 	strb	r3, [sp, #12]
4000fd20:	e5953000 	ldr	r3, [r5]
4000fd24:	e5930030 	ldr	r0, [r3, #48]	; 0x30
4000fd28:	ebffffba 	bl	4000fc18 <TCNet::GetLayerName(tcnet::Layer)>
4000fd2c:	e59f3028 	ldr	r3, [pc, #40]	; 4000fd5c <tcnet::display::show()+0xe4>
4000fd30:	e28d1004 	add	r1, sp, #4
4000fd34:	e5cd000a 	strb	r0, [sp, #10]
4000fd38:	e5930000 	ldr	r0, [r3]
4000fd3c:	eb001372 	bl	40014b0c <LtcDisplayRgb::ShowInfo(char const*)>
4000fd40:	e28dd010 	add	sp, sp, #16
4000fd44:	e8bd8070 	pop	{r4, r5, r6, pc}
4000fd48:	4003407c 	andmi	r4, r3, ip, ror r0
4000fd4c:	40034068 	andmi	r4, r3, r8, rrx
4000fd50:	4003128d 	andmi	r1, r3, sp, lsl #5
4000fd54:	4003127f 	andmi	r1, r3, pc, ror r2
4000fd58:	40031284 	andmi	r1, r3, r4, lsl #5
4000fd5c:	40034078 	andmi	r4, r3, r8, ror r0

4000fd60 <arm_timer_handler()>:
4000fd60:	e307277c 	movw	r2, #30588	; 0x777c
4000fd64:	e3073784 	movw	r3, #30596	; 0x7784
4000fd68:	e3442005 	movt	r2, #16389	; 0x4005
4000fd6c:	e3071780 	movw	r1, #30592	; 0x7780
4000fd70:	e3443005 	movt	r3, #16389	; 0x4005
4000fd74:	e5920000 	ldr	r0, [r2]
4000fd78:	e593c000 	ldr	ip, [r3]
4000fd7c:	e3441005 	movt	r1, #16389	; 0x4005
4000fd80:	e040000c 	sub	r0, r0, ip
4000fd84:	e5810000 	str	r0, [r1]
4000fd88:	e5922000 	ldr	r2, [r2]
4000fd8c:	e5832000 	str	r2, [r3]
4000fd90:	e12fff1e 	bx	lr

4000fd94 <ArtNetReader::Start()>:
4000fd94:	e30f0d60 	movw	r0, #64864	; 0xfd60
4000fd98:	e92d4010 	push	{r4, lr}
4000fd9c:	e3440000 	movt	r0, #16384	; 0x4000
4000fda0:	eb007028 	bl	4002be48 <irq_timer_arm_physical_set(void (*)())>
4000fda4:	ebffc4e4 	bl	4000113c <irq_handler_init()>
4000fda8:	e3043060 	movw	r3, #16480	; 0x4060
4000fdac:	e3443003 	movt	r3, #16387	; 0x4003
4000fdb0:	e5930000 	ldr	r0, [r3]
4000fdb4:	eb00078b 	bl	40011be8 <LtcOutputs::Init()>
4000fdb8:	e3043088 	movw	r3, #16520	; 0x4088
4000fdbc:	e3a01002 	mov	r1, #2
4000fdc0:	e3443003 	movt	r3, #16387	; 0x4003
4000fdc4:	e8bd4010 	pop	{r4, lr}
4000fdc8:	e5930000 	ldr	r0, [r3]
4000fdcc:	ea00584c 	b	40025f04 <Hardware::SetMode(hardware::ledblink::Mode)>

4000fdd0 <ArtNetReader::Handler(artnet::TimeCode const*)>:
4000fdd0:	e92d4070 	push	{r4, r5, r6, lr}
4000fdd4:	e30756ec 	movw	r5, #30444	; 0x76ec
4000fdd8:	e3445005 	movt	r5, #16389	; 0x4005
4000fddc:	e1a04001 	mov	r4, r1
4000fde0:	e5d53004 	ldrb	r3, [r5, #4]
4000fde4:	e3530000 	cmp	r3, #0
4000fde8:	0a000015 	beq	4000fe44 <ArtNetReader::Handler(artnet::TimeCode const*)+0x74>
4000fdec:	e5d53005 	ldrb	r3, [r5, #5]
4000fdf0:	e3530000 	cmp	r3, #0
4000fdf4:	0a00001a 	beq	4000fe64 <ArtNetReader::Handler(artnet::TimeCode const*)+0x94>
4000fdf8:	e3072770 	movw	r2, #30576	; 0x7770
4000fdfc:	e284c005 	add	ip, r4, #5
4000fe00:	e3442005 	movt	r2, #16389	; 0x4005
4000fe04:	e1a03004 	mov	r3, r4
4000fe08:	e4d30001 	ldrb	r0, [r3], #1
4000fe0c:	e15c0003 	cmp	ip, r3
4000fe10:	e4c20001 	strb	r0, [r2], #1
4000fe14:	1afffffb 	bne	4000fe08 <ArtNetReader::Handler(artnet::TimeCode const*)+0x38>
4000fe18:	e3043060 	movw	r3, #16480	; 0x4060
4000fe1c:	e1a01004 	mov	r1, r4
4000fe20:	e3443003 	movt	r3, #16387	; 0x4003
4000fe24:	e5930000 	ldr	r0, [r3]
4000fe28:	eb000796 	bl	40011c88 <LtcOutputs::Update(ltc::TimeCode const*)>
4000fe2c:	e307377c 	movw	r3, #30588	; 0x777c
4000fe30:	e3443005 	movt	r3, #16389	; 0x4005
4000fe34:	e5932000 	ldr	r2, [r3]
4000fe38:	e2822001 	add	r2, r2, #1
4000fe3c:	e5832000 	str	r2, [r3]
4000fe40:	e8bd8070 	pop	{r4, r5, r6, pc}
4000fe44:	e3073790 	movw	r3, #30608	; 0x7790
4000fe48:	e3a02001 	mov	r2, #1
4000fe4c:	e3443005 	movt	r3, #16389	; 0x4005
4000fe50:	e5930000 	ldr	r0, [r3]
4000fe54:	eb0011f0 	bl	4001461c <LtcSender::SetTimeCode(ltc::TimeCode const*, bool)>
4000fe58:	e5d53005 	ldrb	r3, [r5, #5]
4000fe5c:	e3530000 	cmp	r3, #0
4000fe60:	1affffe4 	bne	4000fdf8 <ArtNetReader::Handler(artnet::TimeCode const*)+0x28>
4000fe64:	e3043074 	movw	r3, #16500	; 0x4074
4000fe68:	e1a01004 	mov	r1, r4
4000fe6c:	e3443003 	movt	r3, #16387	; 0x4003
4000fe70:	e5930000 	ldr	r0, [r3]
4000fe74:	ebfff766 	bl	4000dc14 <LtcEtc::Send(midi::Timecode const*)>
4000fe78:	eaffffde 	b	4000fdf8 <ArtNetReader::Handler(artnet::TimeCode const*)+0x28>

4000fe7c <arm_timer_handler()>:
4000fe7c:	e307277c 	movw	r2, #30588	; 0x777c
4000fe80:	e3073784 	movw	r3, #30596	; 0x7784
4000fe84:	e3442005 	movt	r2, #16389	; 0x4005
4000fe88:	e3071780 	movw	r1, #30592	; 0x7780
4000fe8c:	e3443005 	movt	r3, #16389	; 0x4005
4000fe90:	e5920000 	ldr	r0, [r2]
4000fe94:	e593c000 	ldr	ip, [r3]
4000fe98:	e3441005 	movt	r1, #16389	; 0x4005
4000fe9c:	e040000c 	sub	r0, r0, ip
4000fea0:	e5810000 	str	r0, [r1]
4000fea4:	e5922000 	ldr	r2, [r2]
4000fea8:	e5832000 	str	r2, [r3]
4000feac:	e12fff1e 	bx	lr

4000feb0 <LtcEtcReader::Handler(midi::Timecode const*)>:
4000feb0:	e92d4070 	push	{r4, r5, r6, lr}
4000feb4:	e30756ec 	movw	r5, #30444	; 0x76ec
4000feb8:	e3445005 	movt	r5, #16389	; 0x4005
4000febc:	e307377c 	movw	r3, #30588	; 0x777c
4000fec0:	e3443005 	movt	r3, #16389	; 0x4005
4000fec4:	e24dd008 	sub	sp, sp, #8
4000fec8:	e5d5c004 	ldrb	ip, [r5, #4]
4000fecc:	e1a04000 	mov	r4, r0
4000fed0:	e5932000 	ldr	r2, [r3]
4000fed4:	e1a06001 	mov	r6, r1
4000fed8:	e35c0000 	cmp	ip, #0
4000fedc:	e2822001 	add	r2, r2, #1
4000fee0:	e5832000 	str	r2, [r3]
4000fee4:	0a000010 	beq	4000ff2c <LtcEtcReader::Handler(midi::Timecode const*)+0x7c>
4000fee8:	e5d53003 	ldrb	r3, [r5, #3]
4000feec:	e3530000 	cmp	r3, #0
4000fef0:	12865005 	addne	r5, r6, #5
4000fef4:	0a000015 	beq	4000ff50 <LtcEtcReader::Handler(midi::Timecode const*)+0xa0>
4000fef8:	e2840004 	add	r0, r4, #4
4000fefc:	e1a03006 	mov	r3, r6
4000ff00:	e4d32001 	ldrb	r2, [r3], #1
4000ff04:	e1550003 	cmp	r5, r3
4000ff08:	e4c02001 	strb	r2, [r0], #1
4000ff0c:	1afffffb 	bne	4000ff00 <LtcEtcReader::Handler(midi::Timecode const*)+0x50>
4000ff10:	e3043060 	movw	r3, #16480	; 0x4060
4000ff14:	e1a01006 	mov	r1, r6
4000ff18:	e3443003 	movt	r3, #16387	; 0x4003
4000ff1c:	e5930000 	ldr	r0, [r3]
4000ff20:	e28dd008 	add	sp, sp, #8
4000ff24:	e8bd4070 	pop	{r4, r5, r6, lr}
4000ff28:	ea000756 	b	40011c88 <LtcOutputs::Update(ltc::TimeCode const*)>
4000ff2c:	e3073790 	movw	r3, #30608	; 0x7790
4000ff30:	e3a02001 	mov	r2, #1
4000ff34:	e3443005 	movt	r3, #16389	; 0x4005
4000ff38:	e5930000 	ldr	r0, [r3]
4000ff3c:	eb0011b6 	bl	4001461c <LtcSender::SetTimeCode(ltc::TimeCode const*, bool)>
4000ff40:	e5d53003 	ldrb	r3, [r5, #3]
4000ff44:	e3530000 	cmp	r3, #0
4000ff48:	12865005 	addne	r5, r6, #5
4000ff4c:	1affffe9 	bne	4000fef8 <LtcEtcReader::Handler(midi::Timecode const*)+0x48>
4000ff50:	e30726dc 	movw	r2, #30428	; 0x76dc
4000ff54:	e2865005 	add	r5, r6, #5
4000ff58:	e3442005 	movt	r2, #16389	; 0x4005
4000ff5c:	e1a03006 	mov	r3, r6
4000ff60:	e592c000 	ldr	ip, [r2]
4000ff64:	e28c2e1e 	add	r2, ip, #480	; 0x1e0
4000ff68:	e2822001 	add	r2, r2, #1
4000ff6c:	e4d31001 	ldrb	r1, [r3], #1
4000ff70:	e1530005 	cmp	r3, r5
4000ff74:	e4c21001 	strb	r1, [r2], #1
4000ff78:	1afffffb 	bne	4000ff6c <LtcEtcReader::Handler(midi::Timecode const*)+0xbc>
4000ff7c:	e59c0000 	ldr	r0, [ip]
4000ff80:	e30a373c 	movw	r3, #42812	; 0xa73c
4000ff84:	e3443005 	movt	r3, #16389	; 0x4005
4000ff88:	e28c1e1d 	add	r1, ip, #464	; 0x1d0
4000ff8c:	e2811003 	add	r1, r1, #3
4000ff90:	e5932000 	ldr	r2, [r3]
4000ff94:	e59c3048 	ldr	r3, [ip, #72]	; 0x48
4000ff98:	e3520000 	cmp	r2, #0
4000ff9c:	0affffd5 	beq	4000fef8 <LtcEtcReader::Handler(midi::Timecode const*)+0x48>
4000ffa0:	e3012936 	movw	r2, #6454	; 0x1936
4000ffa4:	e58d2000 	str	r2, [sp]
4000ffa8:	e3a02013 	mov	r2, #19
4000ffac:	eb0048f1 	bl	40022378 <net::udp_send(long, unsigned char const*, unsigned long, unsigned long, unsigned short)>
4000ffb0:	eaffffd0 	b	4000fef8 <LtcEtcReader::Handler(midi::Timecode const*)+0x48>

4000ffb4 <LtcEtcReader::Start()>:
4000ffb4:	e30f0e7c 	movw	r0, #65148	; 0xfe7c
4000ffb8:	e92d4010 	push	{r4, lr}
4000ffbc:	e3440000 	movt	r0, #16384	; 0x4000
4000ffc0:	eb006fa0 	bl	4002be48 <irq_timer_arm_physical_set(void (*)())>
4000ffc4:	ebffc45c 	bl	4000113c <irq_handler_init()>
4000ffc8:	e3043060 	movw	r3, #16480	; 0x4060
4000ffcc:	e3443003 	movt	r3, #16387	; 0x4003
4000ffd0:	e5930000 	ldr	r0, [r3]
4000ffd4:	eb000703 	bl	40011be8 <LtcOutputs::Init()>
4000ffd8:	e3043088 	movw	r3, #16520	; 0x4088
4000ffdc:	e3a01002 	mov	r1, #2
4000ffe0:	e3443003 	movt	r3, #16387	; 0x4003
4000ffe4:	e8bd4010 	pop	{r4, lr}
4000ffe8:	e5930000 	ldr	r0, [r3]
4000ffec:	ea0057c4 	b	40025f04 <Hardware::SetMode(hardware::ledblink::Mode)>

4000fff0 <LtcEtcReader::~LtcEtcReader()>:
4000fff0:	e12fff1e 	bx	lr

4000fff4 <LtcEtcReader::~LtcEtcReader()>:
4000fff4:	e92d4010 	push	{r4, lr}
4000fff8:	e3a0100c 	mov	r1, #12
4000fffc:	e1a04000 	mov	r4, r0
40010000:	eb0074f3 	bl	4002d3d4 <operator delete(void*, unsigned int)>
40010004:	e1a00004 	mov	r0, r4
40010008:	e8bd8010 	pop	{r4, pc}

4001000c <irq_timer0_handler(unsigned long)>:
4001000c:	e3073775 	movw	r3, #30581	; 0x7775
40010010:	e3a02001 	mov	r2, #1
40010014:	e3443005 	movt	r3, #16389	; 0x4005
40010018:	e5c32000 	strb	r2, [r3]
4001001c:	e12fff1e 	bx	lr

40010020 <LtcGenerator::ActionSetRate(char const*) [clone .part.0]>:
40010020:	e1a03001 	mov	r3, r1
40010024:	e92d4010 	push	{r4, lr}
40010028:	e24dd010 	sub	sp, sp, #16
4001002c:	e1a04000 	mov	r4, r0
40010030:	e28d100f 	add	r1, sp, #15
40010034:	e1a00003 	mov	r0, r3
40010038:	ebfff229 	bl	4000c8e4 <ltc::parse_timecode_rate(char const*, unsigned char&)>
4001003c:	e3500000 	cmp	r0, #0
40010040:	0a000033 	beq	40010114 <LtcGenerator::ActionSetRate(char const*) [clone .part.0]+0xf4>
40010044:	e5dd300f 	ldrb	r3, [sp, #15]
40010048:	e5d42030 	ldrb	r2, [r4, #48]	; 0x30
4001004c:	e1520003 	cmp	r2, r3
40010050:	0a00002f 	beq	40010114 <LtcGenerator::ActionSetRate(char const*) [clone .part.0]+0xf4>
40010054:	e5c43030 	strb	r3, [r4, #48]	; 0x30
40010058:	e30726fc 	movw	r2, #30460	; 0x76fc
4001005c:	e3442005 	movt	r2, #16389	; 0x4005
40010060:	e3071770 	movw	r1, #30576	; 0x7770
40010064:	e3441005 	movt	r1, #16389	; 0x4005
40010068:	e5d22000 	ldrb	r2, [r2]
4001006c:	e5c12004 	strb	r2, [r1, #4]
40010070:	e5941000 	ldr	r1, [r4]
40010074:	e5d10000 	ldrb	r0, [r1]
40010078:	e5c12004 	strb	r2, [r1, #4]
4001007c:	e1500003 	cmp	r0, r3
40010080:	22430001 	subcs	r0, r3, #1
40010084:	25c10000 	strbcs	r0, [r1]
40010088:	e5941004 	ldr	r1, [r4, #4]
4001008c:	e30746ec 	movw	r4, #30444	; 0x76ec
40010090:	e3444005 	movt	r4, #16389	; 0x4005
40010094:	e5d10000 	ldrb	r0, [r1]
40010098:	e5c12004 	strb	r2, [r1, #4]
4001009c:	e1500003 	cmp	r0, r3
400100a0:	22433001 	subcs	r3, r3, #1
400100a4:	25c13000 	strbcs	r3, [r1]
400100a8:	e3011324 	movw	r1, #4900	; 0x1324
400100ac:	e3441003 	movt	r1, #16387	; 0x4003
400100b0:	e3a03b03 	mov	r3, #3072	; 0xc00
400100b4:	e34031c2 	movt	r3, #450	; 0x1c2
400100b8:	e7912102 	ldr	r2, [r1, r2, lsl #2]
400100bc:	e5832014 	str	r2, [r3, #20]
400100c0:	e5931010 	ldr	r1, [r3, #16]
400100c4:	e5d42004 	ldrb	r2, [r4, #4]
400100c8:	e3c11080 	bic	r1, r1, #128	; 0x80
400100cc:	e5831010 	str	r1, [r3, #16]
400100d0:	e3520000 	cmp	r2, #0
400100d4:	e5931010 	ldr	r1, [r3, #16]
400100d8:	e3811003 	orr	r1, r1, #3
400100dc:	e5831010 	str	r1, [r3, #16]
400100e0:	0a00000d 	beq	4001011c <LtcGenerator::ActionSetRate(char const*) [clone .part.0]+0xfc>
400100e4:	e5d43003 	ldrb	r3, [r4, #3]
400100e8:	e3530000 	cmp	r3, #0
400100ec:	0a000013 	beq	40010140 <LtcGenerator::ActionSetRate(char const*) [clone .part.0]+0x120>
400100f0:	e5d43005 	ldrb	r3, [r4, #5]
400100f4:	e3530000 	cmp	r3, #0
400100f8:	0a00002b 	beq	400101ac <LtcGenerator::ActionSetRate(char const*) [clone .part.0]+0x18c>
400100fc:	e3043060 	movw	r3, #16480	; 0x4060
40010100:	e3071770 	movw	r1, #30576	; 0x7770
40010104:	e3443003 	movt	r3, #16387	; 0x4003
40010108:	e3441005 	movt	r1, #16389	; 0x4005
4001010c:	e5930000 	ldr	r0, [r3]
40010110:	eb0006dc 	bl	40011c88 <LtcOutputs::Update(ltc::TimeCode const*)>
40010114:	e28dd010 	add	sp, sp, #16
40010118:	e8bd8010 	pop	{r4, pc}
4001011c:	e3073790 	movw	r3, #30608	; 0x7790
40010120:	e3071770 	movw	r1, #30576	; 0x7770
40010124:	e3443005 	movt	r3, #16389	; 0x4005
40010128:	e3441005 	movt	r1, #16389	; 0x4005
4001012c:	e5930000 	ldr	r0, [r3]
40010130:	eb001139 	bl	4001461c <LtcSender::SetTimeCode(ltc::TimeCode const*, bool)>
40010134:	e5d43003 	ldrb	r3, [r4, #3]
40010138:	e3530000 	cmp	r3, #0
4001013c:	1affffeb 	bne	400100f0 <LtcGenerator::ActionSetRate(char const*) [clone .part.0]+0xd0>
40010140:	e30736dc 	movw	r3, #30428	; 0x76dc
40010144:	e3072770 	movw	r2, #30576	; 0x7770
40010148:	e3443005 	movt	r3, #16389	; 0x4005
4001014c:	e3442005 	movt	r2, #16389	; 0x4005
40010150:	e593c000 	ldr	ip, [r3]
40010154:	e28c3e1e 	add	r3, ip, #480	; 0x1e0
40010158:	e28c0f79 	add	r0, ip, #484	; 0x1e4
4001015c:	e2833001 	add	r3, r3, #1
40010160:	e2800002 	add	r0, r0, #2
40010164:	e4d21001 	ldrb	r1, [r2], #1
40010168:	e4c31001 	strb	r1, [r3], #1
4001016c:	e1500003 	cmp	r0, r3
40010170:	1afffffb 	bne	40010164 <LtcGenerator::ActionSetRate(char const*) [clone .part.0]+0x144>
40010174:	e59c0000 	ldr	r0, [ip]
40010178:	e30a273c 	movw	r2, #42812	; 0xa73c
4001017c:	e3442005 	movt	r2, #16389	; 0x4005
40010180:	e28c1e1d 	add	r1, ip, #464	; 0x1d0
40010184:	e59c3048 	ldr	r3, [ip, #72]	; 0x48
40010188:	e2811003 	add	r1, r1, #3
4001018c:	e5922000 	ldr	r2, [r2]
40010190:	e3520000 	cmp	r2, #0
40010194:	0affffd5 	beq	400100f0 <LtcGenerator::ActionSetRate(char const*) [clone .part.0]+0xd0>
40010198:	e3012936 	movw	r2, #6454	; 0x1936
4001019c:	e58d2000 	str	r2, [sp]
400101a0:	e3a02013 	mov	r2, #19
400101a4:	eb004873 	bl	40022378 <net::udp_send(long, unsigned char const*, unsigned long, unsigned long, unsigned short)>
400101a8:	eaffffd0 	b	400100f0 <LtcGenerator::ActionSetRate(char const*) [clone .part.0]+0xd0>
400101ac:	e3043074 	movw	r3, #16500	; 0x4074
400101b0:	e3071770 	movw	r1, #30576	; 0x7770
400101b4:	e3443003 	movt	r3, #16387	; 0x4003
400101b8:	e3441005 	movt	r1, #16389	; 0x4005
400101bc:	e5930000 	ldr	r0, [r3]
400101c0:	ebfff693 	bl	4000dc14 <LtcEtc::Send(midi::Timecode const*)>
400101c4:	eaffffcc 	b	400100fc <LtcGenerator::ActionSetRate(char const*) [clone .part.0]+0xdc>

400101c8 <ArtNetNode::SendTimeCode(artnet::TimeCode const*)>:
400101c8:	e2803e1e 	add	r3, r0, #480	; 0x1e0
400101cc:	e281c005 	add	ip, r1, #5
400101d0:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
400101d4:	e2833001 	add	r3, r3, #1
400101d8:	e24dd00c 	sub	sp, sp, #12
400101dc:	e1a0e000 	mov	lr, r0
400101e0:	e4d12001 	ldrb	r2, [r1], #1
400101e4:	e15c0001 	cmp	ip, r1
400101e8:	e4c32001 	strb	r2, [r3], #1
400101ec:	1afffffb 	bne	400101e0 <ArtNetNode::SendTimeCode(artnet::TimeCode const*)+0x18>
400101f0:	e59e0000 	ldr	r0, [lr]
400101f4:	e30a273c 	movw	r2, #42812	; 0xa73c
400101f8:	e3442005 	movt	r2, #16389	; 0x4005
400101fc:	e28e1e1d 	add	r1, lr, #464	; 0x1d0
40010200:	e59e3048 	ldr	r3, [lr, #72]	; 0x48
40010204:	e2811003 	add	r1, r1, #3
40010208:	e5922000 	ldr	r2, [r2]
4001020c:	e3520000 	cmp	r2, #0
40010210:	0a000003 	beq	40010224 <ArtNetNode::SendTimeCode(artnet::TimeCode const*)+0x5c>
40010214:	e3012936 	movw	r2, #6454	; 0x1936
40010218:	e58d2000 	str	r2, [sp]
4001021c:	e3a02013 	mov	r2, #19
40010220:	eb004854 	bl	40022378 <net::udp_send(long, unsigned char const*, unsigned long, unsigned long, unsigned short)>
40010224:	e28dd00c 	add	sp, sp, #12
40010228:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

4001022c <ArtNetNode::Get()>:
4001022c:	e30736dc 	movw	r3, #30428	; 0x76dc
40010230:	e3443005 	movt	r3, #16389	; 0x4005
40010234:	e5930000 	ldr	r0, [r3]
40010238:	e12fff1e 	bx	lr

4001023c <LtcEtc::Get()>:
4001023c:	e3043074 	movw	r3, #16500	; 0x4074
40010240:	e3443003 	movt	r3, #16387	; 0x4003
40010244:	e5930000 	ldr	r0, [r3]
40010248:	e12fff1e 	bx	lr

4001024c <LtcSender::Get()>:
4001024c:	e3073790 	movw	r3, #30608	; 0x7790
40010250:	e3443005 	movt	r3, #16389	; 0x4005
40010254:	e5930000 	ldr	r0, [r3]
40010258:	e12fff1e 	bx	lr

4001025c <LtcOutputs::Get()>:
4001025c:	e3043060 	movw	r3, #16480	; 0x4060
40010260:	e3443003 	movt	r3, #16387	; 0x4003
40010264:	e5930000 	ldr	r0, [r3]
40010268:	e12fff1e 	bx	lr

4001026c <LtcGenerator::LtcGenerator(ltc::TimeCode const*, ltc::TimeCode const*, bool, bool, bool)>:
4001026c:	e92d40f0 	push	{r4, r5, r6, r7, lr}
40010270:	e3a04000 	mov	r4, #0
40010274:	e5d1e003 	ldrb	lr, [r1, #3]
40010278:	e5dd6018 	ldrb	r6, [sp, #24]
4001027c:	e5d15002 	ldrb	r5, [r1, #2]
40010280:	e5c03008 	strb	r3, [r0, #8]
40010284:	e3a0303c 	mov	r3, #60	; 0x3c
40010288:	e5d2c003 	ldrb	ip, [r2, #3]
4001028c:	e1055e83 	smlabb	r5, r3, lr, r5
40010290:	e5c0600a 	strb	r6, [r0, #10]
40010294:	e580401c 	str	r4, [r0, #28]
40010298:	e5d26002 	ldrb	r6, [r2, #2]
4001029c:	e5d14001 	ldrb	r4, [r1, #1]
400102a0:	e10e6c83 	smlabb	lr, r3, ip, r6
400102a4:	e02c4593 	mla	ip, r3, r5, r4
400102a8:	e5dd7014 	ldrb	r7, [sp, #20]
400102ac:	e2814005 	add	r4, r1, #5
400102b0:	e580c00c 	str	ip, [r0, #12]
400102b4:	e5d2c001 	ldrb	ip, [r2, #1]
400102b8:	e5c07009 	strb	r7, [r0, #9]
400102bc:	e02cce93 	mla	ip, r3, lr, ip
400102c0:	e3a03000 	mov	r3, #0
400102c4:	e3a0e001 	mov	lr, #1
400102c8:	e580c010 	str	ip, [r0, #16]
400102cc:	e304c094 	movw	ip, #16532	; 0x4094
400102d0:	e344c003 	movt	ip, #16387	; 0x4003
400102d4:	e5803018 	str	r3, [r0, #24]
400102d8:	e58c0000 	str	r0, [ip]
400102dc:	e307c775 	movw	ip, #30581	; 0x7775
400102e0:	e344c005 	movt	ip, #16389	; 0x4005
400102e4:	e5803020 	str	r3, [r0, #32]
400102e8:	e5cc3000 	strb	r3, [ip]
400102ec:	e307c770 	movw	ip, #30576	; 0x7770
400102f0:	e5803028 	str	r3, [r0, #40]	; 0x28
400102f4:	e580302c 	str	r3, [r0, #44]	; 0x2c
400102f8:	e5c03030 	strb	r3, [r0, #48]	; 0x30
400102fc:	e5803034 	str	r3, [r0, #52]	; 0x34
40010300:	e5c0303c 	strb	r3, [r0, #60]	; 0x3c
40010304:	e1a03001 	mov	r3, r1
40010308:	e344c005 	movt	ip, #16389	; 0x4005
4001030c:	e580e014 	str	lr, [r0, #20]
40010310:	e580e038 	str	lr, [r0, #56]	; 0x38
40010314:	e3e0e000 	mvn	lr, #0
40010318:	e8800006 	stm	r0, {r1, r2}
4001031c:	e580e024 	str	lr, [r0, #36]	; 0x24
40010320:	e4d3e001 	ldrb	lr, [r3], #1
40010324:	e1540003 	cmp	r4, r3
40010328:	e4cce001 	strb	lr, [ip], #1
4001032c:	1afffffb 	bne	40010320 <LtcGenerator::LtcGenerator(ltc::TimeCode const*, ltc::TimeCode const*, bool, bool, bool)+0xb4>
40010330:	e5d1c004 	ldrb	ip, [r1, #4]
40010334:	e30d3c50 	movw	r3, #56400	; 0xdc50
40010338:	e3443002 	movt	r3, #16386	; 0x4002
4001033c:	e7d3300c 	ldrb	r3, [r3, ip]
40010340:	e5d1c000 	ldrb	ip, [r1]
40010344:	e5c03030 	strb	r3, [r0, #48]	; 0x30
40010348:	e15c0003 	cmp	ip, r3
4001034c:	2243c001 	subcs	ip, r3, #1
40010350:	25c1c000 	strbcs	ip, [r1]
40010354:	e5d21000 	ldrb	r1, [r2]
40010358:	e1510003 	cmp	r1, r3
4001035c:	22433001 	subcs	r3, r3, #1
40010360:	25c23000 	strbcs	r3, [r2]
40010364:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}

40010368 <LtcGenerator::Start()>:
40010368:	e92d4070 	push	{r4, r5, r6, lr}
4001036c:	e3a01006 	mov	r1, #6
40010370:	e1a05000 	mov	r5, r0
40010374:	e3a00002 	mov	r0, #2
40010378:	eb0063ff 	bl	4002937c <h3_gpio_fsel>
4001037c:	e3a01006 	mov	r1, #6
40010380:	e3a00003 	mov	r0, #3
40010384:	eb0063fc 	bl	4002937c <h3_gpio_fsel>
40010388:	e3a01006 	mov	r1, #6
4001038c:	e1a00001 	mov	r0, r1
40010390:	eb0063f9 	bl	4002937c <h3_gpio_fsel>
40010394:	e3a01001 	mov	r1, #1
40010398:	e3a00002 	mov	r0, #2
4001039c:	eb00642b 	bl	40029450 <h3_gpio_set_pud>
400103a0:	e3a01001 	mov	r1, #1
400103a4:	e3a00003 	mov	r0, #3
400103a8:	eb006428 	bl	40029450 <h3_gpio_set_pud>
400103ac:	e3a01001 	mov	r1, #1
400103b0:	e3a00006 	mov	r0, #6
400103b4:	eb006425 	bl	40029450 <h3_gpio_set_pud>
400103b8:	e3a01001 	mov	r1, #1
400103bc:	e3a00002 	mov	r0, #2
400103c0:	eb00640d 	bl	400293fc <h3_gpio_int_cfg>
400103c4:	e3a01001 	mov	r1, #1
400103c8:	e3a00003 	mov	r0, #3
400103cc:	eb00640a 	bl	400293fc <h3_gpio_int_cfg>
400103d0:	e3a01001 	mov	r1, #1
400103d4:	e3a00006 	mov	r0, #6
400103d8:	eb006407 	bl	400293fc <h3_gpio_int_cfg>
400103dc:	e3a03c0a 	mov	r3, #2560	; 0xa00
400103e0:	e30706fc 	movw	r0, #30460	; 0x76fc
400103e4:	e34031c2 	movt	r3, #450	; 0x1c2
400103e8:	e3011324 	movw	r1, #4900	; 0x1324
400103ec:	e3440005 	movt	r0, #16389	; 0x4005
400103f0:	e5932010 	ldr	r2, [r3, #16]
400103f4:	e5d00000 	ldrb	r0, [r0]
400103f8:	e3441003 	movt	r1, #16387	; 0x4003
400103fc:	e382204c 	orr	r2, r2, #76	; 0x4c
40010400:	e5832010 	str	r2, [r3, #16]
40010404:	e3a0204c 	mov	r2, #76	; 0x4c
40010408:	e5832014 	str	r2, [r3, #20]
4001040c:	e3a02070 	mov	r2, #112	; 0x70
40010410:	e5832018 	str	r2, [r3, #24]
40010414:	e7914100 	ldr	r4, [r1, r0, lsl #2]
40010418:	ebffc347 	bl	4000113c <irq_handler_init()>
4001041c:	e300100c 	movw	r1, #12
40010420:	e3a00000 	mov	r0, #0
40010424:	e3441001 	movt	r1, #16385	; 0x4001
40010428:	eb006e4c 	bl	4002bd60 <irq_timer_set(irq_timers, void (*)(unsigned long))>
4001042c:	e3a03b03 	mov	r3, #3072	; 0xc00
40010430:	e3011104 	movw	r1, #4356	; 0x1104
40010434:	e34031c2 	movt	r3, #450	; 0x1c2
40010438:	e3050443 	movw	r0, #21571	; 0x5443
4001043c:	e3441001 	movt	r1, #16385	; 0x4001
40010440:	e5834014 	str	r4, [r3, #20]
40010444:	e3044060 	movw	r4, #16480	; 0x4060
40010448:	e5932010 	ldr	r2, [r3, #16]
4001044c:	e3444003 	movt	r4, #16387	; 0x4003
40010450:	e3c22080 	bic	r2, r2, #128	; 0x80
40010454:	e5832010 	str	r2, [r3, #16]
40010458:	e5932010 	ldr	r2, [r3, #16]
4001045c:	e3822003 	orr	r2, r2, #3
40010460:	e5832010 	str	r2, [r3, #16]
40010464:	eb004777 	bl	40022248 <net::udp_begin(unsigned short, void (*)(unsigned char const*, unsigned long, unsigned long, unsigned short))>
40010468:	e5850024 	str	r0, [r5, #36]	; 0x24
4001046c:	e5940000 	ldr	r0, [r4]
40010470:	eb0005dc 	bl	40011be8 <LtcOutputs::Init()>
40010474:	e5940000 	ldr	r0, [r4]
40010478:	e3071770 	movw	r1, #30576	; 0x7770
4001047c:	e3441005 	movt	r1, #16389	; 0x4005
40010480:	eb000600 	bl	40011c88 <LtcOutputs::Update(ltc::TimeCode const*)>
40010484:	e3043088 	movw	r3, #16520	; 0x4088
40010488:	e3a01002 	mov	r1, #2
4001048c:	e3443003 	movt	r3, #16387	; 0x4003
40010490:	e8bd4070 	pop	{r4, r5, r6, lr}
40010494:	e5930000 	ldr	r0, [r3]
40010498:	ea005699 	b	40025f04 <Hardware::SetMode(hardware::ledblink::Mode)>

4001049c <LtcGenerator::ActionStart(bool)>:
4001049c:	e5d0303c 	ldrb	r3, [r0, #60]	; 0x3c
400104a0:	e3530001 	cmp	r3, #1
400104a4:	012fff1e 	bxeq	lr
400104a8:	e3043060 	movw	r3, #16480	; 0x4060
400104ac:	e3510000 	cmp	r1, #0
400104b0:	e3443003 	movt	r3, #16387	; 0x4003
400104b4:	e3a02001 	mov	r2, #1
400104b8:	e5c0203c 	strb	r2, [r0, #60]	; 0x3c
400104bc:	e593c000 	ldr	ip, [r3]
400104c0:	1a000002 	bne	400104d0 <LtcGenerator::ActionStart(bool)+0x34>
400104c4:	e3e03000 	mvn	r3, #0
400104c8:	e5cc3002 	strb	r3, [ip, #2]
400104cc:	e12fff1e 	bx	lr
400104d0:	e5903000 	ldr	r3, [r0]
400104d4:	e3072770 	movw	r2, #30576	; 0x7770
400104d8:	e3442005 	movt	r2, #16389	; 0x4005
400104dc:	e2830005 	add	r0, r3, #5
400104e0:	e4d31001 	ldrb	r1, [r3], #1
400104e4:	e1530000 	cmp	r3, r0
400104e8:	e4c21001 	strb	r1, [r2], #1
400104ec:	1afffffb 	bne	400104e0 <LtcGenerator::ActionStart(bool)+0x44>
400104f0:	eafffff3 	b	400104c4 <LtcGenerator::ActionStart(bool)+0x28>

400104f4 <LtcGenerator::ActionStop()>:
400104f4:	e3a03000 	mov	r3, #0
400104f8:	e5c0303c 	strb	r3, [r0, #60]	; 0x3c
400104fc:	e12fff1e 	bx	lr

40010500 <LtcGenerator::ActionResume()>:
40010500:	e5d0303c 	ldrb	r3, [r0, #60]	; 0x3c
40010504:	e3530001 	cmp	r3, #1
40010508:	13a03001 	movne	r3, #1
4001050c:	15c0303c 	strbne	r3, [r0, #60]	; 0x3c
40010510:	e12fff1e 	bx	lr

40010514 <LtcGenerator::ActionSetStart(char const*)>:
40010514:	e92d4010 	push	{r4, lr}
40010518:	e1a04000 	mov	r4, r0
4001051c:	e1a00001 	mov	r0, r1
40010520:	e5942000 	ldr	r2, [r4]
40010524:	e5d41030 	ldrb	r1, [r4, #48]	; 0x30
40010528:	ebfff0a8 	bl	4000c7d0 <ltc::parse_timecode(char const*, unsigned char, ltc::TimeCode*)>
4001052c:	e5941000 	ldr	r1, [r4]
40010530:	e5d12003 	ldrb	r2, [r1, #3]
40010534:	e5d10002 	ldrb	r0, [r1, #2]
40010538:	e5d13001 	ldrb	r3, [r1, #1]
4001053c:	e3a0103c 	mov	r1, #60	; 0x3c
40010540:	e1020281 	smlabb	r2, r1, r2, r0
40010544:	e0233291 	mla	r3, r1, r2, r3
40010548:	e584300c 	str	r3, [r4, #12]
4001054c:	e8bd8010 	pop	{r4, pc}

40010550 <LtcGenerator::ActionSetStop(char const*)>:
40010550:	e92d4010 	push	{r4, lr}
40010554:	e1a04000 	mov	r4, r0
40010558:	e1a00001 	mov	r0, r1
4001055c:	e5942004 	ldr	r2, [r4, #4]
40010560:	e5d41030 	ldrb	r1, [r4, #48]	; 0x30
40010564:	ebfff099 	bl	4000c7d0 <ltc::parse_timecode(char const*, unsigned char, ltc::TimeCode*)>
40010568:	e5941004 	ldr	r1, [r4, #4]
4001056c:	e5d12003 	ldrb	r2, [r1, #3]
40010570:	e5d10002 	ldrb	r0, [r1, #2]
40010574:	e5d13001 	ldrb	r3, [r1, #1]
40010578:	e3a0103c 	mov	r1, #60	; 0x3c
4001057c:	e1020281 	smlabb	r2, r1, r2, r0
40010580:	e0233291 	mla	r3, r1, r2, r3
40010584:	e5843010 	str	r3, [r4, #16]
40010588:	e8bd8010 	pop	{r4, pc}

4001058c <LtcGenerator::ActionGoto(char const*)>:
4001058c:	e92d4010 	push	{r4, lr}
40010590:	e1a04000 	mov	r4, r0
40010594:	e1a03001 	mov	r3, r1
40010598:	e3a00000 	mov	r0, #0
4001059c:	e5942000 	ldr	r2, [r4]
400105a0:	e5d41030 	ldrb	r1, [r4, #48]	; 0x30
400105a4:	e5c4003c 	strb	r0, [r4, #60]	; 0x3c
400105a8:	e1a00003 	mov	r0, r3
400105ac:	ebfff087 	bl	4000c7d0 <ltc::parse_timecode(char const*, unsigned char, ltc::TimeCode*)>
400105b0:	e5943000 	ldr	r3, [r4]
400105b4:	e3a0003c 	mov	r0, #60	; 0x3c
400105b8:	e5d31003 	ldrb	r1, [r3, #3]
400105bc:	e5d3c002 	ldrb	ip, [r3, #2]
400105c0:	e5d32001 	ldrb	r2, [r3, #1]
400105c4:	e101c180 	smlabb	r1, r0, r1, ip
400105c8:	e0222190 	mla	r2, r0, r1, r2
400105cc:	e5d4103c 	ldrb	r1, [r4, #60]	; 0x3c
400105d0:	e584200c 	str	r2, [r4, #12]
400105d4:	e3510001 	cmp	r1, #1
400105d8:	0a00000d 	beq	40010614 <LtcGenerator::ActionGoto(char const*)+0x88>
400105dc:	e3072770 	movw	r2, #30576	; 0x7770
400105e0:	e2830005 	add	r0, r3, #5
400105e4:	e3442005 	movt	r2, #16389	; 0x4005
400105e8:	e3a01001 	mov	r1, #1
400105ec:	e5c4103c 	strb	r1, [r4, #60]	; 0x3c
400105f0:	e4d31001 	ldrb	r1, [r3], #1
400105f4:	e1500003 	cmp	r0, r3
400105f8:	e4c21001 	strb	r1, [r2], #1
400105fc:	1afffffb 	bne	400105f0 <LtcGenerator::ActionGoto(char const*)+0x64>
40010600:	e3043060 	movw	r3, #16480	; 0x4060
40010604:	e3e02000 	mvn	r2, #0
40010608:	e3443003 	movt	r3, #16387	; 0x4003
4001060c:	e5933000 	ldr	r3, [r3]
40010610:	e5c32002 	strb	r2, [r3, #2]
40010614:	e3a03000 	mov	r3, #0
40010618:	e5c4303c 	strb	r3, [r4, #60]	; 0x3c
4001061c:	e8bd8010 	pop	{r4, pc}

40010620 <LtcGenerator::ActionSetDirection(char const*)>:
40010620:	e92d4030 	push	{r4, r5, lr}
40010624:	e30122bc 	movw	r2, #4796	; 0x12bc
40010628:	e3442003 	movt	r2, #16387	; 0x4003
4001062c:	e2414001 	sub	r4, r1, #1
40010630:	e2815006 	add	r5, r1, #6
40010634:	e1a03004 	mov	r3, r4
40010638:	e3a0c066 	mov	ip, #102	; 0x66
4001063c:	ea000002 	b	4001064c <LtcGenerator::ActionSetDirection(char const*)+0x2c>
40010640:	e1530005 	cmp	r3, r5
40010644:	0a000011 	beq	40010690 <LtcGenerator::ActionSetDirection(char const*)+0x70>
40010648:	e5f2c001 	ldrb	ip, [r2, #1]!
4001064c:	e5f3e001 	ldrb	lr, [r3, #1]!
40010650:	e15e000c 	cmp	lr, ip
40010654:	0afffff9 	beq	40010640 <LtcGenerator::ActionSetDirection(char const*)+0x20>
40010658:	e30122c4 	movw	r2, #4804	; 0x12c4
4001065c:	e2813007 	add	r3, r1, #7
40010660:	e3442003 	movt	r2, #16387	; 0x4003
40010664:	e3a01062 	mov	r1, #98	; 0x62
40010668:	ea000000 	b	40010670 <LtcGenerator::ActionSetDirection(char const*)+0x50>
4001066c:	e5f21001 	ldrb	r1, [r2, #1]!
40010670:	e5f4c001 	ldrb	ip, [r4, #1]!
40010674:	e15c0001 	cmp	ip, r1
40010678:	18bd8030 	popne	{r4, r5, pc}
4001067c:	e1530004 	cmp	r3, r4
40010680:	1afffff9 	bne	4001066c <LtcGenerator::ActionSetDirection(char const*)+0x4c>
40010684:	e3a03001 	mov	r3, #1
40010688:	e5803034 	str	r3, [r0, #52]	; 0x34
4001068c:	e8bd8030 	pop	{r4, r5, pc}
40010690:	e3a03000 	mov	r3, #0
40010694:	e5803034 	str	r3, [r0, #52]	; 0x34
40010698:	e8bd8030 	pop	{r4, r5, pc}

4001069c <LtcGenerator::ActionSetPitch(float)>:
4001069c:	eeff7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
400106a0:	eeb40ae7 	vcmpe.f32	s0, s15
400106a4:	eef1fa10 	vmrs	APSR_nzcv, fpscr
400106a8:	412fff1e 	bxmi	lr
400106ac:	eef77a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
400106b0:	eeb40ae7 	vcmpe.f32	s0, s15
400106b4:	eef1fa10 	vmrs	APSR_nzcv, fpscr
400106b8:	c12fff1e 	bxgt	lr
400106bc:	eeb50ac0 	vcmpe.f32	s0, #0.0
400106c0:	eef1fa10 	vmrs	APSR_nzcv, fpscr
400106c4:	4a00000c 	bmi	400106fc <LtcGenerator::ActionSetPitch(float)+0x60>
400106c8:	eeb50a40 	vcmp.f32	s0, #0.0
400106cc:	eef1fa10 	vmrs	APSR_nzcv, fpscr
400106d0:	1d800a07 	vstrne	s0, [r0, #28]
400106d4:	13a03001 	movne	r3, #1
400106d8:	15803038 	strne	r3, [r0, #56]	; 0x38
400106dc:	0a000003 	beq	400106f0 <LtcGenerator::ActionSetPitch(float)+0x54>
400106e0:	e3a02001 	mov	r2, #1
400106e4:	e3a03000 	mov	r3, #0
400106e8:	e1c021f4 	strd	r2, [r0, #20]
400106ec:	e12fff1e 	bx	lr
400106f0:	e3a03000 	mov	r3, #0
400106f4:	e5803038 	str	r3, [r0, #56]	; 0x38
400106f8:	e12fff1e 	bx	lr
400106fc:	eeb10a40 	vneg.f32	s0, s0
40010700:	e3a03002 	mov	r3, #2
40010704:	e5803038 	str	r3, [r0, #56]	; 0x38
40010708:	ed800a07 	vstr	s0, [r0, #28]
4001070c:	eafffff3 	b	400106e0 <LtcGenerator::ActionSetPitch(float)+0x44>

40010710 <LtcGenerator::ActionReset()>:
40010710:	e5903000 	ldr	r3, [r0]
40010714:	e3072770 	movw	r2, #30576	; 0x7770
40010718:	e3442005 	movt	r2, #16389	; 0x4005
4001071c:	e2830005 	add	r0, r3, #5
40010720:	e4d31001 	ldrb	r1, [r3], #1
40010724:	e1500003 	cmp	r0, r3
40010728:	e4c21001 	strb	r1, [r2], #1
4001072c:	1afffffb 	bne	40010720 <LtcGenerator::ActionReset()+0x10>
40010730:	e3043060 	movw	r3, #16480	; 0x4060
40010734:	e3e02000 	mvn	r2, #0
40010738:	e3443003 	movt	r3, #16387	; 0x4003
4001073c:	e5933000 	ldr	r3, [r3]
40010740:	e5c32002 	strb	r2, [r3, #2]
40010744:	e12fff1e 	bx	lr

40010748 <LtcGenerator::ActionSetRate(char const*)>:
40010748:	e5d0303c 	ldrb	r3, [r0, #60]	; 0x3c
4001074c:	e3530000 	cmp	r3, #0
40010750:	112fff1e 	bxne	lr
40010754:	eafffe31 	b	40010020 <LtcGenerator::ActionSetRate(char const*) [clone .part.0]>

40010758 <LtcGenerator::SetPitch(char const*, unsigned long)>:
40010758:	e92d4030 	push	{r4, r5, lr}
4001075c:	e5d13000 	ldrb	r3, [r1]
40010760:	e353002d 	cmp	r3, #45	; 0x2d
40010764:	02422001 	subeq	r2, r2, #1
40010768:	02811001 	addeq	r1, r1, #1
4001076c:	03e05000 	mvneq	r5, #0
40010770:	13a05001 	movne	r5, #1
40010774:	e3520000 	cmp	r2, #0
40010778:	0a00002c 	beq	40010830 <LtcGenerator::SetPitch(char const*, unsigned long)+0xd8>
4001077c:	e242e001 	sub	lr, r2, #1
40010780:	e3a0400a 	mov	r4, #10
40010784:	e081e00e 	add	lr, r1, lr
40010788:	e2412001 	sub	r2, r1, #1
4001078c:	e3a01000 	mov	r1, #0
40010790:	ea000002 	b	400107a0 <LtcGenerator::SetPitch(char const*, unsigned long)+0x48>
40010794:	e152000e 	cmp	r2, lr
40010798:	e2431030 	sub	r1, r3, #48	; 0x30
4001079c:	0a000004 	beq	400107b4 <LtcGenerator::SetPitch(char const*, unsigned long)+0x5c>
400107a0:	e5f23001 	ldrb	r3, [r2, #1]!
400107a4:	e243c030 	sub	ip, r3, #48	; 0x30
400107a8:	e35c0009 	cmp	ip, #9
400107ac:	e0233194 	mla	r3, r4, r1, r3
400107b0:	9afffff7 	bls	40010794 <LtcGenerator::SetPitch(char const*, unsigned long)+0x3c>
400107b4:	e0010591 	mul	r1, r1, r5
400107b8:	ed9f6a1f 	vldr	s12, [pc, #124]	; 4001083c <LtcGenerator::SetPitch(char const*, unsigned long)+0xe4>
400107bc:	ee071a90 	vmov	s15, r1
400107c0:	eeff6a00 	vmov.f32	s13, #240	; 0xbf800000 -1.0
400107c4:	eef87ae7 	vcvt.f32.s32	s15, s15
400107c8:	ee877a86 	vdiv.f32	s14, s15, s12
400107cc:	eeb47ae6 	vcmpe.f32	s14, s13
400107d0:	eef1fa10 	vmrs	APSR_nzcv, fpscr
400107d4:	48bd8030 	popmi	{r4, r5, pc}
400107d8:	eef77a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
400107dc:	eeb47ae7 	vcmpe.f32	s14, s15
400107e0:	eef1fa10 	vmrs	APSR_nzcv, fpscr
400107e4:	c8bd8030 	popgt	{r4, r5, pc}
400107e8:	eeb57ac0 	vcmpe.f32	s14, #0.0
400107ec:	eef1fa10 	vmrs	APSR_nzcv, fpscr
400107f0:	4a000009 	bmi	4001081c <LtcGenerator::SetPitch(char const*, unsigned long)+0xc4>
400107f4:	eeb57a40 	vcmp.f32	s14, #0.0
400107f8:	eef1fa10 	vmrs	APSR_nzcv, fpscr
400107fc:	1d807a07 	vstrne	s14, [r0, #28]
40010800:	13a03001 	movne	r3, #1
40010804:	15803038 	strne	r3, [r0, #56]	; 0x38
40010808:	0a000008 	beq	40010830 <LtcGenerator::SetPitch(char const*, unsigned long)+0xd8>
4001080c:	e3a02001 	mov	r2, #1
40010810:	e3a03000 	mov	r3, #0
40010814:	e1c021f4 	strd	r2, [r0, #20]
40010818:	e8bd8030 	pop	{r4, r5, pc}
4001081c:	eeb17a47 	vneg.f32	s14, s14
40010820:	e3a03002 	mov	r3, #2
40010824:	e5803038 	str	r3, [r0, #56]	; 0x38
40010828:	ed807a07 	vstr	s14, [r0, #28]
4001082c:	eafffff6 	b	4001080c <LtcGenerator::SetPitch(char const*, unsigned long)+0xb4>
40010830:	e3a03000 	mov	r3, #0
40010834:	e5803038 	str	r3, [r0, #56]	; 0x38
40010838:	e8bd8030 	pop	{r4, r5, pc}
4001083c:	42c80000 	sbcmi	r0, r8, #0

40010840 <LtcGenerator::HandleButtons()>:
40010840:	e3a03c0a 	mov	r3, #2560	; 0xa00
40010844:	e34031c2 	movt	r3, #450	; 0x1c2
40010848:	e5931014 	ldr	r1, [r3, #20]
4001084c:	e201204c 	and	r2, r1, #76	; 0x4c
40010850:	e5802020 	str	r2, [r0, #32]
40010854:	e3520000 	cmp	r2, #0
40010858:	012fff1e 	bxeq	lr
4001085c:	e211c004 	ands	ip, r1, #4
40010860:	e3a0204c 	mov	r2, #76	; 0x4c
40010864:	e5832014 	str	r2, [r3, #20]
40010868:	1a00000a 	bne	40010898 <LtcGenerator::HandleButtons()+0x58>
4001086c:	e3110008 	tst	r1, #8
40010870:	1a000006 	bne	40010890 <LtcGenerator::HandleButtons()+0x50>
40010874:	e3110040 	tst	r1, #64	; 0x40
40010878:	012fff1e 	bxeq	lr
4001087c:	e5d0303c 	ldrb	r3, [r0, #60]	; 0x3c
40010880:	e3530001 	cmp	r3, #1
40010884:	13a03001 	movne	r3, #1
40010888:	15c0303c 	strbne	r3, [r0, #60]	; 0x3c
4001088c:	e12fff1e 	bx	lr
40010890:	e5c0c03c 	strb	ip, [r0, #60]	; 0x3c
40010894:	e12fff1e 	bx	lr
40010898:	e5d0303c 	ldrb	r3, [r0, #60]	; 0x3c
4001089c:	e3530001 	cmp	r3, #1
400108a0:	012fff1e 	bxeq	lr
400108a4:	e5903000 	ldr	r3, [r0]
400108a8:	e3072770 	movw	r2, #30576	; 0x7770
400108ac:	e3442005 	movt	r2, #16389	; 0x4005
400108b0:	e3a01001 	mov	r1, #1
400108b4:	e5c0103c 	strb	r1, [r0, #60]	; 0x3c
400108b8:	e2830005 	add	r0, r3, #5
400108bc:	e4d31001 	ldrb	r1, [r3], #1
400108c0:	e1530000 	cmp	r3, r0
400108c4:	e4c21001 	strb	r1, [r2], #1
400108c8:	1afffffb 	bne	400108bc <LtcGenerator::HandleButtons()+0x7c>
400108cc:	e3043060 	movw	r3, #16480	; 0x4060
400108d0:	e3e02000 	mvn	r2, #0
400108d4:	e3443003 	movt	r3, #16387	; 0x4003
400108d8:	e5933000 	ldr	r3, [r3]
400108dc:	e5c32002 	strb	r2, [r3, #2]
400108e0:	e12fff1e 	bx	lr

400108e4 <LtcGenerator::Print()>:
400108e4:	e92d4010 	push	{r4, lr}
400108e8:	e1a04000 	mov	r4, r0
400108ec:	e30102d0 	movw	r0, #4816	; 0x12d0
400108f0:	e24dd008 	sub	sp, sp, #8
400108f4:	e3440003 	movt	r0, #16387	; 0x4003
400108f8:	eb0070a4 	bl	4002cb90 <printf>
400108fc:	e5943000 	ldr	r3, [r4]
40010900:	e5d30004 	ldrb	r0, [r3, #4]
40010904:	ebffef71 	bl	4000c6d0 <ltc::get_type(ltc::Type)>
40010908:	e1a01000 	mov	r1, r0
4001090c:	e30d0be8 	movw	r0, #56296	; 0xdbe8
40010910:	e3440002 	movt	r0, #16386	; 0x4002
40010914:	eb00709d 	bl	4002cb90 <printf>
40010918:	e5940000 	ldr	r0, [r4]
4001091c:	e5d03001 	ldrb	r3, [r0, #1]
40010920:	e5d02002 	ldrb	r2, [r0, #2]
40010924:	e5d01003 	ldrb	r1, [r0, #3]
40010928:	e5d00000 	ldrb	r0, [r0]
4001092c:	e58d0000 	str	r0, [sp]
40010930:	e30102dc 	movw	r0, #4828	; 0x12dc
40010934:	e3440003 	movt	r0, #16387	; 0x4003
40010938:	eb007094 	bl	4002cb90 <printf>
4001093c:	e5940004 	ldr	r0, [r4, #4]
40010940:	e5d03001 	ldrb	r3, [r0, #1]
40010944:	e5d02002 	ldrb	r2, [r0, #2]
40010948:	e5d01003 	ldrb	r1, [r0, #3]
4001094c:	e5d00000 	ldrb	r0, [r0]
40010950:	e58d0000 	str	r0, [sp]
40010954:	e30102fc 	movw	r0, #4860	; 0x12fc
40010958:	e3440003 	movt	r0, #16387	; 0x4003
4001095c:	eb00708b 	bl	4002cb90 <printf>
40010960:	e28dd008 	add	sp, sp, #8
40010964:	e8bd8010 	pop	{r4, pc}

40010968 <LtcGenerator::Increment()>:
40010968:	e5d0300a 	ldrb	r3, [r0, #10]
4001096c:	e92d4070 	push	{r4, r5, r6, lr}
40010970:	e3530000 	cmp	r3, #0
40010974:	e5d0503c 	ldrb	r5, [r0, #60]	; 0x3c
40010978:	e1a04000 	mov	r4, r0
4001097c:	1a000006 	bne	4001099c <LtcGenerator::Increment()+0x34>
40010980:	e5901004 	ldr	r1, [r0, #4]
40010984:	e3070770 	movw	r0, #30576	; 0x7770
40010988:	e3440005 	movt	r0, #16389	; 0x4005
4001098c:	e3a02005 	mov	r2, #5
40010990:	ebffe995 	bl	4000afec <memcmp>
40010994:	e3500000 	cmp	r0, #0
40010998:	0a00001b 	beq	40010a0c <LtcGenerator::Increment()+0xa4>
4001099c:	e3550000 	cmp	r5, #0
400109a0:	08bd8070 	popeq	{r4, r5, r6, pc}
400109a4:	e5d41030 	ldrb	r1, [r4, #48]	; 0x30
400109a8:	e3072770 	movw	r2, #30576	; 0x7770
400109ac:	e3442005 	movt	r2, #16389	; 0x4005
400109b0:	e5d23000 	ldrb	r3, [r2]
400109b4:	e2833001 	add	r3, r3, #1
400109b8:	e6ef3073 	uxtb	r3, r3
400109bc:	e1510003 	cmp	r1, r3
400109c0:	e5c23000 	strb	r3, [r2]
400109c4:	18bd8070 	popne	{r4, r5, r6, pc}
400109c8:	e5d23001 	ldrb	r3, [r2, #1]
400109cc:	e3a01000 	mov	r1, #0
400109d0:	e5c21000 	strb	r1, [r2]
400109d4:	e2833001 	add	r3, r3, #1
400109d8:	e6ef3073 	uxtb	r3, r3
400109dc:	e353003c 	cmp	r3, #60	; 0x3c
400109e0:	0a000001 	beq	400109ec <LtcGenerator::Increment()+0x84>
400109e4:	e5c23001 	strb	r3, [r2, #1]
400109e8:	e8bd8070 	pop	{r4, r5, r6, pc}
400109ec:	e5d23002 	ldrb	r3, [r2, #2]
400109f0:	e5c21001 	strb	r1, [r2, #1]
400109f4:	e2833001 	add	r3, r3, #1
400109f8:	e6ef3073 	uxtb	r3, r3
400109fc:	e353003c 	cmp	r3, #60	; 0x3c
40010a00:	0a000005 	beq	40010a1c <LtcGenerator::Increment()+0xb4>
40010a04:	e5c23002 	strb	r3, [r2, #2]
40010a08:	e8bd8070 	pop	{r4, r5, r6, pc}
40010a0c:	e3550001 	cmp	r5, #1
40010a10:	03a03002 	moveq	r3, #2
40010a14:	05c4303c 	strbeq	r3, [r4, #60]	; 0x3c
40010a18:	e8bd8070 	pop	{r4, r5, r6, pc}
40010a1c:	e5d23003 	ldrb	r3, [r2, #3]
40010a20:	e5c21002 	strb	r1, [r2, #2]
40010a24:	e2833001 	add	r3, r3, #1
40010a28:	e6ef3073 	uxtb	r3, r3
40010a2c:	e3530018 	cmp	r3, #24
40010a30:	15c23003 	strbne	r3, [r2, #3]
40010a34:	05c21003 	strbeq	r1, [r2, #3]
40010a38:	e8bd8070 	pop	{r4, r5, r6, pc}

40010a3c <LtcGenerator::Decrement()>:
40010a3c:	e5d03009 	ldrb	r3, [r0, #9]
40010a40:	e92d4070 	push	{r4, r5, r6, lr}
40010a44:	e3530000 	cmp	r3, #0
40010a48:	e5d0503c 	ldrb	r5, [r0, #60]	; 0x3c
40010a4c:	e1a04000 	mov	r4, r0
40010a50:	1a000006 	bne	40010a70 <LtcGenerator::Decrement()+0x34>
40010a54:	e5901000 	ldr	r1, [r0]
40010a58:	e3070770 	movw	r0, #30576	; 0x7770
40010a5c:	e3440005 	movt	r0, #16389	; 0x4005
40010a60:	e3a02005 	mov	r2, #5
40010a64:	ebffe960 	bl	4000afec <memcmp>
40010a68:	e3500000 	cmp	r0, #0
40010a6c:	0a000024 	beq	40010b04 <LtcGenerator::Decrement()+0xc8>
40010a70:	e3550000 	cmp	r5, #0
40010a74:	08bd8070 	popeq	{r4, r5, r6, pc}
40010a78:	e5d41030 	ldrb	r1, [r4, #48]	; 0x30
40010a7c:	e3072770 	movw	r2, #30576	; 0x7770
40010a80:	e3442005 	movt	r2, #16389	; 0x4005
40010a84:	e5d23000 	ldrb	r3, [r2]
40010a88:	e3530000 	cmp	r3, #0
40010a8c:	12433001 	subne	r3, r3, #1
40010a90:	02411001 	subeq	r1, r1, #1
40010a94:	16ef3073 	uxtbne	r3, r3
40010a98:	06ef3071 	uxtbeq	r3, r1
40010a9c:	e5c23000 	strb	r3, [r2]
40010aa0:	12411001 	subne	r1, r1, #1
40010aa4:	e1530001 	cmp	r3, r1
40010aa8:	18bd8070 	popne	{r4, r5, r6, pc}
40010aac:	e5d23001 	ldrb	r3, [r2, #1]
40010ab0:	e3530000 	cmp	r3, #0
40010ab4:	1a00000c 	bne	40010aec <LtcGenerator::Decrement()+0xb0>
40010ab8:	e3a0303b 	mov	r3, #59	; 0x3b
40010abc:	e5c23001 	strb	r3, [r2, #1]
40010ac0:	e5d23002 	ldrb	r3, [r2, #2]
40010ac4:	e3530000 	cmp	r3, #0
40010ac8:	1a000011 	bne	40010b14 <LtcGenerator::Decrement()+0xd8>
40010acc:	e3a0303b 	mov	r3, #59	; 0x3b
40010ad0:	e5c23002 	strb	r3, [r2, #2]
40010ad4:	e5d23003 	ldrb	r3, [r2, #3]
40010ad8:	e3530000 	cmp	r3, #0
40010adc:	12433001 	subne	r3, r3, #1
40010ae0:	03a03017 	moveq	r3, #23
40010ae4:	e5c23003 	strb	r3, [r2, #3]
40010ae8:	e8bd8070 	pop	{r4, r5, r6, pc}
40010aec:	e2433001 	sub	r3, r3, #1
40010af0:	e6ef3073 	uxtb	r3, r3
40010af4:	e5c23001 	strb	r3, [r2, #1]
40010af8:	e353003b 	cmp	r3, #59	; 0x3b
40010afc:	18bd8070 	popne	{r4, r5, r6, pc}
40010b00:	eaffffee 	b	40010ac0 <LtcGenerator::Decrement()+0x84>
40010b04:	e3550001 	cmp	r5, #1
40010b08:	03a03002 	moveq	r3, #2
40010b0c:	05c4303c 	strbeq	r3, [r4, #60]	; 0x3c
40010b10:	e8bd8070 	pop	{r4, r5, r6, pc}
40010b14:	e2433001 	sub	r3, r3, #1
40010b18:	e6ef3073 	uxtb	r3, r3
40010b1c:	e5c23002 	strb	r3, [r2, #2]
40010b20:	e353003b 	cmp	r3, #59	; 0x3b
40010b24:	18bd8070 	popne	{r4, r5, r6, pc}
40010b28:	eaffffe9 	b	40010ad4 <LtcGenerator::Decrement()+0x98>

40010b2c <LtcGenerator::SetTimeCode(long)>:
40010b2c:	e30b33c5 	movw	r3, #46021	; 0xb3c5
40010b30:	e3070770 	movw	r0, #30576	; 0x7770
40010b34:	e34931a2 	movt	r3, #37282	; 0x91a2
40010b38:	e30fc1f0 	movw	ip, #61936	; 0xf1f0
40010b3c:	e0c23193 	smull	r3, r2, r3, r1
40010b40:	e3440005 	movt	r0, #16389	; 0x4005
40010b44:	e0822001 	add	r2, r2, r1
40010b48:	e1a03fc1 	asr	r3, r1, #31
40010b4c:	e06335c2 	rsb	r3, r3, r2, asr #11
40010b50:	e34fcfff 	movt	ip, #65535	; 0xffff
40010b54:	e5c03003 	strb	r3, [r0, #3]
40010b58:	e6ef3073 	uxtb	r3, r3
40010b5c:	e021139c 	mla	r1, ip, r3, r1
40010b60:	e3083889 	movw	r3, #34953	; 0x8889
40010b64:	e3e0c03b 	mvn	ip, #59	; 0x3b
40010b68:	e3483888 	movt	r3, #34952	; 0x8888
40010b6c:	e0c32193 	smull	r2, r3, r3, r1
40010b70:	e1a02fc1 	asr	r2, r1, #31
40010b74:	e0833001 	add	r3, r3, r1
40010b78:	e06232c3 	rsb	r3, r2, r3, asr #5
40010b7c:	e0211c93 	mla	r1, r3, ip, r1
40010b80:	e5c03002 	strb	r3, [r0, #2]
40010b84:	e5c01001 	strb	r1, [r0, #1]
40010b88:	e12fff1e 	bx	lr

40010b8c <LtcGenerator::ActionForward(long)>:
40010b8c:	e5d0303c 	ldrb	r3, [r0, #60]	; 0x3c
40010b90:	e3530001 	cmp	r3, #1
40010b94:	012fff1e 	bxeq	lr
40010b98:	e3072770 	movw	r2, #30576	; 0x7770
40010b9c:	e3530002 	cmp	r3, #2
40010ba0:	e3442005 	movt	r2, #16389	; 0x4005
40010ba4:	03a03001 	moveq	r3, #1
40010ba8:	e92d4010 	push	{r4, lr}
40010bac:	e3a0e03c 	mov	lr, #60	; 0x3c
40010bb0:	05c0303c 	strbeq	r3, [r0, #60]	; 0x3c
40010bb4:	e5d2c003 	ldrb	ip, [r2, #3]
40010bb8:	e5d03008 	ldrb	r3, [r0, #8]
40010bbc:	e5d24002 	ldrb	r4, [r2, #2]
40010bc0:	e3530000 	cmp	r3, #0
40010bc4:	e5d23001 	ldrb	r3, [r2, #1]
40010bc8:	e1024c8e 	smlabb	r2, lr, ip, r4
40010bcc:	e023329e 	mla	r3, lr, r2, r3
40010bd0:	e0831001 	add	r1, r3, r1
40010bd4:	1305317f 	movwne	r3, #20863	; 0x517f
40010bd8:	05903010 	ldreq	r3, [r0, #16]
40010bdc:	13403001 	movtne	r3, #1
40010be0:	e1530001 	cmp	r3, r1
40010be4:	aa000008 	bge	40010c0c <LtcGenerator::ActionForward(long)+0x80>
40010be8:	e5903004 	ldr	r3, [r0, #4]
40010bec:	e3072770 	movw	r2, #30576	; 0x7770
40010bf0:	e3442005 	movt	r2, #16389	; 0x4005
40010bf4:	e2830005 	add	r0, r3, #5
40010bf8:	e4d31001 	ldrb	r1, [r3], #1
40010bfc:	e1500003 	cmp	r0, r3
40010c00:	e4c21001 	strb	r1, [r2], #1
40010c04:	1afffffb 	bne	40010bf8 <LtcGenerator::ActionForward(long)+0x6c>
40010c08:	e8bd8010 	pop	{r4, pc}
40010c0c:	e8bd4010 	pop	{r4, lr}
40010c10:	eaffffc5 	b	40010b2c <LtcGenerator::SetTimeCode(long)>

40010c14 <LtcGenerator::ActionBackward(long)>:
40010c14:	e5d0303c 	ldrb	r3, [r0, #60]	; 0x3c
40010c18:	e3530001 	cmp	r3, #1
40010c1c:	012fff1e 	bxeq	lr
40010c20:	e3072770 	movw	r2, #30576	; 0x7770
40010c24:	e3530002 	cmp	r3, #2
40010c28:	e3442005 	movt	r2, #16389	; 0x4005
40010c2c:	03a03001 	moveq	r3, #1
40010c30:	e92d4010 	push	{r4, lr}
40010c34:	e3a0e03c 	mov	lr, #60	; 0x3c
40010c38:	05c0303c 	strbeq	r3, [r0, #60]	; 0x3c
40010c3c:	e5d2c003 	ldrb	ip, [r2, #3]
40010c40:	e5d03008 	ldrb	r3, [r0, #8]
40010c44:	e5d24002 	ldrb	r4, [r2, #2]
40010c48:	e3530000 	cmp	r3, #0
40010c4c:	e5d23001 	ldrb	r3, [r2, #1]
40010c50:	e1024c8e 	smlabb	r2, lr, ip, r4
40010c54:	e023329e 	mla	r3, lr, r2, r3
40010c58:	e0431001 	sub	r1, r3, r1
40010c5c:	13a03000 	movne	r3, #0
40010c60:	0590300c 	ldreq	r3, [r0, #12]
40010c64:	e1530001 	cmp	r3, r1
40010c68:	da000008 	ble	40010c90 <LtcGenerator::ActionBackward(long)+0x7c>
40010c6c:	e5903000 	ldr	r3, [r0]
40010c70:	e3072770 	movw	r2, #30576	; 0x7770
40010c74:	e3442005 	movt	r2, #16389	; 0x4005
40010c78:	e2830005 	add	r0, r3, #5
40010c7c:	e4d31001 	ldrb	r1, [r3], #1
40010c80:	e1500003 	cmp	r0, r3
40010c84:	e4c21001 	strb	r1, [r2], #1
40010c88:	1afffffb 	bne	40010c7c <LtcGenerator::ActionBackward(long)+0x68>
40010c8c:	e8bd8010 	pop	{r4, pc}
40010c90:	e8bd4010 	pop	{r4, lr}
40010c94:	eaffffa4 	b	40010b2c <LtcGenerator::SetTimeCode(long)>

40010c98 <LtcGenerator::SetSkip(char const*, unsigned long, ltcgenerator::Direction)>:
40010c98:	e92d4070 	push	{r4, r5, r6, lr}
40010c9c:	e5d1c000 	ldrb	ip, [r1]
40010ca0:	e35c002d 	cmp	ip, #45	; 0x2d
40010ca4:	02422001 	subeq	r2, r2, #1
40010ca8:	02811001 	addeq	r1, r1, #1
40010cac:	03e06000 	mvneq	r6, #0
40010cb0:	13a06001 	movne	r6, #1
40010cb4:	e3520000 	cmp	r2, #0
40010cb8:	0a000014 	beq	40010d10 <LtcGenerator::SetSkip(char const*, unsigned long, ltcgenerator::Direction)+0x78>
40010cbc:	e2422001 	sub	r2, r2, #1
40010cc0:	e241c001 	sub	ip, r1, #1
40010cc4:	e0814002 	add	r4, r1, r2
40010cc8:	e3a0500a 	mov	r5, #10
40010ccc:	e3a01000 	mov	r1, #0
40010cd0:	ea000002 	b	40010ce0 <LtcGenerator::SetSkip(char const*, unsigned long, ltcgenerator::Direction)+0x48>
40010cd4:	e15c0004 	cmp	ip, r4
40010cd8:	e2421030 	sub	r1, r2, #48	; 0x30
40010cdc:	0a000004 	beq	40010cf4 <LtcGenerator::SetSkip(char const*, unsigned long, ltcgenerator::Direction)+0x5c>
40010ce0:	e5fc2001 	ldrb	r2, [ip, #1]!
40010ce4:	e242e030 	sub	lr, r2, #48	; 0x30
40010ce8:	e35e0009 	cmp	lr, #9
40010cec:	e0222195 	mla	r2, r5, r1, r2
40010cf0:	9afffff7 	bls	40010cd4 <LtcGenerator::SetSkip(char const*, unsigned long, ltcgenerator::Direction)+0x3c>
40010cf4:	e0010196 	mul	r1, r6, r1
40010cf8:	e3530000 	cmp	r3, #0
40010cfc:	1a000001 	bne	40010d08 <LtcGenerator::SetSkip(char const*, unsigned long, ltcgenerator::Direction)+0x70>
40010d00:	e8bd4070 	pop	{r4, r5, r6, lr}
40010d04:	eaffffa0 	b	40010b8c <LtcGenerator::ActionForward(long)>
40010d08:	e8bd4070 	pop	{r4, r5, r6, lr}
40010d0c:	eaffffc0 	b	40010c14 <LtcGenerator::ActionBackward(long)>
40010d10:	e1a01002 	mov	r1, r2
40010d14:	eafffff7 	b	40010cf8 <LtcGenerator::SetSkip(char const*, unsigned long, ltcgenerator::Direction)+0x60>

40010d18 <LtcGenerator::HandleRequest(char*, unsigned short)>:
40010d18:	e3510000 	cmp	r1, #0
40010d1c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40010d20:	11a0e002 	movne	lr, r2
40010d24:	0590e028 	ldreq	lr, [r0, #40]	; 0x28
40010d28:	e1a04000 	mov	r4, r0
40010d2c:	1580102c 	strne	r1, [r0, #44]	; 0x2c
40010d30:	1580e028 	strne	lr, [r0, #40]	; 0x28
40010d34:	e35e0007 	cmp	lr, #7
40010d38:	98bd81f0 	popls	{r4, r5, r6, r7, r8, pc}
40010d3c:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
40010d40:	e301231c 	movw	r2, #4892	; 0x131c
40010d44:	e3442003 	movt	r2, #16387	; 0x4003
40010d48:	e3a0106c 	mov	r1, #108	; 0x6c
40010d4c:	e2403001 	sub	r3, r0, #1
40010d50:	e2805003 	add	r5, r0, #3
40010d54:	ea000000 	b	40010d5c <LtcGenerator::HandleRequest(char*, unsigned short)+0x44>
40010d58:	e5f21001 	ldrb	r1, [r2, #1]!
40010d5c:	e5f3c001 	ldrb	ip, [r3, #1]!
40010d60:	e15c0001 	cmp	ip, r1
40010d64:	18bd81f0 	popne	{r4, r5, r6, r7, r8, pc}
40010d68:	e1530005 	cmp	r3, r5
40010d6c:	1afffff9 	bne	40010d58 <LtcGenerator::HandleRequest(char*, unsigned short)+0x40>
40010d70:	e59fc37c 	ldr	ip, [pc, #892]	; 400110f4 <LtcGenerator::HandleRequest(char*, unsigned short)+0x3dc>
40010d74:	e24ee001 	sub	lr, lr, #1
40010d78:	e2806004 	add	r6, r0, #4
40010d7c:	e3a02073 	mov	r2, #115	; 0x73
40010d80:	e7d0300e 	ldrb	r3, [r0, lr]
40010d84:	e353000a 	cmp	r3, #10
40010d88:	e1a03006 	mov	r3, r6
40010d8c:	0584e028 	streq	lr, [r4, #40]	; 0x28
40010d90:	e280e009 	add	lr, r0, #9
40010d94:	ea000002 	b	40010da4 <LtcGenerator::HandleRequest(char*, unsigned short)+0x8c>
40010d98:	e153000e 	cmp	r3, lr
40010d9c:	0a000030 	beq	40010e64 <LtcGenerator::HandleRequest(char*, unsigned short)+0x14c>
40010da0:	e4dc2001 	ldrb	r2, [ip], #1
40010da4:	e4d31001 	ldrb	r1, [r3], #1
40010da8:	e1510002 	cmp	r1, r2
40010dac:	0afffff9 	beq	40010d98 <LtcGenerator::HandleRequest(char*, unsigned short)+0x80>
40010db0:	e59fc340 	ldr	ip, [pc, #832]	; 400110f8 <LtcGenerator::HandleRequest(char*, unsigned short)+0x3e0>
40010db4:	e2807008 	add	r7, r0, #8
40010db8:	e1a03006 	mov	r3, r6
40010dbc:	e3a02073 	mov	r2, #115	; 0x73
40010dc0:	ea000002 	b	40010dd0 <LtcGenerator::HandleRequest(char*, unsigned short)+0xb8>
40010dc4:	e1570003 	cmp	r7, r3
40010dc8:	0a000035 	beq	40010ea4 <LtcGenerator::HandleRequest(char*, unsigned short)+0x18c>
40010dcc:	e4dc2001 	ldrb	r2, [ip], #1
40010dd0:	e4d31001 	ldrb	r1, [r3], #1
40010dd4:	e1510002 	cmp	r1, r2
40010dd8:	0afffff9 	beq	40010dc4 <LtcGenerator::HandleRequest(char*, unsigned short)+0xac>
40010ddc:	e3012334 	movw	r2, #4916	; 0x1334
40010de0:	e280100a 	add	r1, r0, #10
40010de4:	e3442003 	movt	r2, #16387	; 0x4003
40010de8:	e1a03006 	mov	r3, r6
40010dec:	e3a0c072 	mov	ip, #114	; 0x72
40010df0:	ea000002 	b	40010e00 <LtcGenerator::HandleRequest(char*, unsigned short)+0xe8>
40010df4:	e1510003 	cmp	r1, r3
40010df8:	0a00003f 	beq	40010efc <LtcGenerator::HandleRequest(char*, unsigned short)+0x1e4>
40010dfc:	e5f2c001 	ldrb	ip, [r2, #1]!
40010e00:	e4d37001 	ldrb	r7, [r3], #1
40010e04:	e157000c 	cmp	r7, ip
40010e08:	0afffff9 	beq	40010df4 <LtcGenerator::HandleRequest(char*, unsigned short)+0xdc>
40010e0c:	e5942028 	ldr	r2, [r4, #40]	; 0x28
40010e10:	e352000b 	cmp	r2, #11
40010e14:	0a00003e 	beq	40010f14 <LtcGenerator::HandleRequest(char*, unsigned short)+0x1fc>
40010e18:	e3520016 	cmp	r2, #22
40010e1c:	9a000046 	bls	40010f3c <LtcGenerator::HandleRequest(char*, unsigned short)+0x224>
40010e20:	e352000f 	cmp	r2, #15
40010e24:	88bd81f0 	pophi	{r4, r5, r6, r7, r8, pc}
40010e28:	e3013348 	movw	r3, #4936	; 0x1348
40010e2c:	e2866008 	add	r6, r6, #8
40010e30:	e3443003 	movt	r3, #16387	; 0x4003
40010e34:	e3a01062 	mov	r1, #98	; 0x62
40010e38:	ea000000 	b	40010e40 <LtcGenerator::HandleRequest(char*, unsigned short)+0x128>
40010e3c:	e5f31001 	ldrb	r1, [r3, #1]!
40010e40:	e5f5c001 	ldrb	ip, [r5, #1]!
40010e44:	e15c0001 	cmp	ip, r1
40010e48:	18bd81f0 	popne	{r4, r5, r6, r7, r8, pc}
40010e4c:	e1560005 	cmp	r6, r5
40010e50:	1afffff9 	bne	40010e3c <LtcGenerator::HandleRequest(char*, unsigned short)+0x124>
40010e54:	e3a03001 	mov	r3, #1
40010e58:	e242200d 	sub	r2, r2, #13
40010e5c:	e280100d 	add	r1, r0, #13
40010e60:	ea00005b 	b	40010fd4 <LtcGenerator::HandleRequest(char*, unsigned short)+0x2bc>
40010e64:	e5943028 	ldr	r3, [r4, #40]	; 0x28
40010e68:	e3530009 	cmp	r3, #9
40010e6c:	0a00005b 	beq	40010fe0 <LtcGenerator::HandleRequest(char*, unsigned short)+0x2c8>
40010e70:	e3530015 	cmp	r3, #21
40010e74:	18bd81f0 	popne	{r4, r5, r6, r7, r8, pc}
40010e78:	e5d03009 	ldrb	r3, [r0, #9]
40010e7c:	e3530023 	cmp	r3, #35	; 0x23
40010e80:	0a000069 	beq	4001102c <LtcGenerator::HandleRequest(char*, unsigned short)+0x314>
40010e84:	e3530021 	cmp	r3, #33	; 0x21
40010e88:	0a000074 	beq	40011060 <LtcGenerator::HandleRequest(char*, unsigned short)+0x348>
40010e8c:	e3530040 	cmp	r3, #64	; 0x40
40010e90:	18bd81f0 	popne	{r4, r5, r6, r7, r8, pc}
40010e94:	e280100a 	add	r1, r0, #10
40010e98:	e1a00004 	mov	r0, r4
40010e9c:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
40010ea0:	eafffdb9 	b	4001058c <LtcGenerator::ActionGoto(char const*)>
40010ea4:	e5943028 	ldr	r3, [r4, #40]	; 0x28
40010ea8:	e3530008 	cmp	r3, #8
40010eac:	03a03000 	moveq	r3, #0
40010eb0:	0a000015 	beq	40010f0c <LtcGenerator::HandleRequest(char*, unsigned short)+0x1f4>
40010eb4:	e3530014 	cmp	r3, #20
40010eb8:	18bd81f0 	popne	{r4, r5, r6, r7, r8, pc}
40010ebc:	e5d03008 	ldrb	r3, [r0, #8]
40010ec0:	e3530023 	cmp	r3, #35	; 0x23
40010ec4:	18bd81f0 	popne	{r4, r5, r6, r7, r8, pc}
40010ec8:	e5942004 	ldr	r2, [r4, #4]
40010ecc:	e1a0000e 	mov	r0, lr
40010ed0:	e5d41030 	ldrb	r1, [r4, #48]	; 0x30
40010ed4:	ebffee3d 	bl	4000c7d0 <ltc::parse_timecode(char const*, unsigned char, ltc::TimeCode*)>
40010ed8:	e5943004 	ldr	r3, [r4, #4]
40010edc:	e3a0103c 	mov	r1, #60	; 0x3c
40010ee0:	e5d32003 	ldrb	r2, [r3, #3]
40010ee4:	e5d30002 	ldrb	r0, [r3, #2]
40010ee8:	e5d33001 	ldrb	r3, [r3, #1]
40010eec:	e1020281 	smlabb	r2, r1, r2, r0
40010ef0:	e0233291 	mla	r3, r1, r2, r3
40010ef4:	e5843010 	str	r3, [r4, #16]
40010ef8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40010efc:	e5d4303c 	ldrb	r3, [r4, #60]	; 0x3c
40010f00:	e3530001 	cmp	r3, #1
40010f04:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
40010f08:	e3a03001 	mov	r3, #1
40010f0c:	e5c4303c 	strb	r3, [r4, #60]	; 0x3c
40010f10:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40010f14:	e59f81e0 	ldr	r8, [pc, #480]	; 400110fc <LtcGenerator::HandleRequest(char*, unsigned short)+0x3e4>
40010f18:	e1a03006 	mov	r3, r6
40010f1c:	e3a0c072 	mov	ip, #114	; 0x72
40010f20:	ea000002 	b	40010f30 <LtcGenerator::HandleRequest(char*, unsigned short)+0x218>
40010f24:	e153000e 	cmp	r3, lr
40010f28:	0a000062 	beq	400110b8 <LtcGenerator::HandleRequest(char*, unsigned short)+0x3a0>
40010f2c:	e4d8c001 	ldrb	ip, [r8], #1
40010f30:	e4d37001 	ldrb	r7, [r3], #1
40010f34:	e15c0007 	cmp	ip, r7
40010f38:	0afffff9 	beq	40010f24 <LtcGenerator::HandleRequest(char*, unsigned short)+0x20c>
40010f3c:	e301c354 	movw	ip, #4948	; 0x1354
40010f40:	e1a03005 	mov	r3, r5
40010f44:	e344c003 	movt	ip, #16387	; 0x4003
40010f48:	e2868009 	add	r8, r6, #9
40010f4c:	e3a0e064 	mov	lr, #100	; 0x64
40010f50:	ea000002 	b	40010f60 <LtcGenerator::HandleRequest(char*, unsigned short)+0x248>
40010f54:	e1530008 	cmp	r3, r8
40010f58:	0a00005d 	beq	400110d4 <LtcGenerator::HandleRequest(char*, unsigned short)+0x3bc>
40010f5c:	e5fce001 	ldrb	lr, [ip, #1]!
40010f60:	e5f37001 	ldrb	r7, [r3, #1]!
40010f64:	e157000e 	cmp	r7, lr
40010f68:	0afffff9 	beq	40010f54 <LtcGenerator::HandleRequest(char*, unsigned short)+0x23c>
40010f6c:	e352000e 	cmp	r2, #14
40010f70:	8affffaa 	bhi	40010e20 <LtcGenerator::HandleRequest(char*, unsigned short)+0x108>
40010f74:	e301c370 	movw	ip, #4976	; 0x1370
40010f78:	e1a03006 	mov	r3, r6
40010f7c:	e344c003 	movt	ip, #16387	; 0x4003
40010f80:	e3a0e070 	mov	lr, #112	; 0x70
40010f84:	ea000002 	b	40010f94 <LtcGenerator::HandleRequest(char*, unsigned short)+0x27c>
40010f88:	e1510003 	cmp	r1, r3
40010f8c:	0a000054 	beq	400110e4 <LtcGenerator::HandleRequest(char*, unsigned short)+0x3cc>
40010f90:	e5fce001 	ldrb	lr, [ip, #1]!
40010f94:	e4d37001 	ldrb	r7, [r3], #1
40010f98:	e15e0007 	cmp	lr, r7
40010f9c:	0afffff9 	beq	40010f88 <LtcGenerator::HandleRequest(char*, unsigned short)+0x270>
40010fa0:	e59f7158 	ldr	r7, [pc, #344]	; 40011100 <LtcGenerator::HandleRequest(char*, unsigned short)+0x3e8>
40010fa4:	e280100c 	add	r1, r0, #12
40010fa8:	e1a03006 	mov	r3, r6
40010fac:	e3a0e066 	mov	lr, #102	; 0x66
40010fb0:	ea000000 	b	40010fb8 <LtcGenerator::HandleRequest(char*, unsigned short)+0x2a0>
40010fb4:	e4d7e001 	ldrb	lr, [r7], #1
40010fb8:	e4d3c001 	ldrb	ip, [r3], #1
40010fbc:	e15e000c 	cmp	lr, ip
40010fc0:	1affff98 	bne	40010e28 <LtcGenerator::HandleRequest(char*, unsigned short)+0x110>
40010fc4:	e1510003 	cmp	r1, r3
40010fc8:	1afffff9 	bne	40010fb4 <LtcGenerator::HandleRequest(char*, unsigned short)+0x29c>
40010fcc:	e3a03000 	mov	r3, #0
40010fd0:	e242200c 	sub	r2, r2, #12
40010fd4:	e1a00004 	mov	r0, r4
40010fd8:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
40010fdc:	eaffff2d 	b	40010c98 <LtcGenerator::SetSkip(char const*, unsigned long, ltcgenerator::Direction)>
40010fe0:	e5d4303c 	ldrb	r3, [r4, #60]	; 0x3c
40010fe4:	e3530001 	cmp	r3, #1
40010fe8:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
40010fec:	e5943000 	ldr	r3, [r4]
40010ff0:	e3072770 	movw	r2, #30576	; 0x7770
40010ff4:	e3442005 	movt	r2, #16389	; 0x4005
40010ff8:	e3a01001 	mov	r1, #1
40010ffc:	e5c4103c 	strb	r1, [r4, #60]	; 0x3c
40011000:	e2830005 	add	r0, r3, #5
40011004:	e4d31001 	ldrb	r1, [r3], #1
40011008:	e1530000 	cmp	r3, r0
4001100c:	e4c21001 	strb	r1, [r2], #1
40011010:	1afffffb 	bne	40011004 <LtcGenerator::HandleRequest(char*, unsigned short)+0x2ec>
40011014:	e3043060 	movw	r3, #16480	; 0x4060
40011018:	e3e02000 	mvn	r2, #0
4001101c:	e3443003 	movt	r3, #16387	; 0x4003
40011020:	e5933000 	ldr	r3, [r3]
40011024:	e5c32002 	strb	r2, [r3, #2]
40011028:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001102c:	e5942000 	ldr	r2, [r4]
40011030:	e280000a 	add	r0, r0, #10
40011034:	e5d41030 	ldrb	r1, [r4, #48]	; 0x30
40011038:	ebffede4 	bl	4000c7d0 <ltc::parse_timecode(char const*, unsigned char, ltc::TimeCode*)>
4001103c:	e5943000 	ldr	r3, [r4]
40011040:	e3a0103c 	mov	r1, #60	; 0x3c
40011044:	e5d32003 	ldrb	r2, [r3, #3]
40011048:	e5d30002 	ldrb	r0, [r3, #2]
4001104c:	e5d33001 	ldrb	r3, [r3, #1]
40011050:	e1020281 	smlabb	r2, r1, r2, r0
40011054:	e0233291 	mla	r3, r1, r2, r3
40011058:	e584300c 	str	r3, [r4, #12]
4001105c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40011060:	e5942000 	ldr	r2, [r4]
40011064:	e280000a 	add	r0, r0, #10
40011068:	e5d41030 	ldrb	r1, [r4, #48]	; 0x30
4001106c:	ebffedd7 	bl	4000c7d0 <ltc::parse_timecode(char const*, unsigned char, ltc::TimeCode*)>
40011070:	e5943000 	ldr	r3, [r4]
40011074:	e3a0003c 	mov	r0, #60	; 0x3c
40011078:	e5d32003 	ldrb	r2, [r3, #3]
4001107c:	e5d3c002 	ldrb	ip, [r3, #2]
40011080:	e5d31001 	ldrb	r1, [r3, #1]
40011084:	e102c280 	smlabb	r2, r0, r2, ip
40011088:	e0211290 	mla	r1, r0, r2, r1
4001108c:	e3072770 	movw	r2, #30576	; 0x7770
40011090:	e2830005 	add	r0, r3, #5
40011094:	e3442005 	movt	r2, #16389	; 0x4005
40011098:	e584100c 	str	r1, [r4, #12]
4001109c:	e3a01001 	mov	r1, #1
400110a0:	e5c4103c 	strb	r1, [r4, #60]	; 0x3c
400110a4:	e4d31001 	ldrb	r1, [r3], #1
400110a8:	e1530000 	cmp	r3, r0
400110ac:	e4c21001 	strb	r1, [r2], #1
400110b0:	1afffffb 	bne	400110a4 <LtcGenerator::HandleRequest(char*, unsigned short)+0x38c>
400110b4:	eaffffd6 	b	40011014 <LtcGenerator::HandleRequest(char*, unsigned short)+0x2fc>
400110b8:	e5d4203c 	ldrb	r2, [r4, #60]	; 0x3c
400110bc:	e3520000 	cmp	r2, #0
400110c0:	18bd81f0 	popne	{r4, r5, r6, r7, r8, pc}
400110c4:	e1a00004 	mov	r0, r4
400110c8:	e1a01003 	mov	r1, r3
400110cc:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
400110d0:	eafffbd2 	b	40010020 <LtcGenerator::ActionSetRate(char const*) [clone .part.0]>
400110d4:	e280100e 	add	r1, r0, #14
400110d8:	e1a00004 	mov	r0, r4
400110dc:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
400110e0:	eafffd4e 	b	40010620 <LtcGenerator::ActionSetDirection(char const*)>
400110e4:	e1a00004 	mov	r0, r4
400110e8:	e242200a 	sub	r2, r2, #10
400110ec:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
400110f0:	eafffd98 	b	40010758 <LtcGenerator::SetPitch(char const*, unsigned long)>
400110f4:	40031379 	andmi	r1, r3, r9, ror r3
400110f8:	40031369 	andmi	r1, r3, r9, ror #6
400110fc:	40031361 	andmi	r1, r3, r1, ror #6
40011100:	4003133d 	andmi	r1, r3, sp, lsr r3

40011104 <LtcGenerator::staticCallbackFunction(unsigned char const*, unsigned long, unsigned long, unsigned short)>:
40011104:	e3043094 	movw	r3, #16532	; 0x4094
40011108:	e1a0c001 	mov	ip, r1
4001110c:	e3443003 	movt	r3, #16387	; 0x4003
40011110:	e3a02000 	mov	r2, #0
40011114:	e1a01002 	mov	r1, r2
40011118:	e5933000 	ldr	r3, [r3]
4001111c:	e583002c 	str	r0, [r3, #44]	; 0x2c
40011120:	e1a00003 	mov	r0, r3
40011124:	e583c028 	str	ip, [r3, #40]	; 0x28
40011128:	eafffefa 	b	40010d18 <LtcGenerator::HandleRequest(char*, unsigned short)>

4001112c <LtcGenerator::Update()>:
4001112c:	f57ff05f 	dmb	sy
40011130:	e3073775 	movw	r3, #30581	; 0x7775
40011134:	e3443005 	movt	r3, #16389	; 0x4005
40011138:	e5d32000 	ldrb	r2, [r3]
4001113c:	e3520000 	cmp	r2, #0
40011140:	012fff1e 	bxeq	lr
40011144:	e92d4070 	push	{r4, r5, r6, lr}
40011148:	e30756ec 	movw	r5, #30444	; 0x76ec
4001114c:	e3445005 	movt	r5, #16389	; 0x4005
40011150:	e3a02000 	mov	r2, #0
40011154:	e5c32000 	strb	r2, [r3]
40011158:	e1a04000 	mov	r4, r0
4001115c:	e5d56004 	ldrb	r6, [r5, #4]
40011160:	e1560002 	cmp	r6, r2
40011164:	0a000012 	beq	400111b4 <LtcGenerator::Update()+0x88>
40011168:	e5d53003 	ldrb	r3, [r5, #3]
4001116c:	e3530000 	cmp	r3, #0
40011170:	0a000017 	beq	400111d4 <LtcGenerator::Update()+0xa8>
40011174:	e5d53005 	ldrb	r3, [r5, #5]
40011178:	e3530000 	cmp	r3, #0
4001117c:	0a00001b 	beq	400111f0 <LtcGenerator::Update()+0xc4>
40011180:	ebfffc35 	bl	4001025c <LtcOutputs::Get()>
40011184:	e3071770 	movw	r1, #30576	; 0x7770
40011188:	e3441005 	movt	r1, #16389	; 0x4005
4001118c:	eb0002bd 	bl	40011c88 <LtcOutputs::Update(ltc::TimeCode const*)>
40011190:	e5943034 	ldr	r3, [r4, #52]	; 0x34
40011194:	e3530000 	cmp	r3, #0
40011198:	e5943038 	ldr	r3, [r4, #56]	; 0x38
4001119c:	1a000018 	bne	40011204 <LtcGenerator::Update()+0xd8>
400111a0:	e3530000 	cmp	r3, #0
400111a4:	1a00002b 	bne	40011258 <LtcGenerator::Update()+0x12c>
400111a8:	e1a00004 	mov	r0, r4
400111ac:	e8bd4070 	pop	{r4, r5, r6, lr}
400111b0:	eafffdec 	b	40010968 <LtcGenerator::Increment()>
400111b4:	ebfffc24 	bl	4001024c <LtcSender::Get()>
400111b8:	e3071770 	movw	r1, #30576	; 0x7770
400111bc:	e1a02006 	mov	r2, r6
400111c0:	e3441005 	movt	r1, #16389	; 0x4005
400111c4:	eb000d14 	bl	4001461c <LtcSender::SetTimeCode(ltc::TimeCode const*, bool)>
400111c8:	e5d53003 	ldrb	r3, [r5, #3]
400111cc:	e3530000 	cmp	r3, #0
400111d0:	1affffe7 	bne	40011174 <LtcGenerator::Update()+0x48>
400111d4:	ebfffc14 	bl	4001022c <ArtNetNode::Get()>
400111d8:	e3071770 	movw	r1, #30576	; 0x7770
400111dc:	e3441005 	movt	r1, #16389	; 0x4005
400111e0:	ebfffbf8 	bl	400101c8 <ArtNetNode::SendTimeCode(artnet::TimeCode const*)>
400111e4:	e5d53005 	ldrb	r3, [r5, #5]
400111e8:	e3530000 	cmp	r3, #0
400111ec:	1affffe3 	bne	40011180 <LtcGenerator::Update()+0x54>
400111f0:	ebfffc11 	bl	4001023c <LtcEtc::Get()>
400111f4:	e3071770 	movw	r1, #30576	; 0x7770
400111f8:	e3441005 	movt	r1, #16389	; 0x4005
400111fc:	ebfff284 	bl	4000dc14 <LtcEtc::Send(midi::Timecode const*)>
40011200:	eaffffde 	b	40011180 <LtcGenerator::Update()+0x54>
40011204:	e3530000 	cmp	r3, #0
40011208:	1a000002 	bne	40011218 <LtcGenerator::Update()+0xec>
4001120c:	e1a00004 	mov	r0, r4
40011210:	e8bd4070 	pop	{r4, r5, r6, lr}
40011214:	eafffe08 	b	40010a3c <LtcGenerator::Decrement()>
40011218:	e3530001 	cmp	r3, #1
4001121c:	0a00002d 	beq	400112d8 <LtcGenerator::Update()+0x1ac>
40011220:	edd47a05 	vldr	s15, [r4, #20]
40011224:	ed947a07 	vldr	s14, [r4, #28]
40011228:	eef87a67 	vcvt.f32.u32	s15, s15
4001122c:	e5943014 	ldr	r3, [r4, #20]
40011230:	e5942018 	ldr	r2, [r4, #24]
40011234:	e2833001 	add	r3, r3, #1
40011238:	ee677a87 	vmul.f32	s15, s15, s14
4001123c:	e5843014 	str	r3, [r4, #20]
40011240:	eefc7ae7 	vcvt.u32.f32	s15, s15
40011244:	ee173a90 	vmov	r3, s15
40011248:	edc47a06 	vstr	s15, [r4, #24]
4001124c:	e1530002 	cmp	r3, r2
40011250:	18bd8070 	popne	{r4, r5, r6, pc}
40011254:	eaffffec 	b	4001120c <LtcGenerator::Update()+0xe0>
40011258:	e3530001 	cmp	r3, #1
4001125c:	0a00000d 	beq	40011298 <LtcGenerator::Update()+0x16c>
40011260:	edd47a05 	vldr	s15, [r4, #20]
40011264:	ed947a07 	vldr	s14, [r4, #28]
40011268:	eef87a67 	vcvt.f32.u32	s15, s15
4001126c:	e5943014 	ldr	r3, [r4, #20]
40011270:	e5942018 	ldr	r2, [r4, #24]
40011274:	e2833001 	add	r3, r3, #1
40011278:	ee677a87 	vmul.f32	s15, s15, s14
4001127c:	e5843014 	str	r3, [r4, #20]
40011280:	eefc7ae7 	vcvt.u32.f32	s15, s15
40011284:	ee173a90 	vmov	r3, s15
40011288:	edc47a06 	vstr	s15, [r4, #24]
4001128c:	e1530002 	cmp	r3, r2
40011290:	18bd8070 	popne	{r4, r5, r6, pc}
40011294:	eaffffc3 	b	400111a8 <LtcGenerator::Update()+0x7c>
40011298:	e1a00004 	mov	r0, r4
4001129c:	ebfffdb1 	bl	40010968 <LtcGenerator::Increment()>
400112a0:	edd47a05 	vldr	s15, [r4, #20]
400112a4:	ed947a07 	vldr	s14, [r4, #28]
400112a8:	eef87a67 	vcvt.f32.u32	s15, s15
400112ac:	e5943014 	ldr	r3, [r4, #20]
400112b0:	e5942018 	ldr	r2, [r4, #24]
400112b4:	e2833001 	add	r3, r3, #1
400112b8:	ee677a87 	vmul.f32	s15, s15, s14
400112bc:	e5843014 	str	r3, [r4, #20]
400112c0:	eefc7ae7 	vcvt.u32.f32	s15, s15
400112c4:	ee173a90 	vmov	r3, s15
400112c8:	edc47a06 	vstr	s15, [r4, #24]
400112cc:	e1530002 	cmp	r3, r2
400112d0:	08bd8070 	popeq	{r4, r5, r6, pc}
400112d4:	eaffffb3 	b	400111a8 <LtcGenerator::Update()+0x7c>
400112d8:	e1a00004 	mov	r0, r4
400112dc:	ebfffdd6 	bl	40010a3c <LtcGenerator::Decrement()>
400112e0:	edd47a05 	vldr	s15, [r4, #20]
400112e4:	ed947a07 	vldr	s14, [r4, #28]
400112e8:	eef87a67 	vcvt.f32.u32	s15, s15
400112ec:	e5943014 	ldr	r3, [r4, #20]
400112f0:	e5942018 	ldr	r2, [r4, #24]
400112f4:	e2833001 	add	r3, r3, #1
400112f8:	ee677a87 	vmul.f32	s15, s15, s14
400112fc:	e5843014 	str	r3, [r4, #20]
40011300:	eefc7ae7 	vcvt.u32.f32	s15, s15
40011304:	ee173a90 	vmov	r3, s15
40011308:	edc47a06 	vstr	s15, [r4, #24]
4001130c:	e1530002 	cmp	r3, r2
40011310:	08bd8070 	popeq	{r4, r5, r6, pc}
40011314:	eaffffbc 	b	4001120c <LtcGenerator::Update()+0xe0>

40011318 <timer_handler()>:
40011318:	e92d4010 	push	{r4, lr}
4001131c:	e30746ec 	movw	r4, #30444	; 0x76ec
40011320:	e3444005 	movt	r4, #16389	; 0x4005
40011324:	e24dd010 	sub	sp, sp, #16
40011328:	e5d43007 	ldrb	r3, [r4, #7]
4001132c:	e3530000 	cmp	r3, #0
40011330:	0a000004 	beq	40011348 <timer_handler()+0x30>
40011334:	e5d43002 	ldrb	r3, [r4, #2]
40011338:	e3530000 	cmp	r3, #0
4001133c:	0a00002a 	beq	400113ec <timer_handler()+0xd4>
40011340:	e28dd010 	add	sp, sp, #16
40011344:	e8bd8010 	pop	{r4, pc}
40011348:	e304306c 	movw	r3, #16492	; 0x406c
4001134c:	e3e01007 	mvn	r1, #7
40011350:	e3443003 	movt	r3, #16387	; 0x4003
40011354:	e5932000 	ldr	r2, [r3]
40011358:	e59230e4 	ldr	r3, [r2, #228]	; 0xe4
4001135c:	e5c3100d 	strb	r1, [r3, #13]
40011360:	e1d21eb8 	ldrh	r1, [r2, #232]	; 0xe8
40011364:	e59200e4 	ldr	r0, [r2, #228]	; 0xe4
40011368:	e592c004 	ldr	ip, [r2, #4]
4001136c:	e2813001 	add	r3, r1, #1
40011370:	e6bf1fb1 	rev16	r1, r1
40011374:	e1c23eb8 	strh	r3, [r2, #232]	; 0xe8
40011378:	e1c010b2 	strh	r1, [r0, #2]
4001137c:	e3a01b03 	mov	r1, #3072	; 0xc00
40011380:	e34011c2 	movt	r1, #450	; 0x1c2
40011384:	e5913084 	ldr	r3, [r1, #132]	; 0x84
40011388:	e3a0100a 	mov	r1, #10
4001138c:	e043300c 	sub	r3, r3, ip
40011390:	e0030391 	mul	r3, r1, r3
40011394:	e3a01001 	mov	r1, #1
40011398:	e5c0100c 	strb	r1, [r0, #12]
4001139c:	e5921044 	ldr	r1, [r2, #68]	; 0x44
400113a0:	e6bf3f33 	rev	r3, r3
400113a4:	e5803004 	str	r3, [r0, #4]
400113a8:	e3510003 	cmp	r1, #3
400113ac:	1affffe0 	bne	40011334 <timer_handler()+0x1c>
400113b0:	e592000c 	ldr	r0, [r2, #12]
400113b4:	e30a173c 	movw	r1, #42812	; 0xa73c
400113b8:	e3441005 	movt	r1, #16389	; 0x4005
400113bc:	e5923048 	ldr	r3, [r2, #72]	; 0x48
400113c0:	e5911000 	ldr	r1, [r1]
400113c4:	e1d2c4bc 	ldrh	ip, [r2, #76]	; 0x4c
400113c8:	e3510000 	cmp	r1, #0
400113cc:	0affffd8 	beq	40011334 <timer_handler()+0x1c>
400113d0:	e59210e4 	ldr	r1, [r2, #228]	; 0xe4
400113d4:	e3a0200e 	mov	r2, #14
400113d8:	e58dc000 	str	ip, [sp]
400113dc:	eb0043e5 	bl	40022378 <net::udp_send(long, unsigned char const*, unsigned long, unsigned long, unsigned short)>
400113e0:	e5d43002 	ldrb	r3, [r4, #2]
400113e4:	e3530000 	cmp	r3, #0
400113e8:	1affffd4 	bne	40011340 <timer_handler()+0x28>
400113ec:	e3a00b22 	mov	r0, #34816	; 0x8800
400113f0:	e3e03007 	mvn	r3, #7
400113f4:	e34001c2 	movt	r0, #450	; 0x1c2
400113f8:	e3a02001 	mov	r2, #1
400113fc:	e5cd300f 	strb	r3, [sp, #15]
40011400:	e28d100f 	add	r1, sp, #15
40011404:	eb00608f 	bl	40029648 <h3_uart_transmit>
40011408:	e28dd010 	add	sp, sp, #16
4001140c:	e8bd8010 	pop	{r4, pc}

40011410 <LtcMidiSystemRealtime::Start()>:
40011410:	e30118a4 	movw	r1, #6308	; 0x18a4
40011414:	e92d4010 	push	{r4, lr}
40011418:	e1a04000 	mov	r4, r0
4001141c:	e3441001 	movt	r1, #16385	; 0x4001
40011420:	e3040444 	movw	r0, #17476	; 0x4444
40011424:	eb004387 	bl	40022248 <net::udp_begin(unsigned short, void (*)(unsigned char const*, unsigned long, unsigned long, unsigned short))>
40011428:	e5840000 	str	r0, [r4]
4001142c:	e8bd8010 	pop	{r4, pc}

40011430 <LtcMidiSystemRealtime::SetBPM(unsigned long)>:
40011430:	e30736ec 	movw	r3, #30444	; 0x76ec
40011434:	e3443005 	movt	r3, #16389	; 0x4005
40011438:	e5d32007 	ldrb	r2, [r3, #7]
4001143c:	e3520000 	cmp	r2, #0
40011440:	0a000002 	beq	40011450 <LtcMidiSystemRealtime::SetBPM(unsigned long)+0x20>
40011444:	e5d33002 	ldrb	r3, [r3, #2]
40011448:	e3530000 	cmp	r3, #0
4001144c:	112fff1e 	bxne	lr
40011450:	e5903004 	ldr	r3, [r0, #4]
40011454:	e1530001 	cmp	r3, r1
40011458:	012fff1e 	bxeq	lr
4001145c:	e5801004 	str	r1, [r0, #4]
40011460:	e3510000 	cmp	r1, #0
40011464:	01a00001 	moveq	r0, r1
40011468:	0a000007 	beq	4001148c <LtcMidiSystemRealtime::SetBPM(unsigned long)+0x5c>
4001146c:	e2413008 	sub	r3, r1, #8
40011470:	e3530f49 	cmp	r3, #292	; 0x124
40011474:	812fff1e 	bxhi	lr
40011478:	e3a03c87 	mov	r3, #34560	; 0x8700
4001147c:	e3010318 	movw	r0, #4888	; 0x1318
40011480:	e3403393 	movt	r3, #915	; 0x393
40011484:	e3440001 	movt	r0, #16385	; 0x4001
40011488:	e731f113 	udiv	r1, r3, r1
4001148c:	ea006a87 	b	4002beb0 <irq_timer_arm_virtual_set(void (*)(), unsigned long)>

40011490 <LtcMidiSystemRealtime::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)>:
40011490:	e301c380 	movw	ip, #4992	; 0x1380
40011494:	e2413001 	sub	r3, r1, #1
40011498:	e92d4030 	push	{r4, r5, lr}
4001149c:	e2815004 	add	r5, r1, #4
400114a0:	e344c003 	movt	ip, #16387	; 0x4003
400114a4:	e24dd014 	sub	sp, sp, #20
400114a8:	e3a0e06d 	mov	lr, #109	; 0x6d
400114ac:	ea000002 	b	400114bc <LtcMidiSystemRealtime::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x2c>
400114b0:	e1530005 	cmp	r3, r5
400114b4:	0a000005 	beq	400114d0 <LtcMidiSystemRealtime::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x40>
400114b8:	e5fce001 	ldrb	lr, [ip, #1]!
400114bc:	e5f34001 	ldrb	r4, [r3, #1]!
400114c0:	e154000e 	cmp	r4, lr
400114c4:	0afffff9 	beq	400114b0 <LtcMidiSystemRealtime::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x20>
400114c8:	e28dd014 	add	sp, sp, #20
400114cc:	e8bd8030 	pop	{r4, r5, pc}
400114d0:	e2423001 	sub	r3, r2, #1
400114d4:	e7d1c003 	ldrb	ip, [r1, r3]
400114d8:	e35c000a 	cmp	ip, #10
400114dc:	01a02003 	moveq	r2, r3
400114e0:	e352000a 	cmp	r2, #10
400114e4:	0a000029 	beq	40011590 <LtcMidiSystemRealtime::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x100>
400114e8:	e3520009 	cmp	r2, #9
400114ec:	0a00000d 	beq	40011528 <LtcMidiSystemRealtime::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x98>
400114f0:	e352000d 	cmp	r2, #13
400114f4:	1a000017 	bne	40011558 <LtcMidiSystemRealtime::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xc8>
400114f8:	e59fc394 	ldr	ip, [pc, #916]	; 40011894 <LtcMidiSystemRealtime::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x404>
400114fc:	e2813005 	add	r3, r1, #5
40011500:	e3a02063 	mov	r2, #99	; 0x63
40011504:	e281100d 	add	r1, r1, #13
40011508:	ea000002 	b	40011518 <LtcMidiSystemRealtime::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x88>
4001150c:	e1530001 	cmp	r3, r1
40011510:	0a00005f 	beq	40011694 <LtcMidiSystemRealtime::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x204>
40011514:	e4dc2001 	ldrb	r2, [ip], #1
40011518:	e4d30001 	ldrb	r0, [r3], #1
4001151c:	e1500002 	cmp	r0, r2
40011520:	0afffff9 	beq	4001150c <LtcMidiSystemRealtime::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x7c>
40011524:	eaffffe7 	b	400114c8 <LtcMidiSystemRealtime::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x38>
40011528:	e59fc368 	ldr	ip, [pc, #872]	; 40011898 <LtcMidiSystemRealtime::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x408>
4001152c:	e2813005 	add	r3, r1, #5
40011530:	e3a02073 	mov	r2, #115	; 0x73
40011534:	e2811009 	add	r1, r1, #9
40011538:	ea000002 	b	40011548 <LtcMidiSystemRealtime::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xb8>
4001153c:	e1510003 	cmp	r1, r3
40011540:	0a000048 	beq	40011668 <LtcMidiSystemRealtime::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x1d8>
40011544:	e4dc2001 	ldrb	r2, [ip], #1
40011548:	e4d30001 	ldrb	r0, [r3], #1
4001154c:	e1500002 	cmp	r0, r2
40011550:	0afffff9 	beq	4001153c <LtcMidiSystemRealtime::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xac>
40011554:	eaffffdb 	b	400114c8 <LtcMidiSystemRealtime::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x38>
40011558:	e352000c 	cmp	r2, #12
4001155c:	1affffd9 	bne	400114c8 <LtcMidiSystemRealtime::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x38>
40011560:	e59fe334 	ldr	lr, [pc, #820]	; 4001189c <LtcMidiSystemRealtime::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x40c>
40011564:	e2813005 	add	r3, r1, #5
40011568:	e2814009 	add	r4, r1, #9
4001156c:	e3a02062 	mov	r2, #98	; 0x62
40011570:	ea000002 	b	40011580 <LtcMidiSystemRealtime::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xf0>
40011574:	e1540003 	cmp	r4, r3
40011578:	0a000010 	beq	400115c0 <LtcMidiSystemRealtime::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x130>
4001157c:	e4de2001 	ldrb	r2, [lr], #1
40011580:	e4d3c001 	ldrb	ip, [r3], #1
40011584:	e15c0002 	cmp	ip, r2
40011588:	0afffff9 	beq	40011574 <LtcMidiSystemRealtime::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xe4>
4001158c:	eaffffcd 	b	400114c8 <LtcMidiSystemRealtime::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x38>
40011590:	e59fc308 	ldr	ip, [pc, #776]	; 400118a0 <LtcMidiSystemRealtime::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x410>
40011594:	e2813005 	add	r3, r1, #5
40011598:	e3a02073 	mov	r2, #115	; 0x73
4001159c:	e281100a 	add	r1, r1, #10
400115a0:	ea000002 	b	400115b0 <LtcMidiSystemRealtime::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x120>
400115a4:	e1530001 	cmp	r3, r1
400115a8:	0a00001e 	beq	40011628 <LtcMidiSystemRealtime::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x198>
400115ac:	e4dc2001 	ldrb	r2, [ip], #1
400115b0:	e4d30001 	ldrb	r0, [r3], #1
400115b4:	e1500002 	cmp	r0, r2
400115b8:	0afffff9 	beq	400115a4 <LtcMidiSystemRealtime::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x114>
400115bc:	eaffffc1 	b	400114c8 <LtcMidiSystemRealtime::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x38>
400115c0:	e5d13009 	ldrb	r3, [r1, #9]
400115c4:	e2433030 	sub	r3, r3, #48	; 0x30
400115c8:	e3530009 	cmp	r3, #9
400115cc:	8affffbd 	bhi	400114c8 <LtcMidiSystemRealtime::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x38>
400115d0:	e5d1200a 	ldrb	r2, [r1, #10]
400115d4:	e2422030 	sub	r2, r2, #48	; 0x30
400115d8:	e3520009 	cmp	r2, #9
400115dc:	8affffb9 	bhi	400114c8 <LtcMidiSystemRealtime::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x38>
400115e0:	e5d1100b 	ldrb	r1, [r1, #11]
400115e4:	e2411030 	sub	r1, r1, #48	; 0x30
400115e8:	e3510009 	cmp	r1, #9
400115ec:	8affffb5 	bhi	400114c8 <LtcMidiSystemRealtime::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x38>
400115f0:	e3a0e00a 	mov	lr, #10
400115f4:	e3a0c064 	mov	ip, #100	; 0x64
400115f8:	e002029e 	mul	r2, lr, r2
400115fc:	e023239c 	mla	r3, ip, r3, r2
40011600:	e0814003 	add	r4, r1, r3
40011604:	e1a01004 	mov	r1, r4
40011608:	ebffff88 	bl	40011430 <LtcMidiSystemRealtime::SetBPM(unsigned long)>
4001160c:	e3043060 	movw	r3, #16480	; 0x4060
40011610:	e1a01004 	mov	r1, r4
40011614:	e3443003 	movt	r3, #16387	; 0x4003
40011618:	e5930000 	ldr	r0, [r3]
4001161c:	e28dd014 	add	sp, sp, #20
40011620:	e8bd4030 	pop	{r4, r5, lr}
40011624:	ea00033b 	b	40012318 <LtcOutputs::ShowBPM(unsigned long)>
40011628:	e30746ec 	movw	r4, #30444	; 0x76ec
4001162c:	e3444005 	movt	r4, #16389	; 0x4005
40011630:	e5d43007 	ldrb	r3, [r4, #7]
40011634:	e3530000 	cmp	r3, #0
40011638:	0a000020 	beq	400116c0 <LtcMidiSystemRealtime::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x230>
4001163c:	e5d43002 	ldrb	r3, [r4, #2]
40011640:	e3530000 	cmp	r3, #0
40011644:	03a00b22 	moveq	r0, #34816	; 0x8800
40011648:	03e03005 	mvneq	r3, #5
4001164c:	1affff9d 	bne	400114c8 <LtcMidiSystemRealtime::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x38>
40011650:	e34001c2 	movt	r0, #450	; 0x1c2
40011654:	e3a02001 	mov	r2, #1
40011658:	e5cd300f 	strb	r3, [sp, #15]
4001165c:	e28d100f 	add	r1, sp, #15
40011660:	eb005ff8 	bl	40029648 <h3_uart_transmit>
40011664:	eaffff97 	b	400114c8 <LtcMidiSystemRealtime::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x38>
40011668:	e30746ec 	movw	r4, #30444	; 0x76ec
4001166c:	e3444005 	movt	r4, #16389	; 0x4005
40011670:	e5d43007 	ldrb	r3, [r4, #7]
40011674:	e3530000 	cmp	r3, #0
40011678:	0a000037 	beq	4001175c <LtcMidiSystemRealtime::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x2cc>
4001167c:	e5d43002 	ldrb	r3, [r4, #2]
40011680:	e3530000 	cmp	r3, #0
40011684:	1affff8f 	bne	400114c8 <LtcMidiSystemRealtime::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x38>
40011688:	e3a00b22 	mov	r0, #34816	; 0x8800
4001168c:	e3e03003 	mvn	r3, #3
40011690:	eaffffee 	b	40011650 <LtcMidiSystemRealtime::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x1c0>
40011694:	e30746ec 	movw	r4, #30444	; 0x76ec
40011698:	e3444005 	movt	r4, #16389	; 0x4005
4001169c:	e5d43007 	ldrb	r3, [r4, #7]
400116a0:	e3530000 	cmp	r3, #0
400116a4:	0a000053 	beq	400117f8 <LtcMidiSystemRealtime::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x368>
400116a8:	e5d43002 	ldrb	r3, [r4, #2]
400116ac:	e3530000 	cmp	r3, #0
400116b0:	03a00b22 	moveq	r0, #34816	; 0x8800
400116b4:	03e03004 	mvneq	r3, #4
400116b8:	1affff82 	bne	400114c8 <LtcMidiSystemRealtime::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x38>
400116bc:	eaffffe3 	b	40011650 <LtcMidiSystemRealtime::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x1c0>
400116c0:	e304306c 	movw	r3, #16492	; 0x406c
400116c4:	e3e01005 	mvn	r1, #5
400116c8:	e3443003 	movt	r3, #16387	; 0x4003
400116cc:	e5932000 	ldr	r2, [r3]
400116d0:	e59230e4 	ldr	r3, [r2, #228]	; 0xe4
400116d4:	e5c3100d 	strb	r1, [r3, #13]
400116d8:	e1d23eb8 	ldrh	r3, [r2, #232]	; 0xe8
400116dc:	e59210e4 	ldr	r1, [r2, #228]	; 0xe4
400116e0:	e5920004 	ldr	r0, [r2, #4]
400116e4:	e283c001 	add	ip, r3, #1
400116e8:	e6bf3fb3 	rev16	r3, r3
400116ec:	e1c2ceb8 	strh	ip, [r2, #232]	; 0xe8
400116f0:	e1c130b2 	strh	r3, [r1, #2]
400116f4:	e3a03b03 	mov	r3, #3072	; 0xc00
400116f8:	e34031c2 	movt	r3, #450	; 0x1c2
400116fc:	e5933084 	ldr	r3, [r3, #132]	; 0x84
40011700:	e0433000 	sub	r3, r3, r0
40011704:	e3a0000a 	mov	r0, #10
40011708:	e0030390 	mul	r3, r0, r3
4001170c:	e3a00001 	mov	r0, #1
40011710:	e5c1000c 	strb	r0, [r1, #12]
40011714:	e5920044 	ldr	r0, [r2, #68]	; 0x44
40011718:	e6bf3f33 	rev	r3, r3
4001171c:	e5813004 	str	r3, [r1, #4]
40011720:	e3500003 	cmp	r0, #3
40011724:	1affffc4 	bne	4001163c <LtcMidiSystemRealtime::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x1ac>
40011728:	e592000c 	ldr	r0, [r2, #12]
4001172c:	e30a173c 	movw	r1, #42812	; 0xa73c
40011730:	e3441005 	movt	r1, #16389	; 0x4005
40011734:	e5923048 	ldr	r3, [r2, #72]	; 0x48
40011738:	e5911000 	ldr	r1, [r1]
4001173c:	e1d2c4bc 	ldrh	ip, [r2, #76]	; 0x4c
40011740:	e3510000 	cmp	r1, #0
40011744:	0affffbc 	beq	4001163c <LtcMidiSystemRealtime::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x1ac>
40011748:	e59210e4 	ldr	r1, [r2, #228]	; 0xe4
4001174c:	e3a0200e 	mov	r2, #14
40011750:	e58dc000 	str	ip, [sp]
40011754:	eb004307 	bl	40022378 <net::udp_send(long, unsigned char const*, unsigned long, unsigned long, unsigned short)>
40011758:	eaffffb7 	b	4001163c <LtcMidiSystemRealtime::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x1ac>
4001175c:	e304306c 	movw	r3, #16492	; 0x406c
40011760:	e3e01003 	mvn	r1, #3
40011764:	e3443003 	movt	r3, #16387	; 0x4003
40011768:	e5932000 	ldr	r2, [r3]
4001176c:	e59230e4 	ldr	r3, [r2, #228]	; 0xe4
40011770:	e5c3100d 	strb	r1, [r3, #13]
40011774:	e1d23eb8 	ldrh	r3, [r2, #232]	; 0xe8
40011778:	e59210e4 	ldr	r1, [r2, #228]	; 0xe4
4001177c:	e5920004 	ldr	r0, [r2, #4]
40011780:	e283c001 	add	ip, r3, #1
40011784:	e6bf3fb3 	rev16	r3, r3
40011788:	e1c2ceb8 	strh	ip, [r2, #232]	; 0xe8
4001178c:	e1c130b2 	strh	r3, [r1, #2]
40011790:	e3a03b03 	mov	r3, #3072	; 0xc00
40011794:	e34031c2 	movt	r3, #450	; 0x1c2
40011798:	e5933084 	ldr	r3, [r3, #132]	; 0x84
4001179c:	e0433000 	sub	r3, r3, r0
400117a0:	e3a0000a 	mov	r0, #10
400117a4:	e0030390 	mul	r3, r0, r3
400117a8:	e3a00001 	mov	r0, #1
400117ac:	e5c1000c 	strb	r0, [r1, #12]
400117b0:	e5920044 	ldr	r0, [r2, #68]	; 0x44
400117b4:	e6bf3f33 	rev	r3, r3
400117b8:	e5813004 	str	r3, [r1, #4]
400117bc:	e3500003 	cmp	r0, #3
400117c0:	1affffad 	bne	4001167c <LtcMidiSystemRealtime::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x1ec>
400117c4:	e592000c 	ldr	r0, [r2, #12]
400117c8:	e30a173c 	movw	r1, #42812	; 0xa73c
400117cc:	e3441005 	movt	r1, #16389	; 0x4005
400117d0:	e5923048 	ldr	r3, [r2, #72]	; 0x48
400117d4:	e5911000 	ldr	r1, [r1]
400117d8:	e1d2c4bc 	ldrh	ip, [r2, #76]	; 0x4c
400117dc:	e3510000 	cmp	r1, #0
400117e0:	0affffa5 	beq	4001167c <LtcMidiSystemRealtime::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x1ec>
400117e4:	e59210e4 	ldr	r1, [r2, #228]	; 0xe4
400117e8:	e3a0200e 	mov	r2, #14
400117ec:	e58dc000 	str	ip, [sp]
400117f0:	eb0042e0 	bl	40022378 <net::udp_send(long, unsigned char const*, unsigned long, unsigned long, unsigned short)>
400117f4:	eaffffa0 	b	4001167c <LtcMidiSystemRealtime::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x1ec>
400117f8:	e304306c 	movw	r3, #16492	; 0x406c
400117fc:	e3e01004 	mvn	r1, #4
40011800:	e3443003 	movt	r3, #16387	; 0x4003
40011804:	e5932000 	ldr	r2, [r3]
40011808:	e59230e4 	ldr	r3, [r2, #228]	; 0xe4
4001180c:	e5c3100d 	strb	r1, [r3, #13]
40011810:	e1d23eb8 	ldrh	r3, [r2, #232]	; 0xe8
40011814:	e59210e4 	ldr	r1, [r2, #228]	; 0xe4
40011818:	e5920004 	ldr	r0, [r2, #4]
4001181c:	e283c001 	add	ip, r3, #1
40011820:	e6bf3fb3 	rev16	r3, r3
40011824:	e1c2ceb8 	strh	ip, [r2, #232]	; 0xe8
40011828:	e1c130b2 	strh	r3, [r1, #2]
4001182c:	e3a03b03 	mov	r3, #3072	; 0xc00
40011830:	e34031c2 	movt	r3, #450	; 0x1c2
40011834:	e5933084 	ldr	r3, [r3, #132]	; 0x84
40011838:	e0433000 	sub	r3, r3, r0
4001183c:	e3a0000a 	mov	r0, #10
40011840:	e0030390 	mul	r3, r0, r3
40011844:	e3a00001 	mov	r0, #1
40011848:	e5c1000c 	strb	r0, [r1, #12]
4001184c:	e5920044 	ldr	r0, [r2, #68]	; 0x44
40011850:	e6bf3f33 	rev	r3, r3
40011854:	e5813004 	str	r3, [r1, #4]
40011858:	e3500003 	cmp	r0, #3
4001185c:	1affff91 	bne	400116a8 <LtcMidiSystemRealtime::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x218>
40011860:	e592000c 	ldr	r0, [r2, #12]
40011864:	e30a173c 	movw	r1, #42812	; 0xa73c
40011868:	e3441005 	movt	r1, #16389	; 0x4005
4001186c:	e5923048 	ldr	r3, [r2, #72]	; 0x48
40011870:	e5911000 	ldr	r1, [r1]
40011874:	e1d2c4bc 	ldrh	ip, [r2, #76]	; 0x4c
40011878:	e3510000 	cmp	r1, #0
4001187c:	0affff89 	beq	400116a8 <LtcMidiSystemRealtime::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x218>
40011880:	e59210e4 	ldr	r1, [r2, #228]	; 0xe4
40011884:	e3a0200e 	mov	r2, #14
40011888:	e58dc000 	str	ip, [sp]
4001188c:	eb0042b9 	bl	40022378 <net::udp_send(long, unsigned char const*, unsigned long, unsigned long, unsigned short)>
40011890:	eaffff84 	b	400116a8 <LtcMidiSystemRealtime::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x218>
40011894:	400313a1 	andmi	r1, r3, r1, lsr #7
40011898:	40031391 	mulmi	r3, r1, r3
4001189c:	40031389 	andmi	r1, r3, r9, lsl #7
400118a0:	40031399 	mulmi	r3, r9, r3

400118a4 <LtcMidiSystemRealtime::staticCallbackFunctionInput(unsigned char const*, unsigned long, unsigned long, unsigned short)>:
400118a4:	e304c054 	movw	ip, #16468	; 0x4054
400118a8:	e344c003 	movt	ip, #16387	; 0x4003
400118ac:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
400118b0:	e24dd00c 	sub	sp, sp, #12
400118b4:	e1a0e000 	mov	lr, r0
400118b8:	e59c0000 	ldr	r0, [ip]
400118bc:	e1a0c002 	mov	ip, r2
400118c0:	e58d3000 	str	r3, [sp]
400118c4:	e1a02001 	mov	r2, r1
400118c8:	e1a0300c 	mov	r3, ip
400118cc:	e1a0100e 	mov	r1, lr
400118d0:	ebfffeee 	bl	40011490 <LtcMidiSystemRealtime::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)>
400118d4:	e28dd00c 	add	sp, sp, #12
400118d8:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

400118dc <create_quarter_frame(midi::Timecode const*)>:
400118dc:	e3072734 	movw	r2, #30516	; 0x7734
400118e0:	e1a01000 	mov	r1, r0
400118e4:	e3442005 	movt	r2, #16389	; 0x4005
400118e8:	e5923000 	ldr	r3, [r2]
400118ec:	e592c000 	ldr	ip, [r2]
400118f0:	e1a03203 	lsl	r3, r3, #4
400118f4:	e6ef0073 	uxtb	r0, r3
400118f8:	e35c0007 	cmp	ip, #7
400118fc:	979ff10c 	ldrls	pc, [pc, ip, lsl #2]
40011900:	ea00000a 	b	40011930 <create_quarter_frame(midi::Timecode const*)+0x54>
40011904:	40011924 	andmi	r1, r1, r4, lsr #18
40011908:	40011960 	andmi	r1, r1, r0, ror #18
4001190c:	4001196c 	andmi	r1, r1, ip, ror #18
40011910:	40011974 	andmi	r1, r1, r4, ror r9
40011914:	40011980 	andmi	r1, r1, r0, lsl #19
40011918:	40011988 	andmi	r1, r1, r8, lsl #19
4001191c:	40011990 	mulmi	r1, r0, r9
40011920:	40011944 	andmi	r1, r1, r4, asr #18
40011924:	e5d13000 	ldrb	r3, [r1]
40011928:	e203300f 	and	r3, r3, #15
4001192c:	e1800003 	orr	r0, r0, r3
40011930:	e5923000 	ldr	r3, [r2]
40011934:	e2833001 	add	r3, r3, #1
40011938:	e2033007 	and	r3, r3, #7
4001193c:	e5823000 	str	r3, [r2]
40011940:	e12fff1e 	bx	lr
40011944:	e5d13003 	ldrb	r3, [r1, #3]
40011948:	e5d11004 	ldrb	r1, [r1, #4]
4001194c:	e7e03253 	ubfx	r3, r3, #4, #1
40011950:	e1833081 	orr	r3, r3, r1, lsl #1
40011954:	e1830000 	orr	r0, r3, r0
40011958:	e6ef0070 	uxtb	r0, r0
4001195c:	eafffff3 	b	40011930 <create_quarter_frame(midi::Timecode const*)+0x54>
40011960:	e5d13000 	ldrb	r3, [r1]
40011964:	e7e03253 	ubfx	r3, r3, #4, #1
40011968:	eaffffef 	b	4001192c <create_quarter_frame(midi::Timecode const*)+0x50>
4001196c:	e5d13001 	ldrb	r3, [r1, #1]
40011970:	eaffffec 	b	40011928 <create_quarter_frame(midi::Timecode const*)+0x4c>
40011974:	e5d13001 	ldrb	r3, [r1, #1]
40011978:	e7e13253 	ubfx	r3, r3, #4, #2
4001197c:	eaffffea 	b	4001192c <create_quarter_frame(midi::Timecode const*)+0x50>
40011980:	e5d13002 	ldrb	r3, [r1, #2]
40011984:	eaffffe7 	b	40011928 <create_quarter_frame(midi::Timecode const*)+0x4c>
40011988:	e5d13002 	ldrb	r3, [r1, #2]
4001198c:	eafffff9 	b	40011978 <create_quarter_frame(midi::Timecode const*)+0x9c>
40011990:	e5d13003 	ldrb	r3, [r1, #3]
40011994:	eaffffe3 	b	40011928 <create_quarter_frame(midi::Timecode const*)+0x4c>

40011998 <irq_timer1_midi_handler(unsigned long)>:
40011998:	e3073734 	movw	r3, #30516	; 0x7734
4001199c:	e3443005 	movt	r3, #16389	; 0x4005
400119a0:	e5932000 	ldr	r2, [r3]
400119a4:	e3520000 	cmp	r2, #0
400119a8:	012fff1e 	bxeq	lr
400119ac:	e5933000 	ldr	r3, [r3]
400119b0:	e3530004 	cmp	r3, #4
400119b4:	012fff1e 	bxeq	lr
400119b8:	e92d4030 	push	{r4, r5, lr}
400119bc:	e30746ec 	movw	r4, #30444	; 0x76ec
400119c0:	e3444005 	movt	r4, #16389	; 0x4005
400119c4:	e3070770 	movw	r0, #30576	; 0x7770
400119c8:	e3440005 	movt	r0, #16389	; 0x4005
400119cc:	e24dd014 	sub	sp, sp, #20
400119d0:	ebffffc1 	bl	400118dc <create_quarter_frame(midi::Timecode const*)>
400119d4:	e5d43007 	ldrb	r3, [r4, #7]
400119d8:	e1a05000 	mov	r5, r0
400119dc:	e3530000 	cmp	r3, #0
400119e0:	0a000008 	beq	40011a08 <irq_timer1_midi_handler(unsigned long)+0x70>
400119e4:	e5d43002 	ldrb	r3, [r4, #2]
400119e8:	e3530000 	cmp	r3, #0
400119ec:	0a00002d 	beq	40011aa8 <irq_timer1_midi_handler(unsigned long)+0x110>
400119f0:	e3073738 	movw	r3, #30520	; 0x7738
400119f4:	e3a02001 	mov	r2, #1
400119f8:	e3443005 	movt	r3, #16389	; 0x4005
400119fc:	e5c32000 	strb	r2, [r3]
40011a00:	e28dd014 	add	sp, sp, #20
40011a04:	e8bd8030 	pop	{r4, r5, pc}
40011a08:	e304306c 	movw	r3, #16492	; 0x406c
40011a0c:	e3e0100e 	mvn	r1, #14
40011a10:	e3443003 	movt	r3, #16387	; 0x4003
40011a14:	e3a0cb03 	mov	ip, #3072	; 0xc00
40011a18:	e340c1c2 	movt	ip, #450	; 0x1c2
40011a1c:	e5932000 	ldr	r2, [r3]
40011a20:	e59230e4 	ldr	r3, [r2, #228]	; 0xe4
40011a24:	e5c3100d 	strb	r1, [r3, #13]
40011a28:	e5c3000e 	strb	r0, [r3, #14]
40011a2c:	e1d21eb8 	ldrh	r1, [r2, #232]	; 0xe8
40011a30:	e59200e4 	ldr	r0, [r2, #228]	; 0xe4
40011a34:	e59c3084 	ldr	r3, [ip, #132]	; 0x84
40011a38:	e281c001 	add	ip, r1, #1
40011a3c:	e592e004 	ldr	lr, [r2, #4]
40011a40:	e6bf1fb1 	rev16	r1, r1
40011a44:	e1c2ceb8 	strh	ip, [r2, #232]	; 0xe8
40011a48:	e1c010b2 	strh	r1, [r0, #2]
40011a4c:	e3a01002 	mov	r1, #2
40011a50:	e5c0100c 	strb	r1, [r0, #12]
40011a54:	e3a0100a 	mov	r1, #10
40011a58:	e043300e 	sub	r3, r3, lr
40011a5c:	e0030391 	mul	r3, r1, r3
40011a60:	e6bf3f33 	rev	r3, r3
40011a64:	e5803004 	str	r3, [r0, #4]
40011a68:	e5923044 	ldr	r3, [r2, #68]	; 0x44
40011a6c:	e3530003 	cmp	r3, #3
40011a70:	1affffdb 	bne	400119e4 <irq_timer1_midi_handler(unsigned long)+0x4c>
40011a74:	e592000c 	ldr	r0, [r2, #12]
40011a78:	e30a173c 	movw	r1, #42812	; 0xa73c
40011a7c:	e3441005 	movt	r1, #16389	; 0x4005
40011a80:	e5923048 	ldr	r3, [r2, #72]	; 0x48
40011a84:	e5911000 	ldr	r1, [r1]
40011a88:	e1d2c4bc 	ldrh	ip, [r2, #76]	; 0x4c
40011a8c:	e3510000 	cmp	r1, #0
40011a90:	0affffd3 	beq	400119e4 <irq_timer1_midi_handler(unsigned long)+0x4c>
40011a94:	e59210e4 	ldr	r1, [r2, #228]	; 0xe4
40011a98:	e3a0200f 	mov	r2, #15
40011a9c:	e58dc000 	str	ip, [sp]
40011aa0:	eb004234 	bl	40022378 <net::udp_send(long, unsigned char const*, unsigned long, unsigned long, unsigned short)>
40011aa4:	eaffffce 	b	400119e4 <irq_timer1_midi_handler(unsigned long)+0x4c>
40011aa8:	e5cd500d 	strb	r5, [sp, #13]
40011aac:	e3a00b22 	mov	r0, #34816	; 0x8800
40011ab0:	e34001c2 	movt	r0, #450	; 0x1c2
40011ab4:	e3e0300e 	mvn	r3, #14
40011ab8:	e5cd300c 	strb	r3, [sp, #12]
40011abc:	e3a02002 	mov	r2, #2
40011ac0:	e28d100c 	add	r1, sp, #12
40011ac4:	eb005edf 	bl	40029648 <h3_uart_transmit>
40011ac8:	eaffffc8 	b	400119f0 <irq_timer1_midi_handler(unsigned long)+0x58>

40011acc <LtcOutputs::LtcOutputs(ltc::Source, bool)>:
40011acc:	e92d4010 	push	{r4, lr}
40011ad0:	e1a04000 	mov	r4, r0
40011ad4:	e3040060 	movw	r0, #16480	; 0x4060
40011ad8:	e284301e 	add	r3, r4, #30
40011adc:	e5c42000 	strb	r2, [r4]
40011ae0:	e3e02000 	mvn	r2, #0
40011ae4:	e3440003 	movt	r0, #16387	; 0x4003
40011ae8:	e284c027 	add	ip, r4, #39	; 0x27
40011aec:	e5c42002 	strb	r2, [r4, #2]
40011af0:	e3a0203c 	mov	r2, #60	; 0x3c
40011af4:	e5842004 	str	r2, [r4, #4]
40011af8:	e1a02003 	mov	r2, r3
40011afc:	e5804000 	str	r4, [r0]
40011b00:	e3a00000 	mov	r0, #0
40011b04:	e5c40001 	strb	r0, [r4, #1]
40011b08:	e4c20001 	strb	r0, [r2], #1
40011b0c:	e152000c 	cmp	r2, ip
40011b10:	1afffffc 	bne	40011b08 <LtcOutputs::LtcOutputs(ltc::Source, bool)+0x3c>
40011b14:	e30123ac 	movw	r2, #5036	; 0x13ac
40011b18:	e2840023 	add	r0, r4, #35	; 0x23
40011b1c:	e3442003 	movt	r2, #16387	; 0x4003
40011b20:	e3a0c042 	mov	ip, #66	; 0x42
40011b24:	ea000000 	b	40011b2c <LtcOutputs::LtcOutputs(ltc::Source, bool)+0x60>
40011b28:	e5f2c001 	ldrb	ip, [r2, #1]!
40011b2c:	e4c3c001 	strb	ip, [r3], #1
40011b30:	e1530000 	cmp	r3, r0
40011b34:	1afffffb 	bne	40011b28 <LtcOutputs::LtcOutputs(ltc::Source, bool)+0x5c>
40011b38:	e30736ec 	movw	r3, #30444	; 0x76ec
40011b3c:	e3443005 	movt	r3, #16389	; 0x4005
40011b40:	e5d32003 	ldrb	r2, [r3, #3]
40011b44:	e5d3c002 	ldrb	ip, [r3, #2]
40011b48:	e3510001 	cmp	r1, #1
40011b4c:	03822001 	orreq	r2, r2, #1
40011b50:	e5c32003 	strb	r2, [r3, #3]
40011b54:	e5d32007 	ldrb	r2, [r3, #7]
40011b58:	e5d30004 	ldrb	r0, [r3, #4]
40011b5c:	e3510005 	cmp	r1, #5
40011b60:	03822001 	orreq	r2, r2, #1
40011b64:	e5c32007 	strb	r2, [r3, #7]
40011b68:	e5d32005 	ldrb	r2, [r3, #5]
40011b6c:	e3510002 	cmp	r1, #2
40011b70:	038cc001 	orreq	ip, ip, #1
40011b74:	e3510007 	cmp	r1, #7
40011b78:	03822001 	orreq	r2, r2, #1
40011b7c:	e5c32005 	strb	r2, [r3, #5]
40011b80:	e5d32009 	ldrb	r2, [r3, #9]
40011b84:	e3510000 	cmp	r1, #0
40011b88:	03800001 	orreq	r0, r0, #1
40011b8c:	e31100fd 	tst	r1, #253	; 0xfd
40011b90:	e5d31008 	ldrb	r1, [r3, #8]
40011b94:	03822001 	orreq	r2, r2, #1
40011b98:	e5c32009 	strb	r2, [r3, #9]
40011b9c:	e0011002 	and	r1, r1, r2
40011ba0:	e2222001 	eor	r2, r2, #1
40011ba4:	e18cc002 	orr	ip, ip, r2
40011ba8:	e2211001 	eor	r1, r1, #1
40011bac:	e5c3c002 	strb	ip, [r3, #2]
40011bb0:	e5d3c001 	ldrb	ip, [r3, #1]
40011bb4:	e1820000 	orr	r0, r2, r0
40011bb8:	e181100c 	orr	r1, r1, ip
40011bbc:	e5c31001 	strb	r1, [r3, #1]
40011bc0:	e5d31000 	ldrb	r1, [r3]
40011bc4:	e5c30004 	strb	r0, [r3, #4]
40011bc8:	e2840008 	add	r0, r4, #8
40011bcc:	e1822001 	orr	r2, r2, r1
40011bd0:	e5c32000 	strb	r2, [r3]
40011bd4:	ebffeacd 	bl	4000c710 <ltc::init_timecode(char*)>
40011bd8:	e2840013 	add	r0, r4, #19
40011bdc:	ebffead6 	bl	4000c73c <ltc::init_systemtime(char*)>
40011be0:	e1a00004 	mov	r0, r4
40011be4:	e8bd8010 	pop	{r4, pc}

40011be8 <LtcOutputs::Init()>:
40011be8:	e92d4010 	push	{r4, lr}
40011bec:	e30746ec 	movw	r4, #30444	; 0x76ec
40011bf0:	e3444005 	movt	r4, #16389	; 0x4005
40011bf4:	e3a02000 	mov	r2, #0
40011bf8:	e5c02001 	strb	r2, [r0, #1]
40011bfc:	e3073734 	movw	r3, #30516	; 0x7734
40011c00:	e5d41002 	ldrb	r1, [r4, #2]
40011c04:	e3e0c000 	mvn	ip, #0
40011c08:	e3443005 	movt	r3, #16389	; 0x4005
40011c0c:	e1510002 	cmp	r1, r2
40011c10:	e5c0c002 	strb	ip, [r0, #2]
40011c14:	e5832000 	str	r2, [r3]
40011c18:	0a000002 	beq	40011c28 <LtcOutputs::Init()+0x40>
40011c1c:	e5d43007 	ldrb	r3, [r4, #7]
40011c20:	e1530002 	cmp	r3, r2
40011c24:	1a000003 	bne	40011c38 <LtcOutputs::Init()+0x50>
40011c28:	e3011998 	movw	r1, #6552	; 0x1998
40011c2c:	e3a00001 	mov	r0, #1
40011c30:	e3441001 	movt	r1, #16385	; 0x4001
40011c34:	eb006849 	bl	4002bd60 <irq_timer_set(irq_timers, void (*)(unsigned long))>
40011c38:	e5d43000 	ldrb	r3, [r4]
40011c3c:	e3530000 	cmp	r3, #0
40011c40:	18bd8010 	popne	{r4, pc}
40011c44:	e304307c 	movw	r3, #16508	; 0x407c
40011c48:	e3a00004 	mov	r0, #4
40011c4c:	e3443003 	movt	r3, #16387	; 0x4003
40011c50:	e5934000 	ldr	r4, [r3]
40011c54:	ebffea9d 	bl	4000c6d0 <ltc::get_type(ltc::Type)>
40011c58:	e1a02000 	mov	r2, r0
40011c5c:	e5940014 	ldr	r0, [r4, #20]
40011c60:	e3500000 	cmp	r0, #0
40011c64:	08bd8010 	popeq	{r4, pc}
40011c68:	e5901000 	ldr	r1, [r0]
40011c6c:	e3a0300b 	mov	r3, #11
40011c70:	e591e01c 	ldr	lr, [r1, #28]
40011c74:	e3a01002 	mov	r1, #2
40011c78:	e1a0c00e 	mov	ip, lr
40011c7c:	e8bd4010 	pop	{r4, lr}
40011c80:	e12fff1c 	bx	ip
40011c84:	00000000 	andeq	r0, r0, r0

40011c88 <LtcOutputs::Update(ltc::TimeCode const*)>:
40011c88:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40011c8c:	e1a04000 	mov	r4, r0
40011c90:	e5d02002 	ldrb	r2, [r0, #2]
40011c94:	e24dd018 	sub	sp, sp, #24
40011c98:	e5d13004 	ldrb	r3, [r1, #4]
40011c9c:	e1a06001 	mov	r6, r1
40011ca0:	e1520003 	cmp	r2, r3
40011ca4:	030756ec 	movweq	r5, #30444	; 0x76ec
40011ca8:	03445005 	movteq	r5, #16389	; 0x4005
40011cac:	0a000020 	beq	40011d34 <LtcOutputs::Update(ltc::TimeCode const*)+0xac>
40011cb0:	e5c03002 	strb	r3, [r0, #2]
40011cb4:	e3a03b03 	mov	r3, #3072	; 0xc00
40011cb8:	e34031c2 	movt	r3, #450	; 0x1c2
40011cbc:	e3a01000 	mov	r1, #0
40011cc0:	e30756ec 	movw	r5, #30444	; 0x76ec
40011cc4:	e5932020 	ldr	r2, [r3, #32]
40011cc8:	e3445005 	movt	r5, #16389	; 0x4005
40011ccc:	e3c22001 	bic	r2, r2, #1
40011cd0:	e5832020 	str	r2, [r3, #32]
40011cd4:	e3072738 	movw	r2, #30520	; 0x7738
40011cd8:	e3442005 	movt	r2, #16389	; 0x4005
40011cdc:	e5c01001 	strb	r1, [r0, #1]
40011ce0:	e5c21000 	strb	r1, [r2]
40011ce4:	e3072734 	movw	r2, #30516	; 0x7734
40011ce8:	e3442005 	movt	r2, #16389	; 0x4005
40011cec:	e5821000 	str	r1, [r2]
40011cf0:	e5d52007 	ldrb	r2, [r5, #7]
40011cf4:	e1520001 	cmp	r2, r1
40011cf8:	0a000096 	beq	40011f58 <LtcOutputs::Update(ltc::TimeCode const*)+0x2d0>
40011cfc:	e5d53002 	ldrb	r3, [r5, #2]
40011d00:	e3530000 	cmp	r3, #0
40011d04:	0a000074 	beq	40011edc <LtcOutputs::Update(ltc::TimeCode const*)+0x254>
40011d08:	e5d53000 	ldrb	r3, [r5]
40011d0c:	e3530000 	cmp	r3, #0
40011d10:	0a00005f 	beq	40011e94 <LtcOutputs::Update(ltc::TimeCode const*)+0x20c>
40011d14:	e5d53009 	ldrb	r3, [r5, #9]
40011d18:	e3530000 	cmp	r3, #0
40011d1c:	0a000056 	beq	40011e7c <LtcOutputs::Update(ltc::TimeCode const*)+0x1f4>
40011d20:	e5d63004 	ldrb	r3, [r6, #4]
40011d24:	e3530002 	cmp	r3, #2
40011d28:	13a0303a 	movne	r3, #58	; 0x3a
40011d2c:	03a0303b 	moveq	r3, #59	; 0x3b
40011d30:	e5c43010 	strb	r3, [r4, #16]
40011d34:	e5d43001 	ldrb	r3, [r4, #1]
40011d38:	e3530000 	cmp	r3, #0
40011d3c:	0a000028 	beq	40011de4 <LtcOutputs::Update(ltc::TimeCode const*)+0x15c>
40011d40:	e3a03b03 	mov	r3, #3072	; 0xc00
40011d44:	e34031c2 	movt	r3, #450	; 0x1c2
40011d48:	e5932020 	ldr	r2, [r3, #32]
40011d4c:	e3c22001 	bic	r2, r2, #1
40011d50:	e5832020 	str	r2, [r3, #32]
40011d54:	e3012324 	movw	r2, #4900	; 0x1324
40011d58:	e5d61004 	ldrb	r1, [r6, #4]
40011d5c:	e3442003 	movt	r2, #16387	; 0x4003
40011d60:	e7922101 	ldr	r2, [r2, r1, lsl #2]
40011d64:	e1a02122 	lsr	r2, r2, #2
40011d68:	e5832024 	str	r2, [r3, #36]	; 0x24
40011d6c:	f57ff05f 	dmb	sy
40011d70:	e3073734 	movw	r3, #30516	; 0x7734
40011d74:	e3443005 	movt	r3, #16389	; 0x4005
40011d78:	e5932000 	ldr	r2, [r3]
40011d7c:	e3520000 	cmp	r2, #0
40011d80:	0a000003 	beq	40011d94 <LtcOutputs::Update(ltc::TimeCode const*)+0x10c>
40011d84:	e5932000 	ldr	r2, [r3]
40011d88:	e3520004 	cmp	r2, #4
40011d8c:	13a02000 	movne	r2, #0
40011d90:	15832000 	strne	r2, [r3]
40011d94:	e1a00006 	mov	r0, r6
40011d98:	ebfffecf 	bl	400118dc <create_quarter_frame(midi::Timecode const*)>
40011d9c:	e5d53007 	ldrb	r3, [r5, #7]
40011da0:	e1a07000 	mov	r7, r0
40011da4:	e3530000 	cmp	r3, #0
40011da8:	0a0000db 	beq	4001211c <LtcOutputs::Update(ltc::TimeCode const*)+0x494>
40011dac:	e5d53002 	ldrb	r3, [r5, #2]
40011db0:	e3530000 	cmp	r3, #0
40011db4:	0a000100 	beq	400121bc <LtcOutputs::Update(ltc::TimeCode const*)+0x534>
40011db8:	e3a03b03 	mov	r3, #3072	; 0xc00
40011dbc:	e3a00000 	mov	r0, #0
40011dc0:	e34031c2 	movt	r3, #450	; 0x1c2
40011dc4:	e3072738 	movw	r2, #30520	; 0x7738
40011dc8:	e3442005 	movt	r2, #16389	; 0x4005
40011dcc:	e5830028 	str	r0, [r3, #40]	; 0x28
40011dd0:	e5931020 	ldr	r1, [r3, #32]
40011dd4:	e3811003 	orr	r1, r1, #3
40011dd8:	e5831020 	str	r1, [r3, #32]
40011ddc:	e5c20000 	strb	r0, [r2]
40011de0:	f57ff05f 	dmb	sy
40011de4:	e3a03001 	mov	r3, #1
40011de8:	e5c43001 	strb	r3, [r4, #1]
40011dec:	e5d53006 	ldrb	r3, [r5, #6]
40011df0:	e3530000 	cmp	r3, #0
40011df4:	0a0000a0 	beq	4001207c <LtcOutputs::Update(ltc::TimeCode const*)+0x3f4>
40011df8:	e2844008 	add	r4, r4, #8
40011dfc:	e1a00006 	mov	r0, r6
40011e00:	e1a01004 	mov	r1, r4
40011e04:	ebffea56 	bl	4000c764 <ltc::itoa_base10(ltc::TimeCode const*, char*)>
40011e08:	e5d53000 	ldrb	r3, [r5]
40011e0c:	e3530000 	cmp	r3, #0
40011e10:	0a00008c 	beq	40012048 <LtcOutputs::Update(ltc::TimeCode const*)+0x3c0>
40011e14:	e5d53001 	ldrb	r3, [r5, #1]
40011e18:	e3530000 	cmp	r3, #0
40011e1c:	1a000007 	bne	40011e40 <LtcOutputs::Update(ltc::TimeCode const*)+0x1b8>
40011e20:	e3073704 	movw	r3, #30468	; 0x7704
40011e24:	e1a01004 	mov	r1, r4
40011e28:	e3443005 	movt	r3, #16389	; 0x4005
40011e2c:	e5933000 	ldr	r3, [r3]
40011e30:	e5930004 	ldr	r0, [r3, #4]
40011e34:	e5903000 	ldr	r3, [r0]
40011e38:	e593300c 	ldr	r3, [r3, #12]
40011e3c:	e12fff33 	blx	r3
40011e40:	e5d53008 	ldrb	r3, [r5, #8]
40011e44:	e3530000 	cmp	r3, #0
40011e48:	0a000002 	beq	40011e58 <LtcOutputs::Update(ltc::TimeCode const*)+0x1d0>
40011e4c:	e5d53009 	ldrb	r3, [r5, #9]
40011e50:	e3530000 	cmp	r3, #0
40011e54:	1a000006 	bne	40011e74 <LtcOutputs::Update(ltc::TimeCode const*)+0x1ec>
40011e58:	e3043078 	movw	r3, #16504	; 0x4078
40011e5c:	e1a01004 	mov	r1, r4
40011e60:	e3443003 	movt	r3, #16387	; 0x4003
40011e64:	e5930000 	ldr	r0, [r3]
40011e68:	e28dd018 	add	sp, sp, #24
40011e6c:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
40011e70:	ea000a70 	b	40014838 <LtcDisplayRgb::Show(char const*)>
40011e74:	e28dd018 	add	sp, sp, #24
40011e78:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40011e7c:	e5d61004 	ldrb	r1, [r6, #4]
40011e80:	e3043078 	movw	r3, #16504	; 0x4078
40011e84:	e3443003 	movt	r3, #16387	; 0x4003
40011e88:	e5930000 	ldr	r0, [r3]
40011e8c:	eb000b16 	bl	40014aec <LtcDisplayRgb::ShowFPS(ltc::Type)>
40011e90:	eaffffa2 	b	40011d20 <LtcOutputs::Update(ltc::TimeCode const*)+0x98>
40011e94:	e5d60004 	ldrb	r0, [r6, #4]
40011e98:	e304307c 	movw	r3, #16508	; 0x407c
40011e9c:	e3443003 	movt	r3, #16387	; 0x4003
40011ea0:	e5937000 	ldr	r7, [r3]
40011ea4:	ebffea09 	bl	4000c6d0 <ltc::get_type(ltc::Type)>
40011ea8:	e1a02000 	mov	r2, r0
40011eac:	e5970014 	ldr	r0, [r7, #20]
40011eb0:	e3500000 	cmp	r0, #0
40011eb4:	0affff96 	beq	40011d14 <LtcOutputs::Update(ltc::TimeCode const*)+0x8c>
40011eb8:	e5903000 	ldr	r3, [r0]
40011ebc:	e3a01002 	mov	r1, #2
40011ec0:	e593701c 	ldr	r7, [r3, #28]
40011ec4:	e3a0300b 	mov	r3, #11
40011ec8:	e12fff37 	blx	r7
40011ecc:	e5d53009 	ldrb	r3, [r5, #9]
40011ed0:	e3530000 	cmp	r3, #0
40011ed4:	1affff91 	bne	40011d20 <LtcOutputs::Update(ltc::TimeCode const*)+0x98>
40011ed8:	eaffffe7 	b	40011e7c <LtcOutputs::Update(ltc::TimeCode const*)+0x1f4>
40011edc:	e5d63004 	ldrb	r3, [r6, #4]
40011ee0:	e28dc00c 	add	ip, sp, #12
40011ee4:	e5d62003 	ldrb	r2, [r6, #3]
40011ee8:	e1a03283 	lsl	r3, r3, #5
40011eec:	e5d6e000 	ldrb	lr, [r6]
40011ef0:	e202201f 	and	r2, r2, #31
40011ef4:	e5d67001 	ldrb	r7, [r6, #1]
40011ef8:	e2033060 	and	r3, r3, #96	; 0x60
40011efc:	e1833002 	orr	r3, r3, r2
40011f00:	e30124a0 	movw	r2, #5280	; 0x14a0
40011f04:	e3442003 	movt	r2, #16387	; 0x4003
40011f08:	e20ee01f 	and	lr, lr, #31
40011f0c:	e5d68002 	ldrb	r8, [r6, #2]
40011f10:	e207703f 	and	r7, r7, #63	; 0x3f
40011f14:	e8920007 	ldm	r2, {r0, r1, r2}
40011f18:	e208803f 	and	r8, r8, #63	; 0x3f
40011f1c:	e8ac0003 	stmia	ip!, {r0, r1}
40011f20:	e1cc20b0 	strh	r2, [ip]
40011f24:	e3a00b22 	mov	r0, #34816	; 0x8800
40011f28:	e34001c2 	movt	r0, #450	; 0x1c2
40011f2c:	e3a0200a 	mov	r2, #10
40011f30:	e5cd3011 	strb	r3, [sp, #17]
40011f34:	e28d100c 	add	r1, sp, #12
40011f38:	e5cd8012 	strb	r8, [sp, #18]
40011f3c:	e5cd7013 	strb	r7, [sp, #19]
40011f40:	e5cde014 	strb	lr, [sp, #20]
40011f44:	eb005dbf 	bl	40029648 <h3_uart_transmit>
40011f48:	e5d53000 	ldrb	r3, [r5]
40011f4c:	e3530000 	cmp	r3, #0
40011f50:	1affff6f 	bne	40011d14 <LtcOutputs::Update(ltc::TimeCode const*)+0x8c>
40011f54:	eaffffce 	b	40011e94 <LtcOutputs::Update(ltc::TimeCode const*)+0x20c>
40011f58:	e304206c 	movw	r2, #16492	; 0x406c
40011f5c:	e3a0007f 	mov	r0, #127	; 0x7f
40011f60:	e3442003 	movt	r2, #16387	; 0x4003
40011f64:	e5921000 	ldr	r1, [r2]
40011f68:	e59120e4 	ldr	r2, [r1, #228]	; 0xe4
40011f6c:	e5c2000e 	strb	r0, [r2, #14]
40011f70:	e5c2000f 	strb	r0, [r2, #15]
40011f74:	e3a00001 	mov	r0, #1
40011f78:	e5c20010 	strb	r0, [r2, #16]
40011f7c:	e5c20011 	strb	r0, [r2, #17]
40011f80:	e3e0000f 	mvn	r0, #15
40011f84:	e5c2000d 	strb	r0, [r2, #13]
40011f88:	e5d60004 	ldrb	r0, [r6, #4]
40011f8c:	e5d6c003 	ldrb	ip, [r6, #3]
40011f90:	e1a00280 	lsl	r0, r0, #5
40011f94:	e20cc01f 	and	ip, ip, #31
40011f98:	e2000060 	and	r0, r0, #96	; 0x60
40011f9c:	e180000c 	orr	r0, r0, ip
40011fa0:	e5c20012 	strb	r0, [r2, #18]
40011fa4:	e5d60002 	ldrb	r0, [r6, #2]
40011fa8:	e200003f 	and	r0, r0, #63	; 0x3f
40011fac:	e5c20013 	strb	r0, [r2, #19]
40011fb0:	e5d60001 	ldrb	r0, [r6, #1]
40011fb4:	e200003f 	and	r0, r0, #63	; 0x3f
40011fb8:	e5c20014 	strb	r0, [r2, #20]
40011fbc:	e5d60000 	ldrb	r0, [r6]
40011fc0:	e200001f 	and	r0, r0, #31
40011fc4:	e5c20015 	strb	r0, [r2, #21]
40011fc8:	e3e00008 	mvn	r0, #8
40011fcc:	e5c20016 	strb	r0, [r2, #22]
40011fd0:	e5933084 	ldr	r3, [r3, #132]	; 0x84
40011fd4:	e591c004 	ldr	ip, [r1, #4]
40011fd8:	e1d12eb8 	ldrh	r2, [r1, #232]	; 0xe8
40011fdc:	e043300c 	sub	r3, r3, ip
40011fe0:	e3a0c00a 	mov	ip, #10
40011fe4:	e003039c 	mul	r3, ip, r3
40011fe8:	e59100e4 	ldr	r0, [r1, #228]	; 0xe4
40011fec:	e282e001 	add	lr, r2, #1
40011ff0:	e6bf3f33 	rev	r3, r3
40011ff4:	e1c1eeb8 	strh	lr, [r1, #232]	; 0xe8
40011ff8:	e5c0c00c 	strb	ip, [r0, #12]
40011ffc:	e5803004 	str	r3, [r0, #4]
40012000:	e5913044 	ldr	r3, [r1, #68]	; 0x44
40012004:	e6bf2fb2 	rev16	r2, r2
40012008:	e1c020b2 	strh	r2, [r0, #2]
4001200c:	e3530003 	cmp	r3, #3
40012010:	1affff39 	bne	40011cfc <LtcOutputs::Update(ltc::TimeCode const*)+0x74>
40012014:	e591000c 	ldr	r0, [r1, #12]
40012018:	e30a373c 	movw	r3, #42812	; 0xa73c
4001201c:	e3443005 	movt	r3, #16389	; 0x4005
40012020:	e1d1c4bc 	ldrh	ip, [r1, #76]	; 0x4c
40012024:	e5932000 	ldr	r2, [r3]
40012028:	e5913048 	ldr	r3, [r1, #72]	; 0x48
4001202c:	e3520000 	cmp	r2, #0
40012030:	0affff31 	beq	40011cfc <LtcOutputs::Update(ltc::TimeCode const*)+0x74>
40012034:	e59110e4 	ldr	r1, [r1, #228]	; 0xe4
40012038:	e3a02017 	mov	r2, #23
4001203c:	e58dc000 	str	ip, [sp]
40012040:	eb0040cc 	bl	40022378 <net::udp_send(long, unsigned char const*, unsigned long, unsigned long, unsigned short)>
40012044:	eaffff2c 	b	40011cfc <LtcOutputs::Update(ltc::TimeCode const*)+0x74>
40012048:	e304307c 	movw	r3, #16508	; 0x407c
4001204c:	e3443003 	movt	r3, #16387	; 0x4003
40012050:	e5933000 	ldr	r3, [r3]
40012054:	e5930014 	ldr	r0, [r3, #20]
40012058:	e3500000 	cmp	r0, #0
4001205c:	0affff6c 	beq	40011e14 <LtcOutputs::Update(ltc::TimeCode const*)+0x18c>
40012060:	e5902000 	ldr	r2, [r0]
40012064:	e3a0300b 	mov	r3, #11
40012068:	e3a01001 	mov	r1, #1
4001206c:	e592601c 	ldr	r6, [r2, #28]
40012070:	e1a02004 	mov	r2, r4
40012074:	e12fff36 	blx	r6
40012078:	eaffff65 	b	40011e14 <LtcOutputs::Update(ltc::TimeCode const*)+0x18c>
4001207c:	e5d62003 	ldrb	r2, [r6, #3]
40012080:	e3073730 	movw	r3, #30512	; 0x7730
40012084:	e3443005 	movt	r3, #16389	; 0x4005
40012088:	e3a00ee1 	mov	r0, #3600	; 0xe10
4001208c:	e0000290 	mul	r0, r0, r2
40012090:	e5931000 	ldr	r1, [r3]
40012094:	e5d63001 	ldrb	r3, [r6, #1]
40012098:	e5912000 	ldr	r2, [r1]
4001209c:	e5d6e002 	ldrb	lr, [r6, #2]
400120a0:	e5d6c004 	ldrb	ip, [r6, #4]
400120a4:	e0833002 	add	r3, r3, r2
400120a8:	e3a0203c 	mov	r2, #60	; 0x3c
400120ac:	e1020e82 	smlabb	r2, r2, lr, r0
400120b0:	e5d67000 	ldrb	r7, [r6]
400120b4:	e35c0000 	cmp	ip, #0
400120b8:	e0822003 	add	r2, r2, r3
400120bc:	e5812004 	str	r2, [r1, #4]
400120c0:	0a00000d 	beq	400120fc <LtcOutputs::Update(ltc::TimeCode const*)+0x474>
400120c4:	e35c0001 	cmp	ip, #1
400120c8:	0a000044 	beq	400121e0 <LtcOutputs::Update(ltc::TimeCode const*)+0x558>
400120cc:	e24cc002 	sub	ip, ip, #2
400120d0:	e35c0001 	cmp	ip, #1
400120d4:	85913008 	ldrhi	r3, [r1, #8]
400120d8:	9a000044 	bls	400121f0 <LtcOutputs::Update(ltc::TimeCode const*)+0x568>
400120dc:	e6bf2f32 	rev	r2, r2
400120e0:	e6bf3f33 	rev	r3, r3
400120e4:	e1c122f0 	strd	r2, [r1, #32]
400120e8:	e5812030 	str	r2, [r1, #48]	; 0x30
400120ec:	e5812038 	str	r2, [r1, #56]	; 0x38
400120f0:	e5813034 	str	r3, [r1, #52]	; 0x34
400120f4:	e581303c 	str	r3, [r1, #60]	; 0x3c
400120f8:	eaffff3e 	b	40011df8 <LtcOutputs::Update(ltc::TimeCode const*)+0x170>
400120fc:	ee077a90 	vmov	s15, r7
40012100:	eddf0b3e 	vldr	d16, [pc, #248]	; 40012200 <LtcOutputs::Update(ltc::TimeCode const*)+0x578>
40012104:	eeb87be7 	vcvt.f64.s32	d7, s15
40012108:	ee277b20 	vmul.f64	d7, d7, d16
4001210c:	eefc7bc7 	vcvt.u32.f64	s15, d7
40012110:	ee173a90 	vmov	r3, s15
40012114:	edc17a02 	vstr	s15, [r1, #8]
40012118:	eaffffef 	b	400120dc <LtcOutputs::Update(ltc::TimeCode const*)+0x454>
4001211c:	e304306c 	movw	r3, #16492	; 0x406c
40012120:	e3e0000e 	mvn	r0, #14
40012124:	e3443003 	movt	r3, #16387	; 0x4003
40012128:	e5932000 	ldr	r2, [r3]
4001212c:	e3a03b03 	mov	r3, #3072	; 0xc00
40012130:	e34031c2 	movt	r3, #450	; 0x1c2
40012134:	e59210e4 	ldr	r1, [r2, #228]	; 0xe4
40012138:	e5c1000d 	strb	r0, [r1, #13]
4001213c:	e5c1700e 	strb	r7, [r1, #14]
40012140:	e1d21eb8 	ldrh	r1, [r2, #232]	; 0xe8
40012144:	e5933084 	ldr	r3, [r3, #132]	; 0x84
40012148:	e592c004 	ldr	ip, [r2, #4]
4001214c:	e59200e4 	ldr	r0, [r2, #228]	; 0xe4
40012150:	e043300c 	sub	r3, r3, ip
40012154:	e281c001 	add	ip, r1, #1
40012158:	e6bf1fb1 	rev16	r1, r1
4001215c:	e1c2ceb8 	strh	ip, [r2, #232]	; 0xe8
40012160:	e1c010b2 	strh	r1, [r0, #2]
40012164:	e3a01002 	mov	r1, #2
40012168:	e5c0100c 	strb	r1, [r0, #12]
4001216c:	e3a0100a 	mov	r1, #10
40012170:	e0030391 	mul	r3, r1, r3
40012174:	e6bf3f33 	rev	r3, r3
40012178:	e5803004 	str	r3, [r0, #4]
4001217c:	e5923044 	ldr	r3, [r2, #68]	; 0x44
40012180:	e3530003 	cmp	r3, #3
40012184:	1affff08 	bne	40011dac <LtcOutputs::Update(ltc::TimeCode const*)+0x124>
40012188:	e592000c 	ldr	r0, [r2, #12]
4001218c:	e30a373c 	movw	r3, #42812	; 0xa73c
40012190:	e3443005 	movt	r3, #16389	; 0x4005
40012194:	e1d2c4bc 	ldrh	ip, [r2, #76]	; 0x4c
40012198:	e5931000 	ldr	r1, [r3]
4001219c:	e5923048 	ldr	r3, [r2, #72]	; 0x48
400121a0:	e3510000 	cmp	r1, #0
400121a4:	0affff00 	beq	40011dac <LtcOutputs::Update(ltc::TimeCode const*)+0x124>
400121a8:	e59210e4 	ldr	r1, [r2, #228]	; 0xe4
400121ac:	e3a0200f 	mov	r2, #15
400121b0:	e58dc000 	str	ip, [sp]
400121b4:	eb00406f 	bl	40022378 <net::udp_send(long, unsigned char const*, unsigned long, unsigned long, unsigned short)>
400121b8:	eafffefb 	b	40011dac <LtcOutputs::Update(ltc::TimeCode const*)+0x124>
400121bc:	e5cd700d 	strb	r7, [sp, #13]
400121c0:	e3a00b22 	mov	r0, #34816	; 0x8800
400121c4:	e34001c2 	movt	r0, #450	; 0x1c2
400121c8:	e3e0300e 	mvn	r3, #14
400121cc:	e5cd300c 	strb	r3, [sp, #12]
400121d0:	e3a02002 	mov	r2, #2
400121d4:	e28d100c 	add	r1, sp, #12
400121d8:	eb005d1a 	bl	40029648 <h3_uart_transmit>
400121dc:	eafffef5 	b	40011db8 <LtcOutputs::Update(ltc::TimeCode const*)+0x130>
400121e0:	ee077a90 	vmov	s15, r7
400121e4:	eddf0b07 	vldr	d16, [pc, #28]	; 40012208 <LtcOutputs::Update(ltc::TimeCode const*)+0x580>
400121e8:	eeb87be7 	vcvt.f64.s32	d7, s15
400121ec:	eaffffc5 	b	40012108 <LtcOutputs::Update(ltc::TimeCode const*)+0x480>
400121f0:	ee077a90 	vmov	s15, r7
400121f4:	eddf0b05 	vldr	d16, [pc, #20]	; 40012210 <LtcOutputs::Update(ltc::TimeCode const*)+0x588>
400121f8:	eeb87be7 	vcvt.f64.s32	d7, s15
400121fc:	eaffffc1 	b	40012108 <LtcOutputs::Update(ltc::TimeCode const*)+0x480>
40012200:	55400000 	strbpl	r0, [r0, #-0]
40012204:	41a55555 			; <UNDEFINED> instruction: 0x41a55555
40012208:	4799999a 			; <UNDEFINED> instruction: 0x4799999a
4001220c:	41a47ae1 			; <UNDEFINED> instruction: 0x41a47ae1
40012210:	11000000 	mrsne	r0, (UNDEF: 0)
40012214:	41a11111 			; <UNDEFINED> instruction: 0x41a11111

40012218 <LtcOutputs::ShowSysTime()>:
40012218:	e5d03000 	ldrb	r3, [r0]
4001221c:	e3530000 	cmp	r3, #0
40012220:	012fff1e 	bxeq	lr
40012224:	e92d40f0 	push	{r4, r5, r6, r7, lr}
40012228:	e1a04000 	mov	r4, r0
4001222c:	e24dd00c 	sub	sp, sp, #12
40012230:	e3a00000 	mov	r0, #0
40012234:	eb006c27 	bl	4002d2d8 <time>
40012238:	e58d0004 	str	r0, [sp, #4]
4001223c:	e28d0004 	add	r0, sp, #4
40012240:	eb006b5b 	bl	4002cfb4 <localtime>
40012244:	e5903000 	ldr	r3, [r0]
40012248:	e5942004 	ldr	r2, [r4, #4]
4001224c:	e1520003 	cmp	r2, r3
40012250:	1a000001 	bne	4001225c <LtcOutputs::ShowSysTime()+0x44>
40012254:	e28dd00c 	add	sp, sp, #12
40012258:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
4001225c:	e5843004 	str	r3, [r4, #4]
40012260:	e30756ec 	movw	r5, #30444	; 0x76ec
40012264:	e3445005 	movt	r5, #16389	; 0x4005
40012268:	e2846013 	add	r6, r4, #19
4001226c:	e1a01006 	mov	r1, r6
40012270:	ebffe94a 	bl	4000c7a0 <ltc::itoa_base10(tm const*, char*)>
40012274:	e5d53000 	ldrb	r3, [r5]
40012278:	e3530000 	cmp	r3, #0
4001227c:	0a000018 	beq	400122e4 <LtcOutputs::ShowSysTime()+0xcc>
40012280:	e5d53001 	ldrb	r3, [r5, #1]
40012284:	e3530000 	cmp	r3, #0
40012288:	1a000007 	bne	400122ac <LtcOutputs::ShowSysTime()+0x94>
4001228c:	e3073704 	movw	r3, #30468	; 0x7704
40012290:	e1a01006 	mov	r1, r6
40012294:	e3443005 	movt	r3, #16389	; 0x4005
40012298:	e5933000 	ldr	r3, [r3]
4001229c:	e5930004 	ldr	r0, [r3, #4]
400122a0:	e5903000 	ldr	r3, [r0]
400122a4:	e5933010 	ldr	r3, [r3, #16]
400122a8:	e12fff33 	blx	r3
400122ac:	e5d53008 	ldrb	r3, [r5, #8]
400122b0:	e3530000 	cmp	r3, #0
400122b4:	0a000002 	beq	400122c4 <LtcOutputs::ShowSysTime()+0xac>
400122b8:	e5d53009 	ldrb	r3, [r5, #9]
400122bc:	e3530000 	cmp	r3, #0
400122c0:	1a000004 	bne	400122d8 <LtcOutputs::ShowSysTime()+0xc0>
400122c4:	e3043078 	movw	r3, #16504	; 0x4078
400122c8:	e1a01006 	mov	r1, r6
400122cc:	e3443003 	movt	r3, #16387	; 0x4003
400122d0:	e5930000 	ldr	r0, [r3]
400122d4:	eb0009cb 	bl	40014a08 <LtcDisplayRgb::ShowSysTime(char const*)>
400122d8:	e3e03000 	mvn	r3, #0
400122dc:	e5c43002 	strb	r3, [r4, #2]
400122e0:	eaffffdb 	b	40012254 <LtcOutputs::ShowSysTime()+0x3c>
400122e4:	e304307c 	movw	r3, #16508	; 0x407c
400122e8:	e3443003 	movt	r3, #16387	; 0x4003
400122ec:	e5933000 	ldr	r3, [r3]
400122f0:	e5930014 	ldr	r0, [r3, #20]
400122f4:	e3500000 	cmp	r0, #0
400122f8:	0affffe0 	beq	40012280 <LtcOutputs::ShowSysTime()+0x68>
400122fc:	e5903000 	ldr	r3, [r0]
40012300:	e1a02006 	mov	r2, r6
40012304:	e3a01001 	mov	r1, #1
40012308:	e593701c 	ldr	r7, [r3, #28]
4001230c:	e3a0300b 	mov	r3, #11
40012310:	e12fff37 	blx	r7
40012314:	eaffffd9 	b	40012280 <LtcOutputs::ShowSysTime()+0x68>

40012318 <LtcOutputs::ShowBPM(unsigned long)>:
40012318:	e2413008 	sub	r3, r1, #8
4001231c:	e3530f49 	cmp	r3, #292	; 0x124
40012320:	e92d4070 	push	{r4, r5, r6, lr}
40012324:	e1a04000 	mov	r4, r0
40012328:	9a000026 	bls	400123c8 <LtcOutputs::ShowBPM(unsigned long)+0xb0>
4001232c:	e3a0202d 	mov	r2, #45	; 0x2d
40012330:	e3023d2d 	movw	r3, #11565	; 0x2d2d
40012334:	e5c02023 	strb	r2, [r0, #35]	; 0x23
40012338:	e1c032b4 	strh	r3, [r0, #36]	; 0x24
4001233c:	e30756ec 	movw	r5, #30444	; 0x76ec
40012340:	e3445005 	movt	r5, #16389	; 0x4005
40012344:	e5d53000 	ldrb	r3, [r5]
40012348:	e3530000 	cmp	r3, #0
4001234c:	1a000014 	bne	400123a4 <LtcOutputs::ShowBPM(unsigned long)+0x8c>
40012350:	e304607c 	movw	r6, #16508	; 0x407c
40012354:	e3446003 	movt	r6, #16387	; 0x4003
40012358:	e5963000 	ldr	r3, [r6]
4001235c:	e5930014 	ldr	r0, [r3, #20]
40012360:	e3500000 	cmp	r0, #0
40012364:	0a00000e 	beq	400123a4 <LtcOutputs::ShowBPM(unsigned long)+0x8c>
40012368:	e5901004 	ldr	r1, [r0, #4]
4001236c:	e3a02001 	mov	r2, #1
40012370:	e5903000 	ldr	r3, [r0]
40012374:	e2411003 	sub	r1, r1, #3
40012378:	e5933020 	ldr	r3, [r3, #32]
4001237c:	e6ef1071 	uxtb	r1, r1
40012380:	e12fff33 	blx	r3
40012384:	e5963000 	ldr	r3, [r6]
40012388:	e2841023 	add	r1, r4, #35	; 0x23
4001238c:	e5930014 	ldr	r0, [r3, #20]
40012390:	e3500000 	cmp	r0, #0
40012394:	0a000002 	beq	400123a4 <LtcOutputs::ShowBPM(unsigned long)+0x8c>
40012398:	e5903000 	ldr	r3, [r0]
4001239c:	e5933018 	ldr	r3, [r3, #24]
400123a0:	e12fff33 	blx	r3
400123a4:	e5d53009 	ldrb	r3, [r5, #9]
400123a8:	e3530000 	cmp	r3, #0
400123ac:	18bd8070 	popne	{r4, r5, r6, pc}
400123b0:	e3043078 	movw	r3, #16504	; 0x4078
400123b4:	e284101e 	add	r1, r4, #30
400123b8:	e3443003 	movt	r3, #16387	; 0x4003
400123bc:	e8bd4070 	pop	{r4, r5, r6, lr}
400123c0:	e5930000 	ldr	r0, [r3]
400123c4:	ea0009d0 	b	40014b0c <LtcDisplayRgb::ShowInfo(char const*)>
400123c8:	e30c2ccd 	movw	r2, #52429	; 0xcccd
400123cc:	e3a0c00a 	mov	ip, #10
400123d0:	e34c2ccc 	movt	r2, #52428	; 0xcccc
400123d4:	e3510009 	cmp	r1, #9
400123d8:	e0830192 	umull	r0, r3, r2, r1
400123dc:	e1a031a3 	lsr	r3, r3, #3
400123e0:	e060139c 	mls	r0, ip, r3, r1
400123e4:	e2800030 	add	r0, r0, #48	; 0x30
400123e8:	e5c40025 	strb	r0, [r4, #37]	; 0x25
400123ec:	8a000003 	bhi	40012400 <LtcOutputs::ShowBPM(unsigned long)+0xe8>
400123f0:	e3a03020 	mov	r3, #32
400123f4:	e5c43024 	strb	r3, [r4, #36]	; 0x24
400123f8:	e5c43023 	strb	r3, [r4, #35]	; 0x23
400123fc:	eaffffce 	b	4001233c <LtcOutputs::ShowBPM(unsigned long)+0x24>
40012400:	e0820392 	umull	r0, r2, r2, r3
40012404:	e3510063 	cmp	r1, #99	; 0x63
40012408:	e1a021a2 	lsr	r2, r2, #3
4001240c:	e063329c 	mls	r3, ip, r2, r3
40012410:	82822030 	addhi	r2, r2, #48	; 0x30
40012414:	85c42023 	strbhi	r2, [r4, #35]	; 0x23
40012418:	e2833030 	add	r3, r3, #48	; 0x30
4001241c:	e5c43024 	strb	r3, [r4, #36]	; 0x24
40012420:	93a03020 	movls	r3, #32
40012424:	9afffff3 	bls	400123f8 <LtcOutputs::ShowBPM(unsigned long)+0xe0>
40012428:	eaffffc3 	b	4001233c <LtcOutputs::ShowBPM(unsigned long)+0x24>

4001242c <LtcOutputs::Print()>:
4001242c:	e92d4010 	push	{r4, lr}
40012430:	e30746ec 	movw	r4, #30444	; 0x76ec
40012434:	e3444005 	movt	r4, #16389	; 0x4005
40012438:	e5d43004 	ldrb	r3, [r4, #4]
4001243c:	e3530000 	cmp	r3, #0
40012440:	1a00009d 	bne	400126bc <LtcOutputs::Print()+0x290>
40012444:	e5d43003 	ldrb	r3, [r4, #3]
40012448:	e3530000 	cmp	r3, #0
4001244c:	1a000094 	bne	400126a4 <LtcOutputs::Print()+0x278>
40012450:	e5d43007 	ldrb	r3, [r4, #7]
40012454:	e3530000 	cmp	r3, #0
40012458:	1a00008b 	bne	4001268c <LtcOutputs::Print()+0x260>
4001245c:	e5d43002 	ldrb	r3, [r4, #2]
40012460:	e3530000 	cmp	r3, #0
40012464:	1a000082 	bne	40012674 <LtcOutputs::Print()+0x248>
40012468:	e5d43005 	ldrb	r3, [r4, #5]
4001246c:	e3530000 	cmp	r3, #0
40012470:	1a000079 	bne	4001265c <LtcOutputs::Print()+0x230>
40012474:	e5d43006 	ldrb	r3, [r4, #6]
40012478:	e3530000 	cmp	r3, #0
4001247c:	1a000070 	bne	40012644 <LtcOutputs::Print()+0x218>
40012480:	e5d43000 	ldrb	r3, [r4]
40012484:	e3530000 	cmp	r3, #0
40012488:	1a000067 	bne	4001262c <LtcOutputs::Print()+0x200>
4001248c:	e5d43001 	ldrb	r3, [r4, #1]
40012490:	e3530000 	cmp	r3, #0
40012494:	1a00005e 	bne	40012614 <LtcOutputs::Print()+0x1e8>
40012498:	e5d43008 	ldrb	r3, [r4, #8]
4001249c:	e3530000 	cmp	r3, #0
400124a0:	1a000055 	bne	400125fc <LtcOutputs::Print()+0x1d0>
400124a4:	e5d43009 	ldrb	r3, [r4, #9]
400124a8:	e3530000 	cmp	r3, #0
400124ac:	1a00004c 	bne	400125e4 <LtcOutputs::Print()+0x1b8>
400124b0:	e30746f8 	movw	r4, #30456	; 0x76f8
400124b4:	e3010408 	movw	r0, #5128	; 0x1408
400124b8:	e3444005 	movt	r4, #16389	; 0x4005
400124bc:	e3440003 	movt	r0, #16387	; 0x4003
400124c0:	eb0069f4 	bl	4002cc98 <puts>
400124c4:	e5943000 	ldr	r3, [r4]
400124c8:	e3130010 	tst	r3, #16
400124cc:	0a000004 	beq	400124e4 <LtcOutputs::Print()+0xb8>
400124d0:	e59f11fc 	ldr	r1, [pc, #508]	; 400126d4 <LtcOutputs::Print()+0x2a8>
400124d4:	e30103b8 	movw	r0, #5048	; 0x13b8
400124d8:	e3440003 	movt	r0, #16387	; 0x4003
400124dc:	eb0069ab 	bl	4002cb90 <printf>
400124e0:	e5943000 	ldr	r3, [r4]
400124e4:	e3130008 	tst	r3, #8
400124e8:	0a000004 	beq	40012500 <LtcOutputs::Print()+0xd4>
400124ec:	e59f11e4 	ldr	r1, [pc, #484]	; 400126d8 <LtcOutputs::Print()+0x2ac>
400124f0:	e30103b8 	movw	r0, #5048	; 0x13b8
400124f4:	e3440003 	movt	r0, #16387	; 0x4003
400124f8:	eb0069a4 	bl	4002cb90 <printf>
400124fc:	e5943000 	ldr	r3, [r4]
40012500:	e3130080 	tst	r3, #128	; 0x80
40012504:	0a000004 	beq	4001251c <LtcOutputs::Print()+0xf0>
40012508:	e59f11cc 	ldr	r1, [pc, #460]	; 400126dc <LtcOutputs::Print()+0x2b0>
4001250c:	e30103b8 	movw	r0, #5048	; 0x13b8
40012510:	e3440003 	movt	r0, #16387	; 0x4003
40012514:	eb00699d 	bl	4002cb90 <printf>
40012518:	e5943000 	ldr	r3, [r4]
4001251c:	e3130004 	tst	r3, #4
40012520:	0a000004 	beq	40012538 <LtcOutputs::Print()+0x10c>
40012524:	e59f11b4 	ldr	r1, [pc, #436]	; 400126e0 <LtcOutputs::Print()+0x2b4>
40012528:	e30103b8 	movw	r0, #5048	; 0x13b8
4001252c:	e3440003 	movt	r0, #16387	; 0x4003
40012530:	eb006996 	bl	4002cb90 <printf>
40012534:	e5943000 	ldr	r3, [r4]
40012538:	e3130020 	tst	r3, #32
4001253c:	0a000004 	beq	40012554 <LtcOutputs::Print()+0x128>
40012540:	e59f119c 	ldr	r1, [pc, #412]	; 400126e4 <LtcOutputs::Print()+0x2b8>
40012544:	e30103b8 	movw	r0, #5048	; 0x13b8
40012548:	e3440003 	movt	r0, #16387	; 0x4003
4001254c:	eb00698f 	bl	4002cb90 <printf>
40012550:	e5943000 	ldr	r3, [r4]
40012554:	e3130040 	tst	r3, #64	; 0x40
40012558:	0a000004 	beq	40012570 <LtcOutputs::Print()+0x144>
4001255c:	e59f1184 	ldr	r1, [pc, #388]	; 400126e8 <LtcOutputs::Print()+0x2bc>
40012560:	e30103b8 	movw	r0, #5048	; 0x13b8
40012564:	e3440003 	movt	r0, #16387	; 0x4003
40012568:	eb006988 	bl	4002cb90 <printf>
4001256c:	e5943000 	ldr	r3, [r4]
40012570:	e3130001 	tst	r3, #1
40012574:	0a000005 	beq	40012590 <LtcOutputs::Print()+0x164>
40012578:	e3011411 	movw	r1, #5137	; 0x1411
4001257c:	e30103b8 	movw	r0, #5048	; 0x13b8
40012580:	e3441003 	movt	r1, #16387	; 0x4003
40012584:	e3440003 	movt	r0, #16387	; 0x4003
40012588:	eb006980 	bl	4002cb90 <printf>
4001258c:	e5943000 	ldr	r3, [r4]
40012590:	e3130002 	tst	r3, #2
40012594:	0a000004 	beq	400125ac <LtcOutputs::Print()+0x180>
40012598:	e59f114c 	ldr	r1, [pc, #332]	; 400126ec <LtcOutputs::Print()+0x2c0>
4001259c:	e30103b8 	movw	r0, #5048	; 0x13b8
400125a0:	e3440003 	movt	r0, #16387	; 0x4003
400125a4:	eb006979 	bl	4002cb90 <printf>
400125a8:	e5943000 	ldr	r3, [r4]
400125ac:	e3130c01 	tst	r3, #256	; 0x100
400125b0:	0a000004 	beq	400125c8 <LtcOutputs::Print()+0x19c>
400125b4:	e59f1134 	ldr	r1, [pc, #308]	; 400126f0 <LtcOutputs::Print()+0x2c4>
400125b8:	e30103b8 	movw	r0, #5048	; 0x13b8
400125bc:	e3440003 	movt	r0, #16387	; 0x4003
400125c0:	eb006972 	bl	4002cb90 <printf>
400125c4:	e5943000 	ldr	r3, [r4]
400125c8:	e3130c02 	tst	r3, #512	; 0x200
400125cc:	08bd8010 	popeq	{r4, pc}
400125d0:	e59f111c 	ldr	r1, [pc, #284]	; 400126f4 <LtcOutputs::Print()+0x2c8>
400125d4:	e30103b8 	movw	r0, #5048	; 0x13b8
400125d8:	e8bd4010 	pop	{r4, lr}
400125dc:	e3440003 	movt	r0, #16387	; 0x4003
400125e0:	ea00696a 	b	4002cb90 <printf>
400125e4:	e30113fc 	movw	r1, #5116	; 0x13fc
400125e8:	e30103b8 	movw	r0, #5048	; 0x13b8
400125ec:	e3441003 	movt	r1, #16387	; 0x4003
400125f0:	e3440003 	movt	r0, #16387	; 0x4003
400125f4:	eb006965 	bl	4002cb90 <printf>
400125f8:	eaffffac 	b	400124b0 <LtcOutputs::Print()+0x84>
400125fc:	e30113f4 	movw	r1, #5108	; 0x13f4
40012600:	e30103b8 	movw	r0, #5048	; 0x13b8
40012604:	e3441003 	movt	r1, #16387	; 0x4003
40012608:	e3440003 	movt	r0, #16387	; 0x4003
4001260c:	eb00695f 	bl	4002cb90 <printf>
40012610:	eaffffa3 	b	400124a4 <LtcOutputs::Print()+0x78>
40012614:	e30113ec 	movw	r1, #5100	; 0x13ec
40012618:	e30103b8 	movw	r0, #5048	; 0x13b8
4001261c:	e3441003 	movt	r1, #16387	; 0x4003
40012620:	e3440003 	movt	r0, #16387	; 0x4003
40012624:	eb006959 	bl	4002cb90 <printf>
40012628:	eaffff9a 	b	40012498 <LtcOutputs::Print()+0x6c>
4001262c:	e30113e4 	movw	r1, #5092	; 0x13e4
40012630:	e30103b8 	movw	r0, #5048	; 0x13b8
40012634:	e3441003 	movt	r1, #16387	; 0x4003
40012638:	e3440003 	movt	r0, #16387	; 0x4003
4001263c:	eb006953 	bl	4002cb90 <printf>
40012640:	eaffff91 	b	4001248c <LtcOutputs::Print()+0x60>
40012644:	e30d1bf0 	movw	r1, #56304	; 0xdbf0
40012648:	e30103b8 	movw	r0, #5048	; 0x13b8
4001264c:	e3441002 	movt	r1, #16386	; 0x4002
40012650:	e3440003 	movt	r0, #16387	; 0x4003
40012654:	eb00694d 	bl	4002cb90 <printf>
40012658:	eaffff88 	b	40012480 <LtcOutputs::Print()+0x54>
4001265c:	e30113e0 	movw	r1, #5088	; 0x13e0
40012660:	e30103b8 	movw	r0, #5048	; 0x13b8
40012664:	e3441003 	movt	r1, #16387	; 0x4003
40012668:	e3440003 	movt	r0, #16387	; 0x4003
4001266c:	eb006947 	bl	4002cb90 <printf>
40012670:	eaffff7f 	b	40012474 <LtcOutputs::Print()+0x48>
40012674:	e30113d8 	movw	r1, #5080	; 0x13d8
40012678:	e30103b8 	movw	r0, #5048	; 0x13b8
4001267c:	e3441003 	movt	r1, #16387	; 0x4003
40012680:	e3440003 	movt	r0, #16387	; 0x4003
40012684:	eb006941 	bl	4002cb90 <printf>
40012688:	eaffff76 	b	40012468 <LtcOutputs::Print()+0x3c>
4001268c:	e30d1b90 	movw	r1, #56208	; 0xdb90
40012690:	e30103b8 	movw	r0, #5048	; 0x13b8
40012694:	e3441002 	movt	r1, #16386	; 0x4002
40012698:	e3440003 	movt	r0, #16387	; 0x4003
4001269c:	eb00693b 	bl	4002cb90 <printf>
400126a0:	eaffff6d 	b	4001245c <LtcOutputs::Print()+0x30>
400126a4:	e30113d0 	movw	r1, #5072	; 0x13d0
400126a8:	e30103b8 	movw	r0, #5048	; 0x13b8
400126ac:	e3441003 	movt	r1, #16387	; 0x4003
400126b0:	e3440003 	movt	r0, #16387	; 0x4003
400126b4:	eb006935 	bl	4002cb90 <printf>
400126b8:	eaffff64 	b	40012450 <LtcOutputs::Print()+0x24>
400126bc:	e30113b4 	movw	r1, #5044	; 0x13b4
400126c0:	e30103b8 	movw	r0, #5048	; 0x13b8
400126c4:	e3441003 	movt	r1, #16387	; 0x4003
400126c8:	e3440003 	movt	r0, #16387	; 0x4003
400126cc:	eb00692f 	bl	4002cb90 <printf>
400126d0:	eaffff5b 	b	40012444 <LtcOutputs::Print()+0x18>
400126d4:	40031449 	andmi	r1, r3, r9, asr #8
400126d8:	4003143b 	andmi	r1, r3, fp, lsr r4
400126dc:	40031473 	andmi	r1, r3, r3, ror r4
400126e0:	4003142d 	andmi	r1, r3, sp, lsr #8
400126e4:	40031457 	andmi	r1, r3, r7, asr r4
400126e8:	40031465 	andmi	r1, r3, r5, ror #8
400126ec:	4003141f 	andmi	r1, r3, pc, lsl r4
400126f0:	40031481 	andmi	r1, r3, r1, lsl #9
400126f4:	4003148f 	andmi	r1, r3, pc, lsl #9

400126f8 <arm_timer_handler()>:
400126f8:	e307277c 	movw	r2, #30588	; 0x777c
400126fc:	e3073784 	movw	r3, #30596	; 0x7784
40012700:	e3442005 	movt	r2, #16389	; 0x4005
40012704:	e3071780 	movw	r1, #30592	; 0x7780
40012708:	e3443005 	movt	r3, #16389	; 0x4005
4001270c:	e5920000 	ldr	r0, [r2]
40012710:	e593c000 	ldr	ip, [r3]
40012714:	e3441005 	movt	r1, #16389	; 0x4005
40012718:	e040000c 	sub	r0, r0, ip
4001271c:	e5810000 	str	r0, [r1]
40012720:	e5922000 	ldr	r2, [r2]
40012724:	e5832000 	str	r2, [r3]
40012728:	e12fff1e 	bx	lr

4001272c <fiq_handler()>:
4001272c:	e24ee004 	sub	lr, lr, #4
40012730:	e92d401f 	push	{r0, r1, r2, r3, r4, lr}
40012734:	f57ff05f 	dmb	sy
40012738:	e3a03000 	mov	r3, #0
4001273c:	e308151f 	movw	r1, #34079	; 0x851f
40012740:	e34031c6 	movt	r3, #454	; 0x1c6
40012744:	e3a00c0a 	mov	r0, #2560	; 0xa00
40012748:	e34511eb 	movt	r1, #20971	; 0x51eb
4001274c:	e3e0c000 	mvn	ip, #0
40012750:	e593201c 	ldr	r2, [r3, #28]
40012754:	e3073754 	movw	r3, #30548	; 0x7754
40012758:	e3443005 	movt	r3, #16389	; 0x4005
4001275c:	e0821291 	umull	r1, r2, r1, r2
40012760:	e34001c2 	movt	r0, #450	; 0x1c2
40012764:	e3071760 	movw	r1, #30560	; 0x7760
40012768:	e3441005 	movt	r1, #16389	; 0x4005
4001276c:	e1e022a2 	mvn	r2, r2, lsr #5
40012770:	e5832000 	str	r2, [r3]
40012774:	e580c014 	str	ip, [r0, #20]
40012778:	e5910000 	ldr	r0, [r1]
4001277c:	e5932000 	ldr	r2, [r3]
40012780:	e1500002 	cmp	r0, r2
40012784:	3a000018 	bcc	400127ec <fiq_handler()+0xc0>
40012788:	e591c000 	ldr	ip, [r1]
4001278c:	e3072744 	movw	r2, #30532	; 0x7744
40012790:	e5930000 	ldr	r0, [r3]
40012794:	e3442005 	movt	r2, #16389	; 0x4005
40012798:	e04cc000 	sub	ip, ip, r0
4001279c:	e3050c28 	movw	r0, #23592	; 0x5c28
400127a0:	e582c000 	str	ip, [r2]
400127a4:	e340028f 	movt	r0, #655	; 0x28f
400127a8:	e592c000 	ldr	ip, [r2]
400127ac:	e040000c 	sub	r0, r0, ip
400127b0:	e5820000 	str	r0, [r2]
400127b4:	e5933000 	ldr	r3, [r3]
400127b8:	e5813000 	str	r3, [r1]
400127bc:	e5923000 	ldr	r3, [r2]
400127c0:	e3530095 	cmp	r3, #149	; 0x95
400127c4:	9a000002 	bls	400127d4 <fiq_handler()+0xa8>
400127c8:	e5923000 	ldr	r3, [r2]
400127cc:	e3530f96 	cmp	r3, #600	; 0x258
400127d0:	9a00000a 	bls	40012800 <fiq_handler()+0xd4>
400127d4:	e3073758 	movw	r3, #30552	; 0x7758
400127d8:	e3a02000 	mov	r2, #0
400127dc:	e3443005 	movt	r3, #16389	; 0x4005
400127e0:	e5832000 	str	r2, [r3]
400127e4:	f57ff05f 	dmb	sy
400127e8:	e8fd801f 	ldm	sp!, {r0, r1, r2, r3, r4, pc}^
400127ec:	e5930000 	ldr	r0, [r3]
400127f0:	e3072744 	movw	r2, #30532	; 0x7744
400127f4:	e591c000 	ldr	ip, [r1]
400127f8:	e3442005 	movt	r2, #16389	; 0x4005
400127fc:	eaffffea 	b	400127ac <fiq_handler()+0x80>
40012800:	e3073750 	movw	r3, #30544	; 0x7750
40012804:	e3443005 	movt	r3, #16389	; 0x4005
40012808:	e5d31000 	ldrb	r1, [r3]
4001280c:	e21110ff 	ands	r1, r1, #255	; 0xff
40012810:	0a000041 	beq	4001291c <fiq_handler()+0x1f0>
40012814:	e3070758 	movw	r0, #30552	; 0x7758
40012818:	e3a02000 	mov	r2, #0
4001281c:	e3440005 	movt	r0, #16389	; 0x4005
40012820:	e5c32000 	strb	r2, [r3]
40012824:	e5903000 	ldr	r3, [r0]
40012828:	e3530050 	cmp	r3, #80	; 0x50
4001282c:	0a000065 	beq	400129c8 <fiq_handler()+0x29c>
40012830:	e307275c 	movw	r2, #30556	; 0x775c
40012834:	e3442005 	movt	r2, #16389	; 0x4005
40012838:	e5d23000 	ldrb	r3, [r2]
4001283c:	e3530000 	cmp	r3, #0
40012840:	0affffe7 	beq	400127e4 <fiq_handler()+0xb8>
40012844:	e307177c 	movw	r1, #30588	; 0x777c
40012848:	e3073748 	movw	r3, #30536	; 0x7748
4001284c:	e3441005 	movt	r1, #16389	; 0x4005
40012850:	e3a0c000 	mov	ip, #0
40012854:	e3443005 	movt	r3, #16389	; 0x4005
40012858:	e5910000 	ldr	r0, [r1]
4001285c:	e2800001 	add	r0, r0, #1
40012860:	e5810000 	str	r0, [r1]
40012864:	e5c2c000 	strb	ip, [r2]
40012868:	e30326c4 	movw	r2, #14020	; 0x36c4
4001286c:	e5d31001 	ldrb	r1, [r3, #1]
40012870:	e5d30000 	ldrb	r0, [r3]
40012874:	e3442003 	movt	r2, #16387	; 0x4003
40012878:	e2011003 	and	r1, r1, #3
4001287c:	e200000f 	and	r0, r0, #15
40012880:	e1a0c101 	lsl	ip, r1, #2
40012884:	e081100c 	add	r1, r1, ip
40012888:	e0801081 	add	r1, r0, r1, lsl #1
4001288c:	e5c21000 	strb	r1, [r2]
40012890:	e5d31003 	ldrb	r1, [r3, #3]
40012894:	e5d30002 	ldrb	r0, [r3, #2]
40012898:	e2011007 	and	r1, r1, #7
4001289c:	e200000f 	and	r0, r0, #15
400128a0:	e1a0c101 	lsl	ip, r1, #2
400128a4:	e081100c 	add	r1, r1, ip
400128a8:	e0801081 	add	r1, r0, r1, lsl #1
400128ac:	e5c21001 	strb	r1, [r2, #1]
400128b0:	e5d31005 	ldrb	r1, [r3, #5]
400128b4:	e5d30004 	ldrb	r0, [r3, #4]
400128b8:	e2011007 	and	r1, r1, #7
400128bc:	e200000f 	and	r0, r0, #15
400128c0:	e1a0c101 	lsl	ip, r1, #2
400128c4:	e081100c 	add	r1, r1, ip
400128c8:	e0801081 	add	r1, r0, r1, lsl #1
400128cc:	e5c21002 	strb	r1, [r2, #2]
400128d0:	e5d31007 	ldrb	r1, [r3, #7]
400128d4:	e5d30006 	ldrb	r0, [r3, #6]
400128d8:	e2011003 	and	r1, r1, #3
400128dc:	e200000f 	and	r0, r0, #15
400128e0:	e1a0c101 	lsl	ip, r1, #2
400128e4:	e081100c 	add	r1, r1, ip
400128e8:	e307c765 	movw	ip, #30565	; 0x7765
400128ec:	e344c005 	movt	ip, #16389	; 0x4005
400128f0:	e0801081 	add	r1, r0, r1, lsl #1
400128f4:	e5c21003 	strb	r1, [r2, #3]
400128f8:	e3072764 	movw	r2, #30564	; 0x7764
400128fc:	e5d33001 	ldrb	r3, [r3, #1]
40012900:	e3a01001 	mov	r1, #1
40012904:	e3442005 	movt	r2, #16389	; 0x4005
40012908:	e7e03153 	ubfx	r3, r3, #2, #1
4001290c:	e5cc3000 	strb	r3, [ip]
40012910:	e5c21000 	strb	r1, [r2]
40012914:	f57ff05f 	dmb	sy
40012918:	e8fd801f 	ldm	sp!, {r0, r1, r2, r3, r4, pc}^
4001291c:	e5922000 	ldr	r2, [r2]
40012920:	e307e740 	movw	lr, #30528	; 0x7740
40012924:	e3520f5f 	cmp	r2, #380	; 0x17c
40012928:	9a000033 	bls	400129fc <fiq_handler()+0x2d0>
4001292c:	e344e005 	movt	lr, #16389	; 0x4005
40012930:	e307373c 	movw	r3, #30524	; 0x773c
40012934:	e3443005 	movt	r3, #16389	; 0x4005
40012938:	e3070758 	movw	r0, #30552	; 0x7758
4001293c:	e3440005 	movt	r0, #16389	; 0x4005
40012940:	e58e1000 	str	r1, [lr]
40012944:	e5831000 	str	r1, [r3]
40012948:	e5903000 	ldr	r3, [r0]
4001294c:	e353003f 	cmp	r3, #63	; 0x3f
40012950:	8a000018 	bhi	400129b8 <fiq_handler()+0x28c>
40012954:	e3072748 	movw	r2, #30536	; 0x7748
40012958:	e3a03001 	mov	r3, #1
4001295c:	e3442005 	movt	r2, #16389	; 0x4005
40012960:	e3e0407f 	mvn	r4, #127	; 0x7f
40012964:	e5d21000 	ldrb	r1, [r2]
40012968:	e1a01331 	lsr	r1, r1, r3
4001296c:	e5c21000 	strb	r1, [r2]
40012970:	e7d21003 	ldrb	r1, [r2, r3]
40012974:	e243c001 	sub	ip, r3, #1
40012978:	e3110001 	tst	r1, #1
4001297c:	17d2100c 	ldrbne	r1, [r2, ip]
40012980:	11811004 	orrne	r1, r1, r4
40012984:	16ef1071 	uxtbne	r1, r1
40012988:	17c2100c 	strbne	r1, [r2, ip]
4001298c:	e7d21003 	ldrb	r1, [r2, r3]
40012990:	e1a010a1 	lsr	r1, r1, #1
40012994:	e7c21003 	strb	r1, [r2, r3]
40012998:	e2833001 	add	r3, r3, #1
4001299c:	e3530008 	cmp	r3, #8
400129a0:	1afffff2 	bne	40012970 <fiq_handler()+0x244>
400129a4:	e59e3000 	ldr	r3, [lr]
400129a8:	e3530001 	cmp	r3, #1
400129ac:	05d23007 	ldrbeq	r3, [r2, #7]
400129b0:	03833080 	orreq	r3, r3, #128	; 0x80
400129b4:	05c23007 	strbeq	r3, [r2, #7]
400129b8:	e5903000 	ldr	r3, [r0]
400129bc:	e2833001 	add	r3, r3, #1
400129c0:	e5803000 	str	r3, [r0]
400129c4:	eaffff96 	b	40012824 <fiq_handler()+0xf8>
400129c8:	e3073751 	movw	r3, #30545	; 0x7751
400129cc:	e3a02000 	mov	r2, #0
400129d0:	e3443005 	movt	r3, #16389	; 0x4005
400129d4:	e5802000 	str	r2, [r0]
400129d8:	e5d31000 	ldrb	r1, [r3]
400129dc:	e1510002 	cmp	r1, r2
400129e0:	0affff92 	beq	40012830 <fiq_handler()+0x104>
400129e4:	e5c32000 	strb	r2, [r3]
400129e8:	e307275c 	movw	r2, #30556	; 0x775c
400129ec:	e3442005 	movt	r2, #16389	; 0x4005
400129f0:	e3a03001 	mov	r3, #1
400129f4:	e5c23000 	strb	r3, [r2]
400129f8:	eaffff8e 	b	40012838 <fiq_handler()+0x10c>
400129fc:	e344e005 	movt	lr, #16389	; 0x4005
40012a00:	e307273c 	movw	r2, #30524	; 0x773c
40012a04:	e3442005 	movt	r2, #16389	; 0x4005
40012a08:	e3a0c001 	mov	ip, #1
40012a0c:	e58ec000 	str	ip, [lr]
40012a10:	e5c3c000 	strb	ip, [r3]
40012a14:	e5923000 	ldr	r3, [r2]
40012a18:	e083300c 	add	r3, r3, ip
40012a1c:	e5823000 	str	r3, [r2]
40012a20:	e5923000 	ldr	r3, [r2]
40012a24:	e353000c 	cmp	r3, #12
40012a28:	05821000 	streq	r1, [r2]
40012a2c:	03073751 	movweq	r3, #30545	; 0x7751
40012a30:	03443005 	movteq	r3, #16389	; 0x4005
40012a34:	03070758 	movweq	r0, #30552	; 0x7758
40012a38:	03440005 	movteq	r0, #16389	; 0x4005
40012a3c:	13070758 	movwne	r0, #30552	; 0x7758
40012a40:	05c3c000 	strbeq	ip, [r3]
40012a44:	03a0204d 	moveq	r2, #77	; 0x4d
40012a48:	13440005 	movtne	r0, #16389	; 0x4005
40012a4c:	05802000 	streq	r2, [r0]
40012a50:	eaffffbc 	b	40012948 <fiq_handler()+0x21c>

40012a54 <Hardware::Get()>:
40012a54:	e3043088 	movw	r3, #16520	; 0x4088
40012a58:	e3443003 	movt	r3, #16387	; 0x4003
40012a5c:	e5930000 	ldr	r0, [r3]
40012a60:	e12fff1e 	bx	lr

40012a64 <LtcReader::Start()>:
40012a64:	e3073764 	movw	r3, #30564	; 0x7764
40012a68:	e30206f8 	movw	r0, #9976	; 0x26f8
40012a6c:	e3443005 	movt	r3, #16389	; 0x4005
40012a70:	e3a02000 	mov	r2, #0
40012a74:	e92d4010 	push	{r4, lr}
40012a78:	e3440001 	movt	r0, #16385	; 0x4001
40012a7c:	e5c32000 	strb	r2, [r3]
40012a80:	eb0064f0 	bl	4002be48 <irq_timer_arm_physical_set(void (*)())>
40012a84:	ebffb9ac 	bl	4000113c <irq_handler_init()>
40012a88:	e3a01006 	mov	r1, #6
40012a8c:	e3a0000a 	mov	r0, #10
40012a90:	eb005a39 	bl	4002937c <h3_gpio_fsel>
40012a94:	e302072c 	movw	r0, #10028	; 0x272c
40012a98:	e3a0101c 	mov	r1, #28
40012a9c:	e3440001 	movt	r0, #16385	; 0x4001
40012aa0:	eb005b0f 	bl	400296e4 <arm_install_handler>
40012aa4:	e3a01001 	mov	r1, #1
40012aa8:	e3a0002b 	mov	r0, #43	; 0x2b
40012aac:	eb006564 	bl	4002c044 <gic_fiq_config(T_H3_IRQn, GIC_CORE_TypeDef)>
40012ab0:	e3a03c0a 	mov	r3, #2560	; 0xa00
40012ab4:	e3a01b01 	mov	r1, #1024	; 0x400
40012ab8:	e34031c2 	movt	r3, #450	; 0x1c2
40012abc:	e3a00001 	mov	r0, #1
40012ac0:	e5831004 	str	r1, [r3, #4]
40012ac4:	e5932010 	ldr	r2, [r3, #16]
40012ac8:	e1822001 	orr	r2, r2, r1
40012acc:	e5832010 	str	r2, [r3, #16]
40012ad0:	e5831014 	str	r1, [r3, #20]
40012ad4:	e5830018 	str	r0, [r3, #24]
40012ad8:	f1080040 	cpsie	f
40012adc:	e3043060 	movw	r3, #16480	; 0x4060
40012ae0:	e3443003 	movt	r3, #16387	; 0x4003
40012ae4:	e5930000 	ldr	r0, [r3]
40012ae8:	ebfffc3e 	bl	40011be8 <LtcOutputs::Init()>
40012aec:	e3043088 	movw	r3, #16520	; 0x4088
40012af0:	e3a01002 	mov	r1, #2
40012af4:	e3443003 	movt	r3, #16387	; 0x4003
40012af8:	e8bd4010 	pop	{r4, lr}
40012afc:	e5930000 	ldr	r0, [r3]
40012b00:	ea004cff 	b	40025f04 <Hardware::SetMode(hardware::ledblink::Mode)>

40012b04 <LtcReader::Run()>:
40012b04:	e92d4070 	push	{r4, r5, r6, lr}
40012b08:	f57ff05f 	dmb	sy
40012b0c:	e3073764 	movw	r3, #30564	; 0x7764
40012b10:	e3443005 	movt	r3, #16389	; 0x4005
40012b14:	e5d32000 	ldrb	r2, [r3]
40012b18:	e3520000 	cmp	r2, #0
40012b1c:	03074780 	movweq	r4, #30592	; 0x7780
40012b20:	03444005 	movteq	r4, #16389	; 0x4005
40012b24:	0a000026 	beq	40012bc4 <LtcReader::Run()+0xc0>
40012b28:	f57ff05f 	dmb	sy
40012b2c:	e3a02000 	mov	r2, #0
40012b30:	e5c32000 	strb	r2, [r3]
40012b34:	f57ff05f 	dmb	sy
40012b38:	e3073765 	movw	r3, #30565	; 0x7765
40012b3c:	e3074780 	movw	r4, #30592	; 0x7780
40012b40:	e3443005 	movt	r3, #16389	; 0x4005
40012b44:	e5d33000 	ldrb	r3, [r3]
40012b48:	e21320ff 	ands	r2, r3, #255	; 0xff
40012b4c:	0a000027 	beq	40012bf0 <LtcReader::Run()+0xec>
40012b50:	e3444005 	movt	r4, #16389	; 0x4005
40012b54:	e3a02002 	mov	r2, #2
40012b58:	e30336c4 	movw	r3, #14020	; 0x36c4
40012b5c:	e3075770 	movw	r5, #30576	; 0x7770
40012b60:	e3443003 	movt	r3, #16387	; 0x4003
40012b64:	e30766ec 	movw	r6, #30444	; 0x76ec
40012b68:	e3445005 	movt	r5, #16389	; 0x4005
40012b6c:	e5c32004 	strb	r2, [r3, #4]
40012b70:	e5d32000 	ldrb	r2, [r3]
40012b74:	e3446005 	movt	r6, #16389	; 0x4005
40012b78:	e5c52000 	strb	r2, [r5]
40012b7c:	e5d32001 	ldrb	r2, [r3, #1]
40012b80:	e5c52001 	strb	r2, [r5, #1]
40012b84:	e5d32002 	ldrb	r2, [r3, #2]
40012b88:	e5d31003 	ldrb	r1, [r3, #3]
40012b8c:	e5c52002 	strb	r2, [r5, #2]
40012b90:	e5d32004 	ldrb	r2, [r3, #4]
40012b94:	e5d63003 	ldrb	r3, [r6, #3]
40012b98:	e5c51003 	strb	r1, [r5, #3]
40012b9c:	e5c52004 	strb	r2, [r5, #4]
40012ba0:	e3530000 	cmp	r3, #0
40012ba4:	0a000026 	beq	40012c44 <LtcReader::Run()+0x140>
40012ba8:	e5d63005 	ldrb	r3, [r6, #5]
40012bac:	e3530000 	cmp	r3, #0
40012bb0:	0a00001e 	beq	40012c30 <LtcReader::Run()+0x12c>
40012bb4:	ebfff5a8 	bl	4001025c <LtcOutputs::Get()>
40012bb8:	e3071770 	movw	r1, #30576	; 0x7770
40012bbc:	e3441005 	movt	r1, #16389	; 0x4005
40012bc0:	ebfffc30 	bl	40011c88 <LtcOutputs::Update(ltc::TimeCode const*)>
40012bc4:	f57ff05f 	dmb	sy
40012bc8:	e5943000 	ldr	r3, [r4]
40012bcc:	e3530017 	cmp	r3, #23
40012bd0:	9a000002 	bls	40012be0 <LtcReader::Run()+0xdc>
40012bd4:	e5943000 	ldr	r3, [r4]
40012bd8:	e353001e 	cmp	r3, #30
40012bdc:	9a00000f 	bls	40012c20 <LtcReader::Run()+0x11c>
40012be0:	ebffff9b 	bl	40012a54 <Hardware::Get()>
40012be4:	e8bd4070 	pop	{r4, r5, r6, lr}
40012be8:	e3a01002 	mov	r1, #2
40012bec:	ea004cc4 	b	40025f04 <Hardware::SetMode(hardware::ledblink::Mode)>
40012bf0:	e3444005 	movt	r4, #16389	; 0x4005
40012bf4:	e5943000 	ldr	r3, [r4]
40012bf8:	e3530018 	cmp	r3, #24
40012bfc:	9affffd5 	bls	40012b58 <LtcReader::Run()+0x54>
40012c00:	e5943000 	ldr	r3, [r4]
40012c04:	e353001a 	cmp	r3, #26
40012c08:	9a000011 	bls	40012c54 <LtcReader::Run()+0x150>
40012c0c:	e5943000 	ldr	r3, [r4]
40012c10:	e353001b 	cmp	r3, #27
40012c14:	83a02003 	movhi	r2, #3
40012c18:	8affffce 	bhi	40012b58 <LtcReader::Run()+0x54>
40012c1c:	e8bd8070 	pop	{r4, r5, r6, pc}
40012c20:	ebffff8b 	bl	40012a54 <Hardware::Get()>
40012c24:	e8bd4070 	pop	{r4, r5, r6, lr}
40012c28:	e3a01003 	mov	r1, #3
40012c2c:	ea004cb4 	b	40025f04 <Hardware::SetMode(hardware::ledblink::Mode)>
40012c30:	ebfff581 	bl	4001023c <LtcEtc::Get()>
40012c34:	e30316c4 	movw	r1, #14020	; 0x36c4
40012c38:	e3441003 	movt	r1, #16387	; 0x4003
40012c3c:	ebffebf4 	bl	4000dc14 <LtcEtc::Send(midi::Timecode const*)>
40012c40:	eaffffdb 	b	40012bb4 <LtcReader::Run()+0xb0>
40012c44:	ebfff578 	bl	4001022c <ArtNetNode::Get()>
40012c48:	e1a01005 	mov	r1, r5
40012c4c:	ebfff55d 	bl	400101c8 <ArtNetNode::SendTimeCode(artnet::TimeCode const*)>
40012c50:	eaffffd4 	b	40012ba8 <LtcReader::Run()+0xa4>
40012c54:	e3a02001 	mov	r2, #1
40012c58:	eaffffbe 	b	40012b58 <LtcReader::Run()+0x54>

40012c5c <irq_timer1_handler()>:
40012c5c:	e3072775 	movw	r2, #30581	; 0x7775
40012c60:	e3073778 	movw	r3, #30584	; 0x7778
40012c64:	e3443005 	movt	r3, #16389	; 0x4005
40012c68:	e3a01001 	mov	r1, #1
40012c6c:	e3442005 	movt	r2, #16389	; 0x4005
40012c70:	e5c21000 	strb	r1, [r2]
40012c74:	e5932000 	ldr	r2, [r3]
40012c78:	e0822001 	add	r2, r2, r1
40012c7c:	e5832000 	str	r2, [r3]
40012c80:	e12fff1e 	bx	lr

40012c84 <Midi::GetMessageType() const [clone .isra.0]>:
40012c84:	e12fff1e 	bx	lr

40012c88 <Midi::GetMessageTimeStamp() const [clone .isra.0]>:
40012c88:	e12fff1e 	bx	lr

40012c8c <Midi::GetChannel() const [clone .isra.0]>:
40012c8c:	e12fff1e 	bx	lr

40012c90 <Midi::Read(unsigned char)>:
40012c90:	e3510010 	cmp	r1, #16
40012c94:	9a000001 	bls	40012ca0 <Midi::Read(unsigned char)+0x10>
40012c98:	e3a00000 	mov	r0, #0
40012c9c:	e12fff1e 	bx	lr
40012ca0:	e92d4070 	push	{r4, r5, r6, lr}
40012ca4:	e1a04001 	mov	r4, r1
40012ca8:	e1a05000 	mov	r5, r0
40012cac:	eb000ec7 	bl	400167d0 <Midi::Parse()>
40012cb0:	e3500000 	cmp	r0, #0
40012cb4:	0a000009 	beq	40012ce0 <Midi::Read(unsigned char)+0x50>
40012cb8:	e5953010 	ldr	r3, [r5, #16]
40012cbc:	e3c338ff 	bic	r3, r3, #16711680	; 0xff0000
40012cc0:	e3c33cff 	bic	r3, r3, #65280	; 0xff00
40012cc4:	e3530090 	cmp	r3, #144	; 0x90
40012cc8:	03e0307f 	mvneq	r3, #127	; 0x7f
40012ccc:	05c53010 	strbeq	r3, [r5, #16]
40012cd0:	0a000007 	beq	40012cf4 <Midi::Read(unsigned char)+0x64>
40012cd4:	e5d53010 	ldrb	r3, [r5, #16]
40012cd8:	e3530000 	cmp	r3, #0
40012cdc:	1a000001 	bne	40012ce8 <Midi::Read(unsigned char)+0x58>
40012ce0:	e3a00000 	mov	r0, #0
40012ce4:	e8bd8070 	pop	{r4, r5, r6, pc}
40012ce8:	e2233080 	eor	r3, r3, #128	; 0x80
40012cec:	e3530060 	cmp	r3, #96	; 0x60
40012cf0:	88bd8070 	pophi	{r4, r5, r6, pc}
40012cf4:	e5d50011 	ldrb	r0, [r5, #17]
40012cf8:	e3540000 	cmp	r4, #0
40012cfc:	11500004 	cmpne	r0, r4
40012d00:	03a00001 	moveq	r0, #1
40012d04:	13a00000 	movne	r0, #0
40012d08:	e8bd8070 	pop	{r4, r5, r6, pc}

40012d0c <Midi::GetMessageData(unsigned char&, unsigned char&) const>:
40012d0c:	e5d03012 	ldrb	r3, [r0, #18]
40012d10:	e5c13000 	strb	r3, [r1]
40012d14:	e5d03013 	ldrb	r3, [r0, #19]
40012d18:	e5c23000 	strb	r3, [r2]
40012d1c:	e12fff1e 	bx	lr

40012d20 <Midi::GetSystemExclusive(unsigned char&) const>:
40012d20:	e5d03094 	ldrb	r3, [r0, #148]	; 0x94
40012d24:	e2800014 	add	r0, r0, #20
40012d28:	e5c13000 	strb	r3, [r1]
40012d2c:	e12fff1e 	bx	lr

40012d30 <Midi::Get()>:
40012d30:	e308373c 	movw	r3, #34620	; 0x873c
40012d34:	e3443005 	movt	r3, #16389	; 0x4005
40012d38:	e5930000 	ldr	r0, [r3]
40012d3c:	e12fff1e 	bx	lr

40012d40 <MidiBPM::Get(unsigned long, unsigned long&)>:
40012d40:	e9901008 	ldmib	r0, {r3, ip}
40012d44:	e92d4030 	push	{r4, r5, lr}
40012d48:	e0413003 	sub	r3, r1, r3
40012d4c:	e080e10c 	add	lr, r0, ip, lsl #2
40012d50:	e3530000 	cmp	r3, #0
40012d54:	e58e300c 	str	r3, [lr, #12]
40012d58:	0a000004 	beq	40012d70 <MidiBPM::Get(unsigned long, unsigned long&)+0x30>
40012d5c:	e5801004 	str	r1, [r0, #4]
40012d60:	e35c0017 	cmp	ip, #23
40012d64:	e28cc001 	add	ip, ip, #1
40012d68:	1580c008 	strne	ip, [r0, #8]
40012d6c:	0a000001 	beq	40012d78 <MidiBPM::Get(unsigned long, unsigned long&)+0x38>
40012d70:	e3a00000 	mov	r0, #0
40012d74:	e8bd8030 	pop	{r4, r5, pc}
40012d78:	e3a0e000 	mov	lr, #0
40012d7c:	e280300c 	add	r3, r0, #12
40012d80:	e580e008 	str	lr, [r0, #8]
40012d84:	e2804068 	add	r4, r0, #104	; 0x68
40012d88:	e1a0500e 	mov	r5, lr
40012d8c:	e1a01003 	mov	r1, r3
40012d90:	e5b3c004 	ldr	ip, [r3, #4]!
40012d94:	e5911000 	ldr	r1, [r1]
40012d98:	e04c1001 	sub	r1, ip, r1
40012d9c:	e3510001 	cmp	r1, #1
40012da0:	9085500c 	addls	r5, r5, ip
40012da4:	928ee001 	addls	lr, lr, #1
40012da8:	e1540003 	cmp	r4, r3
40012dac:	1afffff6 	bne	40012d8c <MidiBPM::Get(unsigned long, unsigned long&)+0x4c>
40012db0:	e35e0000 	cmp	lr, #0
40012db4:	0affffed 	beq	40012d70 <MidiBPM::Get(unsigned long, unsigned long&)+0x30>
40012db8:	ee07ea90 	vmov	s15, lr
40012dbc:	ee075a10 	vmov	s14, r5
40012dc0:	eddf6a0f 	vldr	s13, [pc, #60]	; 40012e04 <MidiBPM::Get(unsigned long, unsigned long&)+0xc4>
40012dc4:	eef60b00 	vmov.f64	d16, #96	; 0x3f000000  0.5
40012dc8:	eef87a67 	vcvt.f32.u32	s15, s15
40012dcc:	eeb87a47 	vcvt.f32.u32	s14, s14
40012dd0:	ee677aa6 	vmul.f32	s15, s15, s13
40012dd4:	eec76a87 	vdiv.f32	s13, s15, s14
40012dd8:	eeb77ae6 	vcvt.f64.f32	d7, s13
40012ddc:	ee377b20 	vadd.f64	d7, d7, d16
40012de0:	eefc7bc7 	vcvt.u32.f64	s15, d7
40012de4:	ee173a90 	vmov	r3, s15
40012de8:	edc27a00 	vstr	s15, [r2]
40012dec:	e5902000 	ldr	r2, [r0]
40012df0:	e1530002 	cmp	r3, r2
40012df4:	0affffdd 	beq	40012d70 <MidiBPM::Get(unsigned long, unsigned long&)+0x30>
40012df8:	edc07a00 	vstr	s15, [r0]
40012dfc:	e3a00001 	mov	r0, #1
40012e00:	e8bd8030 	pop	{r4, r5, pc}
40012e04:	46c35000 	strbmi	r5, [r3], r0

40012e08 <MidiReader::Start()>:
40012e08:	e92d4010 	push	{r4, lr}
40012e0c:	e308473c 	movw	r4, #34620	; 0x873c
40012e10:	e3444005 	movt	r4, #16389	; 0x4005
40012e14:	e3021c5c 	movw	r1, #11356	; 0x2c5c
40012e18:	e3441001 	movt	r1, #16385	; 0x4001
40012e1c:	e5940000 	ldr	r0, [r4]
40012e20:	eb000df6 	bl	40016600 <Midi::SetIrqTimer1(void (*)())>
40012e24:	e5940000 	ldr	r0, [r4]
40012e28:	e3a01001 	mov	r1, #1
40012e2c:	e8bd4010 	pop	{r4, lr}
40012e30:	ea000e09 	b	4001665c <Midi::Init(midi::Direction)>

40012e34 <MidiReader::HandleMtc()>:
40012e34:	e92d4030 	push	{r4, r5, lr}
40012e38:	e30756ec 	movw	r5, #30444	; 0x76ec
40012e3c:	e3445005 	movt	r5, #16389	; 0x4005
40012e40:	e24dd00c 	sub	sp, sp, #12
40012e44:	e3074770 	movw	r4, #30576	; 0x7770
40012e48:	ebffffb8 	bl	40012d30 <Midi::Get()>
40012e4c:	e3444005 	movt	r4, #16389	; 0x4005
40012e50:	e28d1007 	add	r1, sp, #7
40012e54:	ebffffb1 	bl	40012d20 <Midi::GetSystemExclusive(unsigned char&) const>
40012e58:	e5d52004 	ldrb	r2, [r5, #4]
40012e5c:	e5d03005 	ldrb	r3, [r0, #5]
40012e60:	e5d01006 	ldrb	r1, [r0, #6]
40012e64:	e3520000 	cmp	r2, #0
40012e68:	e5d02007 	ldrb	r2, [r0, #7]
40012e6c:	e5c41002 	strb	r1, [r4, #2]
40012e70:	e5c42001 	strb	r2, [r4, #1]
40012e74:	e5d02008 	ldrb	r2, [r0, #8]
40012e78:	e5c42000 	strb	r2, [r4]
40012e7c:	e1a022a3 	lsr	r2, r3, #5
40012e80:	e203301f 	and	r3, r3, #31
40012e84:	e5c42004 	strb	r2, [r4, #4]
40012e88:	e5c43003 	strb	r3, [r4, #3]
40012e8c:	0a00000f 	beq	40012ed0 <MidiReader::HandleMtc()+0x9c>
40012e90:	e5d53003 	ldrb	r3, [r5, #3]
40012e94:	e3530000 	cmp	r3, #0
40012e98:	0a000013 	beq	40012eec <MidiReader::HandleMtc()+0xb8>
40012e9c:	e5d53005 	ldrb	r3, [r5, #5]
40012ea0:	e3530000 	cmp	r3, #0
40012ea4:	0a000017 	beq	40012f08 <MidiReader::HandleMtc()+0xd4>
40012ea8:	ebfff4eb 	bl	4001025c <LtcOutputs::Get()>
40012eac:	e3071770 	movw	r1, #30576	; 0x7770
40012eb0:	e3441005 	movt	r1, #16389	; 0x4005
40012eb4:	ebfffb73 	bl	40011c88 <LtcOutputs::Update(ltc::TimeCode const*)>
40012eb8:	e3073775 	movw	r3, #30581	; 0x7775
40012ebc:	e3a02000 	mov	r2, #0
40012ec0:	e3443005 	movt	r3, #16389	; 0x4005
40012ec4:	e5c32000 	strb	r2, [r3]
40012ec8:	e28dd00c 	add	sp, sp, #12
40012ecc:	e8bd8030 	pop	{r4, r5, pc}
40012ed0:	ebfff4dd 	bl	4001024c <LtcSender::Get()>
40012ed4:	e3a02001 	mov	r2, #1
40012ed8:	e1a01004 	mov	r1, r4
40012edc:	eb0005ce 	bl	4001461c <LtcSender::SetTimeCode(ltc::TimeCode const*, bool)>
40012ee0:	e5d53003 	ldrb	r3, [r5, #3]
40012ee4:	e3530000 	cmp	r3, #0
40012ee8:	1affffeb 	bne	40012e9c <MidiReader::HandleMtc()+0x68>
40012eec:	ebfff4ce 	bl	4001022c <ArtNetNode::Get()>
40012ef0:	e3071770 	movw	r1, #30576	; 0x7770
40012ef4:	e3441005 	movt	r1, #16389	; 0x4005
40012ef8:	ebfff4b2 	bl	400101c8 <ArtNetNode::SendTimeCode(artnet::TimeCode const*)>
40012efc:	e5d53005 	ldrb	r3, [r5, #5]
40012f00:	e3530000 	cmp	r3, #0
40012f04:	1affffe7 	bne	40012ea8 <MidiReader::HandleMtc()+0x74>
40012f08:	ebfff4cb 	bl	4001023c <LtcEtc::Get()>
40012f0c:	e3071770 	movw	r1, #30576	; 0x7770
40012f10:	e3441005 	movt	r1, #16389	; 0x4005
40012f14:	ebffeb3e 	bl	4000dc14 <LtcEtc::Send(midi::Timecode const*)>
40012f18:	eaffffe2 	b	40012ea8 <MidiReader::HandleMtc()+0x74>

40012f1c <MidiReader::HandleMtcQf()>:
40012f1c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40012f20:	e24dd008 	sub	sp, sp, #8
40012f24:	e1a04000 	mov	r4, r0
40012f28:	ebffff80 	bl	40012d30 <Midi::Get()>
40012f2c:	e28d2007 	add	r2, sp, #7
40012f30:	e28d1006 	add	r1, sp, #6
40012f34:	ebffff74 	bl	40012d0c <Midi::GetMessageData(unsigned char&, unsigned char&) const>
40012f38:	e5dd2006 	ldrb	r2, [sp, #6]
40012f3c:	e3073768 	movw	r3, #30568	; 0x7768
40012f40:	e3443005 	movt	r3, #16389	; 0x4005
40012f44:	e7e25252 	ubfx	r5, r2, #4, #3
40012f48:	e202200f 	and	r2, r2, #15
40012f4c:	e3550007 	cmp	r5, #7
40012f50:	e7c32005 	strb	r2, [r3, r5]
40012f54:	0a00004b 	beq	40013088 <MidiReader::HandleMtcQf()+0x16c>
40012f58:	e5d42004 	ldrb	r2, [r4, #4]
40012f5c:	e3520007 	cmp	r2, #7
40012f60:	0a000046 	beq	40013080 <MidiReader::HandleMtcQf()+0x164>
40012f64:	e1520005 	cmp	r2, r5
40012f68:	23a02000 	movcs	r2, #0
40012f6c:	33a02001 	movcc	r2, #1
40012f70:	e5c42005 	strb	r2, [r4, #5]
40012f74:	e3520000 	cmp	r2, #0
40012f78:	1a00003d 	bne	40013074 <MidiReader::HandleMtcQf()+0x158>
40012f7c:	e3550000 	cmp	r5, #0
40012f80:	1a00003b 	bne	40013074 <MidiReader::HandleMtcQf()+0x158>
40012f84:	e5d3c007 	ldrb	ip, [r3, #7]
40012f88:	e3076770 	movw	r6, #30576	; 0x7770
40012f8c:	e5d31001 	ldrb	r1, [r3, #1]
40012f90:	e5d32000 	ldrb	r2, [r3]
40012f94:	e5d3e006 	ldrb	lr, [r3, #6]
40012f98:	e1822201 	orr	r2, r2, r1, lsl #4
40012f9c:	e1a0120c 	lsl	r1, ip, #4
40012fa0:	e6ef2072 	uxtb	r2, r2
40012fa4:	e3446005 	movt	r6, #16389	; 0x4005
40012fa8:	e2011010 	and	r1, r1, #16
40012fac:	e181100e 	orr	r1, r1, lr
40012fb0:	e5940008 	ldr	r0, [r4, #8]
40012fb4:	e5d3e005 	ldrb	lr, [r3, #5]
40012fb8:	e5c61003 	strb	r1, [r6, #3]
40012fbc:	e5d31004 	ldrb	r1, [r3, #4]
40012fc0:	e1520000 	cmp	r2, r0
40012fc4:	e181120e 	orr	r1, r1, lr, lsl #4
40012fc8:	e5c61002 	strb	r1, [r6, #2]
40012fcc:	e5d3e003 	ldrb	lr, [r3, #3]
40012fd0:	e5d31002 	ldrb	r1, [r3, #2]
40012fd4:	30403002 	subcc	r3, r0, r2
40012fd8:	20423000 	subcs	r3, r2, r0
40012fdc:	e1c420f8 	strd	r2, [r4, #8]
40012fe0:	e5c62000 	strb	r2, [r6]
40012fe4:	e30d2c50 	movw	r2, #56400	; 0xdc50
40012fe8:	e1a0c0ac 	lsr	ip, ip, #1
40012fec:	e3442002 	movt	r2, #16386	; 0x4002
40012ff0:	e181120e 	orr	r1, r1, lr, lsl #4
40012ff4:	e7d2200c 	ldrb	r2, [r2, ip]
40012ff8:	e5c6c004 	strb	ip, [r6, #4]
40012ffc:	e5c61001 	strb	r1, [r6, #1]
40013000:	e2422002 	sub	r2, r2, #2
40013004:	e1520003 	cmp	r2, r3
40013008:	93a03002 	movls	r3, #2
4001300c:	9584300c 	strls	r3, [r4, #12]
40013010:	f57ff05f 	dmb	sy
40013014:	e594200c 	ldr	r2, [r4, #12]
40013018:	e3077778 	movw	r7, #30584	; 0x7778
4001301c:	e3447005 	movt	r7, #16389	; 0x4005
40013020:	e5973000 	ldr	r3, [r7]
40013024:	e1520003 	cmp	r2, r3
40013028:	8a00001a 	bhi	40013098 <MidiReader::HandleMtcQf()+0x17c>
4001302c:	e3a03b03 	mov	r3, #3072	; 0xc00
40013030:	e3011324 	movw	r1, #4900	; 0x1324
40013034:	e34031c2 	movt	r3, #450	; 0x1c2
40013038:	e3072775 	movw	r2, #30581	; 0x7775
4001303c:	e3441003 	movt	r1, #16387	; 0x4003
40013040:	e5930020 	ldr	r0, [r3, #32]
40013044:	e3442005 	movt	r2, #16389	; 0x4005
40013048:	e3800080 	orr	r0, r0, #128	; 0x80
4001304c:	e5830020 	str	r0, [r3, #32]
40013050:	e5d60004 	ldrb	r0, [r6, #4]
40013054:	e7911100 	ldr	r1, [r1, r0, lsl #2]
40013058:	e5831024 	str	r1, [r3, #36]	; 0x24
4001305c:	e5931020 	ldr	r1, [r3, #32]
40013060:	e3811003 	orr	r1, r1, #3
40013064:	e5831020 	str	r1, [r3, #32]
40013068:	e3a03000 	mov	r3, #0
4001306c:	e5c23000 	strb	r3, [r2]
40013070:	e5873000 	str	r3, [r7]
40013074:	e5c45004 	strb	r5, [r4, #4]
40013078:	e28dd008 	add	sp, sp, #8
4001307c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40013080:	e5d42005 	ldrb	r2, [r4, #5]
40013084:	eaffffba 	b	40012f74 <MidiReader::HandleMtcQf()+0x58>
40013088:	e5d42005 	ldrb	r2, [r4, #5]
4001308c:	e3520000 	cmp	r2, #0
40013090:	1affffbb 	bne	40012f84 <MidiReader::HandleMtcQf()+0x68>
40013094:	eafffff6 	b	40013074 <MidiReader::HandleMtcQf()+0x158>
40013098:	e30786ec 	movw	r8, #30444	; 0x76ec
4001309c:	e3448005 	movt	r8, #16389	; 0x4005
400130a0:	e5d83004 	ldrb	r3, [r8, #4]
400130a4:	e3530000 	cmp	r3, #0
400130a8:	0a00000a 	beq	400130d8 <MidiReader::HandleMtcQf()+0x1bc>
400130ac:	e5d83003 	ldrb	r3, [r8, #3]
400130b0:	e3530000 	cmp	r3, #0
400130b4:	0a000012 	beq	40013104 <MidiReader::HandleMtcQf()+0x1e8>
400130b8:	e5d83005 	ldrb	r3, [r8, #5]
400130bc:	e3530000 	cmp	r3, #0
400130c0:	0a00000a 	beq	400130f0 <MidiReader::HandleMtcQf()+0x1d4>
400130c4:	ebfff464 	bl	4001025c <LtcOutputs::Get()>
400130c8:	e3071770 	movw	r1, #30576	; 0x7770
400130cc:	e3441005 	movt	r1, #16389	; 0x4005
400130d0:	ebfffaec 	bl	40011c88 <LtcOutputs::Update(ltc::TimeCode const*)>
400130d4:	eaffffd4 	b	4001302c <MidiReader::HandleMtcQf()+0x110>
400130d8:	ebfff45b 	bl	4001024c <LtcSender::Get()>
400130dc:	e3071770 	movw	r1, #30576	; 0x7770
400130e0:	e3a02001 	mov	r2, #1
400130e4:	e3441005 	movt	r1, #16389	; 0x4005
400130e8:	eb00054b 	bl	4001461c <LtcSender::SetTimeCode(ltc::TimeCode const*, bool)>
400130ec:	eaffffee 	b	400130ac <MidiReader::HandleMtcQf()+0x190>
400130f0:	ebfff451 	bl	4001023c <LtcEtc::Get()>
400130f4:	e3071770 	movw	r1, #30576	; 0x7770
400130f8:	e3441005 	movt	r1, #16389	; 0x4005
400130fc:	ebffeac4 	bl	4000dc14 <LtcEtc::Send(midi::Timecode const*)>
40013100:	eaffffef 	b	400130c4 <MidiReader::HandleMtcQf()+0x1a8>
40013104:	ebfff448 	bl	4001022c <ArtNetNode::Get()>
40013108:	e3071770 	movw	r1, #30576	; 0x7770
4001310c:	e3441005 	movt	r1, #16389	; 0x4005
40013110:	ebfff42c 	bl	400101c8 <ArtNetNode::SendTimeCode(artnet::TimeCode const*)>
40013114:	eaffffe7 	b	400130b8 <MidiReader::HandleMtcQf()+0x19c>

40013118 <MidiReader::Run()>:
40013118:	e92d4070 	push	{r4, r5, r6, lr}
4001311c:	e24dd008 	sub	sp, sp, #8
40013120:	e1a04000 	mov	r4, r0
40013124:	ebffff01 	bl	40012d30 <Midi::Get()>
40013128:	e3a01000 	mov	r1, #0
4001312c:	ebfffed7 	bl	40012c90 <Midi::Read(unsigned char)>
40013130:	e3500000 	cmp	r0, #0
40013134:	0a000005 	beq	40013150 <MidiReader::Run()+0x38>
40013138:	ebfffefc 	bl	40012d30 <Midi::Get()>
4001313c:	e1a03000 	mov	r3, r0
40013140:	e5d00098 	ldrb	r0, [r0, #152]	; 0x98
40013144:	ebfffed0 	bl	40012c8c <Midi::GetChannel() const [clone .isra.0]>
40013148:	e3500000 	cmp	r0, #0
4001314c:	0a000049 	beq	40013278 <MidiReader::Run()+0x160>
40013150:	f57ff05f 	dmb	sy
40013154:	e3073775 	movw	r3, #30581	; 0x7775
40013158:	e3443005 	movt	r3, #16389	; 0x4005
4001315c:	e5d32000 	ldrb	r2, [r3]
40013160:	e3520000 	cmp	r2, #0
40013164:	0a000022 	beq	400131f4 <MidiReader::Run()+0xdc>
40013168:	e5d41005 	ldrb	r1, [r4, #5]
4001316c:	e3075770 	movw	r5, #30576	; 0x7770
40013170:	e3445005 	movt	r5, #16389	; 0x4005
40013174:	e30d2c50 	movw	r2, #56400	; 0xdc50
40013178:	e3442002 	movt	r2, #16386	; 0x4002
4001317c:	e3510000 	cmp	r1, #0
40013180:	e5d50004 	ldrb	r0, [r5, #4]
40013184:	e3a01000 	mov	r1, #0
40013188:	e5c31000 	strb	r1, [r3]
4001318c:	e7d22000 	ldrb	r2, [r2, r0]
40013190:	e5d53000 	ldrb	r3, [r5]
40013194:	0a000024 	beq	4001322c <MidiReader::Run()+0x114>
40013198:	e2833001 	add	r3, r3, #1
4001319c:	e6ef3073 	uxtb	r3, r3
400131a0:	e1530002 	cmp	r3, r2
400131a4:	15c53000 	strbne	r3, [r5]
400131a8:	0a000059 	beq	40013314 <MidiReader::Run()+0x1fc>
400131ac:	e30766ec 	movw	r6, #30444	; 0x76ec
400131b0:	e3446005 	movt	r6, #16389	; 0x4005
400131b4:	e5d63004 	ldrb	r3, [r6, #4]
400131b8:	e3530000 	cmp	r3, #0
400131bc:	0a000081 	beq	400133c8 <MidiReader::Run()+0x2b0>
400131c0:	e5d63003 	ldrb	r3, [r6, #3]
400131c4:	e3530000 	cmp	r3, #0
400131c8:	0a000086 	beq	400133e8 <MidiReader::Run()+0x2d0>
400131cc:	e5d63005 	ldrb	r3, [r6, #5]
400131d0:	e3530000 	cmp	r3, #0
400131d4:	0a00008a 	beq	40013404 <MidiReader::Run()+0x2ec>
400131d8:	ebfff41f 	bl	4001025c <LtcOutputs::Get()>
400131dc:	e3071770 	movw	r1, #30576	; 0x7770
400131e0:	e3441005 	movt	r1, #16389	; 0x4005
400131e4:	ebfffaa7 	bl	40011c88 <LtcOutputs::Update(ltc::TimeCode const*)>
400131e8:	e594300c 	ldr	r3, [r4, #12]
400131ec:	e3530002 	cmp	r3, #2
400131f0:	0a000037 	beq	400132d4 <MidiReader::Run()+0x1bc>
400131f4:	ebfffecd 	bl	40012d30 <Midi::Get()>
400131f8:	eb000d6f 	bl	400167bc <Midi::GetUpdatesPerSecond()>
400131fc:	e3500000 	cmp	r0, #0
40013200:	0a000004 	beq	40013218 <MidiReader::Run()+0x100>
40013204:	ebfffe12 	bl	40012a54 <Hardware::Get()>
40013208:	e3a01003 	mov	r1, #3
4001320c:	e28dd008 	add	sp, sp, #8
40013210:	e8bd4070 	pop	{r4, r5, r6, lr}
40013214:	ea004b3a 	b	40025f04 <Hardware::SetMode(hardware::ledblink::Mode)>
40013218:	ebfffe0d 	bl	40012a54 <Hardware::Get()>
4001321c:	e3a01002 	mov	r1, #2
40013220:	e28dd008 	add	sp, sp, #8
40013224:	e8bd4070 	pop	{r4, r5, r6, lr}
40013228:	ea004b35 	b	40025f04 <Hardware::SetMode(hardware::ledblink::Mode)>
4001322c:	e2422001 	sub	r2, r2, #1
40013230:	e1530002 	cmp	r3, r2
40013234:	1affffdc 	bne	400131ac <MidiReader::Run()+0x94>
40013238:	e5d53001 	ldrb	r3, [r5, #1]
4001323c:	e3530000 	cmp	r3, #0
40013240:	1a00005a 	bne	400133b0 <MidiReader::Run()+0x298>
40013244:	e3a0303b 	mov	r3, #59	; 0x3b
40013248:	e5c53001 	strb	r3, [r5, #1]
4001324c:	e5d53002 	ldrb	r3, [r5, #2]
40013250:	e3530000 	cmp	r3, #0
40013254:	1a00006f 	bne	40013418 <MidiReader::Run()+0x300>
40013258:	e3a0303b 	mov	r3, #59	; 0x3b
4001325c:	e5c53002 	strb	r3, [r5, #2]
40013260:	e5d53003 	ldrb	r3, [r5, #3]
40013264:	e3530000 	cmp	r3, #0
40013268:	12433001 	subne	r3, r3, #1
4001326c:	03a03017 	moveq	r3, #23
40013270:	e5c53003 	strb	r3, [r5, #3]
40013274:	eaffffcc 	b	400131ac <MidiReader::Run()+0x94>
40013278:	e5d30010 	ldrb	r0, [r3, #16]
4001327c:	ebfffe80 	bl	40012c84 <Midi::GetMessageType() const [clone .isra.0]>
40013280:	e35000f1 	cmp	r0, #241	; 0xf1
40013284:	0a000046 	beq	400133a4 <MidiReader::Run()+0x28c>
40013288:	e35000f8 	cmp	r0, #248	; 0xf8
4001328c:	0a000036 	beq	4001336c <MidiReader::Run()+0x254>
40013290:	e35000f0 	cmp	r0, #240	; 0xf0
40013294:	1affffad 	bne	40013150 <MidiReader::Run()+0x38>
40013298:	e1a00003 	mov	r0, r3
4001329c:	e28d1004 	add	r1, sp, #4
400132a0:	ebfffe9e 	bl	40012d20 <Midi::GetSystemExclusive(unsigned char&) const>
400132a4:	e5d03001 	ldrb	r3, [r0, #1]
400132a8:	e353007f 	cmp	r3, #127	; 0x7f
400132ac:	1affffa7 	bne	40013150 <MidiReader::Run()+0x38>
400132b0:	e5d03002 	ldrb	r3, [r0, #2]
400132b4:	e353007f 	cmp	r3, #127	; 0x7f
400132b8:	1affffa4 	bne	40013150 <MidiReader::Run()+0x38>
400132bc:	e5d03003 	ldrb	r3, [r0, #3]
400132c0:	e3530001 	cmp	r3, #1
400132c4:	1affffa1 	bne	40013150 <MidiReader::Run()+0x38>
400132c8:	e1a00004 	mov	r0, r4
400132cc:	ebfffed8 	bl	40012e34 <MidiReader::HandleMtc()>
400132d0:	eaffff9e 	b	40013150 <MidiReader::Run()+0x38>
400132d4:	e3a03b03 	mov	r3, #3072	; 0xc00
400132d8:	e3a02000 	mov	r2, #0
400132dc:	e34031c2 	movt	r3, #450	; 0x1c2
400132e0:	e584200c 	str	r2, [r4, #12]
400132e4:	e3012324 	movw	r2, #4900	; 0x1324
400132e8:	e5931020 	ldr	r1, [r3, #32]
400132ec:	e3442003 	movt	r2, #16387	; 0x4003
400132f0:	e3811080 	orr	r1, r1, #128	; 0x80
400132f4:	e5831020 	str	r1, [r3, #32]
400132f8:	e5d51004 	ldrb	r1, [r5, #4]
400132fc:	e7922101 	ldr	r2, [r2, r1, lsl #2]
40013300:	e5832024 	str	r2, [r3, #36]	; 0x24
40013304:	e5932020 	ldr	r2, [r3, #32]
40013308:	e3822003 	orr	r2, r2, #3
4001330c:	e5832020 	str	r2, [r3, #32]
40013310:	eaffffb7 	b	400131f4 <MidiReader::Run()+0xdc>
40013314:	e5d53001 	ldrb	r3, [r5, #1]
40013318:	e5c51000 	strb	r1, [r5]
4001331c:	e2833001 	add	r3, r3, #1
40013320:	e6ef3073 	uxtb	r3, r3
40013324:	e353003c 	cmp	r3, #60	; 0x3c
40013328:	15c53001 	strbne	r3, [r5, #1]
4001332c:	1affff9e 	bne	400131ac <MidiReader::Run()+0x94>
40013330:	e5d53002 	ldrb	r3, [r5, #2]
40013334:	e5c51001 	strb	r1, [r5, #1]
40013338:	e2833001 	add	r3, r3, #1
4001333c:	e6ef3073 	uxtb	r3, r3
40013340:	e353003c 	cmp	r3, #60	; 0x3c
40013344:	15c53002 	strbne	r3, [r5, #2]
40013348:	1affff97 	bne	400131ac <MidiReader::Run()+0x94>
4001334c:	e5d53003 	ldrb	r3, [r5, #3]
40013350:	e5c51002 	strb	r1, [r5, #2]
40013354:	e2833001 	add	r3, r3, #1
40013358:	e6ef3073 	uxtb	r3, r3
4001335c:	e3530018 	cmp	r3, #24
40013360:	05c51003 	strbeq	r1, [r5, #3]
40013364:	1affffc1 	bne	40013270 <MidiReader::Run()+0x158>
40013368:	eaffff8f 	b	400131ac <MidiReader::Run()+0x94>
4001336c:	e593000c 	ldr	r0, [r3, #12]
40013370:	e3a0100a 	mov	r1, #10
40013374:	e28d2004 	add	r2, sp, #4
40013378:	ebfffe42 	bl	40012c88 <Midi::GetMessageTimeStamp() const [clone .isra.0]>
4001337c:	e1a03000 	mov	r3, r0
40013380:	e2840010 	add	r0, r4, #16
40013384:	e0010391 	mul	r1, r1, r3
40013388:	ebfffe6c 	bl	40012d40 <MidiBPM::Get(unsigned long, unsigned long&)>
4001338c:	e3500000 	cmp	r0, #0
40013390:	0affff6e 	beq	40013150 <MidiReader::Run()+0x38>
40013394:	ebfff3b0 	bl	4001025c <LtcOutputs::Get()>
40013398:	e59d1004 	ldr	r1, [sp, #4]
4001339c:	ebfffbdd 	bl	40012318 <LtcOutputs::ShowBPM(unsigned long)>
400133a0:	eaffff6a 	b	40013150 <MidiReader::Run()+0x38>
400133a4:	e1a00004 	mov	r0, r4
400133a8:	ebfffedb 	bl	40012f1c <MidiReader::HandleMtcQf()>
400133ac:	eaffff67 	b	40013150 <MidiReader::Run()+0x38>
400133b0:	e2433001 	sub	r3, r3, #1
400133b4:	e6ef3073 	uxtb	r3, r3
400133b8:	e5c53001 	strb	r3, [r5, #1]
400133bc:	e353003b 	cmp	r3, #59	; 0x3b
400133c0:	1affff79 	bne	400131ac <MidiReader::Run()+0x94>
400133c4:	eaffffa0 	b	4001324c <MidiReader::Run()+0x134>
400133c8:	ebfff39f 	bl	4001024c <LtcSender::Get()>
400133cc:	e3071770 	movw	r1, #30576	; 0x7770
400133d0:	e3a02001 	mov	r2, #1
400133d4:	e3441005 	movt	r1, #16389	; 0x4005
400133d8:	eb00048f 	bl	4001461c <LtcSender::SetTimeCode(ltc::TimeCode const*, bool)>
400133dc:	e5d63003 	ldrb	r3, [r6, #3]
400133e0:	e3530000 	cmp	r3, #0
400133e4:	1affff78 	bne	400131cc <MidiReader::Run()+0xb4>
400133e8:	ebfff38f 	bl	4001022c <ArtNetNode::Get()>
400133ec:	e3071770 	movw	r1, #30576	; 0x7770
400133f0:	e3441005 	movt	r1, #16389	; 0x4005
400133f4:	ebfff373 	bl	400101c8 <ArtNetNode::SendTimeCode(artnet::TimeCode const*)>
400133f8:	e5d63005 	ldrb	r3, [r6, #5]
400133fc:	e3530000 	cmp	r3, #0
40013400:	1affff74 	bne	400131d8 <MidiReader::Run()+0xc0>
40013404:	ebfff38c 	bl	4001023c <LtcEtc::Get()>
40013408:	e3071770 	movw	r1, #30576	; 0x7770
4001340c:	e3441005 	movt	r1, #16389	; 0x4005
40013410:	ebffe9ff 	bl	4000dc14 <LtcEtc::Send(midi::Timecode const*)>
40013414:	eaffff6f 	b	400131d8 <MidiReader::Run()+0xc0>
40013418:	e2433001 	sub	r3, r3, #1
4001341c:	e6ef3073 	uxtb	r3, r3
40013420:	e5c53002 	strb	r3, [r5, #2]
40013424:	e353003b 	cmp	r3, #59	; 0x3b
40013428:	1affff5f 	bne	400131ac <MidiReader::Run()+0x94>
4001342c:	eaffff8b 	b	40013260 <MidiReader::Run()+0x148>

40013430 <arm_timer_handler()>:
40013430:	e307277c 	movw	r2, #30588	; 0x777c
40013434:	e3073784 	movw	r3, #30596	; 0x7784
40013438:	e3442005 	movt	r2, #16389	; 0x4005
4001343c:	e3071780 	movw	r1, #30592	; 0x7780
40013440:	e3443005 	movt	r3, #16389	; 0x4005
40013444:	e5920000 	ldr	r0, [r2]
40013448:	e593c000 	ldr	ip, [r3]
4001344c:	e3441005 	movt	r1, #16389	; 0x4005
40013450:	e040000c 	sub	r0, r0, ip
40013454:	e5810000 	str	r0, [r1]
40013458:	e5922000 	ldr	r2, [r2]
4001345c:	e5832000 	str	r2, [r3]
40013460:	e12fff1e 	bx	lr

40013464 <irq_timer0_handler(unsigned long)>:
40013464:	e3072775 	movw	r2, #30581	; 0x7775
40013468:	e3073778 	movw	r3, #30584	; 0x7778
4001346c:	e3443005 	movt	r3, #16389	; 0x4005
40013470:	e3a01001 	mov	r1, #1
40013474:	e3442005 	movt	r2, #16389	; 0x4005
40013478:	e5c21000 	strb	r1, [r2]
4001347c:	e5932000 	ldr	r2, [r3]
40013480:	e0822001 	add	r2, r2, r1
40013484:	e5832000 	str	r2, [r3]
40013488:	e12fff1e 	bx	lr

4001348c <RtpMidiReader::Start()>:
4001348c:	e3031464 	movw	r1, #13412	; 0x3464
40013490:	e3a00000 	mov	r0, #0
40013494:	e3441001 	movt	r1, #16385	; 0x4001
40013498:	e92d4010 	push	{r4, lr}
4001349c:	eb00622f 	bl	4002bd60 <irq_timer_set(irq_timers, void (*)(unsigned long))>
400134a0:	e3030430 	movw	r0, #13360	; 0x3430
400134a4:	e3440001 	movt	r0, #16385	; 0x4001
400134a8:	eb006266 	bl	4002be48 <irq_timer_arm_physical_set(void (*)())>
400134ac:	ebffb722 	bl	4000113c <irq_handler_init()>
400134b0:	e3043060 	movw	r3, #16480	; 0x4060
400134b4:	e3443003 	movt	r3, #16387	; 0x4003
400134b8:	e5930000 	ldr	r0, [r3]
400134bc:	ebfff9c9 	bl	40011be8 <LtcOutputs::Init()>
400134c0:	e3043088 	movw	r3, #16520	; 0x4088
400134c4:	e3a01002 	mov	r1, #2
400134c8:	e3443003 	movt	r3, #16387	; 0x4003
400134cc:	e8bd4010 	pop	{r4, lr}
400134d0:	e5930000 	ldr	r0, [r3]
400134d4:	ea004a8a 	b	40025f04 <Hardware::SetMode(hardware::ledblink::Mode)>

400134d8 <RtpMidiReader::Update()>:
400134d8:	e92d4070 	push	{r4, r5, r6, lr}
400134dc:	e30756ec 	movw	r5, #30444	; 0x76ec
400134e0:	e3445005 	movt	r5, #16389	; 0x4005
400134e4:	e24dd008 	sub	sp, sp, #8
400134e8:	e1a04000 	mov	r4, r0
400134ec:	e2806004 	add	r6, r0, #4
400134f0:	e5d53004 	ldrb	r3, [r5, #4]
400134f4:	e3530000 	cmp	r3, #0
400134f8:	0a000019 	beq	40013564 <RtpMidiReader::Update()+0x8c>
400134fc:	e5d53003 	ldrb	r3, [r5, #3]
40013500:	e3530000 	cmp	r3, #0
40013504:	12844009 	addne	r4, r4, #9
40013508:	0a00001f 	beq	4001358c <RtpMidiReader::Update()+0xb4>
4001350c:	e5d53005 	ldrb	r3, [r5, #5]
40013510:	e3530000 	cmp	r3, #0
40013514:	0a000037 	beq	400135f8 <RtpMidiReader::Update()+0x120>
40013518:	e3072770 	movw	r2, #30576	; 0x7770
4001351c:	e1a03006 	mov	r3, r6
40013520:	e3442005 	movt	r2, #16389	; 0x4005
40013524:	e4d31001 	ldrb	r1, [r3], #1
40013528:	e1530004 	cmp	r3, r4
4001352c:	e4c21001 	strb	r1, [r2], #1
40013530:	1afffffb 	bne	40013524 <RtpMidiReader::Update()+0x4c>
40013534:	e3043060 	movw	r3, #16480	; 0x4060
40013538:	e1a01006 	mov	r1, r6
4001353c:	e3443003 	movt	r3, #16387	; 0x4003
40013540:	e5930000 	ldr	r0, [r3]
40013544:	ebfff9cf 	bl	40011c88 <LtcOutputs::Update(ltc::TimeCode const*)>
40013548:	e307377c 	movw	r3, #30588	; 0x777c
4001354c:	e3443005 	movt	r3, #16389	; 0x4005
40013550:	e5932000 	ldr	r2, [r3]
40013554:	e2822001 	add	r2, r2, #1
40013558:	e5832000 	str	r2, [r3]
4001355c:	e28dd008 	add	sp, sp, #8
40013560:	e8bd8070 	pop	{r4, r5, r6, pc}
40013564:	e3073790 	movw	r3, #30608	; 0x7790
40013568:	e3a02001 	mov	r2, #1
4001356c:	e3443005 	movt	r3, #16389	; 0x4005
40013570:	e1a01006 	mov	r1, r6
40013574:	e5930000 	ldr	r0, [r3]
40013578:	eb000427 	bl	4001461c <LtcSender::SetTimeCode(ltc::TimeCode const*, bool)>
4001357c:	e5d53003 	ldrb	r3, [r5, #3]
40013580:	e3530000 	cmp	r3, #0
40013584:	12844009 	addne	r4, r4, #9
40013588:	1affffdf 	bne	4001350c <RtpMidiReader::Update()+0x34>
4001358c:	e30736dc 	movw	r3, #30428	; 0x76dc
40013590:	e2844009 	add	r4, r4, #9
40013594:	e3443005 	movt	r3, #16389	; 0x4005
40013598:	e593c000 	ldr	ip, [r3]
4001359c:	e1a03006 	mov	r3, r6
400135a0:	e28c2e1e 	add	r2, ip, #480	; 0x1e0
400135a4:	e2822001 	add	r2, r2, #1
400135a8:	e4d31001 	ldrb	r1, [r3], #1
400135ac:	e1540003 	cmp	r4, r3
400135b0:	e4c21001 	strb	r1, [r2], #1
400135b4:	1afffffb 	bne	400135a8 <RtpMidiReader::Update()+0xd0>
400135b8:	e59c0000 	ldr	r0, [ip]
400135bc:	e30a373c 	movw	r3, #42812	; 0xa73c
400135c0:	e3443005 	movt	r3, #16389	; 0x4005
400135c4:	e28c1e1d 	add	r1, ip, #464	; 0x1d0
400135c8:	e2811003 	add	r1, r1, #3
400135cc:	e5932000 	ldr	r2, [r3]
400135d0:	e59c3048 	ldr	r3, [ip, #72]	; 0x48
400135d4:	e3520000 	cmp	r2, #0
400135d8:	0affffcb 	beq	4001350c <RtpMidiReader::Update()+0x34>
400135dc:	e3012936 	movw	r2, #6454	; 0x1936
400135e0:	e58d2000 	str	r2, [sp]
400135e4:	e3a02013 	mov	r2, #19
400135e8:	eb003b62 	bl	40022378 <net::udp_send(long, unsigned char const*, unsigned long, unsigned long, unsigned short)>
400135ec:	e5d53005 	ldrb	r3, [r5, #5]
400135f0:	e3530000 	cmp	r3, #0
400135f4:	1affffc7 	bne	40013518 <RtpMidiReader::Update()+0x40>
400135f8:	e3043074 	movw	r3, #16500	; 0x4074
400135fc:	e1a01006 	mov	r1, r6
40013600:	e3443003 	movt	r3, #16387	; 0x4003
40013604:	e5930000 	ldr	r0, [r3]
40013608:	ebffe981 	bl	4000dc14 <LtcEtc::Send(midi::Timecode const*)>
4001360c:	eaffffc1 	b	40013518 <RtpMidiReader::Update()+0x40>

40013610 <RtpMidiReader::HandleMtcQf(midi::Message const*)>:
40013610:	e92d4070 	push	{r4, r5, r6, lr}
40013614:	e3073788 	movw	r3, #30600	; 0x7788
40013618:	e5d12006 	ldrb	r2, [r1, #6]
4001361c:	e1a04000 	mov	r4, r0
40013620:	e3443005 	movt	r3, #16389	; 0x4005
40013624:	e7e25252 	ubfx	r5, r2, #4, #3
40013628:	e202200f 	and	r2, r2, #15
4001362c:	e3550007 	cmp	r5, #7
40013630:	e7c32005 	strb	r2, [r3, r5]
40013634:	0a000049 	beq	40013760 <RtpMidiReader::HandleMtcQf(midi::Message const*)+0x150>
40013638:	e5d02009 	ldrb	r2, [r0, #9]
4001363c:	e3520007 	cmp	r2, #7
40013640:	0a000044 	beq	40013758 <RtpMidiReader::HandleMtcQf(midi::Message const*)+0x148>
40013644:	e1520005 	cmp	r2, r5
40013648:	23a02000 	movcs	r2, #0
4001364c:	33a02001 	movcc	r2, #1
40013650:	e5c0200a 	strb	r2, [r0, #10]
40013654:	e3520000 	cmp	r2, #0
40013658:	1a00003c 	bne	40013750 <RtpMidiReader::HandleMtcQf(midi::Message const*)+0x140>
4001365c:	e3550000 	cmp	r5, #0
40013660:	1a00003a 	bne	40013750 <RtpMidiReader::HandleMtcQf(midi::Message const*)+0x140>
40013664:	e5d3e003 	ldrb	lr, [r3, #3]
40013668:	e5d3c002 	ldrb	ip, [r3, #2]
4001366c:	e5d31001 	ldrb	r1, [r3, #1]
40013670:	e5d32000 	ldrb	r2, [r3]
40013674:	e18cc20e 	orr	ip, ip, lr, lsl #4
40013678:	e5c4c005 	strb	ip, [r4, #5]
4001367c:	e5d3e005 	ldrb	lr, [r3, #5]
40013680:	e5d3c004 	ldrb	ip, [r3, #4]
40013684:	e1822201 	orr	r2, r2, r1, lsl #4
40013688:	e5d31007 	ldrb	r1, [r3, #7]
4001368c:	e6ef2072 	uxtb	r2, r2
40013690:	e18cc20e 	orr	ip, ip, lr, lsl #4
40013694:	e5c4c006 	strb	ip, [r4, #6]
40013698:	e5d3c006 	ldrb	ip, [r3, #6]
4001369c:	e1a03201 	lsl	r3, r1, #4
400136a0:	e594000c 	ldr	r0, [r4, #12]
400136a4:	e2033010 	and	r3, r3, #16
400136a8:	e183300c 	orr	r3, r3, ip
400136ac:	e5c43007 	strb	r3, [r4, #7]
400136b0:	e30d3c50 	movw	r3, #56400	; 0xdc50
400136b4:	e1a010a1 	lsr	r1, r1, #1
400136b8:	e3443002 	movt	r3, #16386	; 0x4002
400136bc:	e1520000 	cmp	r2, r0
400136c0:	e7d33001 	ldrb	r3, [r3, r1]
400136c4:	30400002 	subcc	r0, r0, r2
400136c8:	20420000 	subcs	r0, r2, r0
400136cc:	e2433002 	sub	r3, r3, #2
400136d0:	e1530000 	cmp	r3, r0
400136d4:	e5840010 	str	r0, [r4, #16]
400136d8:	93a03002 	movls	r3, #2
400136dc:	e5c42004 	strb	r2, [r4, #4]
400136e0:	e5c41008 	strb	r1, [r4, #8]
400136e4:	e584200c 	str	r2, [r4, #12]
400136e8:	95843010 	strls	r3, [r4, #16]
400136ec:	f57ff05f 	dmb	sy
400136f0:	e5942010 	ldr	r2, [r4, #16]
400136f4:	e3076778 	movw	r6, #30584	; 0x7778
400136f8:	e3446005 	movt	r6, #16389	; 0x4005
400136fc:	e5963000 	ldr	r3, [r6]
40013700:	e1520003 	cmp	r2, r3
40013704:	8a000019 	bhi	40013770 <RtpMidiReader::HandleMtcQf(midi::Message const*)+0x160>
40013708:	e3a03b03 	mov	r3, #3072	; 0xc00
4001370c:	e34031c2 	movt	r3, #450	; 0x1c2
40013710:	e5932010 	ldr	r2, [r3, #16]
40013714:	e3822080 	orr	r2, r2, #128	; 0x80
40013718:	e5832010 	str	r2, [r3, #16]
4001371c:	e3012324 	movw	r2, #4900	; 0x1324
40013720:	e5d41008 	ldrb	r1, [r4, #8]
40013724:	e3442003 	movt	r2, #16387	; 0x4003
40013728:	e7922101 	ldr	r2, [r2, r1, lsl #2]
4001372c:	e5832014 	str	r2, [r3, #20]
40013730:	e5932010 	ldr	r2, [r3, #16]
40013734:	e3822003 	orr	r2, r2, #3
40013738:	e5832010 	str	r2, [r3, #16]
4001373c:	e3073775 	movw	r3, #30581	; 0x7775
40013740:	e3443005 	movt	r3, #16389	; 0x4005
40013744:	e3a02000 	mov	r2, #0
40013748:	e5c32000 	strb	r2, [r3]
4001374c:	e5862000 	str	r2, [r6]
40013750:	e5c45009 	strb	r5, [r4, #9]
40013754:	e8bd8070 	pop	{r4, r5, r6, pc}
40013758:	e5d0200a 	ldrb	r2, [r0, #10]
4001375c:	eaffffbc 	b	40013654 <RtpMidiReader::HandleMtcQf(midi::Message const*)+0x44>
40013760:	e5d0200a 	ldrb	r2, [r0, #10]
40013764:	e3520000 	cmp	r2, #0
40013768:	1affffbd 	bne	40013664 <RtpMidiReader::HandleMtcQf(midi::Message const*)+0x54>
4001376c:	eafffff7 	b	40013750 <RtpMidiReader::HandleMtcQf(midi::Message const*)+0x140>
40013770:	e1a00004 	mov	r0, r4
40013774:	ebffff57 	bl	400134d8 <RtpMidiReader::Update()>
40013778:	eaffffe2 	b	40013708 <RtpMidiReader::HandleMtcQf(midi::Message const*)+0xf8>

4001377c <RtpMidiReader::MidiMessage(midi::Message const*)>:
4001377c:	e5d12004 	ldrb	r2, [r1, #4]
40013780:	e35200f1 	cmp	r2, #241	; 0xf1
40013784:	0a000031 	beq	40013850 <RtpMidiReader::MidiMessage(midi::Message const*)+0xd4>
40013788:	e35200f8 	cmp	r2, #248	; 0xf8
4001378c:	e1a0c000 	mov	ip, r0
40013790:	e92d4010 	push	{r4, lr}
40013794:	0a00001f 	beq	40013818 <RtpMidiReader::MidiMessage(midi::Message const*)+0x9c>
40013798:	e35200f0 	cmp	r2, #240	; 0xf0
4001379c:	18bd8010 	popne	{r4, pc}
400137a0:	e5d12009 	ldrb	r2, [r1, #9]
400137a4:	e352007f 	cmp	r2, #127	; 0x7f
400137a8:	18bd8010 	popne	{r4, pc}
400137ac:	e5d1200a 	ldrb	r2, [r1, #10]
400137b0:	e352007f 	cmp	r2, #127	; 0x7f
400137b4:	18bd8010 	popne	{r4, pc}
400137b8:	e5d1200b 	ldrb	r2, [r1, #11]
400137bc:	e3520001 	cmp	r2, #1
400137c0:	18bd8010 	popne	{r4, pc}
400137c4:	e5d12010 	ldrb	r2, [r1, #16]
400137c8:	e5c02004 	strb	r2, [r0, #4]
400137cc:	e5d1200f 	ldrb	r2, [r1, #15]
400137d0:	e5c02005 	strb	r2, [r0, #5]
400137d4:	e5d1200e 	ldrb	r2, [r1, #14]
400137d8:	e5c02006 	strb	r2, [r0, #6]
400137dc:	e5d1200d 	ldrb	r2, [r1, #13]
400137e0:	e202201f 	and	r2, r2, #31
400137e4:	e5c02007 	strb	r2, [r0, #7]
400137e8:	e5d1300d 	ldrb	r3, [r1, #13]
400137ec:	e1a032a3 	lsr	r3, r3, #5
400137f0:	e5c03008 	strb	r3, [r0, #8]
400137f4:	ebffff37 	bl	400134d8 <RtpMidiReader::Update()>
400137f8:	e3072775 	movw	r2, #30581	; 0x7775
400137fc:	e3073778 	movw	r3, #30584	; 0x7778
40013800:	e3442005 	movt	r2, #16389	; 0x4005
40013804:	e3a01000 	mov	r1, #0
40013808:	e3443005 	movt	r3, #16389	; 0x4005
4001380c:	e5c21000 	strb	r1, [r2]
40013810:	e5831000 	str	r1, [r3]
40013814:	e8bd8010 	pop	{r4, pc}
40013818:	e5911000 	ldr	r1, [r1]
4001381c:	e5903018 	ldr	r3, [r0, #24]
40013820:	e590201c 	ldr	r2, [r0, #28]
40013824:	e0413003 	sub	r3, r1, r3
40013828:	e0800102 	add	r0, r0, r2, lsl #2
4001382c:	e3530000 	cmp	r3, #0
40013830:	e5803020 	str	r3, [r0, #32]
40013834:	08bd8010 	popeq	{r4, pc}
40013838:	e58c1018 	str	r1, [ip, #24]
4001383c:	e3520017 	cmp	r2, #23
40013840:	e2822001 	add	r2, r2, #1
40013844:	0a000002 	beq	40013854 <RtpMidiReader::MidiMessage(midi::Message const*)+0xd8>
40013848:	e58c201c 	str	r2, [ip, #28]
4001384c:	e8bd8010 	pop	{r4, pc}
40013850:	eaffff6e 	b	40013610 <RtpMidiReader::HandleMtcQf(midi::Message const*)>
40013854:	e3a00000 	mov	r0, #0
40013858:	e28c3020 	add	r3, ip, #32
4001385c:	e58c001c 	str	r0, [ip, #28]
40013860:	e28ce07c 	add	lr, ip, #124	; 0x7c
40013864:	e1a04000 	mov	r4, r0
40013868:	e1a02003 	mov	r2, r3
4001386c:	e5b31004 	ldr	r1, [r3, #4]!
40013870:	e5922000 	ldr	r2, [r2]
40013874:	e0412002 	sub	r2, r1, r2
40013878:	e3520001 	cmp	r2, #1
4001387c:	90844001 	addls	r4, r4, r1
40013880:	92800001 	addls	r0, r0, #1
40013884:	e15e0003 	cmp	lr, r3
40013888:	1afffff6 	bne	40013868 <RtpMidiReader::MidiMessage(midi::Message const*)+0xec>
4001388c:	e3500000 	cmp	r0, #0
40013890:	08bd8010 	popeq	{r4, pc}
40013894:	ee070a90 	vmov	s15, r0
40013898:	ee074a10 	vmov	s14, r4
4001389c:	eddf6a11 	vldr	s13, [pc, #68]	; 400138e8 <RtpMidiReader::MidiMessage(midi::Message const*)+0x16c>
400138a0:	eef60b00 	vmov.f64	d16, #96	; 0x3f000000  0.5
400138a4:	eef87a67 	vcvt.f32.u32	s15, s15
400138a8:	eeb87a47 	vcvt.f32.u32	s14, s14
400138ac:	e59c3014 	ldr	r3, [ip, #20]
400138b0:	ee677aa6 	vmul.f32	s15, s15, s13
400138b4:	eec76a87 	vdiv.f32	s13, s15, s14
400138b8:	eeb77ae6 	vcvt.f64.f32	d7, s13
400138bc:	ee377b20 	vadd.f64	d7, d7, d16
400138c0:	eefc7bc7 	vcvt.u32.f64	s15, d7
400138c4:	ee171a90 	vmov	r1, s15
400138c8:	e1510003 	cmp	r1, r3
400138cc:	08bd8010 	popeq	{r4, pc}
400138d0:	edcc7a05 	vstr	s15, [ip, #20]
400138d4:	e3043060 	movw	r3, #16480	; 0x4060
400138d8:	e3443003 	movt	r3, #16387	; 0x4003
400138dc:	e8bd4010 	pop	{r4, lr}
400138e0:	e5930000 	ldr	r0, [r3]
400138e4:	eafffa8b 	b	40012318 <LtcOutputs::ShowBPM(unsigned long)>
400138e8:	46c35000 	strbmi	r5, [r3], r0

400138ec <RtpMidiReader::Run()>:
400138ec:	e92d4010 	push	{r4, lr}
400138f0:	f57ff05f 	dmb	sy
400138f4:	e3073775 	movw	r3, #30581	; 0x7775
400138f8:	e3443005 	movt	r3, #16389	; 0x4005
400138fc:	e5d32000 	ldrb	r2, [r3]
40013900:	e3520000 	cmp	r2, #0
40013904:	0a000014 	beq	4001395c <RtpMidiReader::Run()+0x70>
40013908:	e1a04000 	mov	r4, r0
4001390c:	e30d2c50 	movw	r2, #56400	; 0xdc50
40013910:	e5d0000a 	ldrb	r0, [r0, #10]
40013914:	e3442002 	movt	r2, #16386	; 0x4002
40013918:	e5d41008 	ldrb	r1, [r4, #8]
4001391c:	e3500000 	cmp	r0, #0
40013920:	e3a00000 	mov	r0, #0
40013924:	e7d21001 	ldrb	r1, [r2, r1]
40013928:	e5c30000 	strb	r0, [r3]
4001392c:	e5d42004 	ldrb	r2, [r4, #4]
40013930:	0a000019 	beq	4001399c <RtpMidiReader::Run()+0xb0>
40013934:	e2822001 	add	r2, r2, #1
40013938:	e6ef2072 	uxtb	r2, r2
4001393c:	e1520001 	cmp	r2, r1
40013940:	15c42004 	strbne	r2, [r4, #4]
40013944:	0a000037 	beq	40013a28 <RtpMidiReader::Run()+0x13c>
40013948:	e1a00004 	mov	r0, r4
4001394c:	ebfffee1 	bl	400134d8 <RtpMidiReader::Update()>
40013950:	e5943010 	ldr	r3, [r4, #16]
40013954:	e3530002 	cmp	r3, #2
40013958:	0a000022 	beq	400139e8 <RtpMidiReader::Run()+0xfc>
4001395c:	f57ff05f 	dmb	sy
40013960:	e3073780 	movw	r3, #30592	; 0x7780
40013964:	e3443005 	movt	r3, #16389	; 0x4005
40013968:	e5933000 	ldr	r3, [r3]
4001396c:	e3530000 	cmp	r3, #0
40013970:	0a000003 	beq	40013984 <RtpMidiReader::Run()+0x98>
40013974:	ebfffc36 	bl	40012a54 <Hardware::Get()>
40013978:	e8bd4010 	pop	{r4, lr}
4001397c:	e3a01003 	mov	r1, #3
40013980:	ea00495f 	b	40025f04 <Hardware::SetMode(hardware::ledblink::Mode)>
40013984:	ebfff234 	bl	4001025c <LtcOutputs::Get()>
40013988:	ebfffa22 	bl	40012218 <LtcOutputs::ShowSysTime()>
4001398c:	ebfffc30 	bl	40012a54 <Hardware::Get()>
40013990:	e8bd4010 	pop	{r4, lr}
40013994:	e3a01002 	mov	r1, #2
40013998:	ea004959 	b	40025f04 <Hardware::SetMode(hardware::ledblink::Mode)>
4001399c:	e2411001 	sub	r1, r1, #1
400139a0:	e1520001 	cmp	r2, r1
400139a4:	1affffe7 	bne	40013948 <RtpMidiReader::Run()+0x5c>
400139a8:	e5d43005 	ldrb	r3, [r4, #5]
400139ac:	e3530000 	cmp	r3, #0
400139b0:	1a000032 	bne	40013a80 <RtpMidiReader::Run()+0x194>
400139b4:	e3a0303b 	mov	r3, #59	; 0x3b
400139b8:	e5c43005 	strb	r3, [r4, #5]
400139bc:	e5d43006 	ldrb	r3, [r4, #6]
400139c0:	e3530000 	cmp	r3, #0
400139c4:	1a000033 	bne	40013a98 <RtpMidiReader::Run()+0x1ac>
400139c8:	e3a0303b 	mov	r3, #59	; 0x3b
400139cc:	e5c43006 	strb	r3, [r4, #6]
400139d0:	e5d43007 	ldrb	r3, [r4, #7]
400139d4:	e3530000 	cmp	r3, #0
400139d8:	12433001 	subne	r3, r3, #1
400139dc:	03a03017 	moveq	r3, #23
400139e0:	e5c43007 	strb	r3, [r4, #7]
400139e4:	eaffffd7 	b	40013948 <RtpMidiReader::Run()+0x5c>
400139e8:	e3a03b03 	mov	r3, #3072	; 0xc00
400139ec:	e3a02000 	mov	r2, #0
400139f0:	e34031c2 	movt	r3, #450	; 0x1c2
400139f4:	e5842010 	str	r2, [r4, #16]
400139f8:	e3012324 	movw	r2, #4900	; 0x1324
400139fc:	e5931010 	ldr	r1, [r3, #16]
40013a00:	e3442003 	movt	r2, #16387	; 0x4003
40013a04:	e3811080 	orr	r1, r1, #128	; 0x80
40013a08:	e5831010 	str	r1, [r3, #16]
40013a0c:	e5d41008 	ldrb	r1, [r4, #8]
40013a10:	e7922101 	ldr	r2, [r2, r1, lsl #2]
40013a14:	e5832014 	str	r2, [r3, #20]
40013a18:	e5932010 	ldr	r2, [r3, #16]
40013a1c:	e3822003 	orr	r2, r2, #3
40013a20:	e5832010 	str	r2, [r3, #16]
40013a24:	eaffffcc 	b	4001395c <RtpMidiReader::Run()+0x70>
40013a28:	e5d43005 	ldrb	r3, [r4, #5]
40013a2c:	e5c40004 	strb	r0, [r4, #4]
40013a30:	e2833001 	add	r3, r3, #1
40013a34:	e6ef3073 	uxtb	r3, r3
40013a38:	e353003c 	cmp	r3, #60	; 0x3c
40013a3c:	15c43005 	strbne	r3, [r4, #5]
40013a40:	1affffc0 	bne	40013948 <RtpMidiReader::Run()+0x5c>
40013a44:	e5d43006 	ldrb	r3, [r4, #6]
40013a48:	e5c40005 	strb	r0, [r4, #5]
40013a4c:	e2833001 	add	r3, r3, #1
40013a50:	e6ef3073 	uxtb	r3, r3
40013a54:	e353003c 	cmp	r3, #60	; 0x3c
40013a58:	15c43006 	strbne	r3, [r4, #6]
40013a5c:	1affffb9 	bne	40013948 <RtpMidiReader::Run()+0x5c>
40013a60:	e5d43007 	ldrb	r3, [r4, #7]
40013a64:	e5c40006 	strb	r0, [r4, #6]
40013a68:	e2833001 	add	r3, r3, #1
40013a6c:	e6ef3073 	uxtb	r3, r3
40013a70:	e3530018 	cmp	r3, #24
40013a74:	05c40007 	strbeq	r0, [r4, #7]
40013a78:	1affffd8 	bne	400139e0 <RtpMidiReader::Run()+0xf4>
40013a7c:	eaffffb1 	b	40013948 <RtpMidiReader::Run()+0x5c>
40013a80:	e2433001 	sub	r3, r3, #1
40013a84:	e6ef3073 	uxtb	r3, r3
40013a88:	e5c43005 	strb	r3, [r4, #5]
40013a8c:	e353003b 	cmp	r3, #59	; 0x3b
40013a90:	1affffac 	bne	40013948 <RtpMidiReader::Run()+0x5c>
40013a94:	eaffffc8 	b	400139bc <RtpMidiReader::Run()+0xd0>
40013a98:	e2433001 	sub	r3, r3, #1
40013a9c:	e6ef3073 	uxtb	r3, r3
40013aa0:	e5c43006 	strb	r3, [r4, #6]
40013aa4:	e353003b 	cmp	r3, #59	; 0x3b
40013aa8:	1affffa6 	bne	40013948 <RtpMidiReader::Run()+0x5c>
40013aac:	eaffffc7 	b	400139d0 <RtpMidiReader::Run()+0xe4>

40013ab0 <RtpMidiReader::~RtpMidiReader()>:
40013ab0:	e12fff1e 	bx	lr

40013ab4 <RtpMidiReader::~RtpMidiReader()>:
40013ab4:	e92d4010 	push	{r4, lr}
40013ab8:	e3a01080 	mov	r1, #128	; 0x80
40013abc:	e1a04000 	mov	r4, r0
40013ac0:	eb006643 	bl	4002d3d4 <operator delete(void*, unsigned int)>
40013ac4:	e1a00004 	mov	r0, r4
40013ac8:	e8bd8010 	pop	{r4, pc}

40013acc <irq_timer0_handler(unsigned long)>:
40013acc:	e3073775 	movw	r3, #30581	; 0x7775
40013ad0:	e3a02001 	mov	r2, #1
40013ad4:	e3443005 	movt	r3, #16389	; 0x4005
40013ad8:	e5c32000 	strb	r2, [r3]
40013adc:	e12fff1e 	bx	lr

40013ae0 <SystimeReader::SetFps(unsigned char) [clone .part.0]>:
40013ae0:	e3072770 	movw	r2, #30576	; 0x7770
40013ae4:	e3a0c000 	mov	ip, #0
40013ae8:	e3442005 	movt	r2, #16389	; 0x4005
40013aec:	e92d4010 	push	{r4, lr}
40013af0:	e30746ec 	movw	r4, #30444	; 0x76ec
40013af4:	e5c01000 	strb	r1, [r0]
40013af8:	e24dd008 	sub	sp, sp, #8
40013afc:	e5d23000 	ldrb	r3, [r2]
40013b00:	e3444005 	movt	r4, #16389	; 0x4005
40013b04:	e1530001 	cmp	r3, r1
40013b08:	e30736fc 	movw	r3, #30460	; 0x76fc
40013b0c:	e3443005 	movt	r3, #16389	; 0x4005
40013b10:	22411001 	subcs	r1, r1, #1
40013b14:	25c21000 	strbcs	r1, [r2]
40013b18:	e3011324 	movw	r1, #4900	; 0x1324
40013b1c:	e5d30000 	ldrb	r0, [r3]
40013b20:	e3a03b03 	mov	r3, #3072	; 0xc00
40013b24:	e3441003 	movt	r1, #16387	; 0x4003
40013b28:	e34031c2 	movt	r3, #450	; 0x1c2
40013b2c:	e7911100 	ldr	r1, [r1, r0, lsl #2]
40013b30:	e5c20004 	strb	r0, [r2, #4]
40013b34:	e5d42004 	ldrb	r2, [r4, #4]
40013b38:	e583c018 	str	ip, [r3, #24]
40013b3c:	e5831014 	str	r1, [r3, #20]
40013b40:	e5931010 	ldr	r1, [r3, #16]
40013b44:	e152000c 	cmp	r2, ip
40013b48:	e3811003 	orr	r1, r1, #3
40013b4c:	e5831010 	str	r1, [r3, #16]
40013b50:	0a00000d 	beq	40013b8c <SystimeReader::SetFps(unsigned char) [clone .part.0]+0xac>
40013b54:	e5d43003 	ldrb	r3, [r4, #3]
40013b58:	e3530000 	cmp	r3, #0
40013b5c:	0a000013 	beq	40013bb0 <SystimeReader::SetFps(unsigned char) [clone .part.0]+0xd0>
40013b60:	e5d43005 	ldrb	r3, [r4, #5]
40013b64:	e3530000 	cmp	r3, #0
40013b68:	0a00002d 	beq	40013c24 <SystimeReader::SetFps(unsigned char) [clone .part.0]+0x144>
40013b6c:	e3043060 	movw	r3, #16480	; 0x4060
40013b70:	e3071770 	movw	r1, #30576	; 0x7770
40013b74:	e3443003 	movt	r3, #16387	; 0x4003
40013b78:	e3441005 	movt	r1, #16389	; 0x4005
40013b7c:	e5930000 	ldr	r0, [r3]
40013b80:	e28dd008 	add	sp, sp, #8
40013b84:	e8bd4010 	pop	{r4, lr}
40013b88:	eafff83e 	b	40011c88 <LtcOutputs::Update(ltc::TimeCode const*)>
40013b8c:	e3073790 	movw	r3, #30608	; 0x7790
40013b90:	e3071770 	movw	r1, #30576	; 0x7770
40013b94:	e3443005 	movt	r3, #16389	; 0x4005
40013b98:	e3441005 	movt	r1, #16389	; 0x4005
40013b9c:	e5930000 	ldr	r0, [r3]
40013ba0:	eb00029d 	bl	4001461c <LtcSender::SetTimeCode(ltc::TimeCode const*, bool)>
40013ba4:	e5d43003 	ldrb	r3, [r4, #3]
40013ba8:	e3530000 	cmp	r3, #0
40013bac:	1affffeb 	bne	40013b60 <SystimeReader::SetFps(unsigned char) [clone .part.0]+0x80>
40013bb0:	e30736dc 	movw	r3, #30428	; 0x76dc
40013bb4:	e3072770 	movw	r2, #30576	; 0x7770
40013bb8:	e3443005 	movt	r3, #16389	; 0x4005
40013bbc:	e3442005 	movt	r2, #16389	; 0x4005
40013bc0:	e593c000 	ldr	ip, [r3]
40013bc4:	e28c3e1e 	add	r3, ip, #480	; 0x1e0
40013bc8:	e28c0f79 	add	r0, ip, #484	; 0x1e4
40013bcc:	e2833001 	add	r3, r3, #1
40013bd0:	e2800002 	add	r0, r0, #2
40013bd4:	e4d21001 	ldrb	r1, [r2], #1
40013bd8:	e4c31001 	strb	r1, [r3], #1
40013bdc:	e1500003 	cmp	r0, r3
40013be0:	1afffffb 	bne	40013bd4 <SystimeReader::SetFps(unsigned char) [clone .part.0]+0xf4>
40013be4:	e59c0000 	ldr	r0, [ip]
40013be8:	e30a273c 	movw	r2, #42812	; 0xa73c
40013bec:	e3442005 	movt	r2, #16389	; 0x4005
40013bf0:	e28c1e1d 	add	r1, ip, #464	; 0x1d0
40013bf4:	e59c3048 	ldr	r3, [ip, #72]	; 0x48
40013bf8:	e2811003 	add	r1, r1, #3
40013bfc:	e5922000 	ldr	r2, [r2]
40013c00:	e3520000 	cmp	r2, #0
40013c04:	0affffd5 	beq	40013b60 <SystimeReader::SetFps(unsigned char) [clone .part.0]+0x80>
40013c08:	e3012936 	movw	r2, #6454	; 0x1936
40013c0c:	e58d2000 	str	r2, [sp]
40013c10:	e3a02013 	mov	r2, #19
40013c14:	eb0039d7 	bl	40022378 <net::udp_send(long, unsigned char const*, unsigned long, unsigned long, unsigned short)>
40013c18:	e5d43005 	ldrb	r3, [r4, #5]
40013c1c:	e3530000 	cmp	r3, #0
40013c20:	1affffd1 	bne	40013b6c <SystimeReader::SetFps(unsigned char) [clone .part.0]+0x8c>
40013c24:	e3043074 	movw	r3, #16500	; 0x4074
40013c28:	e3071770 	movw	r1, #30576	; 0x7770
40013c2c:	e3443003 	movt	r3, #16387	; 0x4003
40013c30:	e3441005 	movt	r1, #16389	; 0x4005
40013c34:	e5930000 	ldr	r0, [r3]
40013c38:	ebffe7f5 	bl	4000dc14 <LtcEtc::Send(midi::Timecode const*)>
40013c3c:	eaffffca 	b	40013b6c <SystimeReader::SetFps(unsigned char) [clone .part.0]+0x8c>

40013c40 <SystimeReader::SystimeReader(unsigned char, long)>:
40013c40:	e5802004 	str	r2, [r0, #4]
40013c44:	e307c6fc 	movw	ip, #30460	; 0x76fc
40013c48:	e344c005 	movt	ip, #16389	; 0x4005
40013c4c:	e3072770 	movw	r2, #30576	; 0x7770
40013c50:	e3442005 	movt	r2, #16389	; 0x4005
40013c54:	e5dcc000 	ldrb	ip, [ip]
40013c58:	e5c01000 	strb	r1, [r0]
40013c5c:	e3041090 	movw	r1, #16528	; 0x4090
40013c60:	e3441003 	movt	r1, #16387	; 0x4003
40013c64:	e5c2c004 	strb	ip, [r2, #4]
40013c68:	e3a02000 	mov	r2, #0
40013c6c:	e580200c 	str	r2, [r0, #12]
40013c70:	e3e0c000 	mvn	ip, #0
40013c74:	e580c008 	str	ip, [r0, #8]
40013c78:	e5802010 	str	r2, [r0, #16]
40013c7c:	e5802014 	str	r2, [r0, #20]
40013c80:	e5c02018 	strb	r2, [r0, #24]
40013c84:	e5810000 	str	r0, [r1]
40013c88:	e12fff1e 	bx	lr

40013c8c <SystimeReader::Start(bool)>:
40013c8c:	e30726fc 	movw	r2, #30460	; 0x76fc
40013c90:	e3013324 	movw	r3, #4900	; 0x1324
40013c94:	e3442005 	movt	r2, #16389	; 0x4005
40013c98:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40013c9c:	e1a07001 	mov	r7, r1
40013ca0:	e3443003 	movt	r3, #16387	; 0x4003
40013ca4:	e3031acc 	movw	r1, #15052	; 0x3acc
40013ca8:	e5d22000 	ldrb	r2, [r2]
40013cac:	e1a04000 	mov	r4, r0
40013cb0:	e3441001 	movt	r1, #16385	; 0x4001
40013cb4:	e3a00000 	mov	r0, #0
40013cb8:	e7935102 	ldr	r5, [r3, r2, lsl #2]
40013cbc:	eb006027 	bl	4002bd60 <irq_timer_set(irq_timers, void (*)(unsigned long))>
40013cc0:	e3a03b03 	mov	r3, #3072	; 0xc00
40013cc4:	e3a02000 	mov	r2, #0
40013cc8:	e34031c2 	movt	r3, #450	; 0x1c2
40013ccc:	e5832018 	str	r2, [r3, #24]
40013cd0:	e5835014 	str	r5, [r3, #20]
40013cd4:	e5932010 	ldr	r2, [r3, #16]
40013cd8:	e3822003 	orr	r2, r2, #3
40013cdc:	e5832010 	str	r2, [r3, #16]
40013ce0:	f1080080 	cpsie	i
40013ce4:	f57ff05f 	dmb	sy
40013ce8:	e3031f64 	movw	r1, #16228	; 0x3f64
40013cec:	e3046060 	movw	r6, #16480	; 0x4060
40013cf0:	e3441001 	movt	r1, #16385	; 0x4001
40013cf4:	e3050443 	movw	r0, #21571	; 0x5443
40013cf8:	e3446003 	movt	r6, #16387	; 0x4003
40013cfc:	eb003951 	bl	40022248 <net::udp_begin(unsigned short, void (*)(unsigned char const*, unsigned long, unsigned long, unsigned short))>
40013d00:	e3045088 	movw	r5, #16520	; 0x4088
40013d04:	e1a03000 	mov	r3, r0
40013d08:	e3445003 	movt	r5, #16387	; 0x4003
40013d0c:	e5960000 	ldr	r0, [r6]
40013d10:	e5843008 	str	r3, [r4, #8]
40013d14:	ebfff7b3 	bl	40011be8 <LtcOutputs::Init()>
40013d18:	e5950000 	ldr	r0, [r5]
40013d1c:	e3a01002 	mov	r1, #2
40013d20:	eb004877 	bl	40025f04 <Hardware::SetMode(hardware::ledblink::Mode)>
40013d24:	e3570000 	cmp	r7, #0
40013d28:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
40013d2c:	e5d43018 	ldrb	r3, [r4, #24]
40013d30:	e3530000 	cmp	r3, #0
40013d34:	18bd81f0 	popne	{r4, r5, r6, r7, r8, pc}
40013d38:	e5963000 	ldr	r3, [r6]
40013d3c:	e3a02001 	mov	r2, #1
40013d40:	e5c42018 	strb	r2, [r4, #24]
40013d44:	e3e02000 	mvn	r2, #0
40013d48:	e5950000 	ldr	r0, [r5]
40013d4c:	e3a01003 	mov	r1, #3
40013d50:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
40013d54:	e5c32002 	strb	r2, [r3, #2]
40013d58:	ea004869 	b	40025f04 <Hardware::SetMode(hardware::ledblink::Mode)>

40013d5c <SystimeReader::ActionStart()>:
40013d5c:	e5d03018 	ldrb	r3, [r0, #24]
40013d60:	e3530000 	cmp	r3, #0
40013d64:	112fff1e 	bxne	lr
40013d68:	e3042060 	movw	r2, #16480	; 0x4060
40013d6c:	e3043088 	movw	r3, #16520	; 0x4088
40013d70:	e3442003 	movt	r2, #16387	; 0x4003
40013d74:	e3a01001 	mov	r1, #1
40013d78:	e3443003 	movt	r3, #16387	; 0x4003
40013d7c:	e3e0c000 	mvn	ip, #0
40013d80:	e5922000 	ldr	r2, [r2]
40013d84:	e5c01018 	strb	r1, [r0, #24]
40013d88:	e3a01003 	mov	r1, #3
40013d8c:	e5930000 	ldr	r0, [r3]
40013d90:	e5c2c002 	strb	ip, [r2, #2]
40013d94:	ea00485a 	b	40025f04 <Hardware::SetMode(hardware::ledblink::Mode)>

40013d98 <SystimeReader::ActionStop()>:
40013d98:	e3042088 	movw	r2, #16520	; 0x4088
40013d9c:	e1a03000 	mov	r3, r0
40013da0:	e3442003 	movt	r2, #16387	; 0x4003
40013da4:	e3a01002 	mov	r1, #2
40013da8:	e5920000 	ldr	r0, [r2]
40013dac:	e3a02000 	mov	r2, #0
40013db0:	e5c32018 	strb	r2, [r3, #24]
40013db4:	ea004852 	b	40025f04 <Hardware::SetMode(hardware::ledblink::Mode)>

40013db8 <SystimeReader::HandleRequest(char*, unsigned short)>:
40013db8:	e3510000 	cmp	r1, #0
40013dbc:	e3a0c06c 	mov	ip, #108	; 0x6c
40013dc0:	e92d4030 	push	{r4, r5, lr}
40013dc4:	e1a05000 	mov	r5, r0
40013dc8:	05901010 	ldreq	r1, [r0, #16]
40013dcc:	e24dd00c 	sub	sp, sp, #12
40013dd0:	1580200c 	strne	r2, [r0, #12]
40013dd4:	e301231c 	movw	r2, #4892	; 0x131c
40013dd8:	e3442003 	movt	r2, #16387	; 0x4003
40013ddc:	e2413001 	sub	r3, r1, #1
40013de0:	15801010 	strne	r1, [r0, #16]
40013de4:	e2814003 	add	r4, r1, #3
40013de8:	ea000002 	b	40013df8 <SystimeReader::HandleRequest(char*, unsigned short)+0x40>
40013dec:	e1530004 	cmp	r3, r4
40013df0:	0a000005 	beq	40013e0c <SystimeReader::HandleRequest(char*, unsigned short)+0x54>
40013df4:	e5f2c001 	ldrb	ip, [r2, #1]!
40013df8:	e5f3e001 	ldrb	lr, [r3, #1]!
40013dfc:	e15e000c 	cmp	lr, ip
40013e00:	0afffff9 	beq	40013dec <SystimeReader::HandleRequest(char*, unsigned short)+0x34>
40013e04:	e28dd00c 	add	sp, sp, #12
40013e08:	e8bd8030 	pop	{r4, r5, pc}
40013e0c:	e595300c 	ldr	r3, [r5, #12]
40013e10:	e2432001 	sub	r2, r3, #1
40013e14:	e7d10002 	ldrb	r0, [r1, r2]
40013e18:	e350000a 	cmp	r0, #10
40013e1c:	0585200c 	streq	r2, [r5, #12]
40013e20:	01a03002 	moveq	r3, r2
40013e24:	e3530009 	cmp	r3, #9
40013e28:	0a00000f 	beq	40013e6c <SystimeReader::HandleRequest(char*, unsigned short)+0xb4>
40013e2c:	e3530008 	cmp	r3, #8
40013e30:	0a000019 	beq	40013e9c <SystimeReader::HandleRequest(char*, unsigned short)+0xe4>
40013e34:	e353000b 	cmp	r3, #11
40013e38:	1afffff1 	bne	40013e04 <SystimeReader::HandleRequest(char*, unsigned short)+0x4c>
40013e3c:	e59fc114 	ldr	ip, [pc, #276]	; 40013f58 <SystimeReader::HandleRequest(char*, unsigned short)+0x1a0>
40013e40:	e2810004 	add	r0, r1, #4
40013e44:	e3a03072 	mov	r3, #114	; 0x72
40013e48:	e2811009 	add	r1, r1, #9
40013e4c:	ea000002 	b	40013e5c <SystimeReader::HandleRequest(char*, unsigned short)+0xa4>
40013e50:	e1500001 	cmp	r0, r1
40013e54:	0a000034 	beq	40013f2c <SystimeReader::HandleRequest(char*, unsigned short)+0x174>
40013e58:	e4dc3001 	ldrb	r3, [ip], #1
40013e5c:	e4d02001 	ldrb	r2, [r0], #1
40013e60:	e1520003 	cmp	r2, r3
40013e64:	0afffff9 	beq	40013e50 <SystimeReader::HandleRequest(char*, unsigned short)+0x98>
40013e68:	eaffffe5 	b	40013e04 <SystimeReader::HandleRequest(char*, unsigned short)+0x4c>
40013e6c:	e59fc0e8 	ldr	ip, [pc, #232]	; 40013f5c <SystimeReader::HandleRequest(char*, unsigned short)+0x1a4>
40013e70:	e2813004 	add	r3, r1, #4
40013e74:	e3a02073 	mov	r2, #115	; 0x73
40013e78:	e2811009 	add	r1, r1, #9
40013e7c:	ea000002 	b	40013e8c <SystimeReader::HandleRequest(char*, unsigned short)+0xd4>
40013e80:	e1510003 	cmp	r1, r3
40013e84:	0a000010 	beq	40013ecc <SystimeReader::HandleRequest(char*, unsigned short)+0x114>
40013e88:	e4dc2001 	ldrb	r2, [ip], #1
40013e8c:	e4d30001 	ldrb	r0, [r3], #1
40013e90:	e1500002 	cmp	r0, r2
40013e94:	0afffff9 	beq	40013e80 <SystimeReader::HandleRequest(char*, unsigned short)+0xc8>
40013e98:	eaffffd9 	b	40013e04 <SystimeReader::HandleRequest(char*, unsigned short)+0x4c>
40013e9c:	e59fc0bc 	ldr	ip, [pc, #188]	; 40013f60 <SystimeReader::HandleRequest(char*, unsigned short)+0x1a8>
40013ea0:	e2813004 	add	r3, r1, #4
40013ea4:	e3a02073 	mov	r2, #115	; 0x73
40013ea8:	e2811008 	add	r1, r1, #8
40013eac:	ea000002 	b	40013ebc <SystimeReader::HandleRequest(char*, unsigned short)+0x104>
40013eb0:	e1510003 	cmp	r1, r3
40013eb4:	0a000015 	beq	40013f10 <SystimeReader::HandleRequest(char*, unsigned short)+0x158>
40013eb8:	e4dc2001 	ldrb	r2, [ip], #1
40013ebc:	e4d30001 	ldrb	r0, [r3], #1
40013ec0:	e1500002 	cmp	r0, r2
40013ec4:	0afffff9 	beq	40013eb0 <SystimeReader::HandleRequest(char*, unsigned short)+0xf8>
40013ec8:	eaffffcd 	b	40013e04 <SystimeReader::HandleRequest(char*, unsigned short)+0x4c>
40013ecc:	e5d53018 	ldrb	r3, [r5, #24]
40013ed0:	e3530000 	cmp	r3, #0
40013ed4:	1affffca 	bne	40013e04 <SystimeReader::HandleRequest(char*, unsigned short)+0x4c>
40013ed8:	e3042060 	movw	r2, #16480	; 0x4060
40013edc:	e3a01001 	mov	r1, #1
40013ee0:	e3442003 	movt	r2, #16387	; 0x4003
40013ee4:	e3043088 	movw	r3, #16520	; 0x4088
40013ee8:	e5c51018 	strb	r1, [r5, #24]
40013eec:	e3a01003 	mov	r1, #3
40013ef0:	e3443003 	movt	r3, #16387	; 0x4003
40013ef4:	e3e0c000 	mvn	ip, #0
40013ef8:	e5922000 	ldr	r2, [r2]
40013efc:	e5930000 	ldr	r0, [r3]
40013f00:	e5c2c002 	strb	ip, [r2, #2]
40013f04:	e28dd00c 	add	sp, sp, #12
40013f08:	e8bd4030 	pop	{r4, r5, lr}
40013f0c:	ea0047fc 	b	40025f04 <Hardware::SetMode(hardware::ledblink::Mode)>
40013f10:	e3043088 	movw	r3, #16520	; 0x4088
40013f14:	e3a02000 	mov	r2, #0
40013f18:	e3443003 	movt	r3, #16387	; 0x4003
40013f1c:	e3a01002 	mov	r1, #2
40013f20:	e5c52018 	strb	r2, [r5, #24]
40013f24:	e5930000 	ldr	r0, [r3]
40013f28:	eafffff5 	b	40013f04 <SystimeReader::HandleRequest(char*, unsigned short)+0x14c>
40013f2c:	e28d1007 	add	r1, sp, #7
40013f30:	ebffe26b 	bl	4000c8e4 <ltc::parse_timecode_rate(char const*, unsigned char&)>
40013f34:	e3500000 	cmp	r0, #0
40013f38:	0affffb1 	beq	40013e04 <SystimeReader::HandleRequest(char*, unsigned short)+0x4c>
40013f3c:	e5dd1007 	ldrb	r1, [sp, #7]
40013f40:	e5d53000 	ldrb	r3, [r5]
40013f44:	e1530001 	cmp	r3, r1
40013f48:	0affffad 	beq	40013e04 <SystimeReader::HandleRequest(char*, unsigned short)+0x4c>
40013f4c:	e1a00005 	mov	r0, r5
40013f50:	ebfffee2 	bl	40013ae0 <SystimeReader::SetFps(unsigned char) [clone .part.0]>
40013f54:	eaffffaa 	b	40013e04 <SystimeReader::HandleRequest(char*, unsigned short)+0x4c>
40013f58:	400314c1 	andmi	r1, r3, r1, asr #9
40013f5c:	400314d1 	ldrdmi	r1, [r3], -r1	; <UNPREDICTABLE>
40013f60:	400314c9 	andmi	r1, r3, r9, asr #9

40013f64 <SystimeReader::staticCallbackFunction(unsigned char const*, unsigned long, unsigned long, unsigned short)>:
40013f64:	e3043090 	movw	r3, #16528	; 0x4090
40013f68:	e1a0c001 	mov	ip, r1
40013f6c:	e3443003 	movt	r3, #16387	; 0x4003
40013f70:	e3a02000 	mov	r2, #0
40013f74:	e1a01002 	mov	r1, r2
40013f78:	e5933000 	ldr	r3, [r3]
40013f7c:	e5830010 	str	r0, [r3, #16]
40013f80:	e1a00003 	mov	r0, r3
40013f84:	e583c00c 	str	ip, [r3, #12]
40013f88:	eaffff8a 	b	40013db8 <SystimeReader::HandleRequest(char*, unsigned short)>

40013f8c <SystimeReader::Run()>:
40013f8c:	e92d4070 	push	{r4, r5, r6, lr}
40013f90:	e24dd008 	sub	sp, sp, #8
40013f94:	e1a04000 	mov	r4, r0
40013f98:	e3a01000 	mov	r1, #0
40013f9c:	e1a0000d 	mov	r0, sp
40013fa0:	eb006466 	bl	4002d140 <gettimeofday>
40013fa4:	e59d0000 	ldr	r0, [sp]
40013fa8:	e3072770 	movw	r2, #30576	; 0x7770
40013fac:	e3442005 	movt	r2, #16389	; 0x4005
40013fb0:	e30d3c50 	movw	r3, #56400	; 0xdc50
40013fb4:	e3443002 	movt	r3, #16386	; 0x4002
40013fb8:	e5d21004 	ldrb	r1, [r2, #4]
40013fbc:	e59dc004 	ldr	ip, [sp, #4]
40013fc0:	e7d33001 	ldrb	r3, [r3, r1]
40013fc4:	e5941004 	ldr	r1, [r4, #4]
40013fc8:	e003039c 	mul	r3, ip, r3
40013fcc:	e0801001 	add	r1, r0, r1
40013fd0:	e30d0e83 	movw	r0, #56963	; 0xde83
40013fd4:	e344031b 	movt	r0, #17179	; 0x431b
40013fd8:	e0830390 	umull	r0, r3, r0, r3
40013fdc:	e1a03923 	lsr	r3, r3, #18
40013fe0:	e5c23000 	strb	r3, [r2]
40013fe4:	e5943014 	ldr	r3, [r4, #20]
40013fe8:	e1530001 	cmp	r3, r1
40013fec:	1a00001c 	bne	40014064 <SystimeReader::Run()+0xd8>
40013ff0:	e5d43018 	ldrb	r3, [r4, #24]
40013ff4:	e3530000 	cmp	r3, #0
40013ff8:	0a000005 	beq	40014014 <SystimeReader::Run()+0x88>
40013ffc:	f57ff05f 	dmb	sy
40014000:	e3074775 	movw	r4, #30581	; 0x7775
40014004:	e3444005 	movt	r4, #16389	; 0x4005
40014008:	e5d43000 	ldrb	r3, [r4]
4001400c:	e3530000 	cmp	r3, #0
40014010:	1a000001 	bne	4001401c <SystimeReader::Run()+0x90>
40014014:	e28dd008 	add	sp, sp, #8
40014018:	e8bd8070 	pop	{r4, r5, r6, pc}
4001401c:	e30756ec 	movw	r5, #30444	; 0x76ec
40014020:	e3445005 	movt	r5, #16389	; 0x4005
40014024:	e5d56004 	ldrb	r6, [r5, #4]
40014028:	e3560000 	cmp	r6, #0
4001402c:	0a000036 	beq	4001410c <SystimeReader::Run()+0x180>
40014030:	e5d53003 	ldrb	r3, [r5, #3]
40014034:	e3530000 	cmp	r3, #0
40014038:	0a00002e 	beq	400140f8 <SystimeReader::Run()+0x16c>
4001403c:	e5d53005 	ldrb	r3, [r5, #5]
40014040:	e3530000 	cmp	r3, #0
40014044:	0a000026 	beq	400140e4 <SystimeReader::Run()+0x158>
40014048:	ebfff083 	bl	4001025c <LtcOutputs::Get()>
4001404c:	e3071770 	movw	r1, #30576	; 0x7770
40014050:	e3441005 	movt	r1, #16389	; 0x4005
40014054:	ebfff70b 	bl	40011c88 <LtcOutputs::Update(ltc::TimeCode const*)>
40014058:	e3a03000 	mov	r3, #0
4001405c:	e5c43000 	strb	r3, [r4]
40014060:	eaffffeb 	b	40014014 <SystimeReader::Run()+0x88>
40014064:	e5841014 	str	r1, [r4, #20]
40014068:	e3083889 	movw	r3, #34953	; 0x8889
4001406c:	e3483888 	movt	r3, #34952	; 0x8888
40014070:	e35c0000 	cmp	ip, #0
40014074:	e080e193 	umull	lr, r0, r3, r1
40014078:	e1a002a0 	lsr	r0, r0, #5
4001407c:	e083e093 	umull	lr, r3, r3, r0
40014080:	e30aeaab 	movw	lr, #43691	; 0xaaab
40014084:	e1a032a3 	lsr	r3, r3, #5
40014088:	e34aeaaa 	movt	lr, #43690	; 0xaaaa
4001408c:	e08e539e 	umull	r5, lr, lr, r3
40014090:	e3a0503c 	mov	r5, #60	; 0x3c
40014094:	e0611095 	mls	r1, r5, r0, r1
40014098:	e1a0e22e 	lsr	lr, lr, #4
4001409c:	e5c21001 	strb	r1, [r2, #1]
400140a0:	e3a01018 	mov	r1, #24
400140a4:	e0600395 	mls	r0, r5, r3, r0
400140a8:	e0633e91 	mls	r3, r1, lr, r3
400140ac:	e5c20002 	strb	r0, [r2, #2]
400140b0:	e5c23003 	strb	r3, [r2, #3]
400140b4:	1affffcd 	bne	40013ff0 <SystimeReader::Run()+0x64>
400140b8:	e3a03b03 	mov	r3, #3072	; 0xc00
400140bc:	e3072775 	movw	r2, #30581	; 0x7775
400140c0:	e34031c2 	movt	r3, #450	; 0x1c2
400140c4:	e3a00001 	mov	r0, #1
400140c8:	e3442005 	movt	r2, #16389	; 0x4005
400140cc:	e583c018 	str	ip, [r3, #24]
400140d0:	e5931010 	ldr	r1, [r3, #16]
400140d4:	e3811003 	orr	r1, r1, #3
400140d8:	e5831010 	str	r1, [r3, #16]
400140dc:	e5c20000 	strb	r0, [r2]
400140e0:	eaffffc2 	b	40013ff0 <SystimeReader::Run()+0x64>
400140e4:	ebfff054 	bl	4001023c <LtcEtc::Get()>
400140e8:	e3071770 	movw	r1, #30576	; 0x7770
400140ec:	e3441005 	movt	r1, #16389	; 0x4005
400140f0:	ebffe6c7 	bl	4000dc14 <LtcEtc::Send(midi::Timecode const*)>
400140f4:	eaffffd3 	b	40014048 <SystimeReader::Run()+0xbc>
400140f8:	ebfff04b 	bl	4001022c <ArtNetNode::Get()>
400140fc:	e3071770 	movw	r1, #30576	; 0x7770
40014100:	e3441005 	movt	r1, #16389	; 0x4005
40014104:	ebfff02f 	bl	400101c8 <ArtNetNode::SendTimeCode(artnet::TimeCode const*)>
40014108:	eaffffcb 	b	4001403c <SystimeReader::Run()+0xb0>
4001410c:	ebfff04e 	bl	4001024c <LtcSender::Get()>
40014110:	e3071770 	movw	r1, #30576	; 0x7770
40014114:	e1a02006 	mov	r2, r6
40014118:	e3441005 	movt	r1, #16389	; 0x4005
4001411c:	eb00013e 	bl	4001461c <LtcSender::SetTimeCode(ltc::TimeCode const*, bool)>
40014120:	eaffffc2 	b	40014030 <SystimeReader::Run()+0xa4>

40014124 <arm_timer_handler()>:
40014124:	e307277c 	movw	r2, #30588	; 0x777c
40014128:	e3073784 	movw	r3, #30596	; 0x7784
4001412c:	e3442005 	movt	r2, #16389	; 0x4005
40014130:	e3071780 	movw	r1, #30592	; 0x7780
40014134:	e3443005 	movt	r3, #16389	; 0x4005
40014138:	e5920000 	ldr	r0, [r2]
4001413c:	e593c000 	ldr	ip, [r3]
40014140:	e3441005 	movt	r1, #16389	; 0x4005
40014144:	e040000c 	sub	r0, r0, ip
40014148:	e5810000 	str	r0, [r1]
4001414c:	e5922000 	ldr	r2, [r2]
40014150:	e5832000 	str	r2, [r3]
40014154:	e12fff1e 	bx	lr

40014158 <TCNetReader::Start()>:
40014158:	e92d4010 	push	{r4, lr}
4001415c:	e1a04000 	mov	r4, r0
40014160:	e3040124 	movw	r0, #16676	; 0x4124
40014164:	e3440001 	movt	r0, #16385	; 0x4001
40014168:	eb005f36 	bl	4002be48 <irq_timer_arm_physical_set(void (*)())>
4001416c:	ebffb3f2 	bl	4000113c <irq_handler_init()>
40014170:	e30415a0 	movw	r1, #17824	; 0x45a0
40014174:	e3000aca 	movw	r0, #2762	; 0xaca
40014178:	e3441001 	movt	r1, #16385	; 0x4001
4001417c:	eb003831 	bl	40022248 <net::udp_begin(unsigned short, void (*)(unsigned char const*, unsigned long, unsigned long, unsigned short))>
40014180:	e584000c 	str	r0, [r4, #12]
40014184:	e3043060 	movw	r3, #16480	; 0x4060
40014188:	e3443003 	movt	r3, #16387	; 0x4003
4001418c:	e5930000 	ldr	r0, [r3]
40014190:	ebfff694 	bl	40011be8 <LtcOutputs::Init()>
40014194:	e3043088 	movw	r3, #16520	; 0x4088
40014198:	e3a01002 	mov	r1, #2
4001419c:	e3443003 	movt	r3, #16387	; 0x4003
400141a0:	e8bd4010 	pop	{r4, lr}
400141a4:	e5930000 	ldr	r0, [r3]
400141a8:	ea004755 	b	40025f04 <Hardware::SetMode(hardware::ledblink::Mode)>

400141ac <TCNetReader::Handler(tcnet::TimeCode const*)>:
400141ac:	e307377c 	movw	r3, #30588	; 0x777c
400141b0:	e3443005 	movt	r3, #16389	; 0x4005
400141b4:	e92d40f0 	push	{r4, r5, r6, r7, lr}
400141b8:	e1a04000 	mov	r4, r0
400141bc:	e5932000 	ldr	r2, [r3]
400141c0:	e24dd00c 	sub	sp, sp, #12
400141c4:	e5900008 	ldr	r0, [r0, #8]
400141c8:	e2822001 	add	r2, r2, #1
400141cc:	e5832000 	str	r2, [r3]
400141d0:	e5913000 	ldr	r3, [r1]
400141d4:	e1500003 	cmp	r0, r3
400141d8:	0a000045 	beq	400142f4 <TCNetReader::Handler(tcnet::TimeCode const*)+0x148>
400141dc:	e5843008 	str	r3, [r4, #8]
400141e0:	e30776ec 	movw	r7, #30444	; 0x76ec
400141e4:	e3447005 	movt	r7, #16389	; 0x4005
400141e8:	e1a06001 	mov	r6, r1
400141ec:	e5d73004 	ldrb	r3, [r7, #4]
400141f0:	e3530000 	cmp	r3, #0
400141f4:	0a000034 	beq	400142cc <TCNetReader::Handler(tcnet::TimeCode const*)+0x120>
400141f8:	e5d73003 	ldrb	r3, [r7, #3]
400141fc:	e3530000 	cmp	r3, #0
40014200:	12865005 	addne	r5, r6, #5
40014204:	0a000014 	beq	4001425c <TCNetReader::Handler(tcnet::TimeCode const*)+0xb0>
40014208:	e5d73005 	ldrb	r3, [r7, #5]
4001420c:	e3530000 	cmp	r3, #0
40014210:	0a00000b 	beq	40014244 <TCNetReader::Handler(tcnet::TimeCode const*)+0x98>
40014214:	e1a03006 	mov	r3, r6
40014218:	e4d32001 	ldrb	r2, [r3], #1
4001421c:	e1530005 	cmp	r3, r5
40014220:	e4c42001 	strb	r2, [r4], #1
40014224:	1afffffb 	bne	40014218 <TCNetReader::Handler(tcnet::TimeCode const*)+0x6c>
40014228:	e3043060 	movw	r3, #16480	; 0x4060
4001422c:	e1a01006 	mov	r1, r6
40014230:	e3443003 	movt	r3, #16387	; 0x4003
40014234:	e5930000 	ldr	r0, [r3]
40014238:	e28dd00c 	add	sp, sp, #12
4001423c:	e8bd40f0 	pop	{r4, r5, r6, r7, lr}
40014240:	eafff690 	b	40011c88 <LtcOutputs::Update(ltc::TimeCode const*)>
40014244:	e3043074 	movw	r3, #16500	; 0x4074
40014248:	e1a01004 	mov	r1, r4
4001424c:	e3443003 	movt	r3, #16387	; 0x4003
40014250:	e5930000 	ldr	r0, [r3]
40014254:	ebffe66e 	bl	4000dc14 <LtcEtc::Send(midi::Timecode const*)>
40014258:	eaffffed 	b	40014214 <TCNetReader::Handler(tcnet::TimeCode const*)+0x68>
4001425c:	e30736dc 	movw	r3, #30428	; 0x76dc
40014260:	e2865005 	add	r5, r6, #5
40014264:	e3443005 	movt	r3, #16389	; 0x4005
40014268:	e593c000 	ldr	ip, [r3]
4001426c:	e1a03006 	mov	r3, r6
40014270:	e28c2e1e 	add	r2, ip, #480	; 0x1e0
40014274:	e2822001 	add	r2, r2, #1
40014278:	e4d31001 	ldrb	r1, [r3], #1
4001427c:	e1550003 	cmp	r5, r3
40014280:	e4c21001 	strb	r1, [r2], #1
40014284:	1afffffb 	bne	40014278 <TCNetReader::Handler(tcnet::TimeCode const*)+0xcc>
40014288:	e59c0000 	ldr	r0, [ip]
4001428c:	e30a373c 	movw	r3, #42812	; 0xa73c
40014290:	e3443005 	movt	r3, #16389	; 0x4005
40014294:	e28c1e1d 	add	r1, ip, #464	; 0x1d0
40014298:	e2811003 	add	r1, r1, #3
4001429c:	e5932000 	ldr	r2, [r3]
400142a0:	e59c3048 	ldr	r3, [ip, #72]	; 0x48
400142a4:	e3520000 	cmp	r2, #0
400142a8:	0affffd6 	beq	40014208 <TCNetReader::Handler(tcnet::TimeCode const*)+0x5c>
400142ac:	e3012936 	movw	r2, #6454	; 0x1936
400142b0:	e58d2000 	str	r2, [sp]
400142b4:	e3a02013 	mov	r2, #19
400142b8:	eb00382e 	bl	40022378 <net::udp_send(long, unsigned char const*, unsigned long, unsigned long, unsigned short)>
400142bc:	e5d73005 	ldrb	r3, [r7, #5]
400142c0:	e3530000 	cmp	r3, #0
400142c4:	1affffd2 	bne	40014214 <TCNetReader::Handler(tcnet::TimeCode const*)+0x68>
400142c8:	eaffffdd 	b	40014244 <TCNetReader::Handler(tcnet::TimeCode const*)+0x98>
400142cc:	e3073790 	movw	r3, #30608	; 0x7790
400142d0:	e3a02001 	mov	r2, #1
400142d4:	e3443005 	movt	r3, #16389	; 0x4005
400142d8:	e5930000 	ldr	r0, [r3]
400142dc:	eb0000ce 	bl	4001461c <LtcSender::SetTimeCode(ltc::TimeCode const*, bool)>
400142e0:	e5d73003 	ldrb	r3, [r7, #3]
400142e4:	e3530000 	cmp	r3, #0
400142e8:	12865005 	addne	r5, r6, #5
400142ec:	1affffc5 	bne	40014208 <TCNetReader::Handler(tcnet::TimeCode const*)+0x5c>
400142f0:	eaffffd9 	b	4001425c <TCNetReader::Handler(tcnet::TimeCode const*)+0xb0>
400142f4:	e28dd00c 	add	sp, sp, #12
400142f8:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}

400142fc <TCNetReader::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)>:
400142fc:	e30104d8 	movw	r0, #5336	; 0x14d8
40014300:	e2413001 	sub	r3, r1, #1
40014304:	e92d4010 	push	{r4, lr}
40014308:	e3a0c074 	mov	ip, #116	; 0x74
4001430c:	e3440003 	movt	r0, #16387	; 0x4003
40014310:	e2814005 	add	r4, r1, #5
40014314:	ea000000 	b	4001431c <TCNetReader::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x20>
40014318:	e5f0c001 	ldrb	ip, [r0, #1]!
4001431c:	e5f3e001 	ldrb	lr, [r3, #1]!
40014320:	e15e000c 	cmp	lr, ip
40014324:	18bd8010 	popne	{r4, pc}
40014328:	e1540003 	cmp	r4, r3
4001432c:	1afffff9 	bne	40014318 <TCNetReader::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x1c>
40014330:	e2423001 	sub	r3, r2, #1
40014334:	e7d10003 	ldrb	r0, [r1, r3]
40014338:	e350000a 	cmp	r0, #10
4001433c:	01a02003 	moveq	r2, r3
40014340:	e352000d 	cmp	r2, #13
40014344:	0a000016 	beq	400143a4 <TCNetReader::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xa8>
40014348:	e3520010 	cmp	r2, #16
4001434c:	18bd8010 	popne	{r4, pc}
40014350:	e30134e0 	movw	r3, #5344	; 0x14e0
40014354:	e281c00e 	add	ip, r1, #14
40014358:	e3443003 	movt	r3, #16387	; 0x4003
4001435c:	e3a02074 	mov	r2, #116	; 0x74
40014360:	ea000000 	b	40014368 <TCNetReader::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x6c>
40014364:	e5f32001 	ldrb	r2, [r3, #1]!
40014368:	e5f40001 	ldrb	r0, [r4, #1]!
4001436c:	e1500002 	cmp	r0, r2
40014370:	18bd8010 	popne	{r4, pc}
40014374:	e15c0004 	cmp	ip, r4
40014378:	1afffff9 	bne	40014364 <TCNetReader::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x68>
4001437c:	e5d1300f 	ldrb	r3, [r1, #15]
40014380:	e3042068 	movw	r2, #16488	; 0x4068
40014384:	e3442003 	movt	r2, #16387	; 0x4003
40014388:	e20330df 	and	r3, r3, #223	; 0xdf
4001438c:	e5922000 	ldr	r2, [r2]
40014390:	e2433059 	sub	r3, r3, #89	; 0x59
40014394:	e16f3f13 	clz	r3, r3
40014398:	e1a032a3 	lsr	r3, r3, #5
4001439c:	e5c23035 	strb	r3, [r2, #53]	; 0x35
400143a0:	ea00004a 	b	400144d0 <TCNetReader::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x1d4>
400143a4:	e2812006 	add	r2, r1, #6
400143a8:	e30104f4 	movw	r0, #5364	; 0x14f4
400143ac:	e3440003 	movt	r0, #16387	; 0x4003
400143b0:	e281400c 	add	r4, r1, #12
400143b4:	e1a03002 	mov	r3, r2
400143b8:	e3a0c06c 	mov	ip, #108	; 0x6c
400143bc:	ea000002 	b	400143cc <TCNetReader::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xd0>
400143c0:	e1530004 	cmp	r3, r4
400143c4:	0a00001e 	beq	40014444 <TCNetReader::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x148>
400143c8:	e5f0c001 	ldrb	ip, [r0, #1]!
400143cc:	e4d3e001 	ldrb	lr, [r3], #1
400143d0:	e15c000e 	cmp	ip, lr
400143d4:	0afffff9 	beq	400143c0 <TCNetReader::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xc4>
400143d8:	e59fc1bc 	ldr	ip, [pc, #444]	; 4001459c <TCNetReader::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x2a0>
400143dc:	e281e00b 	add	lr, r1, #11
400143e0:	e3a00074 	mov	r0, #116	; 0x74
400143e4:	ea000000 	b	400143ec <TCNetReader::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xf0>
400143e8:	e4dc0001 	ldrb	r0, [ip], #1
400143ec:	e4d23001 	ldrb	r3, [r2], #1
400143f0:	e1530000 	cmp	r3, r0
400143f4:	18bd8010 	popne	{r4, pc}
400143f8:	e15e0002 	cmp	lr, r2
400143fc:	1afffff9 	bne	400143e8 <TCNetReader::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xec>
40014400:	e5d1300b 	ldrb	r3, [r1, #11]
40014404:	e3530032 	cmp	r3, #50	; 0x32
40014408:	0a000049 	beq	40014534 <TCNetReader::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x238>
4001440c:	e3530033 	cmp	r3, #51	; 0x33
40014410:	18bd8010 	popne	{r4, pc}
40014414:	e5d1300c 	ldrb	r3, [r1, #12]
40014418:	e3530030 	cmp	r3, #48	; 0x30
4001441c:	18bd8010 	popne	{r4, pc}
40014420:	e3051555 	movw	r1, #21845	; 0x5555
40014424:	e3043068 	movw	r3, #16488	; 0x4068
40014428:	e3441205 	movt	r1, #16901	; 0x4205
4001442c:	e3a02003 	mov	r2, #3
40014430:	e3443003 	movt	r3, #16387	; 0x4003
40014434:	e5933000 	ldr	r3, [r3]
40014438:	e583102c 	str	r1, [r3, #44]	; 0x2c
4001443c:	e5c32034 	strb	r2, [r3, #52]	; 0x34
40014440:	ea000022 	b	400144d0 <TCNetReader::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x1d4>
40014444:	e5d1200c 	ldrb	r2, [r1, #12]
40014448:	e3823020 	orr	r3, r2, #32
4001444c:	e3530034 	cmp	r3, #52	; 0x34
40014450:	9a000013 	bls	400144a4 <TCNetReader::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x1a8>
40014454:	e2433061 	sub	r3, r3, #97	; 0x61
40014458:	e6ef2073 	uxtb	r2, r3
4001445c:	e352000c 	cmp	r2, #12
40014460:	8a000011 	bhi	400144ac <TCNetReader::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x1b0>
40014464:	e353000c 	cmp	r3, #12
40014468:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
4001446c:	ea00000e 	b	400144ac <TCNetReader::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x1b0>
40014470:	40014514 	andmi	r4, r1, r4, lsl r5
40014474:	40014524 	andmi	r4, r1, r4, lsr #10
40014478:	40014504 	andmi	r4, r1, r4, lsl #10
4001447c:	400144ac 	andmi	r4, r1, ip, lsr #9
40014480:	400144ac 	andmi	r4, r1, ip, lsr #9
40014484:	400144ac 	andmi	r4, r1, ip, lsr #9
40014488:	400144ac 	andmi	r4, r1, ip, lsr #9
4001448c:	400144ac 	andmi	r4, r1, ip, lsr #9
40014490:	400144ac 	andmi	r4, r1, ip, lsr #9
40014494:	400144ac 	andmi	r4, r1, ip, lsr #9
40014498:	400144ac 	andmi	r4, r1, ip, lsr #9
4001449c:	400144ac 	andmi	r4, r1, ip, lsr #9
400144a0:	400144f4 	strdmi	r4, [r1], -r4	; <UNPREDICTABLE>
400144a4:	e3530030 	cmp	r3, #48	; 0x30
400144a8:	8a00000a 	bhi	400144d8 <TCNetReader::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x1dc>
400144ac:	e3a0209a 	mov	r2, #154	; 0x9a
400144b0:	e3a03038 	mov	r3, #56	; 0x38
400144b4:	e3a00008 	mov	r0, #8
400144b8:	e3041068 	movw	r1, #16488	; 0x4068
400144bc:	e3441003 	movt	r1, #16387	; 0x4003
400144c0:	e5911000 	ldr	r1, [r1]
400144c4:	e5810030 	str	r0, [r1, #48]	; 0x30
400144c8:	e5813020 	str	r3, [r1, #32]
400144cc:	e5812024 	str	r2, [r1, #36]	; 0x24
400144d0:	e8bd4010 	pop	{r4, lr}
400144d4:	eaffede7 	b	4000fc78 <tcnet::display::show()>
400144d8:	e2420031 	sub	r0, r2, #49	; 0x31
400144dc:	e3a01006 	mov	r1, #6
400144e0:	e242302b 	sub	r3, r2, #43	; 0x2b
400144e4:	e0020091 	mul	r2, r1, r0
400144e8:	e1a03103 	lsl	r3, r3, #2
400144ec:	e282206a 	add	r2, r2, #106	; 0x6a
400144f0:	eafffff0 	b	400144b8 <TCNetReader::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x1bc>
400144f4:	e3a0208e 	mov	r2, #142	; 0x8e
400144f8:	e3a03030 	mov	r3, #48	; 0x30
400144fc:	e3a00006 	mov	r0, #6
40014500:	eaffffec 	b	400144b8 <TCNetReader::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x1bc>
40014504:	e3a02094 	mov	r2, #148	; 0x94
40014508:	e3a03034 	mov	r3, #52	; 0x34
4001450c:	e3a00007 	mov	r0, #7
40014510:	eaffffe8 	b	400144b8 <TCNetReader::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x1bc>
40014514:	e3a02082 	mov	r2, #130	; 0x82
40014518:	e3a03028 	mov	r3, #40	; 0x28
4001451c:	e3a00004 	mov	r0, #4
40014520:	eaffffe4 	b	400144b8 <TCNetReader::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x1bc>
40014524:	e3a02088 	mov	r2, #136	; 0x88
40014528:	e3a0302c 	mov	r3, #44	; 0x2c
4001452c:	e3a00005 	mov	r0, #5
40014530:	eaffffe0 	b	400144b8 <TCNetReader::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x1bc>
40014534:	e5d1300c 	ldrb	r3, [r1, #12]
40014538:	e3530035 	cmp	r3, #53	; 0x35
4001453c:	e243301c 	sub	r3, r3, #28
40014540:	0a000009 	beq	4001456c <TCNetReader::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x270>
40014544:	e353001d 	cmp	r3, #29
40014548:	0a00000d 	beq	40014584 <TCNetReader::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x288>
4001454c:	e3530018 	cmp	r3, #24
40014550:	1affffde 	bne	400144d0 <TCNetReader::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x1d4>
40014554:	e30a1aab 	movw	r1, #43691	; 0xaaab
40014558:	e3043068 	movw	r3, #16488	; 0x4068
4001455c:	e3441226 	movt	r1, #16934	; 0x4226
40014560:	e3a02000 	mov	r2, #0
40014564:	e3443003 	movt	r3, #16387	; 0x4003
40014568:	eaffffb1 	b	40014434 <TCNetReader::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x138>
4001456c:	e3a01000 	mov	r1, #0
40014570:	e3043068 	movw	r3, #16488	; 0x4068
40014574:	e3441220 	movt	r1, #16928	; 0x4220
40014578:	e3a02001 	mov	r2, #1
4001457c:	e3443003 	movt	r3, #16387	; 0x4003
40014580:	eaffffab 	b	40014434 <TCNetReader::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x138>
40014584:	e3071780 	movw	r1, #30592	; 0x7780
40014588:	e3043068 	movw	r3, #16488	; 0x4068
4001458c:	e3441205 	movt	r1, #16901	; 0x4205
40014590:	e3a02002 	mov	r2, #2
40014594:	e3443003 	movt	r3, #16387	; 0x4003
40014598:	eaffffa5 	b	40014434 <TCNetReader::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x138>
4001459c:	400314ed 	andmi	r1, r3, sp, ror #9

400145a0 <TCNetReader::staticCallbackFunctionInput(unsigned char const*, unsigned long, unsigned long, unsigned short)>:
400145a0:	e304c058 	movw	ip, #16472	; 0x4058
400145a4:	e344c003 	movt	ip, #16387	; 0x4003
400145a8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
400145ac:	e24dd00c 	sub	sp, sp, #12
400145b0:	e1a0e000 	mov	lr, r0
400145b4:	e59c0000 	ldr	r0, [ip]
400145b8:	e1a0c002 	mov	ip, r2
400145bc:	e58d3000 	str	r3, [sp]
400145c0:	e1a02001 	mov	r2, r1
400145c4:	e1a0300c 	mov	r3, ip
400145c8:	e1a0100e 	mov	r1, lr
400145cc:	ebffff4a 	bl	400142fc <TCNetReader::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)>
400145d0:	e28dd00c 	add	sp, sp, #12
400145d4:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

400145d8 <LtcSender::LtcSender(unsigned long)>:
400145d8:	e92d4070 	push	{r4, r5, r6, lr}
400145dc:	e1a04000 	mov	r4, r0
400145e0:	e1a05001 	mov	r5, r1
400145e4:	eb000273 	bl	40014fb8 <LtcEncoder::LtcEncoder()>
400145e8:	e3a030ff 	mov	r3, #255	; 0xff
400145ec:	e5843014 	str	r3, [r4, #20]
400145f0:	e59f301c 	ldr	r3, [pc, #28]	; 40014614 <LtcSender::LtcSender(unsigned long)+0x3c>
400145f4:	e5834000 	str	r4, [r3]
400145f8:	e2453002 	sub	r3, r5, #2
400145fc:	e353001d 	cmp	r3, #29
40014600:	8a000001 	bhi	4001460c <LtcSender::LtcSender(unsigned long)+0x34>
40014604:	e6ef0075 	uxtb	r0, r5
40014608:	eb00594c 	bl	4002ab40 <h3_codec_set_volume(unsigned char)>
4001460c:	e1a00004 	mov	r0, r4
40014610:	e8bd8070 	pop	{r4, r5, r6, pc}
40014614:	40057790 	mulmi	r5, r0, r7

40014618 <LtcSender::Start()>:
40014618:	ea00594c 	b	4002ab50 <h3_codec_begin()>

4001461c <LtcSender::SetTimeCode(ltc::TimeCode const*, bool)>:
4001461c:	e92d4070 	push	{r4, r5, r6, lr}
40014620:	e1a04000 	mov	r4, r0
40014624:	e59f6040 	ldr	r6, [pc, #64]	; 4001466c <LtcSender::SetTimeCode(ltc::TimeCode const*, bool)+0x50>
40014628:	e1a05001 	mov	r5, r1
4001462c:	eb0002aa 	bl	400150dc <LtcEncoder::SetTimeCode(ltc::TimeCode const*, bool)>
40014630:	e5960000 	ldr	r0, [r6]
40014634:	e3a01000 	mov	r1, #0
40014638:	eb000268 	bl	40014fe0 <LtcEncoder::Encode(void*)>
4001463c:	e5d53004 	ldrb	r3, [r5, #4]
40014640:	e5942014 	ldr	r2, [r4, #20]
40014644:	e1520003 	cmp	r2, r3
40014648:	0a000004 	beq	40014660 <LtcSender::SetTimeCode(ltc::TimeCode const*, bool)+0x44>
4001464c:	e5843014 	str	r3, [r4, #20]
40014650:	e5960000 	ldr	r0, [r6]
40014654:	eb000297 	bl	400150b8 <LtcEncoder::GetBufferSize()>
40014658:	eb0059fd 	bl	4002ae54 <h3_codec_set_buffer_length(unsigned long)>
4001465c:	ebffb1c5 	bl	40000d78 <h3_codec_start()>
40014660:	e8bd4070 	pop	{r4, r5, r6, lr}
40014664:	e59f0004 	ldr	r0, [pc, #4]	; 40014670 <LtcSender::SetTimeCode(ltc::TimeCode const*, bool)+0x54>
40014668:	ea005a08 	b	4002ae90 <h3_codec_push_data(short const*)>
4001466c:	40057798 	mulmi	r5, r8, r7
40014670:	4005779c 	mulmi	r5, ip, r7

40014674 <message_timer(long)>:
40014674:	e59f300c 	ldr	r3, [pc, #12]	; 40014688 <message_timer(long)+0x14>
40014678:	e3a02000 	mov	r2, #0
4001467c:	e59f0008 	ldr	r0, [pc, #8]	; 4001468c <message_timer(long)+0x18>
40014680:	e5c32000 	strb	r2, [r3]
40014684:	ea004d40 	b	40027b8c <SoftwareTimerDelete(long&)>
40014688:	40057794 	mulmi	r5, r4, r7
4001468c:	400336cc 	andmi	r3, r3, ip, asr #13

40014690 <LtcDisplayRgb::LtcDisplayRgb(ltcdisplayrgb::Type, ltcdisplayrgb::WS28xxType)>:
40014690:	e8800006 	stm	r0, {r1, r2}
40014694:	e3e02000 	mvn	r2, #0
40014698:	e3a0103c 	mov	r1, #60	; 0x3c
4001469c:	e5c02008 	strb	r2, [r0, #8]
400146a0:	e580200c 	str	r2, [r0, #12]
400146a4:	e3a02006 	mov	r2, #6
400146a8:	e5802010 	str	r2, [r0, #16]
400146ac:	e3a0200e 	mov	r2, #14
400146b0:	e5802014 	str	r2, [r0, #20]
400146b4:	e3a020ff 	mov	r2, #255	; 0xff
400146b8:	e5802030 	str	r2, [r0, #48]	; 0x30
400146bc:	e3a02000 	mov	r2, #0
400146c0:	e5802034 	str	r2, [r0, #52]	; 0x34
400146c4:	e5802038 	str	r2, [r0, #56]	; 0x38
400146c8:	e580204c 	str	r2, [r0, #76]	; 0x4c
400146cc:	e59f203c 	ldr	r2, [pc, #60]	; 40014710 <LtcDisplayRgb::LtcDisplayRgb(ltcdisplayrgb::Type, ltcdisplayrgb::WS28xxType)+0x80>
400146d0:	e5c01044 	strb	r1, [r0, #68]	; 0x44
400146d4:	e3a01002 	mov	r1, #2
400146d8:	e5820000 	str	r0, [r2]
400146dc:	e3a028ff 	mov	r2, #16711680	; 0xff0000
400146e0:	e5802018 	str	r2, [r0, #24]
400146e4:	e5802024 	str	r2, [r0, #36]	; 0x24
400146e8:	e59f2024 	ldr	r2, [pc, #36]	; 40014714 <LtcDisplayRgb::LtcDisplayRgb(ltcdisplayrgb::Type, ltcdisplayrgb::WS28xxType)+0x84>
400146ec:	e5801048 	str	r1, [r0, #72]	; 0x48
400146f0:	e59f1020 	ldr	r1, [pc, #32]	; 40014718 <LtcDisplayRgb::LtcDisplayRgb(ltcdisplayrgb::Type, ltcdisplayrgb::WS28xxType)+0x88>
400146f4:	e5802028 	str	r2, [r0, #40]	; 0x28
400146f8:	e59f201c 	ldr	r2, [pc, #28]	; 4001471c <LtcDisplayRgb::LtcDisplayRgb(ltcdisplayrgb::Type, ltcdisplayrgb::WS28xxType)+0x8c>
400146fc:	e580101c 	str	r1, [r0, #28]
40014700:	e3e014ff 	mvn	r1, #-16777216	; 0xff000000
40014704:	e5801020 	str	r1, [r0, #32]
40014708:	e580202c 	str	r2, [r0, #44]	; 0x2c
4001470c:	e12fff1e 	bx	lr
40014710:	40034078 	andmi	r4, r3, r8, ror r0
40014714:	00808080 	addeq	r8, r0, r0, lsl #1
40014718:	00fffc00 	rscseq	pc, pc, r0, lsl #24
4001471c:	00707070 	rsbseq	r7, r0, r0, ror r0

40014720 <LtcDisplayRgb::SetMessage(char const*, unsigned long)>:
40014720:	e3520008 	cmp	r2, #8
40014724:	e280303c 	add	r3, r0, #60	; 0x3c
40014728:	23a02008 	movcs	r2, #8
4001472c:	e1a0c003 	mov	ip, r3
40014730:	e92d4010 	push	{r4, lr}
40014734:	e0814002 	add	r4, r1, r2
40014738:	e1510004 	cmp	r1, r4
4001473c:	1a000006 	bne	4001475c <LtcDisplayRgb::SetMessage(char const*, unsigned long)+0x3c>
40014740:	e0832002 	add	r2, r3, r2
40014744:	e3a01020 	mov	r1, #32
40014748:	e2833008 	add	r3, r3, #8
4001474c:	e1520003 	cmp	r2, r3
40014750:	0a000004 	beq	40014768 <LtcDisplayRgb::SetMessage(char const*, unsigned long)+0x48>
40014754:	e4c21001 	strb	r1, [r2], #1
40014758:	eafffffb 	b	4001474c <LtcDisplayRgb::SetMessage(char const*, unsigned long)+0x2c>
4001475c:	e4d1e001 	ldrb	lr, [r1], #1
40014760:	e4cce001 	strb	lr, [ip], #1
40014764:	eafffff3 	b	40014738 <LtcDisplayRgb::SetMessage(char const*, unsigned long)+0x18>
40014768:	e59f3040 	ldr	r3, [pc, #64]	; 400147b0 <LtcDisplayRgb::SetMessage(char const*, unsigned long)+0x90>
4001476c:	e59f4040 	ldr	r4, [pc, #64]	; 400147b4 <LtcDisplayRgb::SetMessage(char const*, unsigned long)+0x94>
40014770:	e5933084 	ldr	r3, [r3, #132]	; 0x84
40014774:	e5803034 	str	r3, [r0, #52]	; 0x34
40014778:	e5940000 	ldr	r0, [r4]
4001477c:	e3700001 	cmn	r0, #1
40014780:	1a000007 	bne	400147a4 <LtcDisplayRgb::SetMessage(char const*, unsigned long)+0x84>
40014784:	e59f102c 	ldr	r1, [pc, #44]	; 400147b8 <LtcDisplayRgb::SetMessage(char const*, unsigned long)+0x98>
40014788:	e3000bb8 	movw	r0, #3000	; 0xbb8
4001478c:	eb004ce3 	bl	40027b20 <SoftwareTimerAdd(unsigned long, void (*)(long))>
40014790:	e5840000 	str	r0, [r4]
40014794:	e59f3020 	ldr	r3, [pc, #32]	; 400147bc <LtcDisplayRgb::SetMessage(char const*, unsigned long)+0x9c>
40014798:	e3a02001 	mov	r2, #1
4001479c:	e5c32000 	strb	r2, [r3]
400147a0:	e8bd8010 	pop	{r4, pc}
400147a4:	e3001bb8 	movw	r1, #3000	; 0xbb8
400147a8:	eb004d17 	bl	40027c0c <SoftwareTimerChange(long, unsigned long)>
400147ac:	eafffff8 	b	40014794 <LtcDisplayRgb::SetMessage(char const*, unsigned long)+0x74>
400147b0:	01c20c00 	biceq	r0, r2, r0, lsl #24
400147b4:	400336cc 	andmi	r3, r3, ip, asr #13
400147b8:	40014674 	andmi	r4, r1, r4, ror r6
400147bc:	40057794 	mulmi	r5, r4, r7

400147c0 <LtcDisplayRgb::ShowMessage()>:
400147c0:	e92d4007 	push	{r0, r1, r2, lr}
400147c4:	e1a01000 	mov	r1, r0
400147c8:	e590004c 	ldr	r0, [r0, #76]	; 0x4c
400147cc:	e3500000 	cmp	r0, #0
400147d0:	0a000015 	beq	4001482c <LtcDisplayRgb::ShowMessage()+0x6c>
400147d4:	e59f3058 	ldr	r3, [pc, #88]	; 40014834 <LtcDisplayRgb::ShowMessage()+0x74>
400147d8:	e300ebb8 	movw	lr, #3000	; 0xbb8
400147dc:	e5912034 	ldr	r2, [r1, #52]	; 0x34
400147e0:	e281103c 	add	r1, r1, #60	; 0x3c
400147e4:	e5933084 	ldr	r3, [r3, #132]	; 0x84
400147e8:	e5d1c01a 	ldrb	ip, [r1, #26]
400147ec:	e0432002 	sub	r2, r3, r2
400147f0:	e00c0c92 	mul	ip, r2, ip
400147f4:	e5d1301c 	ldrb	r3, [r1, #28]
400147f8:	e73cfe1c 	udiv	ip, ip, lr
400147fc:	e5cdc004 	strb	ip, [sp, #4]
40014800:	e5d1c01b 	ldrb	ip, [r1, #27]
40014804:	e0030392 	mul	r3, r2, r3
40014808:	e00c0c92 	mul	ip, r2, ip
4001480c:	e733fe13 	udiv	r3, r3, lr
40014810:	e73cfe1c 	udiv	ip, ip, lr
40014814:	e5cd3006 	strb	r3, [sp, #6]
40014818:	e28d2004 	add	r2, sp, #4
4001481c:	e5cdc005 	strb	ip, [sp, #5]
40014820:	e5903000 	ldr	r3, [r0]
40014824:	e5933014 	ldr	r3, [r3, #20]
40014828:	e12fff33 	blx	r3
4001482c:	e28dd00c 	add	sp, sp, #12
40014830:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014834:	01c20c00 	biceq	r0, r2, r0, lsl #24

40014838 <LtcDisplayRgb::Show(char const*)>:
40014838:	e92d40f7 	push	{r0, r1, r2, r4, r5, r6, r7, lr}
4001483c:	e590e04c 	ldr	lr, [r0, #76]	; 0x4c
40014840:	e35e0000 	cmp	lr, #0
40014844:	0a00002e 	beq	40014904 <LtcDisplayRgb::Show(char const*)+0xcc>
40014848:	e59f31b0 	ldr	r3, [pc, #432]	; 40014a00 <LtcDisplayRgb::Show(char const*)+0x1c8>
4001484c:	e5d34000 	ldrb	r4, [r3]
40014850:	e3540000 	cmp	r4, #0
40014854:	0a000002 	beq	40014864 <LtcDisplayRgb::Show(char const*)+0x2c>
40014858:	e28dd00c 	add	sp, sp, #12
4001485c:	e8bd40f0 	pop	{r4, r5, r6, r7, lr}
40014860:	eaffffd6 	b	400147c0 <LtcDisplayRgb::ShowMessage()>
40014864:	e5906048 	ldr	r6, [r0, #72]	; 0x48
40014868:	e1a0c000 	mov	ip, r0
4001486c:	e5902030 	ldr	r2, [r0, #48]	; 0x30
40014870:	e3560000 	cmp	r6, #0
40014874:	0a00004f 	beq	400149b8 <LtcDisplayRgb::Show(char const*)+0x180>
40014878:	e5d10007 	ldrb	r0, [r1, #7]
4001487c:	e5dc5044 	ldrb	r5, [ip, #68]	; 0x44
40014880:	e59f317c 	ldr	r3, [pc, #380]	; 40014a04 <LtcDisplayRgb::Show(char const*)+0x1cc>
40014884:	e1550000 	cmp	r5, r0
40014888:	e5933084 	ldr	r3, [r3, #132]	; 0x84
4001488c:	0a00001e 	beq	4001490c <LtcDisplayRgb::Show(char const*)+0xd4>
40014890:	e5cc0044 	strb	r0, [ip, #68]	; 0x44
40014894:	e58c3038 	str	r3, [ip, #56]	; 0x38
40014898:	e5cd4000 	strb	r4, [sp]
4001489c:	e5cd4001 	strb	r4, [sp, #1]
400148a0:	e5cd4002 	strb	r4, [sp, #2]
400148a4:	e3520000 	cmp	r2, #0
400148a8:	135200ff 	cmpne	r2, #255	; 0xff
400148ac:	e5dc4050 	ldrb	r4, [ip, #80]	; 0x50
400148b0:	e5dc0051 	ldrb	r0, [ip, #81]	; 0x51
400148b4:	e5dc3052 	ldrb	r3, [ip, #82]	; 0x52
400148b8:	05cd4004 	strbeq	r4, [sp, #4]
400148bc:	05cd0005 	strbeq	r0, [sp, #5]
400148c0:	0a000008 	beq	400148e8 <LtcDisplayRgb::Show(char const*)+0xb0>
400148c4:	e3a0c0ff 	mov	ip, #255	; 0xff
400148c8:	e0040492 	mul	r4, r2, r4
400148cc:	e0000092 	mul	r0, r2, r0
400148d0:	e0030392 	mul	r3, r2, r3
400148d4:	e734fc14 	udiv	r4, r4, ip
400148d8:	e730fc10 	udiv	r0, r0, ip
400148dc:	e733fc13 	udiv	r3, r3, ip
400148e0:	e5cd4004 	strb	r4, [sp, #4]
400148e4:	e5cd0005 	strb	r0, [sp, #5]
400148e8:	e5cd3006 	strb	r3, [sp, #6]
400148ec:	e28d2004 	add	r2, sp, #4
400148f0:	e59e3000 	ldr	r3, [lr]
400148f4:	e1a0000e 	mov	r0, lr
400148f8:	e593400c 	ldr	r4, [r3, #12]
400148fc:	e1a0300d 	mov	r3, sp
40014900:	e12fff34 	blx	r4
40014904:	e28dd00c 	add	sp, sp, #12
40014908:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
4001490c:	e59c0038 	ldr	r0, [ip, #56]	; 0x38
40014910:	e5dc4053 	ldrb	r4, [ip, #83]	; 0x53
40014914:	e0433000 	sub	r3, r3, r0
40014918:	e5dc5055 	ldrb	r5, [ip, #85]	; 0x55
4001491c:	e3530ffa 	cmp	r3, #1000	; 0x3e8
40014920:	e5dc0054 	ldrb	r0, [ip, #84]	; 0x54
40014924:	2a000014 	bcs	4001497c <LtcDisplayRgb::Show(char const*)+0x144>
40014928:	e0633403 	rsb	r3, r3, r3, lsl #8
4001492c:	e3a07ffa 	mov	r7, #1000	; 0x3e8
40014930:	e3560001 	cmp	r6, #1
40014934:	e733f713 	udiv	r3, r3, r7
40014938:	026330ff 	rsbeq	r3, r3, #255	; 0xff
4001493c:	e3520000 	cmp	r2, #0
40014940:	135200ff 	cmpne	r2, #255	; 0xff
40014944:	10030392 	mulne	r3, r2, r3
40014948:	13a060ff 	movne	r6, #255	; 0xff
4001494c:	1733f613 	udivne	r3, r3, r6
40014950:	e3a060ff 	mov	r6, #255	; 0xff
40014954:	e0040493 	mul	r4, r3, r4
40014958:	e0000093 	mul	r0, r3, r0
4001495c:	e734f614 	udiv	r4, r4, r6
40014960:	e730f610 	udiv	r0, r0, r6
40014964:	e0030593 	mul	r3, r3, r5
40014968:	e5cd4000 	strb	r4, [sp]
4001496c:	e5cd0001 	strb	r0, [sp, #1]
40014970:	e733f613 	udiv	r3, r3, r6
40014974:	e5cd3002 	strb	r3, [sp, #2]
40014978:	eaffffc9 	b	400148a4 <LtcDisplayRgb::Show(char const*)+0x6c>
4001497c:	e3520000 	cmp	r2, #0
40014980:	135200ff 	cmpne	r2, #255	; 0xff
40014984:	05cd4000 	strbeq	r4, [sp]
40014988:	05cd0001 	strbeq	r0, [sp, #1]
4001498c:	05cd5002 	strbeq	r5, [sp, #2]
40014990:	0affffc3 	beq	400148a4 <LtcDisplayRgb::Show(char const*)+0x6c>
40014994:	e3a060ff 	mov	r6, #255	; 0xff
40014998:	e0040492 	mul	r4, r2, r4
4001499c:	e0000092 	mul	r0, r2, r0
400149a0:	e734f614 	udiv	r4, r4, r6
400149a4:	e730f610 	udiv	r0, r0, r6
400149a8:	e0030592 	mul	r3, r2, r5
400149ac:	e5cd4000 	strb	r4, [sp]
400149b0:	e5cd0001 	strb	r0, [sp, #1]
400149b4:	eaffffed 	b	40014970 <LtcDisplayRgb::Show(char const*)+0x138>
400149b8:	e5d04053 	ldrb	r4, [r0, #83]	; 0x53
400149bc:	e3520000 	cmp	r2, #0
400149c0:	135200ff 	cmpne	r2, #255	; 0xff
400149c4:	e5d00054 	ldrb	r0, [r0, #84]	; 0x54
400149c8:	e5dc3055 	ldrb	r3, [ip, #85]	; 0x55
400149cc:	05cd4000 	strbeq	r4, [sp]
400149d0:	05cd0001 	strbeq	r0, [sp, #1]
400149d4:	0affffe6 	beq	40014974 <LtcDisplayRgb::Show(char const*)+0x13c>
400149d8:	e3a050ff 	mov	r5, #255	; 0xff
400149dc:	e0040492 	mul	r4, r2, r4
400149e0:	e0000092 	mul	r0, r2, r0
400149e4:	e734f514 	udiv	r4, r4, r5
400149e8:	e730f510 	udiv	r0, r0, r5
400149ec:	e0030392 	mul	r3, r2, r3
400149f0:	e5cd4000 	strb	r4, [sp]
400149f4:	e733f513 	udiv	r3, r3, r5
400149f8:	e5cd0001 	strb	r0, [sp, #1]
400149fc:	eaffffdc 	b	40014974 <LtcDisplayRgb::Show(char const*)+0x13c>
40014a00:	40057794 	mulmi	r5, r4, r7
40014a04:	01c20c00 	biceq	r0, r2, r0, lsl #24

40014a08 <LtcDisplayRgb::ShowSysTime(char const*)>:
40014a08:	e92d40f7 	push	{r0, r1, r2, r4, r5, r6, r7, lr}
40014a0c:	e590504c 	ldr	r5, [r0, #76]	; 0x4c
40014a10:	e3550000 	cmp	r5, #0
40014a14:	0a00002a 	beq	40014ac4 <LtcDisplayRgb::ShowSysTime(char const*)+0xbc>
40014a18:	e59f30c8 	ldr	r3, [pc, #200]	; 40014ae8 <LtcDisplayRgb::ShowSysTime(char const*)+0xe0>
40014a1c:	e5d33000 	ldrb	r3, [r3]
40014a20:	e3530000 	cmp	r3, #0
40014a24:	0a000002 	beq	40014a34 <LtcDisplayRgb::ShowSysTime(char const*)+0x2c>
40014a28:	e28dd00c 	add	sp, sp, #12
40014a2c:	e8bd40f0 	pop	{r4, r5, r6, r7, lr}
40014a30:	eaffff62 	b	400147c0 <LtcDisplayRgb::ShowMessage()>
40014a34:	e5903030 	ldr	r3, [r0, #48]	; 0x30
40014a38:	e1a02000 	mov	r2, r0
40014a3c:	e5d06050 	ldrb	r6, [r0, #80]	; 0x50
40014a40:	e3530000 	cmp	r3, #0
40014a44:	135300ff 	cmpne	r3, #255	; 0xff
40014a48:	e5d04051 	ldrb	r4, [r0, #81]	; 0x51
40014a4c:	e5d0e052 	ldrb	lr, [r0, #82]	; 0x52
40014a50:	e5d0c053 	ldrb	ip, [r0, #83]	; 0x53
40014a54:	e5d27055 	ldrb	r7, [r2, #85]	; 0x55
40014a58:	e5d00054 	ldrb	r0, [r0, #84]	; 0x54
40014a5c:	0a00001a 	beq	40014acc <LtcDisplayRgb::ShowSysTime(char const*)+0xc4>
40014a60:	e3a020ff 	mov	r2, #255	; 0xff
40014a64:	e0060693 	mul	r6, r3, r6
40014a68:	e0040493 	mul	r4, r3, r4
40014a6c:	e00e0e93 	mul	lr, r3, lr
40014a70:	e00c0c93 	mul	ip, r3, ip
40014a74:	e0000093 	mul	r0, r3, r0
40014a78:	e0030793 	mul	r3, r3, r7
40014a7c:	e736f216 	udiv	r6, r6, r2
40014a80:	e734f214 	udiv	r4, r4, r2
40014a84:	e73ef21e 	udiv	lr, lr, r2
40014a88:	e73cf21c 	udiv	ip, ip, r2
40014a8c:	e730f210 	udiv	r0, r0, r2
40014a90:	e733f213 	udiv	r3, r3, r2
40014a94:	e5cd6000 	strb	r6, [sp]
40014a98:	e5cd4001 	strb	r4, [sp, #1]
40014a9c:	e5cde002 	strb	lr, [sp, #2]
40014aa0:	e5cdc004 	strb	ip, [sp, #4]
40014aa4:	e5cd0005 	strb	r0, [sp, #5]
40014aa8:	e5cd3006 	strb	r3, [sp, #6]
40014aac:	e5953000 	ldr	r3, [r5]
40014ab0:	e1a0200d 	mov	r2, sp
40014ab4:	e1a00005 	mov	r0, r5
40014ab8:	e5934010 	ldr	r4, [r3, #16]
40014abc:	e28d3004 	add	r3, sp, #4
40014ac0:	e12fff34 	blx	r4
40014ac4:	e28dd00c 	add	sp, sp, #12
40014ac8:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
40014acc:	e5cd6000 	strb	r6, [sp]
40014ad0:	e5cd4001 	strb	r4, [sp, #1]
40014ad4:	e5cde002 	strb	lr, [sp, #2]
40014ad8:	e5cdc004 	strb	ip, [sp, #4]
40014adc:	e5cd0005 	strb	r0, [sp, #5]
40014ae0:	e5cd7006 	strb	r7, [sp, #6]
40014ae4:	eafffff0 	b	40014aac <LtcDisplayRgb::ShowSysTime(char const*)+0xa4>
40014ae8:	40057794 	mulmi	r5, r4, r7

40014aec <LtcDisplayRgb::ShowFPS(ltc::Type)>:
40014aec:	e1a02000 	mov	r2, r0
40014af0:	e590004c 	ldr	r0, [r0, #76]	; 0x4c
40014af4:	e3500000 	cmp	r0, #0
40014af8:	012fff1e 	bxeq	lr
40014afc:	e5903000 	ldr	r3, [r0]
40014b00:	e2822059 	add	r2, r2, #89	; 0x59
40014b04:	e593301c 	ldr	r3, [r3, #28]
40014b08:	e12fff13 	bx	r3

40014b0c <LtcDisplayRgb::ShowInfo(char const*)>:
40014b0c:	e1a03000 	mov	r3, r0
40014b10:	e590004c 	ldr	r0, [r0, #76]	; 0x4c
40014b14:	e3500000 	cmp	r0, #0
40014b18:	012fff1e 	bxeq	lr
40014b1c:	e5902000 	ldr	r2, [r0]
40014b20:	e1a0c001 	mov	ip, r1
40014b24:	e92d4010 	push	{r4, lr}
40014b28:	e592e024 	ldr	lr, [r2, #36]	; 0x24
40014b2c:	e1a0200c 	mov	r2, ip
40014b30:	e28cc001 	add	ip, ip, #1
40014b34:	e5d24000 	ldrb	r4, [r2]
40014b38:	e3540000 	cmp	r4, #0
40014b3c:	1afffffa 	bne	40014b2c <LtcDisplayRgb::ShowInfo(char const*)+0x20>
40014b40:	e0422001 	sub	r2, r2, r1
40014b44:	e1a0c00e 	mov	ip, lr
40014b48:	e283305c 	add	r3, r3, #92	; 0x5c
40014b4c:	e6ff2072 	uxth	r2, r2
40014b50:	e8bd4010 	pop	{r4, lr}
40014b54:	e12fff1c 	bx	ip

40014b58 <LtcDisplayRgb::ShowSource(ltc::Source)>:
40014b58:	e1a02000 	mov	r2, r0
40014b5c:	e590004c 	ldr	r0, [r0, #76]	; 0x4c
40014b60:	e3500000 	cmp	r0, #0
40014b64:	012fff1e 	bxeq	lr
40014b68:	e5903000 	ldr	r3, [r0]
40014b6c:	e282205f 	add	r2, r2, #95	; 0x5f
40014b70:	e5933020 	ldr	r3, [r3, #32]
40014b74:	e12fff13 	bx	r3

40014b78 <LtcDisplayRgb::WriteChar(unsigned char, unsigned char)>:
40014b78:	e1a03000 	mov	r3, r0
40014b7c:	e590004c 	ldr	r0, [r0, #76]	; 0x4c
40014b80:	e3500000 	cmp	r0, #0
40014b84:	012fff1e 	bxeq	lr
40014b88:	e590c000 	ldr	ip, [r0]
40014b8c:	e283305c 	add	r3, r3, #92	; 0x5c
40014b90:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014b94:	e59ce018 	ldr	lr, [ip, #24]
40014b98:	e1a0c00e 	mov	ip, lr
40014b9c:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
40014ba0:	e12fff1c 	bx	ip

40014ba4 <LtcDisplayRgb::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)>:
40014ba4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40014ba8:	e1a06000 	mov	r6, r0
40014bac:	e59f00e8 	ldr	r0, [pc, #232]	; 40014c9c <LtcDisplayRgb::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xf8>
40014bb0:	e1a05002 	mov	r5, r2
40014bb4:	e3a02005 	mov	r2, #5
40014bb8:	e1a04001 	mov	r4, r1
40014bbc:	ebffd90a 	bl	4000afec <memcmp>
40014bc0:	e3500000 	cmp	r0, #0
40014bc4:	18bd81f0 	popne	{r4, r5, r6, r7, r8, pc}
40014bc8:	e59f10d0 	ldr	r1, [pc, #208]	; 40014ca0 <LtcDisplayRgb::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xfc>
40014bcc:	e2453001 	sub	r3, r5, #1
40014bd0:	e2847005 	add	r7, r4, #5
40014bd4:	e7d42003 	ldrb	r2, [r4, r3]
40014bd8:	e1a00007 	mov	r0, r7
40014bdc:	e352000a 	cmp	r2, #10
40014be0:	e3a02007 	mov	r2, #7
40014be4:	01a05003 	moveq	r5, r3
40014be8:	ebffd8ff 	bl	4000afec <memcmp>
40014bec:	e3500000 	cmp	r0, #0
40014bf0:	1a00000a 	bne	40014c20 <LtcDisplayRgb::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x7c>
40014bf4:	e245300e 	sub	r3, r5, #14
40014bf8:	e3530007 	cmp	r3, #7
40014bfc:	88bd81f0 	pophi	{r4, r5, r6, r7, r8, pc}
40014c00:	e5d4300c 	ldrb	r3, [r4, #12]
40014c04:	e3530023 	cmp	r3, #35	; 0x23
40014c08:	18bd81f0 	popne	{r4, r5, r6, r7, r8, pc}
40014c0c:	e245200d 	sub	r2, r5, #13
40014c10:	e284100d 	add	r1, r4, #13
40014c14:	e1a00006 	mov	r0, r6
40014c18:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
40014c1c:	eafffebf 	b	40014720 <LtcDisplayRgb::SetMessage(char const*, unsigned long)>
40014c20:	e59f107c 	ldr	r1, [pc, #124]	; 40014ca4 <LtcDisplayRgb::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x100>
40014c24:	e3a02003 	mov	r2, #3
40014c28:	e1a00007 	mov	r0, r7
40014c2c:	ebffd8ee 	bl	4000afec <memcmp>
40014c30:	e3500000 	cmp	r0, #0
40014c34:	1a000008 	bne	40014c5c <LtcDisplayRgb::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xb8>
40014c38:	e3550010 	cmp	r5, #16
40014c3c:	18bd81f0 	popne	{r4, r5, r6, r7, r8, pc}
40014c40:	e5d43008 	ldrb	r3, [r4, #8]
40014c44:	e3530023 	cmp	r3, #35	; 0x23
40014c48:	18bd81f0 	popne	{r4, r5, r6, r7, r8, pc}
40014c4c:	e2841009 	add	r1, r4, #9
40014c50:	e1a00006 	mov	r0, r6
40014c54:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
40014c58:	ea0000c6 	b	40014f78 <LtcDisplayRgb::SetRGB(char const*)>
40014c5c:	e59f1044 	ldr	r1, [pc, #68]	; 40014ca8 <LtcDisplayRgb::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x104>
40014c60:	e3a02006 	mov	r2, #6
40014c64:	e1a00007 	mov	r0, r7
40014c68:	ebffd8df 	bl	4000afec <memcmp>
40014c6c:	e355000e 	cmp	r5, #14
40014c70:	03500000 	cmpeq	r0, #0
40014c74:	18bd81f0 	popne	{r4, r5, r6, r7, r8, pc}
40014c78:	e5d4300b 	ldrb	r3, [r4, #11]
40014c7c:	e3530023 	cmp	r3, #35	; 0x23
40014c80:	18bd81f0 	popne	{r4, r5, r6, r7, r8, pc}
40014c84:	e3a02002 	mov	r2, #2
40014c88:	e284100c 	add	r1, r4, #12
40014c8c:	e1a00006 	mov	r0, r6
40014c90:	eb000096 	bl	40014ef0 <LtcDisplayRgb::hexadecimalToDecimal(char const*, unsigned long)>
40014c94:	e5860030 	str	r0, [r6, #48]	; 0x30
40014c98:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40014c9c:	400314fb 	strdmi	r1, [r3], -fp
40014ca0:	400315ab 	andmi	r1, r3, fp, lsr #11
40014ca4:	400315a0 	andmi	r1, r3, r0, lsr #11
40014ca8:	400315a4 	andmi	r1, r3, r4, lsr #11

40014cac <LtcDisplayRgb::staticCallbackFunction(unsigned char const*, unsigned long, unsigned long, unsigned short)>:
40014cac:	e92d4007 	push	{r0, r1, r2, lr}
40014cb0:	e58d3000 	str	r3, [sp]
40014cb4:	e1a03002 	mov	r3, r2
40014cb8:	e1a02001 	mov	r2, r1
40014cbc:	e1a01000 	mov	r1, r0
40014cc0:	e59f000c 	ldr	r0, [pc, #12]	; 40014cd4 <LtcDisplayRgb::staticCallbackFunction(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x28>
40014cc4:	e5900000 	ldr	r0, [r0]
40014cc8:	ebffffb5 	bl	40014ba4 <LtcDisplayRgb::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)>
40014ccc:	e28dd00c 	add	sp, sp, #12
40014cd0:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014cd4:	40034078 	andmi	r4, r3, r8, ror r0

40014cd8 <LtcDisplayRgb::Print()>:
40014cd8:	e5903000 	ldr	r3, [r0]
40014cdc:	e92d4010 	push	{r4, lr}
40014ce0:	e3530001 	cmp	r3, #1
40014ce4:	e1a04000 	mov	r4, r0
40014ce8:	1a00000e 	bne	40014d28 <LtcDisplayRgb::Print()+0x50>
40014cec:	e59f0080 	ldr	r0, [pc, #128]	; 40014d74 <LtcDisplayRgb::Print()+0x9c>
40014cf0:	eb005fe8 	bl	4002cc98 <puts>
40014cf4:	e5941030 	ldr	r1, [r4, #48]	; 0x30
40014cf8:	e59f0078 	ldr	r0, [pc, #120]	; 40014d78 <LtcDisplayRgb::Print()+0xa0>
40014cfc:	eb005fa3 	bl	4002cb90 <printf>
40014d00:	e1c421dc 	ldrd	r2, [r4, #28]
40014d04:	e5941018 	ldr	r1, [r4, #24]
40014d08:	e59f006c 	ldr	r0, [pc, #108]	; 40014d7c <LtcDisplayRgb::Print()+0xa4>
40014d0c:	eb005f9f 	bl	4002cb90 <printf>
40014d10:	e594004c 	ldr	r0, [r4, #76]	; 0x4c
40014d14:	e3500000 	cmp	r0, #0
40014d18:	1a000011 	bne	40014d64 <LtcDisplayRgb::Print()+0x8c>
40014d1c:	e8bd4010 	pop	{r4, lr}
40014d20:	e59f0058 	ldr	r0, [pc, #88]	; 40014d80 <LtcDisplayRgb::Print()+0xa8>
40014d24:	ea005fdb 	b	4002cc98 <puts>
40014d28:	e59f0054 	ldr	r0, [pc, #84]	; 40014d84 <LtcDisplayRgb::Print()+0xac>
40014d2c:	eb005fd9 	bl	4002cc98 <puts>
40014d30:	e5940014 	ldr	r0, [r4, #20]
40014d34:	eb000dc5 	bl	40018450 <pixel::pixel_get_type(pixel::Type)>
40014d38:	e5942014 	ldr	r2, [r4, #20]
40014d3c:	e1a01000 	mov	r1, r0
40014d40:	e59f0040 	ldr	r0, [pc, #64]	; 40014d88 <LtcDisplayRgb::Print()+0xb0>
40014d44:	eb005f91 	bl	4002cb90 <printf>
40014d48:	e5940010 	ldr	r0, [r4, #16]
40014d4c:	eb000dfd 	bl	40018548 <pixel::pixel_get_map(pixel::Map)>
40014d50:	e5942010 	ldr	r2, [r4, #16]
40014d54:	e1a01000 	mov	r1, r0
40014d58:	e59f002c 	ldr	r0, [pc, #44]	; 40014d8c <LtcDisplayRgb::Print()+0xb4>
40014d5c:	eb005f8b 	bl	4002cb90 <printf>
40014d60:	eaffffe3 	b	40014cf4 <LtcDisplayRgb::Print()+0x1c>
40014d64:	e5903000 	ldr	r3, [r0]
40014d68:	e8bd4010 	pop	{r4, lr}
40014d6c:	e5933028 	ldr	r3, [r3, #40]	; 0x28
40014d70:	e12fff13 	bx	r3
40014d74:	40031501 	andmi	r1, r3, r1, lsl #10
40014d78:	4003154a 	andmi	r1, r3, sl, asr #10
40014d7c:	40031559 	andmi	r1, r3, r9, asr r5
40014d80:	40031594 	mulmi	r3, r4, r5
40014d84:	40031513 	andmi	r1, r3, r3, lsl r5
40014d88:	40031522 	andmi	r1, r3, r2, lsr #10
40014d8c:	40031536 	andmi	r1, r3, r6, lsr r5

40014d90 <LtcDisplayRgb::Init(pixel::Type)>:
40014d90:	e5903000 	ldr	r3, [r0]
40014d94:	e92d4070 	push	{r4, r5, r6, lr}
40014d98:	e3530001 	cmp	r3, #1
40014d9c:	e5801014 	str	r1, [r0, #20]
40014da0:	e1a04000 	mov	r4, r0
40014da4:	1a000014 	bne	40014dfc <LtcDisplayRgb::Init(pixel::Type)+0x6c>
40014da8:	e3a00034 	mov	r0, #52	; 0x34
40014dac:	eb006189 	bl	4002d3d8 <operator new(unsigned int)>
40014db0:	e1a05000 	mov	r5, r0
40014db4:	eb000280 	bl	400157bc <LtcDisplayRgbPanel::LtcDisplayRgbPanel()>
40014db8:	e584504c 	str	r5, [r4, #76]	; 0x4c
40014dbc:	e1a00005 	mov	r0, r5
40014dc0:	eb000140 	bl	400152c8 <LtcDisplayRgbPanel::Init()>
40014dc4:	e2846018 	add	r6, r4, #24
40014dc8:	e3a05000 	mov	r5, #0
40014dcc:	e4961004 	ldr	r1, [r6], #4
40014dd0:	e1a02005 	mov	r2, r5
40014dd4:	e1a00004 	mov	r0, r4
40014dd8:	e2855001 	add	r5, r5, #1
40014ddc:	eb00003b 	bl	40014ed0 <LtcDisplayRgb::SetRGB(unsigned long, ltcdisplayrgb::ColourIndex)>
40014de0:	e3550006 	cmp	r5, #6
40014de4:	1afffff8 	bne	40014dcc <LtcDisplayRgb::Init(pixel::Type)+0x3c>
40014de8:	e59f1054 	ldr	r1, [pc, #84]	; 40014e44 <LtcDisplayRgb::Init(pixel::Type)+0xb4>
40014dec:	e3020812 	movw	r0, #10258	; 0x2812
40014df0:	eb003514 	bl	40022248 <net::udp_begin(unsigned short, void (*)(unsigned char const*, unsigned long, unsigned long, unsigned short))>
40014df4:	e584000c 	str	r0, [r4, #12]
40014df8:	e8bd8070 	pop	{r4, r5, r6, pc}
40014dfc:	e5903004 	ldr	r3, [r0, #4]
40014e00:	e1a05001 	mov	r5, r1
40014e04:	e3a00008 	mov	r0, #8
40014e08:	e3530000 	cmp	r3, #0
40014e0c:	1a000006 	bne	40014e2c <LtcDisplayRgb::Init(pixel::Type)+0x9c>
40014e10:	eb006170 	bl	4002d3d8 <operator new(unsigned int)>
40014e14:	e5942010 	ldr	r2, [r4, #16]
40014e18:	e1a01005 	mov	r1, r5
40014e1c:	e1a06000 	mov	r6, r0
40014e20:	eb00030d 	bl	40015a5c <LtcDisplayWS28xx7Segment::LtcDisplayWS28xx7Segment(pixel::Type, pixel::Map)>
40014e24:	e584604c 	str	r6, [r4, #76]	; 0x4c
40014e28:	eaffffe5 	b	40014dc4 <LtcDisplayRgb::Init(pixel::Type)+0x34>
40014e2c:	eb006169 	bl	4002d3d8 <operator new(unsigned int)>
40014e30:	e5942010 	ldr	r2, [r4, #16]
40014e34:	e1a01005 	mov	r1, r5
40014e38:	e1a06000 	mov	r6, r0
40014e3c:	eb0003c5 	bl	40015d58 <LtcDisplayWS28xxMatrix::LtcDisplayWS28xxMatrix(pixel::Type, pixel::Map)>
40014e40:	eafffff7 	b	40014e24 <LtcDisplayRgb::Init(pixel::Type)+0x94>
40014e44:	40014cac 	andmi	r4, r1, ip, lsr #25

40014e48 <LtcDisplayRgb::SetRGB(unsigned char, unsigned char, unsigned char, ltcdisplayrgb::ColourIndex)>:
40014e48:	e59dc000 	ldr	ip, [sp]
40014e4c:	e35c0005 	cmp	ip, #5
40014e50:	979ff10c 	ldrls	pc, [pc, ip, lsl #2]
40014e54:	ea00001c 	b	40014ecc <LtcDisplayRgb::SetRGB(unsigned char, unsigned char, unsigned char, ltcdisplayrgb::ColourIndex)+0x84>
40014e58:	40014e70 	andmi	r4, r1, r0, ror lr
40014e5c:	40014e80 	andmi	r4, r1, r0, lsl #29
40014e60:	40014e90 	mulmi	r1, r0, lr
40014e64:	40014ea0 	andmi	r4, r1, r0, lsr #29
40014e68:	40014eb0 			; <UNDEFINED> instruction: 0x40014eb0
40014e6c:	40014ec0 	andmi	r4, r1, r0, asr #29
40014e70:	e5c01050 	strb	r1, [r0, #80]	; 0x50
40014e74:	e5c02051 	strb	r2, [r0, #81]	; 0x51
40014e78:	e5c03052 	strb	r3, [r0, #82]	; 0x52
40014e7c:	e12fff1e 	bx	lr
40014e80:	e5c01053 	strb	r1, [r0, #83]	; 0x53
40014e84:	e5c02054 	strb	r2, [r0, #84]	; 0x54
40014e88:	e5c03055 	strb	r3, [r0, #85]	; 0x55
40014e8c:	e12fff1e 	bx	lr
40014e90:	e5c01056 	strb	r1, [r0, #86]	; 0x56
40014e94:	e5c02057 	strb	r2, [r0, #87]	; 0x57
40014e98:	e5c03058 	strb	r3, [r0, #88]	; 0x58
40014e9c:	e12fff1e 	bx	lr
40014ea0:	e5c01059 	strb	r1, [r0, #89]	; 0x59
40014ea4:	e5c0205a 	strb	r2, [r0, #90]	; 0x5a
40014ea8:	e5c0305b 	strb	r3, [r0, #91]	; 0x5b
40014eac:	e12fff1e 	bx	lr
40014eb0:	e5c0105c 	strb	r1, [r0, #92]	; 0x5c
40014eb4:	e5c0205d 	strb	r2, [r0, #93]	; 0x5d
40014eb8:	e5c0305e 	strb	r3, [r0, #94]	; 0x5e
40014ebc:	e12fff1e 	bx	lr
40014ec0:	e5c0105f 	strb	r1, [r0, #95]	; 0x5f
40014ec4:	e5c02060 	strb	r2, [r0, #96]	; 0x60
40014ec8:	e5c03061 	strb	r3, [r0, #97]	; 0x61
40014ecc:	e12fff1e 	bx	lr

40014ed0 <LtcDisplayRgb::SetRGB(unsigned long, ltcdisplayrgb::ColourIndex)>:
40014ed0:	e92d4007 	push	{r0, r1, r2, lr}
40014ed4:	e6ef3071 	uxtb	r3, r1
40014ed8:	e58d2000 	str	r2, [sp]
40014edc:	e7e72451 	ubfx	r2, r1, #8, #8
40014ee0:	e7e71851 	ubfx	r1, r1, #16, #8
40014ee4:	ebffffd7 	bl	40014e48 <LtcDisplayRgb::SetRGB(unsigned char, unsigned char, unsigned char, ltcdisplayrgb::ColourIndex)>
40014ee8:	e28dd00c 	add	sp, sp, #12
40014eec:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

40014ef0 <LtcDisplayRgb::hexadecimalToDecimal(char const*, unsigned long)>:
40014ef0:	e0812002 	add	r2, r1, r2
40014ef4:	e3a00000 	mov	r0, #0
40014ef8:	e1510002 	cmp	r1, r2
40014efc:	012fff1e 	bxeq	lr
40014f00:	e4d13001 	ldrb	r3, [r1], #1
40014f04:	e243c030 	sub	ip, r3, #48	; 0x30
40014f08:	e35c0009 	cmp	ip, #9
40014f0c:	8a000017 	bhi	40014f70 <LtcDisplayRgb::hexadecimalToDecimal(char const*, unsigned long)+0x80>
40014f10:	e3530039 	cmp	r3, #57	; 0x39
40014f14:	83833020 	orrhi	r3, r3, #32
40014f18:	96ef307c 	uxtbls	r3, ip
40014f1c:	82433057 	subhi	r3, r3, #87	; 0x57
40014f20:	86ef3073 	uxtbhi	r3, r3
40014f24:	e1830200 	orr	r0, r3, r0, lsl #4
40014f28:	eafffff2 	b	40014ef8 <LtcDisplayRgb::hexadecimalToDecimal(char const*, unsigned long)+0x8>
40014f2c:	e4d13001 	ldrb	r3, [r1], #1
40014f30:	e243c030 	sub	ip, r3, #48	; 0x30
40014f34:	e35c0009 	cmp	ip, #9
40014f38:	9a000003 	bls	40014f4c <LtcDisplayRgb::hexadecimalToDecimal(char const*, unsigned long)+0x5c>
40014f3c:	e383e020 	orr	lr, r3, #32
40014f40:	e24ee061 	sub	lr, lr, #97	; 0x61
40014f44:	e35e0005 	cmp	lr, #5
40014f48:	849df004 	pophi	{pc}		; (ldrhi pc, [sp], #4)
40014f4c:	e3530039 	cmp	r3, #57	; 0x39
40014f50:	83833020 	orrhi	r3, r3, #32
40014f54:	96ef307c 	uxtbls	r3, ip
40014f58:	82433057 	subhi	r3, r3, #87	; 0x57
40014f5c:	86ef3073 	uxtbhi	r3, r3
40014f60:	e1510002 	cmp	r1, r2
40014f64:	e1830200 	orr	r0, r3, r0, lsl #4
40014f68:	1affffef 	bne	40014f2c <LtcDisplayRgb::hexadecimalToDecimal(char const*, unsigned long)+0x3c>
40014f6c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014f70:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014f74:	eafffff0 	b	40014f3c <LtcDisplayRgb::hexadecimalToDecimal(char const*, unsigned long)+0x4c>

40014f78 <LtcDisplayRgb::SetRGB(char const*)>:
40014f78:	e92d4070 	push	{r4, r5, r6, lr}
40014f7c:	e5d14000 	ldrb	r4, [r1]
40014f80:	e2444030 	sub	r4, r4, #48	; 0x30
40014f84:	e3540009 	cmp	r4, #9
40014f88:	88bd8070 	pophi	{r4, r5, r6, pc}
40014f8c:	e3540005 	cmp	r4, #5
40014f90:	c8bd8070 	popgt	{r4, r5, r6, pc}
40014f94:	e3a02006 	mov	r2, #6
40014f98:	e2811001 	add	r1, r1, #1
40014f9c:	e1a05000 	mov	r5, r0
40014fa0:	ebffffd2 	bl	40014ef0 <LtcDisplayRgb::hexadecimalToDecimal(char const*, unsigned long)>
40014fa4:	e1a01000 	mov	r1, r0
40014fa8:	e1a02004 	mov	r2, r4
40014fac:	e1a00005 	mov	r0, r5
40014fb0:	e8bd4070 	pop	{r4, r5, r6, lr}
40014fb4:	eaffffc5 	b	40014ed0 <LtcDisplayRgb::SetRGB(unsigned long, ltcdisplayrgb::ColourIndex)>

40014fb8 <LtcEncoder::LtcEncoder()>:
40014fb8:	f2c00010 	vmov.i32	d16, #0	; 0x00000000
40014fbc:	e3072798 	movw	r2, #30616	; 0x7798
40014fc0:	e3a010ff 	mov	r1, #255	; 0xff
40014fc4:	e3442005 	movt	r2, #16389	; 0x4005
40014fc8:	e5801010 	str	r1, [r0, #16]
40014fcc:	e30f1d3f 	movw	r1, #64831	; 0xfd3f
40014fd0:	edc00b00 	vstr	d16, [r0]
40014fd4:	e5820000 	str	r0, [r2]
40014fd8:	e5801008 	str	r1, [r0, #8]
40014fdc:	e12fff1e 	bx	lr

40014fe0 <LtcEncoder::Encode(void*)>:
40014fe0:	e5902010 	ldr	r2, [r0, #16]
40014fe4:	e3a0c0d8 	mov	ip, #216	; 0xd8
40014fe8:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
40014fec:	e30195b4 	movw	r9, #5556	; 0x15b4
40014ff0:	e002029c 	mul	r2, ip, r2
40014ff4:	e3449003 	movt	r9, #16387	; 0x4003
40014ff8:	e24dd014 	sub	sp, sp, #20
40014ffc:	e307779c 	movw	r7, #30620	; 0x779c
40015000:	e3510000 	cmp	r1, #0
40015004:	e799a002 	ldr	sl, [r9, r2]
40015008:	e3a04001 	mov	r4, #1
4001500c:	e3447005 	movt	r7, #16389	; 0x4005
40015010:	e2822008 	add	r2, r2, #8
40015014:	e58d2004 	str	r2, [sp, #4]
40015018:	11a07001 	movne	r7, r1
4001501c:	e1a0b08a 	lsl	fp, sl, #1
40015020:	e2402001 	sub	r2, r0, #1
40015024:	e58d2008 	str	r2, [sp, #8]
40015028:	e2803009 	add	r3, r0, #9
4001502c:	e58d300c 	str	r3, [sp, #12]
40015030:	e59d3008 	ldr	r3, [sp, #8]
40015034:	e3a06008 	mov	r6, #8
40015038:	e3a05080 	mov	r5, #128	; 0x80
4001503c:	e5f38001 	ldrb	r8, [r3, #1]!
40015040:	e58d3008 	str	r3, [sp, #8]
40015044:	e3c42002 	bic	r2, r4, #2
40015048:	e3a03034 	mov	r3, #52	; 0x34
4001504c:	e1180005 	tst	r8, r5
40015050:	e2224001 	eor	r4, r2, #1
40015054:	e0010493 	mul	r1, r3, r4
40015058:	0a000004 	beq	40015070 <LtcEncoder::Encode(void*)+0x90>
4001505c:	e3520000 	cmp	r2, #0
40015060:	13a0109c 	movne	r1, #156	; 0x9c
40015064:	03a01068 	moveq	r1, #104	; 0x68
40015068:	13a04003 	movne	r4, #3
4001506c:	03a04002 	moveq	r4, #2
40015070:	e59d3004 	ldr	r3, [sp, #4]
40015074:	e35a0000 	cmp	sl, #0
40015078:	e1a00007 	mov	r0, r7
4001507c:	e1a0200b 	mov	r2, fp
40015080:	e0831001 	add	r1, r3, r1
40015084:	e0891001 	add	r1, r9, r1
40015088:	0a000001 	beq	40015094 <LtcEncoder::Encode(void*)+0xb4>
4001508c:	e087700b 	add	r7, r7, fp
40015090:	eb0000eb 	bl	40015444 <memcpy>
40015094:	e1a050a5 	lsr	r5, r5, #1
40015098:	e2566001 	subs	r6, r6, #1
4001509c:	1affffe8 	bne	40015044 <LtcEncoder::Encode(void*)+0x64>
400150a0:	e59d3008 	ldr	r3, [sp, #8]
400150a4:	e59d200c 	ldr	r2, [sp, #12]
400150a8:	e1530002 	cmp	r3, r2
400150ac:	1affffdf 	bne	40015030 <LtcEncoder::Encode(void*)+0x50>
400150b0:	e28dd014 	add	sp, sp, #20
400150b4:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

400150b8 <LtcEncoder::GetBufferSize()>:
400150b8:	e5902010 	ldr	r2, [r0, #16]
400150bc:	e30135b4 	movw	r3, #5556	; 0x15b4
400150c0:	e3443003 	movt	r3, #16387	; 0x4003
400150c4:	e3a010d8 	mov	r1, #216	; 0xd8
400150c8:	e0233291 	mla	r3, r1, r2, r3
400150cc:	e30b0b80 	movw	r0, #48000	; 0xbb80
400150d0:	e5933004 	ldr	r3, [r3, #4]
400150d4:	e730f310 	udiv	r0, r0, r3
400150d8:	e12fff1e 	bx	lr

400150dc <LtcEncoder::SetTimeCode(ltc::TimeCode const*, bool)>:
400150dc:	e92d40f0 	push	{r4, r5, r6, r7, lr}
400150e0:	e30c3ccd 	movw	r3, #52429	; 0xcccd
400150e4:	e5d1c000 	ldrb	ip, [r1]
400150e8:	e3a0600a 	mov	r6, #10
400150ec:	e34c3ccc 	movt	r3, #52428	; 0xcccc
400150f0:	e084ec93 	umull	lr, r4, r3, ip
400150f4:	e1a041a4 	lsr	r4, r4, #3
400150f8:	e06cc496 	mls	ip, r6, r4, ip
400150fc:	e6ff4f34 	rbit	r4, r4
40015100:	e1a04c24 	lsr	r4, r4, #24
40015104:	e6efc07c 	uxtb	ip, ip
40015108:	e6ffcf3c 	rbit	ip, ip
4001510c:	e1a0cc2c 	lsr	ip, ip, #24
40015110:	e5c04001 	strb	r4, [r0, #1]
40015114:	e5c0c000 	strb	ip, [r0]
40015118:	e5d1e001 	ldrb	lr, [r1, #1]
4001511c:	e08c5e93 	umull	r5, ip, r3, lr
40015120:	e1a0c1ac 	lsr	ip, ip, #3
40015124:	e06eec96 	mls	lr, r6, ip, lr
40015128:	e6ffcf3c 	rbit	ip, ip
4001512c:	e1a0cc2c 	lsr	ip, ip, #24
40015130:	e6efe07e 	uxtb	lr, lr
40015134:	e6ffef3e 	rbit	lr, lr
40015138:	e1a0ec2e 	lsr	lr, lr, #24
4001513c:	e5c0e002 	strb	lr, [r0, #2]
40015140:	e5c0c003 	strb	ip, [r0, #3]
40015144:	e5d15002 	ldrb	r5, [r1, #2]
40015148:	e08e7593 	umull	r7, lr, r3, r5
4001514c:	e1a0e1ae 	lsr	lr, lr, #3
40015150:	e0655e96 	mls	r5, r6, lr, r5
40015154:	e6ffef3e 	rbit	lr, lr
40015158:	e1a0ec2e 	lsr	lr, lr, #24
4001515c:	e6ef5075 	uxtb	r5, r5
40015160:	e6ff5f35 	rbit	r5, r5
40015164:	e1a05c25 	lsr	r5, r5, #24
40015168:	e5c05004 	strb	r5, [r0, #4]
4001516c:	e5c0e005 	strb	lr, [r0, #5]
40015170:	e5d1e003 	ldrb	lr, [r1, #3]
40015174:	e0835e93 	umull	r5, r3, r3, lr
40015178:	e1a031a3 	lsr	r3, r3, #3
4001517c:	e06ee396 	mls	lr, r6, r3, lr
40015180:	e6ff3f33 	rbit	r3, r3
40015184:	e1a03c23 	lsr	r3, r3, #24
40015188:	e6efe07e 	uxtb	lr, lr
4001518c:	e6ffef3e 	rbit	lr, lr
40015190:	e1a0ec2e 	lsr	lr, lr, #24
40015194:	e5c03007 	strb	r3, [r0, #7]
40015198:	e5c0e006 	strb	lr, [r0, #6]
4001519c:	e5d1e004 	ldrb	lr, [r1, #4]
400151a0:	e20ee003 	and	lr, lr, #3
400151a4:	e580e010 	str	lr, [r0, #16]
400151a8:	e5d1e004 	ldrb	lr, [r1, #4]
400151ac:	e35e0002 	cmp	lr, #2
400151b0:	03844020 	orreq	r4, r4, #32
400151b4:	05c04001 	strbeq	r4, [r0, #1]
400151b8:	e3520000 	cmp	r2, #0
400151bc:	13833020 	orrne	r3, r3, #32
400151c0:	15c03007 	strbne	r3, [r0, #7]
400151c4:	e5d12004 	ldrb	r2, [r1, #4]
400151c8:	e3520001 	cmp	r2, #1
400151cc:	0a000012 	beq	4001521c <LtcEncoder::SetTimeCode(ltc::TimeCode const*, bool)+0x140>
400151d0:	e5903004 	ldr	r3, [r0, #4]
400151d4:	e20cc0ef 	and	ip, ip, #239	; 0xef
400151d8:	e5c0c003 	strb	ip, [r0, #3]
400151dc:	e3061996 	movw	r1, #27030	; 0x6996
400151e0:	e5902000 	ldr	r2, [r0]
400151e4:	e0233823 	eor	r3, r3, r3, lsr #16
400151e8:	e0222822 	eor	r2, r2, r2, lsr #16
400151ec:	e0233423 	eor	r3, r3, r3, lsr #8
400151f0:	e0222422 	eor	r2, r2, r2, lsr #8
400151f4:	e0233223 	eor	r3, r3, r3, lsr #4
400151f8:	e0222222 	eor	r2, r2, r2, lsr #4
400151fc:	e203300f 	and	r3, r3, #15
40015200:	e202200f 	and	r2, r2, #15
40015204:	e1a03351 	asr	r3, r1, r3
40015208:	e0233251 	eor	r3, r3, r1, asr r2
4001520c:	e3130001 	tst	r3, #1
40015210:	038cc010 	orreq	ip, ip, #16
40015214:	05c0c003 	strbeq	ip, [r0, #3]
40015218:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
4001521c:	e5901000 	ldr	r1, [r0]
40015220:	e20330ef 	and	r3, r3, #239	; 0xef
40015224:	e5c03007 	strb	r3, [r0, #7]
40015228:	e306c996 	movw	ip, #27030	; 0x6996
4001522c:	e5902004 	ldr	r2, [r0, #4]
40015230:	e0211821 	eor	r1, r1, r1, lsr #16
40015234:	e0222822 	eor	r2, r2, r2, lsr #16
40015238:	e0211421 	eor	r1, r1, r1, lsr #8
4001523c:	e0222422 	eor	r2, r2, r2, lsr #8
40015240:	e0211221 	eor	r1, r1, r1, lsr #4
40015244:	e0222222 	eor	r2, r2, r2, lsr #4
40015248:	e201100f 	and	r1, r1, #15
4001524c:	e202200f 	and	r2, r2, #15
40015250:	e1a0225c 	asr	r2, ip, r2
40015254:	e022215c 	eor	r2, r2, ip, asr r1
40015258:	e3120001 	tst	r2, #1
4001525c:	03833010 	orreq	r3, r3, #16
40015260:	05c03007 	strbeq	r3, [r0, #7]
40015264:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}

40015268 <LtcDisplayRgbPanel::WriteChar(unsigned char, unsigned char, ltcdisplayrgb::Colours&)>:
40015268:	e12fff1e 	bx	lr

4001526c <LtcDisplayRgbPanel::~LtcDisplayRgbPanel()>:
4001526c:	e92d4070 	push	{r4, r5, r6, lr}
40015270:	e1a04000 	mov	r4, r0
40015274:	e5905004 	ldr	r5, [r0, #4]
40015278:	e59f3024 	ldr	r3, [pc, #36]	; 400152a4 <LtcDisplayRgbPanel::~LtcDisplayRgbPanel()+0x38>
4001527c:	e3550000 	cmp	r5, #0
40015280:	e5803000 	str	r3, [r0]
40015284:	0a000004 	beq	4001529c <LtcDisplayRgbPanel::~LtcDisplayRgbPanel()+0x30>
40015288:	e1a00005 	mov	r0, r5
4001528c:	eb0011a6 	bl	4001992c <RgbPanel::PlatformCleanUp()>
40015290:	e3a01028 	mov	r1, #40	; 0x28
40015294:	e1a00005 	mov	r0, r5
40015298:	eb00604d 	bl	4002d3d4 <operator delete(void*, unsigned int)>
4001529c:	e1a00004 	mov	r0, r4
400152a0:	e8bd8070 	pop	{r4, r5, r6, pc}
400152a4:	4003199c 	mulmi	r3, ip, r9

400152a8 <LtcDisplayRgbPanel::~LtcDisplayRgbPanel()>:
400152a8:	e92d4010 	push	{r4, lr}
400152ac:	e1a04000 	mov	r4, r0
400152b0:	ebffffed 	bl	4001526c <LtcDisplayRgbPanel::~LtcDisplayRgbPanel()>
400152b4:	e1a00004 	mov	r0, r4
400152b8:	e3a01034 	mov	r1, #52	; 0x34
400152bc:	eb006044 	bl	4002d3d4 <operator delete(void*, unsigned int)>
400152c0:	e1a00004 	mov	r0, r4
400152c4:	e8bd8010 	pop	{r4, pc}

400152c8 <LtcDisplayRgbPanel::Init()>:
400152c8:	e92d4010 	push	{r4, lr}
400152cc:	e1a02000 	mov	r2, r0
400152d0:	e2803008 	add	r3, r0, #8
400152d4:	e280c00c 	add	ip, r0, #12
400152d8:	e3a0e020 	mov	lr, #32
400152dc:	e3a01000 	mov	r1, #0
400152e0:	e2834008 	add	r4, r3, #8
400152e4:	e1530004 	cmp	r3, r4
400152e8:	14c3e001 	strbne	lr, [r3], #1
400152ec:	1afffffc 	bne	400152e4 <LtcDisplayRgbPanel::Init()+0x1c>
400152f0:	e5c21028 	strb	r1, [r2, #40]	; 0x28
400152f4:	e2822003 	add	r2, r2, #3
400152f8:	e5c21026 	strb	r1, [r2, #38]	; 0x26
400152fc:	e5c21027 	strb	r1, [r2, #39]	; 0x27
40015300:	e152000c 	cmp	r2, ip
40015304:	1afffff5 	bne	400152e0 <LtcDisplayRgbPanel::Init()+0x18>
40015308:	e8bd4010 	pop	{r4, lr}
4001530c:	e5900004 	ldr	r0, [r0, #4]
40015310:	ea001199 	b	4001997c <RgbPanel::Start()>

40015314 <LtcDisplayRgbPanel::Print()>:
40015314:	e59f0000 	ldr	r0, [pc]	; 4001531c <LtcDisplayRgbPanel::Print()+0x8>
40015318:	ea005e1c 	b	4002cb90 <printf>
4001531c:	40031914 	andmi	r1, r3, r4, lsl r9

40015320 <LtcDisplayRgbPanel::ShowMessage(char const*, ltcdisplayrgb::Colours&)>:
40015320:	e92d407f 	push	{r0, r1, r2, r3, r4, r5, r6, lr}
40015324:	e1a05002 	mov	r5, r2
40015328:	e1a04000 	mov	r4, r0
4001532c:	e1a06001 	mov	r6, r1
40015330:	e5900004 	ldr	r0, [r0, #4]
40015334:	eb001055 	bl	40019490 <RgbPanel::SetColonsOff()>
40015338:	e5d53002 	ldrb	r3, [r5, #2]
4001533c:	e1a02006 	mov	r2, r6
40015340:	e5940004 	ldr	r0, [r4, #4]
40015344:	e3a01001 	mov	r1, #1
40015348:	e58d3008 	str	r3, [sp, #8]
4001534c:	e5d53001 	ldrb	r3, [r5, #1]
40015350:	e58d3004 	str	r3, [sp, #4]
40015354:	e5d53000 	ldrb	r3, [r5]
40015358:	e58d3000 	str	r3, [sp]
4001535c:	e3a03008 	mov	r3, #8
40015360:	eb000fec 	bl	40019318 <RgbPanel::TextLine(unsigned char, char const*, unsigned long, unsigned char, unsigned char, unsigned char)>
40015364:	e5940004 	ldr	r0, [r4, #4]
40015368:	e28dd010 	add	sp, sp, #16
4001536c:	e8bd4070 	pop	{r4, r5, r6, lr}
40015370:	ea0011ea 	b	40019b20 <RgbPanel::Show()>

40015374 <LtcDisplayRgbPanel::ShowInfo(char const*, unsigned long, ltcdisplayrgb::Colours&)>:
40015374:	e3520008 	cmp	r2, #8
40015378:	e92d4030 	push	{r4, r5, lr}
4001537c:	e1a04000 	mov	r4, r0
40015380:	e284c018 	add	ip, r4, #24
40015384:	31a00002 	movcc	r0, r2
40015388:	23a00008 	movcs	r0, #8
4001538c:	e24dd014 	sub	sp, sp, #20
40015390:	e0815000 	add	r5, r1, r0
40015394:	e1a0200c 	mov	r2, ip
40015398:	e1510005 	cmp	r1, r5
4001539c:	1a000007 	bne	400153c0 <LtcDisplayRgbPanel::ShowInfo(char const*, unsigned long, ltcdisplayrgb::Colours&)+0x4c>
400153a0:	e2801018 	add	r1, r0, #24
400153a4:	e284c020 	add	ip, r4, #32
400153a8:	e0841001 	add	r1, r4, r1
400153ac:	e3a00020 	mov	r0, #32
400153b0:	e151000c 	cmp	r1, ip
400153b4:	0a000004 	beq	400153cc <LtcDisplayRgbPanel::ShowInfo(char const*, unsigned long, ltcdisplayrgb::Colours&)+0x58>
400153b8:	e4c10001 	strb	r0, [r1], #1
400153bc:	eafffffb 	b	400153b0 <LtcDisplayRgbPanel::ShowInfo(char const*, unsigned long, ltcdisplayrgb::Colours&)+0x3c>
400153c0:	e4d1e001 	ldrb	lr, [r1], #1
400153c4:	e4cce001 	strb	lr, [ip], #1
400153c8:	eafffff2 	b	40015398 <LtcDisplayRgbPanel::ShowInfo(char const*, unsigned long, ltcdisplayrgb::Colours&)+0x24>
400153cc:	e5d31000 	ldrb	r1, [r3]
400153d0:	e5940004 	ldr	r0, [r4, #4]
400153d4:	e5c4102e 	strb	r1, [r4, #46]	; 0x2e
400153d8:	e5d31001 	ldrb	r1, [r3, #1]
400153dc:	e5c4102f 	strb	r1, [r4, #47]	; 0x2f
400153e0:	e5d31002 	ldrb	r1, [r3, #2]
400153e4:	e5c41030 	strb	r1, [r4, #48]	; 0x30
400153e8:	e58d1008 	str	r1, [sp, #8]
400153ec:	e5d31001 	ldrb	r1, [r3, #1]
400153f0:	e58d1004 	str	r1, [sp, #4]
400153f4:	e3a01003 	mov	r1, #3
400153f8:	e5d33000 	ldrb	r3, [r3]
400153fc:	e58d3000 	str	r3, [sp]
40015400:	e3a03008 	mov	r3, #8
40015404:	eb000fc3 	bl	40019318 <RgbPanel::TextLine(unsigned char, char const*, unsigned long, unsigned char, unsigned char, unsigned char)>
40015408:	e5d4302a 	ldrb	r3, [r4, #42]	; 0x2a
4001540c:	e3a01001 	mov	r1, #1
40015410:	e5940004 	ldr	r0, [r4, #4]
40015414:	e58d3008 	str	r3, [sp, #8]
40015418:	e5d43029 	ldrb	r3, [r4, #41]	; 0x29
4001541c:	e58d3004 	str	r3, [sp, #4]
40015420:	e5d43028 	ldrb	r3, [r4, #40]	; 0x28
40015424:	e58d3000 	str	r3, [sp]
40015428:	e3a03008 	mov	r3, #8
4001542c:	e0842003 	add	r2, r4, r3
40015430:	eb000fb8 	bl	40019318 <RgbPanel::TextLine(unsigned char, char const*, unsigned long, unsigned char, unsigned char, unsigned char)>
40015434:	e5940004 	ldr	r0, [r4, #4]
40015438:	e28dd014 	add	sp, sp, #20
4001543c:	e8bd4030 	pop	{r4, r5, lr}
40015440:	ea0011b6 	b	40019b20 <RgbPanel::Show()>

40015444 <memcpy>:
40015444:	e0812002 	add	r2, r1, r2
40015448:	e1a03000 	mov	r3, r0
4001544c:	e1510002 	cmp	r1, r2
40015450:	012fff1e 	bxeq	lr
40015454:	e4d1c001 	ldrb	ip, [r1], #1
40015458:	e4c3c001 	strb	ip, [r3], #1
4001545c:	eafffffa 	b	4001544c <memcpy+0x8>

40015460 <LtcDisplayRgbPanel::Show(char const*, ltcdisplayrgb::Colours&, ltcdisplayrgb::Colours&)>:
40015460:	e92d40f0 	push	{r4, r5, r6, r7, lr}
40015464:	e1a06003 	mov	r6, r3
40015468:	e24dd01c 	sub	sp, sp, #28
4001546c:	e1a04000 	mov	r4, r0
40015470:	e5900004 	ldr	r0, [r0, #4]
40015474:	e1a05001 	mov	r5, r1
40015478:	e1a07002 	mov	r7, r2
4001547c:	eb001003 	bl	40019490 <RgbPanel::SetColonsOff()>
40015480:	e5d63002 	ldrb	r3, [r6, #2]
40015484:	e3a02001 	mov	r2, #1
40015488:	e5940004 	ldr	r0, [r4, #4]
4001548c:	e58d3008 	str	r3, [sp, #8]
40015490:	e5d63001 	ldrb	r3, [r6, #1]
40015494:	e58d3004 	str	r3, [sp, #4]
40015498:	e5d63000 	ldrb	r3, [r6]
4001549c:	e58d3000 	str	r3, [sp]
400154a0:	e3a03000 	mov	r3, #0
400154a4:	e5d51002 	ldrb	r1, [r5, #2]
400154a8:	eb000fd9 	bl	40019414 <RgbPanel::SetColon(char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)>
400154ac:	e5d63002 	ldrb	r3, [r6, #2]
400154b0:	e3a02003 	mov	r2, #3
400154b4:	e5940004 	ldr	r0, [r4, #4]
400154b8:	e58d3008 	str	r3, [sp, #8]
400154bc:	e5d63001 	ldrb	r3, [r6, #1]
400154c0:	e58d3004 	str	r3, [sp, #4]
400154c4:	e5d63000 	ldrb	r3, [r6]
400154c8:	e58d3000 	str	r3, [sp]
400154cc:	e3a03000 	mov	r3, #0
400154d0:	e5d51005 	ldrb	r1, [r5, #5]
400154d4:	eb000fce 	bl	40019414 <RgbPanel::SetColon(char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)>
400154d8:	e5d63002 	ldrb	r3, [r6, #2]
400154dc:	e3a02005 	mov	r2, #5
400154e0:	e5940004 	ldr	r0, [r4, #4]
400154e4:	e58d3008 	str	r3, [sp, #8]
400154e8:	e5d63001 	ldrb	r3, [r6, #1]
400154ec:	e58d3004 	str	r3, [sp, #4]
400154f0:	e5d63000 	ldrb	r3, [r6]
400154f4:	e1a06004 	mov	r6, r4
400154f8:	e58d3000 	str	r3, [sp]
400154fc:	e3a03000 	mov	r3, #0
40015500:	e5d51008 	ldrb	r1, [r5, #8]
40015504:	eb000fc2 	bl	40019414 <RgbPanel::SetColon(char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)>
40015508:	e5d53000 	ldrb	r3, [r5]
4001550c:	e3a02008 	mov	r2, #8
40015510:	e0840002 	add	r0, r4, r2
40015514:	e28d1010 	add	r1, sp, #16
40015518:	e5cd3010 	strb	r3, [sp, #16]
4001551c:	e5d53001 	ldrb	r3, [r5, #1]
40015520:	e5cd3011 	strb	r3, [sp, #17]
40015524:	e5d53003 	ldrb	r3, [r5, #3]
40015528:	e5cd3012 	strb	r3, [sp, #18]
4001552c:	e5d53004 	ldrb	r3, [r5, #4]
40015530:	e5cd3013 	strb	r3, [sp, #19]
40015534:	e5d53006 	ldrb	r3, [r5, #6]
40015538:	e5cd3014 	strb	r3, [sp, #20]
4001553c:	e5d53007 	ldrb	r3, [r5, #7]
40015540:	e5cd3015 	strb	r3, [sp, #21]
40015544:	e5d53009 	ldrb	r3, [r5, #9]
40015548:	e5cd3016 	strb	r3, [sp, #22]
4001554c:	e5d5300a 	ldrb	r3, [r5, #10]
40015550:	e3a05001 	mov	r5, #1
40015554:	e5cd3017 	strb	r3, [sp, #23]
40015558:	ebffffb9 	bl	40015444 <memcpy>
4001555c:	e5d73000 	ldrb	r3, [r7]
40015560:	e5c43028 	strb	r3, [r4, #40]	; 0x28
40015564:	e5d73001 	ldrb	r3, [r7, #1]
40015568:	e5c43029 	strb	r3, [r4, #41]	; 0x29
4001556c:	e5d73002 	ldrb	r3, [r7, #2]
40015570:	e5c4302a 	strb	r3, [r4, #42]	; 0x2a
40015574:	e5d6302a 	ldrb	r3, [r6, #42]	; 0x2a
40015578:	e6ef1075 	uxtb	r1, r5
4001557c:	e0842185 	add	r2, r4, r5, lsl #3
40015580:	e2855001 	add	r5, r5, #1
40015584:	e58d3008 	str	r3, [sp, #8]
40015588:	e2866003 	add	r6, r6, #3
4001558c:	e5d63026 	ldrb	r3, [r6, #38]	; 0x26
40015590:	e5940004 	ldr	r0, [r4, #4]
40015594:	e58d3004 	str	r3, [sp, #4]
40015598:	e5d63025 	ldrb	r3, [r6, #37]	; 0x25
4001559c:	e58d3000 	str	r3, [sp]
400155a0:	e3a03008 	mov	r3, #8
400155a4:	eb000f5b 	bl	40019318 <RgbPanel::TextLine(unsigned char, char const*, unsigned long, unsigned char, unsigned char, unsigned char)>
400155a8:	e3550005 	cmp	r5, #5
400155ac:	1afffff0 	bne	40015574 <LtcDisplayRgbPanel::Show(char const*, ltcdisplayrgb::Colours&, ltcdisplayrgb::Colours&)+0x114>
400155b0:	e5940004 	ldr	r0, [r4, #4]
400155b4:	eb001159 	bl	40019b20 <RgbPanel::Show()>
400155b8:	e28dd01c 	add	sp, sp, #28
400155bc:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}

400155c0 <LtcDisplayRgbPanel::ShowSysTime(char const*, ltcdisplayrgb::Colours&, ltcdisplayrgb::Colours&)>:
400155c0:	e92d40f0 	push	{r4, r5, r6, r7, lr}
400155c4:	e1a06003 	mov	r6, r3
400155c8:	e24dd01c 	sub	sp, sp, #28
400155cc:	e1a04000 	mov	r4, r0
400155d0:	e5900004 	ldr	r0, [r0, #4]
400155d4:	e1a05001 	mov	r5, r1
400155d8:	e1a07002 	mov	r7, r2
400155dc:	eb000fab 	bl	40019490 <RgbPanel::SetColonsOff()>
400155e0:	e5d63002 	ldrb	r3, [r6, #2]
400155e4:	e3a02002 	mov	r2, #2
400155e8:	e5940004 	ldr	r0, [r4, #4]
400155ec:	e58d3008 	str	r3, [sp, #8]
400155f0:	e5d63001 	ldrb	r3, [r6, #1]
400155f4:	e58d3004 	str	r3, [sp, #4]
400155f8:	e5d63000 	ldrb	r3, [r6]
400155fc:	e58d3000 	str	r3, [sp]
40015600:	e3a03000 	mov	r3, #0
40015604:	e5d51002 	ldrb	r1, [r5, #2]
40015608:	eb000f81 	bl	40019414 <RgbPanel::SetColon(char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)>
4001560c:	e5d63002 	ldrb	r3, [r6, #2]
40015610:	e3a02004 	mov	r2, #4
40015614:	e5940004 	ldr	r0, [r4, #4]
40015618:	e58d3008 	str	r3, [sp, #8]
4001561c:	e5d63001 	ldrb	r3, [r6, #1]
40015620:	e58d3004 	str	r3, [sp, #4]
40015624:	e5d63000 	ldrb	r3, [r6]
40015628:	e58d3000 	str	r3, [sp]
4001562c:	e3a03000 	mov	r3, #0
40015630:	e5d51005 	ldrb	r1, [r5, #5]
40015634:	eb000f76 	bl	40019414 <RgbPanel::SetColon(char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)>
40015638:	e3a03020 	mov	r3, #32
4001563c:	e28d1010 	add	r1, sp, #16
40015640:	e5cd3010 	strb	r3, [sp, #16]
40015644:	e3a02008 	mov	r2, #8
40015648:	e5cd3017 	strb	r3, [sp, #23]
4001564c:	e5d53000 	ldrb	r3, [r5]
40015650:	e5cd3011 	strb	r3, [sp, #17]
40015654:	e5d53001 	ldrb	r3, [r5, #1]
40015658:	e5cd3012 	strb	r3, [sp, #18]
4001565c:	e5d53003 	ldrb	r3, [r5, #3]
40015660:	e5cd3013 	strb	r3, [sp, #19]
40015664:	e5d53004 	ldrb	r3, [r5, #4]
40015668:	e5cd3014 	strb	r3, [sp, #20]
4001566c:	e5d53006 	ldrb	r3, [r5, #6]
40015670:	e5cd3015 	strb	r3, [sp, #21]
40015674:	e5d53007 	ldrb	r3, [r5, #7]
40015678:	e2845008 	add	r5, r4, #8
4001567c:	e1a00005 	mov	r0, r5
40015680:	e5cd3016 	strb	r3, [sp, #22]
40015684:	ebffff6e 	bl	40015444 <memcpy>
40015688:	e5d73000 	ldrb	r3, [r7]
4001568c:	e5940004 	ldr	r0, [r4, #4]
40015690:	e5c43028 	strb	r3, [r4, #40]	; 0x28
40015694:	e5d72001 	ldrb	r2, [r7, #1]
40015698:	e58d3000 	str	r3, [sp]
4001569c:	e3a03008 	mov	r3, #8
400156a0:	e5c42029 	strb	r2, [r4, #41]	; 0x29
400156a4:	e5d71002 	ldrb	r1, [r7, #2]
400156a8:	e58d2004 	str	r2, [sp, #4]
400156ac:	e1a02005 	mov	r2, r5
400156b0:	e5c4102a 	strb	r1, [r4, #42]	; 0x2a
400156b4:	e58d1008 	str	r1, [sp, #8]
400156b8:	e3a01001 	mov	r1, #1
400156bc:	eb000f15 	bl	40019318 <RgbPanel::TextLine(unsigned char, char const*, unsigned long, unsigned char, unsigned char, unsigned char)>
400156c0:	e5940004 	ldr	r0, [r4, #4]
400156c4:	e3a01002 	mov	r1, #2
400156c8:	eb000f28 	bl	40019370 <RgbPanel::ClearLine(unsigned char)>
400156cc:	e5d43030 	ldrb	r3, [r4, #48]	; 0x30
400156d0:	e2842018 	add	r2, r4, #24
400156d4:	e5940004 	ldr	r0, [r4, #4]
400156d8:	e3a01003 	mov	r1, #3
400156dc:	e58d3008 	str	r3, [sp, #8]
400156e0:	e5d4302f 	ldrb	r3, [r4, #47]	; 0x2f
400156e4:	e58d3004 	str	r3, [sp, #4]
400156e8:	e5d4302e 	ldrb	r3, [r4, #46]	; 0x2e
400156ec:	e58d3000 	str	r3, [sp]
400156f0:	e3a03008 	mov	r3, #8
400156f4:	eb000f07 	bl	40019318 <RgbPanel::TextLine(unsigned char, char const*, unsigned long, unsigned char, unsigned char, unsigned char)>
400156f8:	e5d43033 	ldrb	r3, [r4, #51]	; 0x33
400156fc:	e2842020 	add	r2, r4, #32
40015700:	e5940004 	ldr	r0, [r4, #4]
40015704:	e3a01004 	mov	r1, #4
40015708:	e58d3008 	str	r3, [sp, #8]
4001570c:	e5d43032 	ldrb	r3, [r4, #50]	; 0x32
40015710:	e58d3004 	str	r3, [sp, #4]
40015714:	e5d43031 	ldrb	r3, [r4, #49]	; 0x31
40015718:	e58d3000 	str	r3, [sp]
4001571c:	e3a03008 	mov	r3, #8
40015720:	eb000efc 	bl	40019318 <RgbPanel::TextLine(unsigned char, char const*, unsigned long, unsigned char, unsigned char, unsigned char)>
40015724:	e5940004 	ldr	r0, [r4, #4]
40015728:	eb0010fc 	bl	40019b20 <RgbPanel::Show()>
4001572c:	e28dd01c 	add	sp, sp, #28
40015730:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}

40015734 <LtcDisplayRgbPanel::ShowFPS(ltc::Type, ltcdisplayrgb::Colours&)>:
40015734:	e59f3038 	ldr	r3, [pc, #56]	; 40015774 <LtcDisplayRgbPanel::ShowFPS(ltc::Type, ltcdisplayrgb::Colours&)+0x40>
40015738:	e92d4070 	push	{r4, r5, r6, lr}
4001573c:	e1a05002 	mov	r5, r2
40015740:	e0811181 	add	r1, r1, r1, lsl #3
40015744:	e1a04000 	mov	r4, r0
40015748:	e0831001 	add	r1, r3, r1
4001574c:	e3a02008 	mov	r2, #8
40015750:	e2800010 	add	r0, r0, #16
40015754:	ebffff3a 	bl	40015444 <memcpy>
40015758:	e5d53000 	ldrb	r3, [r5]
4001575c:	e5c4302b 	strb	r3, [r4, #43]	; 0x2b
40015760:	e5d53001 	ldrb	r3, [r5, #1]
40015764:	e5c4302c 	strb	r3, [r4, #44]	; 0x2c
40015768:	e5d53002 	ldrb	r3, [r5, #2]
4001576c:	e5c4302d 	strb	r3, [r4, #45]	; 0x2d
40015770:	e8bd8070 	pop	{r4, r5, r6, pc}
40015774:	4003191f 	andmi	r1, r3, pc, lsl r9

40015778 <LtcDisplayRgbPanel::ShowSource(ltc::Source, ltcdisplayrgb::Colours&)>:
40015778:	e59f3038 	ldr	r3, [pc, #56]	; 400157b8 <LtcDisplayRgbPanel::ShowSource(ltc::Source, ltcdisplayrgb::Colours&)+0x40>
4001577c:	e92d4070 	push	{r4, r5, r6, lr}
40015780:	e1a05002 	mov	r5, r2
40015784:	e0811181 	add	r1, r1, r1, lsl #3
40015788:	e1a04000 	mov	r4, r0
4001578c:	e0831001 	add	r1, r3, r1
40015790:	e3a02008 	mov	r2, #8
40015794:	e2800020 	add	r0, r0, #32
40015798:	ebffff29 	bl	40015444 <memcpy>
4001579c:	e5d53000 	ldrb	r3, [r5]
400157a0:	e5c43031 	strb	r3, [r4, #49]	; 0x31
400157a4:	e5d53001 	ldrb	r3, [r5, #1]
400157a8:	e5c43032 	strb	r3, [r4, #50]	; 0x32
400157ac:	e5d53002 	ldrb	r3, [r5, #2]
400157b0:	e5c43033 	strb	r3, [r4, #51]	; 0x33
400157b4:	e8bd8070 	pop	{r4, r5, r6, pc}
400157b8:	4003194c 	andmi	r1, r3, ip, asr #18

400157bc <LtcDisplayRgbPanel::LtcDisplayRgbPanel()>:
400157bc:	e59f303c 	ldr	r3, [pc, #60]	; 40015800 <LtcDisplayRgbPanel::LtcDisplayRgbPanel()+0x44>
400157c0:	e92d4037 	push	{r0, r1, r2, r4, r5, lr}
400157c4:	e1a04000 	mov	r4, r0
400157c8:	e5803000 	str	r3, [r0]
400157cc:	e3a00028 	mov	r0, #40	; 0x28
400157d0:	eb005f00 	bl	4002d3d8 <operator new(unsigned int)>
400157d4:	e3a03000 	mov	r3, #0
400157d8:	e3a02020 	mov	r2, #32
400157dc:	e58d3000 	str	r3, [sp]
400157e0:	e3a01040 	mov	r1, #64	; 0x40
400157e4:	e3a03001 	mov	r3, #1
400157e8:	e1a05000 	mov	r5, r0
400157ec:	eb000f39 	bl	400194d8 <RgbPanel::RgbPanel(unsigned long, unsigned long, unsigned long, rgbpanel::Types)>
400157f0:	e5845004 	str	r5, [r4, #4]
400157f4:	e1a00004 	mov	r0, r4
400157f8:	e28dd00c 	add	sp, sp, #12
400157fc:	e8bd8030 	pop	{r4, r5, pc}
40015800:	4003199c 	mulmi	r3, ip, r9

40015804 <LtcDisplayWS28xx7Segment::~LtcDisplayWS28xx7Segment()>:
40015804:	e12fff1e 	bx	lr

40015808 <LtcDisplayWS28xx7Segment::Show(char const*, ltcdisplayrgb::Colours&, ltcdisplayrgb::Colours&)>:
40015808:	e92d41ff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
4001580c:	e1a04001 	mov	r4, r1
40015810:	e5d11000 	ldrb	r1, [r1]
40015814:	e1a06003 	mov	r6, r3
40015818:	e5d23002 	ldrb	r3, [r2, #2]
4001581c:	e1a05000 	mov	r5, r0
40015820:	e5cd1008 	strb	r1, [sp, #8]
40015824:	e5d41001 	ldrb	r1, [r4, #1]
40015828:	e58d3000 	str	r3, [sp]
4001582c:	e5cd1009 	strb	r1, [sp, #9]
40015830:	e5d41003 	ldrb	r1, [r4, #3]
40015834:	e5d23001 	ldrb	r3, [r2, #1]
40015838:	e5cd100a 	strb	r1, [sp, #10]
4001583c:	e5d41004 	ldrb	r1, [r4, #4]
40015840:	e5d22000 	ldrb	r2, [r2]
40015844:	e5cd100b 	strb	r1, [sp, #11]
40015848:	e5d41006 	ldrb	r1, [r4, #6]
4001584c:	e5900004 	ldr	r0, [r0, #4]
40015850:	e5cd100c 	strb	r1, [sp, #12]
40015854:	e5d41007 	ldrb	r1, [r4, #7]
40015858:	e5cd100d 	strb	r1, [sp, #13]
4001585c:	e5d41009 	ldrb	r1, [r4, #9]
40015860:	e5cd100e 	strb	r1, [sp, #14]
40015864:	e5d4100a 	ldrb	r1, [r4, #10]
40015868:	e5cd100f 	strb	r1, [sp, #15]
4001586c:	e28d1008 	add	r1, sp, #8
40015870:	eb000a02 	bl	40018080 <WS28xxDisplay7Segment::WriteAll(char const*, unsigned char, unsigned char, unsigned char)>
40015874:	e5d67000 	ldrb	r7, [r6]
40015878:	e3a02000 	mov	r2, #0
4001587c:	e5d68001 	ldrb	r8, [r6, #1]
40015880:	e5d66002 	ldrb	r6, [r6, #2]
40015884:	e1a03007 	mov	r3, r7
40015888:	e5d41002 	ldrb	r1, [r4, #2]
4001588c:	e5950004 	ldr	r0, [r5, #4]
40015890:	e58d6004 	str	r6, [sp, #4]
40015894:	e58d8000 	str	r8, [sp]
40015898:	eb000970 	bl	40017e60 <WS28xxDisplay7Segment::WriteColon(char, unsigned long, unsigned char, unsigned char, unsigned char)>
4001589c:	e5d41005 	ldrb	r1, [r4, #5]
400158a0:	e1a03007 	mov	r3, r7
400158a4:	e5950004 	ldr	r0, [r5, #4]
400158a8:	e3a02001 	mov	r2, #1
400158ac:	e58d6004 	str	r6, [sp, #4]
400158b0:	e58d8000 	str	r8, [sp]
400158b4:	eb000969 	bl	40017e60 <WS28xxDisplay7Segment::WriteColon(char, unsigned long, unsigned char, unsigned char, unsigned char)>
400158b8:	e5d41008 	ldrb	r1, [r4, #8]
400158bc:	e1a03007 	mov	r3, r7
400158c0:	e5950004 	ldr	r0, [r5, #4]
400158c4:	e3a02002 	mov	r2, #2
400158c8:	e58d6004 	str	r6, [sp, #4]
400158cc:	e58d8000 	str	r8, [sp]
400158d0:	eb000962 	bl	40017e60 <WS28xxDisplay7Segment::WriteColon(char, unsigned long, unsigned char, unsigned char, unsigned char)>
400158d4:	e5950004 	ldr	r0, [r5, #4]
400158d8:	eb0009fa 	bl	400180c8 <WS28xxDisplay7Segment::Show()>
400158dc:	e28dd010 	add	sp, sp, #16
400158e0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

400158e4 <LtcDisplayWS28xx7Segment::ShowSysTime(char const*, ltcdisplayrgb::Colours&, ltcdisplayrgb::Colours&)>:
400158e4:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
400158e8:	e1a04001 	mov	r4, r1
400158ec:	e5d11000 	ldrb	r1, [r1]
400158f0:	e24dd014 	sub	sp, sp, #20
400158f4:	e1a06003 	mov	r6, r3
400158f8:	e1a05000 	mov	r5, r0
400158fc:	e5cd100a 	strb	r1, [sp, #10]
40015900:	e3a09020 	mov	r9, #32
40015904:	e5d41001 	ldrb	r1, [r4, #1]
40015908:	e5d23002 	ldrb	r3, [r2, #2]
4001590c:	e5cd100b 	strb	r1, [sp, #11]
40015910:	e5d41003 	ldrb	r1, [r4, #3]
40015914:	e58d3000 	str	r3, [sp]
40015918:	e5cd100c 	strb	r1, [sp, #12]
4001591c:	e5d41004 	ldrb	r1, [r4, #4]
40015920:	e5d23001 	ldrb	r3, [r2, #1]
40015924:	e5cd100d 	strb	r1, [sp, #13]
40015928:	e5d41006 	ldrb	r1, [r4, #6]
4001592c:	e5d22000 	ldrb	r2, [r2]
40015930:	e5cd100e 	strb	r1, [sp, #14]
40015934:	e5d41007 	ldrb	r1, [r4, #7]
40015938:	e5900004 	ldr	r0, [r0, #4]
4001593c:	e5cd100f 	strb	r1, [sp, #15]
40015940:	e28d1008 	add	r1, sp, #8
40015944:	e5cd9008 	strb	r9, [sp, #8]
40015948:	e5cd9009 	strb	r9, [sp, #9]
4001594c:	eb0009cb 	bl	40018080 <WS28xxDisplay7Segment::WriteAll(char const*, unsigned char, unsigned char, unsigned char)>
40015950:	e5d67000 	ldrb	r7, [r6]
40015954:	e1a01009 	mov	r1, r9
40015958:	e5d68001 	ldrb	r8, [r6, #1]
4001595c:	e3a02000 	mov	r2, #0
40015960:	e5d66002 	ldrb	r6, [r6, #2]
40015964:	e1a03007 	mov	r3, r7
40015968:	e5950004 	ldr	r0, [r5, #4]
4001596c:	e58d6004 	str	r6, [sp, #4]
40015970:	e58d8000 	str	r8, [sp]
40015974:	eb000939 	bl	40017e60 <WS28xxDisplay7Segment::WriteColon(char, unsigned long, unsigned char, unsigned char, unsigned char)>
40015978:	e5d41002 	ldrb	r1, [r4, #2]
4001597c:	e1a03007 	mov	r3, r7
40015980:	e5950004 	ldr	r0, [r5, #4]
40015984:	e3a02001 	mov	r2, #1
40015988:	e58d6004 	str	r6, [sp, #4]
4001598c:	e58d8000 	str	r8, [sp]
40015990:	eb000932 	bl	40017e60 <WS28xxDisplay7Segment::WriteColon(char, unsigned long, unsigned char, unsigned char, unsigned char)>
40015994:	e5d41005 	ldrb	r1, [r4, #5]
40015998:	e1a03007 	mov	r3, r7
4001599c:	e5950004 	ldr	r0, [r5, #4]
400159a0:	e3a02002 	mov	r2, #2
400159a4:	e58d6004 	str	r6, [sp, #4]
400159a8:	e58d8000 	str	r8, [sp]
400159ac:	eb00092b 	bl	40017e60 <WS28xxDisplay7Segment::WriteColon(char, unsigned long, unsigned char, unsigned char, unsigned char)>
400159b0:	e5950004 	ldr	r0, [r5, #4]
400159b4:	eb0009c3 	bl	400180c8 <WS28xxDisplay7Segment::Show()>
400159b8:	e28dd014 	add	sp, sp, #20
400159bc:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}

400159c0 <LtcDisplayWS28xx7Segment::ShowMessage(char const*, ltcdisplayrgb::Colours&)>:
400159c0:	e92d4013 	push	{r0, r1, r4, lr}
400159c4:	e1a04000 	mov	r4, r0
400159c8:	e5d23002 	ldrb	r3, [r2, #2]
400159cc:	e58d3000 	str	r3, [sp]
400159d0:	e5d23001 	ldrb	r3, [r2, #1]
400159d4:	e5900004 	ldr	r0, [r0, #4]
400159d8:	e5d22000 	ldrb	r2, [r2]
400159dc:	eb0009a7 	bl	40018080 <WS28xxDisplay7Segment::WriteAll(char const*, unsigned char, unsigned char, unsigned char)>
400159e0:	e5940004 	ldr	r0, [r4, #4]
400159e4:	eb00093f 	bl	40017ee8 <WS28xxDisplay7Segment::SetColonsOff()>
400159e8:	e5940004 	ldr	r0, [r4, #4]
400159ec:	e28dd008 	add	sp, sp, #8
400159f0:	e8bd4010 	pop	{r4, lr}
400159f4:	ea0009b3 	b	400180c8 <WS28xxDisplay7Segment::Show()>

400159f8 <LtcDisplayWS28xx7Segment::WriteChar(unsigned char, unsigned char, ltcdisplayrgb::Colours&)>:
400159f8:	e92d4013 	push	{r0, r1, r4, lr}
400159fc:	e1a04000 	mov	r4, r0
40015a00:	e5d30002 	ldrb	r0, [r3, #2]
40015a04:	e58d0004 	str	r0, [sp, #4]
40015a08:	e5d30001 	ldrb	r0, [r3, #1]
40015a0c:	e58d0000 	str	r0, [sp]
40015a10:	e5940004 	ldr	r0, [r4, #4]
40015a14:	e5d33000 	ldrb	r3, [r3]
40015a18:	eb000958 	bl	40017f80 <WS28xxDisplay7Segment::WriteChar(char, unsigned long, unsigned char, unsigned char, unsigned char)>
40015a1c:	e5940004 	ldr	r0, [r4, #4]
40015a20:	e28dd008 	add	sp, sp, #8
40015a24:	e8bd4010 	pop	{r4, lr}
40015a28:	ea0009a6 	b	400180c8 <WS28xxDisplay7Segment::Show()>

40015a2c <LtcDisplayWS28xx7Segment::Print()>:
40015a2c:	e59f000c 	ldr	r0, [pc, #12]	; 40015a40 <LtcDisplayWS28xx7Segment::Print()+0x14>
40015a30:	e3a0303e 	mov	r3, #62	; 0x3e
40015a34:	e3a02003 	mov	r2, #3
40015a38:	e3a01008 	mov	r1, #8
40015a3c:	ea005c53 	b	4002cb90 <printf>
40015a40:	400319c8 	andmi	r1, r3, r8, asr #19

40015a44 <LtcDisplayWS28xx7Segment::~LtcDisplayWS28xx7Segment()>:
40015a44:	e92d4010 	push	{r4, lr}
40015a48:	e3a01008 	mov	r1, #8
40015a4c:	e1a04000 	mov	r4, r0
40015a50:	eb005e5f 	bl	4002d3d4 <operator delete(void*, unsigned int)>
40015a54:	e1a00004 	mov	r0, r4
40015a58:	e8bd8010 	pop	{r4, pc}

40015a5c <LtcDisplayWS28xx7Segment::LtcDisplayWS28xx7Segment(pixel::Type, pixel::Map)>:
40015a5c:	e59f3034 	ldr	r3, [pc, #52]	; 40015a98 <LtcDisplayWS28xx7Segment::LtcDisplayWS28xx7Segment(pixel::Type, pixel::Map)+0x3c>
40015a60:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40015a64:	e1a04000 	mov	r4, r0
40015a68:	e5803000 	str	r3, [r0]
40015a6c:	e3a00004 	mov	r0, #4
40015a70:	e1a06001 	mov	r6, r1
40015a74:	e1a07002 	mov	r7, r2
40015a78:	eb005e56 	bl	4002d3d8 <operator new(unsigned int)>
40015a7c:	e1a05000 	mov	r5, r0
40015a80:	e1a02007 	mov	r2, r7
40015a84:	e1a01006 	mov	r1, r6
40015a88:	eb0008d6 	bl	40017de8 <WS28xxDisplay7Segment::WS28xxDisplay7Segment(pixel::Type, pixel::Map)>
40015a8c:	e5845004 	str	r5, [r4, #4]
40015a90:	e1a00004 	mov	r0, r4
40015a94:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40015a98:	400319fc 	strdmi	r1, [r3], -ip

40015a9c <LtcDisplayWS28xxMatrix::~LtcDisplayWS28xxMatrix()>:
40015a9c:	e12fff1e 	bx	lr

40015aa0 <LtcDisplayWS28xxMatrix::Show(char const*, ltcdisplayrgb::Colours&, ltcdisplayrgb::Colours&)>:
40015aa0:	e92d40f0 	push	{r4, r5, r6, r7, lr}
40015aa4:	e1a05003 	mov	r5, r3
40015aa8:	e24dd01c 	sub	sp, sp, #28
40015aac:	e1a06000 	mov	r6, r0
40015ab0:	e5900004 	ldr	r0, [r0, #4]
40015ab4:	e1a04001 	mov	r4, r1
40015ab8:	e1a07002 	mov	r7, r2
40015abc:	eb000a1e 	bl	4001833c <WS28xxDisplayMatrix::SetColonsOff()>
40015ac0:	e5d53002 	ldrb	r3, [r5, #2]
40015ac4:	e3a02001 	mov	r2, #1
40015ac8:	e5d41002 	ldrb	r1, [r4, #2]
40015acc:	e58d3004 	str	r3, [sp, #4]
40015ad0:	e5d53001 	ldrb	r3, [r5, #1]
40015ad4:	e5960004 	ldr	r0, [r6, #4]
40015ad8:	e58d3000 	str	r3, [sp]
40015adc:	e5d53000 	ldrb	r3, [r5]
40015ae0:	eb000a03 	bl	400182f4 <WS28xxDisplayMatrix::SetColon(char, unsigned long, unsigned char, unsigned char, unsigned char)>
40015ae4:	e5d53002 	ldrb	r3, [r5, #2]
40015ae8:	e3a02003 	mov	r2, #3
40015aec:	e5d41005 	ldrb	r1, [r4, #5]
40015af0:	e58d3004 	str	r3, [sp, #4]
40015af4:	e5d53001 	ldrb	r3, [r5, #1]
40015af8:	e5960004 	ldr	r0, [r6, #4]
40015afc:	e58d3000 	str	r3, [sp]
40015b00:	e5d53000 	ldrb	r3, [r5]
40015b04:	eb0009fa 	bl	400182f4 <WS28xxDisplayMatrix::SetColon(char, unsigned long, unsigned char, unsigned char, unsigned char)>
40015b08:	e5d53002 	ldrb	r3, [r5, #2]
40015b0c:	e3a02005 	mov	r2, #5
40015b10:	e5d41008 	ldrb	r1, [r4, #8]
40015b14:	e58d3004 	str	r3, [sp, #4]
40015b18:	e5d53001 	ldrb	r3, [r5, #1]
40015b1c:	e5960004 	ldr	r0, [r6, #4]
40015b20:	e58d3000 	str	r3, [sp]
40015b24:	e5d53000 	ldrb	r3, [r5]
40015b28:	eb0009f1 	bl	400182f4 <WS28xxDisplayMatrix::SetColon(char, unsigned long, unsigned char, unsigned char, unsigned char)>
40015b2c:	e5d43000 	ldrb	r3, [r4]
40015b30:	e28d2010 	add	r2, sp, #16
40015b34:	e5960004 	ldr	r0, [r6, #4]
40015b38:	e3a01001 	mov	r1, #1
40015b3c:	e5cd3010 	strb	r3, [sp, #16]
40015b40:	e5d43001 	ldrb	r3, [r4, #1]
40015b44:	e5cd3011 	strb	r3, [sp, #17]
40015b48:	e5d43003 	ldrb	r3, [r4, #3]
40015b4c:	e5cd3012 	strb	r3, [sp, #18]
40015b50:	e5d43004 	ldrb	r3, [r4, #4]
40015b54:	e5cd3013 	strb	r3, [sp, #19]
40015b58:	e5d43006 	ldrb	r3, [r4, #6]
40015b5c:	e5cd3014 	strb	r3, [sp, #20]
40015b60:	e5d43007 	ldrb	r3, [r4, #7]
40015b64:	e5cd3015 	strb	r3, [sp, #21]
40015b68:	e5d43009 	ldrb	r3, [r4, #9]
40015b6c:	e5cd3016 	strb	r3, [sp, #22]
40015b70:	e5d4300a 	ldrb	r3, [r4, #10]
40015b74:	e5cd3017 	strb	r3, [sp, #23]
40015b78:	e5d73002 	ldrb	r3, [r7, #2]
40015b7c:	e58d3008 	str	r3, [sp, #8]
40015b80:	e5d73001 	ldrb	r3, [r7, #1]
40015b84:	e58d3004 	str	r3, [sp, #4]
40015b88:	e5d73000 	ldrb	r3, [r7]
40015b8c:	e58d3000 	str	r3, [sp]
40015b90:	e3a03008 	mov	r3, #8
40015b94:	eb0009b9 	bl	40018280 <WS28xxDisplayMatrix::TextLine(unsigned char, char const*, unsigned long, unsigned char, unsigned char, unsigned char)>
40015b98:	e5960004 	ldr	r0, [r6, #4]
40015b9c:	eb0009cd 	bl	400182d8 <WS28xxDisplayMatrix::Show()>
40015ba0:	e28dd01c 	add	sp, sp, #28
40015ba4:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}

40015ba8 <LtcDisplayWS28xxMatrix::ShowSysTime(char const*, ltcdisplayrgb::Colours&, ltcdisplayrgb::Colours&)>:
40015ba8:	e92d40f0 	push	{r4, r5, r6, r7, lr}
40015bac:	e1a05003 	mov	r5, r3
40015bb0:	e24dd01c 	sub	sp, sp, #28
40015bb4:	e1a06000 	mov	r6, r0
40015bb8:	e5900004 	ldr	r0, [r0, #4]
40015bbc:	e1a04001 	mov	r4, r1
40015bc0:	e1a07002 	mov	r7, r2
40015bc4:	eb0009dc 	bl	4001833c <WS28xxDisplayMatrix::SetColonsOff()>
40015bc8:	e5d53002 	ldrb	r3, [r5, #2]
40015bcc:	e3a02002 	mov	r2, #2
40015bd0:	e5d41002 	ldrb	r1, [r4, #2]
40015bd4:	e58d3004 	str	r3, [sp, #4]
40015bd8:	e5d53001 	ldrb	r3, [r5, #1]
40015bdc:	e5960004 	ldr	r0, [r6, #4]
40015be0:	e58d3000 	str	r3, [sp]
40015be4:	e5d53000 	ldrb	r3, [r5]
40015be8:	eb0009c1 	bl	400182f4 <WS28xxDisplayMatrix::SetColon(char, unsigned long, unsigned char, unsigned char, unsigned char)>
40015bec:	e5d53002 	ldrb	r3, [r5, #2]
40015bf0:	e3a02004 	mov	r2, #4
40015bf4:	e5d41005 	ldrb	r1, [r4, #5]
40015bf8:	e58d3004 	str	r3, [sp, #4]
40015bfc:	e5d53001 	ldrb	r3, [r5, #1]
40015c00:	e5960004 	ldr	r0, [r6, #4]
40015c04:	e58d3000 	str	r3, [sp]
40015c08:	e5d53000 	ldrb	r3, [r5]
40015c0c:	eb0009b8 	bl	400182f4 <WS28xxDisplayMatrix::SetColon(char, unsigned long, unsigned char, unsigned char, unsigned char)>
40015c10:	e5960004 	ldr	r0, [r6, #4]
40015c14:	e3a03020 	mov	r3, #32
40015c18:	e5cd3010 	strb	r3, [sp, #16]
40015c1c:	e28d2010 	add	r2, sp, #16
40015c20:	e5cd3017 	strb	r3, [sp, #23]
40015c24:	e3a01001 	mov	r1, #1
40015c28:	e5d43000 	ldrb	r3, [r4]
40015c2c:	e5cd3011 	strb	r3, [sp, #17]
40015c30:	e5d43001 	ldrb	r3, [r4, #1]
40015c34:	e5cd3012 	strb	r3, [sp, #18]
40015c38:	e5d43003 	ldrb	r3, [r4, #3]
40015c3c:	e5cd3013 	strb	r3, [sp, #19]
40015c40:	e5d43004 	ldrb	r3, [r4, #4]
40015c44:	e5cd3014 	strb	r3, [sp, #20]
40015c48:	e5d43006 	ldrb	r3, [r4, #6]
40015c4c:	e5cd3015 	strb	r3, [sp, #21]
40015c50:	e5d43007 	ldrb	r3, [r4, #7]
40015c54:	e5cd3016 	strb	r3, [sp, #22]
40015c58:	e5d73002 	ldrb	r3, [r7, #2]
40015c5c:	e58d3008 	str	r3, [sp, #8]
40015c60:	e5d73001 	ldrb	r3, [r7, #1]
40015c64:	e58d3004 	str	r3, [sp, #4]
40015c68:	e5d73000 	ldrb	r3, [r7]
40015c6c:	e58d3000 	str	r3, [sp]
40015c70:	e3a03008 	mov	r3, #8
40015c74:	eb000981 	bl	40018280 <WS28xxDisplayMatrix::TextLine(unsigned char, char const*, unsigned long, unsigned char, unsigned char, unsigned char)>
40015c78:	e5960004 	ldr	r0, [r6, #4]
40015c7c:	eb000995 	bl	400182d8 <WS28xxDisplayMatrix::Show()>
40015c80:	e28dd01c 	add	sp, sp, #28
40015c84:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}

40015c88 <LtcDisplayWS28xxMatrix::ShowMessage(char const*, ltcdisplayrgb::Colours&)>:
40015c88:	e92d407f 	push	{r0, r1, r2, r3, r4, r5, r6, lr}
40015c8c:	e1a05002 	mov	r5, r2
40015c90:	e1a04000 	mov	r4, r0
40015c94:	e1a06001 	mov	r6, r1
40015c98:	e5900004 	ldr	r0, [r0, #4]
40015c9c:	eb0009a6 	bl	4001833c <WS28xxDisplayMatrix::SetColonsOff()>
40015ca0:	e5d53002 	ldrb	r3, [r5, #2]
40015ca4:	e1a02006 	mov	r2, r6
40015ca8:	e5940004 	ldr	r0, [r4, #4]
40015cac:	e3a01001 	mov	r1, #1
40015cb0:	e58d3008 	str	r3, [sp, #8]
40015cb4:	e5d53001 	ldrb	r3, [r5, #1]
40015cb8:	e58d3004 	str	r3, [sp, #4]
40015cbc:	e5d53000 	ldrb	r3, [r5]
40015cc0:	e58d3000 	str	r3, [sp]
40015cc4:	e3a03008 	mov	r3, #8
40015cc8:	eb00096c 	bl	40018280 <WS28xxDisplayMatrix::TextLine(unsigned char, char const*, unsigned long, unsigned char, unsigned char, unsigned char)>
40015ccc:	e5940004 	ldr	r0, [r4, #4]
40015cd0:	e28dd010 	add	sp, sp, #16
40015cd4:	e8bd4070 	pop	{r4, r5, r6, lr}
40015cd8:	ea00097e 	b	400182d8 <WS28xxDisplayMatrix::Show()>

40015cdc <LtcDisplayWS28xxMatrix::WriteChar(unsigned char, unsigned char, ltcdisplayrgb::Colours&)>:
40015cdc:	e92d4073 	push	{r0, r1, r4, r5, r6, lr}
40015ce0:	e1a05003 	mov	r5, r3
40015ce4:	e1a04000 	mov	r4, r0
40015ce8:	e1a06001 	mov	r6, r1
40015cec:	e5900004 	ldr	r0, [r0, #4]
40015cf0:	e1a01002 	mov	r1, r2
40015cf4:	e3a02000 	mov	r2, #0
40015cf8:	eb000958 	bl	40018260 <WS28xxDisplayMatrix::SetCursorPos(unsigned char, unsigned char)>
40015cfc:	e5d53002 	ldrb	r3, [r5, #2]
40015d00:	e1a01006 	mov	r1, r6
40015d04:	e5940004 	ldr	r0, [r4, #4]
40015d08:	e58d3000 	str	r3, [sp]
40015d0c:	e5d52000 	ldrb	r2, [r5]
40015d10:	e5d53001 	ldrb	r3, [r5, #1]
40015d14:	eb0008ed 	bl	400180d0 <WS28xxDisplayMatrix::PutChar(char, unsigned char, unsigned char, unsigned char)>
40015d18:	e5940004 	ldr	r0, [r4, #4]
40015d1c:	e28dd008 	add	sp, sp, #8
40015d20:	e8bd4070 	pop	{r4, r5, r6, lr}
40015d24:	ea00096b 	b	400182d8 <WS28xxDisplayMatrix::Show()>

40015d28 <LtcDisplayWS28xxMatrix::Print()>:
40015d28:	e5903004 	ldr	r3, [r0, #4]
40015d2c:	e59f0008 	ldr	r0, [pc, #8]	; 40015d3c <LtcDisplayWS28xxMatrix::Print()+0x14>
40015d30:	e5d3200c 	ldrb	r2, [r3, #12]
40015d34:	e1d310ba 	ldrh	r1, [r3, #10]
40015d38:	ea005b94 	b	4002cb90 <printf>
40015d3c:	40031a28 	andmi	r1, r3, r8, lsr #20

40015d40 <LtcDisplayWS28xxMatrix::~LtcDisplayWS28xxMatrix()>:
40015d40:	e92d4010 	push	{r4, lr}
40015d44:	e3a01008 	mov	r1, #8
40015d48:	e1a04000 	mov	r4, r0
40015d4c:	eb005da0 	bl	4002d3d4 <operator delete(void*, unsigned int)>
40015d50:	e1a00004 	mov	r0, r4
40015d54:	e8bd8010 	pop	{r4, pc}

40015d58 <LtcDisplayWS28xxMatrix::LtcDisplayWS28xxMatrix(pixel::Type, pixel::Map)>:
40015d58:	e59f3040 	ldr	r3, [pc, #64]	; 40015da0 <LtcDisplayWS28xxMatrix::LtcDisplayWS28xxMatrix(pixel::Type, pixel::Map)+0x48>
40015d5c:	e92d40f7 	push	{r0, r1, r2, r4, r5, r6, r7, lr}
40015d60:	e1a04000 	mov	r4, r0
40015d64:	e5803000 	str	r3, [r0]
40015d68:	e1a06001 	mov	r6, r1
40015d6c:	e1a07002 	mov	r7, r2
40015d70:	e3a00024 	mov	r0, #36	; 0x24
40015d74:	eb005d97 	bl	4002d3d8 <operator new(unsigned int)>
40015d78:	e58d7000 	str	r7, [sp]
40015d7c:	e1a03006 	mov	r3, r6
40015d80:	e3a02008 	mov	r2, #8
40015d84:	e3a01040 	mov	r1, #64	; 0x40
40015d88:	e1a05000 	mov	r5, r0
40015d8c:	eb000978 	bl	40018374 <WS28xxDisplayMatrix::WS28xxDisplayMatrix(unsigned char, unsigned char, pixel::Type, pixel::Map)>
40015d90:	e5845004 	str	r5, [r4, #4]
40015d94:	e1a00004 	mov	r0, r4
40015d98:	e28dd00c 	add	sp, sp, #12
40015d9c:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
40015da0:	40031a40 	andmi	r1, r3, r0, asr #20

40015da4 <LtcDisplayRgbSet::Init()>:
40015da4:	e12fff1e 	bx	lr

40015da8 <LtcDisplayRgbSet::ShowSource(ltc::Source, ltcdisplayrgb::Colours&)>:
40015da8:	e12fff1e 	bx	lr

40015dac <LtcDisplayRgbSet::ShowInfo(char const*, unsigned long, ltcdisplayrgb::Colours&)>:
40015dac:	e12fff1e 	bx	lr

40015db0 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, int) [clone .isra.0]>:
40015db0:	e1d0c0b6 	ldrh	ip, [r0, #6]
40015db4:	e92d4037 	push	{r0, r1, r2, r4, r5, lr}
40015db8:	e1d050b4 	ldrh	r5, [r0, #4]
40015dbc:	e15c0005 	cmp	ip, r5
40015dc0:	2a000017 	bcs	40015e24 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, int) [clone .isra.0]+0x74>
40015dc4:	e045500c 	sub	r5, r5, ip
40015dc8:	e1a04000 	mov	r4, r0
40015dcc:	e5900000 	ldr	r0, [r0]
40015dd0:	e3530000 	cmp	r3, #0
40015dd4:	e080000c 	add	r0, r0, ip
40015dd8:	e5d4c008 	ldrb	ip, [r4, #8]
40015ddc:	1a000005 	bne	40015df8 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, int) [clone .isra.0]+0x48>
40015de0:	e35c0000 	cmp	ip, #0
40015de4:	1a000005 	bne	40015e00 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, int) [clone .isra.0]+0x50>
40015de8:	e58d2000 	str	r2, [sp]
40015dec:	e1a03001 	mov	r3, r1
40015df0:	e59f2044 	ldr	r2, [pc, #68]	; 40015e3c <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, int) [clone .isra.0]+0x8c>
40015df4:	ea000004 	b	40015e0c <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, int) [clone .isra.0]+0x5c>
40015df8:	e35c0000 	cmp	ip, #0
40015dfc:	0a00000a 	beq	40015e2c <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, int) [clone .isra.0]+0x7c>
40015e00:	e58d2000 	str	r2, [sp]
40015e04:	e1a03001 	mov	r3, r1
40015e08:	e59f2030 	ldr	r2, [pc, #48]	; 40015e40 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, int) [clone .isra.0]+0x90>
40015e0c:	e1a01005 	mov	r1, r5
40015e10:	eb005b7b 	bl	4002cc04 <snprintf>
40015e14:	e1550000 	cmp	r5, r0
40015e18:	a1d430b6 	ldrhge	r3, [r4, #6]
40015e1c:	a0830000 	addge	r0, r3, r0
40015e20:	a1c400b6 	strhge	r0, [r4, #6]
40015e24:	e28dd00c 	add	sp, sp, #12
40015e28:	e8bd8030 	pop	{r4, r5, pc}
40015e2c:	e58d2000 	str	r2, [sp]
40015e30:	e1a03001 	mov	r3, r1
40015e34:	e59f2008 	ldr	r2, [pc, #8]	; 40015e44 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, int) [clone .isra.0]+0x94>
40015e38:	eafffff3 	b	40015e0c <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, int) [clone .isra.0]+0x5c>
40015e3c:	4002e14e 	andmi	lr, r2, lr, asr #2
40015e40:	4002e143 	andmi	lr, r2, r3, asr #2
40015e44:	4002e14f 	andmi	lr, r2, pc, asr #2

40015e48 <strncpy.isra.0>:
40015e48:	e1a03001 	mov	r3, r1
40015e4c:	e3520000 	cmp	r2, #0
40015e50:	012fff1e 	bxeq	lr
40015e54:	e4d31001 	ldrb	r1, [r3], #1
40015e58:	e242c001 	sub	ip, r2, #1
40015e5c:	e3510000 	cmp	r1, #0
40015e60:	14c01001 	strbne	r1, [r0], #1
40015e64:	11a0200c 	movne	r2, ip
40015e68:	1afffff7 	bne	40015e4c <strncpy.isra.0+0x4>
40015e6c:	ea0058e8 	b	4002c214 <memset>

40015e70 <TCNetParamsStore::Update(tcnetparams::Params const*)>:
40015e70:	e92d401f 	push	{r0, r1, r2, r3, r4, lr}
40015e74:	e1a03000 	mov	r3, r0
40015e78:	e59f0024 	ldr	r0, [pc, #36]	; 40015ea4 <TCNetParamsStore::Update(tcnetparams::Params const*)+0x34>
40015e7c:	e3a02000 	mov	r2, #0
40015e80:	e58d2008 	str	r2, [sp, #8]
40015e84:	e3a0100e 	mov	r1, #14
40015e88:	e58d1000 	str	r1, [sp]
40015e8c:	e3a0100b 	mov	r1, #11
40015e90:	e58d2004 	str	r2, [sp, #4]
40015e94:	e5900000 	ldr	r0, [r0]
40015e98:	eb001a32 	bl	4001c768 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
40015e9c:	e28dd014 	add	sp, sp, #20
40015ea0:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40015ea4:	40034084 	andmi	r4, r3, r4, lsl #1

40015ea8 <TCNetParamsStore::Copy(tcnetparams::Params*)>:
40015ea8:	e92d4007 	push	{r0, r1, r2, lr}
40015eac:	e1a02000 	mov	r2, r0
40015eb0:	e3a01001 	mov	r1, #1
40015eb4:	e3a00000 	mov	r0, #0
40015eb8:	e1cd00f0 	strd	r0, [sp]
40015ebc:	e59f0014 	ldr	r0, [pc, #20]	; 40015ed8 <TCNetParamsStore::Copy(tcnetparams::Params*)+0x30>
40015ec0:	e3a0300e 	mov	r3, #14
40015ec4:	e3a0100b 	mov	r1, #11
40015ec8:	e5900000 	ldr	r0, [r0]
40015ecc:	eb001a47 	bl	4001c7f0 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)>
40015ed0:	e28dd00c 	add	sp, sp, #12
40015ed4:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40015ed8:	40034084 	andmi	r4, r3, r4, lsl #1

40015edc <TCNetParams::TCNetParams()>:
40015edc:	f2c00010 	vmov.i32	d16, #0	; 0x00000000
40015ee0:	e3a02000 	mov	r2, #0
40015ee4:	e5c02000 	strb	r2, [r0]
40015ee8:	e5c02001 	strb	r2, [r0, #1]
40015eec:	e5c02002 	strb	r2, [r0, #2]
40015ef0:	e5c02003 	strb	r2, [r0, #3]
40015ef4:	e2802004 	add	r2, r0, #4
40015ef8:	f442070f 	vst1.8	{d16}, [r2]
40015efc:	e3a02006 	mov	r2, #6
40015f00:	e5c0200c 	strb	r2, [r0, #12]
40015f04:	e3a02003 	mov	r2, #3
40015f08:	e5c0200d 	strb	r2, [r0, #13]
40015f0c:	e12fff1e 	bx	lr

40015f10 <TCNetParams::Load()>:
40015f10:	e3a03000 	mov	r3, #0
40015f14:	e1a02000 	mov	r2, r0
40015f18:	e92d4013 	push	{r0, r1, r4, lr}
40015f1c:	e1a04000 	mov	r4, r0
40015f20:	e5c03000 	strb	r3, [r0]
40015f24:	e5c03001 	strb	r3, [r0, #1]
40015f28:	e5c03002 	strb	r3, [r0, #2]
40015f2c:	e5c03003 	strb	r3, [r0, #3]
40015f30:	e1a0000d 	mov	r0, sp
40015f34:	e59f1034 	ldr	r1, [pc, #52]	; 40015f70 <TCNetParams::Load()+0x60>
40015f38:	eb003d2b 	bl	400253ec <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
40015f3c:	e59f1030 	ldr	r1, [pc, #48]	; 40015f74 <TCNetParams::Load()+0x64>
40015f40:	e1a0000d 	mov	r0, sp
40015f44:	eb003d2b 	bl	400253f8 <ReadConfigFile::Read(char const*)>
40015f48:	e3500000 	cmp	r0, #0
40015f4c:	e1a00004 	mov	r0, r4
40015f50:	0a000004 	beq	40015f68 <TCNetParams::Load()+0x58>
40015f54:	ebffffc5 	bl	40015e70 <TCNetParamsStore::Update(tcnetparams::Params const*)>
40015f58:	e1a0000d 	mov	r0, sp
40015f5c:	eb003d24 	bl	400253f4 <ReadConfigFile::~ReadConfigFile()>
40015f60:	e28dd008 	add	sp, sp, #8
40015f64:	e8bd8010 	pop	{r4, pc}
40015f68:	ebffffce 	bl	40015ea8 <TCNetParamsStore::Copy(tcnetparams::Params*)>
40015f6c:	eafffff9 	b	40015f58 <TCNetParams::Load()+0x48>
40015f70:	40016180 	andmi	r6, r1, r0, lsl #3
40015f74:	40031a9b 	mulmi	r3, fp, sl

40015f78 <TCNetParams::Load(char const*, unsigned long)>:
40015f78:	e3a03000 	mov	r3, #0
40015f7c:	e92d4073 	push	{r0, r1, r4, r5, r6, lr}
40015f80:	e1a04000 	mov	r4, r0
40015f84:	e5c03000 	strb	r3, [r0]
40015f88:	e1a05001 	mov	r5, r1
40015f8c:	e5c03001 	strb	r3, [r0, #1]
40015f90:	e1a06002 	mov	r6, r2
40015f94:	e5c03002 	strb	r3, [r0, #2]
40015f98:	e1a02000 	mov	r2, r0
40015f9c:	e5c03003 	strb	r3, [r0, #3]
40015fa0:	e1a0000d 	mov	r0, sp
40015fa4:	e59f1028 	ldr	r1, [pc, #40]	; 40015fd4 <TCNetParams::Load(char const*, unsigned long)+0x5c>
40015fa8:	eb003d0f 	bl	400253ec <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
40015fac:	e1a02006 	mov	r2, r6
40015fb0:	e1a01005 	mov	r1, r5
40015fb4:	e1a0000d 	mov	r0, sp
40015fb8:	eb003d38 	bl	400254a0 <ReadConfigFile::Read(char const*, unsigned int)>
40015fbc:	e1a00004 	mov	r0, r4
40015fc0:	ebffffaa 	bl	40015e70 <TCNetParamsStore::Update(tcnetparams::Params const*)>
40015fc4:	e1a0000d 	mov	r0, sp
40015fc8:	eb003d09 	bl	400253f4 <ReadConfigFile::~ReadConfigFile()>
40015fcc:	e28dd008 	add	sp, sp, #8
40015fd0:	e8bd8070 	pop	{r4, r5, r6, pc}
40015fd4:	40016180 	andmi	r6, r1, r0, lsl #3

40015fd8 <TCNetParams::callbackFunction(char const*)>:
40015fd8:	e92d4073 	push	{r0, r1, r4, r5, r6, lr}
40015fdc:	e1a06001 	mov	r6, r1
40015fe0:	e59f1188 	ldr	r1, [pc, #392]	; 40016170 <TCNetParams::callbackFunction(char const*)+0x198>
40015fe4:	e28d3004 	add	r3, sp, #4
40015fe8:	e1a04000 	mov	r4, r0
40015fec:	e2802004 	add	r2, r0, #4
40015ff0:	e3a05008 	mov	r5, #8
40015ff4:	e1a00006 	mov	r0, r6
40015ff8:	e58d5004 	str	r5, [sp, #4]
40015ffc:	eb003d54 	bl	40025554 <Sscan::Char(char const*, char const*, char*, unsigned long&)>
40016000:	e3500000 	cmp	r0, #0
40016004:	05943000 	ldreq	r3, [r4]
40016008:	03833001 	orreq	r3, r3, #1
4001600c:	0a000041 	beq	40016118 <TCNetParams::callbackFunction(char const*)+0x140>
40016010:	e59f115c 	ldr	r1, [pc, #348]	; 40016174 <TCNetParams::callbackFunction(char const*)+0x19c>
40016014:	e3a03001 	mov	r3, #1
40016018:	e58d3004 	str	r3, [sp, #4]
4001601c:	e3a03020 	mov	r3, #32
40016020:	e5cd3002 	strb	r3, [sp, #2]
40016024:	e28d2002 	add	r2, sp, #2
40016028:	e28d3004 	add	r3, sp, #4
4001602c:	e1a00006 	mov	r0, r6
40016030:	eb003d47 	bl	40025554 <Sscan::Char(char const*, char const*, char*, unsigned long&)>
40016034:	e3500000 	cmp	r0, #0
40016038:	1a000020 	bne	400160c0 <TCNetParams::callbackFunction(char const*)+0xe8>
4001603c:	e5dd3002 	ldrb	r3, [sp, #2]
40016040:	e3832020 	orr	r2, r3, #32
40016044:	e3520062 	cmp	r2, #98	; 0x62
40016048:	03a03005 	moveq	r3, #5
4001604c:	0a000009 	beq	40016078 <TCNetParams::callbackFunction(char const*)+0xa0>
40016050:	8a000013 	bhi	400160a4 <TCNetParams::callbackFunction(char const*)+0xcc>
40016054:	e3520034 	cmp	r2, #52	; 0x34
40016058:	8a000003 	bhi	4001606c <TCNetParams::callbackFunction(char const*)+0x94>
4001605c:	e3520030 	cmp	r2, #48	; 0x30
40016060:	91a03005 	movls	r3, r5
40016064:	82433031 	subhi	r3, r3, #49	; 0x31
40016068:	ea000002 	b	40016078 <TCNetParams::callbackFunction(char const*)+0xa0>
4001606c:	e3520061 	cmp	r2, #97	; 0x61
40016070:	13a03008 	movne	r3, #8
40016074:	03a03004 	moveq	r3, #4
40016078:	e5942000 	ldr	r2, [r4]
4001607c:	e2431006 	sub	r1, r3, #6
40016080:	e3d11002 	bics	r1, r1, #2
40016084:	03c22002 	biceq	r2, r2, #2
40016088:	13822002 	orrne	r2, r2, #2
4001608c:	15c4300c 	strbne	r3, [r4, #12]
40016090:	03a03006 	moveq	r3, #6
40016094:	05c4300c 	strbeq	r3, [r4, #12]
40016098:	e5842000 	str	r2, [r4]
4001609c:	e28dd008 	add	sp, sp, #8
400160a0:	e8bd8070 	pop	{r4, r5, r6, pc}
400160a4:	e3520063 	cmp	r2, #99	; 0x63
400160a8:	03a03007 	moveq	r3, #7
400160ac:	0afffff1 	beq	40016078 <TCNetParams::callbackFunction(char const*)+0xa0>
400160b0:	e352006d 	cmp	r2, #109	; 0x6d
400160b4:	13a03008 	movne	r3, #8
400160b8:	03a03006 	moveq	r3, #6
400160bc:	eaffffed 	b	40016078 <TCNetParams::callbackFunction(char const*)+0xa0>
400160c0:	e59f10b0 	ldr	r1, [pc, #176]	; 40016178 <TCNetParams::callbackFunction(char const*)+0x1a0>
400160c4:	e28d2003 	add	r2, sp, #3
400160c8:	e1a00006 	mov	r0, r6
400160cc:	eb003e02 	bl	400258dc <Sscan::Uint8(char const*, char const*, unsigned char&)>
400160d0:	e3500000 	cmp	r0, #0
400160d4:	1a000019 	bne	40016140 <TCNetParams::callbackFunction(char const*)+0x168>
400160d8:	e5dd2003 	ldrb	r2, [sp, #3]
400160dc:	e5943000 	ldr	r3, [r4]
400160e0:	e2422018 	sub	r2, r2, #24
400160e4:	e3520006 	cmp	r2, #6
400160e8:	979ff102 	ldrls	pc, [pc, r2, lsl #2]
400160ec:	ea000011 	b	40016138 <TCNetParams::callbackFunction(char const*)+0x160>
400160f0:	4001610c 	andmi	r6, r1, ip, lsl #2
400160f4:	40016120 	andmi	r6, r1, r0, lsr #2
400160f8:	40016138 	andmi	r6, r1, r8, lsr r1
400160fc:	40016138 	andmi	r6, r1, r8, lsr r1
40016100:	40016138 	andmi	r6, r1, r8, lsr r1
40016104:	40016128 	andmi	r6, r1, r8, lsr #2
40016108:	40016130 	andmi	r6, r1, r0, lsr r1
4001610c:	e3a02000 	mov	r2, #0
40016110:	e5c4200d 	strb	r2, [r4, #13]
40016114:	e3833004 	orr	r3, r3, #4
40016118:	e5843000 	str	r3, [r4]
4001611c:	eaffffde 	b	4001609c <TCNetParams::callbackFunction(char const*)+0xc4>
40016120:	e3a02001 	mov	r2, #1
40016124:	eafffff9 	b	40016110 <TCNetParams::callbackFunction(char const*)+0x138>
40016128:	e3a02002 	mov	r2, #2
4001612c:	eafffff7 	b	40016110 <TCNetParams::callbackFunction(char const*)+0x138>
40016130:	e3a02003 	mov	r2, #3
40016134:	e5c4200d 	strb	r2, [r4, #13]
40016138:	e3c33004 	bic	r3, r3, #4
4001613c:	eafffff5 	b	40016118 <TCNetParams::callbackFunction(char const*)+0x140>
40016140:	e59f1034 	ldr	r1, [pc, #52]	; 4001617c <TCNetParams::callbackFunction(char const*)+0x1a4>
40016144:	e28d2003 	add	r2, sp, #3
40016148:	e1a00006 	mov	r0, r6
4001614c:	eb003de2 	bl	400258dc <Sscan::Uint8(char const*, char const*, unsigned char&)>
40016150:	e3500000 	cmp	r0, #0
40016154:	1affffd0 	bne	4001609c <TCNetParams::callbackFunction(char const*)+0xc4>
40016158:	e5dd2003 	ldrb	r2, [sp, #3]
4001615c:	e5943000 	ldr	r3, [r4]
40016160:	e3520000 	cmp	r2, #0
40016164:	03c33008 	biceq	r3, r3, #8
40016168:	13833008 	orrne	r3, r3, #8
4001616c:	eaffffe9 	b	40016118 <TCNetParams::callbackFunction(char const*)+0x140>
40016170:	40031a91 	mulmi	r3, r1, sl
40016174:	40031a8b 	andmi	r1, r3, fp, lsl #21
40016178:	40031a7d 	andmi	r1, r3, sp, ror sl
4001617c:	40031a70 	andmi	r1, r3, r0, ror sl

40016180 <TCNetParams::staticCallbackFunction(void*, char const*)>:
40016180:	eaffff94 	b	40015fd8 <TCNetParams::callbackFunction(char const*)>

40016184 <TCNetParams::Builder(tcnetparams::Params const*, char*, unsigned long, unsigned long&)>:
40016184:	e3510000 	cmp	r1, #0
40016188:	e92d4070 	push	{r4, r5, r6, lr}
4001618c:	e1a04000 	mov	r4, r0
40016190:	e24dd018 	sub	sp, sp, #24
40016194:	e1a05002 	mov	r5, r2
40016198:	e1a06003 	mov	r6, r3
4001619c:	0a00003c 	beq	40016294 <TCNetParams::Builder(tcnetparams::Params const*, char*, unsigned long, unsigned long&)+0x110>
400161a0:	e1a03000 	mov	r3, r0
400161a4:	e281200c 	add	r2, r1, #12
400161a8:	e4910004 	ldr	r0, [r1], #4
400161ac:	e1510002 	cmp	r1, r2
400161b0:	e4830004 	str	r0, [r3], #4
400161b4:	1afffffb 	bne	400161a8 <TCNetParams::Builder(tcnetparams::Params const*, char*, unsigned long, unsigned long&)+0x24>
400161b8:	e1d120b0 	ldrh	r2, [r1]
400161bc:	e1c320b0 	strh	r2, [r3]
400161c0:	e59f11e8 	ldr	r1, [pc, #488]	; 400163b0 <TCNetParams::Builder(tcnetparams::Params const*, char*, unsigned long, unsigned long&)+0x22c>
400161c4:	e1a02005 	mov	r2, r5
400161c8:	e1a05004 	mov	r5, r4
400161cc:	e1a03006 	mov	r3, r6
400161d0:	e28d000c 	add	r0, sp, #12
400161d4:	eb003b44 	bl	40024eec <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)>
400161d8:	e4953004 	ldr	r3, [r5], #4
400161dc:	e2136001 	ands	r6, r3, #1
400161e0:	1a000006 	bne	40016200 <TCNetParams::Builder(tcnetparams::Params const*, char*, unsigned long, unsigned long&)+0x7c>
400161e4:	e59f31c8 	ldr	r3, [pc, #456]	; 400163b4 <TCNetParams::Builder(tcnetparams::Params const*, char*, unsigned long, unsigned long&)+0x230>
400161e8:	e3a02008 	mov	r2, #8
400161ec:	e1a00005 	mov	r0, r5
400161f0:	e5931000 	ldr	r1, [r3]
400161f4:	e281103f 	add	r1, r1, #63	; 0x3f
400161f8:	ebffff12 	bl	40015e48 <strncpy.isra.0>
400161fc:	e5c4600b 	strb	r6, [r4, #11]
40016200:	e5d4000c 	ldrb	r0, [r4, #12]
40016204:	ebffe683 	bl	4000fc18 <TCNet::GetLayerName(tcnet::Layer)>
40016208:	e5cd0008 	strb	r0, [sp, #8]
4001620c:	e3a03000 	mov	r3, #0
40016210:	e5cd3009 	strb	r3, [sp, #9]
40016214:	e1a02005 	mov	r2, r5
40016218:	e5943000 	ldr	r3, [r4]
4001621c:	e28d000c 	add	r0, sp, #12
40016220:	e59f1190 	ldr	r1, [pc, #400]	; 400163b8 <TCNetParams::Builder(tcnetparams::Params const*, char*, unsigned long, unsigned long&)+0x234>
40016224:	e2033001 	and	r3, r3, #1
40016228:	ebfffee0 	bl	40015db0 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, int) [clone .isra.0]>
4001622c:	e5943000 	ldr	r3, [r4]
40016230:	e28d2008 	add	r2, sp, #8
40016234:	e59f1180 	ldr	r1, [pc, #384]	; 400163bc <TCNetParams::Builder(tcnetparams::Params const*, char*, unsigned long, unsigned long&)+0x238>
40016238:	e28d000c 	add	r0, sp, #12
4001623c:	e7e030d3 	ubfx	r3, r3, #1, #1
40016240:	ebfffeda 	bl	40015db0 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, int) [clone .isra.0]>
40016244:	e1dd11b2 	ldrh	r1, [sp, #18]
40016248:	e1dd51b0 	ldrh	r5, [sp, #16]
4001624c:	e1510005 	cmp	r1, r5
40016250:	2a00001c 	bcs	400162c8 <TCNetParams::Builder(tcnetparams::Params const*, char*, unsigned long, unsigned long&)+0x144>
40016254:	e59d000c 	ldr	r0, [sp, #12]
40016258:	e0455001 	sub	r5, r5, r1
4001625c:	e0800001 	add	r0, r0, r1
40016260:	e5d4300d 	ldrb	r3, [r4, #13]
40016264:	e59f1154 	ldr	r1, [pc, #340]	; 400163c0 <TCNetParams::Builder(tcnetparams::Params const*, char*, unsigned long, unsigned long&)+0x23c>
40016268:	e5dd2014 	ldrb	r2, [sp, #20]
4001626c:	e7d13003 	ldrb	r3, [r1, r3]
40016270:	e5941000 	ldr	r1, [r4]
40016274:	e3110004 	tst	r1, #4
40016278:	1a000007 	bne	4001629c <TCNetParams::Builder(tcnetparams::Params const*, char*, unsigned long, unsigned long&)+0x118>
4001627c:	e3520000 	cmp	r2, #0
40016280:	1a000007 	bne	400162a4 <TCNetParams::Builder(tcnetparams::Params const*, char*, unsigned long, unsigned long&)+0x120>
40016284:	e58d3000 	str	r3, [sp]
40016288:	e59f2134 	ldr	r2, [pc, #308]	; 400163c4 <TCNetParams::Builder(tcnetparams::Params const*, char*, unsigned long, unsigned long&)+0x240>
4001628c:	e59f3134 	ldr	r3, [pc, #308]	; 400163c8 <TCNetParams::Builder(tcnetparams::Params const*, char*, unsigned long, unsigned long&)+0x244>
40016290:	ea000006 	b	400162b0 <TCNetParams::Builder(tcnetparams::Params const*, char*, unsigned long, unsigned long&)+0x12c>
40016294:	ebffff03 	bl	40015ea8 <TCNetParamsStore::Copy(tcnetparams::Params*)>
40016298:	eaffffc8 	b	400161c0 <TCNetParams::Builder(tcnetparams::Params const*, char*, unsigned long, unsigned long&)+0x3c>
4001629c:	e3520000 	cmp	r2, #0
400162a0:	0a000019 	beq	4001630c <TCNetParams::Builder(tcnetparams::Params const*, char*, unsigned long, unsigned long&)+0x188>
400162a4:	e58d3000 	str	r3, [sp]
400162a8:	e59f211c 	ldr	r2, [pc, #284]	; 400163cc <TCNetParams::Builder(tcnetparams::Params const*, char*, unsigned long, unsigned long&)+0x248>
400162ac:	e59f3114 	ldr	r3, [pc, #276]	; 400163c8 <TCNetParams::Builder(tcnetparams::Params const*, char*, unsigned long, unsigned long&)+0x244>
400162b0:	e1a01005 	mov	r1, r5
400162b4:	eb005a52 	bl	4002cc04 <snprintf>
400162b8:	e1550000 	cmp	r5, r0
400162bc:	a1dd31b2 	ldrhge	r3, [sp, #18]
400162c0:	a0830000 	addge	r0, r3, r0
400162c4:	a1cd01b2 	strhge	r0, [sp, #18]
400162c8:	e1dd11b2 	ldrh	r1, [sp, #18]
400162cc:	e1ddc1b0 	ldrh	ip, [sp, #16]
400162d0:	e151000c 	cmp	r1, ip
400162d4:	2a00001d 	bcs	40016350 <TCNetParams::Builder(tcnetparams::Params const*, char*, unsigned long, unsigned long&)+0x1cc>
400162d8:	e5943000 	ldr	r3, [r4]
400162dc:	e59d000c 	ldr	r0, [sp, #12]
400162e0:	e5dd2014 	ldrb	r2, [sp, #20]
400162e4:	e2133008 	ands	r3, r3, #8
400162e8:	e0800001 	add	r0, r0, r1
400162ec:	e04c4001 	sub	r4, ip, r1
400162f0:	1a000009 	bne	4001631c <TCNetParams::Builder(tcnetparams::Params const*, char*, unsigned long, unsigned long&)+0x198>
400162f4:	e3520000 	cmp	r2, #0
400162f8:	1a000009 	bne	40016324 <TCNetParams::Builder(tcnetparams::Params const*, char*, unsigned long, unsigned long&)+0x1a0>
400162fc:	e58d2000 	str	r2, [sp]
40016300:	e59f30c8 	ldr	r3, [pc, #200]	; 400163d0 <TCNetParams::Builder(tcnetparams::Params const*, char*, unsigned long, unsigned long&)+0x24c>
40016304:	e59f20b8 	ldr	r2, [pc, #184]	; 400163c4 <TCNetParams::Builder(tcnetparams::Params const*, char*, unsigned long, unsigned long&)+0x240>
40016308:	ea00000a 	b	40016338 <TCNetParams::Builder(tcnetparams::Params const*, char*, unsigned long, unsigned long&)+0x1b4>
4001630c:	e58d3000 	str	r3, [sp]
40016310:	e59f20bc 	ldr	r2, [pc, #188]	; 400163d4 <TCNetParams::Builder(tcnetparams::Params const*, char*, unsigned long, unsigned long&)+0x250>
40016314:	e59f30ac 	ldr	r3, [pc, #172]	; 400163c8 <TCNetParams::Builder(tcnetparams::Params const*, char*, unsigned long, unsigned long&)+0x244>
40016318:	eaffffe4 	b	400162b0 <TCNetParams::Builder(tcnetparams::Params const*, char*, unsigned long, unsigned long&)+0x12c>
4001631c:	e3520000 	cmp	r2, #0
40016320:	0a00001d 	beq	4001639c <TCNetParams::Builder(tcnetparams::Params const*, char*, unsigned long, unsigned long&)+0x218>
40016324:	e2533000 	subs	r3, r3, #0
40016328:	e59f209c 	ldr	r2, [pc, #156]	; 400163cc <TCNetParams::Builder(tcnetparams::Params const*, char*, unsigned long, unsigned long&)+0x248>
4001632c:	13a03001 	movne	r3, #1
40016330:	e58d3000 	str	r3, [sp]
40016334:	e59f3094 	ldr	r3, [pc, #148]	; 400163d0 <TCNetParams::Builder(tcnetparams::Params const*, char*, unsigned long, unsigned long&)+0x24c>
40016338:	e1a01004 	mov	r1, r4
4001633c:	eb005a30 	bl	4002cc04 <snprintf>
40016340:	e1540000 	cmp	r4, r0
40016344:	a1dd31b2 	ldrhge	r3, [sp, #18]
40016348:	a0830000 	addge	r0, r3, r0
4001634c:	a1cd01b2 	strhge	r0, [sp, #18]
40016350:	e5dd3014 	ldrb	r3, [sp, #20]
40016354:	e3530000 	cmp	r3, #0
40016358:	0a00000a 	beq	40016388 <TCNetParams::Builder(tcnetparams::Params const*, char*, unsigned long, unsigned long&)+0x204>
4001635c:	e1dd21b2 	ldrh	r2, [sp, #18]
40016360:	e59d300c 	ldr	r3, [sp, #12]
40016364:	e0833002 	add	r3, r3, r2
40016368:	e3a0207d 	mov	r2, #125	; 0x7d
4001636c:	e5432001 	strb	r2, [r3, #-1]
40016370:	e59d100c 	ldr	r1, [sp, #12]
40016374:	e1dd31b2 	ldrh	r3, [sp, #18]
40016378:	e7c12003 	strb	r2, [r1, r3]
4001637c:	e1dd31b2 	ldrh	r3, [sp, #18]
40016380:	e2833001 	add	r3, r3, #1
40016384:	e1cd31b2 	strh	r3, [sp, #18]
40016388:	e1dd21b2 	ldrh	r2, [sp, #18]
4001638c:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
40016390:	e5832000 	str	r2, [r3]
40016394:	e28dd018 	add	sp, sp, #24
40016398:	e8bd8070 	pop	{r4, r5, r6, pc}
4001639c:	e59f2030 	ldr	r2, [pc, #48]	; 400163d4 <TCNetParams::Builder(tcnetparams::Params const*, char*, unsigned long, unsigned long&)+0x250>
400163a0:	e3a03001 	mov	r3, #1
400163a4:	e58d3000 	str	r3, [sp]
400163a8:	e59f3020 	ldr	r3, [pc, #32]	; 400163d0 <TCNetParams::Builder(tcnetparams::Params const*, char*, unsigned long, unsigned long&)+0x24c>
400163ac:	eaffffe1 	b	40016338 <TCNetParams::Builder(tcnetparams::Params const*, char*, unsigned long, unsigned long&)+0x1b4>
400163b0:	40031a9b 	mulmi	r3, fp, sl
400163b4:	40034068 	andmi	r4, r3, r8, rrx
400163b8:	40031a91 	mulmi	r3, r1, sl
400163bc:	40031a8b 	andmi	r1, r3, fp, lsl #21
400163c0:	40031a6c 	andmi	r1, r3, ip, ror #20
400163c4:	4002e13b 	andmi	lr, r2, fp, lsr r1
400163c8:	40031a7d 	andmi	r1, r3, sp, ror sl
400163cc:	4002e132 	andmi	lr, r2, r2, lsr r1
400163d0:	40031a70 	andmi	r1, r3, r0, ror sl
400163d4:	4002e13c 	andmi	lr, r2, ip, lsr r1

400163d8 <TCNetParams::Set(TCNet*)>:
400163d8:	e5903000 	ldr	r3, [r0]
400163dc:	e3530000 	cmp	r3, #0
400163e0:	012fff1e 	bxeq	lr
400163e4:	e3130001 	tst	r3, #1
400163e8:	e92d4070 	push	{r4, r5, r6, lr}
400163ec:	e1a05000 	mov	r5, r0
400163f0:	e1a04001 	mov	r4, r1
400163f4:	0a000005 	beq	40016410 <TCNetParams::Set(TCNet*)+0x38>
400163f8:	e2801004 	add	r1, r0, #4
400163fc:	e3a02007 	mov	r2, #7
40016400:	e284003f 	add	r0, r4, #63	; 0x3f
40016404:	ebfffe8f 	bl	40015e48 <strncpy.isra.0>
40016408:	e3a03000 	mov	r3, #0
4001640c:	e5c43046 	strb	r3, [r4, #70]	; 0x46
40016410:	e5953000 	ldr	r3, [r5]
40016414:	e3130002 	tst	r3, #2
40016418:	0a000008 	beq	40016440 <TCNetParams::Set(TCNet*)+0x68>
4001641c:	e5d5200c 	ldrb	r2, [r5, #12]
40016420:	e3a0106a 	mov	r1, #106	; 0x6a
40016424:	e5842030 	str	r2, [r4, #48]	; 0x30
40016428:	e2823006 	add	r3, r2, #6
4001642c:	e1a03103 	lsl	r3, r3, #2
40016430:	e5843020 	str	r3, [r4, #32]
40016434:	e3a03006 	mov	r3, #6
40016438:	e1031283 	smlabb	r3, r3, r2, r1
4001643c:	e5843024 	str	r3, [r4, #36]	; 0x24
40016440:	e5953000 	ldr	r3, [r5]
40016444:	e3130004 	tst	r3, #4
40016448:	0a00000a 	beq	40016478 <TCNetParams::Set(TCNet*)+0xa0>
4001644c:	e5d5200d 	ldrb	r2, [r5, #13]
40016450:	e3520003 	cmp	r2, #3
40016454:	979ff102 	ldrls	pc, [pc, r2, lsl #2]
40016458:	ea000006 	b	40016478 <TCNetParams::Set(TCNet*)+0xa0>
4001645c:	4001646c 	andmi	r6, r1, ip, ror #8
40016460:	40016484 	andmi	r6, r1, r4, lsl #9
40016464:	4001648c 	andmi	r6, r1, ip, lsl #9
40016468:	40016494 	mulmi	r1, r4, r4
4001646c:	e59f1028 	ldr	r1, [pc, #40]	; 4001649c <TCNetParams::Set(TCNet*)+0xc4>
40016470:	e584102c 	str	r1, [r4, #44]	; 0x2c
40016474:	e5c42034 	strb	r2, [r4, #52]	; 0x34
40016478:	e7e031d3 	ubfx	r3, r3, #3, #1
4001647c:	e5c43035 	strb	r3, [r4, #53]	; 0x35
40016480:	e8bd8070 	pop	{r4, r5, r6, pc}
40016484:	e59f1014 	ldr	r1, [pc, #20]	; 400164a0 <TCNetParams::Set(TCNet*)+0xc8>
40016488:	eafffff8 	b	40016470 <TCNetParams::Set(TCNet*)+0x98>
4001648c:	e59f1010 	ldr	r1, [pc, #16]	; 400164a4 <TCNetParams::Set(TCNet*)+0xcc>
40016490:	eafffff6 	b	40016470 <TCNetParams::Set(TCNet*)+0x98>
40016494:	e59f100c 	ldr	r1, [pc, #12]	; 400164a8 <TCNetParams::Set(TCNet*)+0xd0>
40016498:	eafffff4 	b	40016470 <TCNetParams::Set(TCNet*)+0x98>
4001649c:	4226aaab 	eormi	sl, r6, #700416	; 0xab000
400164a0:	42200000 	eormi	r0, r0, #0
400164a4:	42057780 	andmi	r7, r5, #128, 14	; 0x2000000
400164a8:	42055555 	andmi	r5, r5, #356515840	; 0x15400000

400164ac <Midi::Midi()>:
400164ac:	e3071a12 	movw	r1, #31250	; 0x7a12
400164b0:	e3a02001 	mov	r2, #1
400164b4:	e8800006 	stm	r0, {r1, r2}
400164b8:	e3a02000 	mov	r2, #0
400164bc:	e5c02008 	strb	r2, [r0, #8]
400164c0:	e5802098 	str	r2, [r0, #152]	; 0x98
400164c4:	e59f2004 	ldr	r2, [pc, #4]	; 400164d0 <Midi::Midi()+0x24>
400164c8:	e5820000 	str	r0, [r2]
400164cc:	e12fff1e 	bx	lr
400164d0:	4005873c 	andmi	r8, r5, ip, lsr r7

400164d4 <TIMER1_IRQHandler()>:
400164d4:	e3a02b03 	mov	r2, #3072	; 0xc00
400164d8:	e3083960 	movw	r3, #35168	; 0x8960
400164dc:	e34021c2 	movt	r2, #450	; 0x1c2
400164e0:	e3a01002 	mov	r1, #2
400164e4:	e3443005 	movt	r3, #16389	; 0x4005
400164e8:	e5821004 	str	r1, [r2, #4]
400164ec:	e5932000 	ldr	r2, [r3]
400164f0:	e3520000 	cmp	r2, #0
400164f4:	012fff1e 	bxeq	lr
400164f8:	e5933000 	ldr	r3, [r3]
400164fc:	e12fff13 	bx	r3

40016500 <TIMER0_IRQHandler()>:
40016500:	e3a02b03 	mov	r2, #3072	; 0xc00
40016504:	e308394c 	movw	r3, #35148	; 0x894c
40016508:	e34021c2 	movt	r2, #450	; 0x1c2
4001650c:	e3a01001 	mov	r1, #1
40016510:	e3443005 	movt	r3, #16389	; 0x4005
40016514:	e5821004 	str	r1, [r2, #4]
40016518:	e5932000 	ldr	r2, [r3]
4001651c:	e352000a 	cmp	r2, #10
40016520:	0a000011 	beq	4001656c <TIMER0_IRQHandler()+0x6c>
40016524:	e5932000 	ldr	r2, [r3]
40016528:	e2822001 	add	r2, r2, #1
4001652c:	e5832000 	str	r2, [r3]
40016530:	e3083950 	movw	r3, #35152	; 0x8950
40016534:	e3443005 	movt	r3, #16389	; 0x4005
40016538:	e5932000 	ldr	r2, [r3]
4001653c:	e3520001 	cmp	r2, #1
40016540:	112fff1e 	bxne	lr
40016544:	e308295c 	movw	r2, #35164	; 0x895c
40016548:	e3442005 	movt	r2, #16389	; 0x4005
4001654c:	e5921000 	ldr	r1, [r2]
40016550:	e2811001 	add	r1, r1, #1
40016554:	e5821000 	str	r1, [r2]
40016558:	e5922000 	ldr	r2, [r2]
4001655c:	e3520003 	cmp	r2, #3
40016560:	83a02002 	movhi	r2, #2
40016564:	85832000 	strhi	r2, [r3]
40016568:	e12fff1e 	bx	lr
4001656c:	e3081948 	movw	r1, #35144	; 0x8948
40016570:	e3082954 	movw	r2, #35156	; 0x8954
40016574:	e3441005 	movt	r1, #16389	; 0x4005
40016578:	e3a0c000 	mov	ip, #0
4001657c:	e3442005 	movt	r2, #16389	; 0x4005
40016580:	e3080958 	movw	r0, #35160	; 0x8958
40016584:	e583c000 	str	ip, [r3]
40016588:	e5913000 	ldr	r3, [r1]
4001658c:	e592c000 	ldr	ip, [r2]
40016590:	e3440005 	movt	r0, #16389	; 0x4005
40016594:	e043300c 	sub	r3, r3, ip
40016598:	e5803000 	str	r3, [r0]
4001659c:	e5913000 	ldr	r3, [r1]
400165a0:	e5823000 	str	r3, [r2]
400165a4:	eaffffe1 	b	40016530 <TIMER0_IRQHandler()+0x30>

400165a8 <USART2_IRQHandler()>:
400165a8:	e3a03b22 	mov	r3, #34816	; 0x8800
400165ac:	e34031c2 	movt	r3, #450	; 0x1c2
400165b0:	e5932008 	ldr	r2, [r3, #8]
400165b4:	e3120004 	tst	r2, #4
400165b8:	012fff1e 	bxeq	lr
400165bc:	e5931000 	ldr	r1, [r3]
400165c0:	e3083740 	movw	r3, #34624	; 0x8740
400165c4:	e3443005 	movt	r3, #16389	; 0x4005
400165c8:	e3a00b03 	mov	r0, #3072	; 0xc00
400165cc:	e34001c2 	movt	r0, #450	; 0x1c2
400165d0:	e6ef1071 	uxtb	r1, r1
400165d4:	e5932200 	ldr	r2, [r3, #512]	; 0x200
400165d8:	e0832182 	add	r2, r3, r2, lsl #3
400165dc:	e5c21004 	strb	r1, [r2, #4]
400165e0:	e5901084 	ldr	r1, [r0, #132]	; 0x84
400165e4:	e5932200 	ldr	r2, [r3, #512]	; 0x200
400165e8:	e7831182 	str	r1, [r3, r2, lsl #3]
400165ec:	e5932200 	ldr	r2, [r3, #512]	; 0x200
400165f0:	e2822001 	add	r2, r2, #1
400165f4:	e202203f 	and	r2, r2, #63	; 0x3f
400165f8:	e5832200 	str	r2, [r3, #512]	; 0x200
400165fc:	e12fff1e 	bx	lr

40016600 <Midi::SetIrqTimer1(void (*)())>:
40016600:	e2513000 	subs	r3, r1, #0
40016604:	0a00000e 	beq	40016644 <Midi::SetIrqTimer1(void (*)())+0x44>
40016608:	e3082960 	movw	r2, #35168	; 0x8960
4001660c:	e3a01001 	mov	r1, #1
40016610:	e3442005 	movt	r2, #16389	; 0x4005
40016614:	e3a00033 	mov	r0, #51	; 0x33
40016618:	e92d4010 	push	{r4, lr}
4001661c:	e5823000 	str	r3, [r2]
40016620:	eb005685 	bl	4002c03c <gic_irq_config(T_H3_IRQn, GIC_CORE_TypeDef)>
40016624:	e3a03b03 	mov	r3, #3072	; 0xc00
40016628:	e3a02014 	mov	r2, #20
4001662c:	e34031c2 	movt	r3, #450	; 0x1c2
40016630:	e5832020 	str	r2, [r3, #32]
40016634:	e5932000 	ldr	r2, [r3]
40016638:	e3822002 	orr	r2, r2, #2
4001663c:	e5832000 	str	r2, [r3]
40016640:	e8bd8010 	pop	{r4, pc}
40016644:	e3a03b03 	mov	r3, #3072	; 0xc00
40016648:	e34031c2 	movt	r3, #450	; 0x1c2
4001664c:	e5932000 	ldr	r2, [r3]
40016650:	e3c22002 	bic	r2, r2, #2
40016654:	e5832000 	str	r2, [r3]
40016658:	e12fff1e 	bx	lr

4001665c <Midi::Init(midi::Direction)>:
4001665c:	e92d4030 	push	{r4, r5, lr}
40016660:	e1a05001 	mov	r5, r1
40016664:	e5901000 	ldr	r1, [r0]
40016668:	e24dd00c 	sub	sp, sp, #12
4001666c:	e5805004 	str	r5, [r0, #4]
40016670:	e3073a12 	movw	r3, #31250	; 0x7a12
40016674:	e3510000 	cmp	r1, #0
40016678:	e1a04000 	mov	r4, r0
4001667c:	01a01003 	moveq	r1, r3
40016680:	e3a00b22 	mov	r0, #34816	; 0x8800
40016684:	e34001c2 	movt	r0, #450	; 0x1c2
40016688:	e3a03001 	mov	r3, #1
4001668c:	e58d3000 	str	r3, [sp]
40016690:	e3a02008 	mov	r2, #8
40016694:	e3a03000 	mov	r3, #0
40016698:	ebffa8c3 	bl	400009ac <h3_uart_begin>
4001669c:	e3150001 	tst	r5, #1
400166a0:	0a000036 	beq	40016780 <Midi::Init(midi::Direction)+0x124>
400166a4:	e3083740 	movw	r3, #34624	; 0x8740
400166a8:	e3a01000 	mov	r1, #0
400166ac:	e3443005 	movt	r3, #16389	; 0x4005
400166b0:	e5c41099 	strb	r1, [r4, #153]	; 0x99
400166b4:	e283cf82 	add	ip, r3, #520	; 0x208
400166b8:	e1c419ba 	strh	r1, [r4, #154]	; 0x9a
400166bc:	e1a02003 	mov	r2, r3
400166c0:	e2833001 	add	r3, r3, #1
400166c4:	e153000c 	cmp	r3, ip
400166c8:	e5c21000 	strb	r1, [r2]
400166cc:	1afffffa 	bne	400166bc <Midi::Init(midi::Direction)+0x60>
400166d0:	e3a03b03 	mov	r3, #3072	; 0xc00
400166d4:	e3042f80 	movw	r2, #20352	; 0x4f80
400166d8:	e34031c2 	movt	r3, #450	; 0x1c2
400166dc:	e3a00014 	mov	r0, #20
400166e0:	e3402012 	movt	r2, #18
400166e4:	e3a05001 	mov	r5, #1
400166e8:	e5830010 	str	r0, [r3, #16]
400166ec:	e5832014 	str	r2, [r3, #20]
400166f0:	e3a02b22 	mov	r2, #34816	; 0x8800
400166f4:	e5930010 	ldr	r0, [r3, #16]
400166f8:	e34021c2 	movt	r2, #450	; 0x1c2
400166fc:	e3c00080 	bic	r0, r0, #128	; 0x80
40016700:	e5830010 	str	r0, [r3, #16]
40016704:	e5930010 	ldr	r0, [r3, #16]
40016708:	e3800003 	orr	r0, r0, #3
4001670c:	e5830010 	str	r0, [r3, #16]
40016710:	e5930000 	ldr	r0, [r3]
40016714:	e3800001 	orr	r0, r0, #1
40016718:	e5830000 	str	r0, [r3]
4001671c:	e3a00032 	mov	r0, #50	; 0x32
40016720:	e5821008 	str	r1, [r2, #8]
40016724:	e3061500 	movw	r1, #25856	; 0x6500
40016728:	e5825004 	str	r5, [r2, #4]
4001672c:	e3441001 	movt	r1, #16385	; 0x4001
40016730:	eb004bdd 	bl	400296ac <IRQ_SetHandler>
40016734:	e1a01005 	mov	r1, r5
40016738:	e3a00032 	mov	r0, #50	; 0x32
4001673c:	eb00563e 	bl	4002c03c <gic_irq_config(T_H3_IRQn, GIC_CORE_TypeDef)>
40016740:	e30614d4 	movw	r1, #25812	; 0x64d4
40016744:	e3a00033 	mov	r0, #51	; 0x33
40016748:	e3441001 	movt	r1, #16385	; 0x4001
4001674c:	eb004bd6 	bl	400296ac <IRQ_SetHandler>
40016750:	e1a01005 	mov	r1, r5
40016754:	e3a00033 	mov	r0, #51	; 0x33
40016758:	eb005637 	bl	4002c03c <gic_irq_config(T_H3_IRQn, GIC_CORE_TypeDef)>
4001675c:	e30615a8 	movw	r1, #26024	; 0x65a8
40016760:	e3a00022 	mov	r0, #34	; 0x22
40016764:	e3441001 	movt	r1, #16385	; 0x4001
40016768:	eb004bcf 	bl	400296ac <IRQ_SetHandler>
4001676c:	e1a01005 	mov	r1, r5
40016770:	e3a00022 	mov	r0, #34	; 0x22
40016774:	eb005630 	bl	4002c03c <gic_irq_config(T_H3_IRQn, GIC_CORE_TypeDef)>
40016778:	f1080080 	cpsie	i
4001677c:	f57ff05f 	dmb	sy
40016780:	e5943004 	ldr	r3, [r4, #4]
40016784:	e3130002 	tst	r3, #2
40016788:	1a000001 	bne	40016794 <Midi::Init(midi::Direction)+0x138>
4001678c:	e28dd00c 	add	sp, sp, #12
40016790:	e8bd8030 	pop	{r4, r5, pc}
40016794:	e3a03b22 	mov	r3, #34816	; 0x8800
40016798:	e3a01000 	mov	r1, #0
4001679c:	e34031c2 	movt	r3, #450	; 0x1c2
400167a0:	e3a02005 	mov	r2, #5
400167a4:	e3a00022 	mov	r0, #34	; 0x22
400167a8:	e5832008 	str	r2, [r3, #8]
400167ac:	e5831004 	str	r1, [r3, #4]
400167b0:	e28dd00c 	add	sp, sp, #12
400167b4:	e8bd4030 	pop	{r4, r5, lr}
400167b8:	ea004bbb 	b	400296ac <IRQ_SetHandler>

400167bc <Midi::GetUpdatesPerSecond()>:
400167bc:	f57ff05f 	dmb	sy
400167c0:	e3083958 	movw	r3, #35160	; 0x8958
400167c4:	e3443005 	movt	r3, #16389	; 0x4005
400167c8:	e5930000 	ldr	r0, [r3]
400167cc:	e12fff1e 	bx	lr

400167d0 <Midi::Parse()>:
400167d0:	e1a03000 	mov	r3, r0
400167d4:	f57ff05f 	dmb	sy
400167d8:	e3082740 	movw	r2, #34624	; 0x8740
400167dc:	e3442005 	movt	r2, #16389	; 0x4005
400167e0:	e5920200 	ldr	r0, [r2, #512]	; 0x200
400167e4:	e5921204 	ldr	r1, [r2, #516]	; 0x204
400167e8:	e1500001 	cmp	r0, r1
400167ec:	0a0000f6 	beq	40016bcc <Midi::Parse()+0x3fc>
400167f0:	e5921204 	ldr	r1, [r2, #516]	; 0x204
400167f4:	e92d4010 	push	{r4, lr}
400167f8:	e0821181 	add	r1, r2, r1, lsl #3
400167fc:	e5d11004 	ldrb	r1, [r1, #4]
40016800:	e5920204 	ldr	r0, [r2, #516]	; 0x204
40016804:	e6ef1071 	uxtb	r1, r1
40016808:	e792e180 	ldr	lr, [r2, r0, lsl #3]
4001680c:	e5920204 	ldr	r0, [r2, #516]	; 0x204
40016810:	e2800001 	add	r0, r0, #1
40016814:	e200003f 	and	r0, r0, #63	; 0x3f
40016818:	e5820204 	str	r0, [r2, #516]	; 0x204
4001681c:	e308295c 	movw	r2, #35164	; 0x895c
40016820:	e3442005 	movt	r2, #16389	; 0x4005
40016824:	e3a00000 	mov	r0, #0
40016828:	e5820000 	str	r0, [r2]
4001682c:	e5d32099 	ldrb	r2, [r3, #153]	; 0x99
40016830:	e1520000 	cmp	r2, r0
40016834:	1a0000a4 	bne	40016acc <Midi::Parse()+0x2fc>
40016838:	e5d3009b 	ldrb	r0, [r3, #155]	; 0x9b
4001683c:	e5c3109c 	strb	r1, [r3, #156]	; 0x9c
40016840:	e1e02000 	mvn	r2, r0
40016844:	e280c00c 	add	ip, r0, #12
40016848:	e7e023d2 	ubfx	r2, r2, #7, #1
4001684c:	e6efc07c 	uxtb	ip, ip
40016850:	e35c0001 	cmp	ip, #1
40016854:	93822001 	orrls	r2, r2, #1
40016858:	e3520000 	cmp	r2, #0
4001685c:	1a000156 	bne	40016dbc <Midi::Parse()+0x5ec>
40016860:	e20020fb 	and	r2, r0, #251	; 0xfb
40016864:	e35200f9 	cmp	r2, #249	; 0xf9
40016868:	0a000153 	beq	40016dbc <Midi::Parse()+0x5ec>
4001686c:	e35000ef 	cmp	r0, #239	; 0xef
40016870:	920020f0 	andls	r2, r0, #240	; 0xf0
40016874:	81a02000 	movhi	r2, r0
40016878:	e202c0cf 	and	ip, r2, #207	; 0xcf
4001687c:	e35c0080 	cmp	ip, #128	; 0x80
40016880:	e202c0ef 	and	ip, r2, #239	; 0xef
40016884:	1a000149 	bne	40016db0 <Midi::Parse()+0x5e0>
40016888:	e3110080 	tst	r1, #128	; 0x80
4001688c:	1a0000dd 	bne	40016c08 <Midi::Parse()+0x438>
40016890:	e5c3109d 	strb	r1, [r3, #157]	; 0x9d
40016894:	e1a01000 	mov	r1, r0
40016898:	e5c3009c 	strb	r0, [r3, #156]	; 0x9c
4001689c:	e3a02001 	mov	r2, #1
400168a0:	e5c32099 	strb	r2, [r3, #153]	; 0x99
400168a4:	e20120fb 	and	r2, r1, #251	; 0xfb
400168a8:	e35200f9 	cmp	r2, #249	; 0xf9
400168ac:	0a0000dc 	beq	40016c24 <Midi::Parse()+0x454>
400168b0:	e35100ef 	cmp	r1, #239	; 0xef
400168b4:	920100f0 	andls	r0, r1, #240	; 0xf0
400168b8:	81a00001 	movhi	r0, r1
400168bc:	e2402080 	sub	r2, r0, #128	; 0x80
400168c0:	e352007f 	cmp	r2, #127	; 0x7f
400168c4:	979ff102 	ldrls	pc, [pc, r2, lsl #2]
400168c8:	ea0000d5 	b	40016c24 <Midi::Parse()+0x454>
400168cc:	40016c8c 	andmi	r6, r1, ip, lsl #25
400168d0:	40016c24 	andmi	r6, r1, r4, lsr #24
400168d4:	40016c24 	andmi	r6, r1, r4, lsr #24
400168d8:	40016c24 	andmi	r6, r1, r4, lsr #24
400168dc:	40016c24 	andmi	r6, r1, r4, lsr #24
400168e0:	40016c24 	andmi	r6, r1, r4, lsr #24
400168e4:	40016c24 	andmi	r6, r1, r4, lsr #24
400168e8:	40016c24 	andmi	r6, r1, r4, lsr #24
400168ec:	40016c24 	andmi	r6, r1, r4, lsr #24
400168f0:	40016c24 	andmi	r6, r1, r4, lsr #24
400168f4:	40016c24 	andmi	r6, r1, r4, lsr #24
400168f8:	40016c24 	andmi	r6, r1, r4, lsr #24
400168fc:	40016c24 	andmi	r6, r1, r4, lsr #24
40016900:	40016c24 	andmi	r6, r1, r4, lsr #24
40016904:	40016c24 	andmi	r6, r1, r4, lsr #24
40016908:	40016c24 	andmi	r6, r1, r4, lsr #24
4001690c:	40016c8c 	andmi	r6, r1, ip, lsl #25
40016910:	40016c24 	andmi	r6, r1, r4, lsr #24
40016914:	40016c24 	andmi	r6, r1, r4, lsr #24
40016918:	40016c24 	andmi	r6, r1, r4, lsr #24
4001691c:	40016c24 	andmi	r6, r1, r4, lsr #24
40016920:	40016c24 	andmi	r6, r1, r4, lsr #24
40016924:	40016c24 	andmi	r6, r1, r4, lsr #24
40016928:	40016c24 	andmi	r6, r1, r4, lsr #24
4001692c:	40016c24 	andmi	r6, r1, r4, lsr #24
40016930:	40016c24 	andmi	r6, r1, r4, lsr #24
40016934:	40016c24 	andmi	r6, r1, r4, lsr #24
40016938:	40016c24 	andmi	r6, r1, r4, lsr #24
4001693c:	40016c24 	andmi	r6, r1, r4, lsr #24
40016940:	40016c24 	andmi	r6, r1, r4, lsr #24
40016944:	40016c24 	andmi	r6, r1, r4, lsr #24
40016948:	40016c24 	andmi	r6, r1, r4, lsr #24
4001694c:	40016c8c 	andmi	r6, r1, ip, lsl #25
40016950:	40016c24 	andmi	r6, r1, r4, lsr #24
40016954:	40016c24 	andmi	r6, r1, r4, lsr #24
40016958:	40016c24 	andmi	r6, r1, r4, lsr #24
4001695c:	40016c24 	andmi	r6, r1, r4, lsr #24
40016960:	40016c24 	andmi	r6, r1, r4, lsr #24
40016964:	40016c24 	andmi	r6, r1, r4, lsr #24
40016968:	40016c24 	andmi	r6, r1, r4, lsr #24
4001696c:	40016c24 	andmi	r6, r1, r4, lsr #24
40016970:	40016c24 	andmi	r6, r1, r4, lsr #24
40016974:	40016c24 	andmi	r6, r1, r4, lsr #24
40016978:	40016c24 	andmi	r6, r1, r4, lsr #24
4001697c:	40016c24 	andmi	r6, r1, r4, lsr #24
40016980:	40016c24 	andmi	r6, r1, r4, lsr #24
40016984:	40016c24 	andmi	r6, r1, r4, lsr #24
40016988:	40016c24 	andmi	r6, r1, r4, lsr #24
4001698c:	40016c8c 	andmi	r6, r1, ip, lsl #25
40016990:	40016c24 	andmi	r6, r1, r4, lsr #24
40016994:	40016c24 	andmi	r6, r1, r4, lsr #24
40016998:	40016c24 	andmi	r6, r1, r4, lsr #24
4001699c:	40016c24 	andmi	r6, r1, r4, lsr #24
400169a0:	40016c24 	andmi	r6, r1, r4, lsr #24
400169a4:	40016c24 	andmi	r6, r1, r4, lsr #24
400169a8:	40016c24 	andmi	r6, r1, r4, lsr #24
400169ac:	40016c24 	andmi	r6, r1, r4, lsr #24
400169b0:	40016c24 	andmi	r6, r1, r4, lsr #24
400169b4:	40016c24 	andmi	r6, r1, r4, lsr #24
400169b8:	40016c24 	andmi	r6, r1, r4, lsr #24
400169bc:	40016c24 	andmi	r6, r1, r4, lsr #24
400169c0:	40016c24 	andmi	r6, r1, r4, lsr #24
400169c4:	40016c24 	andmi	r6, r1, r4, lsr #24
400169c8:	40016c24 	andmi	r6, r1, r4, lsr #24
400169cc:	40016d08 	andmi	r6, r1, r8, lsl #26
400169d0:	40016c24 	andmi	r6, r1, r4, lsr #24
400169d4:	40016c24 	andmi	r6, r1, r4, lsr #24
400169d8:	40016c24 	andmi	r6, r1, r4, lsr #24
400169dc:	40016c24 	andmi	r6, r1, r4, lsr #24
400169e0:	40016c24 	andmi	r6, r1, r4, lsr #24
400169e4:	40016c24 	andmi	r6, r1, r4, lsr #24
400169e8:	40016c24 	andmi	r6, r1, r4, lsr #24
400169ec:	40016c24 	andmi	r6, r1, r4, lsr #24
400169f0:	40016c24 	andmi	r6, r1, r4, lsr #24
400169f4:	40016c24 	andmi	r6, r1, r4, lsr #24
400169f8:	40016c24 	andmi	r6, r1, r4, lsr #24
400169fc:	40016c24 	andmi	r6, r1, r4, lsr #24
40016a00:	40016c24 	andmi	r6, r1, r4, lsr #24
40016a04:	40016c24 	andmi	r6, r1, r4, lsr #24
40016a08:	40016c24 	andmi	r6, r1, r4, lsr #24
40016a0c:	40016d08 	andmi	r6, r1, r8, lsl #26
40016a10:	40016c24 	andmi	r6, r1, r4, lsr #24
40016a14:	40016c24 	andmi	r6, r1, r4, lsr #24
40016a18:	40016c24 	andmi	r6, r1, r4, lsr #24
40016a1c:	40016c24 	andmi	r6, r1, r4, lsr #24
40016a20:	40016c24 	andmi	r6, r1, r4, lsr #24
40016a24:	40016c24 	andmi	r6, r1, r4, lsr #24
40016a28:	40016c24 	andmi	r6, r1, r4, lsr #24
40016a2c:	40016c24 	andmi	r6, r1, r4, lsr #24
40016a30:	40016c24 	andmi	r6, r1, r4, lsr #24
40016a34:	40016c24 	andmi	r6, r1, r4, lsr #24
40016a38:	40016c24 	andmi	r6, r1, r4, lsr #24
40016a3c:	40016c24 	andmi	r6, r1, r4, lsr #24
40016a40:	40016c24 	andmi	r6, r1, r4, lsr #24
40016a44:	40016c24 	andmi	r6, r1, r4, lsr #24
40016a48:	40016c24 	andmi	r6, r1, r4, lsr #24
40016a4c:	40016c8c 	andmi	r6, r1, ip, lsl #25
40016a50:	40016c24 	andmi	r6, r1, r4, lsr #24
40016a54:	40016c24 	andmi	r6, r1, r4, lsr #24
40016a58:	40016c24 	andmi	r6, r1, r4, lsr #24
40016a5c:	40016c24 	andmi	r6, r1, r4, lsr #24
40016a60:	40016c24 	andmi	r6, r1, r4, lsr #24
40016a64:	40016c24 	andmi	r6, r1, r4, lsr #24
40016a68:	40016c24 	andmi	r6, r1, r4, lsr #24
40016a6c:	40016c24 	andmi	r6, r1, r4, lsr #24
40016a70:	40016c24 	andmi	r6, r1, r4, lsr #24
40016a74:	40016c24 	andmi	r6, r1, r4, lsr #24
40016a78:	40016c24 	andmi	r6, r1, r4, lsr #24
40016a7c:	40016c24 	andmi	r6, r1, r4, lsr #24
40016a80:	40016c24 	andmi	r6, r1, r4, lsr #24
40016a84:	40016c24 	andmi	r6, r1, r4, lsr #24
40016a88:	40016c24 	andmi	r6, r1, r4, lsr #24
40016a8c:	40016d8c 	andmi	r6, r1, ip, lsl #27
40016a90:	40016d08 	andmi	r6, r1, r8, lsl #26
40016a94:	40016c8c 	andmi	r6, r1, ip, lsl #25
40016a98:	40016d08 	andmi	r6, r1, r8, lsl #26
40016a9c:	40016c24 	andmi	r6, r1, r4, lsr #24
40016aa0:	40016c24 	andmi	r6, r1, r4, lsr #24
40016aa4:	40016ccc 	andmi	r6, r1, ip, asr #25
40016aa8:	40016c24 	andmi	r6, r1, r4, lsr #24
40016aac:	40016ccc 	andmi	r6, r1, ip, asr #25
40016ab0:	40016c24 	andmi	r6, r1, r4, lsr #24
40016ab4:	40016ccc 	andmi	r6, r1, ip, asr #25
40016ab8:	40016ccc 	andmi	r6, r1, ip, asr #25
40016abc:	40016ccc 	andmi	r6, r1, ip, asr #25
40016ac0:	40016c24 	andmi	r6, r1, r4, lsr #24
40016ac4:	40016d74 	andmi	r6, r1, r4, ror sp
40016ac8:	40016ccc 	andmi	r6, r1, ip, asr #25
40016acc:	e3110080 	tst	r1, #128	; 0x80
40016ad0:	1a00003f 	bne	40016bd4 <Midi::Parse()+0x404>
40016ad4:	e5d3009c 	ldrb	r0, [r3, #156]	; 0x9c
40016ad8:	e5d3c09a 	ldrb	ip, [r3, #154]	; 0x9a
40016adc:	e35000f0 	cmp	r0, #240	; 0xf0
40016ae0:	e24c4001 	sub	r4, ip, #1
40016ae4:	0a000060 	beq	40016c6c <Midi::Parse()+0x49c>
40016ae8:	e1520004 	cmp	r2, r4
40016aec:	e0834002 	add	r4, r3, r2
40016af0:	e5c4109c 	strb	r1, [r4, #156]	; 0x9c
40016af4:	ba000060 	blt	40016c7c <Midi::Parse()+0x4ac>
40016af8:	e1e02000 	mvn	r2, r0
40016afc:	e280100c 	add	r1, r0, #12
40016b00:	e7e023d2 	ubfx	r2, r2, #7, #1
40016b04:	e6ef1071 	uxtb	r1, r1
40016b08:	e583e00c 	str	lr, [r3, #12]
40016b0c:	e3510001 	cmp	r1, #1
40016b10:	93822001 	orrls	r2, r2, #1
40016b14:	e3520000 	cmp	r2, #0
40016b18:	1a0000ae 	bne	40016dd8 <Midi::Parse()+0x608>
40016b1c:	e20020fb 	and	r2, r0, #251	; 0xfb
40016b20:	e35200f9 	cmp	r2, #249	; 0xf9
40016b24:	0a0000ab 	beq	40016dd8 <Midi::Parse()+0x608>
40016b28:	e35000ef 	cmp	r0, #239	; 0xef
40016b2c:	920020f0 	andls	r2, r0, #240	; 0xf0
40016b30:	81a02000 	movhi	r2, r0
40016b34:	e5c32010 	strb	r2, [r3, #16]
40016b38:	e202e0cf 	and	lr, r2, #207	; 0xcf
40016b3c:	e35e0080 	cmp	lr, #128	; 0x80
40016b40:	e20210ef 	and	r1, r2, #239	; 0xef
40016b44:	1a0000c4 	bne	40016e5c <Midi::Parse()+0x68c>
40016b48:	e200100f 	and	r1, r0, #15
40016b4c:	e2811001 	add	r1, r1, #1
40016b50:	e5c31011 	strb	r1, [r3, #17]
40016b54:	e35c0003 	cmp	ip, #3
40016b58:	e5d3109d 	ldrb	r1, [r3, #157]	; 0x9d
40016b5c:	13a0c000 	movne	ip, #0
40016b60:	05c3c094 	strbeq	ip, [r3, #148]	; 0x94
40016b64:	e5c31012 	strb	r1, [r3, #18]
40016b68:	13a01002 	movne	r1, #2
40016b6c:	05d3109e 	ldrbeq	r1, [r3, #158]	; 0x9e
40016b70:	15c31094 	strbne	r1, [r3, #148]	; 0x94
40016b74:	05c31013 	strbeq	r1, [r3, #19]
40016b78:	e3081948 	movw	r1, #35144	; 0x8948
40016b7c:	e3441005 	movt	r1, #16389	; 0x4005
40016b80:	15c3c013 	strbne	ip, [r3, #19]
40016b84:	e3a0c000 	mov	ip, #0
40016b88:	e5c3c099 	strb	ip, [r3, #153]	; 0x99
40016b8c:	e35200b0 	cmp	r2, #176	; 0xb0
40016b90:	e5c3c09a 	strb	ip, [r3, #154]	; 0x9a
40016b94:	e591c000 	ldr	ip, [r1]
40016b98:	e28cc001 	add	ip, ip, #1
40016b9c:	e581c000 	str	ip, [r1]
40016ba0:	0a0000ab 	beq	40016e54 <Midi::Parse()+0x684>
40016ba4:	8a0000a5 	bhi	40016e40 <Midi::Parse()+0x670>
40016ba8:	e35200a0 	cmp	r2, #160	; 0xa0
40016bac:	0a0000a8 	beq	40016e54 <Midi::Parse()+0x684>
40016bb0:	e20220ef 	and	r2, r2, #239	; 0xef
40016bb4:	e3520080 	cmp	r2, #128	; 0x80
40016bb8:	0a0000a5 	beq	40016e54 <Midi::Parse()+0x684>
40016bbc:	e3a02000 	mov	r2, #0
40016bc0:	e3a00001 	mov	r0, #1
40016bc4:	e5c3209b 	strb	r2, [r3, #155]	; 0x9b
40016bc8:	e8bd8010 	pop	{r4, pc}
40016bcc:	e3a00000 	mov	r0, #0
40016bd0:	e12fff1e 	bx	lr
40016bd4:	e24100f7 	sub	r0, r1, #247	; 0xf7
40016bd8:	e3500008 	cmp	r0, #8
40016bdc:	979ff100 	ldrls	pc, [pc, r0, lsl #2]
40016be0:	eaffffbb 	b	40016ad4 <Midi::Parse()+0x304>
40016be4:	40016de8 	andmi	r6, r1, r8, ror #27
40016be8:	40016c48 	andmi	r6, r1, r8, asr #24
40016bec:	40016ad4 	ldrdmi	r6, [r1], -r4
40016bf0:	40016c48 	andmi	r6, r1, r8, asr #24
40016bf4:	40016c48 	andmi	r6, r1, r8, asr #24
40016bf8:	40016c48 	andmi	r6, r1, r8, asr #24
40016bfc:	40016ad4 	ldrdmi	r6, [r1], -r4
40016c00:	40016c38 	andmi	r6, r1, r8, lsr ip
40016c04:	40016c48 	andmi	r6, r1, r8, asr #24
40016c08:	e281200c 	add	r2, r1, #12
40016c0c:	e6ef2072 	uxtb	r2, r2
40016c10:	e3520001 	cmp	r2, #1
40016c14:	83a02000 	movhi	r2, #0
40016c18:	93a02001 	movls	r2, #1
40016c1c:	e3520000 	cmp	r2, #0
40016c20:	0affff1f 	beq	400168a4 <Midi::Parse()+0xd4>
40016c24:	e3a02000 	mov	r2, #0
40016c28:	e5c32099 	strb	r2, [r3, #153]	; 0x99
40016c2c:	e1a00002 	mov	r0, r2
40016c30:	e1c329ba 	strh	r2, [r3, #154]	; 0x9a
40016c34:	e8bd8010 	pop	{r4, pc}
40016c38:	e3082950 	movw	r2, #35152	; 0x8950
40016c3c:	e3a00001 	mov	r0, #1
40016c40:	e3442005 	movt	r2, #16389	; 0x4005
40016c44:	e5820000 	str	r0, [r2]
40016c48:	e583e00c 	str	lr, [r3, #12]
40016c4c:	e3a0c000 	mov	ip, #0
40016c50:	e5c31010 	strb	r1, [r3, #16]
40016c54:	e3a02001 	mov	r2, #1
40016c58:	e5c3c011 	strb	ip, [r3, #17]
40016c5c:	e1a00002 	mov	r0, r2
40016c60:	e1c3c1b2 	strh	ip, [r3, #18]
40016c64:	e5c32094 	strb	r2, [r3, #148]	; 0x94
40016c68:	e8bd8010 	pop	{r4, pc}
40016c6c:	e0830002 	add	r0, r3, r2
40016c70:	e1520004 	cmp	r2, r4
40016c74:	e5c01014 	strb	r1, [r0, #20]
40016c78:	aaffffe9 	bge	40016c24 <Midi::Parse()+0x454>
40016c7c:	e2822001 	add	r2, r2, #1
40016c80:	e3a00000 	mov	r0, #0
40016c84:	e5c32099 	strb	r2, [r3, #153]	; 0x99
40016c88:	e8bd8010 	pop	{r4, pc}
40016c8c:	e5d32099 	ldrb	r2, [r3, #153]	; 0x99
40016c90:	e3a0c003 	mov	ip, #3
40016c94:	e5c3c09a 	strb	ip, [r3, #154]	; 0x9a
40016c98:	e3520001 	cmp	r2, #1
40016c9c:	9afffff6 	bls	40016c7c <Midi::Parse()+0x4ac>
40016ca0:	e5d3209e 	ldrb	r2, [r3, #158]	; 0x9e
40016ca4:	e201100f 	and	r1, r1, #15
40016ca8:	e583e00c 	str	lr, [r3, #12]
40016cac:	e2811001 	add	r1, r1, #1
40016cb0:	e5d3e09d 	ldrb	lr, [r3, #157]	; 0x9d
40016cb4:	e5c30010 	strb	r0, [r3, #16]
40016cb8:	e5c31011 	strb	r1, [r3, #17]
40016cbc:	e5c3e012 	strb	lr, [r3, #18]
40016cc0:	e5c3c094 	strb	ip, [r3, #148]	; 0x94
40016cc4:	e5c32013 	strb	r2, [r3, #19]
40016cc8:	ea00001f 	b	40016d4c <Midi::Parse()+0x57c>
40016ccc:	e583e00c 	str	lr, [r3, #12]
40016cd0:	e5c30010 	strb	r0, [r3, #16]
40016cd4:	e3082948 	movw	r2, #35144	; 0x8948
40016cd8:	e3442005 	movt	r2, #16389	; 0x4005
40016cdc:	e3a00001 	mov	r0, #1
40016ce0:	e5c30094 	strb	r0, [r3, #148]	; 0x94
40016ce4:	e3a01000 	mov	r1, #0
40016ce8:	e592c000 	ldr	ip, [r2]
40016cec:	e5c31011 	strb	r1, [r3, #17]
40016cf0:	e08cc000 	add	ip, ip, r0
40016cf4:	e1c311b2 	strh	r1, [r3, #18]
40016cf8:	e5c31099 	strb	r1, [r3, #153]	; 0x99
40016cfc:	e5c3109a 	strb	r1, [r3, #154]	; 0x9a
40016d00:	e582c000 	str	ip, [r2]
40016d04:	e8bd8010 	pop	{r4, pc}
40016d08:	e3a0c001 	mov	ip, #1
40016d0c:	e3a02002 	mov	r2, #2
40016d10:	e5c3209a 	strb	r2, [r3, #154]	; 0x9a
40016d14:	e5d32099 	ldrb	r2, [r3, #153]	; 0x99
40016d18:	e152000c 	cmp	r2, ip
40016d1c:	baffffd6 	blt	40016c7c <Midi::Parse()+0x4ac>
40016d20:	e5d3209d 	ldrb	r2, [r3, #157]	; 0x9d
40016d24:	e201100f 	and	r1, r1, #15
40016d28:	e583e00c 	str	lr, [r3, #12]
40016d2c:	e2811001 	add	r1, r1, #1
40016d30:	e5c32012 	strb	r2, [r3, #18]
40016d34:	e3a02000 	mov	r2, #0
40016d38:	e5c32013 	strb	r2, [r3, #19]
40016d3c:	e3a02002 	mov	r2, #2
40016d40:	e5c30010 	strb	r0, [r3, #16]
40016d44:	e5c31011 	strb	r1, [r3, #17]
40016d48:	e5c32094 	strb	r2, [r3, #148]	; 0x94
40016d4c:	e3082948 	movw	r2, #35144	; 0x8948
40016d50:	e3a01000 	mov	r1, #0
40016d54:	e3442005 	movt	r2, #16389	; 0x4005
40016d58:	e3a00001 	mov	r0, #1
40016d5c:	e5c31099 	strb	r1, [r3, #153]	; 0x99
40016d60:	e5c3109a 	strb	r1, [r3, #154]	; 0x9a
40016d64:	e5923000 	ldr	r3, [r2]
40016d68:	e0833000 	add	r3, r3, r0
40016d6c:	e5823000 	str	r3, [r2]
40016d70:	e8bd8010 	pop	{r4, pc}
40016d74:	e583e00c 	str	lr, [r3, #12]
40016d78:	e3082950 	movw	r2, #35152	; 0x8950
40016d7c:	e3442005 	movt	r2, #16389	; 0x4005
40016d80:	e3a01001 	mov	r1, #1
40016d84:	e5821000 	str	r1, [r2]
40016d88:	eaffffd0 	b	40016cd0 <Midi::Parse()+0x500>
40016d8c:	e583e00c 	str	lr, [r3, #12]
40016d90:	e3a02080 	mov	r2, #128	; 0x80
40016d94:	e1c329ba 	strh	r2, [r3, #154]	; 0x9a
40016d98:	e3e0200f 	mvn	r2, #15
40016d9c:	e5c32014 	strb	r2, [r3, #20]
40016da0:	e3a02000 	mov	r2, #0
40016da4:	e5c32011 	strb	r2, [r3, #17]
40016da8:	e3a0c07f 	mov	ip, #127	; 0x7f
40016dac:	eaffffd8 	b	40016d14 <Midi::Parse()+0x544>
40016db0:	e35200e0 	cmp	r2, #224	; 0xe0
40016db4:	135c00c0 	cmpne	ip, #192	; 0xc0
40016db8:	0afffeb2 	beq	40016888 <Midi::Parse()+0xb8>
40016dbc:	e1e02001 	mvn	r2, r1
40016dc0:	e281000c 	add	r0, r1, #12
40016dc4:	e7e023d2 	ubfx	r2, r2, #7, #1
40016dc8:	e6ef0070 	uxtb	r0, r0
40016dcc:	e3500001 	cmp	r0, #1
40016dd0:	93822001 	orrls	r2, r2, #1
40016dd4:	eaffff90 	b	40016c1c <Midi::Parse()+0x44c>
40016dd8:	e3a01000 	mov	r1, #0
40016ddc:	e5c31010 	strb	r1, [r3, #16]
40016de0:	e1a02001 	mov	r2, r1
40016de4:	eaffff59 	b	40016b50 <Midi::Parse()+0x380>
40016de8:	e5d31014 	ldrb	r1, [r3, #20]
40016dec:	e35100f0 	cmp	r1, #240	; 0xf0
40016df0:	1affff8b 	bne	40016c24 <Midi::Parse()+0x454>
40016df4:	e0830002 	add	r0, r3, r2
40016df8:	e3e0c008 	mvn	ip, #8
40016dfc:	e2822001 	add	r2, r2, #1
40016e00:	e5c0c014 	strb	ip, [r0, #20]
40016e04:	e3080948 	movw	r0, #35144	; 0x8948
40016e08:	e3440005 	movt	r0, #16389	; 0x4005
40016e0c:	e3a0c000 	mov	ip, #0
40016e10:	e1c311b0 	strh	r1, [r3, #16]
40016e14:	e6ef2072 	uxtb	r2, r2
40016e18:	e5901000 	ldr	r1, [r0]
40016e1c:	e5c32012 	strb	r2, [r3, #18]
40016e20:	e5c3c013 	strb	ip, [r3, #19]
40016e24:	e5c32094 	strb	r2, [r3, #148]	; 0x94
40016e28:	e5c3c099 	strb	ip, [r3, #153]	; 0x99
40016e2c:	e1c3c9ba 	strh	ip, [r3, #154]	; 0x9a
40016e30:	e2813001 	add	r3, r1, #1
40016e34:	e5803000 	str	r3, [r0]
40016e38:	e3a00001 	mov	r0, #1
40016e3c:	e8bd8010 	pop	{r4, pc}
40016e40:	e35200e0 	cmp	r2, #224	; 0xe0
40016e44:	0a000002 	beq	40016e54 <Midi::Parse()+0x684>
40016e48:	e20220ef 	and	r2, r2, #239	; 0xef
40016e4c:	e35200c0 	cmp	r2, #192	; 0xc0
40016e50:	eaffff58 	b	40016bb8 <Midi::Parse()+0x3e8>
40016e54:	e5c3009b 	strb	r0, [r3, #155]	; 0x9b
40016e58:	eafffff6 	b	40016e38 <Midi::Parse()+0x668>
40016e5c:	e35100c0 	cmp	r1, #192	; 0xc0
40016e60:	135200e0 	cmpne	r2, #224	; 0xe0
40016e64:	03a01001 	moveq	r1, #1
40016e68:	13a01000 	movne	r1, #0
40016e6c:	0affff35 	beq	40016b48 <Midi::Parse()+0x378>
40016e70:	eaffff36 	b	40016b50 <Midi::Parse()+0x380>

40016e74 <timeout_timer(long)>:
40016e74:	e3043070 	movw	r3, #16496	; 0x4070
40016e78:	e3443003 	movt	r3, #16387	; 0x4003
40016e7c:	e5933000 	ldr	r3, [r3]
40016e80:	e5932044 	ldr	r2, [r3, #68]	; 0x44
40016e84:	e3520003 	cmp	r2, #3
40016e88:	112fff1e 	bxne	lr
40016e8c:	e3a02000 	mov	r2, #0
40016e90:	e30306d0 	movw	r0, #14032	; 0x36d0
40016e94:	e3440003 	movt	r0, #16387	; 0x4003
40016e98:	e5832044 	str	r2, [r3, #68]	; 0x44
40016e9c:	e5832048 	str	r2, [r3, #72]	; 0x48
40016ea0:	ea004339 	b	40027b8c <SoftwareTimerDelete(long&)>

40016ea4 <AppleMidi::AppleMidi()>:
40016ea4:	e59f1138 	ldr	r1, [pc, #312]	; 40016fe4 <AppleMidi::AppleMidi()+0x140>
40016ea8:	e3043080 	movw	r3, #16512	; 0x4080
40016eac:	e3443003 	movt	r3, #16387	; 0x4003
40016eb0:	e92d4010 	push	{r4, lr}
40016eb4:	e24dd010 	sub	sp, sp, #16
40016eb8:	e5934000 	ldr	r4, [r3]
40016ebc:	e3043070 	movw	r3, #16496	; 0x4070
40016ec0:	e3443003 	movt	r3, #16387	; 0x4003
40016ec4:	e28dc008 	add	ip, sp, #8
40016ec8:	e59f2118 	ldr	r2, [pc, #280]	; 40016fe8 <AppleMidi::AppleMidi()+0x144>
40016ecc:	e28de00e 	add	lr, sp, #14
40016ed0:	e5830000 	str	r0, [r3]
40016ed4:	e3e03000 	mvn	r3, #0
40016ed8:	e5803008 	str	r3, [r0, #8]
40016edc:	e580300c 	str	r3, [r0, #12]
40016ee0:	e1c031b8 	strh	r3, [r0, #24]
40016ee4:	e3a03402 	mov	r3, #33554432	; 0x2000000
40016ee8:	e580301c 	str	r3, [r0, #28]
40016eec:	e3a03010 	mov	r3, #16
40016ef0:	e341338c 	movt	r3, #5004	; 0x138c
40016ef4:	e5803014 	str	r3, [r0, #20]
40016ef8:	e1a0300c 	mov	r3, ip
40016efc:	e5801000 	str	r1, [r0]
40016f00:	e3a01000 	mov	r1, #0
40016f04:	e5801004 	str	r1, [r0, #4]
40016f08:	e4d21001 	ldrb	r1, [r2], #1
40016f0c:	e4c31001 	strb	r1, [r3], #1
40016f10:	e153000e 	cmp	r3, lr
40016f14:	1afffffb 	bne	40016f08 <AppleMidi::AppleMidi()+0x64>
40016f18:	e28d3004 	add	r3, sp, #4
40016f1c:	e28d200a 	add	r2, sp, #10
40016f20:	e4d21001 	ldrb	r1, [r2], #1
40016f24:	e4c31001 	strb	r1, [r3], #1
40016f28:	e153000c 	cmp	r3, ip
40016f2c:	1afffffb 	bne	40016f20 <AppleMidi::AppleMidi()+0x7c>
40016f30:	e59d3004 	ldr	r3, [sp, #4]
40016f34:	e2841014 	add	r1, r4, #20
40016f38:	e5803010 	str	r3, [r0, #16]
40016f3c:	e5d4c014 	ldrb	ip, [r4, #20]
40016f40:	e35c0000 	cmp	ip, #0
40016f44:	0a000023 	beq	40016fd8 <AppleMidi::AppleMidi()+0x134>
40016f48:	e1a03001 	mov	r3, r1
40016f4c:	e5f32001 	ldrb	r2, [r3, #1]!
40016f50:	e3520000 	cmp	r2, #0
40016f54:	1afffffc 	bne	40016f4c <AppleMidi::AppleMidi()+0xa8>
40016f58:	e0432001 	sub	r2, r3, r1
40016f5c:	e3520017 	cmp	r2, #23
40016f60:	9a000015 	bls	40016fbc <AppleMidi::AppleMidi()+0x118>
40016f64:	e2803028 	add	r3, r0, #40	; 0x28
40016f68:	e3a04029 	mov	r4, #41	; 0x29
40016f6c:	e3a0e017 	mov	lr, #23
40016f70:	e3a02018 	mov	r2, #24
40016f74:	e28ee001 	add	lr, lr, #1
40016f78:	e083e00e 	add	lr, r3, lr
40016f7c:	ea000000 	b	40016f84 <AppleMidi::AppleMidi()+0xe0>
40016f80:	e5f1c001 	ldrb	ip, [r1, #1]!
40016f84:	e4c3c001 	strb	ip, [r3], #1
40016f88:	e15e0003 	cmp	lr, r3
40016f8c:	1afffffb 	bne	40016f80 <AppleMidi::AppleMidi()+0xdc>
40016f90:	e0802002 	add	r2, r0, r2
40016f94:	e2803044 	add	r3, r0, #68	; 0x44
40016f98:	e280c050 	add	ip, r0, #80	; 0x50
40016f9c:	e3a01000 	mov	r1, #0
40016fa0:	e5c21028 	strb	r1, [r2, #40]	; 0x28
40016fa4:	e1c041b4 	strh	r4, [r0, #20]
40016fa8:	e4c31001 	strb	r1, [r3], #1
40016fac:	e153000c 	cmp	r3, ip
40016fb0:	1afffffc 	bne	40016fa8 <AppleMidi::AppleMidi()+0x104>
40016fb4:	e28dd010 	add	sp, sp, #16
40016fb8:	e8bd8010 	pop	{r4, pc}
40016fbc:	e3520000 	cmp	r2, #0
40016fc0:	e2824011 	add	r4, r2, #17
40016fc4:	e242e001 	sub	lr, r2, #1
40016fc8:	e6ff4074 	uxth	r4, r4
40016fcc:	0affffef 	beq	40016f90 <AppleMidi::AppleMidi()+0xec>
40016fd0:	e2803028 	add	r3, r0, #40	; 0x28
40016fd4:	eaffffe6 	b	40016f74 <AppleMidi::AppleMidi()+0xd0>
40016fd8:	e3a04011 	mov	r4, #17
40016fdc:	e1a0200c 	mov	r2, ip
40016fe0:	eaffffea 	b	40016f90 <AppleMidi::AppleMidi()+0xec>
40016fe4:	40031ab0 			; <UNDEFINED> instruction: 0x40031ab0
40016fe8:	4005a750 	andmi	sl, r5, r0, asr r7

40016fec <AppleMidi::InputControlMessage(unsigned char const*, unsigned long, unsigned long, unsigned short)>:
40016fec:	e92d4010 	push	{r4, lr}
40016ff0:	e352000f 	cmp	r2, #15
40016ff4:	e24dd010 	sub	sp, sp, #16
40016ff8:	e1a04000 	mov	r4, r0
40016ffc:	e1ddc1b8 	ldrh	ip, [sp, #24]
40017000:	9a000005 	bls	4001701c <AppleMidi::InputControlMessage(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x30>
40017004:	e1d100b0 	ldrh	r0, [r1]
40017008:	e30f2fff 	movw	r2, #65535	; 0xffff
4001700c:	e1500002 	cmp	r0, r2
40017010:	0a000001 	beq	4001701c <AppleMidi::InputControlMessage(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x30>
40017014:	e28dd010 	add	sp, sp, #16
40017018:	e8bd8010 	pop	{r4, pc}
4001701c:	e5942044 	ldr	r2, [r4, #68]	; 0x44
40017020:	e3520000 	cmp	r2, #0
40017024:	1a00001c 	bne	4001709c <AppleMidi::InputControlMessage(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xb0>
40017028:	e5942048 	ldr	r2, [r4, #72]	; 0x48
4001702c:	e3520000 	cmp	r2, #0
40017030:	1afffff7 	bne	40017014 <AppleMidi::InputControlMessage(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x28>
40017034:	e1d100b2 	ldrh	r0, [r1, #2]
40017038:	e3042e49 	movw	r2, #20041	; 0x4e49
4001703c:	e1500002 	cmp	r0, r2
40017040:	1afffff3 	bne	40017014 <AppleMidi::InputControlMessage(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x28>
40017044:	e5942010 	ldr	r2, [r4, #16]
40017048:	e5940008 	ldr	r0, [r4, #8]
4001704c:	e5842024 	str	r2, [r4, #36]	; 0x24
40017050:	e3042b4f 	movw	r2, #19279	; 0x4b4f
40017054:	e1c421ba 	strh	r2, [r4, #26]
40017058:	e5912008 	ldr	r2, [r1, #8]
4001705c:	e5842020 	str	r2, [r4, #32]
40017060:	e30a273c 	movw	r2, #42812	; 0xa73c
40017064:	e3442005 	movt	r2, #16389	; 0x4005
40017068:	e5921000 	ldr	r1, [r2]
4001706c:	e1d421b4 	ldrh	r2, [r4, #20]
40017070:	e3510000 	cmp	r1, #0
40017074:	e2841018 	add	r1, r4, #24
40017078:	0a000003 	beq	4001708c <AppleMidi::InputControlMessage(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xa0>
4001707c:	e58dc000 	str	ip, [sp]
40017080:	e58d300c 	str	r3, [sp, #12]
40017084:	eb002cbb 	bl	40022378 <net::udp_send(long, unsigned char const*, unsigned long, unsigned long, unsigned short)>
40017088:	e59d300c 	ldr	r3, [sp, #12]
4001708c:	e5843048 	str	r3, [r4, #72]	; 0x48
40017090:	e3a03001 	mov	r3, #1
40017094:	e5843044 	str	r3, [r4, #68]	; 0x44
40017098:	eaffffdd 	b	40017014 <AppleMidi::InputControlMessage(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x28>
4001709c:	e3520003 	cmp	r2, #3
400170a0:	1affffdb 	bne	40017014 <AppleMidi::InputControlMessage(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x28>
400170a4:	e5940048 	ldr	r0, [r4, #72]	; 0x48
400170a8:	e1d120b2 	ldrh	r2, [r1, #2]
400170ac:	e1500003 	cmp	r0, r3
400170b0:	0a000014 	beq	40017108 <AppleMidi::InputControlMessage(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x11c>
400170b4:	e3040e49 	movw	r0, #20041	; 0x4e49
400170b8:	e1520000 	cmp	r2, r0
400170bc:	1affffd4 	bne	40017014 <AppleMidi::InputControlMessage(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x28>
400170c0:	e5942010 	ldr	r2, [r4, #16]
400170c4:	e5940008 	ldr	r0, [r4, #8]
400170c8:	e5842024 	str	r2, [r4, #36]	; 0x24
400170cc:	e3042f4e 	movw	r2, #20302	; 0x4f4e
400170d0:	e1c421ba 	strh	r2, [r4, #26]
400170d4:	e5912008 	ldr	r2, [r1, #8]
400170d8:	e5842020 	str	r2, [r4, #32]
400170dc:	e30a273c 	movw	r2, #42812	; 0xa73c
400170e0:	e3442005 	movt	r2, #16389	; 0x4005
400170e4:	e5921000 	ldr	r1, [r2]
400170e8:	e1d421b4 	ldrh	r2, [r4, #20]
400170ec:	e3510000 	cmp	r1, #0
400170f0:	e2841018 	add	r1, r4, #24
400170f4:	0affffc6 	beq	40017014 <AppleMidi::InputControlMessage(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x28>
400170f8:	e58dc018 	str	ip, [sp, #24]
400170fc:	e28dd010 	add	sp, sp, #16
40017100:	e8bd4010 	pop	{r4, lr}
40017104:	ea002c9b 	b	40022378 <net::udp_send(long, unsigned char const*, unsigned long, unsigned long, unsigned short)>
40017108:	e3050942 	movw	r0, #22850	; 0x5942
4001710c:	e1520000 	cmp	r2, r0
40017110:	03a03000 	moveq	r3, #0
40017114:	05843044 	streq	r3, [r4, #68]	; 0x44
40017118:	05843048 	streq	r3, [r4, #72]	; 0x48
4001711c:	1affffe4 	bne	400170b4 <AppleMidi::InputControlMessage(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xc8>
40017120:	eaffffbb 	b	40017014 <AppleMidi::InputControlMessage(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x28>

40017124 <AppleMidi::InputMidiMessage(unsigned char const*, unsigned long, unsigned long, unsigned short)>:
40017124:	e92d4030 	push	{r4, r5, lr}
40017128:	e352000b 	cmp	r2, #11
4001712c:	e24dd00c 	sub	sp, sp, #12
40017130:	e1a04000 	mov	r4, r0
40017134:	e1dd51b8 	ldrh	r5, [sp, #24]
40017138:	8a00003e 	bhi	40017238 <AppleMidi::InputMidiMessage(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x114>
4001713c:	e1d1c0b0 	ldrh	ip, [r1]
40017140:	e3060180 	movw	r0, #24960	; 0x6180
40017144:	e15c0000 	cmp	ip, r0
40017148:	0a000009 	beq	40017174 <AppleMidi::InputMidiMessage(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x50>
4001714c:	e30f0fff 	movw	r0, #65535	; 0xffff
40017150:	e352000f 	cmp	r2, #15
40017154:	e04cc000 	sub	ip, ip, r0
40017158:	e16fcf1c 	clz	ip, ip
4001715c:	e1a0c2ac 	lsr	ip, ip, #5
40017160:	93a0c000 	movls	ip, #0
40017164:	e35c0000 	cmp	ip, #0
40017168:	1a000007 	bne	4001718c <AppleMidi::InputMidiMessage(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x68>
4001716c:	e28dd00c 	add	sp, sp, #12
40017170:	e8bd8030 	pop	{r4, r5, pc}
40017174:	e5943000 	ldr	r3, [r4]
40017178:	e1a00004 	mov	r0, r4
4001717c:	e5933008 	ldr	r3, [r3, #8]
40017180:	e28dd00c 	add	sp, sp, #12
40017184:	e8bd4030 	pop	{r4, r5, lr}
40017188:	e12fff13 	bx	r3
4001718c:	e5942044 	ldr	r2, [r4, #68]	; 0x44
40017190:	e3520001 	cmp	r2, #1
40017194:	0a00002b 	beq	40017248 <AppleMidi::InputMidiMessage(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x124>
40017198:	e3520003 	cmp	r2, #3
4001719c:	1afffff2 	bne	4001716c <AppleMidi::InputMidiMessage(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x48>
400171a0:	e1d100b2 	ldrh	r0, [r1, #2]
400171a4:	e3042b43 	movw	r2, #19267	; 0x4b43
400171a8:	e1500002 	cmp	r0, r2
400171ac:	1affffee 	bne	4001716c <AppleMidi::InputMidiMessage(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x48>
400171b0:	e5d10008 	ldrb	r0, [r1, #8]
400171b4:	e3500000 	cmp	r0, #0
400171b8:	1a000042 	bne	400172c8 <AppleMidi::InputMidiMessage(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x1a4>
400171bc:	e5942010 	ldr	r2, [r4, #16]
400171c0:	e3a0c001 	mov	ip, #1
400171c4:	e5c1c008 	strb	ip, [r1, #8]
400171c8:	e30ac73c 	movw	ip, #42812	; 0xa73c
400171cc:	e5812004 	str	r2, [r1, #4]
400171d0:	e3a02b03 	mov	r2, #3072	; 0xc00
400171d4:	e34021c2 	movt	r2, #450	; 0x1c2
400171d8:	e344c005 	movt	ip, #16389	; 0x4005
400171dc:	e5922084 	ldr	r2, [r2, #132]	; 0x84
400171e0:	e594e004 	ldr	lr, [r4, #4]
400171e4:	e59cc000 	ldr	ip, [ip]
400171e8:	e042200e 	sub	r2, r2, lr
400171ec:	e5810014 	str	r0, [r1, #20]
400171f0:	e35c0000 	cmp	ip, #0
400171f4:	e594000c 	ldr	r0, [r4, #12]
400171f8:	e3a0c00a 	mov	ip, #10
400171fc:	e002029c 	mul	r2, ip, r2
40017200:	e6bf2f32 	rev	r2, r2
40017204:	e5812018 	str	r2, [r1, #24]
40017208:	0a000002 	beq	40017218 <AppleMidi::InputMidiMessage(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xf4>
4001720c:	e58d5000 	str	r5, [sp]
40017210:	e3a02024 	mov	r2, #36	; 0x24
40017214:	eb002c57 	bl	40022378 <net::udp_send(long, unsigned char const*, unsigned long, unsigned long, unsigned short)>
40017218:	e30336d0 	movw	r3, #14032	; 0x36d0
4001721c:	e3051f90 	movw	r1, #24464	; 0x5f90
40017220:	e3443003 	movt	r3, #16387	; 0x4003
40017224:	e3401001 	movt	r1, #1
40017228:	e5930000 	ldr	r0, [r3]
4001722c:	e28dd00c 	add	sp, sp, #12
40017230:	e8bd4030 	pop	{r4, r5, lr}
40017234:	ea004274 	b	40027c0c <SoftwareTimerChange(long, unsigned long)>
40017238:	e5900048 	ldr	r0, [r0, #72]	; 0x48
4001723c:	e1500003 	cmp	r0, r3
40017240:	1affffc9 	bne	4001716c <AppleMidi::InputMidiMessage(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x48>
40017244:	eaffffbc 	b	4001713c <AppleMidi::InputMidiMessage(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x18>
40017248:	e1d100b2 	ldrh	r0, [r1, #2]
4001724c:	e3042e49 	movw	r2, #20041	; 0x4e49
40017250:	e1500002 	cmp	r0, r2
40017254:	1affffc4 	bne	4001716c <AppleMidi::InputMidiMessage(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x48>
40017258:	e5942010 	ldr	r2, [r4, #16]
4001725c:	e594000c 	ldr	r0, [r4, #12]
40017260:	e5842024 	str	r2, [r4, #36]	; 0x24
40017264:	e3042b4f 	movw	r2, #19279	; 0x4b4f
40017268:	e1c421ba 	strh	r2, [r4, #26]
4001726c:	e5912008 	ldr	r2, [r1, #8]
40017270:	e5842020 	str	r2, [r4, #32]
40017274:	e30a273c 	movw	r2, #42812	; 0xa73c
40017278:	e3442005 	movt	r2, #16389	; 0x4005
4001727c:	e5921000 	ldr	r1, [r2]
40017280:	e1d421b4 	ldrh	r2, [r4, #20]
40017284:	e3510000 	cmp	r1, #0
40017288:	e2841018 	add	r1, r4, #24
4001728c:	0a000001 	beq	40017298 <AppleMidi::InputMidiMessage(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x174>
40017290:	e58d5000 	str	r5, [sp]
40017294:	eb002c37 	bl	40022378 <net::udp_send(long, unsigned char const*, unsigned long, unsigned long, unsigned short)>
40017298:	e1c454bc 	strh	r5, [r4, #76]	; 0x4c
4001729c:	e3a03003 	mov	r3, #3
400172a0:	e5843044 	str	r3, [r4, #68]	; 0x44
400172a4:	e3061e74 	movw	r1, #28276	; 0x6e74
400172a8:	e3441001 	movt	r1, #16385	; 0x4001
400172ac:	e3050f90 	movw	r0, #24464	; 0x5f90
400172b0:	e3400001 	movt	r0, #1
400172b4:	eb004219 	bl	40027b20 <SoftwareTimerAdd(unsigned long, void (*)(long))>
400172b8:	e30336d0 	movw	r3, #14032	; 0x36d0
400172bc:	e3443003 	movt	r3, #16387	; 0x4003
400172c0:	e5830000 	str	r0, [r3]
400172c4:	eaffffa8 	b	4001716c <AppleMidi::InputMidiMessage(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x48>
400172c8:	e3500001 	cmp	r0, #1
400172cc:	0a000025 	beq	40017368 <AppleMidi::InputMidiMessage(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x244>
400172d0:	e3500002 	cmp	r0, #2
400172d4:	1affffa4 	bne	4001716c <AppleMidi::InputMidiMessage(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x48>
400172d8:	e5942010 	ldr	r2, [r4, #16]
400172dc:	e3a00b03 	mov	r0, #3072	; 0xc00
400172e0:	e34001c2 	movt	r0, #450	; 0x1c2
400172e4:	e5812004 	str	r2, [r1, #4]
400172e8:	e3a02000 	mov	r2, #0
400172ec:	e5c12008 	strb	r2, [r1, #8]
400172f0:	e590c084 	ldr	ip, [r0, #132]	; 0x84
400172f4:	e30a073c 	movw	r0, #42812	; 0xa73c
400172f8:	e3440005 	movt	r0, #16389	; 0x4005
400172fc:	e594e004 	ldr	lr, [r4, #4]
40017300:	e5900000 	ldr	r0, [r0]
40017304:	e04cc00e 	sub	ip, ip, lr
40017308:	e1500002 	cmp	r0, r2
4001730c:	e594000c 	ldr	r0, [r4, #12]
40017310:	e581200c 	str	r2, [r1, #12]
40017314:	e5c12014 	strb	r2, [r1, #20]
40017318:	e5c12015 	strb	r2, [r1, #21]
4001731c:	e5c12016 	strb	r2, [r1, #22]
40017320:	e5c12017 	strb	r2, [r1, #23]
40017324:	e5c12018 	strb	r2, [r1, #24]
40017328:	e5c12019 	strb	r2, [r1, #25]
4001732c:	e5c1201a 	strb	r2, [r1, #26]
40017330:	e5c1201b 	strb	r2, [r1, #27]
40017334:	e5c1201c 	strb	r2, [r1, #28]
40017338:	e5c1201d 	strb	r2, [r1, #29]
4001733c:	e5c1201e 	strb	r2, [r1, #30]
40017340:	e5c1201f 	strb	r2, [r1, #31]
40017344:	e5c12020 	strb	r2, [r1, #32]
40017348:	e5c12021 	strb	r2, [r1, #33]	; 0x21
4001734c:	e5c12022 	strb	r2, [r1, #34]	; 0x22
40017350:	e5c12023 	strb	r2, [r1, #35]	; 0x23
40017354:	e3a0200a 	mov	r2, #10
40017358:	e0020c92 	mul	r2, r2, ip
4001735c:	e6bf2f32 	rev	r2, r2
40017360:	e5812010 	str	r2, [r1, #16]
40017364:	eaffffa7 	b	40017208 <AppleMidi::InputMidiMessage(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xe4>
40017368:	e5942010 	ldr	r2, [r4, #16]
4001736c:	e30a073c 	movw	r0, #42812	; 0xa73c
40017370:	e3440005 	movt	r0, #16389	; 0x4005
40017374:	e5812004 	str	r2, [r1, #4]
40017378:	e3a02002 	mov	r2, #2
4001737c:	e5c12008 	strb	r2, [r1, #8]
40017380:	e3a02b03 	mov	r2, #3072	; 0xc00
40017384:	e34021c2 	movt	r2, #450	; 0x1c2
40017388:	e594c004 	ldr	ip, [r4, #4]
4001738c:	e5922084 	ldr	r2, [r2, #132]	; 0x84
40017390:	e5900000 	ldr	r0, [r0]
40017394:	e042200c 	sub	r2, r2, ip
40017398:	e3a0c00a 	mov	ip, #10
4001739c:	e002029c 	mul	r2, ip, r2
400173a0:	e3500000 	cmp	r0, #0
400173a4:	e6bf2f32 	rev	r2, r2
400173a8:	e594000c 	ldr	r0, [r4, #12]
400173ac:	e5812020 	str	r2, [r1, #32]
400173b0:	e3a02000 	mov	r2, #0
400173b4:	e581201c 	str	r2, [r1, #28]
400173b8:	eaffff92 	b	40017208 <AppleMidi::InputMidiMessage(unsigned char const*, unsigned long, unsigned long, unsigned short)+0xe4>

400173bc <AppleMidi::~AppleMidi()>:
400173bc:	e92d4010 	push	{r4, lr}
400173c0:	e1a04000 	mov	r4, r0
400173c4:	e1d001b6 	ldrh	r0, [r0, #22]
400173c8:	e59f3024 	ldr	r3, [pc, #36]	; 400173f4 <AppleMidi::~AppleMidi()+0x38>
400173cc:	e2800001 	add	r0, r0, #1
400173d0:	e5843000 	str	r3, [r4]
400173d4:	e6ff0070 	uxth	r0, r0
400173d8:	eb002bb2 	bl	400222a8 <net::udp_end(unsigned short)>
400173dc:	e1d401b6 	ldrh	r0, [r4, #22]
400173e0:	e3e03000 	mvn	r3, #0
400173e4:	e584300c 	str	r3, [r4, #12]
400173e8:	eb002bae 	bl	400222a8 <net::udp_end(unsigned short)>
400173ec:	e1a00004 	mov	r0, r4
400173f0:	e8bd8010 	pop	{r4, pc}
400173f4:	40031ab0 			; <UNDEFINED> instruction: 0x40031ab0

400173f8 <RtpMidi::~RtpMidi()>:
400173f8:	e59f3014 	ldr	r3, [pc, #20]	; 40017414 <RtpMidi::~RtpMidi()+0x1c>
400173fc:	e92d4010 	push	{r4, lr}
40017400:	e1a04000 	mov	r4, r0
40017404:	e5803000 	str	r3, [r0]
40017408:	ebffffeb 	bl	400173bc <AppleMidi::~AppleMidi()>
4001740c:	e1a00004 	mov	r0, r4
40017410:	e8bd8010 	pop	{r4, pc}
40017414:	40031ac4 	andmi	r1, r3, r4, asr #21

40017418 <RtpMidi::~RtpMidi()>:
40017418:	e92d4010 	push	{r4, lr}
4001741c:	e1a04000 	mov	r4, r0
40017420:	ebfffff4 	bl	400173f8 <RtpMidi::~RtpMidi()>
40017424:	e1a00004 	mov	r0, r4
40017428:	e3a010ec 	mov	r1, #236	; 0xec
4001742c:	eb0057e8 	bl	4002d3d4 <operator delete(void*, unsigned int)>
40017430:	e1a00004 	mov	r0, r4
40017434:	e8bd8010 	pop	{r4, pc}

40017438 <AppleMidi::~AppleMidi()>:
40017438:	e92d4010 	push	{r4, lr}
4001743c:	e1a04000 	mov	r4, r0
40017440:	e1d001b6 	ldrh	r0, [r0, #22]
40017444:	e59f3030 	ldr	r3, [pc, #48]	; 4001747c <AppleMidi::~AppleMidi()+0x44>
40017448:	e2800001 	add	r0, r0, #1
4001744c:	e5843000 	str	r3, [r4]
40017450:	e6ff0070 	uxth	r0, r0
40017454:	eb002b93 	bl	400222a8 <net::udp_end(unsigned short)>
40017458:	e1d401b6 	ldrh	r0, [r4, #22]
4001745c:	e3e03000 	mvn	r3, #0
40017460:	e584300c 	str	r3, [r4, #12]
40017464:	eb002b8f 	bl	400222a8 <net::udp_end(unsigned short)>
40017468:	e1a00004 	mov	r0, r4
4001746c:	e3a01050 	mov	r1, #80	; 0x50
40017470:	eb0057d7 	bl	4002d3d4 <operator delete(void*, unsigned int)>
40017474:	e1a00004 	mov	r0, r4
40017478:	e8bd8010 	pop	{r4, pc}
4001747c:	40031ab0 			; <UNDEFINED> instruction: 0x40031ab0

40017480 <RtpMidi::DecodeMidi(unsigned long, unsigned long)>:
40017480:	e590c0e0 	ldr	ip, [r0, #224]	; 0xe0
40017484:	e1a03000 	mov	r3, r0
40017488:	e92d4070 	push	{r4, r5, r6, lr}
4001748c:	e59c0004 	ldr	r0, [ip, #4]
40017490:	e7dce002 	ldrb	lr, [ip, r2]
40017494:	e6bf4f30 	rev	r4, r0
40017498:	e1e0000e 	mvn	r0, lr
4001749c:	e7e003d0 	ubfx	r0, r0, #7, #1
400174a0:	e35e00f4 	cmp	lr, #244	; 0xf4
400174a4:	03800001 	orreq	r0, r0, #1
400174a8:	e3500000 	cmp	r0, #0
400174ac:	15834050 	strne	r4, [r3, #80]	; 0x50
400174b0:	13a02000 	movne	r2, #0
400174b4:	15832054 	strne	r2, [r3, #84]	; 0x54
400174b8:	1a000096 	bne	40017718 <RtpMidi::DecodeMidi(unsigned long, unsigned long)+0x298>
400174bc:	e28e500b 	add	r5, lr, #11
400174c0:	e21550fb 	ands	r5, r5, #251	; 0xfb
400174c4:	05834050 	streq	r4, [r3, #80]	; 0x50
400174c8:	03e04000 	mvneq	r4, #0
400174cc:	05835054 	streq	r5, [r3, #84]	; 0x54
400174d0:	0a000091 	beq	4001771c <RtpMidi::DecodeMidi(unsigned long, unsigned long)+0x29c>
400174d4:	e35e00fd 	cmp	lr, #253	; 0xfd
400174d8:	05834050 	streq	r4, [r3, #80]	; 0x50
400174dc:	03e04000 	mvneq	r4, #0
400174e0:	05830054 	streq	r0, [r3, #84]	; 0x54
400174e4:	0a00008c 	beq	4001771c <RtpMidi::DecodeMidi(unsigned long, unsigned long)+0x29c>
400174e8:	e5834050 	str	r4, [r3, #80]	; 0x50
400174ec:	e35e00ef 	cmp	lr, #239	; 0xef
400174f0:	920e00f0 	andls	r0, lr, #240	; 0xf0
400174f4:	81a0000e 	movhi	r0, lr
400174f8:	e5c30054 	strb	r0, [r3, #84]	; 0x54
400174fc:	e2400080 	sub	r0, r0, #128	; 0x80
40017500:	e3a04000 	mov	r4, #0
40017504:	e5c34055 	strb	r4, [r3, #85]	; 0x55
40017508:	e1c345b6 	strh	r4, [r3, #86]	; 0x56
4001750c:	e350007f 	cmp	r0, #127	; 0x7f
40017510:	979ff100 	ldrls	pc, [pc, r0, lsl #2]
40017514:	ea00007f 	b	40017718 <RtpMidi::DecodeMidi(unsigned long, unsigned long)+0x298>
40017518:	4001774c 	andmi	r7, r1, ip, asr #14
4001751c:	40017718 	andmi	r7, r1, r8, lsl r7
40017520:	40017718 	andmi	r7, r1, r8, lsl r7
40017524:	40017718 	andmi	r7, r1, r8, lsl r7
40017528:	40017718 	andmi	r7, r1, r8, lsl r7
4001752c:	40017718 	andmi	r7, r1, r8, lsl r7
40017530:	40017718 	andmi	r7, r1, r8, lsl r7
40017534:	40017718 	andmi	r7, r1, r8, lsl r7
40017538:	40017718 	andmi	r7, r1, r8, lsl r7
4001753c:	40017718 	andmi	r7, r1, r8, lsl r7
40017540:	40017718 	andmi	r7, r1, r8, lsl r7
40017544:	40017718 	andmi	r7, r1, r8, lsl r7
40017548:	40017718 	andmi	r7, r1, r8, lsl r7
4001754c:	40017718 	andmi	r7, r1, r8, lsl r7
40017550:	40017718 	andmi	r7, r1, r8, lsl r7
40017554:	40017718 	andmi	r7, r1, r8, lsl r7
40017558:	4001774c 	andmi	r7, r1, ip, asr #14
4001755c:	40017718 	andmi	r7, r1, r8, lsl r7
40017560:	40017718 	andmi	r7, r1, r8, lsl r7
40017564:	40017718 	andmi	r7, r1, r8, lsl r7
40017568:	40017718 	andmi	r7, r1, r8, lsl r7
4001756c:	40017718 	andmi	r7, r1, r8, lsl r7
40017570:	40017718 	andmi	r7, r1, r8, lsl r7
40017574:	40017718 	andmi	r7, r1, r8, lsl r7
40017578:	40017718 	andmi	r7, r1, r8, lsl r7
4001757c:	40017718 	andmi	r7, r1, r8, lsl r7
40017580:	40017718 	andmi	r7, r1, r8, lsl r7
40017584:	40017718 	andmi	r7, r1, r8, lsl r7
40017588:	40017718 	andmi	r7, r1, r8, lsl r7
4001758c:	40017718 	andmi	r7, r1, r8, lsl r7
40017590:	40017718 	andmi	r7, r1, r8, lsl r7
40017594:	40017718 	andmi	r7, r1, r8, lsl r7
40017598:	4001774c 	andmi	r7, r1, ip, asr #14
4001759c:	40017718 	andmi	r7, r1, r8, lsl r7
400175a0:	40017718 	andmi	r7, r1, r8, lsl r7
400175a4:	40017718 	andmi	r7, r1, r8, lsl r7
400175a8:	40017718 	andmi	r7, r1, r8, lsl r7
400175ac:	40017718 	andmi	r7, r1, r8, lsl r7
400175b0:	40017718 	andmi	r7, r1, r8, lsl r7
400175b4:	40017718 	andmi	r7, r1, r8, lsl r7
400175b8:	40017718 	andmi	r7, r1, r8, lsl r7
400175bc:	40017718 	andmi	r7, r1, r8, lsl r7
400175c0:	40017718 	andmi	r7, r1, r8, lsl r7
400175c4:	40017718 	andmi	r7, r1, r8, lsl r7
400175c8:	40017718 	andmi	r7, r1, r8, lsl r7
400175cc:	40017718 	andmi	r7, r1, r8, lsl r7
400175d0:	40017718 	andmi	r7, r1, r8, lsl r7
400175d4:	40017718 	andmi	r7, r1, r8, lsl r7
400175d8:	4001774c 	andmi	r7, r1, ip, asr #14
400175dc:	40017718 	andmi	r7, r1, r8, lsl r7
400175e0:	40017718 	andmi	r7, r1, r8, lsl r7
400175e4:	40017718 	andmi	r7, r1, r8, lsl r7
400175e8:	40017718 	andmi	r7, r1, r8, lsl r7
400175ec:	40017718 	andmi	r7, r1, r8, lsl r7
400175f0:	40017718 	andmi	r7, r1, r8, lsl r7
400175f4:	40017718 	andmi	r7, r1, r8, lsl r7
400175f8:	40017718 	andmi	r7, r1, r8, lsl r7
400175fc:	40017718 	andmi	r7, r1, r8, lsl r7
40017600:	40017718 	andmi	r7, r1, r8, lsl r7
40017604:	40017718 	andmi	r7, r1, r8, lsl r7
40017608:	40017718 	andmi	r7, r1, r8, lsl r7
4001760c:	40017718 	andmi	r7, r1, r8, lsl r7
40017610:	40017718 	andmi	r7, r1, r8, lsl r7
40017614:	40017718 	andmi	r7, r1, r8, lsl r7
40017618:	40017778 	andmi	r7, r1, r8, ror r7
4001761c:	40017718 	andmi	r7, r1, r8, lsl r7
40017620:	40017718 	andmi	r7, r1, r8, lsl r7
40017624:	40017718 	andmi	r7, r1, r8, lsl r7
40017628:	40017718 	andmi	r7, r1, r8, lsl r7
4001762c:	40017718 	andmi	r7, r1, r8, lsl r7
40017630:	40017718 	andmi	r7, r1, r8, lsl r7
40017634:	40017718 	andmi	r7, r1, r8, lsl r7
40017638:	40017718 	andmi	r7, r1, r8, lsl r7
4001763c:	40017718 	andmi	r7, r1, r8, lsl r7
40017640:	40017718 	andmi	r7, r1, r8, lsl r7
40017644:	40017718 	andmi	r7, r1, r8, lsl r7
40017648:	40017718 	andmi	r7, r1, r8, lsl r7
4001764c:	40017718 	andmi	r7, r1, r8, lsl r7
40017650:	40017718 	andmi	r7, r1, r8, lsl r7
40017654:	40017718 	andmi	r7, r1, r8, lsl r7
40017658:	40017778 	andmi	r7, r1, r8, ror r7
4001765c:	40017718 	andmi	r7, r1, r8, lsl r7
40017660:	40017718 	andmi	r7, r1, r8, lsl r7
40017664:	40017718 	andmi	r7, r1, r8, lsl r7
40017668:	40017718 	andmi	r7, r1, r8, lsl r7
4001766c:	40017718 	andmi	r7, r1, r8, lsl r7
40017670:	40017718 	andmi	r7, r1, r8, lsl r7
40017674:	40017718 	andmi	r7, r1, r8, lsl r7
40017678:	40017718 	andmi	r7, r1, r8, lsl r7
4001767c:	40017718 	andmi	r7, r1, r8, lsl r7
40017680:	40017718 	andmi	r7, r1, r8, lsl r7
40017684:	40017718 	andmi	r7, r1, r8, lsl r7
40017688:	40017718 	andmi	r7, r1, r8, lsl r7
4001768c:	40017718 	andmi	r7, r1, r8, lsl r7
40017690:	40017718 	andmi	r7, r1, r8, lsl r7
40017694:	40017718 	andmi	r7, r1, r8, lsl r7
40017698:	4001774c 	andmi	r7, r1, ip, asr #14
4001769c:	40017718 	andmi	r7, r1, r8, lsl r7
400176a0:	40017718 	andmi	r7, r1, r8, lsl r7
400176a4:	40017718 	andmi	r7, r1, r8, lsl r7
400176a8:	40017718 	andmi	r7, r1, r8, lsl r7
400176ac:	40017718 	andmi	r7, r1, r8, lsl r7
400176b0:	40017718 	andmi	r7, r1, r8, lsl r7
400176b4:	40017718 	andmi	r7, r1, r8, lsl r7
400176b8:	40017718 	andmi	r7, r1, r8, lsl r7
400176bc:	40017718 	andmi	r7, r1, r8, lsl r7
400176c0:	40017718 	andmi	r7, r1, r8, lsl r7
400176c4:	40017718 	andmi	r7, r1, r8, lsl r7
400176c8:	40017718 	andmi	r7, r1, r8, lsl r7
400176cc:	40017718 	andmi	r7, r1, r8, lsl r7
400176d0:	40017718 	andmi	r7, r1, r8, lsl r7
400176d4:	40017718 	andmi	r7, r1, r8, lsl r7
400176d8:	4001779c 	mulmi	r1, ip, r7
400176dc:	40017778 	andmi	r7, r1, r8, ror r7
400176e0:	4001774c 	andmi	r7, r1, ip, asr #14
400176e4:	40017778 	andmi	r7, r1, r8, ror r7
400176e8:	40017718 	andmi	r7, r1, r8, lsl r7
400176ec:	40017718 	andmi	r7, r1, r8, lsl r7
400176f0:	40017740 	andmi	r7, r1, r0, asr #14
400176f4:	40017718 	andmi	r7, r1, r8, lsl r7
400176f8:	40017740 	andmi	r7, r1, r0, asr #14
400176fc:	40017718 	andmi	r7, r1, r8, lsl r7
40017700:	40017740 	andmi	r7, r1, r0, asr #14
40017704:	40017740 	andmi	r7, r1, r0, asr #14
40017708:	40017740 	andmi	r7, r1, r0, asr #14
4001770c:	40017718 	andmi	r7, r1, r8, lsl r7
40017710:	40017740 	andmi	r7, r1, r0, asr #14
40017714:	40017740 	andmi	r7, r1, r0, asr #14
40017718:	e3e04000 	mvn	r4, #0
4001771c:	e59300dc 	ldr	r0, [r3, #220]	; 0xdc
40017720:	e3500000 	cmp	r0, #0
40017724:	0a000003 	beq	40017738 <RtpMidi::DecodeMidi(unsigned long, unsigned long)+0x2b8>
40017728:	e5902000 	ldr	r2, [r0]
4001772c:	e2831050 	add	r1, r3, #80	; 0x50
40017730:	e5923008 	ldr	r3, [r2, #8]
40017734:	e12fff33 	blx	r3
40017738:	e1a00004 	mov	r0, r4
4001773c:	e8bd8070 	pop	{r4, r5, r6, pc}
40017740:	e3a04001 	mov	r4, #1
40017744:	e5c340d8 	strb	r4, [r3, #216]	; 0xd8
40017748:	eafffff3 	b	4001771c <RtpMidi::DecodeMidi(unsigned long, unsigned long)+0x29c>
4001774c:	e08c0002 	add	r0, ip, r2
40017750:	e20ee00f 	and	lr, lr, #15
40017754:	e28ee001 	add	lr, lr, #1
40017758:	e3a04003 	mov	r4, #3
4001775c:	e5c3e055 	strb	lr, [r3, #85]	; 0x55
40017760:	e5d02001 	ldrb	r2, [r0, #1]
40017764:	e5c32056 	strb	r2, [r3, #86]	; 0x56
40017768:	e5d02002 	ldrb	r2, [r0, #2]
4001776c:	e5c340d8 	strb	r4, [r3, #216]	; 0xd8
40017770:	e5c32057 	strb	r2, [r3, #87]	; 0x57
40017774:	eaffffe8 	b	4001771c <RtpMidi::DecodeMidi(unsigned long, unsigned long)+0x29c>
40017778:	e08c0002 	add	r0, ip, r2
4001777c:	e20ee00f 	and	lr, lr, #15
40017780:	e28ee001 	add	lr, lr, #1
40017784:	e3a04002 	mov	r4, #2
40017788:	e5c3e055 	strb	lr, [r3, #85]	; 0x55
4001778c:	e5d02001 	ldrb	r2, [r0, #1]
40017790:	e5c340d8 	strb	r4, [r3, #216]	; 0xd8
40017794:	e5c32056 	strb	r2, [r3, #86]	; 0x56
40017798:	eaffffdf 	b	4001771c <RtpMidi::DecodeMidi(unsigned long, unsigned long)+0x29c>
4001779c:	e3510000 	cmp	r1, #0
400177a0:	0a000015 	beq	400177fc <RtpMidi::DecodeMidi(unsigned long, unsigned long)+0x37c>
400177a4:	e2422001 	sub	r2, r2, #1
400177a8:	e283e057 	add	lr, r3, #87	; 0x57
400177ac:	e08c0002 	add	r0, ip, r2
400177b0:	e3a04000 	mov	r4, #0
400177b4:	e5f02001 	ldrb	r2, [r0, #1]!
400177b8:	e1a0c004 	mov	ip, r4
400177bc:	e2844001 	add	r4, r4, #1
400177c0:	e5ee2001 	strb	r2, [lr, #1]!
400177c4:	e35200f7 	cmp	r2, #247	; 0xf7
400177c8:	0a000007 	beq	400177ec <RtpMidi::DecodeMidi(unsigned long, unsigned long)+0x36c>
400177cc:	e354007f 	cmp	r4, #127	; 0x7f
400177d0:	93a02000 	movls	r2, #0
400177d4:	83a02001 	movhi	r2, #1
400177d8:	e1510004 	cmp	r1, r4
400177dc:	93822001 	orrls	r2, r2, #1
400177e0:	e3520000 	cmp	r2, #0
400177e4:	0afffff2 	beq	400177b4 <RtpMidi::DecodeMidi(unsigned long, unsigned long)+0x334>
400177e8:	e28c4002 	add	r4, ip, #2
400177ec:	e6ef2074 	uxtb	r2, r4
400177f0:	e5c32056 	strb	r2, [r3, #86]	; 0x56
400177f4:	e5c320d8 	strb	r2, [r3, #216]	; 0xd8
400177f8:	eaffffc7 	b	4001771c <RtpMidi::DecodeMidi(unsigned long, unsigned long)+0x29c>
400177fc:	e3a04001 	mov	r4, #1
40017800:	e1a02004 	mov	r2, r4
40017804:	eafffff9 	b	400177f0 <RtpMidi::DecodeMidi(unsigned long, unsigned long)+0x370>

40017808 <RtpMidi::HandleRtpMidi(unsigned char const*)>:
40017808:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001780c:	e1a07000 	mov	r7, r0
40017810:	e58010e0 	str	r1, [r0, #224]	; 0xe0
40017814:	e5d1600c 	ldrb	r6, [r1, #12]
40017818:	e3160080 	tst	r6, #128	; 0x80
4001781c:	e206400f 	and	r4, r6, #15
40017820:	13a0800e 	movne	r8, #14
40017824:	03a0800d 	moveq	r8, #13
40017828:	15d1300d 	ldrbne	r3, [r1, #13]
4001782c:	11834404 	orrne	r4, r3, r4, lsl #8
40017830:	e3540000 	cmp	r4, #0
40017834:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
40017838:	e3a05000 	mov	r5, #0
4001783c:	e2066020 	and	r6, r6, #32
40017840:	e3550000 	cmp	r5, #0
40017844:	1a00000d 	bne	40017880 <RtpMidi::HandleRtpMidi(unsigned char const*)+0x78>
40017848:	e3560000 	cmp	r6, #0
4001784c:	1a00000b 	bne	40017880 <RtpMidi::HandleRtpMidi(unsigned char const*)+0x78>
40017850:	e1a02008 	mov	r2, r8
40017854:	e1a01004 	mov	r1, r4
40017858:	e1a00007 	mov	r0, r7
4001785c:	ebffff07 	bl	40017480 <RtpMidi::DecodeMidi(unsigned long, unsigned long)>
40017860:	e3500000 	cmp	r0, #0
40017864:	b8bd81f0 	poplt	{r4, r5, r6, r7, r8, pc}
40017868:	e0544000 	subs	r4, r4, r0
4001786c:	e2855001 	add	r5, r5, #1
40017870:	e0888000 	add	r8, r8, r0
40017874:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
40017878:	e3550000 	cmp	r5, #0
4001787c:	0afffff1 	beq	40017848 <RtpMidi::HandleRtpMidi(unsigned char const*)+0x40>
40017880:	e597c0e0 	ldr	ip, [r7, #224]	; 0xe0
40017884:	e3a03000 	mov	r3, #0
40017888:	e08cc008 	add	ip, ip, r8
4001788c:	e0dc20d1 	ldrsb	r2, [ip], #1
40017890:	e2833001 	add	r3, r3, #1
40017894:	e3520000 	cmp	r2, #0
40017898:	aa000001 	bge	400178a4 <RtpMidi::HandleRtpMidi(unsigned char const*)+0x9c>
4001789c:	e3530004 	cmp	r3, #4
400178a0:	1afffff9 	bne	4001788c <RtpMidi::HandleRtpMidi(unsigned char const*)+0x84>
400178a4:	e0544003 	subs	r4, r4, r3
400178a8:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
400178ac:	e0888003 	add	r8, r8, r3
400178b0:	eaffffe6 	b	40017850 <RtpMidi::HandleRtpMidi(unsigned char const*)+0x48>

400178b4 <RotaryEncoder::Process(unsigned char)>:
400178b4:	e5d02000 	ldrb	r2, [r0]
400178b8:	e2011003 	and	r1, r1, #3
400178bc:	e5d03001 	ldrb	r3, [r0, #1]
400178c0:	e3520000 	cmp	r2, #0
400178c4:	e203300f 	and	r3, r3, #15
400178c8:	159f2018 	ldrne	r2, [pc, #24]	; 400178e8 <RotaryEncoder::Process(unsigned char)+0x34>
400178cc:	059f2018 	ldreq	r2, [pc, #24]	; 400178ec <RotaryEncoder::Process(unsigned char)+0x38>
400178d0:	e1a03103 	lsl	r3, r3, #2
400178d4:	e0823003 	add	r3, r2, r3
400178d8:	e7d33001 	ldrb	r3, [r3, r1]
400178dc:	e5c03001 	strb	r3, [r0, #1]
400178e0:	e2030030 	and	r0, r3, #48	; 0x30
400178e4:	e12fff1e 	bx	lr
400178e8:	40031aec 	andmi	r1, r3, ip, ror #21
400178ec:	40031ad0 	ldrdmi	r1, [r3], -r0

400178f0 <lo_pattern_match>:
400178f0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400178f4:	e1a03001 	mov	r3, r1
400178f8:	e1a04000 	mov	r4, r0
400178fc:	e5d32000 	ldrb	r2, [r3]
40017900:	e5d4c000 	ldrb	ip, [r4]
40017904:	e3520000 	cmp	r2, #0
40017908:	e16f0f1c 	clz	r0, ip
4001790c:	e1a002a0 	lsr	r0, r0, #5
40017910:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
40017914:	e352002a 	cmp	r2, #42	; 0x2a
40017918:	03a00000 	moveq	r0, #0
4001791c:	12000001 	andne	r0, r0, #1
40017920:	e3500000 	cmp	r0, #0
40017924:	1a000031 	bne	400179f0 <lo_pattern_match+0x100>
40017928:	e352005b 	cmp	r2, #91	; 0x5b
4001792c:	e2835001 	add	r5, r3, #1
40017930:	0a00003b 	beq	40017a24 <lo_pattern_match+0x134>
40017934:	8a000006 	bhi	40017954 <lo_pattern_match+0x64>
40017938:	e352002a 	cmp	r2, #42	; 0x2a
4001793c:	0a000015 	beq	40017998 <lo_pattern_match+0xa8>
40017940:	e352003f 	cmp	r2, #63	; 0x3f
40017944:	0a000031 	beq	40017a10 <lo_pattern_match+0x120>
40017948:	e152000c 	cmp	r2, ip
4001794c:	0a000031 	beq	40017a18 <lo_pattern_match+0x128>
40017950:	ea000026 	b	400179f0 <lo_pattern_match+0x100>
40017954:	e352007b 	cmp	r2, #123	; 0x7b
40017958:	1afffffa 	bne	40017948 <lo_pattern_match+0x58>
4001795c:	e5d50000 	ldrb	r0, [r5]
40017960:	e1a06005 	mov	r6, r5
40017964:	e2857001 	add	r7, r5, #1
40017968:	e3500000 	cmp	r0, #0
4001796c:	1350007d 	cmpne	r0, #125	; 0x7d
40017970:	1a000067 	bne	40017b14 <lo_pattern_match+0x224>
40017974:	e3500000 	cmp	r0, #0
40017978:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
4001797c:	e2835002 	add	r5, r3, #2
40017980:	e1a00004 	mov	r0, r4
40017984:	e5d33001 	ldrb	r3, [r3, #1]
40017988:	e3530000 	cmp	r3, #0
4001798c:	1a000062 	bne	40017b1c <lo_pattern_match+0x22c>
40017990:	e1a04000 	mov	r4, r0
40017994:	ea00001f 	b	40017a18 <lo_pattern_match+0x128>
40017998:	e5d53000 	ldrb	r3, [r5]
4001799c:	e1a06005 	mov	r6, r5
400179a0:	e2855001 	add	r5, r5, #1
400179a4:	e353002a 	cmp	r3, #42	; 0x2a
400179a8:	0afffffa 	beq	40017998 <lo_pattern_match+0xa8>
400179ac:	e3530000 	cmp	r3, #0
400179b0:	0a000014 	beq	40017a08 <lo_pattern_match+0x118>
400179b4:	e20320df 	and	r2, r3, #223	; 0xdf
400179b8:	e352005b 	cmp	r2, #91	; 0x5b
400179bc:	1353003f 	cmpne	r3, #63	; 0x3f
400179c0:	0a000005 	beq	400179dc <lo_pattern_match+0xec>
400179c4:	e1a02004 	mov	r2, r4
400179c8:	e1a04002 	mov	r4, r2
400179cc:	e4d21001 	ldrb	r1, [r2], #1
400179d0:	e1530001 	cmp	r3, r1
400179d4:	13510000 	cmpne	r1, #0
400179d8:	1afffffa 	bne	400179c8 <lo_pattern_match+0xd8>
400179dc:	e1a00004 	mov	r0, r4
400179e0:	e2844001 	add	r4, r4, #1
400179e4:	e5d03000 	ldrb	r3, [r0]
400179e8:	e3530000 	cmp	r3, #0
400179ec:	1a000001 	bne	400179f8 <lo_pattern_match+0x108>
400179f0:	e3a00000 	mov	r0, #0
400179f4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400179f8:	e1a01006 	mov	r1, r6
400179fc:	ebffffbb 	bl	400178f0 <lo_pattern_match>
40017a00:	e3500000 	cmp	r0, #0
40017a04:	0afffff4 	beq	400179dc <lo_pattern_match+0xec>
40017a08:	e3a00001 	mov	r0, #1
40017a0c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40017a10:	e35c0000 	cmp	ip, #0
40017a14:	0afffff5 	beq	400179f0 <lo_pattern_match+0x100>
40017a18:	e2844001 	add	r4, r4, #1
40017a1c:	e1a03005 	mov	r3, r5
40017a20:	eaffffb5 	b	400178fc <lo_pattern_match+0xc>
40017a24:	e5d32001 	ldrb	r2, [r3, #1]
40017a28:	e3520021 	cmp	r2, #33	; 0x21
40017a2c:	02835002 	addeq	r5, r3, #2
40017a30:	03a0e001 	moveq	lr, #1
40017a34:	11a0e000 	movne	lr, r0
40017a38:	e2851002 	add	r1, r5, #2
40017a3c:	e5512002 	ldrb	r2, [r1, #-2]
40017a40:	e2415001 	sub	r5, r1, #1
40017a44:	e1a06001 	mov	r6, r1
40017a48:	e3520000 	cmp	r2, #0
40017a4c:	0a00001a 	beq	40017abc <lo_pattern_match+0x1cc>
40017a50:	e5510001 	ldrb	r0, [r1, #-1]
40017a54:	e3500000 	cmp	r0, #0
40017a58:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
40017a5c:	e350002d 	cmp	r0, #45	; 0x2d
40017a60:	1a00001e 	bne	40017ae0 <lo_pattern_match+0x1f0>
40017a64:	e5d10000 	ldrb	r0, [r1]
40017a68:	e3500000 	cmp	r0, #0
40017a6c:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
40017a70:	e350005d 	cmp	r0, #93	; 0x5d
40017a74:	0a00000c 	beq	40017aac <lo_pattern_match+0x1bc>
40017a78:	e152000c 	cmp	r2, ip
40017a7c:	1150000c 	cmpne	r0, ip
40017a80:	0a000021 	beq	40017b0c <lo_pattern_match+0x21c>
40017a84:	e150000c 	cmp	r0, ip
40017a88:	e2811002 	add	r1, r1, #2
40017a8c:	93a03000 	movls	r3, #0
40017a90:	83a03001 	movhi	r3, #1
40017a94:	e152000c 	cmp	r2, ip
40017a98:	23a03000 	movcs	r3, #0
40017a9c:	e3530000 	cmp	r3, #0
40017aa0:	0affffe5 	beq	40017a3c <lo_pattern_match+0x14c>
40017aa4:	e1a05006 	mov	r5, r6
40017aa8:	ea000015 	b	40017b04 <lo_pattern_match+0x214>
40017aac:	e152000c 	cmp	r2, ip
40017ab0:	e1a05001 	mov	r5, r1
40017ab4:	83a02000 	movhi	r2, #0
40017ab8:	93a02001 	movls	r2, #1
40017abc:	e15e0002 	cmp	lr, r2
40017ac0:	0affffca 	beq	400179f0 <lo_pattern_match+0x100>
40017ac4:	e4d50001 	ldrb	r0, [r5], #1
40017ac8:	e3500000 	cmp	r0, #0
40017acc:	1350005d 	cmpne	r0, #93	; 0x5d
40017ad0:	1afffffb 	bne	40017ac4 <lo_pattern_match+0x1d4>
40017ad4:	e3500000 	cmp	r0, #0
40017ad8:	1affffce 	bne	40017a18 <lo_pattern_match+0x128>
40017adc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40017ae0:	e350005d 	cmp	r0, #93	; 0x5d
40017ae4:	1a000003 	bne	40017af8 <lo_pattern_match+0x208>
40017ae8:	e042200c 	sub	r2, r2, ip
40017aec:	e16f2f12 	clz	r2, r2
40017af0:	e1a022a2 	lsr	r2, r2, #5
40017af4:	eafffff0 	b	40017abc <lo_pattern_match+0x1cc>
40017af8:	e152000c 	cmp	r2, ip
40017afc:	1150000c 	cmpne	r0, ip
40017b00:	1affffcc 	bne	40017a38 <lo_pattern_match+0x148>
40017b04:	e3a02001 	mov	r2, #1
40017b08:	eaffffeb 	b	40017abc <lo_pattern_match+0x1cc>
40017b0c:	e1a05001 	mov	r5, r1
40017b10:	eafffffb 	b	40017b04 <lo_pattern_match+0x214>
40017b14:	e1a05007 	mov	r5, r7
40017b18:	eaffff8f 	b	4001795c <lo_pattern_match+0x6c>
40017b1c:	e353002c 	cmp	r3, #44	; 0x2c
40017b20:	1a000008 	bne	40017b48 <lo_pattern_match+0x258>
40017b24:	e1a01007 	mov	r1, r7
40017b28:	ebffff70 	bl	400178f0 <lo_pattern_match>
40017b2c:	e3500000 	cmp	r0, #0
40017b30:	1affffb4 	bne	40017a08 <lo_pattern_match+0x118>
40017b34:	e4d53001 	ldrb	r3, [r5], #1
40017b38:	e3530000 	cmp	r3, #0
40017b3c:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
40017b40:	e1a02004 	mov	r2, r4
40017b44:	ea000010 	b	40017b8c <lo_pattern_match+0x29c>
40017b48:	e5d02000 	ldrb	r2, [r0]
40017b4c:	e353007d 	cmp	r3, #125	; 0x7d
40017b50:	1a000004 	bne	40017b68 <lo_pattern_match+0x278>
40017b54:	e5d53000 	ldrb	r3, [r5]
40017b58:	e1923003 	orrs	r3, r2, r3
40017b5c:	0affffa9 	beq	40017a08 <lo_pattern_match+0x118>
40017b60:	e2404001 	sub	r4, r0, #1
40017b64:	eaffffab 	b	40017a18 <lo_pattern_match+0x128>
40017b68:	e1530002 	cmp	r3, r2
40017b6c:	1a000009 	bne	40017b98 <lo_pattern_match+0x2a8>
40017b70:	e2802001 	add	r2, r0, #1
40017b74:	e5d00001 	ldrb	r0, [r0, #1]
40017b78:	e3500000 	cmp	r0, #0
40017b7c:	1a000002 	bne	40017b8c <lo_pattern_match+0x29c>
40017b80:	e5d63001 	ldrb	r3, [r6, #1]
40017b84:	e3530000 	cmp	r3, #0
40017b88:	18bd81f0 	popne	{r4, r5, r6, r7, r8, pc}
40017b8c:	e4d53001 	ldrb	r3, [r5], #1
40017b90:	e1a00002 	mov	r0, r2
40017b94:	eaffff7b 	b	40017988 <lo_pattern_match+0x98>
40017b98:	e1a02005 	mov	r2, r5
40017b9c:	e5d23000 	ldrb	r3, [r2]
40017ba0:	e1a05002 	mov	r5, r2
40017ba4:	e2822001 	add	r2, r2, #1
40017ba8:	e353002c 	cmp	r3, #44	; 0x2c
40017bac:	1353007d 	cmpne	r3, #125	; 0x7d
40017bb0:	13a00001 	movne	r0, #1
40017bb4:	03a00000 	moveq	r0, #0
40017bb8:	0a000002 	beq	40017bc8 <lo_pattern_match+0x2d8>
40017bbc:	e3530000 	cmp	r3, #0
40017bc0:	1afffff5 	bne	40017b9c <lo_pattern_match+0x2ac>
40017bc4:	eaffffdd 	b	40017b40 <lo_pattern_match+0x250>
40017bc8:	e353002c 	cmp	r3, #44	; 0x2c
40017bcc:	01a05002 	moveq	r5, r2
40017bd0:	0affffda 	beq	40017b40 <lo_pattern_match+0x250>
40017bd4:	e353007d 	cmp	r3, #125	; 0x7d
40017bd8:	1affffd8 	bne	40017b40 <lo_pattern_match+0x250>
40017bdc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

40017be0 <osc::string_validate(void const*, unsigned long)>:
40017be0:	e1a02000 	mov	r2, r0
40017be4:	e3a03000 	mov	r3, #0
40017be8:	e1530001 	cmp	r3, r1
40017bec:	0a000005 	beq	40017c08 <osc::string_validate(void const*, unsigned long)+0x28>
40017bf0:	e7d20003 	ldrb	r0, [r2, r3]
40017bf4:	e3500000 	cmp	r0, #0
40017bf8:	1a000004 	bne	40017c10 <osc::string_validate(void const*, unsigned long)+0x30>
40017bfc:	e3c30003 	bic	r0, r3, #3
40017c00:	e2900004 	adds	r0, r0, #4
40017c04:	1a000003 	bne	40017c18 <osc::string_validate(void const*, unsigned long)+0x38>
40017c08:	e3e00001 	mvn	r0, #1
40017c0c:	e12fff1e 	bx	lr
40017c10:	e2833001 	add	r3, r3, #1
40017c14:	eafffff3 	b	40017be8 <osc::string_validate(void const*, unsigned long)+0x8>
40017c18:	e1510000 	cmp	r1, r0
40017c1c:	3a000006 	bcc	40017c3c <osc::string_validate(void const*, unsigned long)+0x5c>
40017c20:	e1530000 	cmp	r3, r0
40017c24:	212fff1e 	bxcs	lr
40017c28:	e7d21003 	ldrb	r1, [r2, r3]
40017c2c:	e3510000 	cmp	r1, #0
40017c30:	1a000003 	bne	40017c44 <osc::string_validate(void const*, unsigned long)+0x64>
40017c34:	e2833001 	add	r3, r3, #1
40017c38:	eafffff8 	b	40017c20 <osc::string_validate(void const*, unsigned long)+0x40>
40017c3c:	e3e00000 	mvn	r0, #0
40017c40:	e12fff1e 	bx	lr
40017c44:	e3e00002 	mvn	r0, #2
40017c48:	e12fff1e 	bx	lr

40017c4c <OscSimpleMessage::OscSimpleMessage(unsigned char const*, unsigned long)>:
40017c4c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40017c50:	e3a03000 	mov	r3, #0
40017c54:	e580300c 	str	r3, [r0, #12]
40017c58:	e1a05001 	mov	r5, r1
40017c5c:	e8800006 	stm	r0, {r1, r2}
40017c60:	e5803010 	str	r3, [r0, #16]
40017c64:	e1a04000 	mov	r4, r0
40017c68:	e5803014 	str	r3, [r0, #20]
40017c6c:	e1a01002 	mov	r1, r2
40017c70:	e5c03018 	strb	r3, [r0, #24]
40017c74:	e1a00005 	mov	r0, r5
40017c78:	e1a07002 	mov	r7, r2
40017c7c:	ebffffd7 	bl	40017be0 <osc::string_validate(void const*, unsigned long)>
40017c80:	e2508000 	subs	r8, r0, #0
40017c84:	ba000021 	blt	40017d10 <OscSimpleMessage::OscSimpleMessage(unsigned char const*, unsigned long)+0xc4>
40017c88:	e0856008 	add	r6, r5, r8
40017c8c:	e0471008 	sub	r1, r7, r8
40017c90:	e1a00006 	mov	r0, r6
40017c94:	e5846008 	str	r6, [r4, #8]
40017c98:	ebffffd0 	bl	40017be0 <osc::string_validate(void const*, unsigned long)>
40017c9c:	e3500000 	cmp	r0, #0
40017ca0:	ba00001a 	blt	40017d10 <OscSimpleMessage::OscSimpleMessage(unsigned char const*, unsigned long)+0xc4>
40017ca4:	e7d53008 	ldrb	r3, [r5, r8]
40017ca8:	e353002c 	cmp	r3, #44	; 0x2c
40017cac:	1a000017 	bne	40017d10 <OscSimpleMessage::OscSimpleMessage(unsigned char const*, unsigned long)+0xc4>
40017cb0:	e5d63001 	ldrb	r3, [r6, #1]
40017cb4:	e3530062 	cmp	r3, #98	; 0x62
40017cb8:	13530073 	cmpne	r3, #115	; 0x73
40017cbc:	1a000002 	bne	40017ccc <OscSimpleMessage::OscSimpleMessage(unsigned char const*, unsigned long)+0x80>
40017cc0:	e5d63002 	ldrb	r3, [r6, #2]
40017cc4:	e3530000 	cmp	r3, #0
40017cc8:	1a000010 	bne	40017d10 <OscSimpleMessage::OscSimpleMessage(unsigned char const*, unsigned long)+0xc4>
40017ccc:	e2866001 	add	r6, r6, #1
40017cd0:	e5846008 	str	r6, [r4, #8]
40017cd4:	e1a02006 	mov	r2, r6
40017cd8:	e1a03002 	mov	r3, r2
40017cdc:	e2822001 	add	r2, r2, #1
40017ce0:	e5d31000 	ldrb	r1, [r3]
40017ce4:	e3510000 	cmp	r1, #0
40017ce8:	1afffffa 	bne	40017cd8 <OscSimpleMessage::OscSimpleMessage(unsigned char const*, unsigned long)+0x8c>
40017cec:	e0800008 	add	r0, r0, r8
40017cf0:	e0436006 	sub	r6, r3, r6
40017cf4:	e3a03001 	mov	r3, #1
40017cf8:	e0855000 	add	r5, r5, r0
40017cfc:	e0470000 	sub	r0, r7, r0
40017d00:	e584600c 	str	r6, [r4, #12]
40017d04:	e5845010 	str	r5, [r4, #16]
40017d08:	e5840014 	str	r0, [r4, #20]
40017d0c:	e5c43018 	strb	r3, [r4, #24]
40017d10:	e1a00004 	mov	r0, r4
40017d14:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

40017d18 <OscSimpleMessage::GetFloat(unsigned int)>:
40017d18:	e5903014 	ldr	r3, [r0, #20]
40017d1c:	e2812001 	add	r2, r1, #1
40017d20:	e1530102 	cmp	r3, r2, lsl #2
40017d24:	e1a0c102 	lsl	ip, r2, #2
40017d28:	3a000009 	bcc	40017d54 <OscSimpleMessage::GetFloat(unsigned int)+0x3c>
40017d2c:	e5903008 	ldr	r3, [r0, #8]
40017d30:	e7d33001 	ldrb	r3, [r3, r1]
40017d34:	e3530066 	cmp	r3, #102	; 0x66
40017d38:	1a000005 	bne	40017d54 <OscSimpleMessage::GetFloat(unsigned int)+0x3c>
40017d3c:	e5903010 	ldr	r3, [r0, #16]
40017d40:	e083300c 	add	r3, r3, ip
40017d44:	e5133004 	ldr	r3, [r3, #-4]
40017d48:	e6bf3f33 	rev	r3, r3
40017d4c:	ee003a10 	vmov	s0, r3
40017d50:	e12fff1e 	bx	lr
40017d54:	e3a03000 	mov	r3, #0
40017d58:	eafffffb 	b	40017d4c <OscSimpleMessage::GetFloat(unsigned int)+0x34>

40017d5c <OscSimpleMessage::GetInt(unsigned int)>:
40017d5c:	e5903014 	ldr	r3, [r0, #20]
40017d60:	e2812001 	add	r2, r1, #1
40017d64:	e1530102 	cmp	r3, r2, lsl #2
40017d68:	e1a0c102 	lsl	ip, r2, #2
40017d6c:	3a000008 	bcc	40017d94 <OscSimpleMessage::GetInt(unsigned int)+0x38>
40017d70:	e5903008 	ldr	r3, [r0, #8]
40017d74:	e7d33001 	ldrb	r3, [r3, r1]
40017d78:	e3530069 	cmp	r3, #105	; 0x69
40017d7c:	1a000004 	bne	40017d94 <OscSimpleMessage::GetInt(unsigned int)+0x38>
40017d80:	e5903010 	ldr	r3, [r0, #16]
40017d84:	e083300c 	add	r3, r3, ip
40017d88:	e5130004 	ldr	r0, [r3, #-4]
40017d8c:	e6bf0f30 	rev	r0, r0
40017d90:	e12fff1e 	bx	lr
40017d94:	e3a00000 	mov	r0, #0
40017d98:	e12fff1e 	bx	lr

40017d9c <OscSimpleMessage::GetString(unsigned int)>:
40017d9c:	e5903008 	ldr	r3, [r0, #8]
40017da0:	e5d33000 	ldrb	r3, [r3]
40017da4:	e3530073 	cmp	r3, #115	; 0x73
40017da8:	1a00000c 	bne	40017de0 <OscSimpleMessage::GetString(unsigned int)+0x44>
40017dac:	e1c001d0 	ldrd	r0, [r0, #16]
40017db0:	e1a02000 	mov	r2, r0
40017db4:	e1a03002 	mov	r3, r2
40017db8:	e2822001 	add	r2, r2, #1
40017dbc:	e5d3c000 	ldrb	ip, [r3]
40017dc0:	e35c0000 	cmp	ip, #0
40017dc4:	1afffffa 	bne	40017db4 <OscSimpleMessage::GetString(unsigned int)+0x18>
40017dc8:	e0433000 	sub	r3, r3, r0
40017dcc:	e3c33003 	bic	r3, r3, #3
40017dd0:	e2833004 	add	r3, r3, #4
40017dd4:	e1510003 	cmp	r1, r3
40017dd8:	13a00000 	movne	r0, #0
40017ddc:	e12fff1e 	bx	lr
40017de0:	e3a00000 	mov	r0, #0
40017de4:	e12fff1e 	bx	lr

40017de8 <WS28xxDisplay7Segment::WS28xxDisplay7Segment(pixel::Type, pixel::Map)>:
40017de8:	e92d4030 	push	{r4, r5, lr}
40017dec:	e3a03000 	mov	r3, #0
40017df0:	e5803000 	str	r3, [r0]
40017df4:	e24dd024 	sub	sp, sp, #36	; 0x24
40017df8:	e1a04000 	mov	r4, r0
40017dfc:	e3a00003 	mov	r0, #3
40017e00:	e58d000c 	str	r0, [sp, #12]
40017e04:	e59f004c 	ldr	r0, [pc, #76]	; 40017e58 <WS28xxDisplay7Segment::WS28xxDisplay7Segment(pixel::Type, pixel::Map)+0x70>
40017e08:	e58d3008 	str	r3, [sp, #8]
40017e0c:	e58d301c 	str	r3, [sp, #28]
40017e10:	e59f3044 	ldr	r3, [pc, #68]	; 40017e5c <WS28xxDisplay7Segment::WS28xxDisplay7Segment(pixel::Type, pixel::Map)+0x74>
40017e14:	e58d0018 	str	r0, [sp, #24]
40017e18:	e28d0004 	add	r0, sp, #4
40017e1c:	e5830000 	str	r0, [r3]
40017e20:	e3a0303e 	mov	r3, #62	; 0x3e
40017e24:	e58d1010 	str	r1, [sp, #16]
40017e28:	e3a0000c 	mov	r0, #12
40017e2c:	e58d2014 	str	r2, [sp, #20]
40017e30:	e58d3004 	str	r3, [sp, #4]
40017e34:	eb005567 	bl	4002d3d8 <operator new(unsigned int)>
40017e38:	e1a05000 	mov	r5, r0
40017e3c:	eb00026c 	bl	400187f4 <WS28xx::WS28xx()>
40017e40:	e5845000 	str	r5, [r4]
40017e44:	e1a00005 	mov	r0, r5
40017e48:	eb000332 	bl	40018b18 <WS28xx::Blackout()>
40017e4c:	e1a00004 	mov	r0, r4
40017e50:	e28dd024 	add	sp, sp, #36	; 0x24
40017e54:	e8bd8030 	pop	{r4, r5, pc}
40017e58:	ff000001 			; <UNDEFINED> instruction: 0xff000001
40017e5c:	40058964 	andmi	r8, r5, r4, ror #18

40017e60 <WS28xxDisplay7Segment::WriteColon(char, unsigned long, unsigned char, unsigned char, unsigned char)>:
40017e60:	e92d47f3 	push	{r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
40017e64:	e241903a 	sub	r9, r1, #58	; 0x3a
40017e68:	e5dd7028 	ldrb	r7, [sp, #40]	; 0x28
40017e6c:	e282401c 	add	r4, r2, #28
40017e70:	e351002e 	cmp	r1, #46	; 0x2e
40017e74:	13590001 	cmpne	r9, #1
40017e78:	e1a05000 	mov	r5, r0
40017e7c:	e1a04084 	lsl	r4, r4, #1
40017e80:	e1a06003 	mov	r6, r3
40017e84:	e5dd802c 	ldrb	r8, [sp, #44]	; 0x2c
40017e88:	e6ff4074 	uxth	r4, r4
40017e8c:	93a09001 	movls	r9, #1
40017e90:	83a09000 	movhi	r9, #0
40017e94:	eb004ee9 	bl	4002ba40 <h3_spi_dma_tx_is_active()>
40017e98:	e3500000 	cmp	r0, #0
40017e9c:	1afffffc 	bne	40017e94 <WS28xxDisplay7Segment::WriteColon(char, unsigned long, unsigned char, unsigned char, unsigned char)+0x34>
40017ea0:	e284a002 	add	sl, r4, #2
40017ea4:	e6ffa07a 	uxth	sl, sl
40017ea8:	e15a0004 	cmp	sl, r4
40017eac:	9a00000b 	bls	40017ee0 <WS28xxDisplay7Segment::WriteColon(char, unsigned long, unsigned char, unsigned char, unsigned char)+0x80>
40017eb0:	e5950000 	ldr	r0, [r5]
40017eb4:	e3590000 	cmp	r9, #0
40017eb8:	158d8000 	strne	r8, [sp]
40017ebc:	e1a01004 	mov	r1, r4
40017ec0:	058d9000 	streq	r9, [sp]
40017ec4:	11a03007 	movne	r3, r7
40017ec8:	11a02006 	movne	r2, r6
40017ecc:	01a03009 	moveq	r3, r9
40017ed0:	01a02009 	moveq	r2, r9
40017ed4:	e2844001 	add	r4, r4, #1
40017ed8:	eb0003b7 	bl	40018dbc <WS28xx::SetPixel(unsigned long, unsigned char, unsigned char, unsigned char)>
40017edc:	eafffff1 	b	40017ea8 <WS28xxDisplay7Segment::WriteColon(char, unsigned long, unsigned char, unsigned char, unsigned char)+0x48>
40017ee0:	e28dd008 	add	sp, sp, #8
40017ee4:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

40017ee8 <WS28xxDisplay7Segment::SetColonsOff()>:
40017ee8:	e92d4073 	push	{r0, r1, r4, r5, r6, lr}
40017eec:	e3a04000 	mov	r4, #0
40017ef0:	e1a05000 	mov	r5, r0
40017ef4:	e1a06004 	mov	r6, r4
40017ef8:	e58d6004 	str	r6, [sp, #4]
40017efc:	e1a02004 	mov	r2, r4
40017f00:	e58d6000 	str	r6, [sp]
40017f04:	e3a03000 	mov	r3, #0
40017f08:	e3a01020 	mov	r1, #32
40017f0c:	e1a00005 	mov	r0, r5
40017f10:	e2844001 	add	r4, r4, #1
40017f14:	ebffffd1 	bl	40017e60 <WS28xxDisplay7Segment::WriteColon(char, unsigned long, unsigned char, unsigned char, unsigned char)>
40017f18:	e3540003 	cmp	r4, #3
40017f1c:	1afffff5 	bne	40017ef8 <WS28xxDisplay7Segment::SetColonsOff()+0x10>
40017f20:	e28dd008 	add	sp, sp, #8
40017f24:	e8bd8070 	pop	{r4, r5, r6, pc}

40017f28 <WS28xxDisplay7Segment::RenderSegment(bool, unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)>:
40017f28:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
40017f2c:	e1a06000 	mov	r6, r0
40017f30:	e0824003 	add	r4, r2, r3
40017f34:	e1a05001 	mov	r5, r1
40017f38:	e5dd7020 	ldrb	r7, [sp, #32]
40017f3c:	e6ff4074 	uxth	r4, r4
40017f40:	e5dd8024 	ldrb	r8, [sp, #36]	; 0x24
40017f44:	e5dd9028 	ldrb	r9, [sp, #40]	; 0x28
40017f48:	eb004ebc 	bl	4002ba40 <h3_spi_dma_tx_is_active()>
40017f4c:	e3500000 	cmp	r0, #0
40017f50:	1afffffc 	bne	40017f48 <WS28xxDisplay7Segment::RenderSegment(bool, unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)+0x20>
40017f54:	e5960000 	ldr	r0, [r6]
40017f58:	e3550000 	cmp	r5, #0
40017f5c:	058d5020 	streq	r5, [sp, #32]
40017f60:	01a03005 	moveq	r3, r5
40017f64:	158d9020 	strne	r9, [sp, #32]
40017f68:	11a03008 	movne	r3, r8
40017f6c:	11a02007 	movne	r2, r7
40017f70:	e1a01004 	mov	r1, r4
40017f74:	01a02003 	moveq	r2, r3
40017f78:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
40017f7c:	ea00038e 	b	40018dbc <WS28xx::SetPixel(unsigned long, unsigned char, unsigned char, unsigned char)>

40017f80 <WS28xxDisplay7Segment::WriteChar(char, unsigned long, unsigned char, unsigned char, unsigned char)>:
40017f80:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
40017f84:	e3510080 	cmp	r1, #128	; 0x80
40017f88:	e24dd014 	sub	sp, sp, #20
40017f8c:	e5dd8030 	ldrb	r8, [sp, #48]	; 0x30
40017f90:	e5dd9034 	ldrb	r9, [sp, #52]	; 0x34
40017f94:	8a000036 	bhi	40018074 <WS28xxDisplay7Segment::WriteChar(char, unsigned long, unsigned char, unsigned char, unsigned char)+0xf4>
40017f98:	e3110080 	tst	r1, #128	; 0x80
40017f9c:	e1a06003 	mov	r6, r3
40017fa0:	e58d6000 	str	r6, [sp]
40017fa4:	13a07080 	movne	r7, #128	; 0x80
40017fa8:	059f30cc 	ldreq	r3, [pc, #204]	; 4001807c <WS28xxDisplay7Segment::WriteChar(char, unsigned long, unsigned char, unsigned char, unsigned char)+0xfc>
40017fac:	e1a05000 	mov	r5, r0
40017fb0:	e0624182 	rsb	r4, r2, r2, lsl #3
40017fb4:	07d37001 	ldrbeq	r7, [r3, r1]
40017fb8:	e1a02004 	mov	r2, r4
40017fbc:	e3a03000 	mov	r3, #0
40017fc0:	e7e01357 	ubfx	r1, r7, #6, #1
40017fc4:	e1cd80f4 	strd	r8, [sp, #4]
40017fc8:	ebffffd6 	bl	40017f28 <WS28xxDisplay7Segment::RenderSegment(bool, unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)>
40017fcc:	e7e012d7 	ubfx	r1, r7, #5, #1
40017fd0:	e3a03001 	mov	r3, #1
40017fd4:	e58d6000 	str	r6, [sp]
40017fd8:	e1a02004 	mov	r2, r4
40017fdc:	e1a00005 	mov	r0, r5
40017fe0:	e1cd80f4 	strd	r8, [sp, #4]
40017fe4:	ebffffcf 	bl	40017f28 <WS28xxDisplay7Segment::RenderSegment(bool, unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)>
40017fe8:	e7e01257 	ubfx	r1, r7, #4, #1
40017fec:	e3a03002 	mov	r3, #2
40017ff0:	e58d6000 	str	r6, [sp]
40017ff4:	e1a02004 	mov	r2, r4
40017ff8:	e1a00005 	mov	r0, r5
40017ffc:	e1cd80f4 	strd	r8, [sp, #4]
40018000:	ebffffc8 	bl	40017f28 <WS28xxDisplay7Segment::RenderSegment(bool, unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)>
40018004:	e7e011d7 	ubfx	r1, r7, #3, #1
40018008:	e3a03003 	mov	r3, #3
4001800c:	e58d6000 	str	r6, [sp]
40018010:	e1a02004 	mov	r2, r4
40018014:	e1a00005 	mov	r0, r5
40018018:	e1cd80f4 	strd	r8, [sp, #4]
4001801c:	ebffffc1 	bl	40017f28 <WS28xxDisplay7Segment::RenderSegment(bool, unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)>
40018020:	e7e01157 	ubfx	r1, r7, #2, #1
40018024:	e3a03004 	mov	r3, #4
40018028:	e58d6000 	str	r6, [sp]
4001802c:	e1a02004 	mov	r2, r4
40018030:	e1a00005 	mov	r0, r5
40018034:	e1cd80f4 	strd	r8, [sp, #4]
40018038:	ebffffba 	bl	40017f28 <WS28xxDisplay7Segment::RenderSegment(bool, unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)>
4001803c:	e7e010d7 	ubfx	r1, r7, #1, #1
40018040:	e3a03005 	mov	r3, #5
40018044:	e58d6000 	str	r6, [sp]
40018048:	e1a02004 	mov	r2, r4
4001804c:	e1a00005 	mov	r0, r5
40018050:	e1cd80f4 	strd	r8, [sp, #4]
40018054:	ebffffb3 	bl	40017f28 <WS28xxDisplay7Segment::RenderSegment(bool, unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)>
40018058:	e58d6000 	str	r6, [sp]
4001805c:	e3a03006 	mov	r3, #6
40018060:	e1a02004 	mov	r2, r4
40018064:	e2071001 	and	r1, r7, #1
40018068:	e1a00005 	mov	r0, r5
4001806c:	e1cd80f4 	strd	r8, [sp, #4]
40018070:	ebffffac 	bl	40017f28 <WS28xxDisplay7Segment::RenderSegment(bool, unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)>
40018074:	e28dd014 	add	sp, sp, #20
40018078:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
4001807c:	40031b04 	andmi	r1, r3, r4, lsl #22

40018080 <WS28xxDisplay7Segment::WriteAll(char const*, unsigned char, unsigned char, unsigned char)>:
40018080:	e92d43f7 	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
40018084:	e1a05000 	mov	r5, r0
40018088:	e5dd9028 	ldrb	r9, [sp, #40]	; 0x28
4001808c:	e1a06001 	mov	r6, r1
40018090:	e1a07002 	mov	r7, r2
40018094:	e1a08003 	mov	r8, r3
40018098:	e3a04000 	mov	r4, #0
4001809c:	e7d61004 	ldrb	r1, [r6, r4]
400180a0:	e1a02004 	mov	r2, r4
400180a4:	e1a03007 	mov	r3, r7
400180a8:	e1a00005 	mov	r0, r5
400180ac:	e2844001 	add	r4, r4, #1
400180b0:	e1cd80f0 	strd	r8, [sp]
400180b4:	ebffffb1 	bl	40017f80 <WS28xxDisplay7Segment::WriteChar(char, unsigned long, unsigned char, unsigned char, unsigned char)>
400180b8:	e3540008 	cmp	r4, #8
400180bc:	1afffff6 	bne	4001809c <WS28xxDisplay7Segment::WriteAll(char const*, unsigned char, unsigned char, unsigned char)+0x1c>
400180c0:	e28dd00c 	add	sp, sp, #12
400180c4:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}

400180c8 <WS28xxDisplay7Segment::Show()>:
400180c8:	e5900000 	ldr	r0, [r0]
400180cc:	ea00028e 	b	40018b0c <WS28xx::Update()>

400180d0 <WS28xxDisplayMatrix::PutChar(char, unsigned char, unsigned char, unsigned char)>:
400180d0:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
400180d4:	e24dd014 	sub	sp, sp, #20
400180d8:	e1a08001 	mov	r8, r1
400180dc:	e1a04000 	mov	r4, r0
400180e0:	e5ddb038 	ldrb	fp, [sp, #56]	; 0x38
400180e4:	e1a09002 	mov	r9, r2
400180e8:	e1a0a003 	mov	sl, r3
400180ec:	eb003652 	bl	40025a3c <cp437_font_size()>
400180f0:	e1580000 	cmp	r8, r0
400180f4:	23a08020 	movcs	r8, #32
400180f8:	eb004e50 	bl	4002ba40 <h3_spi_dma_tx_is_active()>
400180fc:	e2505000 	subs	r5, r0, #0
40018100:	1afffffc 	bne	400180f8 <WS28xxDisplayMatrix::PutChar(char, unsigned char, unsigned char, unsigned char)+0x28>
40018104:	e5943018 	ldr	r3, [r4, #24]
40018108:	e6bf8078 	sxth	r8, r8
4001810c:	e59f10f4 	ldr	r1, [pc, #244]	; 40018208 <WS28xxDisplayMatrix::PutChar(char, unsigned char, unsigned char, unsigned char)+0x138>
40018110:	e1a03303 	lsl	r3, r3, #6
40018114:	e0818188 	add	r8, r1, r8, lsl #3
40018118:	e6ff3073 	uxth	r3, r3
4001811c:	e58d3008 	str	r3, [sp, #8]
40018120:	e59d3008 	ldr	r3, [sp, #8]
40018124:	e3550007 	cmp	r5, #7
40018128:	e4d86001 	ldrb	r6, [r8], #1
4001812c:	e0833185 	add	r3, r3, r5, lsl #3
40018130:	e6ff3073 	uxth	r3, r3
40018134:	e58d300c 	str	r3, [sp, #12]
40018138:	1a000008 	bne	40018160 <WS28xxDisplayMatrix::PutChar(char, unsigned char, unsigned char, unsigned char)+0x90>
4001813c:	e5941018 	ldr	r1, [r4, #24]
40018140:	e5942020 	ldr	r2, [r4, #32]
40018144:	e0823101 	add	r3, r2, r1, lsl #2
40018148:	e7d22101 	ldrb	r2, [r2, r1, lsl #2]
4001814c:	e3520000 	cmp	r2, #0
40018150:	11a06002 	movne	r6, r2
40018154:	15d39001 	ldrbne	r9, [r3, #1]
40018158:	15d3a002 	ldrbne	sl, [r3, #2]
4001815c:	15d3b003 	ldrbne	fp, [r3, #3]
40018160:	e3150001 	tst	r5, #1
40018164:	0a000001 	beq	40018170 <WS28xxDisplayMatrix::PutChar(char, unsigned char, unsigned char, unsigned char)+0xa0>
40018168:	e6ff6f36 	rbit	r6, r6
4001816c:	e1a06c26 	lsr	r6, r6, #24
40018170:	e3a07000 	mov	r7, #0
40018174:	e59d300c 	ldr	r3, [sp, #12]
40018178:	e5940010 	ldr	r0, [r4, #16]
4001817c:	e0831007 	add	r1, r3, r7
40018180:	e1a03756 	asr	r3, r6, r7
40018184:	e6ff1071 	uxth	r1, r1
40018188:	e2133001 	ands	r3, r3, #1
4001818c:	e2877001 	add	r7, r7, #1
40018190:	158db000 	strne	fp, [sp]
40018194:	11a0300a 	movne	r3, sl
40018198:	058d3000 	streq	r3, [sp]
4001819c:	11a02009 	movne	r2, r9
400181a0:	01a02003 	moveq	r2, r3
400181a4:	eb000304 	bl	40018dbc <WS28xx::SetPixel(unsigned long, unsigned char, unsigned char, unsigned char)>
400181a8:	e3570008 	cmp	r7, #8
400181ac:	1afffff0 	bne	40018174 <WS28xxDisplayMatrix::PutChar(char, unsigned char, unsigned char, unsigned char)+0xa4>
400181b0:	e2855001 	add	r5, r5, #1
400181b4:	e3550008 	cmp	r5, #8
400181b8:	1affffd8 	bne	40018120 <WS28xxDisplayMatrix::PutChar(char, unsigned char, unsigned char, unsigned char)+0x50>
400181bc:	e5943018 	ldr	r3, [r4, #24]
400181c0:	e1d420ba 	ldrh	r2, [r4, #10]
400181c4:	e2833001 	add	r3, r3, #1
400181c8:	e1530002 	cmp	r3, r2
400181cc:	e5843018 	str	r3, [r4, #24]
400181d0:	1a000008 	bne	400181f8 <WS28xxDisplayMatrix::PutChar(char, unsigned char, unsigned char, unsigned char)+0x128>
400181d4:	e5d4301c 	ldrb	r3, [r4, #28]
400181d8:	e3a02000 	mov	r2, #0
400181dc:	e5d4100c 	ldrb	r1, [r4, #12]
400181e0:	e5842018 	str	r2, [r4, #24]
400181e4:	e2833001 	add	r3, r3, #1
400181e8:	e6ef3073 	uxtb	r3, r3
400181ec:	e1510003 	cmp	r1, r3
400181f0:	e5c4301c 	strb	r3, [r4, #28]
400181f4:	05c4201c 	strbeq	r2, [r4, #28]
400181f8:	e3a03001 	mov	r3, #1
400181fc:	e5c43014 	strb	r3, [r4, #20]
40018200:	e28dd014 	add	sp, sp, #20
40018204:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
40018208:	400336e4 	andmi	r3, r3, r4, ror #13

4001820c <WS28xxDisplayMatrix::Text(char const*, unsigned long, unsigned char, unsigned char, unsigned char)>:
4001820c:	e92d43f7 	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
40018210:	e1a06003 	mov	r6, r3
40018214:	e1d030ba 	ldrh	r3, [r0, #10]
40018218:	e1a05000 	mov	r5, r0
4001821c:	e5dd7028 	ldrb	r7, [sp, #40]	; 0x28
40018220:	e1a04001 	mov	r4, r1
40018224:	e5dd802c 	ldrb	r8, [sp, #44]	; 0x2c
40018228:	e1530002 	cmp	r3, r2
4001822c:	90819003 	addls	r9, r1, r3
40018230:	80819002 	addhi	r9, r1, r2
40018234:	e1540009 	cmp	r4, r9
40018238:	0a000006 	beq	40018258 <WS28xxDisplayMatrix::Text(char const*, unsigned long, unsigned char, unsigned char, unsigned char)+0x4c>
4001823c:	e58d8000 	str	r8, [sp]
40018240:	e1a03007 	mov	r3, r7
40018244:	e4d41001 	ldrb	r1, [r4], #1
40018248:	e1a02006 	mov	r2, r6
4001824c:	e1a00005 	mov	r0, r5
40018250:	ebffff9e 	bl	400180d0 <WS28xxDisplayMatrix::PutChar(char, unsigned char, unsigned char, unsigned char)>
40018254:	eafffff6 	b	40018234 <WS28xxDisplayMatrix::Text(char const*, unsigned long, unsigned char, unsigned char, unsigned char)+0x28>
40018258:	e28dd00c 	add	sp, sp, #12
4001825c:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}

40018260 <WS28xxDisplayMatrix::SetCursorPos(unsigned char, unsigned char)>:
40018260:	e1d030ba 	ldrh	r3, [r0, #10]
40018264:	e1510003 	cmp	r1, r3
40018268:	a12fff1e 	bxge	lr
4001826c:	e5d0300c 	ldrb	r3, [r0, #12]
40018270:	e1530002 	cmp	r3, r2
40018274:	85801018 	strhi	r1, [r0, #24]
40018278:	85c0201c 	strbhi	r2, [r0, #28]
4001827c:	e12fff1e 	bx	lr

40018280 <WS28xxDisplayMatrix::TextLine(unsigned char, char const*, unsigned long, unsigned char, unsigned char, unsigned char)>:
40018280:	e3510000 	cmp	r1, #0
40018284:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40018288:	e5dd6018 	ldrb	r6, [sp, #24]
4001828c:	e5dd701c 	ldrb	r7, [sp, #28]
40018290:	e5dd8020 	ldrb	r8, [sp, #32]
40018294:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
40018298:	e1a05003 	mov	r5, r3
4001829c:	e5d0300c 	ldrb	r3, [r0, #12]
400182a0:	e1530001 	cmp	r3, r1
400182a4:	38bd81f0 	popcc	{r4, r5, r6, r7, r8, pc}
400182a8:	e2411001 	sub	r1, r1, #1
400182ac:	e1a04002 	mov	r4, r2
400182b0:	e6ef2071 	uxtb	r2, r1
400182b4:	e3a01000 	mov	r1, #0
400182b8:	ebffffe8 	bl	40018260 <WS28xxDisplayMatrix::SetCursorPos(unsigned char, unsigned char)>
400182bc:	e58d801c 	str	r8, [sp, #28]
400182c0:	e1a03006 	mov	r3, r6
400182c4:	e58d7018 	str	r7, [sp, #24]
400182c8:	e1a02005 	mov	r2, r5
400182cc:	e1a01004 	mov	r1, r4
400182d0:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
400182d4:	eaffffcc 	b	4001820c <WS28xxDisplayMatrix::Text(char const*, unsigned long, unsigned char, unsigned char, unsigned char)>

400182d8 <WS28xxDisplayMatrix::Show()>:
400182d8:	e5d03014 	ldrb	r3, [r0, #20]
400182dc:	e3530000 	cmp	r3, #0
400182e0:	012fff1e 	bxeq	lr
400182e4:	e3a03000 	mov	r3, #0
400182e8:	e5c03014 	strb	r3, [r0, #20]
400182ec:	e5900010 	ldr	r0, [r0, #16]
400182f0:	ea000205 	b	40018b0c <WS28xx::Update()>

400182f4 <WS28xxDisplayMatrix::SetColon(char, unsigned long, unsigned char, unsigned char, unsigned char)>:
400182f4:	e1d0c0ba 	ldrh	ip, [r0, #10]
400182f8:	e15c0002 	cmp	ip, r2
400182fc:	912fff1e 	bxls	lr
40018300:	e5900020 	ldr	r0, [r0, #32]
40018304:	e351002e 	cmp	r1, #46	; 0x2e
40018308:	03a01060 	moveq	r1, #96	; 0x60
4001830c:	e080c102 	add	ip, r0, r2, lsl #2
40018310:	0a000002 	beq	40018320 <WS28xxDisplayMatrix::SetColon(char, unsigned long, unsigned char, unsigned char, unsigned char)+0x2c>
40018314:	e351003a 	cmp	r1, #58	; 0x3a
40018318:	03a01066 	moveq	r1, #102	; 0x66
4001831c:	13a01000 	movne	r1, #0
40018320:	e7c01102 	strb	r1, [r0, r2, lsl #2]
40018324:	e5cc3001 	strb	r3, [ip, #1]
40018328:	e5dd3004 	ldrb	r3, [sp, #4]
4001832c:	e5cc3003 	strb	r3, [ip, #3]
40018330:	e5dd3000 	ldrb	r3, [sp]
40018334:	e5cc3002 	strb	r3, [ip, #2]
40018338:	e12fff1e 	bx	lr

4001833c <WS28xxDisplayMatrix::SetColonsOff()>:
4001833c:	e3a03000 	mov	r3, #0
40018340:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40018344:	e1a02003 	mov	r2, r3
40018348:	e1d0e0ba 	ldrh	lr, [r0, #10]
4001834c:	e15e0003 	cmp	lr, r3
40018350:	949df004 	popls	{pc}		; (ldrls pc, [sp], #4)
40018354:	e590c020 	ldr	ip, [r0, #32]
40018358:	e08c1103 	add	r1, ip, r3, lsl #2
4001835c:	e7cc2103 	strb	r2, [ip, r3, lsl #2]
40018360:	e2833001 	add	r3, r3, #1
40018364:	e5c12001 	strb	r2, [r1, #1]
40018368:	e5c12002 	strb	r2, [r1, #2]
4001836c:	e5c12003 	strb	r2, [r1, #3]
40018370:	eafffff5 	b	4001834c <WS28xxDisplayMatrix::SetColonsOff()+0x10>

40018374 <WS28xxDisplayMatrix::WS28xxDisplayMatrix(unsigned char, unsigned char, pixel::Type, pixel::Map)>:
40018374:	e92d4070 	push	{r4, r5, r6, lr}
40018378:	e1a06003 	mov	r6, r3
4001837c:	e5c01000 	strb	r1, [r0]
40018380:	e2423008 	sub	r3, r2, #8
40018384:	e5c02001 	strb	r2, [r0, #1]
40018388:	e3a05000 	mov	r5, #0
4001838c:	e1a03083 	lsl	r3, r3, #1
40018390:	e24dd020 	sub	sp, sp, #32
40018394:	e5803004 	str	r3, [r0, #4]
40018398:	e1a04000 	mov	r4, r0
4001839c:	e1630281 	smulbb	r3, r1, r2
400183a0:	e1a011a1 	lsr	r1, r1, #3
400183a4:	e1c010ba 	strh	r1, [r0, #10]
400183a8:	e6ef3073 	uxtb	r3, r3
400183ac:	e1a021a2 	lsr	r2, r2, #3
400183b0:	e1c030b8 	strh	r3, [r0, #8]
400183b4:	e5c0200c 	strb	r2, [r0, #12]
400183b8:	e5805010 	str	r5, [r0, #16]
400183bc:	e5c05014 	strb	r5, [r0, #20]
400183c0:	e5805018 	str	r5, [r0, #24]
400183c4:	e5c0501c 	strb	r5, [r0, #28]
400183c8:	e5805020 	str	r5, [r0, #32]
400183cc:	e1a00101 	lsl	r0, r1, #2
400183d0:	eb005401 	bl	4002d3dc <operator new[](unsigned int)>
400183d4:	e5840020 	str	r0, [r4, #32]
400183d8:	e1a00004 	mov	r0, r4
400183dc:	ebffffd6 	bl	4001833c <WS28xxDisplayMatrix::SetColonsOff()>
400183e0:	e58d5008 	str	r5, [sp, #8]
400183e4:	e3a03003 	mov	r3, #3
400183e8:	e58d300c 	str	r3, [sp, #12]
400183ec:	e28d2004 	add	r2, sp, #4
400183f0:	e59f3050 	ldr	r3, [pc, #80]	; 40018448 <WS28xxDisplayMatrix::WS28xxDisplayMatrix(unsigned char, unsigned char, pixel::Type, pixel::Map)+0xd4>
400183f4:	e3a0000c 	mov	r0, #12
400183f8:	e58d501c 	str	r5, [sp, #28]
400183fc:	e58d3018 	str	r3, [sp, #24]
40018400:	e59f3044 	ldr	r3, [pc, #68]	; 4001844c <WS28xxDisplayMatrix::WS28xxDisplayMatrix(unsigned char, unsigned char, pixel::Type, pixel::Map)+0xd8>
40018404:	e58d6010 	str	r6, [sp, #16]
40018408:	e5832000 	str	r2, [r3]
4001840c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40018410:	e58d3014 	str	r3, [sp, #20]
40018414:	e1d430b8 	ldrh	r3, [r4, #8]
40018418:	e1530005 	cmp	r3, r5
4001841c:	03a030aa 	moveq	r3, #170	; 0xaa
40018420:	e58d3004 	str	r3, [sp, #4]
40018424:	eb0053eb 	bl	4002d3d8 <operator new(unsigned int)>
40018428:	e1a05000 	mov	r5, r0
4001842c:	eb0000f0 	bl	400187f4 <WS28xx::WS28xx()>
40018430:	e5845010 	str	r5, [r4, #16]
40018434:	e1a00005 	mov	r0, r5
40018438:	eb0001b6 	bl	40018b18 <WS28xx::Blackout()>
4001843c:	e1a00004 	mov	r0, r4
40018440:	e28dd020 	add	sp, sp, #32
40018444:	e8bd8070 	pop	{r4, r5, r6, pc}
40018448:	ff000001 			; <UNDEFINED> instruction: 0xff000001
4001844c:	40058964 	andmi	r8, r5, r4, ror #18

40018450 <pixel::pixel_get_type(pixel::Type)>:
40018450:	e350000d 	cmp	r0, #13
40018454:	d59f3008 	ldrle	r3, [pc, #8]	; 40018464 <pixel::pixel_get_type(pixel::Type)+0x14>
40018458:	d0830180 	addle	r0, r3, r0, lsl #3
4001845c:	c59f0004 	ldrgt	r0, [pc, #4]	; 40018468 <pixel::pixel_get_type(pixel::Type)+0x18>
40018460:	e12fff1e 	bx	lr
40018464:	40031ba4 	andmi	r1, r3, r4, lsr #23
40018468:	40031b84 	andmi	r1, r3, r4, lsl #23

4001846c <pixel::pixel_get_type(char const*)>:
4001846c:	e59f105c 	ldr	r1, [pc, #92]	; 400184d0 <pixel::pixel_get_type(char const*)+0x64>
40018470:	e1a0c000 	mov	ip, r0
40018474:	e3a00000 	mov	r0, #0
40018478:	e92d4070 	push	{r4, r5, r6, lr}
4001847c:	e24c4001 	sub	r4, ip, #1
40018480:	e241e001 	sub	lr, r1, #1
40018484:	e5f43001 	ldrb	r3, [r4, #1]!
40018488:	e2432041 	sub	r2, r3, #65	; 0x41
4001848c:	e1a05003 	mov	r5, r3
40018490:	e3520019 	cmp	r2, #25
40018494:	e5fe2001 	ldrb	r2, [lr, #1]!
40018498:	92835020 	addls	r5, r3, #32
4001849c:	e2426041 	sub	r6, r2, #65	; 0x41
400184a0:	e3560019 	cmp	r6, #25
400184a4:	92822020 	addls	r2, r2, #32
400184a8:	e1520005 	cmp	r2, r5
400184ac:	1a000002 	bne	400184bc <pixel::pixel_get_type(char const*)+0x50>
400184b0:	e3530000 	cmp	r3, #0
400184b4:	1afffff2 	bne	40018484 <pixel::pixel_get_type(char const*)+0x18>
400184b8:	e8bd8070 	pop	{r4, r5, r6, pc}
400184bc:	e2800001 	add	r0, r0, #1
400184c0:	e2811008 	add	r1, r1, #8
400184c4:	e350000e 	cmp	r0, #14
400184c8:	1affffeb 	bne	4001847c <pixel::pixel_get_type(char const*)+0x10>
400184cc:	e8bd8070 	pop	{r4, r5, r6, pc}
400184d0:	40031ba4 	andmi	r1, r3, r4, lsr #23

400184d4 <pixel::pixel_get_map(char const*)>:
400184d4:	e92d40f0 	push	{r4, r5, r6, r7, lr}
400184d8:	e1a0e000 	mov	lr, r0
400184dc:	e59f3060 	ldr	r3, [pc, #96]	; 40018544 <pixel::pixel_get_map(char const*)+0x70>
400184e0:	e3a00000 	mov	r0, #0
400184e4:	e243c001 	sub	ip, r3, #1
400184e8:	e24e4001 	sub	r4, lr, #1
400184ec:	e2836002 	add	r6, r3, #2
400184f0:	e5fc2001 	ldrb	r2, [ip, #1]!
400184f4:	e2421041 	sub	r1, r2, #65	; 0x41
400184f8:	e1a05002 	mov	r5, r2
400184fc:	e3510019 	cmp	r1, #25
40018500:	e5f41001 	ldrb	r1, [r4, #1]!
40018504:	92825020 	addls	r5, r2, #32
40018508:	e2417041 	sub	r7, r1, #65	; 0x41
4001850c:	e3570019 	cmp	r7, #25
40018510:	92811020 	addls	r1, r1, #32
40018514:	e1510005 	cmp	r1, r5
40018518:	0a000004 	beq	40018530 <pixel::pixel_get_map(char const*)+0x5c>
4001851c:	e2800001 	add	r0, r0, #1
40018520:	e2833004 	add	r3, r3, #4
40018524:	e3500006 	cmp	r0, #6
40018528:	1affffed 	bne	400184e4 <pixel::pixel_get_map(char const*)+0x10>
4001852c:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
40018530:	e3520000 	cmp	r2, #0
40018534:	08bd80f0 	popeq	{r4, r5, r6, r7, pc}
40018538:	e156000c 	cmp	r6, ip
4001853c:	1affffeb 	bne	400184f0 <pixel::pixel_get_map(char const*)+0x1c>
40018540:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
40018544:	40031b8c 	andmi	r1, r3, ip, lsl #23

40018548 <pixel::pixel_get_map(pixel::Map)>:
40018548:	e3500005 	cmp	r0, #5
4001854c:	d59f3008 	ldrle	r3, [pc, #8]	; 4001855c <pixel::pixel_get_map(pixel::Map)+0x14>
40018550:	d0830100 	addle	r0, r3, r0, lsl #2
40018554:	c59f0004 	ldrgt	r0, [pc, #4]	; 40018560 <pixel::pixel_get_map(pixel::Map)+0x18>
40018558:	e12fff1e 	bx	lr
4001855c:	40031b8c 	andmi	r1, r3, ip, lsl #23
40018560:	40030e9e 	mulmi	r3, lr, lr

40018564 <WS28xx::SetupBuffers()>:
40018564:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40018568:	e24dd010 	sub	sp, sp, #16
4001856c:	e1a04000 	mov	r4, r0
40018570:	e28d000c 	add	r0, sp, #12
40018574:	eb004d42 	bl	4002ba84 <h3_spi_dma_tx_prepare(unsigned long*)>
40018578:	e59d300c 	ldr	r3, [sp, #12]
4001857c:	e3082964 	movw	r2, #35172	; 0x8964
40018580:	e3442005 	movt	r2, #16389	; 0x4005
40018584:	e1a030a3 	lsr	r3, r3, #1
40018588:	e5922000 	ldr	r2, [r2]
4001858c:	e3c33003 	bic	r3, r3, #3
40018590:	e592100c 	ldr	r1, [r2, #12]
40018594:	e0803003 	add	r3, r0, r3
40018598:	e241700b 	sub	r7, r1, #11
4001859c:	e3570002 	cmp	r7, #2
400185a0:	e9840009 	stmib	r4, {r0, r3}
400185a4:	8a000085 	bhi	400187c0 <WS28xx::SetupBuffers()+0x25c>
400185a8:	e5928000 	ldr	r8, [r2]
400185ac:	e3a05000 	mov	r5, #0
400185b0:	e5805000 	str	r5, [r0]
400185b4:	e1580005 	cmp	r8, r5
400185b8:	0a000071 	beq	40018784 <WS28xx::SetupBuffers()+0x220>
400185bc:	e2183007 	ands	r3, r8, #7
400185c0:	e1a06005 	mov	r6, r5
400185c4:	0a00003e 	beq	400186c4 <WS28xx::SetupBuffers()+0x160>
400185c8:	e3530001 	cmp	r3, #1
400185cc:	0a000033 	beq	400186a0 <WS28xx::SetupBuffers()+0x13c>
400185d0:	e3530002 	cmp	r3, #2
400185d4:	0a00002a 	beq	40018684 <WS28xx::SetupBuffers()+0x120>
400185d8:	e3530003 	cmp	r3, #3
400185dc:	0a000021 	beq	40018668 <WS28xx::SetupBuffers()+0x104>
400185e0:	e3530004 	cmp	r3, #4
400185e4:	0a000018 	beq	4001864c <WS28xx::SetupBuffers()+0xe8>
400185e8:	e3530005 	cmp	r3, #5
400185ec:	0a00000f 	beq	40018630 <WS28xx::SetupBuffers()+0xcc>
400185f0:	e3530006 	cmp	r3, #6
400185f4:	0a000006 	beq	40018614 <WS28xx::SetupBuffers()+0xb0>
400185f8:	e58d5000 	str	r5, [sp]
400185fc:	e1a03005 	mov	r3, r5
40018600:	e1a02005 	mov	r2, r5
40018604:	e1a01005 	mov	r1, r5
40018608:	e1a00004 	mov	r0, r4
4001860c:	e3a05001 	mov	r5, #1
40018610:	eb0001e9 	bl	40018dbc <WS28xx::SetPixel(unsigned long, unsigned char, unsigned char, unsigned char)>
40018614:	e58d6000 	str	r6, [sp]
40018618:	e3a03000 	mov	r3, #0
4001861c:	e1a01005 	mov	r1, r5
40018620:	e1a02003 	mov	r2, r3
40018624:	e1a00004 	mov	r0, r4
40018628:	e2855001 	add	r5, r5, #1
4001862c:	eb0001e2 	bl	40018dbc <WS28xx::SetPixel(unsigned long, unsigned char, unsigned char, unsigned char)>
40018630:	e58d6000 	str	r6, [sp]
40018634:	e3a03000 	mov	r3, #0
40018638:	e1a01005 	mov	r1, r5
4001863c:	e1a02003 	mov	r2, r3
40018640:	e1a00004 	mov	r0, r4
40018644:	e2855001 	add	r5, r5, #1
40018648:	eb0001db 	bl	40018dbc <WS28xx::SetPixel(unsigned long, unsigned char, unsigned char, unsigned char)>
4001864c:	e58d6000 	str	r6, [sp]
40018650:	e3a03000 	mov	r3, #0
40018654:	e1a01005 	mov	r1, r5
40018658:	e1a02003 	mov	r2, r3
4001865c:	e1a00004 	mov	r0, r4
40018660:	e2855001 	add	r5, r5, #1
40018664:	eb0001d4 	bl	40018dbc <WS28xx::SetPixel(unsigned long, unsigned char, unsigned char, unsigned char)>
40018668:	e58d6000 	str	r6, [sp]
4001866c:	e3a03000 	mov	r3, #0
40018670:	e1a01005 	mov	r1, r5
40018674:	e1a02003 	mov	r2, r3
40018678:	e1a00004 	mov	r0, r4
4001867c:	e2855001 	add	r5, r5, #1
40018680:	eb0001cd 	bl	40018dbc <WS28xx::SetPixel(unsigned long, unsigned char, unsigned char, unsigned char)>
40018684:	e58d6000 	str	r6, [sp]
40018688:	e3a03000 	mov	r3, #0
4001868c:	e1a01005 	mov	r1, r5
40018690:	e1a02003 	mov	r2, r3
40018694:	e1a00004 	mov	r0, r4
40018698:	e2855001 	add	r5, r5, #1
4001869c:	eb0001c6 	bl	40018dbc <WS28xx::SetPixel(unsigned long, unsigned char, unsigned char, unsigned char)>
400186a0:	e58d6000 	str	r6, [sp]
400186a4:	e1a01005 	mov	r1, r5
400186a8:	e3a03000 	mov	r3, #0
400186ac:	e2855001 	add	r5, r5, #1
400186b0:	e1a02003 	mov	r2, r3
400186b4:	e1a00004 	mov	r0, r4
400186b8:	eb0001bf 	bl	40018dbc <WS28xx::SetPixel(unsigned long, unsigned char, unsigned char, unsigned char)>
400186bc:	e1580005 	cmp	r8, r5
400186c0:	0a00002f 	beq	40018784 <WS28xx::SetupBuffers()+0x220>
400186c4:	e58d6000 	str	r6, [sp]
400186c8:	e3a03000 	mov	r3, #0
400186cc:	e1a02003 	mov	r2, r3
400186d0:	e1a01005 	mov	r1, r5
400186d4:	e1a00004 	mov	r0, r4
400186d8:	e2855001 	add	r5, r5, #1
400186dc:	eb0001b6 	bl	40018dbc <WS28xx::SetPixel(unsigned long, unsigned char, unsigned char, unsigned char)>
400186e0:	e58d6000 	str	r6, [sp]
400186e4:	e3a03000 	mov	r3, #0
400186e8:	e1a01005 	mov	r1, r5
400186ec:	e1a02003 	mov	r2, r3
400186f0:	e1a00004 	mov	r0, r4
400186f4:	eb0001b0 	bl	40018dbc <WS28xx::SetPixel(unsigned long, unsigned char, unsigned char, unsigned char)>
400186f8:	e58d6000 	str	r6, [sp]
400186fc:	e3a03000 	mov	r3, #0
40018700:	e2851001 	add	r1, r5, #1
40018704:	e1a02003 	mov	r2, r3
40018708:	e1a00004 	mov	r0, r4
4001870c:	eb0001aa 	bl	40018dbc <WS28xx::SetPixel(unsigned long, unsigned char, unsigned char, unsigned char)>
40018710:	e58d6000 	str	r6, [sp]
40018714:	e3a03000 	mov	r3, #0
40018718:	e2851002 	add	r1, r5, #2
4001871c:	e1a02003 	mov	r2, r3
40018720:	e1a00004 	mov	r0, r4
40018724:	eb0001a4 	bl	40018dbc <WS28xx::SetPixel(unsigned long, unsigned char, unsigned char, unsigned char)>
40018728:	e58d6000 	str	r6, [sp]
4001872c:	e3a03000 	mov	r3, #0
40018730:	e2851003 	add	r1, r5, #3
40018734:	e1a02003 	mov	r2, r3
40018738:	e1a00004 	mov	r0, r4
4001873c:	eb00019e 	bl	40018dbc <WS28xx::SetPixel(unsigned long, unsigned char, unsigned char, unsigned char)>
40018740:	e58d6000 	str	r6, [sp]
40018744:	e3a03000 	mov	r3, #0
40018748:	e2851004 	add	r1, r5, #4
4001874c:	e1a02003 	mov	r2, r3
40018750:	e1a00004 	mov	r0, r4
40018754:	eb000198 	bl	40018dbc <WS28xx::SetPixel(unsigned long, unsigned char, unsigned char, unsigned char)>
40018758:	e58d6000 	str	r6, [sp]
4001875c:	e3a03000 	mov	r3, #0
40018760:	e2851005 	add	r1, r5, #5
40018764:	e1a02003 	mov	r2, r3
40018768:	e1a00004 	mov	r0, r4
4001876c:	eb000192 	bl	40018dbc <WS28xx::SetPixel(unsigned long, unsigned char, unsigned char, unsigned char)>
40018770:	e58d6000 	str	r6, [sp]
40018774:	e2851006 	add	r1, r5, #6
40018778:	e3a03000 	mov	r3, #0
4001877c:	e2855007 	add	r5, r5, #7
40018780:	eaffffca 	b	400186b0 <WS28xx::SetupBuffers()+0x14c>
40018784:	e5943000 	ldr	r3, [r4]
40018788:	e3570002 	cmp	r7, #2
4001878c:	e5942004 	ldr	r2, [r4, #4]
40018790:	13e01000 	mvnne	r1, #0
40018794:	e2433004 	sub	r3, r3, #4
40018798:	0a000013 	beq	400187ec <WS28xx::SetupBuffers()+0x288>
4001879c:	e7821003 	str	r1, [r2, r3]
400187a0:	e5942000 	ldr	r2, [r4]
400187a4:	e5940008 	ldr	r0, [r4, #8]
400187a8:	e5941004 	ldr	r1, [r4, #4]
400187ac:	e3520000 	cmp	r2, #0
400187b0:	0a000000 	beq	400187b8 <WS28xx::SetupBuffers()+0x254>
400187b4:	ebfff322 	bl	40015444 <memcpy>
400187b8:	e28dd010 	add	sp, sp, #16
400187bc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400187c0:	e3a03000 	mov	r3, #0
400187c4:	e1510003 	cmp	r1, r3
400187c8:	e5c03000 	strb	r3, [r0]
400187cc:	15d21015 	ldrbne	r1, [r2, #21]
400187d0:	e5942000 	ldr	r2, [r4]
400187d4:	e5940004 	ldr	r0, [r4, #4]
400187d8:	e3520000 	cmp	r2, #0
400187dc:	e2800001 	add	r0, r0, #1
400187e0:	0afffff4 	beq	400187b8 <WS28xx::SetupBuffers()+0x254>
400187e4:	eb004e8a 	bl	4002c214 <memset>
400187e8:	eaffffec 	b	400187a0 <WS28xx::SetupBuffers()+0x23c>
400187ec:	e3a01000 	mov	r1, #0
400187f0:	eaffffe9 	b	4001879c <WS28xx::SetupBuffers()+0x238>

400187f4 <WS28xx::WS28xx()>:
400187f4:	e3083964 	movw	r3, #35172	; 0x8964
400187f8:	e2802004 	add	r2, r0, #4
400187fc:	e3443005 	movt	r3, #16389	; 0x4005
40018800:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40018804:	e1a05000 	mov	r5, r0
40018808:	e5934000 	ldr	r4, [r3]
4001880c:	e3083968 	movw	r3, #35176	; 0x8968
40018810:	f2c00010 	vmov.i32	d16, #0	; 0x00000000
40018814:	e594e00c 	ldr	lr, [r4, #12]
40018818:	e3443005 	movt	r3, #16389	; 0x4005
4001881c:	e35e0007 	cmp	lr, #7
40018820:	e5830000 	str	r0, [r3]
40018824:	e24e000b 	sub	r0, lr, #11
40018828:	f442078f 	vst1.32	{d16}, [r2]
4001882c:	e5943000 	ldr	r3, [r4]
40018830:	e1a0200e 	mov	r2, lr
40018834:	0a00004c 	beq	4001896c <WS28xx::WS28xx()+0x178>
40018838:	e3530faa 	cmp	r3, #680	; 0x2a8
4001883c:	31a0c003 	movcc	ip, r3
40018840:	23a0cfaa 	movcs	ip, #680	; 0x2a8
40018844:	e584c000 	str	ip, [r4]
40018848:	e3500001 	cmp	r0, #1
4001884c:	e3a03003 	mov	r3, #3
40018850:	e5843008 	str	r3, [r4, #8]
40018854:	8a000016 	bhi	400188b4 <WS28xx::WS28xx()+0xc0>
40018858:	e5d43017 	ldrb	r3, [r4, #23]
4001885c:	e353001f 	cmp	r3, #31
40018860:	91e03d83 	mvnls	r3, r3, lsl #27
40018864:	83e03000 	mvnhi	r3, #0
40018868:	91e03da3 	mvnls	r3, r3, lsr #27
4001886c:	e5c43017 	strb	r3, [r4, #23]
40018870:	e3a03003 	mov	r3, #3
40018874:	e5942010 	ldr	r2, [r4, #16]
40018878:	e3520006 	cmp	r2, #6
4001887c:	e3a02000 	mov	r2, #0
40018880:	e5c42014 	strb	r2, [r4, #20]
40018884:	15942004 	ldrne	r2, [r4, #4]
40018888:	0a000017 	beq	400188ec <WS28xx::WS28xx()+0xf8>
4001888c:	e3520000 	cmp	r2, #0
40018890:	0a00001d 	beq	4001890c <WS28xx::WS28xx()+0x118>
40018894:	e3071840 	movw	r1, #30784	; 0x7840
40018898:	e340117d 	movt	r1, #381	; 0x17d
4001889c:	e1520001 	cmp	r2, r1
400188a0:	9a00005a 	bls	40018a10 <WS28xx::WS28xx()+0x21c>
400188a4:	e0030c93 	mul	r3, r3, ip
400188a8:	e5841004 	str	r1, [r4, #4]
400188ac:	e3a02000 	mov	r2, #0
400188b0:	ea000020 	b	40018938 <WS28xx::WS28xx()+0x144>
400188b4:	e35e0000 	cmp	lr, #0
400188b8:	13500002 	cmpne	r0, #2
400188bc:	e24e100d 	sub	r1, lr, #13
400188c0:	e16f1f11 	clz	r1, r1
400188c4:	93a07001 	movls	r7, #1
400188c8:	83a07000 	movhi	r7, #0
400188cc:	e1a012a1 	lsr	r1, r1, #5
400188d0:	8a000055 	bhi	40018a2c <WS28xx::WS28xx()+0x238>
400188d4:	e5942010 	ldr	r2, [r4, #16]
400188d8:	e3520006 	cmp	r2, #6
400188dc:	e3a02000 	mov	r2, #0
400188e0:	e5c42014 	strb	r2, [r4, #20]
400188e4:	1a000003 	bne	400188f8 <WS28xx::WS28xx()+0x104>
400188e8:	ea000000 	b	400188f0 <WS28xx::WS28xx()+0xfc>
400188ec:	e1a01002 	mov	r1, r2
400188f0:	e3a02000 	mov	r2, #0
400188f4:	e5842010 	str	r2, [r4, #16]
400188f8:	e5942004 	ldr	r2, [r4, #4]
400188fc:	e3510000 	cmp	r1, #0
40018900:	0affffe1 	beq	4001888c <WS28xx::WS28xx()+0x98>
40018904:	e3520000 	cmp	r2, #0
40018908:	1a000044 	bne	40018a20 <WS28xx::WS28xx()+0x22c>
4001890c:	e3a02c09 	mov	r2, #2304	; 0x900
40018910:	e340203d 	movt	r2, #61	; 0x3d
40018914:	e5842004 	str	r2, [r4, #4]
40018918:	e3a02002 	mov	r2, #2
4001891c:	e0030c93 	mul	r3, r3, ip
40018920:	e0020392 	mul	r2, r2, r3
40018924:	e3520000 	cmp	r2, #0
40018928:	0affffdf 	beq	400188ac <WS28xx::WS28xx()+0xb8>
4001892c:	e3041240 	movw	r1, #16960	; 0x4240
40018930:	e340100f 	movt	r1, #15
40018934:	e732f211 	udiv	r2, r1, r2
40018938:	e5842018 	str	r2, [r4, #24]
4001893c:	e5853000 	str	r3, [r5]
40018940:	e3500002 	cmp	r0, #2
40018944:	928cc008 	addls	ip, ip, #8
40018948:	908c3003 	addls	r3, ip, r3
4001894c:	95853000 	strls	r3, [r5]
40018950:	e1a00005 	mov	r0, r5
40018954:	ebffff02 	bl	40018564 <WS28xx::SetupBuffers()>
40018958:	ebffa16f 	bl	40000f1c <h3_spi_begin()>
4001895c:	e5940004 	ldr	r0, [r4, #4]
40018960:	eb004ba9 	bl	4002b80c <h3_spi_set_speed_hz(unsigned long)>
40018964:	e1a00005 	mov	r0, r5
40018968:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001896c:	e3530c02 	cmp	r3, #512	; 0x200
40018970:	31a0c003 	movcc	ip, r3
40018974:	23a0cc02 	movcs	ip, #512	; 0x200
40018978:	e584c000 	str	ip, [r4]
4001897c:	e3500002 	cmp	r0, #2
40018980:	e3a03004 	mov	r3, #4
40018984:	e5843008 	str	r3, [r4, #8]
40018988:	9affffb9 	bls	40018874 <WS28xx::WS28xx()+0x80>
4001898c:	e5941010 	ldr	r1, [r4, #16]
40018990:	e3a06001 	mov	r6, #1
40018994:	e5c46014 	strb	r6, [r4, #20]
40018998:	e3510006 	cmp	r1, #6
4001899c:	0a000049 	beq	40018ac8 <WS28xx::WS28xx()+0x2d4>
400189a0:	e5d41015 	ldrb	r1, [r4, #21]
400189a4:	e5d46016 	ldrb	r6, [r4, #22]
400189a8:	e1510006 	cmp	r1, r6
400189ac:	3a000031 	bcc	40018a78 <WS28xx::WS28xx()+0x284>
400189b0:	e35e0003 	cmp	lr, #3
400189b4:	e3a01000 	mov	r1, #0
400189b8:	e1c411b5 	strh	r1, [r4, #21]
400189bc:	0a000029 	beq	40018a68 <WS28xx::WS28xx()+0x274>
400189c0:	e2422008 	sub	r2, r2, #8
400189c4:	e3520002 	cmp	r2, #2
400189c8:	e3e0203f 	mvn	r2, #63	; 0x3f
400189cc:	e5c42015 	strb	r2, [r4, #21]
400189d0:	83a020f0 	movhi	r2, #240	; 0xf0
400189d4:	9a000033 	bls	40018aa8 <WS28xx::WS28xx()+0x2b4>
400189d8:	e5c42016 	strb	r2, [r4, #22]
400189dc:	e0010c93 	mul	r1, r3, ip
400189e0:	e3a0200a 	mov	r2, #10
400189e4:	e00e0192 	mul	lr, r2, r1
400189e8:	e1a01181 	lsl	r1, r1, #3
400189ec:	e3042240 	movw	r2, #16960	; 0x4240
400189f0:	e340200f 	movt	r2, #15
400189f4:	e2813001 	add	r3, r1, #1
400189f8:	e732fe12 	udiv	r2, r2, lr
400189fc:	e5842018 	str	r2, [r4, #24]
40018a00:	e3a02b2a 	mov	r2, #43008	; 0xa800
40018a04:	e3402061 	movt	r2, #97	; 0x61
40018a08:	e5842004 	str	r2, [r4, #4]
40018a0c:	eaffffca 	b	4001893c <WS28xx::WS28xx()+0x148>
40018a10:	e3a01c12 	mov	r1, #4608	; 0x1200
40018a14:	e340107a 	movt	r1, #122	; 0x7a
40018a18:	e732f211 	udiv	r2, r1, r2
40018a1c:	eaffffbe 	b	4001891c <WS28xx::WS28xx()+0x128>
40018a20:	e30e11c0 	movw	r1, #57792	; 0xe1c0
40018a24:	e34010e4 	movt	r1, #228	; 0xe4
40018a28:	eaffff9b 	b	4001889c <WS28xx::WS28xx()+0xa8>
40018a2c:	e5941010 	ldr	r1, [r4, #16]
40018a30:	e35e000e 	cmp	lr, #14
40018a34:	e3a06001 	mov	r6, #1
40018a38:	e5c46014 	strb	r6, [r4, #20]
40018a3c:	1affffd5 	bne	40018998 <WS28xx::WS28xx()+0x1a4>
40018a40:	e584300c 	str	r3, [r4, #12]
40018a44:	e3510006 	cmp	r1, #6
40018a48:	0a000018 	beq	40018ab0 <WS28xx::WS28xx()+0x2bc>
40018a4c:	e5d41015 	ldrb	r1, [r4, #21]
40018a50:	e5d46016 	ldrb	r6, [r4, #22]
40018a54:	e1510006 	cmp	r1, r6
40018a58:	33e00007 	mvncc	r0, #7
40018a5c:	3a000025 	bcc	40018af8 <WS28xx::WS28xx()+0x304>
40018a60:	e1c471b5 	strh	r7, [r4, #21]
40018a64:	e3e00007 	mvn	r0, #7
40018a68:	e3e0203f 	mvn	r2, #63	; 0x3f
40018a6c:	e5c42015 	strb	r2, [r4, #21]
40018a70:	e3a020f8 	mov	r2, #248	; 0xf8
40018a74:	eaffffd7 	b	400189d8 <WS28xx::WS28xx()+0x1e4>
40018a78:	e35e0003 	cmp	lr, #3
40018a7c:	0a00001d 	beq	40018af8 <WS28xx::WS28xx()+0x304>
40018a80:	e2422008 	sub	r2, r2, #8
40018a84:	e3520003 	cmp	r2, #3
40018a88:	33a020fc 	movcc	r2, #252	; 0xfc
40018a8c:	23a020f0 	movcs	r2, #240	; 0xf0
40018a90:	e3510000 	cmp	r1, #0
40018a94:	03e0103f 	mvneq	r1, #63	; 0x3f
40018a98:	05c41015 	strbeq	r1, [r4, #21]
40018a9c:	e3560000 	cmp	r6, #0
40018aa0:	1affffcd 	bne	400189dc <WS28xx::WS28xx()+0x1e8>
40018aa4:	eaffffcb 	b	400189d8 <WS28xx::WS28xx()+0x1e4>
40018aa8:	e3a020fc 	mov	r2, #252	; 0xfc
40018aac:	eaffffc9 	b	400189d8 <WS28xx::WS28xx()+0x1e4>
40018ab0:	e3e00007 	mvn	r0, #7
40018ab4:	e1a02003 	mov	r2, r3
40018ab8:	e1a0e003 	mov	lr, r3
40018abc:	e3a01002 	mov	r1, #2
40018ac0:	e5841010 	str	r1, [r4, #16]
40018ac4:	eaffffb5 	b	400189a0 <WS28xx::WS28xx()+0x1ac>
40018ac8:	e3ce1008 	bic	r1, lr, #8
40018acc:	e3510001 	cmp	r1, #1
40018ad0:	03a01000 	moveq	r1, #0
40018ad4:	0afffff9 	beq	40018ac0 <WS28xx::WS28xx()+0x2cc>
40018ad8:	e35e0008 	cmp	lr, #8
40018adc:	0a000007 	beq	40018b00 <WS28xx::WS28xx()+0x30c>
40018ae0:	e35e000a 	cmp	lr, #10
40018ae4:	03a01005 	moveq	r1, #5
40018ae8:	13a01002 	movne	r1, #2
40018aec:	11a0200e 	movne	r2, lr
40018af0:	03a0200a 	moveq	r2, #10
40018af4:	eafffff1 	b	40018ac0 <WS28xx::WS28xx()+0x2cc>
40018af8:	e3a020f8 	mov	r2, #248	; 0xf8
40018afc:	eaffffe3 	b	40018a90 <WS28xx::WS28xx()+0x29c>
40018b00:	e1a0200e 	mov	r2, lr
40018b04:	e3a01004 	mov	r1, #4
40018b08:	eaffffec 	b	40018ac0 <WS28xx::WS28xx()+0x2cc>

40018b0c <WS28xx::Update()>:
40018b0c:	e5901000 	ldr	r1, [r0]
40018b10:	e5900004 	ldr	r0, [r0, #4]
40018b14:	ea004bf7 	b	4002baf8 <h3_spi_dma_tx_start(unsigned char const*, unsigned long)>

40018b18 <WS28xx::Blackout()>:
40018b18:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
40018b1c:	e1a05000 	mov	r5, r0
40018b20:	e24dd00c 	sub	sp, sp, #12
40018b24:	f57ff06f 	isb	sy
40018b28:	eb004bc4 	bl	4002ba40 <h3_spi_dma_tx_is_active()>
40018b2c:	e3500000 	cmp	r0, #0
40018b30:	1afffffb 	bne	40018b24 <WS28xx::Blackout()+0xc>
40018b34:	e5952008 	ldr	r2, [r5, #8]
40018b38:	e3083964 	movw	r3, #35172	; 0x8964
40018b3c:	e3443005 	movt	r3, #16389	; 0x4005
40018b40:	e5957004 	ldr	r7, [r5, #4]
40018b44:	e5933000 	ldr	r3, [r3]
40018b48:	e5852004 	str	r2, [r5, #4]
40018b4c:	e593100c 	ldr	r1, [r3, #12]
40018b50:	e241800b 	sub	r8, r1, #11
40018b54:	e3580002 	cmp	r8, #2
40018b58:	8a000087 	bhi	40018d7c <WS28xx::Blackout()+0x264>
40018b5c:	e5939000 	ldr	r9, [r3]
40018b60:	e5820000 	str	r0, [r2]
40018b64:	e3590000 	cmp	r9, #0
40018b68:	0a000072 	beq	40018d38 <WS28xx::Blackout()+0x220>
40018b6c:	e2193007 	ands	r3, r9, #7
40018b70:	e1a04000 	mov	r4, r0
40018b74:	e1a06000 	mov	r6, r0
40018b78:	0a00003e 	beq	40018c78 <WS28xx::Blackout()+0x160>
40018b7c:	e3530001 	cmp	r3, #1
40018b80:	0a000033 	beq	40018c54 <WS28xx::Blackout()+0x13c>
40018b84:	e3530002 	cmp	r3, #2
40018b88:	0a00002a 	beq	40018c38 <WS28xx::Blackout()+0x120>
40018b8c:	e3530003 	cmp	r3, #3
40018b90:	0a000021 	beq	40018c1c <WS28xx::Blackout()+0x104>
40018b94:	e3530004 	cmp	r3, #4
40018b98:	0a000018 	beq	40018c00 <WS28xx::Blackout()+0xe8>
40018b9c:	e3530005 	cmp	r3, #5
40018ba0:	0a00000f 	beq	40018be4 <WS28xx::Blackout()+0xcc>
40018ba4:	e3530006 	cmp	r3, #6
40018ba8:	0a000006 	beq	40018bc8 <WS28xx::Blackout()+0xb0>
40018bac:	e58d0000 	str	r0, [sp]
40018bb0:	e3a03000 	mov	r3, #0
40018bb4:	e1a02003 	mov	r2, r3
40018bb8:	e1a01003 	mov	r1, r3
40018bbc:	e1a00005 	mov	r0, r5
40018bc0:	e3a04001 	mov	r4, #1
40018bc4:	eb00007c 	bl	40018dbc <WS28xx::SetPixel(unsigned long, unsigned char, unsigned char, unsigned char)>
40018bc8:	e58d6000 	str	r6, [sp]
40018bcc:	e3a03000 	mov	r3, #0
40018bd0:	e1a01004 	mov	r1, r4
40018bd4:	e1a02003 	mov	r2, r3
40018bd8:	e1a00005 	mov	r0, r5
40018bdc:	e2844001 	add	r4, r4, #1
40018be0:	eb000075 	bl	40018dbc <WS28xx::SetPixel(unsigned long, unsigned char, unsigned char, unsigned char)>
40018be4:	e58d6000 	str	r6, [sp]
40018be8:	e3a03000 	mov	r3, #0
40018bec:	e1a01004 	mov	r1, r4
40018bf0:	e1a02003 	mov	r2, r3
40018bf4:	e1a00005 	mov	r0, r5
40018bf8:	e2844001 	add	r4, r4, #1
40018bfc:	eb00006e 	bl	40018dbc <WS28xx::SetPixel(unsigned long, unsigned char, unsigned char, unsigned char)>
40018c00:	e58d6000 	str	r6, [sp]
40018c04:	e3a03000 	mov	r3, #0
40018c08:	e1a01004 	mov	r1, r4
40018c0c:	e1a02003 	mov	r2, r3
40018c10:	e1a00005 	mov	r0, r5
40018c14:	e2844001 	add	r4, r4, #1
40018c18:	eb000067 	bl	40018dbc <WS28xx::SetPixel(unsigned long, unsigned char, unsigned char, unsigned char)>
40018c1c:	e58d6000 	str	r6, [sp]
40018c20:	e3a03000 	mov	r3, #0
40018c24:	e1a01004 	mov	r1, r4
40018c28:	e1a02003 	mov	r2, r3
40018c2c:	e1a00005 	mov	r0, r5
40018c30:	e2844001 	add	r4, r4, #1
40018c34:	eb000060 	bl	40018dbc <WS28xx::SetPixel(unsigned long, unsigned char, unsigned char, unsigned char)>
40018c38:	e58d6000 	str	r6, [sp]
40018c3c:	e3a03000 	mov	r3, #0
40018c40:	e1a01004 	mov	r1, r4
40018c44:	e1a02003 	mov	r2, r3
40018c48:	e1a00005 	mov	r0, r5
40018c4c:	e2844001 	add	r4, r4, #1
40018c50:	eb000059 	bl	40018dbc <WS28xx::SetPixel(unsigned long, unsigned char, unsigned char, unsigned char)>
40018c54:	e58d6000 	str	r6, [sp]
40018c58:	e1a01004 	mov	r1, r4
40018c5c:	e3a03000 	mov	r3, #0
40018c60:	e2844001 	add	r4, r4, #1
40018c64:	e1a02003 	mov	r2, r3
40018c68:	e1a00005 	mov	r0, r5
40018c6c:	eb000052 	bl	40018dbc <WS28xx::SetPixel(unsigned long, unsigned char, unsigned char, unsigned char)>
40018c70:	e1590004 	cmp	r9, r4
40018c74:	0a00002f 	beq	40018d38 <WS28xx::Blackout()+0x220>
40018c78:	e58d6000 	str	r6, [sp]
40018c7c:	e3a03000 	mov	r3, #0
40018c80:	e1a02003 	mov	r2, r3
40018c84:	e1a01004 	mov	r1, r4
40018c88:	e1a00005 	mov	r0, r5
40018c8c:	e2844001 	add	r4, r4, #1
40018c90:	eb000049 	bl	40018dbc <WS28xx::SetPixel(unsigned long, unsigned char, unsigned char, unsigned char)>
40018c94:	e58d6000 	str	r6, [sp]
40018c98:	e3a03000 	mov	r3, #0
40018c9c:	e1a01004 	mov	r1, r4
40018ca0:	e1a02003 	mov	r2, r3
40018ca4:	e1a00005 	mov	r0, r5
40018ca8:	eb000043 	bl	40018dbc <WS28xx::SetPixel(unsigned long, unsigned char, unsigned char, unsigned char)>
40018cac:	e58d6000 	str	r6, [sp]
40018cb0:	e3a03000 	mov	r3, #0
40018cb4:	e2841001 	add	r1, r4, #1
40018cb8:	e1a02003 	mov	r2, r3
40018cbc:	e1a00005 	mov	r0, r5
40018cc0:	eb00003d 	bl	40018dbc <WS28xx::SetPixel(unsigned long, unsigned char, unsigned char, unsigned char)>
40018cc4:	e58d6000 	str	r6, [sp]
40018cc8:	e3a03000 	mov	r3, #0
40018ccc:	e2841002 	add	r1, r4, #2
40018cd0:	e1a02003 	mov	r2, r3
40018cd4:	e1a00005 	mov	r0, r5
40018cd8:	eb000037 	bl	40018dbc <WS28xx::SetPixel(unsigned long, unsigned char, unsigned char, unsigned char)>
40018cdc:	e58d6000 	str	r6, [sp]
40018ce0:	e3a03000 	mov	r3, #0
40018ce4:	e2841003 	add	r1, r4, #3
40018ce8:	e1a02003 	mov	r2, r3
40018cec:	e1a00005 	mov	r0, r5
40018cf0:	eb000031 	bl	40018dbc <WS28xx::SetPixel(unsigned long, unsigned char, unsigned char, unsigned char)>
40018cf4:	e58d6000 	str	r6, [sp]
40018cf8:	e3a03000 	mov	r3, #0
40018cfc:	e2841004 	add	r1, r4, #4
40018d00:	e1a02003 	mov	r2, r3
40018d04:	e1a00005 	mov	r0, r5
40018d08:	eb00002b 	bl	40018dbc <WS28xx::SetPixel(unsigned long, unsigned char, unsigned char, unsigned char)>
40018d0c:	e58d6000 	str	r6, [sp]
40018d10:	e3a03000 	mov	r3, #0
40018d14:	e2841005 	add	r1, r4, #5
40018d18:	e1a02003 	mov	r2, r3
40018d1c:	e1a00005 	mov	r0, r5
40018d20:	eb000025 	bl	40018dbc <WS28xx::SetPixel(unsigned long, unsigned char, unsigned char, unsigned char)>
40018d24:	e58d6000 	str	r6, [sp]
40018d28:	e2841006 	add	r1, r4, #6
40018d2c:	e3a03000 	mov	r3, #0
40018d30:	e2844007 	add	r4, r4, #7
40018d34:	eaffffca 	b	40018c64 <WS28xx::Blackout()+0x14c>
40018d38:	e5953000 	ldr	r3, [r5]
40018d3c:	e3580002 	cmp	r8, #2
40018d40:	e5952004 	ldr	r2, [r5, #4]
40018d44:	13e01000 	mvnne	r1, #0
40018d48:	e2433004 	sub	r3, r3, #4
40018d4c:	0a000018 	beq	40018db4 <WS28xx::Blackout()+0x29c>
40018d50:	e7821003 	str	r1, [r2, r3]
40018d54:	e5950004 	ldr	r0, [r5, #4]
40018d58:	e5951000 	ldr	r1, [r5]
40018d5c:	eb004b65 	bl	4002baf8 <h3_spi_dma_tx_start(unsigned char const*, unsigned long)>
40018d60:	f57ff06f 	isb	sy
40018d64:	eb004b35 	bl	4002ba40 <h3_spi_dma_tx_is_active()>
40018d68:	e3500000 	cmp	r0, #0
40018d6c:	1afffffb 	bne	40018d60 <WS28xx::Blackout()+0x248>
40018d70:	e5857004 	str	r7, [r5, #4]
40018d74:	e28dd00c 	add	sp, sp, #12
40018d78:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
40018d7c:	e5c20000 	strb	r0, [r2]
40018d80:	e3510000 	cmp	r1, #0
40018d84:	e5950004 	ldr	r0, [r5, #4]
40018d88:	01a03001 	moveq	r3, r1
40018d8c:	e5951000 	ldr	r1, [r5]
40018d90:	15d33015 	ldrbne	r3, [r3, #21]
40018d94:	e280c001 	add	ip, r0, #1
40018d98:	e3510000 	cmp	r1, #0
40018d9c:	0affffee 	beq	40018d5c <WS28xx::Blackout()+0x244>
40018da0:	e1a02001 	mov	r2, r1
40018da4:	e1a0000c 	mov	r0, ip
40018da8:	e1a01003 	mov	r1, r3
40018dac:	eb004d18 	bl	4002c214 <memset>
40018db0:	eaffffe7 	b	40018d54 <WS28xx::Blackout()+0x23c>
40018db4:	e3a01000 	mov	r1, #0
40018db8:	eaffffe4 	b	40018d50 <WS28xx::Blackout()+0x238>

40018dbc <WS28xx::SetPixel(unsigned long, unsigned char, unsigned char, unsigned char)>:
40018dbc:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
40018dc0:	e3085964 	movw	r5, #35172	; 0x8964
40018dc4:	e3445005 	movt	r5, #16389	; 0x4005
40018dc8:	e5ddc01c 	ldrb	ip, [sp, #28]
40018dcc:	e5954000 	ldr	r4, [r5]
40018dd0:	e5d4e014 	ldrb	lr, [r4, #20]
40018dd4:	e35e0000 	cmp	lr, #0
40018dd8:	1a000027 	bne	40018e7c <WS28xx::SetPixel(unsigned long, unsigned char, unsigned char, unsigned char)+0xc0>
40018ddc:	e594e00c 	ldr	lr, [r4, #12]
40018de0:	e35e0000 	cmp	lr, #0
40018de4:	0a000019 	beq	40018e50 <WS28xx::SetPixel(unsigned long, unsigned char, unsigned char, unsigned char)+0x94>
40018de8:	e24ee00b 	sub	lr, lr, #11
40018dec:	e35e0001 	cmp	lr, #1
40018df0:	9a0000b9 	bls	400190dc <WS28xx::SetPixel(unsigned long, unsigned char, unsigned char, unsigned char)+0x320>
40018df4:	e1e0e12c 	mvn	lr, ip, lsr #2
40018df8:	e22240c0 	eor	r4, r2, #192	; 0xc0
40018dfc:	e5905004 	ldr	r5, [r0, #4]
40018e00:	e20ee030 	and	lr, lr, #48	; 0x30
40018e04:	e18ee324 	orr	lr, lr, r4, lsr #6
40018e08:	e2811001 	add	r1, r1, #1
40018e0c:	e1e04223 	mvn	r4, r3, lsr #4
40018e10:	e204400c 	and	r4, r4, #12
40018e14:	e18ee004 	orr	lr, lr, r4
40018e18:	e1e0ed0e 	mvn	lr, lr, lsl #26
40018e1c:	e1e0ed2e 	mvn	lr, lr, lsr #26
40018e20:	e7c5e101 	strb	lr, [r5, r1, lsl #2]
40018e24:	e590e004 	ldr	lr, [r0, #4]
40018e28:	e1a01101 	lsl	r1, r1, #2
40018e2c:	e08ee001 	add	lr, lr, r1
40018e30:	e5cec001 	strb	ip, [lr, #1]
40018e34:	e590c004 	ldr	ip, [r0, #4]
40018e38:	e08cc001 	add	ip, ip, r1
40018e3c:	e5cc3002 	strb	r3, [ip, #2]
40018e40:	e5903004 	ldr	r3, [r0, #4]
40018e44:	e0831001 	add	r1, r3, r1
40018e48:	e5c12003 	strb	r2, [r1, #3]
40018e4c:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
40018e50:	e5904004 	ldr	r4, [r0, #4]
40018e54:	e3a0e003 	mov	lr, #3
40018e58:	e001019e 	mul	r1, lr, r1
40018e5c:	e7c42001 	strb	r2, [r4, r1]
40018e60:	e5902004 	ldr	r2, [r0, #4]
40018e64:	e0822001 	add	r2, r2, r1
40018e68:	e5c23001 	strb	r3, [r2, #1]
40018e6c:	e5903004 	ldr	r3, [r0, #4]
40018e70:	e0831001 	add	r1, r3, r1
40018e74:	e5c1c002 	strb	ip, [r1, #2]
40018e78:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
40018e7c:	e5d4e015 	ldrb	lr, [r4, #21]
40018e80:	e3a06018 	mov	r6, #24
40018e84:	e0010196 	mul	r1, r6, r1
40018e88:	e5d44016 	ldrb	r4, [r4, #22]
40018e8c:	e3120080 	tst	r2, #128	; 0x80
40018e90:	e5907004 	ldr	r7, [r0, #4]
40018e94:	e2816001 	add	r6, r1, #1
40018e98:	11a08004 	movne	r8, r4
40018e9c:	01a0800e 	moveq	r8, lr
40018ea0:	e7c78006 	strb	r8, [r7, r6]
40018ea4:	e3120040 	tst	r2, #64	; 0x40
40018ea8:	e5907004 	ldr	r7, [r0, #4]
40018eac:	e2816002 	add	r6, r1, #2
40018eb0:	11a08004 	movne	r8, r4
40018eb4:	01a0800e 	moveq	r8, lr
40018eb8:	e7c78006 	strb	r8, [r7, r6]
40018ebc:	e3120020 	tst	r2, #32
40018ec0:	e5907004 	ldr	r7, [r0, #4]
40018ec4:	e2816003 	add	r6, r1, #3
40018ec8:	11a08004 	movne	r8, r4
40018ecc:	01a0800e 	moveq	r8, lr
40018ed0:	e7c78006 	strb	r8, [r7, r6]
40018ed4:	e3120010 	tst	r2, #16
40018ed8:	e5907004 	ldr	r7, [r0, #4]
40018edc:	e2816004 	add	r6, r1, #4
40018ee0:	11a08004 	movne	r8, r4
40018ee4:	01a0800e 	moveq	r8, lr
40018ee8:	e7c78006 	strb	r8, [r7, r6]
40018eec:	e3120008 	tst	r2, #8
40018ef0:	e5907004 	ldr	r7, [r0, #4]
40018ef4:	e2816005 	add	r6, r1, #5
40018ef8:	11a08004 	movne	r8, r4
40018efc:	01a0800e 	moveq	r8, lr
40018f00:	e7c78006 	strb	r8, [r7, r6]
40018f04:	e3120004 	tst	r2, #4
40018f08:	e5907004 	ldr	r7, [r0, #4]
40018f0c:	e2816006 	add	r6, r1, #6
40018f10:	11a08004 	movne	r8, r4
40018f14:	01a0800e 	moveq	r8, lr
40018f18:	e7c78006 	strb	r8, [r7, r6]
40018f1c:	e3120002 	tst	r2, #2
40018f20:	e5907004 	ldr	r7, [r0, #4]
40018f24:	e2816007 	add	r6, r1, #7
40018f28:	11a08004 	movne	r8, r4
40018f2c:	01a0800e 	moveq	r8, lr
40018f30:	e7c78006 	strb	r8, [r7, r6]
40018f34:	e3120001 	tst	r2, #1
40018f38:	11a0e004 	movne	lr, r4
40018f3c:	e2812008 	add	r2, r1, #8
40018f40:	e5904004 	ldr	r4, [r0, #4]
40018f44:	e3130080 	tst	r3, #128	; 0x80
40018f48:	e2817009 	add	r7, r1, #9
40018f4c:	e281600a 	add	r6, r1, #10
40018f50:	e7c4e002 	strb	lr, [r4, r2]
40018f54:	e281400b 	add	r4, r1, #11
40018f58:	e595e000 	ldr	lr, [r5]
40018f5c:	e5908004 	ldr	r8, [r0, #4]
40018f60:	e5de2015 	ldrb	r2, [lr, #21]
40018f64:	e5dee016 	ldrb	lr, [lr, #22]
40018f68:	01a09002 	moveq	r9, r2
40018f6c:	11a0900e 	movne	r9, lr
40018f70:	e3130040 	tst	r3, #64	; 0x40
40018f74:	e7c89007 	strb	r9, [r8, r7]
40018f78:	11a0900e 	movne	r9, lr
40018f7c:	e5908004 	ldr	r8, [r0, #4]
40018f80:	01a09002 	moveq	r9, r2
40018f84:	e3130020 	tst	r3, #32
40018f88:	e281700c 	add	r7, r1, #12
40018f8c:	e7c89006 	strb	r9, [r8, r6]
40018f90:	11a0900e 	movne	r9, lr
40018f94:	e5908004 	ldr	r8, [r0, #4]
40018f98:	01a09002 	moveq	r9, r2
40018f9c:	e3130010 	tst	r3, #16
40018fa0:	e281600d 	add	r6, r1, #13
40018fa4:	e7c89004 	strb	r9, [r8, r4]
40018fa8:	11a0900e 	movne	r9, lr
40018fac:	e5908004 	ldr	r8, [r0, #4]
40018fb0:	01a09002 	moveq	r9, r2
40018fb4:	e3130008 	tst	r3, #8
40018fb8:	e281400e 	add	r4, r1, #14
40018fbc:	e7c89007 	strb	r9, [r8, r7]
40018fc0:	11a0900e 	movne	r9, lr
40018fc4:	e5908004 	ldr	r8, [r0, #4]
40018fc8:	01a09002 	moveq	r9, r2
40018fcc:	e3130004 	tst	r3, #4
40018fd0:	e281700f 	add	r7, r1, #15
40018fd4:	e7c89006 	strb	r9, [r8, r6]
40018fd8:	11a0900e 	movne	r9, lr
40018fdc:	e5908004 	ldr	r8, [r0, #4]
40018fe0:	01a09002 	moveq	r9, r2
40018fe4:	e3130002 	tst	r3, #2
40018fe8:	e2816010 	add	r6, r1, #16
40018fec:	e7c89004 	strb	r9, [r8, r4]
40018ff0:	11a0900e 	movne	r9, lr
40018ff4:	e5908004 	ldr	r8, [r0, #4]
40018ff8:	01a09002 	moveq	r9, r2
40018ffc:	e3130001 	tst	r3, #1
40019000:	e2814011 	add	r4, r1, #17
40019004:	e7c89007 	strb	r9, [r8, r7]
40019008:	11a0200e 	movne	r2, lr
4001900c:	e5903004 	ldr	r3, [r0, #4]
40019010:	e31c0080 	tst	ip, #128	; 0x80
40019014:	e2817012 	add	r7, r1, #18
40019018:	e281e013 	add	lr, r1, #19
4001901c:	e7c32006 	strb	r2, [r3, r6]
40019020:	e2816014 	add	r6, r1, #20
40019024:	e5952000 	ldr	r2, [r5]
40019028:	e5905004 	ldr	r5, [r0, #4]
4001902c:	e5d23015 	ldrb	r3, [r2, #21]
40019030:	e5d22016 	ldrb	r2, [r2, #22]
40019034:	01a08003 	moveq	r8, r3
40019038:	11a08002 	movne	r8, r2
4001903c:	e31c0040 	tst	ip, #64	; 0x40
40019040:	e7c58004 	strb	r8, [r5, r4]
40019044:	11a08002 	movne	r8, r2
40019048:	e5904004 	ldr	r4, [r0, #4]
4001904c:	01a08003 	moveq	r8, r3
40019050:	e31c0020 	tst	ip, #32
40019054:	e2815015 	add	r5, r1, #21
40019058:	e7c48007 	strb	r8, [r4, r7]
4001905c:	11a08002 	movne	r8, r2
40019060:	e5907004 	ldr	r7, [r0, #4]
40019064:	01a08003 	moveq	r8, r3
40019068:	e31c0010 	tst	ip, #16
4001906c:	e2814016 	add	r4, r1, #22
40019070:	e7c7800e 	strb	r8, [r7, lr]
40019074:	11a08002 	movne	r8, r2
40019078:	e5907004 	ldr	r7, [r0, #4]
4001907c:	01a08003 	moveq	r8, r3
40019080:	e31c0008 	tst	ip, #8
40019084:	e281e017 	add	lr, r1, #23
40019088:	e7c78006 	strb	r8, [r7, r6]
4001908c:	11a07002 	movne	r7, r2
40019090:	e5906004 	ldr	r6, [r0, #4]
40019094:	01a07003 	moveq	r7, r3
40019098:	e31c0004 	tst	ip, #4
4001909c:	e2811018 	add	r1, r1, #24
400190a0:	e7c67005 	strb	r7, [r6, r5]
400190a4:	11a06002 	movne	r6, r2
400190a8:	e5905004 	ldr	r5, [r0, #4]
400190ac:	01a06003 	moveq	r6, r3
400190b0:	e31c0002 	tst	ip, #2
400190b4:	e7c56004 	strb	r6, [r5, r4]
400190b8:	11a05002 	movne	r5, r2
400190bc:	e5904004 	ldr	r4, [r0, #4]
400190c0:	01a05003 	moveq	r5, r3
400190c4:	e31c0001 	tst	ip, #1
400190c8:	e7c4500e 	strb	r5, [r4, lr]
400190cc:	11a03002 	movne	r3, r2
400190d0:	e5900004 	ldr	r0, [r0, #4]
400190d4:	e7c03001 	strb	r3, [r0, r1]
400190d8:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
400190dc:	e590e004 	ldr	lr, [r0, #4]
400190e0:	e2811001 	add	r1, r1, #1
400190e4:	e5d44017 	ldrb	r4, [r4, #23]
400190e8:	e7ce4101 	strb	r4, [lr, r1, lsl #2]
400190ec:	e590e004 	ldr	lr, [r0, #4]
400190f0:	e1a01101 	lsl	r1, r1, #2
400190f4:	e08ee001 	add	lr, lr, r1
400190f8:	e5ce2001 	strb	r2, [lr, #1]
400190fc:	e5902004 	ldr	r2, [r0, #4]
40019100:	e0822001 	add	r2, r2, r1
40019104:	e5c23002 	strb	r3, [r2, #2]
40019108:	e5903004 	ldr	r3, [r0, #4]
4001910c:	e0831001 	add	r1, r3, r1
40019110:	e5c1c003 	strb	ip, [r1, #3]
40019114:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}

40019118 <RgbPanel::PutChar(char, unsigned char, unsigned char, unsigned char)>:
40019118:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
4001911c:	e24dd02c 	sub	sp, sp, #44	; 0x2c
40019120:	e1a04000 	mov	r4, r0
40019124:	e1a05001 	mov	r5, r1
40019128:	e1cd21f8 	strd	r2, [sp, #24]
4001912c:	e5dd3050 	ldrb	r3, [sp, #80]	; 0x50
40019130:	e3a06000 	mov	r6, #0
40019134:	e58d3020 	str	r3, [sp, #32]
40019138:	eb00323f 	bl	40025a3c <cp437_font_size()>
4001913c:	e5943014 	ldr	r3, [r4, #20]
40019140:	e5948020 	ldr	r8, [r4, #32]
40019144:	e1a07183 	lsl	r7, r3, #3
40019148:	e1550000 	cmp	r5, r0
4001914c:	e6ef2077 	uxtb	r2, r7
40019150:	e58d200c 	str	r2, [sp, #12]
40019154:	23a05020 	movcs	r5, #32
40019158:	e5942018 	ldr	r2, [r4, #24]
4001915c:	e59f113c 	ldr	r1, [pc, #316]	; 400192a0 <RgbPanel::PutChar(char, unsigned char, unsigned char, unsigned char)+0x188>
40019160:	e0080892 	mul	r8, r2, r8
40019164:	e0833008 	add	r3, r3, r8
40019168:	e1a02103 	lsl	r2, r3, #2
4001916c:	e58d2008 	str	r2, [sp, #8]
40019170:	e5942024 	ldr	r2, [r4, #36]	; 0x24
40019174:	e7d23103 	ldrb	r3, [r2, r3, lsl #2]
40019178:	e58d3014 	str	r3, [sp, #20]
4001917c:	e0813185 	add	r3, r1, r5, lsl #3
40019180:	e58d3024 	str	r3, [sp, #36]	; 0x24
40019184:	e0887006 	add	r7, r8, r6
40019188:	e3a05001 	mov	r5, #1
4001918c:	e59db00c 	ldr	fp, [sp, #12]
40019190:	e3a0a009 	mov	sl, #9
40019194:	e1a05615 	lsl	r5, r5, r6
40019198:	e3a09000 	mov	r9, #0
4001919c:	e35a0001 	cmp	sl, #1
400191a0:	0a00002b 	beq	40019254 <RgbPanel::PutChar(char, unsigned char, unsigned char, unsigned char)+0x13c>
400191a4:	e59d3014 	ldr	r3, [sp, #20]
400191a8:	e3530000 	cmp	r3, #0
400191ac:	0a000016 	beq	4001920c <RgbPanel::PutChar(char, unsigned char, unsigned char, unsigned char)+0xf4>
400191b0:	e59d300c 	ldr	r3, [sp, #12]
400191b4:	e2833007 	add	r3, r3, #7
400191b8:	e153000b 	cmp	r3, fp
400191bc:	1a000012 	bne	4001920c <RgbPanel::PutChar(char, unsigned char, unsigned char, unsigned char)+0xf4>
400191c0:	e59d2008 	ldr	r2, [sp, #8]
400191c4:	e1a0100b 	mov	r1, fp
400191c8:	e5943024 	ldr	r3, [r4, #36]	; 0x24
400191cc:	e0830002 	add	r0, r3, r2
400191d0:	e7d33002 	ldrb	r3, [r3, r2]
400191d4:	e1a02007 	mov	r2, r7
400191d8:	e0133005 	ands	r3, r3, r5
400191dc:	058d3004 	streq	r3, [sp, #4]
400191e0:	15d0c003 	ldrbne	ip, [r0, #3]
400191e4:	15d03001 	ldrbne	r3, [r0, #1]
400191e8:	158dc004 	strne	ip, [sp, #4]
400191ec:	15d00002 	ldrbne	r0, [r0, #2]
400191f0:	058d3000 	streq	r3, [sp]
400191f4:	158d0000 	strne	r0, [sp]
400191f8:	e1a00004 	mov	r0, r4
400191fc:	eb000204 	bl	40019a14 <RgbPanel::SetPixel(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)>
40019200:	e28bb001 	add	fp, fp, #1
40019204:	e24aa001 	sub	sl, sl, #1
40019208:	eaffffe3 	b	4001919c <RgbPanel::PutChar(char, unsigned char, unsigned char, unsigned char)+0x84>
4001920c:	e2893001 	add	r3, r9, #1
40019210:	e1a02007 	mov	r2, r7
40019214:	e58d3010 	str	r3, [sp, #16]
40019218:	e1a0100b 	mov	r1, fp
4001921c:	e59d3024 	ldr	r3, [sp, #36]	; 0x24
40019220:	e1a00004 	mov	r0, r4
40019224:	e7d33009 	ldrb	r3, [r3, r9]
40019228:	e0133005 	ands	r3, r3, r5
4001922c:	058d3004 	streq	r3, [sp, #4]
40019230:	159d3020 	ldrne	r3, [sp, #32]
40019234:	058d3000 	streq	r3, [sp]
40019238:	158d3004 	strne	r3, [sp, #4]
4001923c:	159d301c 	ldrne	r3, [sp, #28]
40019240:	158d3000 	strne	r3, [sp]
40019244:	159d3018 	ldrne	r3, [sp, #24]
40019248:	eb0001f1 	bl	40019a14 <RgbPanel::SetPixel(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)>
4001924c:	e59d9010 	ldr	r9, [sp, #16]
40019250:	eaffffea 	b	40019200 <RgbPanel::PutChar(char, unsigned char, unsigned char, unsigned char)+0xe8>
40019254:	e2866001 	add	r6, r6, #1
40019258:	e3560008 	cmp	r6, #8
4001925c:	1affffc8 	bne	40019184 <RgbPanel::PutChar(char, unsigned char, unsigned char, unsigned char)+0x6c>
40019260:	e5943014 	ldr	r3, [r4, #20]
40019264:	e5942018 	ldr	r2, [r4, #24]
40019268:	e2833001 	add	r3, r3, #1
4001926c:	e1530002 	cmp	r3, r2
40019270:	e5843014 	str	r3, [r4, #20]
40019274:	1a000007 	bne	40019298 <RgbPanel::PutChar(char, unsigned char, unsigned char, unsigned char)+0x180>
40019278:	e594201c 	ldr	r2, [r4, #28]
4001927c:	e3a03000 	mov	r3, #0
40019280:	e5843014 	str	r3, [r4, #20]
40019284:	e5943020 	ldr	r3, [r4, #32]
40019288:	e2833001 	add	r3, r3, #1
4001928c:	e1530002 	cmp	r3, r2
40019290:	03a03000 	moveq	r3, #0
40019294:	e5843020 	str	r3, [r4, #32]
40019298:	e28dd02c 	add	sp, sp, #44	; 0x2c
4001929c:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
400192a0:	400336e4 	andmi	r3, r3, r4, ror #13

400192a4 <RgbPanel::Text(char const*, unsigned long, unsigned char, unsigned char, unsigned char)>:
400192a4:	e92d43f7 	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
400192a8:	e1a06003 	mov	r6, r3
400192ac:	e5903018 	ldr	r3, [r0, #24]
400192b0:	e1a05000 	mov	r5, r0
400192b4:	e5dd7028 	ldrb	r7, [sp, #40]	; 0x28
400192b8:	e1a04001 	mov	r4, r1
400192bc:	e5dd802c 	ldrb	r8, [sp, #44]	; 0x2c
400192c0:	e1520003 	cmp	r2, r3
400192c4:	90819002 	addls	r9, r1, r2
400192c8:	80819003 	addhi	r9, r1, r3
400192cc:	e1590004 	cmp	r9, r4
400192d0:	0a000006 	beq	400192f0 <RgbPanel::Text(char const*, unsigned long, unsigned char, unsigned char, unsigned char)+0x4c>
400192d4:	e58d8000 	str	r8, [sp]
400192d8:	e1a03007 	mov	r3, r7
400192dc:	e4d41001 	ldrb	r1, [r4], #1
400192e0:	e1a02006 	mov	r2, r6
400192e4:	e1a00005 	mov	r0, r5
400192e8:	ebffff8a 	bl	40019118 <RgbPanel::PutChar(char, unsigned char, unsigned char, unsigned char)>
400192ec:	eafffff6 	b	400192cc <RgbPanel::Text(char const*, unsigned long, unsigned char, unsigned char, unsigned char)+0x28>
400192f0:	e28dd00c 	add	sp, sp, #12
400192f4:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}

400192f8 <RgbPanel::SetCursorPos(unsigned char, unsigned char)>:
400192f8:	e5903018 	ldr	r3, [r0, #24]
400192fc:	e1510003 	cmp	r1, r3
40019300:	212fff1e 	bxcs	lr
40019304:	e590301c 	ldr	r3, [r0, #28]
40019308:	e1520003 	cmp	r2, r3
4001930c:	35801014 	strcc	r1, [r0, #20]
40019310:	35802020 	strcc	r2, [r0, #32]
40019314:	e12fff1e 	bx	lr

40019318 <RgbPanel::TextLine(unsigned char, char const*, unsigned long, unsigned char, unsigned char, unsigned char)>:
40019318:	e3510000 	cmp	r1, #0
4001931c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40019320:	e5dd6018 	ldrb	r6, [sp, #24]
40019324:	e5dd701c 	ldrb	r7, [sp, #28]
40019328:	e5dd8020 	ldrb	r8, [sp, #32]
4001932c:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
40019330:	e1a05003 	mov	r5, r3
40019334:	e590301c 	ldr	r3, [r0, #28]
40019338:	e1510003 	cmp	r1, r3
4001933c:	88bd81f0 	pophi	{r4, r5, r6, r7, r8, pc}
40019340:	e2411001 	sub	r1, r1, #1
40019344:	e1a04002 	mov	r4, r2
40019348:	e6ef2071 	uxtb	r2, r1
4001934c:	e3a01000 	mov	r1, #0
40019350:	ebffffe8 	bl	400192f8 <RgbPanel::SetCursorPos(unsigned char, unsigned char)>
40019354:	e58d801c 	str	r8, [sp, #28]
40019358:	e1a03006 	mov	r3, r6
4001935c:	e58d7018 	str	r7, [sp, #24]
40019360:	e1a02005 	mov	r2, r5
40019364:	e1a01004 	mov	r1, r4
40019368:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
4001936c:	eaffffcc 	b	400192a4 <RgbPanel::Text(char const*, unsigned long, unsigned char, unsigned char, unsigned char)>

40019370 <RgbPanel::ClearLine(unsigned char)>:
40019370:	e92d43f7 	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
40019374:	e2514000 	subs	r4, r1, #0
40019378:	0a000023 	beq	4001940c <RgbPanel::ClearLine(unsigned char)+0x9c>
4001937c:	e590301c 	ldr	r3, [r0, #28]
40019380:	e1a06000 	mov	r6, r0
40019384:	e1540003 	cmp	r4, r3
40019388:	8a00001f 	bhi	4001940c <RgbPanel::ClearLine(unsigned char)+0x9c>
4001938c:	e5905018 	ldr	r5, [r0, #24]
40019390:	e2444001 	sub	r4, r4, #1
40019394:	e3a09000 	mov	r9, #0
40019398:	e0050495 	mul	r5, r5, r4
4001939c:	e3750009 	cmn	r5, #9
400193a0:	e2458001 	sub	r8, r5, #1
400193a4:	83a03001 	movhi	r3, #1
400193a8:	93a03009 	movls	r3, #9
400193ac:	e0888003 	add	r8, r8, r3
400193b0:	e1550008 	cmp	r5, r8
400193b4:	0a00000e 	beq	400193f4 <RgbPanel::ClearLine(unsigned char)+0x84>
400193b8:	e3a07000 	mov	r7, #0
400193bc:	e5963000 	ldr	r3, [r6]
400193c0:	e1530007 	cmp	r3, r7
400193c4:	9a000008 	bls	400193ec <RgbPanel::ClearLine(unsigned char)+0x7c>
400193c8:	e58d9004 	str	r9, [sp, #4]
400193cc:	e1a01007 	mov	r1, r7
400193d0:	e58d9000 	str	r9, [sp]
400193d4:	e3a03000 	mov	r3, #0
400193d8:	e1a02005 	mov	r2, r5
400193dc:	e1a00006 	mov	r0, r6
400193e0:	e2877001 	add	r7, r7, #1
400193e4:	eb00018a 	bl	40019a14 <RgbPanel::SetPixel(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)>
400193e8:	eafffff3 	b	400193bc <RgbPanel::ClearLine(unsigned char)+0x4c>
400193ec:	e2855001 	add	r5, r5, #1
400193f0:	eaffffee 	b	400193b0 <RgbPanel::ClearLine(unsigned char)+0x40>
400193f4:	e6ef2074 	uxtb	r2, r4
400193f8:	e3a01000 	mov	r1, #0
400193fc:	e1a00006 	mov	r0, r6
40019400:	e28dd00c 	add	sp, sp, #12
40019404:	e8bd43f0 	pop	{r4, r5, r6, r7, r8, r9, lr}
40019408:	eaffffba 	b	400192f8 <RgbPanel::SetCursorPos(unsigned char, unsigned char)>
4001940c:	e28dd00c 	add	sp, sp, #12
40019410:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}

40019414 <RgbPanel::SetColon(char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)>:
40019414:	e590c018 	ldr	ip, [r0, #24]
40019418:	e152000c 	cmp	r2, ip
4001941c:	212fff1e 	bxcs	lr
40019420:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40019424:	e590e01c 	ldr	lr, [r0, #28]
40019428:	e153000e 	cmp	r3, lr
4001942c:	249df004 	popcs	{pc}		; (ldrcs pc, [sp], #4)
40019430:	e0232c93 	mla	r3, r3, ip, r2
40019434:	e5902024 	ldr	r2, [r0, #36]	; 0x24
40019438:	e351002e 	cmp	r1, #46	; 0x2e
4001943c:	e0820103 	add	r0, r2, r3, lsl #2
40019440:	0a000010 	beq	40019488 <RgbPanel::SetColon(char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)+0x74>
40019444:	8a000003 	bhi	40019458 <RgbPanel::SetColon(char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)+0x44>
40019448:	e351002c 	cmp	r1, #44	; 0x2c
4001944c:	0a00000d 	beq	40019488 <RgbPanel::SetColon(char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)+0x74>
40019450:	e3a01000 	mov	r1, #0
40019454:	ea000003 	b	40019468 <RgbPanel::SetColon(char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)+0x54>
40019458:	e241103a 	sub	r1, r1, #58	; 0x3a
4001945c:	e3510001 	cmp	r1, #1
40019460:	93a01066 	movls	r1, #102	; 0x66
40019464:	8afffff9 	bhi	40019450 <RgbPanel::SetColon(char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)+0x3c>
40019468:	e7c21103 	strb	r1, [r2, r3, lsl #2]
4001946c:	e5dd3004 	ldrb	r3, [sp, #4]
40019470:	e5c03001 	strb	r3, [r0, #1]
40019474:	e5dd300c 	ldrb	r3, [sp, #12]
40019478:	e5c03003 	strb	r3, [r0, #3]
4001947c:	e5dd3008 	ldrb	r3, [sp, #8]
40019480:	e5c03002 	strb	r3, [r0, #2]
40019484:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40019488:	e3a01060 	mov	r1, #96	; 0x60
4001948c:	eafffff5 	b	40019468 <RgbPanel::SetColon(char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)+0x54>

40019490 <RgbPanel::SetColonsOff()>:
40019490:	e590301c 	ldr	r3, [r0, #28]
40019494:	e590c018 	ldr	ip, [r0, #24]
40019498:	e00c0c93 	mul	ip, r3, ip
4001949c:	e3a03000 	mov	r3, #0
400194a0:	e15c0003 	cmp	ip, r3
400194a4:	e1a02003 	mov	r2, r3
400194a8:	012fff1e 	bxeq	lr
400194ac:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
400194b0:	e590e024 	ldr	lr, [r0, #36]	; 0x24
400194b4:	e08e1103 	add	r1, lr, r3, lsl #2
400194b8:	e7ce2103 	strb	r2, [lr, r3, lsl #2]
400194bc:	e2833001 	add	r3, r3, #1
400194c0:	e15c0003 	cmp	ip, r3
400194c4:	e5c12001 	strb	r2, [r1, #1]
400194c8:	e5c12002 	strb	r2, [r1, #2]
400194cc:	e5c12003 	strb	r2, [r1, #3]
400194d0:	1afffff6 	bne	400194b0 <RgbPanel::SetColonsOff()+0x20>
400194d4:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

400194d8 <RgbPanel::RgbPanel(unsigned long, unsigned long, unsigned long, rgbpanel::Types)>:
400194d8:	e3530001 	cmp	r3, #1
400194dc:	e92d4010 	push	{r4, lr}
400194e0:	33a03001 	movcc	r3, #1
400194e4:	e5803008 	str	r3, [r0, #8]
400194e8:	e1a04000 	mov	r4, r0
400194ec:	e59d3008 	ldr	r3, [sp, #8]
400194f0:	e8800006 	stm	r0, {r1, r2}
400194f4:	e580300c 	str	r3, [r0, #12]
400194f8:	e3a03000 	mov	r3, #0
400194fc:	e1a011a1 	lsr	r1, r1, #3
40019500:	e1a021a2 	lsr	r2, r2, #3
40019504:	e1c021fc 	strd	r2, [r0, #28]
40019508:	e5801018 	str	r1, [r0, #24]
4001950c:	e5c03010 	strb	r3, [r0, #16]
40019510:	e5803014 	str	r3, [r0, #20]
40019514:	e5803024 	str	r3, [r0, #36]	; 0x24
40019518:	eb000067 	bl	400196bc <RgbPanel::PlatformInit()>
4001951c:	e5940018 	ldr	r0, [r4, #24]
40019520:	e594301c 	ldr	r3, [r4, #28]
40019524:	e0000093 	mul	r0, r3, r0
40019528:	e370022e 	cmn	r0, #-536870910	; 0xe0000002
4001952c:	91a00100 	lslls	r0, r0, #2
40019530:	83e00000 	mvnhi	r0, #0
40019534:	eb004fa8 	bl	4002d3dc <operator new[](unsigned int)>
40019538:	e5840024 	str	r0, [r4, #36]	; 0x24
4001953c:	e1a00004 	mov	r0, r4
40019540:	ebffffd2 	bl	40019490 <RgbPanel::SetColonsOff()>
40019544:	e8bd8010 	pop	{r4, pc}

40019548 <core1_task>:
40019548:	e30839a0 	movw	r3, #35232	; 0x89a0
4001954c:	e3a01b02 	mov	r1, #2048	; 0x800
40019550:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
40019554:	e24dd01c 	sub	sp, sp, #28
40019558:	e3443005 	movt	r3, #16389	; 0x4005
4001955c:	e308b980 	movw	fp, #35200	; 0x8980
40019560:	e58d3014 	str	r3, [sp, #20]
40019564:	e3a02e15 	mov	r2, #336	; 0x150
40019568:	e5933000 	ldr	r3, [r3]
4001956c:	e3089994 	movw	r9, #35220	; 0x8994
40019570:	e34011c2 	movt	r1, #450	; 0x1c2
40019574:	e308a990 	movw	sl, #35216	; 0x8990
40019578:	e344b005 	movt	fp, #16389	; 0x4005
4001957c:	e1a030a3 	lsr	r3, r3, #1
40019580:	e591c010 	ldr	ip, [r1, #16]
40019584:	e58d3004 	str	r3, [sp, #4]
40019588:	e59b3000 	ldr	r3, [fp]
4001958c:	e3cccade 	bic	ip, ip, #909312	; 0xde000
40019590:	e0030392 	mul	r3, r2, r3
40019594:	e3449005 	movt	r9, #16389	; 0x4005
40019598:	e58d3008 	str	r3, [sp, #8]
4001959c:	e308399c 	movw	r3, #35228	; 0x899c
400195a0:	e3443005 	movt	r3, #16389	; 0x4005
400195a4:	e58d300c 	str	r3, [sp, #12]
400195a8:	e30839a4 	movw	r3, #35236	; 0x89a4
400195ac:	e344a005 	movt	sl, #16389	; 0x4005
400195b0:	e3443005 	movt	r3, #16389	; 0x4005
400195b4:	e58d3010 	str	r3, [sp, #16]
400195b8:	e59d3004 	ldr	r3, [sp, #4]
400195bc:	e3530000 	cmp	r3, #0
400195c0:	0a000029 	beq	4001966c <core1_task+0x124>
400195c4:	e59b6000 	ldr	r6, [fp]
400195c8:	e3a05000 	mov	r5, #0
400195cc:	e5993000 	ldr	r3, [r9]
400195d0:	e1a07106 	lsl	r7, r6, #2
400195d4:	e0833007 	add	r3, r3, r7
400195d8:	e58d3000 	str	r3, [sp]
400195dc:	e3e03003 	mvn	r3, #3
400195e0:	e0080693 	mul	r8, r3, r6
400195e4:	e59de000 	ldr	lr, [sp]
400195e8:	e3a04054 	mov	r4, #84	; 0x54
400195ec:	e3560000 	cmp	r6, #0
400195f0:	1088200e 	addne	r2, r8, lr
400195f4:	0a000006 	beq	40019614 <core1_task+0xcc>
400195f8:	e4923004 	ldr	r3, [r2], #4
400195fc:	e183300c 	orr	r3, r3, ip
40019600:	e15e0002 	cmp	lr, r2
40019604:	e3830b01 	orr	r0, r3, #1024	; 0x400
40019608:	e5810010 	str	r0, [r1, #16]
4001960c:	e5813010 	str	r3, [r1, #16]
40019610:	1afffff8 	bne	400195f8 <core1_task+0xb0>
40019614:	e3cc300f 	bic	r3, ip, #15
40019618:	e38c2080 	orr	r2, ip, #128	; 0x80
4001961c:	e1833005 	orr	r3, r3, r5
40019620:	e38cc0c0 	orr	ip, ip, #192	; 0xc0
40019624:	e5812010 	str	r2, [r1, #16]
40019628:	e2544001 	subs	r4, r4, #1
4001962c:	e581c010 	str	ip, [r1, #16]
40019630:	e3c3c080 	bic	ip, r3, #128	; 0x80
40019634:	e3833080 	orr	r3, r3, #128	; 0x80
40019638:	e5812010 	str	r2, [r1, #16]
4001963c:	e08ee007 	add	lr, lr, r7
40019640:	e5813010 	str	r3, [r1, #16]
40019644:	e581c010 	str	ip, [r1, #16]
40019648:	1affffe7 	bne	400195ec <core1_task+0xa4>
4001964c:	e59d3000 	ldr	r3, [sp]
40019650:	e2855001 	add	r5, r5, #1
40019654:	e59d2008 	ldr	r2, [sp, #8]
40019658:	e0833002 	add	r3, r3, r2
4001965c:	e58d3000 	str	r3, [sp]
40019660:	e59d3004 	ldr	r3, [sp, #4]
40019664:	e1530005 	cmp	r3, r5
40019668:	1affffdd 	bne	400195e4 <core1_task+0x9c>
4001966c:	e59d200c 	ldr	r2, [sp, #12]
40019670:	e59d0010 	ldr	r0, [sp, #16]
40019674:	e5923000 	ldr	r3, [r2]
40019678:	e2833001 	add	r3, r3, #1
4001967c:	e5823000 	str	r3, [r2]
40019680:	e5d03000 	ldrb	r3, [r0]
40019684:	e3530000 	cmp	r3, #0
40019688:	0affffca 	beq	400195b8 <core1_task+0x70>
4001968c:	e59a2000 	ldr	r2, [sl]
40019690:	e5993000 	ldr	r3, [r9]
40019694:	e5892000 	str	r2, [r9]
40019698:	e58a3000 	str	r3, [sl]
4001969c:	f57ff05f 	dmb	sy
400196a0:	e59d3014 	ldr	r3, [sp, #20]
400196a4:	e3a02000 	mov	r2, #0
400196a8:	e5c02000 	strb	r2, [r0]
400196ac:	e5933000 	ldr	r3, [r3]
400196b0:	e1a030a3 	lsr	r3, r3, #1
400196b4:	e58d3004 	str	r3, [sp, #4]
400196b8:	eaffffbe 	b	400195b8 <core1_task+0x70>

400196bc <RgbPanel::PlatformInit()>:
400196bc:	e92d4070 	push	{r4, r5, r6, lr}
400196c0:	e1a05000 	mov	r5, r0
400196c4:	e59f4234 	ldr	r4, [pc, #564]	; 40019900 <RgbPanel::PlatformInit()+0x244>
400196c8:	e3a00002 	mov	r0, #2
400196cc:	e3a06000 	mov	r6, #0
400196d0:	eb00462a 	bl	4002af80 <h3_cpu_off>
400196d4:	e3a00003 	mov	r0, #3
400196d8:	eb004628 	bl	4002af80 <h3_cpu_off>
400196dc:	e5952000 	ldr	r2, [r5]
400196e0:	e59f321c 	ldr	r3, [pc, #540]	; 40019904 <RgbPanel::PlatformInit()+0x248>
400196e4:	e5832000 	str	r2, [r3]
400196e8:	e5952004 	ldr	r2, [r5, #4]
400196ec:	e59f3214 	ldr	r3, [pc, #532]	; 40019908 <RgbPanel::PlatformInit()+0x24c>
400196f0:	e5832000 	str	r2, [r3]
400196f4:	e59f3210 	ldr	r3, [pc, #528]	; 4001990c <RgbPanel::PlatformInit()+0x250>
400196f8:	e5836000 	str	r6, [r3]
400196fc:	e59f320c 	ldr	r3, [pc, #524]	; 40019910 <RgbPanel::PlatformInit()+0x254>
40019700:	e5c36000 	strb	r6, [r3]
40019704:	e59f3208 	ldr	r3, [pc, #520]	; 40019914 <RgbPanel::PlatformInit()+0x258>
40019708:	e5836000 	str	r6, [r3]
4001970c:	e59f3204 	ldr	r3, [pc, #516]	; 40019918 <RgbPanel::PlatformInit()+0x25c>
40019710:	e5c36000 	strb	r6, [r3]
40019714:	ebff9de0 	bl	40000e9c <h3_spi_end()>
40019718:	e3a01001 	mov	r1, #1
4001971c:	e3a0000a 	mov	r0, #10
40019720:	eb003f15 	bl	4002937c <h3_gpio_fsel>
40019724:	e3a01001 	mov	r1, #1
40019728:	e3a00006 	mov	r0, #6
4001972c:	eb003f12 	bl	4002937c <h3_gpio_fsel>
40019730:	e3a01001 	mov	r1, #1
40019734:	e3a00007 	mov	r0, #7
40019738:	eb003f0f 	bl	4002937c <h3_gpio_fsel>
4001973c:	e5943010 	ldr	r3, [r4, #16]
40019740:	e3a01001 	mov	r1, #1
40019744:	e1a00006 	mov	r0, r6
40019748:	e3c33b01 	bic	r3, r3, #1024	; 0x400
4001974c:	e5843010 	str	r3, [r4, #16]
40019750:	e5943010 	ldr	r3, [r4, #16]
40019754:	e3c33040 	bic	r3, r3, #64	; 0x40
40019758:	e5843010 	str	r3, [r4, #16]
4001975c:	e5943010 	ldr	r3, [r4, #16]
40019760:	e3833080 	orr	r3, r3, #128	; 0x80
40019764:	e5843010 	str	r3, [r4, #16]
40019768:	eb003f03 	bl	4002937c <h3_gpio_fsel>
4001976c:	e3a01001 	mov	r1, #1
40019770:	e1a00001 	mov	r0, r1
40019774:	eb003f00 	bl	4002937c <h3_gpio_fsel>
40019778:	e3a01001 	mov	r1, #1
4001977c:	e3a00002 	mov	r0, #2
40019780:	eb003efd 	bl	4002937c <h3_gpio_fsel>
40019784:	e3a01001 	mov	r1, #1
40019788:	e3a00003 	mov	r0, #3
4001978c:	eb003efa 	bl	4002937c <h3_gpio_fsel>
40019790:	e5943010 	ldr	r3, [r4, #16]
40019794:	e3a01001 	mov	r1, #1
40019798:	e3a0000d 	mov	r0, #13
4001979c:	e3c33001 	bic	r3, r3, #1
400197a0:	e5843010 	str	r3, [r4, #16]
400197a4:	e5943010 	ldr	r3, [r4, #16]
400197a8:	e3c33002 	bic	r3, r3, #2
400197ac:	e5843010 	str	r3, [r4, #16]
400197b0:	e5943010 	ldr	r3, [r4, #16]
400197b4:	e3c33004 	bic	r3, r3, #4
400197b8:	e5843010 	str	r3, [r4, #16]
400197bc:	e5943010 	ldr	r3, [r4, #16]
400197c0:	e3c33008 	bic	r3, r3, #8
400197c4:	e5843010 	str	r3, [r4, #16]
400197c8:	eb003eeb 	bl	4002937c <h3_gpio_fsel>
400197cc:	e3a01001 	mov	r1, #1
400197d0:	e3a0000e 	mov	r0, #14
400197d4:	eb003ee8 	bl	4002937c <h3_gpio_fsel>
400197d8:	e3a01001 	mov	r1, #1
400197dc:	e3a0000f 	mov	r0, #15
400197e0:	eb003ee5 	bl	4002937c <h3_gpio_fsel>
400197e4:	e5943010 	ldr	r3, [r4, #16]
400197e8:	e3a01001 	mov	r1, #1
400197ec:	e3a00010 	mov	r0, #16
400197f0:	e3c33a02 	bic	r3, r3, #8192	; 0x2000
400197f4:	e5843010 	str	r3, [r4, #16]
400197f8:	e5943010 	ldr	r3, [r4, #16]
400197fc:	e3c33901 	bic	r3, r3, #16384	; 0x4000
40019800:	e5843010 	str	r3, [r4, #16]
40019804:	e5943010 	ldr	r3, [r4, #16]
40019808:	e3c33902 	bic	r3, r3, #32768	; 0x8000
4001980c:	e5843010 	str	r3, [r4, #16]
40019810:	eb003ed9 	bl	4002937c <h3_gpio_fsel>
40019814:	e3a01001 	mov	r1, #1
40019818:	e3a00012 	mov	r0, #18
4001981c:	eb003ed6 	bl	4002937c <h3_gpio_fsel>
40019820:	e3a01001 	mov	r1, #1
40019824:	e3a00013 	mov	r0, #19
40019828:	eb003ed3 	bl	4002937c <h3_gpio_fsel>
4001982c:	e5943010 	ldr	r3, [r4, #16]
40019830:	e3c33801 	bic	r3, r3, #65536	; 0x10000
40019834:	e5843010 	str	r3, [r4, #16]
40019838:	e5943010 	ldr	r3, [r4, #16]
4001983c:	e3c33701 	bic	r3, r3, #262144	; 0x40000
40019840:	e5843010 	str	r3, [r4, #16]
40019844:	e5943010 	ldr	r3, [r4, #16]
40019848:	e3c33702 	bic	r3, r3, #524288	; 0x80000
4001984c:	e5843010 	str	r3, [r4, #16]
40019850:	e5953000 	ldr	r3, [r5]
40019854:	e5950004 	ldr	r0, [r5, #4]
40019858:	e59f40bc 	ldr	r4, [pc, #188]	; 4001991c <RgbPanel::PlatformInit()+0x260>
4001985c:	e0000390 	mul	r0, r0, r3
40019860:	e59f50b8 	ldr	r5, [pc, #184]	; 40019920 <RgbPanel::PlatformInit()+0x264>
40019864:	e3a03054 	mov	r3, #84	; 0x54
40019868:	e0030093 	mul	r3, r3, r0
4001986c:	e5843000 	str	r3, [r4]
40019870:	e373022e 	cmn	r3, #-536870910	; 0xe0000002
40019874:	93a03e15 	movls	r3, #336	; 0x150
40019878:	83e00000 	mvnhi	r0, #0
4001987c:	90000093 	mulls	r0, r3, r0
40019880:	eb004ed5 	bl	4002d3dc <operator new[](unsigned int)>
40019884:	e5850000 	str	r0, [r5]
40019888:	e5940000 	ldr	r0, [r4]
4001988c:	e370022e 	cmn	r0, #-536870910	; 0xe0000002
40019890:	91a00100 	lslls	r0, r0, #2
40019894:	83e00000 	mvnhi	r0, #0
40019898:	eb004ecf 	bl	4002d3dc <operator new[](unsigned int)>
4001989c:	e59f3080 	ldr	r3, [pc, #128]	; 40019924 <RgbPanel::PlatformInit()+0x268>
400198a0:	e594c000 	ldr	ip, [r4]
400198a4:	e5830000 	str	r0, [r3]
400198a8:	e3a03000 	mov	r3, #0
400198ac:	e5951000 	ldr	r1, [r5]
400198b0:	e1a02003 	mov	r2, r3
400198b4:	e15c0003 	cmp	ip, r3
400198b8:	0a000003 	beq	400198cc <RgbPanel::PlatformInit()+0x210>
400198bc:	e7812103 	str	r2, [r1, r3, lsl #2]
400198c0:	e7802103 	str	r2, [r0, r3, lsl #2]
400198c4:	e2833001 	add	r3, r3, #1
400198c8:	eafffff9 	b	400198b4 <RgbPanel::PlatformInit()+0x1f8>
400198cc:	e3a00c01 	mov	r0, #256	; 0x100
400198d0:	eb004ec1 	bl	4002d3dc <operator new[](unsigned int)>
400198d4:	e59f304c 	ldr	r3, [pc, #76]	; 40019928 <RgbPanel::PlatformInit()+0x26c>
400198d8:	e3a010ff 	mov	r1, #255	; 0xff
400198dc:	e5830000 	str	r0, [r3]
400198e0:	e2400001 	sub	r0, r0, #1
400198e4:	e3a03000 	mov	r3, #0
400198e8:	e732f113 	udiv	r2, r3, r1
400198ec:	e5e02001 	strb	r2, [r0, #1]!
400198f0:	e2833054 	add	r3, r3, #84	; 0x54
400198f4:	e3530b15 	cmp	r3, #21504	; 0x5400
400198f8:	1afffffa 	bne	400198e8 <RgbPanel::PlatformInit()+0x22c>
400198fc:	e8bd8070 	pop	{r4, r5, r6, pc}
40019900:	01c20800 	biceq	r0, r2, r0, lsl #16
40019904:	40058980 	andmi	r8, r5, r0, lsl #19
40019908:	400589a0 	andmi	r8, r5, r0, lsr #19
4001990c:	4005898c 	andmi	r8, r5, ip, lsl #19
40019910:	400589a4 	andmi	r8, r5, r4, lsr #19
40019914:	4005899c 	mulmi	r5, ip, r9
40019918:	40058998 	mulmi	r5, r8, r9
4001991c:	40058988 	andmi	r8, r5, r8, lsl #19
40019920:	40058990 	mulmi	r5, r0, r9
40019924:	40058994 	mulmi	r5, r4, r9
40019928:	40058984 	andmi	r8, r5, r4, lsl #19

4001992c <RgbPanel::PlatformCleanUp()>:
4001992c:	e59f303c 	ldr	r3, [pc, #60]	; 40019970 <RgbPanel::PlatformCleanUp()+0x44>
40019930:	e92d4010 	push	{r4, lr}
40019934:	e5930000 	ldr	r0, [r3]
40019938:	e3500000 	cmp	r0, #0
4001993c:	0a000000 	beq	40019944 <RgbPanel::PlatformCleanUp()+0x18>
40019940:	eb004ea2 	bl	4002d3d0 <operator delete[](void*)>
40019944:	e59f3028 	ldr	r3, [pc, #40]	; 40019974 <RgbPanel::PlatformCleanUp()+0x48>
40019948:	e5930000 	ldr	r0, [r3]
4001994c:	e3500000 	cmp	r0, #0
40019950:	0a000000 	beq	40019958 <RgbPanel::PlatformCleanUp()+0x2c>
40019954:	eb004e9d 	bl	4002d3d0 <operator delete[](void*)>
40019958:	e59f3018 	ldr	r3, [pc, #24]	; 40019978 <RgbPanel::PlatformCleanUp()+0x4c>
4001995c:	e5930000 	ldr	r0, [r3]
40019960:	e3500000 	cmp	r0, #0
40019964:	08bd8010 	popeq	{r4, pc}
40019968:	e8bd4010 	pop	{r4, lr}
4001996c:	ea004e97 	b	4002d3d0 <operator delete[](void*)>
40019970:	40058990 	mulmi	r5, r0, r9
40019974:	40058994 	mulmi	r5, r4, r9
40019978:	40058984 	andmi	r8, r5, r4, lsl #19

4001997c <RgbPanel::Start()>:
4001997c:	e5d03010 	ldrb	r3, [r0, #16]
40019980:	e3530000 	cmp	r3, #0
40019984:	112fff1e 	bxne	lr
40019988:	e92d4070 	push	{r4, r5, r6, lr}
4001998c:	e3a04001 	mov	r4, #1
40019990:	e59f506c 	ldr	r5, [pc, #108]	; 40019a04 <RgbPanel::Start()+0x88>
40019994:	e5c04010 	strb	r4, [r0, #16]
40019998:	e5d53000 	ldrb	r3, [r5]
4001999c:	e3530000 	cmp	r3, #0
400199a0:	18bd8070 	popne	{r4, r5, r6, pc}
400199a4:	e3a01007 	mov	r1, #7
400199a8:	e3a00008 	mov	r0, #8
400199ac:	eb003e72 	bl	4002937c <h3_gpio_fsel>
400199b0:	e3a01007 	mov	r1, #7
400199b4:	e3a00009 	mov	r0, #9
400199b8:	eb003e6f 	bl	4002937c <h3_gpio_fsel>
400199bc:	e3a01007 	mov	r1, #7
400199c0:	e3a00011 	mov	r0, #17
400199c4:	eb003e6c 	bl	4002937c <h3_gpio_fsel>
400199c8:	e3a01007 	mov	r1, #7
400199cc:	e3a00014 	mov	r0, #20
400199d0:	eb003e69 	bl	4002937c <h3_gpio_fsel>
400199d4:	e3a01007 	mov	r1, #7
400199d8:	e3a00015 	mov	r0, #21
400199dc:	eb003e66 	bl	4002937c <h3_gpio_fsel>
400199e0:	e59f0020 	ldr	r0, [pc, #32]	; 40019a08 <RgbPanel::Start()+0x8c>
400199e4:	eb004cab 	bl	4002cc98 <puts>
400199e8:	e59f101c 	ldr	r1, [pc, #28]	; 40019a0c <RgbPanel::Start()+0x90>
400199ec:	e1a00004 	mov	r0, r4
400199f0:	eb003ed4 	bl	40029548 <smp_start_core>
400199f4:	e59f0014 	ldr	r0, [pc, #20]	; 40019a10 <RgbPanel::Start()+0x94>
400199f8:	eb004ca6 	bl	4002cc98 <puts>
400199fc:	e5c54000 	strb	r4, [r5]
40019a00:	e8bd8070 	pop	{r4, r5, r6, pc}
40019a04:	40058998 	mulmi	r5, r8, r9
40019a08:	40031c14 	andmi	r1, r3, r4, lsl ip
40019a0c:	40019548 	andmi	r9, r1, r8, asr #10
40019a10:	40031c32 	andmi	r1, r3, r2, lsr ip

40019a14 <RgbPanel::SetPixel(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)>:
40019a14:	e590c000 	ldr	ip, [r0]
40019a18:	e92d40f0 	push	{r4, r5, r6, r7, lr}
40019a1c:	e15c0001 	cmp	ip, r1
40019a20:	e5dd5014 	ldrb	r5, [sp, #20]
40019a24:	e5dde018 	ldrb	lr, [sp, #24]
40019a28:	98bd80f0 	popls	{r4, r5, r6, r7, pc}
40019a2c:	e5906004 	ldr	r6, [r0, #4]
40019a30:	e1560002 	cmp	r6, r2
40019a34:	98bd80f0 	popls	{r4, r5, r6, r7, pc}
40019a38:	e1a060a6 	lsr	r6, r6, #1
40019a3c:	e1a07001 	mov	r7, r1
40019a40:	e1560002 	cmp	r6, r2
40019a44:	e3081984 	movw	r1, #35204	; 0x8984
40019a48:	e3441005 	movt	r1, #16389	; 0x4005
40019a4c:	e5914000 	ldr	r4, [r1]
40019a50:	e0841003 	add	r1, r4, r3
40019a54:	e3083990 	movw	r3, #35216	; 0x8990
40019a58:	e3443005 	movt	r3, #16389	; 0x4005
40019a5c:	e0845005 	add	r5, r4, r5
40019a60:	e084400e 	add	r4, r4, lr
40019a64:	e593e000 	ldr	lr, [r3]
40019a68:	9a000015 	bls	40019ac4 <RgbPanel::SetPixel(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)+0xb0>
40019a6c:	e0020c92 	mul	r2, r2, ip
40019a70:	e3a03054 	mov	r3, #84	; 0x54
40019a74:	e0277293 	mla	r7, r3, r2, r7
40019a78:	e3a03000 	mov	r3, #0
40019a7c:	e02c739c 	mla	ip, ip, r3, r7
40019a80:	e5d16000 	ldrb	r6, [r1]
40019a84:	e79e210c 	ldr	r2, [lr, ip, lsl #2]
40019a88:	e1560003 	cmp	r6, r3
40019a8c:	e5d56000 	ldrb	r6, [r5]
40019a90:	e3c22a0e 	bic	r2, r2, #57344	; 0xe000
40019a94:	83822a02 	orrhi	r2, r2, #8192	; 0x2000
40019a98:	e1560003 	cmp	r6, r3
40019a9c:	e5d46000 	ldrb	r6, [r4]
40019aa0:	83822901 	orrhi	r2, r2, #16384	; 0x4000
40019aa4:	e1560003 	cmp	r6, r3
40019aa8:	e2833001 	add	r3, r3, #1
40019aac:	83822902 	orrhi	r2, r2, #32768	; 0x8000
40019ab0:	e3530054 	cmp	r3, #84	; 0x54
40019ab4:	e78e210c 	str	r2, [lr, ip, lsl #2]
40019ab8:	08bd80f0 	popeq	{r4, r5, r6, r7, pc}
40019abc:	e590c000 	ldr	ip, [r0]
40019ac0:	eaffffed 	b	40019a7c <RgbPanel::SetPixel(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)+0x68>
40019ac4:	e0423006 	sub	r3, r2, r6
40019ac8:	e3a02054 	mov	r2, #84	; 0x54
40019acc:	e003039c 	mul	r3, ip, r3
40019ad0:	e0277392 	mla	r7, r2, r3, r7
40019ad4:	e3a03000 	mov	r3, #0
40019ad8:	e02c7c93 	mla	ip, r3, ip, r7
40019adc:	e5d16000 	ldrb	r6, [r1]
40019ae0:	e79e210c 	ldr	r2, [lr, ip, lsl #2]
40019ae4:	e1560003 	cmp	r6, r3
40019ae8:	e5d56000 	ldrb	r6, [r5]
40019aec:	e3c2280d 	bic	r2, r2, #851968	; 0xd0000
40019af0:	83822801 	orrhi	r2, r2, #65536	; 0x10000
40019af4:	e1560003 	cmp	r6, r3
40019af8:	e5d46000 	ldrb	r6, [r4]
40019afc:	83822701 	orrhi	r2, r2, #262144	; 0x40000
40019b00:	e1560003 	cmp	r6, r3
40019b04:	e2833001 	add	r3, r3, #1
40019b08:	83822702 	orrhi	r2, r2, #524288	; 0x80000
40019b0c:	e3530054 	cmp	r3, #84	; 0x54
40019b10:	e78e210c 	str	r2, [lr, ip, lsl #2]
40019b14:	08bd80f0 	popeq	{r4, r5, r6, r7, pc}
40019b18:	e590c000 	ldr	ip, [r0]
40019b1c:	eaffffed 	b	40019ad8 <RgbPanel::SetPixel(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)+0xc4>

40019b20 <RgbPanel::Show()>:
40019b20:	e30829a4 	movw	r2, #35236	; 0x89a4
40019b24:	e3442005 	movt	r2, #16389	; 0x4005
40019b28:	f57ff05f 	dmb	sy
40019b2c:	e5d23000 	ldrb	r3, [r2]
40019b30:	e3530000 	cmp	r3, #0
40019b34:	1afffffb 	bne	40019b28 <RgbPanel::Show()+0x8>
40019b38:	e308398c 	movw	r3, #35212	; 0x898c
40019b3c:	e3a01001 	mov	r1, #1
40019b40:	e3443005 	movt	r3, #16389	; 0x4005
40019b44:	e5c21000 	strb	r1, [r2]
40019b48:	e5932000 	ldr	r2, [r3]
40019b4c:	e0822001 	add	r2, r2, r1
40019b50:	e5832000 	str	r2, [r3]
40019b54:	e12fff1e 	bx	lr

40019b58 <GPS::GPS(float, GPSModule)>:
40019b58:	eefd7ac0 	vcvt.s32.f32	s15, s0
40019b5c:	ee173a90 	vmov	r3, s15
40019b60:	e283200c 	add	r2, r3, #12
40019b64:	e352001a 	cmp	r2, #26
40019b68:	8a000023 	bhi	40019bfc <GPS::GPS(float, GPSModule)+0xa4>
40019b6c:	eef87ae7 	vcvt.f32.s32	s15, s15
40019b70:	eeb40a67 	vcmp.f32	s0, s15
40019b74:	eef1fa10 	vmrs	APSR_nzcv, fpscr
40019b78:	03a02ee1 	moveq	r2, #3600	; 0xe10
40019b7c:	00030392 	muleq	r3, r2, r3
40019b80:	0a000009 	beq	40019bac <GPS::GPS(float, GPSModule)+0x54>
40019b84:	e59f2090 	ldr	r2, [pc, #144]	; 40019c1c <GPS::GPS(float, GPSModule)+0xc4>
40019b88:	e3a03000 	mov	r3, #0
40019b8c:	ecf27a01 	vldmia	r2!, {s15}
40019b90:	eeb40a67 	vcmp.f32	s0, s15
40019b94:	eef1fa10 	vmrs	APSR_nzcv, fpscr
40019b98:	1a000014 	bne	40019bf0 <GPS::GPS(float, GPSModule)+0x98>
40019b9c:	eddf7a1d 	vldr	s15, [pc, #116]	; 40019c18 <GPS::GPS(float, GPSModule)+0xc0>
40019ba0:	ee200a27 	vmul.f32	s0, s0, s15
40019ba4:	eefd7ac0 	vcvt.s32.f32	s15, s0
40019ba8:	ee173a90 	vmov	r3, s15
40019bac:	e5803000 	str	r3, [r0]
40019bb0:	e3a02d96 	mov	r2, #9600	; 0x2580
40019bb4:	e5801004 	str	r1, [r0, #4]
40019bb8:	e3a03000 	mov	r3, #0
40019bbc:	e1c020f8 	strd	r2, [r0, #8]
40019bc0:	e1c033b4 	strh	r3, [r0, #52]	; 0x34
40019bc4:	e3a02003 	mov	r2, #3
40019bc8:	e5802040 	str	r2, [r0, #64]	; 0x40
40019bcc:	e2801034 	add	r1, r0, #52	; 0x34
40019bd0:	e5802044 	str	r2, [r0, #68]	; 0x44
40019bd4:	e59f2044 	ldr	r2, [pc, #68]	; 40019c20 <GPS::GPS(float, GPSModule)+0xc8>
40019bd8:	e5820000 	str	r0, [r2]
40019bdc:	e2802010 	add	r2, r0, #16
40019be0:	e1520001 	cmp	r2, r1
40019be4:	0a000006 	beq	40019c04 <GPS::GPS(float, GPSModule)+0xac>
40019be8:	e4c23001 	strb	r3, [r2], #1
40019bec:	eafffffb 	b	40019be0 <GPS::GPS(float, GPSModule)+0x88>
40019bf0:	e2833001 	add	r3, r3, #1
40019bf4:	e353000b 	cmp	r3, #11
40019bf8:	1affffe3 	bne	40019b8c <GPS::GPS(float, GPSModule)+0x34>
40019bfc:	e3a03000 	mov	r3, #0
40019c00:	eaffffe9 	b	40019bac <GPS::GPS(float, GPSModule)+0x54>
40019c04:	e3a02002 	mov	r2, #2
40019c08:	e1c021fc 	strd	r2, [r0, #28]
40019c0c:	e3a0307d 	mov	r3, #125	; 0x7d
40019c10:	e5803024 	str	r3, [r0, #36]	; 0x24
40019c14:	e12fff1e 	bx	lr
40019c18:	45610000 	strbmi	r0, [r1, #-0]!
40019c1c:	40031c3c 	andmi	r1, r3, ip, lsr ip
40019c20:	400589a8 	andmi	r8, r5, r8, lsr #19

40019c24 <GPS::GetTag(char const*)>:
40019c24:	e92d4030 	push	{r4, r5, lr}
40019c28:	e3a00000 	mov	r0, #0
40019c2c:	e59f3034 	ldr	r3, [pc, #52]	; 40019c68 <GPS::GetTag(char const*)+0x44>
40019c30:	e281e002 	add	lr, r1, #2
40019c34:	e243c001 	sub	ip, r3, #1
40019c38:	e2412001 	sub	r2, r1, #1
40019c3c:	e152000e 	cmp	r2, lr
40019c40:	08bd8030 	popeq	{r4, r5, pc}
40019c44:	e5fc5001 	ldrb	r5, [ip, #1]!
40019c48:	e5f24001 	ldrb	r4, [r2, #1]!
40019c4c:	e1550004 	cmp	r5, r4
40019c50:	0afffff9 	beq	40019c3c <GPS::GetTag(char const*)+0x18>
40019c54:	e2800001 	add	r0, r0, #1
40019c58:	e2833003 	add	r3, r3, #3
40019c5c:	e3500003 	cmp	r0, #3
40019c60:	1afffff3 	bne	40019c34 <GPS::GetTag(char const*)+0x10>
40019c64:	e8bd8030 	pop	{r4, r5, pc}
40019c68:	40031c68 	andmi	r1, r3, r8, ror #24

40019c6c <GPS::ParseDecimal(char const*, unsigned long&)>:
40019c6c:	e92d4030 	push	{r4, r5, lr}
40019c70:	e3a00000 	mov	r0, #0
40019c74:	e5d1e000 	ldrb	lr, [r1]
40019c78:	e3a0400a 	mov	r4, #10
40019c7c:	e24e302d 	sub	r3, lr, #45	; 0x2d
40019c80:	e16f3f13 	clz	r3, r3
40019c84:	e1a032a3 	lsr	r3, r3, #5
40019c88:	e5823000 	str	r3, [r2]
40019c8c:	e5923000 	ldr	r3, [r2]
40019c90:	e7d1c003 	ldrb	ip, [r1, r3]
40019c94:	e20c50fd 	and	r5, ip, #253	; 0xfd
40019c98:	e355002c 	cmp	r5, #44	; 0x2c
40019c9c:	0a000004 	beq	40019cb4 <GPS::ParseDecimal(char const*, unsigned long&)+0x48>
40019ca0:	e020c094 	mla	r0, r4, r0, ip
40019ca4:	e2833001 	add	r3, r3, #1
40019ca8:	e5823000 	str	r3, [r2]
40019cac:	e2400030 	sub	r0, r0, #48	; 0x30
40019cb0:	eafffff5 	b	40019c8c <GPS::ParseDecimal(char const*, unsigned long&)+0x20>
40019cb4:	e35c002e 	cmp	ip, #46	; 0x2e
40019cb8:	1a00000c 	bne	40019cf0 <GPS::ParseDecimal(char const*, unsigned long&)+0x84>
40019cbc:	e283c001 	add	ip, r3, #1
40019cc0:	e3a0400a 	mov	r4, #10
40019cc4:	e582c000 	str	ip, [r2]
40019cc8:	e2835002 	add	r5, r3, #2
40019ccc:	e7d1c00c 	ldrb	ip, [r1, ip]
40019cd0:	e2833003 	add	r3, r3, #3
40019cd4:	e5825000 	str	r5, [r2]
40019cd8:	e020c094 	mla	r0, r4, r0, ip
40019cdc:	e240c030 	sub	ip, r0, #48	; 0x30
40019ce0:	e7d10005 	ldrb	r0, [r1, r5]
40019ce4:	e5823000 	str	r3, [r2]
40019ce8:	e0200c94 	mla	r0, r4, ip, r0
40019cec:	e2400030 	sub	r0, r0, #48	; 0x30
40019cf0:	e35e002d 	cmp	lr, #45	; 0x2d
40019cf4:	02600000 	rsbeq	r0, r0, #0
40019cf8:	e8bd8030 	pop	{r4, r5, pc}

40019cfc <GPS::SetTime(long)>:
40019cfc:	e3510000 	cmp	r1, #0
40019d00:	012fff1e 	bxeq	lr
40019d04:	e59f3034 	ldr	r3, [pc, #52]	; 40019d40 <GPS::SetTime(long)+0x44>
40019d08:	e3a02064 	mov	r2, #100	; 0x64
40019d0c:	e711f211 	sdiv	r1, r1, r2
40019d10:	e5933084 	ldr	r3, [r3, #132]	; 0x84
40019d14:	e5803038 	str	r3, [r0, #56]	; 0x38
40019d18:	e3a03001 	mov	r3, #1
40019d1c:	e5c03034 	strb	r3, [r0, #52]	; 0x34
40019d20:	e713f211 	sdiv	r3, r1, r2
40019d24:	e0611392 	mls	r1, r2, r3, r1
40019d28:	e5801010 	str	r1, [r0, #16]
40019d2c:	e711f213 	sdiv	r1, r3, r2
40019d30:	e0633192 	mls	r3, r2, r1, r3
40019d34:	e5801018 	str	r1, [r0, #24]
40019d38:	e5803014 	str	r3, [r0, #20]
40019d3c:	e12fff1e 	bx	lr
40019d40:	01c20c00 	biceq	r0, r2, r0, lsl #24

40019d44 <GPS::SetDate(long)>:
40019d44:	e3510000 	cmp	r1, #0
40019d48:	012fff1e 	bxeq	lr
40019d4c:	e59f3038 	ldr	r3, [pc, #56]	; 40019d8c <GPS::SetDate(long)+0x48>
40019d50:	e3a02064 	mov	r2, #100	; 0x64
40019d54:	e5933084 	ldr	r3, [r3, #132]	; 0x84
40019d58:	e580303c 	str	r3, [r0, #60]	; 0x3c
40019d5c:	e3a03001 	mov	r3, #1
40019d60:	e5c03035 	strb	r3, [r0, #53]	; 0x35
40019d64:	e713f211 	sdiv	r3, r1, r2
40019d68:	e0611392 	mls	r1, r2, r3, r1
40019d6c:	e0811002 	add	r1, r1, r2
40019d70:	e5801024 	str	r1, [r0, #36]	; 0x24
40019d74:	e711f213 	sdiv	r1, r3, r2
40019d78:	e0633192 	mls	r3, r2, r1, r3
40019d7c:	e580101c 	str	r1, [r0, #28]
40019d80:	e2433001 	sub	r3, r3, #1
40019d84:	e5803020 	str	r3, [r0, #32]
40019d88:	e12fff1e 	bx	lr
40019d8c:	01c20c00 	biceq	r0, r2, r0, lsl #24

40019d90 <GPS::Start()>:
40019d90:	e92d4070 	push	{r4, r5, r6, lr}
40019d94:	e1a04000 	mov	r4, r0
40019d98:	eb000244 	bl	4001a6b0 <GPS::UartInit()>
40019d9c:	e5941004 	ldr	r1, [r4, #4]
40019da0:	e3510002 	cmp	r1, #2
40019da4:	ca000019 	bgt	40019e10 <GPS::Start()+0x80>
40019da8:	e59f5090 	ldr	r5, [pc, #144]	; 40019e40 <GPS::Start()+0xb0>
40019dac:	e3a06052 	mov	r6, #82	; 0x52
40019db0:	e1a00004 	mov	r0, r4
40019db4:	e0215196 	mla	r1, r6, r1, r5
40019db8:	eb000258 	bl	4001a720 <GPS::UartSend(char const*)>
40019dbc:	e59f0080 	ldr	r0, [pc, #128]	; 40019e44 <GPS::Start()+0xb4>
40019dc0:	e3a01000 	mov	r1, #0
40019dc4:	eb00478c 	bl	4002bbfc <udelay(unsigned long, unsigned long)>
40019dc8:	e59f1078 	ldr	r1, [pc, #120]	; 40019e48 <GPS::Start()+0xb8>
40019dcc:	e1a00004 	mov	r0, r4
40019dd0:	eb00024a 	bl	4001a700 <GPS::UartSetBaud(unsigned long)>
40019dd4:	e5941004 	ldr	r1, [r4, #4]
40019dd8:	e1a00004 	mov	r0, r4
40019ddc:	e0215196 	mla	r1, r6, r1, r5
40019de0:	e59f5064 	ldr	r5, [pc, #100]	; 40019e4c <GPS::Start()+0xbc>
40019de4:	eb00024d 	bl	4001a720 <GPS::UartSend(char const*)>
40019de8:	e5956084 	ldr	r6, [r5, #132]	; 0x84
40019dec:	e5953084 	ldr	r3, [r5, #132]	; 0x84
40019df0:	e0433006 	sub	r3, r3, r6
40019df4:	e3530ffa 	cmp	r3, #1000	; 0x3e8
40019df8:	2a000009 	bcs	40019e24 <GPS::Start()+0x94>
40019dfc:	e1a00004 	mov	r0, r4
40019e00:	eb000249 	bl	4001a72c <GPS::UartGetSentence()>
40019e04:	e584000c 	str	r0, [r4, #12]
40019e08:	e3500000 	cmp	r0, #0
40019e0c:	0afffff6 	beq	40019dec <GPS::Start()+0x5c>
40019e10:	e3a01000 	mov	r1, #0
40019e14:	e1a00004 	mov	r0, r4
40019e18:	e5841040 	str	r1, [r4, #64]	; 0x40
40019e1c:	e8bd4070 	pop	{r4, r5, r6, lr}
40019e20:	eaffad11 	b	4000526c <GPS::Display(gps::Status)>
40019e24:	e594300c 	ldr	r3, [r4, #12]
40019e28:	e3530000 	cmp	r3, #0
40019e2c:	1afffff7 	bne	40019e10 <GPS::Start()+0x80>
40019e30:	e3a01d96 	mov	r1, #9600	; 0x2580
40019e34:	e1a00004 	mov	r0, r4
40019e38:	eb000230 	bl	4001a700 <GPS::UartSetBaud(unsigned long)>
40019e3c:	eafffff3 	b	40019e10 <GPS::Start()+0x80>
40019e40:	40031cfb 	strdmi	r1, [r3], -fp
40019e44:	000186a0 	andeq	r8, r1, r0, lsr #13
40019e48:	0001c200 	andeq	ip, r1, r0, lsl #4
40019e4c:	01c20c00 	biceq	r0, r2, r0, lsl #24

40019e50 <GPS::Run()>:
40019e50:	e92d41f3 	push	{r0, r1, r4, r5, r6, r7, r8, lr}
40019e54:	e1a04000 	mov	r4, r0
40019e58:	eb000233 	bl	4001a72c <GPS::UartGetSentence()>
40019e5c:	e584000c 	str	r0, [r4, #12]
40019e60:	e3500000 	cmp	r0, #0
40019e64:	0a000040 	beq	40019f6c <GPS::Run()+0x11c>
40019e68:	e2801003 	add	r1, r0, #3
40019e6c:	e1a00004 	mov	r0, r4
40019e70:	ebffff6b 	bl	40019c24 <GPS::GetTag(char const*)>
40019e74:	e3500003 	cmp	r0, #3
40019e78:	e1a06000 	mov	r6, r0
40019e7c:	0a00003a 	beq	40019f6c <GPS::Run()+0x11c>
40019e80:	e3a07c01 	mov	r7, #256	; 0x100
40019e84:	e3a05007 	mov	r5, #7
40019e88:	e3a08000 	mov	r8, #0
40019e8c:	e1863007 	orr	r3, r6, r7
40019e90:	e594200c 	ldr	r2, [r4, #12]
40019e94:	e3530c02 	cmp	r3, #512	; 0x200
40019e98:	e58d8004 	str	r8, [sp, #4]
40019e9c:	e0821005 	add	r1, r2, r5
40019ea0:	0a00002a 	beq	40019f50 <GPS::Run()+0x100>
40019ea4:	8a000017 	bhi	40019f08 <GPS::Run()+0xb8>
40019ea8:	e2433c01 	sub	r3, r3, #256	; 0x100
40019eac:	e3530002 	cmp	r3, #2
40019eb0:	9a00001d 	bls	40019f2c <GPS::Run()+0xdc>
40019eb4:	e594100c 	ldr	r1, [r4, #12]
40019eb8:	e0813005 	add	r3, r1, r5
40019ebc:	e1a02003 	mov	r2, r3
40019ec0:	e2833001 	add	r3, r3, #1
40019ec4:	e0435001 	sub	r5, r3, r1
40019ec8:	e5d22000 	ldrb	r2, [r2]
40019ecc:	e242002a 	sub	r0, r2, #42	; 0x2a
40019ed0:	e31000fd 	tst	r0, #253	; 0xfd
40019ed4:	1afffff8 	bne	40019ebc <GPS::Run()+0x6c>
40019ed8:	e352002a 	cmp	r2, #42	; 0x2a
40019edc:	e2877c01 	add	r7, r7, #256	; 0x100
40019ee0:	1affffe9 	bne	40019e8c <GPS::Run()+0x3c>
40019ee4:	e5941040 	ldr	r1, [r4, #64]	; 0x40
40019ee8:	e5943044 	ldr	r3, [r4, #68]	; 0x44
40019eec:	e1510003 	cmp	r1, r3
40019ef0:	0a00001d 	beq	40019f6c <GPS::Run()+0x11c>
40019ef4:	e5841044 	str	r1, [r4, #68]	; 0x44
40019ef8:	e1a00004 	mov	r0, r4
40019efc:	e28dd008 	add	sp, sp, #8
40019f00:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
40019f04:	eaffacd8 	b	4000526c <GPS::Display(gps::Status)>
40019f08:	e3530c09 	cmp	r3, #2304	; 0x900
40019f0c:	1affffe8 	bne	40019eb4 <GPS::Run()+0x64>
40019f10:	e28d2004 	add	r2, sp, #4
40019f14:	e1a00004 	mov	r0, r4
40019f18:	ebffff53 	bl	40019c6c <GPS::ParseDecimal(char const*, unsigned long&)>
40019f1c:	e1a01000 	mov	r1, r0
40019f20:	e1a00004 	mov	r0, r4
40019f24:	ebffff86 	bl	40019d44 <GPS::SetDate(long)>
40019f28:	ea000005 	b	40019f44 <GPS::Run()+0xf4>
40019f2c:	e28d2004 	add	r2, sp, #4
40019f30:	e1a00004 	mov	r0, r4
40019f34:	ebffff4c 	bl	40019c6c <GPS::ParseDecimal(char const*, unsigned long&)>
40019f38:	e1a01000 	mov	r1, r0
40019f3c:	e1a00004 	mov	r0, r4
40019f40:	ebffff6d 	bl	40019cfc <GPS::SetTime(long)>
40019f44:	e59d3004 	ldr	r3, [sp, #4]
40019f48:	e0855003 	add	r5, r5, r3
40019f4c:	eaffffd8 	b	40019eb4 <GPS::Run()+0x64>
40019f50:	e7d23005 	ldrb	r3, [r2, r5]
40019f54:	e2855001 	add	r5, r5, #1
40019f58:	e3530041 	cmp	r3, #65	; 0x41
40019f5c:	03a03002 	moveq	r3, #2
40019f60:	13a03001 	movne	r3, #1
40019f64:	e5843040 	str	r3, [r4, #64]	; 0x40
40019f68:	eaffffd1 	b	40019eb4 <GPS::Run()+0x64>
40019f6c:	e28dd008 	add	sp, sp, #8
40019f70:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

40019f74 <GPSParamsStore::Update(gpsparams::Params const*)>:
40019f74:	e92d401f 	push	{r0, r1, r2, r3, r4, lr}
40019f78:	e1a03000 	mov	r3, r0
40019f7c:	e59f0024 	ldr	r0, [pc, #36]	; 40019fa8 <GPSParamsStore::Update(gpsparams::Params const*)+0x34>
40019f80:	e3a02000 	mov	r2, #0
40019f84:	e58d2008 	str	r2, [sp, #8]
40019f88:	e3a01009 	mov	r1, #9
40019f8c:	e58d1000 	str	r1, [sp]
40019f90:	e3a01017 	mov	r1, #23
40019f94:	e58d2004 	str	r2, [sp, #4]
40019f98:	e5900000 	ldr	r0, [r0]
40019f9c:	eb0009f1 	bl	4001c768 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
40019fa0:	e28dd014 	add	sp, sp, #20
40019fa4:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40019fa8:	40034084 	andmi	r4, r3, r4, lsl #1

40019fac <GPSParamsStore::Copy(gpsparams::Params*)>:
40019fac:	e92d4007 	push	{r0, r1, r2, lr}
40019fb0:	e1a02000 	mov	r2, r0
40019fb4:	e3a01001 	mov	r1, #1
40019fb8:	e3a00000 	mov	r0, #0
40019fbc:	e1cd00f0 	strd	r0, [sp]
40019fc0:	e59f0014 	ldr	r0, [pc, #20]	; 40019fdc <GPSParamsStore::Copy(gpsparams::Params*)+0x30>
40019fc4:	e3a03009 	mov	r3, #9
40019fc8:	e3a01017 	mov	r1, #23
40019fcc:	e5900000 	ldr	r0, [r0]
40019fd0:	eb000a06 	bl	4001c7f0 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)>
40019fd4:	e28dd00c 	add	sp, sp, #12
40019fd8:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40019fdc:	40034084 	andmi	r4, r3, r4, lsl #1

40019fe0 <GPSParams::GPSParams()>:
40019fe0:	e1a03000 	mov	r3, r0
40019fe4:	e2801009 	add	r1, r0, #9
40019fe8:	e3a02000 	mov	r2, #0
40019fec:	e1530001 	cmp	r3, r1
40019ff0:	14c32001 	strbne	r2, [r3], #1
40019ff4:	1afffffc 	bne	40019fec <GPSParams::GPSParams()+0xc>
40019ff8:	e3a03003 	mov	r3, #3
40019ffc:	e5c03004 	strb	r3, [r0, #4]
4001a000:	e12fff1e 	bx	lr

4001a004 <GPSParams::Load()>:
4001a004:	e3a03000 	mov	r3, #0
4001a008:	e1a02000 	mov	r2, r0
4001a00c:	e92d4013 	push	{r0, r1, r4, lr}
4001a010:	e1a04000 	mov	r4, r0
4001a014:	e5c03000 	strb	r3, [r0]
4001a018:	e5c03001 	strb	r3, [r0, #1]
4001a01c:	e5c03002 	strb	r3, [r0, #2]
4001a020:	e5c03003 	strb	r3, [r0, #3]
4001a024:	e1a0000d 	mov	r0, sp
4001a028:	e59f1034 	ldr	r1, [pc, #52]	; 4001a064 <GPSParams::Load()+0x60>
4001a02c:	eb002cee 	bl	400253ec <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
4001a030:	e59f1030 	ldr	r1, [pc, #48]	; 4001a068 <GPSParams::Load()+0x64>
4001a034:	e1a0000d 	mov	r0, sp
4001a038:	eb002cee 	bl	400253f8 <ReadConfigFile::Read(char const*)>
4001a03c:	e3500000 	cmp	r0, #0
4001a040:	e1a00004 	mov	r0, r4
4001a044:	0a000004 	beq	4001a05c <GPSParams::Load()+0x58>
4001a048:	ebffffc9 	bl	40019f74 <GPSParamsStore::Update(gpsparams::Params const*)>
4001a04c:	e1a0000d 	mov	r0, sp
4001a050:	eb002ce7 	bl	400253f4 <ReadConfigFile::~ReadConfigFile()>
4001a054:	e28dd008 	add	sp, sp, #8
4001a058:	e8bd8010 	pop	{r4, pc}
4001a05c:	ebffffd2 	bl	40019fac <GPSParamsStore::Copy(gpsparams::Params*)>
4001a060:	eafffff9 	b	4001a04c <GPSParams::Load()+0x48>
4001a064:	4001a1d8 	ldrdmi	sl, [r1], -r8
4001a068:	40031c9f 	mulmi	r3, pc, ip	; <UNPREDICTABLE>

4001a06c <GPSParams::Load(char const*, unsigned long)>:
4001a06c:	e3a03000 	mov	r3, #0
4001a070:	e92d4073 	push	{r0, r1, r4, r5, r6, lr}
4001a074:	e1a04000 	mov	r4, r0
4001a078:	e5c03000 	strb	r3, [r0]
4001a07c:	e1a05001 	mov	r5, r1
4001a080:	e5c03001 	strb	r3, [r0, #1]
4001a084:	e1a06002 	mov	r6, r2
4001a088:	e5c03002 	strb	r3, [r0, #2]
4001a08c:	e1a02000 	mov	r2, r0
4001a090:	e5c03003 	strb	r3, [r0, #3]
4001a094:	e1a0000d 	mov	r0, sp
4001a098:	e59f1028 	ldr	r1, [pc, #40]	; 4001a0c8 <GPSParams::Load(char const*, unsigned long)+0x5c>
4001a09c:	eb002cd2 	bl	400253ec <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
4001a0a0:	e1a02006 	mov	r2, r6
4001a0a4:	e1a01005 	mov	r1, r5
4001a0a8:	e1a0000d 	mov	r0, sp
4001a0ac:	eb002cfb 	bl	400254a0 <ReadConfigFile::Read(char const*, unsigned int)>
4001a0b0:	e1a00004 	mov	r0, r4
4001a0b4:	ebffffae 	bl	40019f74 <GPSParamsStore::Update(gpsparams::Params const*)>
4001a0b8:	e1a0000d 	mov	r0, sp
4001a0bc:	eb002ccc 	bl	400253f4 <ReadConfigFile::~ReadConfigFile()>
4001a0c0:	e28dd008 	add	sp, sp, #8
4001a0c4:	e8bd8070 	pop	{r4, r5, r6, pc}
4001a0c8:	4001a1d8 	ldrdmi	sl, [r1], -r8

4001a0cc <GPSParams::callbackFunction(char const*)>:
4001a0cc:	e92d4030 	push	{r4, r5, lr}
4001a0d0:	e24dd024 	sub	sp, sp, #36	; 0x24
4001a0d4:	e1a05001 	mov	r5, r1
4001a0d8:	e3a0300f 	mov	r3, #15
4001a0dc:	e58d3008 	str	r3, [sp, #8]
4001a0e0:	e1a04000 	mov	r4, r0
4001a0e4:	e59f10e0 	ldr	r1, [pc, #224]	; 4001a1cc <GPSParams::callbackFunction(char const*)+0x100>
4001a0e8:	e28d3008 	add	r3, sp, #8
4001a0ec:	e28d2010 	add	r2, sp, #16
4001a0f0:	e1a00005 	mov	r0, r5
4001a0f4:	eb002d16 	bl	40025554 <Sscan::Char(char const*, char const*, char*, unsigned long&)>
4001a0f8:	e3500000 	cmp	r0, #0
4001a0fc:	1a00000e 	bne	4001a13c <GPSParams::callbackFunction(char const*)+0x70>
4001a100:	e59d3008 	ldr	r3, [sp, #8]
4001a104:	e28d2020 	add	r2, sp, #32
4001a108:	e0823003 	add	r3, r2, r3
4001a10c:	e5430010 	strb	r0, [r3, #-16]
4001a110:	e28d0010 	add	r0, sp, #16
4001a114:	eb0000f3 	bl	4001a4e8 <GPS::GetModule(char const*)>
4001a118:	e5943000 	ldr	r3, [r4]
4001a11c:	e6ef0070 	uxtb	r0, r0
4001a120:	e5c40004 	strb	r0, [r4, #4]
4001a124:	e3500003 	cmp	r0, #3
4001a128:	03c33001 	biceq	r3, r3, #1
4001a12c:	13833001 	orrne	r3, r3, #1
4001a130:	e5843000 	str	r3, [r4]
4001a134:	e28dd024 	add	sp, sp, #36	; 0x24
4001a138:	e8bd8030 	pop	{r4, r5, pc}
4001a13c:	e59f108c 	ldr	r1, [pc, #140]	; 4001a1d0 <GPSParams::callbackFunction(char const*)+0x104>
4001a140:	e28d2007 	add	r2, sp, #7
4001a144:	e1a00005 	mov	r0, r5
4001a148:	eb002de3 	bl	400258dc <Sscan::Uint8(char const*, char const*, unsigned char&)>
4001a14c:	e3500000 	cmp	r0, #0
4001a150:	1a000005 	bne	4001a16c <GPSParams::callbackFunction(char const*)+0xa0>
4001a154:	e5dd2007 	ldrb	r2, [sp, #7]
4001a158:	e5943000 	ldr	r3, [r4]
4001a15c:	e3520000 	cmp	r2, #0
4001a160:	03c33002 	biceq	r3, r3, #2
4001a164:	13833002 	orrne	r3, r3, #2
4001a168:	eafffff0 	b	4001a130 <GPSParams::callbackFunction(char const*)+0x64>
4001a16c:	e59f1060 	ldr	r1, [pc, #96]	; 4001a1d4 <GPSParams::callbackFunction(char const*)+0x108>
4001a170:	e28d200c 	add	r2, sp, #12
4001a174:	e1a00005 	mov	r0, r5
4001a178:	eb002d21 	bl	40025604 <Sscan::Float(char const*, char const*, float&)>
4001a17c:	e3500000 	cmp	r0, #0
4001a180:	1affffeb 	bne	4001a134 <GPSParams::callbackFunction(char const*)+0x68>
4001a184:	eddd7a03 	vldr	s15, [sp, #12]
4001a188:	e5943000 	ldr	r3, [r4]
4001a18c:	eebd7ae7 	vcvt.s32.f32	s14, s15
4001a190:	ee171a10 	vmov	r1, s14
4001a194:	e281200c 	add	r2, r1, #12
4001a198:	e352001a 	cmp	r2, #26
4001a19c:	83a02000 	movhi	r2, #0
4001a1a0:	93a02001 	movls	r2, #1
4001a1a4:	e3510000 	cmp	r1, #0
4001a1a8:	03a02000 	moveq	r2, #0
4001a1ac:	e3520000 	cmp	r2, #0
4001a1b0:	03c33004 	biceq	r3, r3, #4
4001a1b4:	03a02000 	moveq	r2, #0
4001a1b8:	1e172a90 	vmovne	r2, s15
4001a1bc:	13833004 	orrne	r3, r3, #4
4001a1c0:	05842005 	streq	r2, [r4, #5]
4001a1c4:	15842005 	strne	r2, [r4, #5]
4001a1c8:	eaffffd8 	b	4001a130 <GPSParams::callbackFunction(char const*)+0x64>
4001a1cc:	40031c98 	mulmi	r3, r8, ip
4001a1d0:	40031c91 	mulmi	r3, r1, ip
4001a1d4:	40031c86 	andmi	r1, r3, r6, lsl #25

4001a1d8 <GPSParams::staticCallbackFunction(void*, char const*)>:
4001a1d8:	eaffffbb 	b	4001a0cc <GPSParams::callbackFunction(char const*)>

4001a1dc <GPSParams::Builder(gpsparams::Params const*, char*, unsigned long, unsigned long&)>:
4001a1dc:	e3510000 	cmp	r1, #0
4001a1e0:	e92d4070 	push	{r4, r5, r6, lr}
4001a1e4:	e1a04000 	mov	r4, r0
4001a1e8:	e24dd020 	sub	sp, sp, #32
4001a1ec:	e1a05002 	mov	r5, r2
4001a1f0:	e1a06003 	mov	r6, r3
4001a1f4:	0a000006 	beq	4001a214 <GPSParams::Builder(gpsparams::Params const*, char*, unsigned long, unsigned long&)+0x38>
4001a1f8:	e1a03000 	mov	r3, r0
4001a1fc:	e2810009 	add	r0, r1, #9
4001a200:	e1510000 	cmp	r1, r0
4001a204:	0a000003 	beq	4001a218 <GPSParams::Builder(gpsparams::Params const*, char*, unsigned long, unsigned long&)+0x3c>
4001a208:	e4d12001 	ldrb	r2, [r1], #1
4001a20c:	e4c32001 	strb	r2, [r3], #1
4001a210:	eafffffa 	b	4001a200 <GPSParams::Builder(gpsparams::Params const*, char*, unsigned long, unsigned long&)+0x24>
4001a214:	ebffff64 	bl	40019fac <GPSParamsStore::Copy(gpsparams::Params*)>
4001a218:	e59f120c 	ldr	r1, [pc, #524]	; 4001a42c <GPSParams::Builder(gpsparams::Params const*, char*, unsigned long, unsigned long&)+0x250>
4001a21c:	e1a02005 	mov	r2, r5
4001a220:	e1a03006 	mov	r3, r6
4001a224:	e28d0014 	add	r0, sp, #20
4001a228:	eb002b2f 	bl	40024eec <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)>
4001a22c:	e5d40004 	ldrb	r0, [r4, #4]
4001a230:	eb0000c6 	bl	4001a550 <GPS::GetModuleName(GPSModule)>
4001a234:	e1dd11ba 	ldrh	r1, [sp, #26]
4001a238:	e1a02000 	mov	r2, r0
4001a23c:	e1dd51b8 	ldrh	r5, [sp, #24]
4001a240:	e1510005 	cmp	r1, r5
4001a244:	2a000017 	bcs	4001a2a8 <GPSParams::Builder(gpsparams::Params const*, char*, unsigned long, unsigned long&)+0xcc>
4001a248:	e59d3014 	ldr	r3, [sp, #20]
4001a24c:	e0455001 	sub	r5, r5, r1
4001a250:	e0830001 	add	r0, r3, r1
4001a254:	e5941000 	ldr	r1, [r4]
4001a258:	e5dd301c 	ldrb	r3, [sp, #28]
4001a25c:	e3110001 	tst	r1, #1
4001a260:	1a000005 	bne	4001a27c <GPSParams::Builder(gpsparams::Params const*, char*, unsigned long, unsigned long&)+0xa0>
4001a264:	e3530000 	cmp	r3, #0
4001a268:	1a000005 	bne	4001a284 <GPSParams::Builder(gpsparams::Params const*, char*, unsigned long, unsigned long&)+0xa8>
4001a26c:	e58d2000 	str	r2, [sp]
4001a270:	e59f31b8 	ldr	r3, [pc, #440]	; 4001a430 <GPSParams::Builder(gpsparams::Params const*, char*, unsigned long, unsigned long&)+0x254>
4001a274:	e59f21b8 	ldr	r2, [pc, #440]	; 4001a434 <GPSParams::Builder(gpsparams::Params const*, char*, unsigned long, unsigned long&)+0x258>
4001a278:	ea000004 	b	4001a290 <GPSParams::Builder(gpsparams::Params const*, char*, unsigned long, unsigned long&)+0xb4>
4001a27c:	e3530000 	cmp	r3, #0
4001a280:	0a000019 	beq	4001a2ec <GPSParams::Builder(gpsparams::Params const*, char*, unsigned long, unsigned long&)+0x110>
4001a284:	e58d2000 	str	r2, [sp]
4001a288:	e59f31a0 	ldr	r3, [pc, #416]	; 4001a430 <GPSParams::Builder(gpsparams::Params const*, char*, unsigned long, unsigned long&)+0x254>
4001a28c:	e59f21a4 	ldr	r2, [pc, #420]	; 4001a438 <GPSParams::Builder(gpsparams::Params const*, char*, unsigned long, unsigned long&)+0x25c>
4001a290:	e1a01005 	mov	r1, r5
4001a294:	eb004a5a 	bl	4002cc04 <snprintf>
4001a298:	e1550000 	cmp	r5, r0
4001a29c:	a1dd31ba 	ldrhge	r3, [sp, #26]
4001a2a0:	a0830000 	addge	r0, r3, r0
4001a2a4:	a1cd01ba 	strhge	r0, [sp, #26]
4001a2a8:	e1dd11ba 	ldrh	r1, [sp, #26]
4001a2ac:	e1dd51b8 	ldrh	r5, [sp, #24]
4001a2b0:	e1510005 	cmp	r1, r5
4001a2b4:	2a00001d 	bcs	4001a330 <GPSParams::Builder(gpsparams::Params const*, char*, unsigned long, unsigned long&)+0x154>
4001a2b8:	e5943000 	ldr	r3, [r4]
4001a2bc:	e59d0014 	ldr	r0, [sp, #20]
4001a2c0:	e5dd201c 	ldrb	r2, [sp, #28]
4001a2c4:	e2133002 	ands	r3, r3, #2
4001a2c8:	e0800001 	add	r0, r0, r1
4001a2cc:	e0455001 	sub	r5, r5, r1
4001a2d0:	1a000009 	bne	4001a2fc <GPSParams::Builder(gpsparams::Params const*, char*, unsigned long, unsigned long&)+0x120>
4001a2d4:	e3520000 	cmp	r2, #0
4001a2d8:	1a000009 	bne	4001a304 <GPSParams::Builder(gpsparams::Params const*, char*, unsigned long, unsigned long&)+0x128>
4001a2dc:	e58d2000 	str	r2, [sp]
4001a2e0:	e59f3154 	ldr	r3, [pc, #340]	; 4001a43c <GPSParams::Builder(gpsparams::Params const*, char*, unsigned long, unsigned long&)+0x260>
4001a2e4:	e59f2154 	ldr	r2, [pc, #340]	; 4001a440 <GPSParams::Builder(gpsparams::Params const*, char*, unsigned long, unsigned long&)+0x264>
4001a2e8:	ea00000a 	b	4001a318 <GPSParams::Builder(gpsparams::Params const*, char*, unsigned long, unsigned long&)+0x13c>
4001a2ec:	e58d2000 	str	r2, [sp]
4001a2f0:	e59f3138 	ldr	r3, [pc, #312]	; 4001a430 <GPSParams::Builder(gpsparams::Params const*, char*, unsigned long, unsigned long&)+0x254>
4001a2f4:	e59f2148 	ldr	r2, [pc, #328]	; 4001a444 <GPSParams::Builder(gpsparams::Params const*, char*, unsigned long, unsigned long&)+0x268>
4001a2f8:	eaffffe4 	b	4001a290 <GPSParams::Builder(gpsparams::Params const*, char*, unsigned long, unsigned long&)+0xb4>
4001a2fc:	e3520000 	cmp	r2, #0
4001a300:	0a000020 	beq	4001a388 <GPSParams::Builder(gpsparams::Params const*, char*, unsigned long, unsigned long&)+0x1ac>
4001a304:	e2533000 	subs	r3, r3, #0
4001a308:	e59f2138 	ldr	r2, [pc, #312]	; 4001a448 <GPSParams::Builder(gpsparams::Params const*, char*, unsigned long, unsigned long&)+0x26c>
4001a30c:	13a03001 	movne	r3, #1
4001a310:	e58d3000 	str	r3, [sp]
4001a314:	e59f3120 	ldr	r3, [pc, #288]	; 4001a43c <GPSParams::Builder(gpsparams::Params const*, char*, unsigned long, unsigned long&)+0x260>
4001a318:	e1a01005 	mov	r1, r5
4001a31c:	eb004a38 	bl	4002cc04 <snprintf>
4001a320:	e1550000 	cmp	r5, r0
4001a324:	a1dd31ba 	ldrhge	r3, [sp, #26]
4001a328:	a0830000 	addge	r0, r3, r0
4001a32c:	a1cd01ba 	strhge	r0, [sp, #26]
4001a330:	e1dd11ba 	ldrh	r1, [sp, #26]
4001a334:	e1dd51b8 	ldrh	r5, [sp, #24]
4001a338:	e1510005 	cmp	r1, r5
4001a33c:	2a000022 	bcs	4001a3cc <GPSParams::Builder(gpsparams::Params const*, char*, unsigned long, unsigned long&)+0x1f0>
4001a340:	e5943005 	ldr	r3, [r4, #5]
4001a344:	e59d0014 	ldr	r0, [sp, #20]
4001a348:	ee073a90 	vmov	s15, r3
4001a34c:	e5943000 	ldr	r3, [r4]
4001a350:	e5dd201c 	ldrb	r2, [sp, #28]
4001a354:	e0800001 	add	r0, r0, r1
4001a358:	e3130004 	tst	r3, #4
4001a35c:	eef70ae7 	vcvt.f64.f32	d16, s15
4001a360:	e3a03001 	mov	r3, #1
4001a364:	e0455001 	sub	r5, r5, r1
4001a368:	1a00000b 	bne	4001a39c <GPSParams::Builder(gpsparams::Params const*, char*, unsigned long, unsigned long&)+0x1c0>
4001a36c:	e3520000 	cmp	r2, #0
4001a370:	1a00000b 	bne	4001a3a4 <GPSParams::Builder(gpsparams::Params const*, char*, unsigned long, unsigned long&)+0x1c8>
4001a374:	e58d3000 	str	r3, [sp]
4001a378:	e59f20cc 	ldr	r2, [pc, #204]	; 4001a44c <GPSParams::Builder(gpsparams::Params const*, char*, unsigned long, unsigned long&)+0x270>
4001a37c:	e59f30cc 	ldr	r3, [pc, #204]	; 4001a450 <GPSParams::Builder(gpsparams::Params const*, char*, unsigned long, unsigned long&)+0x274>
4001a380:	edcd0b02 	vstr	d16, [sp, #8]
4001a384:	ea00000a 	b	4001a3b4 <GPSParams::Builder(gpsparams::Params const*, char*, unsigned long, unsigned long&)+0x1d8>
4001a388:	e59f20c4 	ldr	r2, [pc, #196]	; 4001a454 <GPSParams::Builder(gpsparams::Params const*, char*, unsigned long, unsigned long&)+0x278>
4001a38c:	e3a03001 	mov	r3, #1
4001a390:	e58d3000 	str	r3, [sp]
4001a394:	e59f30a0 	ldr	r3, [pc, #160]	; 4001a43c <GPSParams::Builder(gpsparams::Params const*, char*, unsigned long, unsigned long&)+0x260>
4001a398:	eaffffde 	b	4001a318 <GPSParams::Builder(gpsparams::Params const*, char*, unsigned long, unsigned long&)+0x13c>
4001a39c:	e3520000 	cmp	r2, #0
4001a3a0:	0a00001c 	beq	4001a418 <GPSParams::Builder(gpsparams::Params const*, char*, unsigned long, unsigned long&)+0x23c>
4001a3a4:	e58d3000 	str	r3, [sp]
4001a3a8:	e59f20a8 	ldr	r2, [pc, #168]	; 4001a458 <GPSParams::Builder(gpsparams::Params const*, char*, unsigned long, unsigned long&)+0x27c>
4001a3ac:	e59f309c 	ldr	r3, [pc, #156]	; 4001a450 <GPSParams::Builder(gpsparams::Params const*, char*, unsigned long, unsigned long&)+0x274>
4001a3b0:	edcd0b02 	vstr	d16, [sp, #8]
4001a3b4:	e1a01005 	mov	r1, r5
4001a3b8:	eb004a11 	bl	4002cc04 <snprintf>
4001a3bc:	e1550000 	cmp	r5, r0
4001a3c0:	a1dd31ba 	ldrhge	r3, [sp, #26]
4001a3c4:	a0830000 	addge	r0, r3, r0
4001a3c8:	a1cd01ba 	strhge	r0, [sp, #26]
4001a3cc:	e5dd301c 	ldrb	r3, [sp, #28]
4001a3d0:	e3530000 	cmp	r3, #0
4001a3d4:	0a00000a 	beq	4001a404 <GPSParams::Builder(gpsparams::Params const*, char*, unsigned long, unsigned long&)+0x228>
4001a3d8:	e1dd21ba 	ldrh	r2, [sp, #26]
4001a3dc:	e59d3014 	ldr	r3, [sp, #20]
4001a3e0:	e0833002 	add	r3, r3, r2
4001a3e4:	e3a0207d 	mov	r2, #125	; 0x7d
4001a3e8:	e5432001 	strb	r2, [r3, #-1]
4001a3ec:	e59d1014 	ldr	r1, [sp, #20]
4001a3f0:	e1dd31ba 	ldrh	r3, [sp, #26]
4001a3f4:	e7c12003 	strb	r2, [r1, r3]
4001a3f8:	e1dd31ba 	ldrh	r3, [sp, #26]
4001a3fc:	e2833001 	add	r3, r3, #1
4001a400:	e1cd31ba 	strh	r3, [sp, #26]
4001a404:	e1dd21ba 	ldrh	r2, [sp, #26]
4001a408:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
4001a40c:	e5832000 	str	r2, [r3]
4001a410:	e28dd020 	add	sp, sp, #32
4001a414:	e8bd8070 	pop	{r4, r5, r6, pc}
4001a418:	e58d3000 	str	r3, [sp]
4001a41c:	e59f2038 	ldr	r2, [pc, #56]	; 4001a45c <GPSParams::Builder(gpsparams::Params const*, char*, unsigned long, unsigned long&)+0x280>
4001a420:	e59f3028 	ldr	r3, [pc, #40]	; 4001a450 <GPSParams::Builder(gpsparams::Params const*, char*, unsigned long, unsigned long&)+0x274>
4001a424:	edcd0b02 	vstr	d16, [sp, #8]
4001a428:	eaffffe1 	b	4001a3b4 <GPSParams::Builder(gpsparams::Params const*, char*, unsigned long, unsigned long&)+0x1d8>
4001a42c:	40031c9f 	mulmi	r3, pc, ip	; <UNPREDICTABLE>
4001a430:	40031c98 	mulmi	r3, r8, ip
4001a434:	4002e14e 	andmi	lr, r2, lr, asr #2
4001a438:	4002e143 	andmi	lr, r2, r3, asr #2
4001a43c:	40031c91 	mulmi	r3, r1, ip
4001a440:	4002e13b 	andmi	lr, r2, fp, lsr r1
4001a444:	4002e14f 	andmi	lr, r2, pc, asr #2
4001a448:	4002e132 	andmi	lr, r2, r2, lsr r1
4001a44c:	40031c7c 	andmi	r1, r3, ip, ror ip
4001a450:	40031c86 	andmi	r1, r3, r6, lsl #25
4001a454:	4002e13c 	andmi	lr, r2, ip, lsr r1
4001a458:	40031c71 	andmi	r1, r3, r1, ror ip
4001a45c:	40031c7d 	andmi	r1, r3, sp, ror ip

4001a460 <GPS::Print()>:
4001a460:	e92d4010 	push	{r4, lr}
4001a464:	e1a04000 	mov	r4, r0
4001a468:	e59f0060 	ldr	r0, [pc, #96]	; 4001a4d0 <GPS::Print()+0x70>
4001a46c:	e3a01001 	mov	r1, #1
4001a470:	eb0049c6 	bl	4002cb90 <printf>
4001a474:	e5940004 	ldr	r0, [r4, #4]
4001a478:	eb000034 	bl	4001a550 <GPS::GetModuleName(GPSModule)>
4001a47c:	e5942008 	ldr	r2, [r4, #8]
4001a480:	e1a01000 	mov	r1, r0
4001a484:	e59f0048 	ldr	r0, [pc, #72]	; 4001a4d4 <GPS::Print()+0x74>
4001a488:	eb0049c0 	bl	4002cb90 <printf>
4001a48c:	e5941000 	ldr	r1, [r4]
4001a490:	e59f0040 	ldr	r0, [pc, #64]	; 4001a4d8 <GPS::Print()+0x78>
4001a494:	eb0049bd 	bl	4002cb90 <printf>
4001a498:	e5943040 	ldr	r3, [r4, #64]	; 0x40
4001a49c:	e3530001 	cmp	r3, #1
4001a4a0:	0a000005 	beq	4001a4bc <GPS::Print()+0x5c>
4001a4a4:	e3530002 	cmp	r3, #2
4001a4a8:	0a000006 	beq	4001a4c8 <GPS::Print()+0x68>
4001a4ac:	e3530000 	cmp	r3, #0
4001a4b0:	18bd8010 	popne	{r4, pc}
4001a4b4:	e59f0020 	ldr	r0, [pc, #32]	; 4001a4dc <GPS::Print()+0x7c>
4001a4b8:	ea000000 	b	4001a4c0 <GPS::Print()+0x60>
4001a4bc:	e59f001c 	ldr	r0, [pc, #28]	; 4001a4e0 <GPS::Print()+0x80>
4001a4c0:	e8bd4010 	pop	{r4, lr}
4001a4c4:	ea0049f3 	b	4002cc98 <puts>
4001a4c8:	e59f0014 	ldr	r0, [pc, #20]	; 4001a4e4 <GPS::Print()+0x84>
4001a4cc:	eafffffb 	b	4001a4c0 <GPS::Print()+0x60>
4001a4d0:	40031ca7 	andmi	r1, r3, r7, lsr #25
4001a4d4:	40031cb5 			; <UNDEFINED> instruction: 0x40031cb5
4001a4d8:	40031cc8 	andmi	r1, r3, r8, asr #25
4001a4dc:	40031cf5 	strdmi	r1, [r3], -r5
4001a4e0:	40031ce4 	andmi	r1, r3, r4, ror #25
4001a4e4:	40031cec 	andmi	r1, r3, ip, ror #25

4001a4e8 <GPS::GetModule(char const*)>:
4001a4e8:	e59f105c 	ldr	r1, [pc, #92]	; 4001a54c <GPS::GetModule(char const*)+0x64>
4001a4ec:	e1a0c000 	mov	ip, r0
4001a4f0:	e3a00000 	mov	r0, #0
4001a4f4:	e92d4070 	push	{r4, r5, r6, lr}
4001a4f8:	e2414001 	sub	r4, r1, #1
4001a4fc:	e24ce001 	sub	lr, ip, #1
4001a500:	e5f43001 	ldrb	r3, [r4, #1]!
4001a504:	e2432041 	sub	r2, r3, #65	; 0x41
4001a508:	e1a05003 	mov	r5, r3
4001a50c:	e3520019 	cmp	r2, #25
4001a510:	e5fe2001 	ldrb	r2, [lr, #1]!
4001a514:	92835020 	addls	r5, r3, #32
4001a518:	e2426041 	sub	r6, r2, #65	; 0x41
4001a51c:	e3560019 	cmp	r6, #25
4001a520:	92822020 	addls	r2, r2, #32
4001a524:	e1520005 	cmp	r2, r5
4001a528:	1a000002 	bne	4001a538 <GPS::GetModule(char const*)+0x50>
4001a52c:	e3530000 	cmp	r3, #0
4001a530:	1afffff2 	bne	4001a500 <GPS::GetModule(char const*)+0x18>
4001a534:	e8bd8070 	pop	{r4, r5, r6, pc}
4001a538:	e2800001 	add	r0, r0, #1
4001a53c:	e2811010 	add	r1, r1, #16
4001a540:	e3500003 	cmp	r0, #3
4001a544:	1affffeb 	bne	4001a4f8 <GPS::GetModule(char const*)+0x10>
4001a548:	e8bd8070 	pop	{r4, r5, r6, pc}
4001a54c:	40031df1 	strdmi	r1, [r3], -r1	; <UNPREDICTABLE>

4001a550 <GPS::GetModuleName(GPSModule)>:
4001a550:	e3500002 	cmp	r0, #2
4001a554:	d59f3008 	ldrle	r3, [pc, #8]	; 4001a564 <GPS::GetModuleName(GPSModule)+0x14>
4001a558:	d0830200 	addle	r0, r3, r0, lsl #4
4001a55c:	c59f0004 	ldrgt	r0, [pc, #4]	; 4001a568 <GPS::GetModuleName(GPSModule)+0x18>
4001a560:	e12fff1e 	bx	lr
4001a564:	40031df1 	strdmi	r1, [r3], -r1	; <UNPREDICTABLE>
4001a568:	40030e9e 	mulmi	r3, lr, lr

4001a56c <GPSTimeClient::GPSTimeClient(float, GPSModule)>:
4001a56c:	e92d4010 	push	{r4, lr}
4001a570:	e1a04000 	mov	r4, r0
4001a574:	ebfffd77 	bl	40019b58 <GPS::GPS(float, GPSModule)>
4001a578:	e59f300c 	ldr	r3, [pc, #12]	; 4001a58c <GPSTimeClient::GPSTimeClient(float, GPSModule)+0x20>
4001a57c:	e1a00004 	mov	r0, r4
4001a580:	e5933084 	ldr	r3, [r3, #132]	; 0x84
4001a584:	e5843048 	str	r3, [r4, #72]	; 0x48
4001a588:	e8bd8010 	pop	{r4, pc}
4001a58c:	01c20c00 	biceq	r0, r2, r0, lsl #24

4001a590 <GPSTimeClient::Start()>:
4001a590:	e92d4010 	push	{r4, lr}
4001a594:	ebfffdfd 	bl	40019d90 <GPS::Start()>
4001a598:	e3a01006 	mov	r1, #6
4001a59c:	e3a00012 	mov	r0, #18
4001a5a0:	eb003b75 	bl	4002937c <h3_gpio_fsel>
4001a5a4:	e59f3024 	ldr	r3, [pc, #36]	; 4001a5d0 <GPSTimeClient::Start()+0x40>
4001a5a8:	e3a02000 	mov	r2, #0
4001a5ac:	e5832008 	str	r2, [r3, #8]
4001a5b0:	e5932010 	ldr	r2, [r3, #16]
4001a5b4:	e3822701 	orr	r2, r2, #262144	; 0x40000
4001a5b8:	e5832010 	str	r2, [r3, #16]
4001a5bc:	e3a02701 	mov	r2, #262144	; 0x40000
4001a5c0:	e5832014 	str	r2, [r3, #20]
4001a5c4:	e3a02001 	mov	r2, #1
4001a5c8:	e5832018 	str	r2, [r3, #24]
4001a5cc:	e8bd8010 	pop	{r4, pc}
4001a5d0:	01c20a00 	biceq	r0, r2, r0, lsl #20

4001a5d4 <GPSTimeClient::Run()>:
4001a5d4:	e92d4037 	push	{r0, r1, r2, r4, r5, lr}
4001a5d8:	e1a04000 	mov	r4, r0
4001a5dc:	ebfffe1b 	bl	40019e50 <GPS::Run()>
4001a5e0:	e5943040 	ldr	r3, [r4, #64]	; 0x40
4001a5e4:	e3530000 	cmp	r3, #0
4001a5e8:	0a00002c 	beq	4001a6a0 <GPSTimeClient::Run()+0xcc>
4001a5ec:	e59f30b4 	ldr	r3, [pc, #180]	; 4001a6a8 <GPSTimeClient::Run()+0xd4>
4001a5f0:	e5935014 	ldr	r5, [r3, #20]
4001a5f4:	e2155701 	ands	r5, r5, #262144	; 0x40000
4001a5f8:	1a000018 	bne	4001a660 <GPSTimeClient::Run()+0x8c>
4001a5fc:	e5942048 	ldr	r2, [r4, #72]	; 0x48
4001a600:	e2833c02 	add	r3, r3, #512	; 0x200
4001a604:	e3021710 	movw	r1, #10000	; 0x2710
4001a608:	e5933084 	ldr	r3, [r3, #132]	; 0x84
4001a60c:	e0432002 	sub	r2, r3, r2
4001a610:	e1520001 	cmp	r2, r1
4001a614:	9a000021 	bls	4001a6a0 <GPSTimeClient::Run()+0xcc>
4001a618:	e5d42034 	ldrb	r2, [r4, #52]	; 0x34
4001a61c:	e5843048 	str	r3, [r4, #72]	; 0x48
4001a620:	e3520000 	cmp	r2, #0
4001a624:	0a00001d 	beq	4001a6a0 <GPSTimeClient::Run()+0xcc>
4001a628:	e5942038 	ldr	r2, [r4, #56]	; 0x38
4001a62c:	e0433002 	sub	r3, r3, r2
4001a630:	e3530001 	cmp	r3, #1
4001a634:	8a000019 	bhi	4001a6a0 <GPSTimeClient::Run()+0xcc>
4001a638:	e1c453b4 	strh	r5, [r4, #52]	; 0x34
4001a63c:	e2840010 	add	r0, r4, #16
4001a640:	eb004a69 	bl	4002cfec <mktime>
4001a644:	e5943000 	ldr	r3, [r4]
4001a648:	e1a01005 	mov	r1, r5
4001a64c:	e0833000 	add	r3, r3, r0
4001a650:	e1a0000d 	mov	r0, sp
4001a654:	e88d0028 	stm	sp, {r3, r5}
4001a658:	eb004afe 	bl	4002d258 <settimeofday>
4001a65c:	ea00000f 	b	4001a6a0 <GPSTimeClient::Run()+0xcc>
4001a660:	e3a02701 	mov	r2, #262144	; 0x40000
4001a664:	e3a05000 	mov	r5, #0
4001a668:	e5832014 	str	r2, [r3, #20]
4001a66c:	e2840010 	add	r0, r4, #16
4001a670:	e1c453b4 	strh	r5, [r4, #52]	; 0x34
4001a674:	eb004a5c 	bl	4002cfec <mktime>
4001a678:	e5943000 	ldr	r3, [r4]
4001a67c:	e1a01005 	mov	r1, r5
4001a680:	e0800003 	add	r0, r0, r3
4001a684:	e2800001 	add	r0, r0, #1
4001a688:	e88d0021 	stm	sp, {r0, r5}
4001a68c:	e1a0000d 	mov	r0, sp
4001a690:	eb004af0 	bl	4002d258 <settimeofday>
4001a694:	e59f3010 	ldr	r3, [pc, #16]	; 4001a6ac <GPSTimeClient::Run()+0xd8>
4001a698:	e5933084 	ldr	r3, [r3, #132]	; 0x84
4001a69c:	e5843048 	str	r3, [r4, #72]	; 0x48
4001a6a0:	e28dd00c 	add	sp, sp, #12
4001a6a4:	e8bd8030 	pop	{r4, r5, pc}
4001a6a8:	01c20a00 	biceq	r0, r2, r0, lsl #20
4001a6ac:	01c20c00 	biceq	r0, r2, r0, lsl #24

4001a6b0 <GPS::UartInit()>:
4001a6b0:	e92d4007 	push	{r0, r1, r2, lr}
4001a6b4:	e3a03000 	mov	r3, #0
4001a6b8:	e59f2030 	ldr	r2, [pc, #48]	; 4001a6f0 <GPS::UartInit()+0x40>
4001a6bc:	e3a01d96 	mov	r1, #9600	; 0x2580
4001a6c0:	e59f002c 	ldr	r0, [pc, #44]	; 4001a6f4 <GPS::UartInit()+0x44>
4001a6c4:	e5823000 	str	r3, [r2]
4001a6c8:	e59f2028 	ldr	r2, [pc, #40]	; 4001a6f8 <GPS::UartInit()+0x48>
4001a6cc:	e5823000 	str	r3, [r2]
4001a6d0:	e59f2024 	ldr	r2, [pc, #36]	; 4001a6fc <GPS::UartInit()+0x4c>
4001a6d4:	e5823000 	str	r3, [r2]
4001a6d8:	e3a02001 	mov	r2, #1
4001a6dc:	e58d2000 	str	r2, [sp]
4001a6e0:	e3a02008 	mov	r2, #8
4001a6e4:	ebff98b0 	bl	400009ac <h3_uart_begin>
4001a6e8:	e28dd00c 	add	sp, sp, #12
4001a6ec:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4001a6f0:	40058ed4 	ldrdmi	r8, [r5], -r4
4001a6f4:	01c28400 	biceq	r8, r2, r0, lsl #8
4001a6f8:	40058ed8 	ldrdmi	r8, [r5], -r8	; <UNPREDICTABLE>
4001a6fc:	40058edc 	ldrdmi	r8, [r5], -ip

4001a700 <GPS::UartSetBaud(unsigned long)>:
4001a700:	e92d4070 	push	{r4, r5, r6, lr}
4001a704:	e1a04000 	mov	r4, r0
4001a708:	e59f000c 	ldr	r0, [pc, #12]	; 4001a71c <GPS::UartSetBaud(unsigned long)+0x1c>
4001a70c:	e1a05001 	mov	r5, r1
4001a710:	eb003bb7 	bl	400295f4 <h3_uart_set_baudrate>
4001a714:	e5845008 	str	r5, [r4, #8]
4001a718:	e8bd8070 	pop	{r4, r5, r6, pc}
4001a71c:	01c28400 	biceq	r8, r2, r0, lsl #8

4001a720 <GPS::UartSend(char const*)>:
4001a720:	e59f0000 	ldr	r0, [pc]	; 4001a728 <GPS::UartSend(char const*)+0x8>
4001a724:	ea003bd3 	b	40029678 <h3_uart_transmit_string>
4001a728:	01c28400 	biceq	r8, r2, r0, lsl #8

4001a72c <GPS::UartGetSentence()>:
4001a72c:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
4001a730:	e3a0e000 	mov	lr, #0
4001a734:	e59f31c0 	ldr	r3, [pc, #448]	; 4001a8fc <GPS::UartGetSentence()+0x1d0>
4001a738:	e1a0500e 	mov	r5, lr
4001a73c:	e59f61bc 	ldr	r6, [pc, #444]	; 4001a900 <GPS::UartGetSentence()+0x1d4>
4001a740:	e1a0200e 	mov	r2, lr
4001a744:	e59f81b8 	ldr	r8, [pc, #440]	; 4001a904 <GPS::UartGetSentence()+0x1d8>
4001a748:	e3a0b052 	mov	fp, #82	; 0x52
4001a74c:	e59f91b4 	ldr	r9, [pc, #436]	; 4001a908 <GPS::UartGetSentence()+0x1dc>
4001a750:	e5937084 	ldr	r7, [r3, #132]	; 0x84
4001a754:	e596c000 	ldr	ip, [r6]
4001a758:	e5980000 	ldr	r0, [r8]
4001a75c:	e5991000 	ldr	r1, [r9]
4001a760:	e59f41a4 	ldr	r4, [pc, #420]	; 4001a90c <GPS::UartGetSentence()+0x1e0>
4001a764:	e3570000 	cmp	r7, #0
4001a768:	0a00004f 	beq	4001a8ac <GPS::UartGetSentence()+0x180>
4001a76c:	e59f3188 	ldr	r3, [pc, #392]	; 4001a8fc <GPS::UartGetSentence()+0x1d0>
4001a770:	e5933000 	ldr	r3, [r3]
4001a774:	e6ef3073 	uxtb	r3, r3
4001a778:	e3510005 	cmp	r1, #5
4001a77c:	979ff101 	ldrls	pc, [pc, r1, lsl #2]
4001a780:	ea000044 	b	4001a898 <GPS::UartGetSentence()+0x16c>
4001a784:	4001a79c 	mulmi	r1, ip, r7
4001a788:	4001a7ec 	andmi	sl, r1, ip, ror #15
4001a78c:	4001a808 	andmi	sl, r1, r8, lsl #16
4001a790:	4001a830 	andmi	sl, r1, r0, lsr r8
4001a794:	4001a85c 	andmi	sl, r1, ip, asr r8
4001a798:	4001a870 	andmi	sl, r1, r0, ror r8
4001a79c:	e3530024 	cmp	r3, #36	; 0x24
4001a7a0:	1a000020 	bne	4001a828 <GPS::UartGetSentence()+0xfc>
4001a7a4:	e3a02000 	mov	r2, #0
4001a7a8:	e3a00000 	mov	r0, #0
4001a7ac:	e5c42000 	strb	r2, [r4]
4001a7b0:	e3a02001 	mov	r2, #1
4001a7b4:	e1a01002 	mov	r1, r2
4001a7b8:	e59f5150 	ldr	r5, [pc, #336]	; 4001a910 <GPS::UartGetSentence()+0x1e4>
4001a7bc:	e3500051 	cmp	r0, #81	; 0x51
4001a7c0:	e280a001 	add	sl, r0, #1
4001a7c4:	e0255c9b 	mla	r5, fp, ip, r5
4001a7c8:	e7c53000 	strb	r3, [r5, r0]
4001a7cc:	13a05001 	movne	r5, #1
4001a7d0:	1a000002 	bne	4001a7e0 <GPS::UartGetSentence()+0xb4>
4001a7d4:	e3a02001 	mov	r2, #1
4001a7d8:	e1a05002 	mov	r5, r2
4001a7dc:	e3a01000 	mov	r1, #0
4001a7e0:	e2477001 	sub	r7, r7, #1
4001a7e4:	e1a0000a 	mov	r0, sl
4001a7e8:	eaffffdd 	b	4001a764 <GPS::UartGetSentence()+0x38>
4001a7ec:	e353002a 	cmp	r3, #42	; 0x2a
4001a7f0:	15d45000 	ldrbne	r5, [r4]
4001a7f4:	10255003 	eorne	r5, r5, r3
4001a7f8:	15c45000 	strbne	r5, [r4]
4001a7fc:	03a02001 	moveq	r2, #1
4001a800:	03a01002 	moveq	r1, #2
4001a804:	eaffffeb 	b	4001a7b8 <GPS::UartGetSentence()+0x8c>
4001a808:	e5d41000 	ldrb	r1, [r4]
4001a80c:	e3530039 	cmp	r3, #57	; 0x39
4001a810:	82432037 	subhi	r2, r3, #55	; 0x37
4001a814:	92432030 	subls	r2, r3, #48	; 0x30
4001a818:	e6ef2072 	uxtb	r2, r2
4001a81c:	e1520221 	cmp	r2, r1, lsr #4
4001a820:	e3a02001 	mov	r2, #1
4001a824:	0a000032 	beq	4001a8f4 <GPS::UartGetSentence()+0x1c8>
4001a828:	e1a0a000 	mov	sl, r0
4001a82c:	eaffffea 	b	4001a7dc <GPS::UartGetSentence()+0xb0>
4001a830:	e5d41000 	ldrb	r1, [r4]
4001a834:	e3530039 	cmp	r3, #57	; 0x39
4001a838:	82432037 	subhi	r2, r3, #55	; 0x37
4001a83c:	92432030 	subls	r2, r3, #48	; 0x30
4001a840:	e6ef2072 	uxtb	r2, r2
4001a844:	e201100f 	and	r1, r1, #15
4001a848:	e1520001 	cmp	r2, r1
4001a84c:	e3a02001 	mov	r2, #1
4001a850:	1afffff4 	bne	4001a828 <GPS::UartGetSentence()+0xfc>
4001a854:	e3a01004 	mov	r1, #4
4001a858:	eaffffd6 	b	4001a7b8 <GPS::UartGetSentence()+0x8c>
4001a85c:	e353000d 	cmp	r3, #13
4001a860:	e3a02001 	mov	r2, #1
4001a864:	1affffef 	bne	4001a828 <GPS::UartGetSentence()+0xfc>
4001a868:	e3a01005 	mov	r1, #5
4001a86c:	eaffffd1 	b	4001a7b8 <GPS::UartGetSentence()+0x8c>
4001a870:	e353000a 	cmp	r3, #10
4001a874:	1a000005 	bne	4001a890 <GPS::UartGetSentence()+0x164>
4001a878:	e59f2090 	ldr	r2, [pc, #144]	; 4001a910 <GPS::UartGetSentence()+0x1e4>
4001a87c:	e3a0e001 	mov	lr, #1
4001a880:	e0222c9b 	mla	r2, fp, ip, r2
4001a884:	e28cc001 	add	ip, ip, #1
4001a888:	e7c23000 	strb	r3, [r2, r0]
4001a88c:	e20cc00f 	and	ip, ip, #15
4001a890:	e3a02001 	mov	r2, #1
4001a894:	eaffffe3 	b	4001a828 <GPS::UartGetSentence()+0xfc>
4001a898:	e586c000 	str	ip, [r6]
4001a89c:	e3520000 	cmp	r2, #0
4001a8a0:	15891000 	strne	r1, [r9]
4001a8a4:	e3550000 	cmp	r5, #0
4001a8a8:	15880000 	strne	r0, [r8]
4001a8ac:	e3520000 	cmp	r2, #0
4001a8b0:	15891000 	strne	r1, [r9]
4001a8b4:	e3550000 	cmp	r5, #0
4001a8b8:	e59f2054 	ldr	r2, [pc, #84]	; 4001a914 <GPS::UartGetSentence()+0x1e8>
4001a8bc:	15880000 	strne	r0, [r8]
4001a8c0:	e35e0000 	cmp	lr, #0
4001a8c4:	e5923000 	ldr	r3, [r2]
4001a8c8:	1586c000 	strne	ip, [r6]
4001a8cc:	e5961000 	ldr	r1, [r6]
4001a8d0:	e1510003 	cmp	r1, r3
4001a8d4:	13a01052 	movne	r1, #82	; 0x52
4001a8d8:	159f0030 	ldrne	r0, [pc, #48]	; 4001a910 <GPS::UartGetSentence()+0x1e4>
4001a8dc:	10200391 	mlane	r0, r1, r3, r0
4001a8e0:	12833001 	addne	r3, r3, #1
4001a8e4:	03a00000 	moveq	r0, #0
4001a8e8:	1203300f 	andne	r3, r3, #15
4001a8ec:	15823000 	strne	r3, [r2]
4001a8f0:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4001a8f4:	e3a01003 	mov	r1, #3
4001a8f8:	eaffffae 	b	4001a7b8 <GPS::UartGetSentence()+0x8c>
4001a8fc:	01c28400 	biceq	r8, r2, r0, lsl #8
4001a900:	40058ed4 	ldrdmi	r8, [r5], -r4
4001a904:	40058ed0 	ldrdmi	r8, [r5], -r0
4001a908:	40058edc 	ldrdmi	r8, [r5], -ip
4001a90c:	400589ac 	andmi	r8, r5, ip, lsr #19
4001a910:	400589ad 	andmi	r8, r5, sp, lsr #19
4001a914:	40058ed8 	ldrdmi	r8, [r5], -r8	; <UNPREDICTABLE>

4001a918 <RDMDeviceResponder::PersonalityUpdate(LightSet*)>:
4001a918:	e12fff1e 	bx	lr

4001a91c <RDMDeviceResponder::DmxStartAddressUpdate()>:
4001a91c:	e12fff1e 	bx	lr

4001a920 <RDMDeviceResponder::~RDMDeviceResponder()>:
4001a920:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001a924:	e3a05000 	mov	r5, #0
4001a928:	e59f30a4 	ldr	r3, [pc, #164]	; 4001a9d4 <RDMDeviceResponder::~RDMDeviceResponder()+0xb4>
4001a92c:	e1a04000 	mov	r4, r0
4001a930:	e1a07005 	mov	r7, r5
4001a934:	e5803000 	str	r3, [r0]
4001a938:	e1d436b4 	ldrh	r3, [r4, #100]	; 0x64
4001a93c:	e5940060 	ldr	r0, [r4, #96]	; 0x60
4001a940:	e1530005 	cmp	r3, r5
4001a944:	9a00000a 	bls	4001a974 <RDMDeviceResponder::~RDMDeviceResponder()+0x54>
4001a948:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001a94c:	e1a06105 	lsl	r6, r5, #2
4001a950:	e3500000 	cmp	r0, #0
4001a954:	0a000002 	beq	4001a964 <RDMDeviceResponder::~RDMDeviceResponder()+0x44>
4001a958:	e5903000 	ldr	r3, [r0]
4001a95c:	e5933004 	ldr	r3, [r3, #4]
4001a960:	e12fff33 	blx	r3
4001a964:	e5943060 	ldr	r3, [r4, #96]	; 0x60
4001a968:	e2855001 	add	r5, r5, #1
4001a96c:	e7837006 	str	r7, [r3, r6]
4001a970:	eafffff0 	b	4001a938 <RDMDeviceResponder::~RDMDeviceResponder()+0x18>
4001a974:	e3500000 	cmp	r0, #0
4001a978:	0a000000 	beq	4001a980 <RDMDeviceResponder::~RDMDeviceResponder()+0x60>
4001a97c:	eb004a93 	bl	4002d3d0 <operator delete[](void*)>
4001a980:	e3a05000 	mov	r5, #0
4001a984:	e1a06005 	mov	r6, r5
4001a988:	e5d4305c 	ldrb	r3, [r4, #92]	; 0x5c
4001a98c:	e5940058 	ldr	r0, [r4, #88]	; 0x58
4001a990:	e1530005 	cmp	r3, r5
4001a994:	9a000009 	bls	4001a9c0 <RDMDeviceResponder::~RDMDeviceResponder()+0xa0>
4001a998:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001a99c:	e3500000 	cmp	r0, #0
4001a9a0:	0a000004 	beq	4001a9b8 <RDMDeviceResponder::~RDMDeviceResponder()+0x98>
4001a9a4:	e5903000 	ldr	r3, [r0]
4001a9a8:	e5933004 	ldr	r3, [r3, #4]
4001a9ac:	e12fff33 	blx	r3
4001a9b0:	e5943058 	ldr	r3, [r4, #88]	; 0x58
4001a9b4:	e7836105 	str	r6, [r3, r5, lsl #2]
4001a9b8:	e2855001 	add	r5, r5, #1
4001a9bc:	eafffff1 	b	4001a988 <RDMDeviceResponder::~RDMDeviceResponder()+0x68>
4001a9c0:	e3500000 	cmp	r0, #0
4001a9c4:	0a000000 	beq	4001a9cc <RDMDeviceResponder::~RDMDeviceResponder()+0xac>
4001a9c8:	eb004a80 	bl	4002d3d0 <operator delete[](void*)>
4001a9cc:	e1a00004 	mov	r0, r4
4001a9d0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001a9d4:	40031edc 	ldrdmi	r1, [r3], -ip

4001a9d8 <RDMDeviceResponder::~RDMDeviceResponder()>:
4001a9d8:	e92d4010 	push	{r4, lr}
4001a9dc:	e1a04000 	mov	r4, r0
4001a9e0:	ebffffce 	bl	4001a920 <RDMDeviceResponder::~RDMDeviceResponder()>
4001a9e4:	e1a00004 	mov	r0, r4
4001a9e8:	e3a0109c 	mov	r1, #156	; 0x9c
4001a9ec:	eb004a78 	bl	4002d3d4 <operator delete(void*, unsigned int)>
4001a9f0:	e1a00004 	mov	r0, r4
4001a9f4:	e8bd8010 	pop	{r4, pc}

4001a9f8 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned long, unsigned long)>:
4001a9f8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001a9fc:	e1a04000 	mov	r4, r0
4001aa00:	e2800004 	add	r0, r0, #4
4001aa04:	e1a07001 	mov	r7, r1
4001aa08:	e1a06002 	mov	r6, r2
4001aa0c:	e1a05003 	mov	r5, r3
4001aa10:	eb000679 	bl	4001c3fc <RDMDevice::RDMDevice()>
4001aa14:	e59f30ac 	ldr	r3, [pc, #172]	; 4001aac8 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned long, unsigned long)+0xd0>
4001aa18:	e1a00004 	mov	r0, r4
4001aa1c:	e4803057 	str	r3, [r0], #87	; 0x57
4001aa20:	eb0003fd 	bl	4001ba1c <RDMIdentify::RDMIdentify()>
4001aa24:	e59f20a0 	ldr	r2, [pc, #160]	; 4001aacc <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned long, unsigned long)+0xd4>
4001aa28:	e2841058 	add	r1, r4, #88	; 0x58
4001aa2c:	e5847068 	str	r7, [r4, #104]	; 0x68
4001aa30:	e3a03000 	mov	r3, #0
4001aa34:	e5821000 	str	r1, [r2]
4001aa38:	e2841060 	add	r1, r4, #96	; 0x60
4001aa3c:	e59f208c 	ldr	r2, [pc, #140]	; 4001aad0 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned long, unsigned long)+0xd8>
4001aa40:	e5843058 	str	r3, [r4, #88]	; 0x58
4001aa44:	e5821000 	str	r1, [r2]
4001aa48:	e3a02001 	mov	r2, #1
4001aa4c:	e59f1080 	ldr	r1, [pc, #128]	; 4001aad4 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned long, unsigned long)+0xdc>
4001aa50:	e1c429b8 	strh	r2, [r4, #152]	; 0x98
4001aa54:	e5814000 	str	r4, [r1]
4001aa58:	e3061e65 	movw	r1, #28261	; 0x6e65
4001aa5c:	e1c419b2 	strh	r1, [r4, #146]	; 0x92
4001aa60:	e284106c 	add	r1, r4, #108	; 0x6c
4001aa64:	e5c42094 	strb	r2, [r4, #148]	; 0x94
4001aa68:	e284207f 	add	r2, r4, #127	; 0x7f
4001aa6c:	e5c4305c 	strb	r3, [r4, #92]	; 0x5c
4001aa70:	e5843060 	str	r3, [r4, #96]	; 0x60
4001aa74:	e1c436b4 	strh	r3, [r4, #100]	; 0x64
4001aa78:	e1c439b6 	strh	r3, [r4, #150]	; 0x96
4001aa7c:	e1510002 	cmp	r1, r2
4001aa80:	14c13001 	strbne	r3, [r1], #1
4001aa84:	1afffffc 	bne	4001aa7c <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned long, unsigned long)+0x84>
4001aa88:	e2842092 	add	r2, r4, #146	; 0x92
4001aa8c:	e3a03000 	mov	r3, #0
4001aa90:	e1510002 	cmp	r1, r2
4001aa94:	14c13001 	strbne	r3, [r1], #1
4001aa98:	1afffffc 	bne	4001aa90 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned long, unsigned long)+0x98>
4001aa9c:	e5c45078 	strb	r5, [r4, #120]	; 0x78
4001aaa0:	e2455107 	sub	r5, r5, #-1073741823	; 0xc0000001
4001aaa4:	e5943068 	ldr	r3, [r4, #104]	; 0x68
4001aaa8:	e1a00004 	mov	r0, r4
4001aaac:	e5c46079 	strb	r6, [r4, #121]	; 0x79
4001aab0:	e7933105 	ldr	r3, [r3, r5, lsl #2]
4001aab4:	e5933004 	ldr	r3, [r3, #4]
4001aab8:	e3530000 	cmp	r3, #0
4001aabc:	03e03000 	mvneq	r3, #0
4001aac0:	01c439b8 	strheq	r3, [r4, #152]	; 0x98
4001aac4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001aac8:	40031edc 	ldrdmi	r1, [r3], -ip
4001aacc:	40058ef0 	strdmi	r8, [r5], -r0
4001aad0:	40058ef4 	strdmi	r8, [r5], -r4
4001aad4:	40058ee0 	andmi	r8, r5, r0, ror #29

4001aad8 <RDMDeviceResponder::Init()>:
4001aad8:	e3a02001 	mov	r2, #1
4001aadc:	e2803004 	add	r3, r0, #4
4001aae0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001aae4:	e1a04000 	mov	r4, r0
4001aae8:	e5c02056 	strb	r2, [r0, #86]	; 0x56
4001aaec:	e24dd018 	sub	sp, sp, #24
4001aaf0:	e5d02055 	ldrb	r2, [r0, #85]	; 0x55
4001aaf4:	e2805024 	add	r5, r0, #36	; 0x24
4001aaf8:	e3520020 	cmp	r2, #32
4001aafc:	23a02020 	movcs	r2, #32
4001ab00:	e1a01002 	mov	r1, r2
4001ab04:	e2511001 	subs	r1, r1, #1
4001ab08:	24d30001 	ldrbcs	r0, [r3], #1
4001ab0c:	25c3001f 	strbcs	r0, [r3, #31]
4001ab10:	2afffffb 	bcs	4001ab04 <RDMDeviceResponder::Init()+0x2c>
4001ab14:	e59f7184 	ldr	r7, [pc, #388]	; 4001aca0 <RDMDeviceResponder::Init()+0x1c8>
4001ab18:	e3a06001 	mov	r6, #1
4001ab1c:	e5c42054 	strb	r2, [r4, #84]	; 0x54
4001ab20:	e3a08000 	mov	r8, #0
4001ab24:	e5970000 	ldr	r0, [r7]
4001ab28:	e1a03005 	mov	r3, r5
4001ab2c:	e5cd2017 	strb	r2, [sp, #23]
4001ab30:	e3a01009 	mov	r1, #9
4001ab34:	e88d0044 	stm	sp, {r2, r6}
4001ab38:	e58d8008 	str	r8, [sp, #8]
4001ab3c:	e3a02004 	mov	r2, #4
4001ab40:	eb000708 	bl	4001c768 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
4001ab44:	e5970000 	ldr	r0, [r7]
4001ab48:	e28d3017 	add	r3, sp, #23
4001ab4c:	e58d6000 	str	r6, [sp]
4001ab50:	e3a02024 	mov	r2, #36	; 0x24
4001ab54:	e3a01009 	mov	r1, #9
4001ab58:	e98d0140 	stmib	sp, {r6, r8}
4001ab5c:	eb000701 	bl	4001c768 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
4001ab60:	e5d42055 	ldrb	r2, [r4, #85]	; 0x55
4001ab64:	e3e0c023 	mvn	ip, #35	; 0x23
4001ab68:	e5d40054 	ldrb	r0, [r4, #84]	; 0x54
4001ab6c:	e1a03005 	mov	r3, r5
4001ab70:	e04cc004 	sub	ip, ip, r4
4001ab74:	e08c1003 	add	r1, ip, r3
4001ab78:	e1500001 	cmp	r0, r1
4001ab7c:	9a000003 	bls	4001ab90 <RDMDeviceResponder::Init()+0xb8>
4001ab80:	e4d31001 	ldrb	r1, [r3], #1
4001ab84:	e0822001 	add	r2, r2, r1
4001ab88:	e6ff2072 	uxth	r2, r2
4001ab8c:	eafffff8 	b	4001ab74 <RDMDeviceResponder::Init()+0x9c>
4001ab90:	e59f310c 	ldr	r3, [pc, #268]	; 4001aca4 <RDMDeviceResponder::Init()+0x1cc>
4001ab94:	e3a00001 	mov	r0, #1
4001ab98:	e1d414b4 	ldrh	r1, [r4, #68]	; 0x44
4001ab9c:	e5933000 	ldr	r3, [r3]
4001aba0:	e1c424b8 	strh	r2, [r4, #72]	; 0x48
4001aba4:	e1d320b0 	ldrh	r2, [r3]
4001aba8:	e5933000 	ldr	r3, [r3]
4001abac:	e6bf1fb1 	rev16	r1, r1
4001abb0:	e1c417b0 	strh	r1, [r4, #112]	; 0x70
4001abb4:	e1a01c23 	lsr	r1, r3, #24
4001abb8:	e1a03823 	lsr	r3, r3, #16
4001abbc:	e5c43073 	strb	r3, [r4, #115]	; 0x73
4001abc0:	e5d43078 	ldrb	r3, [r4, #120]	; 0x78
4001abc4:	e6bf2fb2 	rev16	r2, r2
4001abc8:	e1c427b4 	strh	r2, [r4, #116]	; 0x74
4001abcc:	e2433107 	sub	r3, r3, #-1073741823	; 0xc0000001
4001abd0:	e5942068 	ldr	r2, [r4, #104]	; 0x68
4001abd4:	e584006c 	str	r0, [r4, #108]	; 0x6c
4001abd8:	e5c41072 	strb	r1, [r4, #114]	; 0x72
4001abdc:	e7923103 	ldr	r3, [r2, r3, lsl #2]
4001abe0:	e1d466b4 	ldrh	r6, [r4, #100]	; 0x64
4001abe4:	e5935004 	ldr	r5, [r3, #4]
4001abe8:	e6bf6fb6 	rev16	r6, r6
4001abec:	e3550000 	cmp	r5, #0
4001abf0:	1a00000d 	bne	4001ac2c <RDMDeviceResponder::Init()+0x154>
4001abf4:	e1d439b8 	ldrh	r3, [r4, #152]	; 0x98
4001abf8:	e1c457b6 	strh	r5, [r4, #118]	; 0x76
4001abfc:	e6bf3fb3 	rev16	r3, r3
4001ac00:	e1c437ba 	strh	r3, [r4, #122]	; 0x7a
4001ac04:	e5d4305c 	ldrb	r3, [r4, #92]	; 0x5c
4001ac08:	e284107f 	add	r1, r4, #127	; 0x7f
4001ac0c:	e1c467bc 	strh	r6, [r4, #124]	; 0x7c
4001ac10:	e5c4307e 	strb	r3, [r4, #126]	; 0x7e
4001ac14:	e284306c 	add	r3, r4, #108	; 0x6c
4001ac18:	e1530001 	cmp	r3, r1
4001ac1c:	0a000019 	beq	4001ac88 <RDMDeviceResponder::Init()+0x1b0>
4001ac20:	e4d32001 	ldrb	r2, [r3], #1
4001ac24:	e5c32012 	strb	r2, [r3, #18]
4001ac28:	eafffffa 	b	4001ac18 <RDMDeviceResponder::Init()+0x140>
4001ac2c:	e5953000 	ldr	r3, [r5]
4001ac30:	e1a00005 	mov	r0, r5
4001ac34:	e5933038 	ldr	r3, [r3, #56]	; 0x38
4001ac38:	e12fff33 	blx	r3
4001ac3c:	e1a00420 	lsr	r0, r0, #8
4001ac40:	e5c40076 	strb	r0, [r4, #118]	; 0x76
4001ac44:	e1a00005 	mov	r0, r5
4001ac48:	e5953000 	ldr	r3, [r5]
4001ac4c:	e5933038 	ldr	r3, [r3, #56]	; 0x38
4001ac50:	e12fff33 	blx	r3
4001ac54:	e5c40077 	strb	r0, [r4, #119]	; 0x77
4001ac58:	e1a00005 	mov	r0, r5
4001ac5c:	e5953000 	ldr	r3, [r5]
4001ac60:	e5933034 	ldr	r3, [r3, #52]	; 0x34
4001ac64:	e12fff33 	blx	r3
4001ac68:	e1a00420 	lsr	r0, r0, #8
4001ac6c:	e5c4007a 	strb	r0, [r4, #122]	; 0x7a
4001ac70:	e1a00005 	mov	r0, r5
4001ac74:	e5953000 	ldr	r3, [r5]
4001ac78:	e5933034 	ldr	r3, [r3, #52]	; 0x34
4001ac7c:	e12fff33 	blx	r3
4001ac80:	e5c4007b 	strb	r0, [r4, #123]	; 0x7b
4001ac84:	eaffffde 	b	4001ac04 <RDMDeviceResponder::Init()+0x12c>
4001ac88:	e5d4307b 	ldrb	r3, [r4, #123]	; 0x7b
4001ac8c:	e5d42078 	ldrb	r2, [r4, #120]	; 0x78
4001ac90:	e0833002 	add	r3, r3, r2
4001ac94:	e1c439b6 	strh	r3, [r4, #150]	; 0x96
4001ac98:	e28dd018 	add	sp, sp, #24
4001ac9c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001aca0:	40034084 	andmi	r4, r3, r4, lsl #1
4001aca4:	40058ee4 	andmi	r8, r5, r4, ror #29

4001aca8 <RDMDeviceResponder::Print()>:
4001aca8:	e92d4073 	push	{r0, r1, r4, r5, r6, lr}
4001acac:	e1a04000 	mov	r4, r0
4001acb0:	e2800004 	add	r0, r0, #4
4001acb4:	eb000601 	bl	4001c4c0 <RDMDevice::Print()>
4001acb8:	e5d43078 	ldrb	r3, [r4, #120]	; 0x78
4001acbc:	e5942068 	ldr	r2, [r4, #104]	; 0x68
4001acc0:	e59f0088 	ldr	r0, [pc, #136]	; 4001ad50 <RDMDeviceResponder::Print()+0xa8>
4001acc4:	e2433107 	sub	r3, r3, #-1073741823	; 0xc0000001
4001acc8:	e7925103 	ldr	r5, [r2, r3, lsl #2]
4001accc:	e5956028 	ldr	r6, [r5, #40]	; 0x28
4001acd0:	eb0047f0 	bl	4002cc98 <puts>
4001acd4:	e5d4206d 	ldrb	r2, [r4, #109]	; 0x6d
4001acd8:	e2855008 	add	r5, r5, #8
4001acdc:	e5d4106c 	ldrb	r1, [r4, #108]	; 0x6c
4001ace0:	e59f006c 	ldr	r0, [pc, #108]	; 4001ad54 <RDMDeviceResponder::Print()+0xac>
4001ace4:	eb0047a9 	bl	4002cb90 <printf>
4001ace8:	e5d4307b 	ldrb	r3, [r4, #123]	; 0x7b
4001acec:	e5d4107a 	ldrb	r1, [r4, #122]	; 0x7a
4001acf0:	e59f0060 	ldr	r0, [pc, #96]	; 4001ad58 <RDMDeviceResponder::Print()+0xb0>
4001acf4:	e0831401 	add	r1, r3, r1, lsl #8
4001acf8:	eb0047a4 	bl	4002cb90 <printf>
4001acfc:	e5d43077 	ldrb	r3, [r4, #119]	; 0x77
4001ad00:	e5d41076 	ldrb	r1, [r4, #118]	; 0x76
4001ad04:	e59f0050 	ldr	r0, [pc, #80]	; 4001ad5c <RDMDeviceResponder::Print()+0xb4>
4001ad08:	e0831401 	add	r1, r3, r1, lsl #8
4001ad0c:	eb00479f 	bl	4002cb90 <printf>
4001ad10:	e5d42079 	ldrb	r2, [r4, #121]	; 0x79
4001ad14:	e6ef3076 	uxtb	r3, r6
4001ad18:	e5d41078 	ldrb	r1, [r4, #120]	; 0x78
4001ad1c:	e58d5000 	str	r5, [sp]
4001ad20:	e59f0038 	ldr	r0, [pc, #56]	; 4001ad60 <RDMDeviceResponder::Print()+0xb8>
4001ad24:	eb004799 	bl	4002cb90 <printf>
4001ad28:	e5d4107c 	ldrb	r1, [r4, #124]	; 0x7c
4001ad2c:	e5d4307d 	ldrb	r3, [r4, #125]	; 0x7d
4001ad30:	e59f002c 	ldr	r0, [pc, #44]	; 4001ad64 <RDMDeviceResponder::Print()+0xbc>
4001ad34:	e0831401 	add	r1, r3, r1, lsl #8
4001ad38:	eb004794 	bl	4002cb90 <printf>
4001ad3c:	e5d4107e 	ldrb	r1, [r4, #126]	; 0x7e
4001ad40:	e59f0020 	ldr	r0, [pc, #32]	; 4001ad68 <RDMDeviceResponder::Print()+0xc0>
4001ad44:	e28dd008 	add	sp, sp, #8
4001ad48:	e8bd4070 	pop	{r4, r5, r6, lr}
4001ad4c:	ea00478f 	b	4002cb90 <printf>
4001ad50:	40031e21 	andmi	r1, r3, r1, lsr #28
4001ad54:	40031e3d 	andmi	r1, r3, sp, lsr lr
4001ad58:	40031e56 	andmi	r1, r3, r6, asr lr
4001ad5c:	40031e6e 	andmi	r1, r3, lr, ror #28
4001ad60:	40031e86 	andmi	r1, r3, r6, lsl #29
4001ad64:	40031ea4 	andmi	r1, r3, r4, lsr #29
4001ad68:	40031ebc 			; <UNDEFINED> instruction: 0x40031ebc

4001ad6c <memcpy.isra.0>:
4001ad6c:	e0812002 	add	r2, r1, r2
4001ad70:	e1510002 	cmp	r1, r2
4001ad74:	012fff1e 	bxeq	lr
4001ad78:	e4d13001 	ldrb	r3, [r1], #1
4001ad7c:	e4c03001 	strb	r3, [r0], #1
4001ad80:	eafffffa 	b	4001ad70 <memcpy.isra.0+0x4>

4001ad84 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>:
4001ad84:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001ad88:	e1a05000 	mov	r5, r0
4001ad8c:	e5d14004 	ldrb	r4, [r1, #4]
4001ad90:	e24dd018 	sub	sp, sp, #24
4001ad94:	e5d03052 	ldrb	r3, [r0, #82]	; 0x52
4001ad98:	e5911000 	ldr	r1, [r1]
4001ad9c:	e3540020 	cmp	r4, #32
4001ada0:	23a04020 	movcs	r4, #32
4001ada4:	e3530000 	cmp	r3, #0
4001ada8:	0a000018 	beq	4001ae10 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x8c>
4001adac:	e59f606c 	ldr	r6, [pc, #108]	; 4001ae20 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x9c>
4001adb0:	e2808020 	add	r8, r0, #32
4001adb4:	e1a02004 	mov	r2, r4
4001adb8:	e1a00008 	mov	r0, r8
4001adbc:	e3a07000 	mov	r7, #0
4001adc0:	ebffffe9 	bl	4001ad6c <memcpy.isra.0>
4001adc4:	e5c54050 	strb	r4, [r5, #80]	; 0x50
4001adc8:	e3a05001 	mov	r5, #1
4001adcc:	e5960000 	ldr	r0, [r6]
4001add0:	e1a03008 	mov	r3, r8
4001add4:	e58d7008 	str	r7, [sp, #8]
4001add8:	e3a02004 	mov	r2, #4
4001addc:	e5cd4017 	strb	r4, [sp, #23]
4001ade0:	e3a01009 	mov	r1, #9
4001ade4:	e1cd40f0 	strd	r4, [sp]
4001ade8:	eb00065e 	bl	4001c768 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
4001adec:	e5960000 	ldr	r0, [r6]
4001adf0:	e28d3017 	add	r3, sp, #23
4001adf4:	e58d5000 	str	r5, [sp]
4001adf8:	e3a02024 	mov	r2, #36	; 0x24
4001adfc:	e3a01009 	mov	r1, #9
4001ae00:	e98d00a0 	stmib	sp, {r5, r7}
4001ae04:	eb000657 	bl	4001c768 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
4001ae08:	e28dd018 	add	sp, sp, #24
4001ae0c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001ae10:	e1a02004 	mov	r2, r4
4001ae14:	ebffffd4 	bl	4001ad6c <memcpy.isra.0>
4001ae18:	e5c54051 	strb	r4, [r5, #81]	; 0x51
4001ae1c:	eafffff9 	b	4001ae08 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x84>
4001ae20:	40034084 	andmi	r4, r3, r4, lsl #1

4001ae24 <RDMDeviceResponder::SetFactoryDefaults()>:
4001ae24:	e92d4037 	push	{r0, r1, r2, r4, r5, lr}
4001ae28:	e1a04000 	mov	r4, r0
4001ae2c:	e1a0100d 	mov	r1, sp
4001ae30:	e2800004 	add	r0, r0, #4
4001ae34:	e5d43055 	ldrb	r3, [r4, #85]	; 0x55
4001ae38:	e58d0000 	str	r0, [sp]
4001ae3c:	e5cd3004 	strb	r3, [sp, #4]
4001ae40:	ebffffcf 	bl	4001ad84 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>
4001ae44:	e5d43055 	ldrb	r3, [r4, #85]	; 0x55
4001ae48:	e3e0c023 	mvn	ip, #35	; 0x23
4001ae4c:	e5d40054 	ldrb	r0, [r4, #84]	; 0x54
4001ae50:	e2842024 	add	r2, r4, #36	; 0x24
4001ae54:	e04cc004 	sub	ip, ip, r4
4001ae58:	e08c1002 	add	r1, ip, r2
4001ae5c:	e1510000 	cmp	r1, r0
4001ae60:	2a000003 	bcs	4001ae74 <RDMDeviceResponder::SetFactoryDefaults()+0x50>
4001ae64:	e4d21001 	ldrb	r1, [r2], #1
4001ae68:	e0833001 	add	r3, r3, r1
4001ae6c:	e6ff3073 	uxth	r3, r3
4001ae70:	eafffff8 	b	4001ae58 <RDMDeviceResponder::SetFactoryDefaults()+0x34>
4001ae74:	e1c434b8 	strh	r3, [r4, #72]	; 0x48
4001ae78:	e3a03001 	mov	r3, #1
4001ae7c:	e5c43078 	strb	r3, [r4, #120]	; 0x78
4001ae80:	e5943068 	ldr	r3, [r4, #104]	; 0x68
4001ae84:	e5933000 	ldr	r3, [r3]
4001ae88:	e5935004 	ldr	r5, [r3, #4]
4001ae8c:	e3550000 	cmp	r5, #0
4001ae90:	0a00001a 	beq	4001af00 <RDMDeviceResponder::SetFactoryDefaults()+0xdc>
4001ae94:	e5953000 	ldr	r3, [r5]
4001ae98:	e1a00005 	mov	r0, r5
4001ae9c:	e5933038 	ldr	r3, [r3, #56]	; 0x38
4001aea0:	e12fff33 	blx	r3
4001aea4:	e1a00420 	lsr	r0, r0, #8
4001aea8:	e5c40076 	strb	r0, [r4, #118]	; 0x76
4001aeac:	e1a00005 	mov	r0, r5
4001aeb0:	e5953000 	ldr	r3, [r5]
4001aeb4:	e5933038 	ldr	r3, [r3, #56]	; 0x38
4001aeb8:	e12fff33 	blx	r3
4001aebc:	e5c40077 	strb	r0, [r4, #119]	; 0x77
4001aec0:	e1a00005 	mov	r0, r5
4001aec4:	e5953000 	ldr	r3, [r5]
4001aec8:	e5933034 	ldr	r3, [r3, #52]	; 0x34
4001aecc:	e12fff33 	blx	r3
4001aed0:	e1a00420 	lsr	r0, r0, #8
4001aed4:	e5c4007a 	strb	r0, [r4, #122]	; 0x7a
4001aed8:	e1a00005 	mov	r0, r5
4001aedc:	e5953000 	ldr	r3, [r5]
4001aee0:	e5933034 	ldr	r3, [r3, #52]	; 0x34
4001aee4:	e12fff33 	blx	r3
4001aee8:	e5943000 	ldr	r3, [r4]
4001aeec:	e1a01005 	mov	r1, r5
4001aef0:	e5c4007b 	strb	r0, [r4, #123]	; 0x7b
4001aef4:	e1a00004 	mov	r0, r4
4001aef8:	e5933008 	ldr	r3, [r3, #8]
4001aefc:	e12fff33 	blx	r3
4001af00:	e1d419b8 	ldrh	r1, [r4, #152]	; 0x98
4001af04:	e6bf5fb1 	rev16	r5, r1
4001af08:	e2413001 	sub	r3, r1, #1
4001af0c:	e3530c02 	cmp	r3, #512	; 0x200
4001af10:	2a00000f 	bcs	4001af54 <RDMDeviceResponder::SetFactoryDefaults()+0x130>
4001af14:	e5d43078 	ldrb	r3, [r4, #120]	; 0x78
4001af18:	e5942068 	ldr	r2, [r4, #104]	; 0x68
4001af1c:	e2433107 	sub	r3, r3, #-1073741823	; 0xc0000001
4001af20:	e7923103 	ldr	r3, [r2, r3, lsl #2]
4001af24:	e5930004 	ldr	r0, [r3, #4]
4001af28:	e3500000 	cmp	r0, #0
4001af2c:	0a000008 	beq	4001af54 <RDMDeviceResponder::SetFactoryDefaults()+0x130>
4001af30:	e5903000 	ldr	r3, [r0]
4001af34:	e5933030 	ldr	r3, [r3, #48]	; 0x30
4001af38:	e12fff33 	blx	r3
4001af3c:	e5943000 	ldr	r3, [r4]
4001af40:	e3500000 	cmp	r0, #0
4001af44:	11c457ba 	strhne	r5, [r4, #122]	; 0x7a
4001af48:	e1a00004 	mov	r0, r4
4001af4c:	e593300c 	ldr	r3, [r3, #12]
4001af50:	e12fff33 	blx	r3
4001af54:	e284106c 	add	r1, r4, #108	; 0x6c
4001af58:	e3a02013 	mov	r2, #19
4001af5c:	e284007f 	add	r0, r4, #127	; 0x7f
4001af60:	ebffff81 	bl	4001ad6c <memcpy.isra.0>
4001af64:	e3a01000 	mov	r1, #0
4001af68:	e3a0e001 	mov	lr, #1
4001af6c:	e1d436b4 	ldrh	r3, [r4, #100]	; 0x64
4001af70:	e1530001 	cmp	r3, r1
4001af74:	9a000016 	bls	4001afd4 <RDMDeviceResponder::SetFactoryDefaults()+0x1b0>
4001af78:	e5943060 	ldr	r3, [r4, #96]	; 0x60
4001af7c:	e7933101 	ldr	r3, [r3, r1, lsl #2]
4001af80:	e3530000 	cmp	r3, #0
4001af84:	0a000010 	beq	4001afcc <RDMDeviceResponder::SetFactoryDefaults()+0x1a8>
4001af88:	e5d32008 	ldrb	r2, [r3, #8]
4001af8c:	e3520000 	cmp	r2, #0
4001af90:	1a00000d 	bne	4001afcc <RDMDeviceResponder::SetFactoryDefaults()+0x1a8>
4001af94:	e2830016 	add	r0, r3, #22
4001af98:	e5d0c022 	ldrb	ip, [r0, #34]	; 0x22
4001af9c:	e35c0000 	cmp	ip, #0
4001afa0:	0a000003 	beq	4001afb4 <RDMDeviceResponder::SetFactoryDefaults()+0x190>
4001afa4:	e4c0c001 	strb	ip, [r0], #1
4001afa8:	e2822001 	add	r2, r2, #1
4001afac:	e3520020 	cmp	r2, #32
4001afb0:	1afffff8 	bne	4001af98 <RDMDeviceResponder::SetFactoryDefaults()+0x174>
4001afb4:	e5c32036 	strb	r2, [r3, #54]	; 0x36
4001afb8:	e1d320bc 	ldrh	r2, [r3, #12]
4001afbc:	e5c3e008 	strb	lr, [r3, #8]
4001afc0:	e1c321b2 	strh	r2, [r3, #18]
4001afc4:	e5d3200e 	ldrb	r2, [r3, #14]
4001afc8:	e5c32014 	strb	r2, [r3, #20]
4001afcc:	e2811001 	add	r1, r1, #1
4001afd0:	eaffffe5 	b	4001af6c <RDMDeviceResponder::SetFactoryDefaults()+0x148>
4001afd4:	e5d4307b 	ldrb	r3, [r4, #123]	; 0x7b
4001afd8:	e5d42078 	ldrb	r2, [r4, #120]	; 0x78
4001afdc:	e0833002 	add	r3, r3, r2
4001afe0:	e1c439b6 	strh	r3, [r4, #150]	; 0x96
4001afe4:	e3a03001 	mov	r3, #1
4001afe8:	e5c43094 	strb	r3, [r4, #148]	; 0x94
4001afec:	e28dd00c 	add	sp, sp, #12
4001aff0:	e8bd4030 	pop	{r4, r5, lr}
4001aff4:	eaff9f74 	b	40002dcc <rdm::device::responder::factorydefaults()>

4001aff8 <RDMHandler::RDMHandler(bool)>:
4001aff8:	e5c01000 	strb	r1, [r0]
4001affc:	e3a02000 	mov	r2, #0
4001b000:	e5c02001 	strb	r2, [r0, #1]
4001b004:	e5802004 	str	r2, [r0, #4]
4001b008:	e5802008 	str	r2, [r0, #8]
4001b00c:	e12fff1e 	bx	lr

4001b010 <RDMHandler::HandleString(char const*, unsigned long)>:
4001b010:	e5903008 	ldr	r3, [r0, #8]
4001b014:	e5c32017 	strb	r2, [r3, #23]
4001b018:	e2833018 	add	r3, r3, #24
4001b01c:	e0812002 	add	r2, r1, r2
4001b020:	e1510002 	cmp	r1, r2
4001b024:	012fff1e 	bxeq	lr
4001b028:	e4d10001 	ldrb	r0, [r1], #1
4001b02c:	e4c30001 	strb	r0, [r3], #1
4001b030:	eafffffa 	b	4001b020 <RDMHandler::HandleString(char const*, unsigned long)+0x10>

4001b034 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)>:
4001b034:	e590c004 	ldr	ip, [r0, #4]
4001b038:	e3510000 	cmp	r1, #0
4001b03c:	e5903008 	ldr	r3, [r0, #8]
4001b040:	e92d4010 	push	{r4, lr}
4001b044:	e3e0e033 	mvn	lr, #51	; 0x33
4001b048:	e5c3e000 	strb	lr, [r3]
4001b04c:	e5dce000 	ldrb	lr, [ip]
4001b050:	e5c3e001 	strb	lr, [r3, #1]
4001b054:	e5dce00e 	ldrb	lr, [ip, #14]
4001b058:	e5c3e00f 	strb	lr, [r3, #15]
4001b05c:	e3a0e000 	mov	lr, #0
4001b060:	e5c3e011 	strb	lr, [r3, #17]
4001b064:	e5dce011 	ldrb	lr, [ip, #17]
4001b068:	e5c3e012 	strb	lr, [r3, #18]
4001b06c:	e5dce012 	ldrb	lr, [ip, #18]
4001b070:	e5c3e013 	strb	lr, [r3, #19]
4001b074:	e5dce013 	ldrb	lr, [ip, #19]
4001b078:	e28ee001 	add	lr, lr, #1
4001b07c:	e5c3e014 	strb	lr, [r3, #20]
4001b080:	e5dce014 	ldrb	lr, [ip, #20]
4001b084:	e5c3e015 	strb	lr, [r3, #21]
4001b088:	e5dce015 	ldrb	lr, [ip, #21]
4001b08c:	e5c3e016 	strb	lr, [r3, #22]
4001b090:	0a00000b 	beq	4001b0c4 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x90>
4001b094:	e241e001 	sub	lr, r1, #1
4001b098:	e35e0001 	cmp	lr, #1
4001b09c:	88bd8010 	pophi	{r4, pc}
4001b0a0:	e5c31010 	strb	r1, [r3, #16]
4001b0a4:	e3a01002 	mov	r1, #2
4001b0a8:	e5c31017 	strb	r1, [r3, #23]
4001b0ac:	e3a0e01a 	mov	lr, #26
4001b0b0:	e1a01422 	lsr	r1, r2, #8
4001b0b4:	e5c3e002 	strb	lr, [r3, #2]
4001b0b8:	e5c31018 	strb	r1, [r3, #24]
4001b0bc:	e5c32019 	strb	r2, [r3, #25]
4001b0c0:	ea000003 	b	4001b0d4 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0xa0>
4001b0c4:	e5d32017 	ldrb	r2, [r3, #23]
4001b0c8:	e5c31010 	strb	r1, [r3, #16]
4001b0cc:	e2822018 	add	r2, r2, #24
4001b0d0:	e5c32002 	strb	r2, [r3, #2]
4001b0d4:	e59f2070 	ldr	r2, [pc, #112]	; 4001b14c <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x118>
4001b0d8:	e28c1008 	add	r1, ip, #8
4001b0dc:	e283e003 	add	lr, r3, #3
4001b0e0:	e28cc00e 	add	ip, ip, #14
4001b0e4:	e5922000 	ldr	r2, [r2]
4001b0e8:	e282204a 	add	r2, r2, #74	; 0x4a
4001b0ec:	e4d14001 	ldrb	r4, [r1], #1
4001b0f0:	e4ce4001 	strb	r4, [lr], #1
4001b0f4:	e151000c 	cmp	r1, ip
4001b0f8:	e4d24001 	ldrb	r4, [r2], #1
4001b0fc:	e5ce4005 	strb	r4, [lr, #5]
4001b100:	1afffff9 	bne	4001b0ec <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0xb8>
4001b104:	e5d31002 	ldrb	r1, [r3, #2]
4001b108:	e3a02000 	mov	r2, #0
4001b10c:	e590c008 	ldr	ip, [r0, #8]
4001b110:	e1a03002 	mov	r3, r2
4001b114:	e1510002 	cmp	r1, r2
4001b118:	e08ce002 	add	lr, ip, r2
4001b11c:	9a000004 	bls	4001b134 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x100>
4001b120:	e7dce002 	ldrb	lr, [ip, r2]
4001b124:	e2822001 	add	r2, r2, #1
4001b128:	e083300e 	add	r3, r3, lr
4001b12c:	e6ff3073 	uxth	r3, r3
4001b130:	eafffff7 	b	4001b114 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0xe0>
4001b134:	e1a02423 	lsr	r2, r3, #8
4001b138:	e5ce2000 	strb	r2, [lr]
4001b13c:	e5902008 	ldr	r2, [r0, #8]
4001b140:	e0822001 	add	r2, r2, r1
4001b144:	e5c23001 	strb	r3, [r2, #1]
4001b148:	e8bd8010 	pop	{r4, pc}
4001b14c:	40058ee0 	andmi	r8, r5, r0, ror #29

4001b150 <RDMHandler::RespondMessageAck()>:
4001b150:	e3a02000 	mov	r2, #0
4001b154:	e1a01002 	mov	r1, r2
4001b158:	eaffffb5 	b	4001b034 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)>

4001b15c <RDMHandler::GetDeviceInfo(unsigned short)>:
4001b15c:	e59f3094 	ldr	r3, [pc, #148]	; 4001b1f8 <RDMHandler::GetDeviceInfo(unsigned short)+0x9c>
4001b160:	e3510000 	cmp	r1, #0
4001b164:	e92d4010 	push	{r4, lr}
4001b168:	e1a04000 	mov	r4, r0
4001b16c:	e5933000 	ldr	r3, [r3]
4001b170:	0a00001b 	beq	4001b1e4 <RDMHandler::GetDeviceInfo(unsigned short)+0x88>
4001b174:	e5932060 	ldr	r2, [r3, #96]	; 0x60
4001b178:	e2411107 	sub	r1, r1, #-1073741823	; 0xc0000001
4001b17c:	e7922101 	ldr	r2, [r2, r1, lsl #2]
4001b180:	e1d211b0 	ldrh	r1, [r2, #16]
4001b184:	e1a01421 	lsr	r1, r1, #8
4001b188:	e5c31089 	strb	r1, [r3, #137]	; 0x89
4001b18c:	e1d211b0 	ldrh	r1, [r2, #16]
4001b190:	e5c3108a 	strb	r1, [r3, #138]	; 0x8a
4001b194:	e5d21014 	ldrb	r1, [r2, #20]
4001b198:	e5c3108b 	strb	r1, [r3, #139]	; 0x8b
4001b19c:	e5d21015 	ldrb	r1, [r2, #21]
4001b1a0:	e5c3108c 	strb	r1, [r3, #140]	; 0x8c
4001b1a4:	e1d211b2 	ldrh	r1, [r2, #18]
4001b1a8:	e1a01421 	lsr	r1, r1, #8
4001b1ac:	e5c3108d 	strb	r1, [r3, #141]	; 0x8d
4001b1b0:	e1d211b2 	ldrh	r1, [r2, #18]
4001b1b4:	e5c3108e 	strb	r1, [r3, #142]	; 0x8e
4001b1b8:	e283107f 	add	r1, r3, #127	; 0x7f
4001b1bc:	e5d22037 	ldrb	r2, [r2, #55]	; 0x37
4001b1c0:	e5c32091 	strb	r2, [r3, #145]	; 0x91
4001b1c4:	e5940008 	ldr	r0, [r4, #8]
4001b1c8:	e3a02013 	mov	r2, #19
4001b1cc:	e5c02017 	strb	r2, [r0, #23]
4001b1d0:	e2800018 	add	r0, r0, #24
4001b1d4:	ebfffee4 	bl	4001ad6c <memcpy.isra.0>
4001b1d8:	e1a00004 	mov	r0, r4
4001b1dc:	e8bd4010 	pop	{r4, lr}
4001b1e0:	eaffffda 	b	4001b150 <RDMHandler::RespondMessageAck()>
4001b1e4:	e1d324b4 	ldrh	r2, [r3, #68]	; 0x44
4001b1e8:	e283106c 	add	r1, r3, #108	; 0x6c
4001b1ec:	e6bf2fb2 	rev16	r2, r2
4001b1f0:	e1c327b0 	strh	r2, [r3, #112]	; 0x70
4001b1f4:	eafffff2 	b	4001b1c4 <RDMHandler::GetDeviceInfo(unsigned short)+0x68>
4001b1f8:	40058ee0 	andmi	r8, r5, r0, ror #29

4001b1fc <RDMHandler::GetFactoryDefaults(unsigned short)>:
4001b1fc:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
4001b200:	e3a03001 	mov	r3, #1
4001b204:	e5905008 	ldr	r5, [r0, #8]
4001b208:	e5c53017 	strb	r3, [r5, #23]
4001b20c:	e59f3104 	ldr	r3, [pc, #260]	; 4001b318 <RDMHandler::GetFactoryDefaults(unsigned short)+0x11c>
4001b210:	e5933000 	ldr	r3, [r3]
4001b214:	e5d32094 	ldrb	r2, [r3, #148]	; 0x94
4001b218:	e3520000 	cmp	r2, #0
4001b21c:	0a000010 	beq	4001b264 <RDMHandler::GetFactoryDefaults(unsigned short)+0x68>
4001b220:	e1d3e4b8 	ldrh	lr, [r3, #72]	; 0x48
4001b224:	e3e07023 	mvn	r7, #35	; 0x23
4001b228:	e5d31055 	ldrb	r1, [r3, #85]	; 0x55
4001b22c:	e283c024 	add	ip, r3, #36	; 0x24
4001b230:	e5d36054 	ldrb	r6, [r3, #84]	; 0x54
4001b234:	e0477003 	sub	r7, r7, r3
4001b238:	e087400c 	add	r4, r7, ip
4001b23c:	e1540006 	cmp	r4, r6
4001b240:	2a000003 	bcs	4001b254 <RDMHandler::GetFactoryDefaults(unsigned short)+0x58>
4001b244:	e4dc4001 	ldrb	r4, [ip], #1
4001b248:	e0811004 	add	r1, r1, r4
4001b24c:	e6ff1071 	uxth	r1, r1
4001b250:	eafffff8 	b	4001b238 <RDMHandler::GetFactoryDefaults(unsigned short)+0x3c>
4001b254:	e15e0001 	cmp	lr, r1
4001b258:	0a000005 	beq	4001b274 <RDMHandler::GetFactoryDefaults(unsigned short)+0x78>
4001b25c:	e3a02000 	mov	r2, #0
4001b260:	e5c32094 	strb	r2, [r3, #148]	; 0x94
4001b264:	e1a03002 	mov	r3, r2
4001b268:	e5c53018 	strb	r3, [r5, #24]
4001b26c:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
4001b270:	eaffffb6 	b	4001b150 <RDMHandler::RespondMessageAck()>
4001b274:	e5d3107b 	ldrb	r1, [r3, #123]	; 0x7b
4001b278:	e5d3e078 	ldrb	lr, [r3, #120]	; 0x78
4001b27c:	e1d3c9b6 	ldrh	ip, [r3, #150]	; 0x96
4001b280:	e081100e 	add	r1, r1, lr
4001b284:	e15c0001 	cmp	ip, r1
4001b288:	e3a0c000 	mov	ip, #0
4001b28c:	15c3c094 	strbne	ip, [r3, #148]	; 0x94
4001b290:	03e07015 	mvneq	r7, #21
4001b294:	01d366b4 	ldrheq	r6, [r3, #100]	; 0x64
4001b298:	11a0300c 	movne	r3, ip
4001b29c:	1afffff1 	bne	4001b268 <RDMHandler::GetFactoryDefaults(unsigned short)+0x6c>
4001b2a0:	e156000c 	cmp	r6, ip
4001b2a4:	9affffee 	bls	4001b264 <RDMHandler::GetFactoryDefaults(unsigned short)+0x68>
4001b2a8:	e5931060 	ldr	r1, [r3, #96]	; 0x60
4001b2ac:	e791110c 	ldr	r1, [r1, ip, lsl #2]
4001b2b0:	e3510000 	cmp	r1, #0
4001b2b4:	0a000015 	beq	4001b310 <RDMHandler::GetFactoryDefaults(unsigned short)+0x114>
4001b2b8:	e5d1e008 	ldrb	lr, [r1, #8]
4001b2bc:	e35e0000 	cmp	lr, #0
4001b2c0:	0affffe5 	beq	4001b25c <RDMHandler::GetFactoryDefaults(unsigned short)+0x60>
4001b2c4:	e5d14014 	ldrb	r4, [r1, #20]
4001b2c8:	e1d1e1b2 	ldrh	lr, [r1, #18]
4001b2cc:	e1d180ba 	ldrh	r8, [r1, #10]
4001b2d0:	e08ee004 	add	lr, lr, r4
4001b2d4:	e2814016 	add	r4, r1, #22
4001b2d8:	e5d19036 	ldrb	r9, [r1, #54]	; 0x36
4001b2dc:	e6ffe07e 	uxth	lr, lr
4001b2e0:	e047a001 	sub	sl, r7, r1
4001b2e4:	e08ab004 	add	fp, sl, r4
4001b2e8:	e15b0009 	cmp	fp, r9
4001b2ec:	2a000003 	bcs	4001b300 <RDMHandler::GetFactoryDefaults(unsigned short)+0x104>
4001b2f0:	e4d4b001 	ldrb	fp, [r4], #1
4001b2f4:	e08ee00b 	add	lr, lr, fp
4001b2f8:	e6ffe07e 	uxth	lr, lr
4001b2fc:	eafffff8 	b	4001b2e4 <RDMHandler::GetFactoryDefaults(unsigned short)+0xe8>
4001b300:	e158000e 	cmp	r8, lr
4001b304:	13a02000 	movne	r2, #0
4001b308:	15c12008 	strbne	r2, [r1, #8]
4001b30c:	1affffd2 	bne	4001b25c <RDMHandler::GetFactoryDefaults(unsigned short)+0x60>
4001b310:	e28cc001 	add	ip, ip, #1
4001b314:	eaffffe1 	b	4001b2a0 <RDMHandler::GetFactoryDefaults(unsigned short)+0xa4>
4001b318:	40058ee0 	andmi	r8, r5, r0, ror #29

4001b31c <RDMHandler::GetDeviceModelDescription(unsigned short)>:
4001b31c:	e59f3030 	ldr	r3, [pc, #48]	; 4001b354 <RDMHandler::GetDeviceModelDescription(unsigned short)+0x38>
4001b320:	e92d4013 	push	{r0, r1, r4, lr}
4001b324:	e1a04000 	mov	r4, r0
4001b328:	e5930000 	ldr	r0, [r3]
4001b32c:	e28d1007 	add	r1, sp, #7
4001b330:	eb002c62 	bl	400264c0 <Hardware::GetBoardName(unsigned char&)>
4001b334:	e5dd2007 	ldrb	r2, [sp, #7]
4001b338:	e1a01000 	mov	r1, r0
4001b33c:	e1a00004 	mov	r0, r4
4001b340:	ebffff32 	bl	4001b010 <RDMHandler::HandleString(char const*, unsigned long)>
4001b344:	e1a00004 	mov	r0, r4
4001b348:	ebffff80 	bl	4001b150 <RDMHandler::RespondMessageAck()>
4001b34c:	e28dd008 	add	sp, sp, #8
4001b350:	e8bd8010 	pop	{r4, pc}
4001b354:	40034088 	andmi	r4, r3, r8, lsl #1

4001b358 <RDMHandler::GetDeviceLabel(unsigned short)>:
4001b358:	e59f3038 	ldr	r3, [pc, #56]	; 4001b398 <RDMHandler::GetDeviceLabel(unsigned short)+0x40>
4001b35c:	e3510000 	cmp	r1, #0
4001b360:	12411107 	subne	r1, r1, #-1073741823	; 0xc0000001
4001b364:	e5933000 	ldr	r3, [r3]
4001b368:	e92d4010 	push	{r4, lr}
4001b36c:	02831024 	addeq	r1, r3, #36	; 0x24
4001b370:	15933060 	ldrne	r3, [r3, #96]	; 0x60
4001b374:	e1a04000 	mov	r4, r0
4001b378:	05d32054 	ldrbeq	r2, [r3, #84]	; 0x54
4001b37c:	17933101 	ldrne	r3, [r3, r1, lsl #2]
4001b380:	15d32036 	ldrbne	r2, [r3, #54]	; 0x36
4001b384:	12831016 	addne	r1, r3, #22
4001b388:	ebffff20 	bl	4001b010 <RDMHandler::HandleString(char const*, unsigned long)>
4001b38c:	e1a00004 	mov	r0, r4
4001b390:	e8bd4010 	pop	{r4, lr}
4001b394:	eaffff6d 	b	4001b150 <RDMHandler::RespondMessageAck()>
4001b398:	40058ee0 	andmi	r8, r5, r0, ror #29

4001b39c <RDMHandler::GetIdentifyDevice(unsigned short)>:
4001b39c:	e5903008 	ldr	r3, [r0, #8]
4001b3a0:	e3a02001 	mov	r2, #1
4001b3a4:	e5c32017 	strb	r2, [r3, #23]
4001b3a8:	e59f2008 	ldr	r2, [pc, #8]	; 4001b3b8 <RDMHandler::GetIdentifyDevice(unsigned short)+0x1c>
4001b3ac:	e5d22000 	ldrb	r2, [r2]
4001b3b0:	e5c32018 	strb	r2, [r3, #24]
4001b3b4:	eaffff65 	b	4001b150 <RDMHandler::RespondMessageAck()>
4001b3b8:	40058ee8 	andmi	r8, r5, r8, ror #29

4001b3bc <RDMHandler::GetManufacturerLabel(unsigned short)>:
4001b3bc:	e59f3040 	ldr	r3, [pc, #64]	; 4001b404 <RDMHandler::GetManufacturerLabel(unsigned short)+0x48>
4001b3c0:	e92d4010 	push	{r4, lr}
4001b3c4:	e1a01003 	mov	r1, r3
4001b3c8:	e1a04000 	mov	r4, r0
4001b3cc:	e1a02003 	mov	r2, r3
4001b3d0:	e2833001 	add	r3, r3, #1
4001b3d4:	e5d20000 	ldrb	r0, [r2]
4001b3d8:	e3500000 	cmp	r0, #0
4001b3dc:	1afffffa 	bne	4001b3cc <RDMHandler::GetManufacturerLabel(unsigned short)+0x10>
4001b3e0:	e0422001 	sub	r2, r2, r1
4001b3e4:	e1a00004 	mov	r0, r4
4001b3e8:	e59f1014 	ldr	r1, [pc, #20]	; 4001b404 <RDMHandler::GetManufacturerLabel(unsigned short)+0x48>
4001b3ec:	e3520020 	cmp	r2, #32
4001b3f0:	23a02020 	movcs	r2, #32
4001b3f4:	ebffff05 	bl	4001b010 <RDMHandler::HandleString(char const*, unsigned long)>
4001b3f8:	e1a00004 	mov	r0, r4
4001b3fc:	e8bd4010 	pop	{r4, lr}
4001b400:	eaffff52 	b	4001b150 <RDMHandler::RespondMessageAck()>
4001b404:	400320d6 	ldrdmi	r2, [r3], -r6

4001b408 <RDMHandler::RespondMessageNack(unsigned short)>:
4001b408:	e1a02001 	mov	r2, r1
4001b40c:	e3a01002 	mov	r1, #2
4001b410:	eaffff07 	b	4001b034 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)>

4001b414 <RDMHandler::SetResetDevice(bool, unsigned short)>:
4001b414:	e5903004 	ldr	r3, [r0, #4]
4001b418:	e5d32016 	ldrb	r2, [r3, #22]
4001b41c:	e3520001 	cmp	r2, #1
4001b420:	13a01001 	movne	r1, #1
4001b424:	1a00000f 	bne	4001b468 <RDMHandler::SetResetDevice(bool, unsigned short)+0x54>
4001b428:	e5d33017 	ldrb	r3, [r3, #23]
4001b42c:	e3530001 	cmp	r3, #1
4001b430:	135300ff 	cmpne	r3, #255	; 0xff
4001b434:	13a01001 	movne	r1, #1
4001b438:	03a01000 	moveq	r1, #0
4001b43c:	13a01006 	movne	r1, #6
4001b440:	1a000008 	bne	4001b468 <RDMHandler::SetResetDevice(bool, unsigned short)+0x54>
4001b444:	e5902008 	ldr	r2, [r0, #8]
4001b448:	e35300ff 	cmp	r3, #255	; 0xff
4001b44c:	e92d4010 	push	{r4, lr}
4001b450:	e1a04000 	mov	r4, r0
4001b454:	e5c21017 	strb	r1, [r2, #23]
4001b458:	1a000003 	bne	4001b46c <RDMHandler::SetResetDevice(bool, unsigned short)+0x58>
4001b45c:	e1a00004 	mov	r0, r4
4001b460:	e3a01004 	mov	r1, #4
4001b464:	e8bd4010 	pop	{r4, lr}
4001b468:	eaffffe6 	b	4001b408 <RDMHandler::RespondMessageNack(unsigned short)>
4001b46c:	e59f3010 	ldr	r3, [pc, #16]	; 4001b484 <RDMHandler::SetResetDevice(bool, unsigned short)+0x70>
4001b470:	e5930000 	ldr	r0, [r3]
4001b474:	eb002c16 	bl	400264d4 <Hardware::Reboot()>
4001b478:	e3500000 	cmp	r0, #0
4001b47c:	18bd8010 	popne	{r4, pc}
4001b480:	eafffff5 	b	4001b45c <RDMHandler::SetResetDevice(bool, unsigned short)+0x48>
4001b484:	40034088 	andmi	r4, r3, r8, lsl #1

4001b488 <RDMHandler::SetIdentifyDevice(bool, unsigned short)>:
4001b488:	e5903004 	ldr	r3, [r0, #4]
4001b48c:	e5d32016 	ldrb	r2, [r3, #22]
4001b490:	e3520001 	cmp	r2, #1
4001b494:	13a01001 	movne	r1, #1
4001b498:	1a000003 	bne	4001b4ac <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x24>
4001b49c:	e5d33017 	ldrb	r3, [r3, #23]
4001b4a0:	e3530001 	cmp	r3, #1
4001b4a4:	9a000001 	bls	4001b4b0 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x28>
4001b4a8:	e3a01006 	mov	r1, #6
4001b4ac:	eaffffd5 	b	4001b408 <RDMHandler::RespondMessageNack(unsigned short)>
4001b4b0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001b4b4:	e1a05001 	mov	r5, r1
4001b4b8:	e59f1080 	ldr	r1, [pc, #128]	; 4001b540 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0xb8>
4001b4bc:	e3530000 	cmp	r3, #0
4001b4c0:	e59f707c 	ldr	r7, [pc, #124]	; 4001b544 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0xbc>
4001b4c4:	e1a04000 	mov	r4, r0
4001b4c8:	e5916000 	ldr	r6, [r1]
4001b4cc:	e59f1074 	ldr	r1, [pc, #116]	; 4001b548 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0xc0>
4001b4d0:	e5910000 	ldr	r0, [r1]
4001b4d4:	e59f1070 	ldr	r1, [pc, #112]	; 4001b54c <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0xc4>
4001b4d8:	1a00000f 	bne	4001b51c <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x94>
4001b4dc:	e5c13000 	strb	r3, [r1]
4001b4e0:	e1a02003 	mov	r2, r3
4001b4e4:	e3a01002 	mov	r1, #2
4001b4e8:	eb002aaa 	bl	40025f98 <Hardware::SetModeWithLock(hardware::ledblink::Mode, bool)>
4001b4ec:	e5d71000 	ldrb	r1, [r7]
4001b4f0:	e3510000 	cmp	r1, #0
4001b4f4:	0a000001 	beq	4001b500 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x78>
4001b4f8:	e1a00006 	mov	r0, r6
4001b4fc:	eb00014b 	bl	4001ba30 <RDMIdentify::Off(rdm::identify::Mode)>
4001b500:	e3550000 	cmp	r5, #0
4001b504:	18bd81f0 	popne	{r4, r5, r6, r7, r8, pc}
4001b508:	e5943008 	ldr	r3, [r4, #8]
4001b50c:	e1a00004 	mov	r0, r4
4001b510:	e5c35017 	strb	r5, [r3, #23]
4001b514:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
4001b518:	eaffff0c 	b	4001b150 <RDMHandler::RespondMessageAck()>
4001b51c:	e5c12000 	strb	r2, [r1]
4001b520:	e3a01004 	mov	r1, #4
4001b524:	eb002a9b 	bl	40025f98 <Hardware::SetModeWithLock(hardware::ledblink::Mode, bool)>
4001b528:	e5d71000 	ldrb	r1, [r7]
4001b52c:	e3510000 	cmp	r1, #0
4001b530:	0afffff2 	beq	4001b500 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x78>
4001b534:	e1a00006 	mov	r0, r6
4001b538:	eb00013b 	bl	4001ba2c <RDMIdentify::On(rdm::identify::Mode)>
4001b53c:	eaffffef 	b	4001b500 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x78>
4001b540:	40058eec 	andmi	r8, r5, ip, ror #29
4001b544:	40058ee9 	andmi	r8, r5, r9, ror #29
4001b548:	40034088 	andmi	r4, r3, r8, lsl #1
4001b54c:	40058ee8 	andmi	r8, r5, r8, ror #29

4001b550 <RDMHandler::SetFactoryDefaults(bool, unsigned short)>:
4001b550:	e5903004 	ldr	r3, [r0, #4]
4001b554:	e5d33016 	ldrb	r3, [r3, #22]
4001b558:	e3530000 	cmp	r3, #0
4001b55c:	0a000001 	beq	4001b568 <RDMHandler::SetFactoryDefaults(bool, unsigned short)+0x18>
4001b560:	e3a01001 	mov	r1, #1
4001b564:	eaffffa7 	b	4001b408 <RDMHandler::RespondMessageNack(unsigned short)>
4001b568:	e59f302c 	ldr	r3, [pc, #44]	; 4001b59c <RDMHandler::SetFactoryDefaults(bool, unsigned short)+0x4c>
4001b56c:	e92d4070 	push	{r4, r5, r6, lr}
4001b570:	e1a05001 	mov	r5, r1
4001b574:	e1a04000 	mov	r4, r0
4001b578:	e5930000 	ldr	r0, [r3]
4001b57c:	ebfffe28 	bl	4001ae24 <RDMDeviceResponder::SetFactoryDefaults()>
4001b580:	e3550000 	cmp	r5, #0
4001b584:	18bd8070 	popne	{r4, r5, r6, pc}
4001b588:	e5943008 	ldr	r3, [r4, #8]
4001b58c:	e1a00004 	mov	r0, r4
4001b590:	e5c35017 	strb	r5, [r3, #23]
4001b594:	e8bd4070 	pop	{r4, r5, r6, lr}
4001b598:	eafffeec 	b	4001b150 <RDMHandler::RespondMessageAck()>
4001b59c:	40058ee0 	andmi	r8, r5, r0, ror #29

4001b5a0 <RDMHandler::SetDeviceLabel(bool, unsigned short)>:
4001b5a0:	e5903004 	ldr	r3, [r0, #4]
4001b5a4:	e92d4037 	push	{r0, r1, r2, r4, r5, lr}
4001b5a8:	e1a05001 	mov	r5, r1
4001b5ac:	e5d31016 	ldrb	r1, [r3, #22]
4001b5b0:	e3510020 	cmp	r1, #32
4001b5b4:	9a000003 	bls	4001b5c8 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x28>
4001b5b8:	e3a01001 	mov	r1, #1
4001b5bc:	e28dd00c 	add	sp, sp, #12
4001b5c0:	e8bd4030 	pop	{r4, r5, lr}
4001b5c4:	eaffff8f 	b	4001b408 <RDMHandler::RespondMessageNack(unsigned short)>
4001b5c8:	e1a04000 	mov	r4, r0
4001b5cc:	e3520000 	cmp	r2, #0
4001b5d0:	e59f007c 	ldr	r0, [pc, #124]	; 4001b654 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0xb4>
4001b5d4:	e2833017 	add	r3, r3, #23
4001b5d8:	e5900000 	ldr	r0, [r0]
4001b5dc:	0a000014 	beq	4001b634 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x94>
4001b5e0:	e5900060 	ldr	r0, [r0, #96]	; 0x60
4001b5e4:	e2422107 	sub	r2, r2, #-1073741823	; 0xc0000001
4001b5e8:	e7900102 	ldr	r0, [r0, r2, lsl #2]
4001b5ec:	e3a02000 	mov	r2, #0
4001b5f0:	e280c016 	add	ip, r0, #22
4001b5f4:	e1510002 	cmp	r1, r2
4001b5f8:	9a000004 	bls	4001b610 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x70>
4001b5fc:	e4d3e001 	ldrb	lr, [r3], #1
4001b600:	e2822001 	add	r2, r2, #1
4001b604:	e3520020 	cmp	r2, #32
4001b608:	e4cce001 	strb	lr, [ip], #1
4001b60c:	1afffff8 	bne	4001b5f4 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x54>
4001b610:	e5c02036 	strb	r2, [r0, #54]	; 0x36
4001b614:	e3550000 	cmp	r5, #0
4001b618:	1a00000b 	bne	4001b64c <RDMHandler::SetDeviceLabel(bool, unsigned short)+0xac>
4001b61c:	e5943008 	ldr	r3, [r4, #8]
4001b620:	e1a00004 	mov	r0, r4
4001b624:	e5c35017 	strb	r5, [r3, #23]
4001b628:	e28dd00c 	add	sp, sp, #12
4001b62c:	e8bd4030 	pop	{r4, r5, lr}
4001b630:	eafffec6 	b	4001b150 <RDMHandler::RespondMessageAck()>
4001b634:	e5cd1004 	strb	r1, [sp, #4]
4001b638:	e2800004 	add	r0, r0, #4
4001b63c:	e58d3000 	str	r3, [sp]
4001b640:	e1a0100d 	mov	r1, sp
4001b644:	ebfffdce 	bl	4001ad84 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>
4001b648:	eafffff1 	b	4001b614 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x74>
4001b64c:	e28dd00c 	add	sp, sp, #12
4001b650:	e8bd8030 	pop	{r4, r5, pc}
4001b654:	40058ee0 	andmi	r8, r5, r0, ror #29

4001b658 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)>:
4001b658:	e92d4070 	push	{r4, r5, r6, lr}
4001b65c:	e1a0e002 	mov	lr, r2
4001b660:	e5dd5010 	ldrb	r5, [sp, #16]
4001b664:	e20ec0ef 	and	ip, lr, #239	; 0xef
4001b668:	e1dd21b4 	ldrh	r2, [sp, #20]
4001b66c:	e35c0020 	cmp	ip, #32
4001b670:	0a000002 	beq	4001b680 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x28>
4001b674:	e3a01005 	mov	r1, #5
4001b678:	e8bd4070 	pop	{r4, r5, r6, lr}
4001b67c:	eaffff61 	b	4001b408 <RDMHandler::RespondMessageNack(unsigned short)>
4001b680:	e59fc108 	ldr	ip, [pc, #264]	; 4001b790 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x138>
4001b684:	e59cc000 	ldr	ip, [ip]
4001b688:	e1dc40b4 	ldrh	r4, [ip, #4]
4001b68c:	e30fcfff 	movw	ip, #65535	; 0xffff
4001b690:	e152000c 	cmp	r2, ip
4001b694:	11540002 	cmpne	r4, r2
4001b698:	23a04014 	movcs	r4, #20
4001b69c:	259fc0f0 	ldrcs	ip, [pc, #240]	; 4001b794 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x13c>
4001b6a0:	2a000001 	bcs	4001b6ac <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x54>
4001b6a4:	e3a01009 	mov	r1, #9
4001b6a8:	eafffff2 	b	4001b678 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x20>
4001b6ac:	e1dc60b0 	ldrh	r6, [ip]
4001b6b0:	e1560003 	cmp	r6, r3
4001b6b4:	1a000006 	bne	4001b6d4 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x7c>
4001b6b8:	e5d06000 	ldrb	r6, [r0]
4001b6bc:	e5dc4016 	ldrb	r4, [ip, #22]
4001b6c0:	e5dc3017 	ldrb	r3, [ip, #23]
4001b6c4:	e3560000 	cmp	r6, #0
4001b6c8:	1a000006 	bne	4001b6e8 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x90>
4001b6cc:	e3530000 	cmp	r3, #0
4001b6d0:	ea000005 	b	4001b6ec <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x94>
4001b6d4:	e2544001 	subs	r4, r4, #1
4001b6d8:	e28cc018 	add	ip, ip, #24
4001b6dc:	1afffff2 	bne	4001b6ac <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x54>
4001b6e0:	e3a01000 	mov	r1, #0
4001b6e4:	eaffffe3 	b	4001b678 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x20>
4001b6e8:	e3540000 	cmp	r4, #0
4001b6ec:	0afffffb 	beq	4001b6e0 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x88>
4001b6f0:	e35e0020 	cmp	lr, #32
4001b6f4:	1a000017 	bne	4001b758 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x100>
4001b6f8:	e3510000 	cmp	r1, #0
4001b6fc:	18bd8070 	popne	{r4, r5, r6, pc}
4001b700:	e30f3fff 	movw	r3, #65535	; 0xffff
4001b704:	e1520003 	cmp	r2, r3
4001b708:	0affffe5 	beq	4001b6a4 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x4c>
4001b70c:	e59c3004 	ldr	r3, [ip, #4]
4001b710:	e3530000 	cmp	r3, #0
4001b714:	1a000002 	bne	4001b724 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xcc>
4001b718:	e59c1008 	ldr	r1, [ip, #8]
4001b71c:	e3110001 	tst	r1, #1
4001b720:	0affffd3 	beq	4001b674 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1c>
4001b724:	e5dc1014 	ldrb	r1, [ip, #20]
4001b728:	e1510005 	cmp	r1, r5
4001b72c:	13a01001 	movne	r1, #1
4001b730:	1affffd0 	bne	4001b678 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x20>
4001b734:	e59c1008 	ldr	r1, [ip, #8]
4001b738:	e8bd4070 	pop	{r4, r5, r6, lr}
4001b73c:	e080c0c1 	add	ip, r0, r1, asr #1
4001b740:	e3110001 	tst	r1, #1
4001b744:	179010c1 	ldrne	r1, [r0, r1, asr #1]
4001b748:	e1a0000c 	mov	r0, ip
4001b74c:	17913003 	ldrne	r3, [r1, r3]
4001b750:	e1a01002 	mov	r1, r2
4001b754:	e12fff13 	bx	r3
4001b758:	e59c300c 	ldr	r3, [ip, #12]
4001b75c:	e59cc010 	ldr	ip, [ip, #16]
4001b760:	e3530000 	cmp	r3, #0
4001b764:	e20ce001 	and	lr, ip, #1
4001b768:	1a000001 	bne	4001b774 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x11c>
4001b76c:	e35e0000 	cmp	lr, #0
4001b770:	0affffbf 	beq	4001b674 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1c>
4001b774:	e08040cc 	add	r4, r0, ip, asr #1
4001b778:	e35e0000 	cmp	lr, #0
4001b77c:	179000cc 	ldrne	r0, [r0, ip, asr #1]
4001b780:	17903003 	ldrne	r3, [r0, r3]
4001b784:	e1a00004 	mov	r0, r4
4001b788:	e8bd4070 	pop	{r4, r5, r6, lr}
4001b78c:	e12fff13 	bx	r3
4001b790:	40058ef4 	strdmi	r8, [r5], -r4
4001b794:	40031ef4 	strdmi	r1, [r3], -r4

4001b798 <RDMHandler::HandleData(unsigned char const*, unsigned char*)>:
4001b798:	e3e03000 	mvn	r3, #0
4001b79c:	e92d47f3 	push	{r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
4001b7a0:	e1a07000 	mov	r7, r0
4001b7a4:	e5c23000 	strb	r3, [r2]
4001b7a8:	e5d1300f 	ldrb	r3, [r1, #15]
4001b7ac:	e9800006 	stmib	r0, {r1, r2}
4001b7b0:	e3530000 	cmp	r3, #0
4001b7b4:	0a000062 	beq	4001b944 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x1ac>
4001b7b8:	e5d13010 	ldrb	r3, [r1, #16]
4001b7bc:	e1a05001 	mov	r5, r1
4001b7c0:	e3530000 	cmp	r3, #0
4001b7c4:	1a00005e 	bne	4001b944 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x1ac>
4001b7c8:	e59f3240 	ldr	r3, [pc, #576]	; 4001ba10 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x278>
4001b7cc:	e2818002 	add	r8, r1, #2
4001b7d0:	e59f123c 	ldr	r1, [pc, #572]	; 4001ba14 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x27c>
4001b7d4:	e1a04002 	mov	r4, r2
4001b7d8:	e5939000 	ldr	r9, [r3]
4001b7dc:	e3a02006 	mov	r2, #6
4001b7e0:	e1a00008 	mov	r0, r8
4001b7e4:	e289604a 	add	r6, r9, #74	; 0x4a
4001b7e8:	ebffbdff 	bl	4000afec <memcmp>
4001b7ec:	e250c000 	subs	ip, r0, #0
4001b7f0:	0a000055 	beq	4001b94c <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x1b4>
4001b7f4:	e3a02002 	mov	r2, #2
4001b7f8:	e1a01006 	mov	r1, r6
4001b7fc:	e1a00008 	mov	r0, r8
4001b800:	ebffbdf9 	bl	4000afec <memcmp>
4001b804:	e3500000 	cmp	r0, #0
4001b808:	1a00004d 	bne	4001b944 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x1ac>
4001b80c:	e59f1200 	ldr	r1, [pc, #512]	; 4001ba14 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x27c>
4001b810:	e285a004 	add	sl, r5, #4
4001b814:	e3a02004 	mov	r2, #4
4001b818:	e1a0000a 	mov	r0, sl
4001b81c:	ebffbdf2 	bl	4000afec <memcmp>
4001b820:	e250c000 	subs	ip, r0, #0
4001b824:	03a08001 	moveq	r8, #1
4001b828:	13a08000 	movne	r8, #0
4001b82c:	0a000005 	beq	4001b848 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0xb0>
4001b830:	e3a02004 	mov	r2, #4
4001b834:	e289104c 	add	r1, r9, #76	; 0x4c
4001b838:	e1a0000a 	mov	r0, sl
4001b83c:	ebffbdea 	bl	4000afec <memcmp>
4001b840:	e16fcf10 	clz	ip, r0
4001b844:	e1a0c2ac 	lsr	ip, ip, #5
4001b848:	e198300c 	orrs	r3, r8, ip
4001b84c:	0a00003c 	beq	4001b944 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x1ac>
4001b850:	e5d52013 	ldrb	r2, [r5, #19]
4001b854:	e5d51014 	ldrb	r1, [r5, #20]
4001b858:	e5d53015 	ldrb	r3, [r5, #21]
4001b85c:	e3520010 	cmp	r2, #16
4001b860:	e0833401 	add	r3, r3, r1, lsl #8
4001b864:	e6ff3073 	uxth	r3, r3
4001b868:	1a00005d 	bne	4001b9e4 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x24c>
4001b86c:	e3530001 	cmp	r3, #1
4001b870:	1a000037 	bne	4001b954 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x1bc>
4001b874:	e5d73001 	ldrb	r3, [r7, #1]
4001b878:	e3530000 	cmp	r3, #0
4001b87c:	1a000030 	bne	4001b944 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x1ac>
4001b880:	e3a02006 	mov	r2, #6
4001b884:	e1a01006 	mov	r1, r6
4001b888:	e2850017 	add	r0, r5, #23
4001b88c:	ebffbdd6 	bl	4000afec <memcmp>
4001b890:	e3500000 	cmp	r0, #0
4001b894:	ca00002a 	bgt	4001b944 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x1ac>
4001b898:	e3a02006 	mov	r2, #6
4001b89c:	e285101d 	add	r1, r5, #29
4001b8a0:	e1a00006 	mov	r0, r6
4001b8a4:	ebffbdd0 	bl	4000afec <memcmp>
4001b8a8:	e3500000 	cmp	r0, #0
4001b8ac:	ca000024 	bgt	4001b944 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x1ac>
4001b8b0:	e3e03001 	mvn	r3, #1
4001b8b4:	e1a01006 	mov	r1, r6
4001b8b8:	e5c43000 	strb	r3, [r4]
4001b8bc:	e1a00004 	mov	r0, r4
4001b8c0:	e5c43001 	strb	r3, [r4, #1]
4001b8c4:	e2899050 	add	r9, r9, #80	; 0x50
4001b8c8:	e5c43002 	strb	r3, [r4, #2]
4001b8cc:	e3e0e055 	mvn	lr, #85	; 0x55
4001b8d0:	e5c43003 	strb	r3, [r4, #3]
4001b8d4:	e5c43004 	strb	r3, [r4, #4]
4001b8d8:	e5c43005 	strb	r3, [r4, #5]
4001b8dc:	e5c43006 	strb	r3, [r4, #6]
4001b8e0:	e30035fa 	movw	r3, #1530	; 0x5fa
4001b8e4:	e5c4e007 	strb	lr, [r4, #7]
4001b8e8:	e5d1c000 	ldrb	ip, [r1]
4001b8ec:	e3e02055 	mvn	r2, #85	; 0x55
4001b8f0:	e2800002 	add	r0, r0, #2
4001b8f4:	e18cc00e 	orr	ip, ip, lr
4001b8f8:	e5c0c006 	strb	ip, [r0, #6]
4001b8fc:	e4d1c001 	ldrb	ip, [r1], #1
4001b900:	e1510009 	cmp	r1, r9
4001b904:	e38cc055 	orr	ip, ip, #85	; 0x55
4001b908:	e5c0c007 	strb	ip, [r0, #7]
4001b90c:	e551c001 	ldrb	ip, [r1, #-1]
4001b910:	e083300c 	add	r3, r3, ip
4001b914:	e6ff3073 	uxth	r3, r3
4001b918:	1afffff2 	bne	4001b8e8 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x150>
4001b91c:	e1820423 	orr	r0, r2, r3, lsr #8
4001b920:	e1a01423 	lsr	r1, r3, #8
4001b924:	e6ef3073 	uxtb	r3, r3
4001b928:	e1832002 	orr	r2, r3, r2
4001b92c:	e3811055 	orr	r1, r1, #85	; 0x55
4001b930:	e5c40014 	strb	r0, [r4, #20]
4001b934:	e3833055 	orr	r3, r3, #85	; 0x55
4001b938:	e5c41015 	strb	r1, [r4, #21]
4001b93c:	e5c42016 	strb	r2, [r4, #22]
4001b940:	e5c43017 	strb	r3, [r4, #23]
4001b944:	e28dd008 	add	sp, sp, #8
4001b948:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4001b94c:	e3a08001 	mov	r8, #1
4001b950:	eaffffbc 	b	4001b848 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0xb0>
4001b954:	e3530003 	cmp	r3, #3
4001b958:	e2288001 	eor	r8, r8, #1
4001b95c:	1a000013 	bne	4001b9b0 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x218>
4001b960:	e5d53016 	ldrb	r3, [r5, #22]
4001b964:	e3530000 	cmp	r3, #0
4001b968:	1afffff5 	bne	4001b944 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x1ac>
4001b96c:	e118000c 	tst	r8, ip
4001b970:	e5c73001 	strb	r3, [r7, #1]
4001b974:	0afffff2 	beq	4001b944 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x1ac>
4001b978:	e5c43018 	strb	r3, [r4, #24]
4001b97c:	e3a02002 	mov	r2, #2
4001b980:	e5c42017 	strb	r2, [r4, #23]
4001b984:	e5c43019 	strb	r3, [r4, #25]
4001b988:	e59f3088 	ldr	r3, [pc, #136]	; 4001ba18 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x280>
4001b98c:	e1a00007 	mov	r0, r7
4001b990:	e5933000 	ldr	r3, [r3]
4001b994:	e1d330b4 	ldrh	r3, [r3, #4]
4001b998:	e3530000 	cmp	r3, #0
4001b99c:	13a03002 	movne	r3, #2
4001b9a0:	15c43019 	strbne	r3, [r4, #25]
4001b9a4:	e28dd008 	add	sp, sp, #8
4001b9a8:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
4001b9ac:	eafffde7 	b	4001b150 <RDMHandler::RespondMessageAck()>
4001b9b0:	e3530002 	cmp	r3, #2
4001b9b4:	1affffe2 	bne	4001b944 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x1ac>
4001b9b8:	e5d52016 	ldrb	r2, [r5, #22]
4001b9bc:	e3520000 	cmp	r2, #0
4001b9c0:	1affffdf 	bne	4001b944 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x1ac>
4001b9c4:	e118000c 	tst	r8, ip
4001b9c8:	e3a01001 	mov	r1, #1
4001b9cc:	e5c71001 	strb	r1, [r7, #1]
4001b9d0:	15c43017 	strbne	r3, [r4, #23]
4001b9d4:	15c42018 	strbne	r2, [r4, #24]
4001b9d8:	15c42019 	strbne	r2, [r4, #25]
4001b9dc:	0affffd8 	beq	4001b944 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x1ac>
4001b9e0:	eaffffe8 	b	4001b988 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x1f0>
4001b9e4:	e5d50011 	ldrb	r0, [r5, #17]
4001b9e8:	e5d51012 	ldrb	r1, [r5, #18]
4001b9ec:	e0811400 	add	r1, r1, r0, lsl #8
4001b9f0:	e1a00007 	mov	r0, r7
4001b9f4:	e6ff1071 	uxth	r1, r1
4001b9f8:	e58d1004 	str	r1, [sp, #4]
4001b9fc:	e5d51016 	ldrb	r1, [r5, #22]
4001ba00:	e58d1000 	str	r1, [sp]
4001ba04:	e1a01008 	mov	r1, r8
4001ba08:	ebffff12 	bl	4001b658 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)>
4001ba0c:	eaffffcc 	b	4001b944 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x1ac>
4001ba10:	40058ee0 	andmi	r8, r5, r0, ror #29
4001ba14:	40031eec 	andmi	r1, r3, ip, ror #29
4001ba18:	40058ef4 	strdmi	r8, [r5], -r4

4001ba1c <RDMIdentify::RDMIdentify()>:
4001ba1c:	e59f3004 	ldr	r3, [pc, #4]	; 4001ba28 <RDMIdentify::RDMIdentify()+0xc>
4001ba20:	e5830000 	str	r0, [r3]
4001ba24:	e12fff1e 	bx	lr
4001ba28:	40058eec 	andmi	r8, r5, ip, ror #29

4001ba2c <RDMIdentify::On(rdm::identify::Mode)>:
4001ba2c:	e12fff1e 	bx	lr

4001ba30 <RDMIdentify::Off(rdm::identify::Mode)>:
4001ba30:	e12fff1e 	bx	lr

4001ba34 <memcpy.isra.0>:
4001ba34:	e0812002 	add	r2, r1, r2
4001ba38:	e1510002 	cmp	r1, r2
4001ba3c:	012fff1e 	bxeq	lr
4001ba40:	e4d13001 	ldrb	r3, [r1], #1
4001ba44:	e4c03001 	strb	r3, [r0], #1
4001ba48:	eafffffa 	b	4001ba38 <memcpy.isra.0+0x4>

4001ba4c <LLRPDevice::HandleRequestMessage()>:
4001ba4c:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
4001ba50:	e24dd024 	sub	sp, sp, #36	; 0x24
4001ba54:	e59f5188 	ldr	r5, [pc, #392]	; 4001bbe4 <LLRPDevice::HandleRequestMessage()+0x198>
4001ba58:	e3a02006 	mov	r2, #6
4001ba5c:	e59f7184 	ldr	r7, [pc, #388]	; 4001bbe8 <LLRPDevice::HandleRequestMessage()+0x19c>
4001ba60:	e28d0008 	add	r0, sp, #8
4001ba64:	e5956000 	ldr	r6, [r5]
4001ba68:	e5971000 	ldr	r1, [r7]
4001ba6c:	e5d64042 	ldrb	r4, [r6, #66]	; 0x42
4001ba70:	e5d63043 	ldrb	r3, [r6, #67]	; 0x43
4001ba74:	e281104a 	add	r1, r1, #74	; 0x4a
4001ba78:	e1a04804 	lsl	r4, r4, #16
4001ba7c:	e204480f 	and	r4, r4, #983040	; 0xf0000
4001ba80:	e1844403 	orr	r4, r4, r3, lsl #8
4001ba84:	e5d63044 	ldrb	r3, [r6, #68]	; 0x44
4001ba88:	e1844003 	orr	r4, r4, r3
4001ba8c:	ebffffe8 	bl	4001ba34 <memcpy.isra.0>
4001ba90:	e3540012 	cmp	r4, #18
4001ba94:	9a00000f 	bls	4001bad8 <LLRPDevice::HandleRequestMessage()+0x8c>
4001ba98:	e2444012 	sub	r4, r4, #18
4001ba9c:	e3a03006 	mov	r3, #6
4001baa0:	e2869054 	add	r9, r6, #84	; 0x54
4001baa4:	e3a08000 	mov	r8, #0
4001baa8:	e734f314 	udiv	r4, r4, r3
4001baac:	e1580004 	cmp	r8, r4
4001bab0:	0a000008 	beq	4001bad8 <LLRPDevice::HandleRequestMessage()+0x8c>
4001bab4:	e3a02006 	mov	r2, #6
4001bab8:	e28d1008 	add	r1, sp, #8
4001babc:	e1a00009 	mov	r0, r9
4001bac0:	ebffbd49 	bl	4000afec <memcmp>
4001bac4:	e3500000 	cmp	r0, #0
4001bac8:	0a000043 	beq	4001bbdc <LLRPDevice::HandleRequestMessage()+0x190>
4001bacc:	e2899006 	add	r9, r9, #6
4001bad0:	e2888001 	add	r8, r8, #1
4001bad4:	eafffff4 	b	4001baac <LLRPDevice::HandleRequestMessage()+0x60>
4001bad8:	e3a02006 	mov	r2, #6
4001badc:	e28d1008 	add	r1, sp, #8
4001bae0:	e2860046 	add	r0, r6, #70	; 0x46
4001bae4:	ebffbd40 	bl	4000afec <memcmp>
4001bae8:	e3500000 	cmp	r0, #0
4001baec:	ca00003a 	bgt	4001bbdc <LLRPDevice::HandleRequestMessage()+0x190>
4001baf0:	e3a02006 	mov	r2, #6
4001baf4:	e286104c 	add	r1, r6, #76	; 0x4c
4001baf8:	e28d0008 	add	r0, sp, #8
4001bafc:	ebffbd3a 	bl	4000afec <memcmp>
4001bb00:	e3500000 	cmp	r0, #0
4001bb04:	ca000034 	bgt	4001bbdc <LLRPDevice::HandleRequestMessage()+0x190>
4001bb08:	e5954000 	ldr	r4, [r5]
4001bb0c:	e3a02010 	mov	r2, #16
4001bb10:	e08d0002 	add	r0, sp, r2
4001bb14:	e2845017 	add	r5, r4, #23
4001bb18:	e1a01005 	mov	r1, r5
4001bb1c:	ebffffc4 	bl	4001ba34 <memcpy.isra.0>
4001bb20:	e3a03043 	mov	r3, #67	; 0x43
4001bb24:	e3a02010 	mov	r2, #16
4001bb28:	e5c43012 	strb	r3, [r4, #18]
4001bb2c:	e1a00005 	mov	r0, r5
4001bb30:	e59f30b4 	ldr	r3, [pc, #180]	; 4001bbec <LLRPDevice::HandleRequestMessage()+0x1a0>
4001bb34:	e59f50b4 	ldr	r5, [pc, #180]	; 4001bbf0 <LLRPDevice::HandleRequestMessage()+0x1a4>
4001bb38:	e5931000 	ldr	r1, [r3]
4001bb3c:	e0811002 	add	r1, r1, r2
4001bb40:	ebffffbb 	bl	4001ba34 <memcpy.isra.0>
4001bb44:	e3a0302c 	mov	r3, #44	; 0x2c
4001bb48:	e3a02010 	mov	r2, #16
4001bb4c:	e5c43029 	strb	r3, [r4, #41]	; 0x29
4001bb50:	e3a03000 	mov	r3, #0
4001bb54:	e5c4302a 	strb	r3, [r4, #42]	; 0x2a
4001bb58:	e284002e 	add	r0, r4, #46	; 0x2e
4001bb5c:	e5c4302b 	strb	r3, [r4, #43]	; 0x2b
4001bb60:	e5c4302c 	strb	r3, [r4, #44]	; 0x2c
4001bb64:	e3a03002 	mov	r3, #2
4001bb68:	e08d1002 	add	r1, sp, r2
4001bb6c:	e5c4302d 	strb	r3, [r4, #45]	; 0x2d
4001bb70:	ebffffaf 	bl	4001ba34 <memcpy.isra.0>
4001bb74:	e5971000 	ldr	r1, [r7]
4001bb78:	e3a03011 	mov	r3, #17
4001bb7c:	e5c43044 	strb	r3, [r4, #68]	; 0x44
4001bb80:	e3a03001 	mov	r3, #1
4001bb84:	e5c43045 	strb	r3, [r4, #69]	; 0x45
4001bb88:	e3a02006 	mov	r2, #6
4001bb8c:	e281104a 	add	r1, r1, #74	; 0x4a
4001bb90:	e2840046 	add	r0, r4, #70	; 0x46
4001bb94:	ebffffa6 	bl	4001ba34 <memcpy.isra.0>
4001bb98:	e284004c 	add	r0, r4, #76	; 0x4c
4001bb9c:	e3a02006 	mov	r2, #6
4001bba0:	e1a01005 	mov	r1, r5
4001bba4:	ebffffa2 	bl	4001ba34 <memcpy.isra.0>
4001bba8:	e3e03000 	mvn	r3, #0
4001bbac:	e5c43052 	strb	r3, [r4, #82]	; 0x52
4001bbb0:	e59f303c 	ldr	r3, [pc, #60]	; 4001bbf4 <LLRPDevice::HandleRequestMessage()+0x1a8>
4001bbb4:	e5930000 	ldr	r0, [r3]
4001bbb8:	e5153014 	ldr	r3, [r5, #-20]	; 0xffffffec
4001bbbc:	e3530000 	cmp	r3, #0
4001bbc0:	0a000005 	beq	4001bbdc <LLRPDevice::HandleRequestMessage()+0x190>
4001bbc4:	e30135c1 	movw	r3, #5569	; 0x15c1
4001bbc8:	e3a02053 	mov	r2, #83	; 0x53
4001bbcc:	e58d3000 	str	r3, [sp]
4001bbd0:	e1a01004 	mov	r1, r4
4001bbd4:	e59f301c 	ldr	r3, [pc, #28]	; 4001bbf8 <LLRPDevice::HandleRequestMessage()+0x1ac>
4001bbd8:	eb0019e6 	bl	40022378 <net::udp_send(long, unsigned char const*, unsigned long, unsigned long, unsigned short)>
4001bbdc:	e28dd024 	add	sp, sp, #36	; 0x24
4001bbe0:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
4001bbe4:	40034004 	andmi	r4, r3, r4
4001bbe8:	40058ee0 	andmi	r8, r5, r0, ror #29
4001bbec:	40034088 	andmi	r4, r3, r8, lsl #1
4001bbf0:	4005a750 	andmi	sl, r5, r0, asr r7
4001bbf4:	4003400c 	andmi	r4, r3, ip
4001bbf8:	86faffef 	ldrbthi	pc, [sl], pc, ror #31	; <UNPREDICTABLE>

4001bbfc <LLRPDevice::HandleRdmCommand()>:
4001bbfc:	e59f30d0 	ldr	r3, [pc, #208]	; 4001bcd4 <LLRPDevice::HandleRdmCommand()+0xd8>
4001bc00:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
4001bc04:	e24dd01c 	sub	sp, sp, #28
4001bc08:	e5934000 	ldr	r4, [r3]
4001bc0c:	e59f70c4 	ldr	r7, [pc, #196]	; 4001bcd8 <LLRPDevice::HandleRdmCommand()+0xdc>
4001bc10:	e2849046 	add	r9, r4, #70	; 0x46
4001bc14:	e1a02007 	mov	r2, r7
4001bc18:	e1a01009 	mov	r1, r9
4001bc1c:	ebfffedd 	bl	4001b798 <RDMHandler::HandleData(unsigned char const*, unsigned char*)>
4001bc20:	e5d73000 	ldrb	r3, [r7]
4001bc24:	e35300cc 	cmp	r3, #204	; 0xcc
4001bc28:	1a000027 	bne	4001bccc <LLRPDevice::HandleRdmCommand()+0xd0>
4001bc2c:	e2848017 	add	r8, r4, #23
4001bc30:	e3a02010 	mov	r2, #16
4001bc34:	e1a01008 	mov	r1, r8
4001bc38:	e28d0008 	add	r0, sp, #8
4001bc3c:	ebffff7c 	bl	4001ba34 <memcpy.isra.0>
4001bc40:	e5d76002 	ldrb	r6, [r7, #2]
4001bc44:	e3a02010 	mov	r2, #16
4001bc48:	e59f308c 	ldr	r3, [pc, #140]	; 4001bcdc <LLRPDevice::HandleRdmCommand()+0xe0>
4001bc4c:	e1a00008 	mov	r0, r8
4001bc50:	e2865037 	add	r5, r6, #55	; 0x37
4001bc54:	e5931000 	ldr	r1, [r3]
4001bc58:	e6ef5075 	uxtb	r5, r5
4001bc5c:	e5c45012 	strb	r5, [r4, #18]
4001bc60:	e0811002 	add	r1, r1, r2
4001bc64:	ebffff72 	bl	4001ba34 <memcpy.isra.0>
4001bc68:	e2863020 	add	r3, r6, #32
4001bc6c:	e3a02010 	mov	r2, #16
4001bc70:	e5c43029 	strb	r3, [r4, #41]	; 0x29
4001bc74:	e28d1008 	add	r1, sp, #8
4001bc78:	e284002e 	add	r0, r4, #46	; 0x2e
4001bc7c:	ebffff6c 	bl	4001ba34 <memcpy.isra.0>
4001bc80:	e2863005 	add	r3, r6, #5
4001bc84:	e2862001 	add	r2, r6, #1
4001bc88:	e5c43044 	strb	r3, [r4, #68]	; 0x44
4001bc8c:	e6ef2072 	uxtb	r2, r2
4001bc90:	e1a00009 	mov	r0, r9
4001bc94:	e2871001 	add	r1, r7, #1
4001bc98:	ebffff65 	bl	4001ba34 <memcpy.isra.0>
4001bc9c:	e59f303c 	ldr	r3, [pc, #60]	; 4001bce0 <LLRPDevice::HandleRdmCommand()+0xe4>
4001bca0:	e2852010 	add	r2, r5, #16
4001bca4:	e5930000 	ldr	r0, [r3]
4001bca8:	e59f3034 	ldr	r3, [pc, #52]	; 4001bce4 <LLRPDevice::HandleRdmCommand()+0xe8>
4001bcac:	e5933000 	ldr	r3, [r3]
4001bcb0:	e3530000 	cmp	r3, #0
4001bcb4:	0a000004 	beq	4001bccc <LLRPDevice::HandleRdmCommand()+0xd0>
4001bcb8:	e30135c1 	movw	r3, #5569	; 0x15c1
4001bcbc:	e1a01004 	mov	r1, r4
4001bcc0:	e58d3000 	str	r3, [sp]
4001bcc4:	e59f301c 	ldr	r3, [pc, #28]	; 4001bce8 <LLRPDevice::HandleRdmCommand()+0xec>
4001bcc8:	eb0019aa 	bl	40022378 <net::udp_send(long, unsigned char const*, unsigned long, unsigned long, unsigned short)>
4001bccc:	e28dd01c 	add	sp, sp, #28
4001bcd0:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
4001bcd4:	40034004 	andmi	r4, r3, r4
4001bcd8:	40058ef8 	strdmi	r8, [r5], -r8	; <UNPREDICTABLE>
4001bcdc:	40034088 	andmi	r4, r3, r8, lsl #1
4001bce0:	4003400c 	andmi	r4, r3, ip
4001bce4:	4005a73c 	andmi	sl, r5, ip, lsr r7
4001bce8:	86faffef 	ldrbthi	pc, [sl], pc, ror #31	; <UNPREDICTABLE>

4001bcec <memcpy.isra.0>:
4001bcec:	e0812002 	add	r2, r1, r2
4001bcf0:	e1510002 	cmp	r1, r2
4001bcf4:	012fff1e 	bxeq	lr
4001bcf8:	e4d13001 	ldrb	r3, [r1], #1
4001bcfc:	e4c03001 	strb	r3, [r0], #1
4001bd00:	eafffffa 	b	4001bcf0 <memcpy.isra.0+0x4>

4001bd04 <RDMHandler::GetInterfaceList(unsigned short)>:
4001bd04:	e5903008 	ldr	r3, [r0, #8]
4001bd08:	e3a02000 	mov	r2, #0
4001bd0c:	e3a01001 	mov	r1, #1
4001bd10:	e5c32018 	strb	r2, [r3, #24]
4001bd14:	e5c32019 	strb	r2, [r3, #25]
4001bd18:	e5c3201a 	strb	r2, [r3, #26]
4001bd1c:	e5c3201c 	strb	r2, [r3, #28]
4001bd20:	e3a02006 	mov	r2, #6
4001bd24:	e5c3101b 	strb	r1, [r3, #27]
4001bd28:	e5c3201d 	strb	r2, [r3, #29]
4001bd2c:	e5c32017 	strb	r2, [r3, #23]
4001bd30:	eafffd06 	b	4001b150 <RDMHandler::RespondMessageAck()>

4001bd34 <RDMHandler::GetInterfaceName(unsigned short)>:
4001bd34:	e92d4070 	push	{r4, r5, r6, lr}
4001bd38:	e3a02004 	mov	r2, #4
4001bd3c:	e9900042 	ldmib	r0, {r1, r6}
4001bd40:	e1a04000 	mov	r4, r0
4001bd44:	e2811017 	add	r1, r1, #23
4001bd48:	e2860018 	add	r0, r6, #24
4001bd4c:	ebffffe6 	bl	4001bcec <memcpy.isra.0>
4001bd50:	e59fc078 	ldr	ip, [pc, #120]	; 4001bdd0 <RDMHandler::GetInterfaceName(unsigned short)+0x9c>
4001bd54:	e59f0078 	ldr	r0, [pc, #120]	; 4001bdd4 <RDMHandler::GetInterfaceName(unsigned short)+0xa0>
4001bd58:	e59c3000 	ldr	r3, [ip]
4001bd5c:	e3130001 	tst	r3, #1
4001bd60:	1a00000e 	bne	4001bda0 <RDMHandler::GetInterfaceName(unsigned short)+0x6c>
4001bd64:	e5903000 	ldr	r3, [r0]
4001bd68:	e2832004 	add	r2, r3, #4
4001bd6c:	e1a01002 	mov	r1, r2
4001bd70:	e1a03001 	mov	r3, r1
4001bd74:	e2811001 	add	r1, r1, #1
4001bd78:	e5d3e000 	ldrb	lr, [r3]
4001bd7c:	e35e0000 	cmp	lr, #0
4001bd80:	1afffffa 	bne	4001bd70 <RDMHandler::GetInterfaceName(unsigned short)+0x3c>
4001bd84:	e0433002 	sub	r3, r3, r2
4001bd88:	e59f2048 	ldr	r2, [pc, #72]	; 4001bdd8 <RDMHandler::GetInterfaceName(unsigned short)+0xa4>
4001bd8c:	e3530020 	cmp	r3, #32
4001bd90:	23a03020 	movcs	r3, #32
4001bd94:	e5823000 	str	r3, [r2]
4001bd98:	e3a03001 	mov	r3, #1
4001bd9c:	e58c3000 	str	r3, [ip]
4001bda0:	e59f3030 	ldr	r3, [pc, #48]	; 4001bdd8 <RDMHandler::GetInterfaceName(unsigned short)+0xa4>
4001bda4:	e5901000 	ldr	r1, [r0]
4001bda8:	e286001c 	add	r0, r6, #28
4001bdac:	e5935000 	ldr	r5, [r3]
4001bdb0:	e2811004 	add	r1, r1, #4
4001bdb4:	e1a02005 	mov	r2, r5
4001bdb8:	e2855004 	add	r5, r5, #4
4001bdbc:	ebffffca 	bl	4001bcec <memcpy.isra.0>
4001bdc0:	e5c65017 	strb	r5, [r6, #23]
4001bdc4:	e1a00004 	mov	r0, r4
4001bdc8:	e8bd4070 	pop	{r4, r5, r6, lr}
4001bdcc:	eafffcdf 	b	4001b150 <RDMHandler::RespondMessageAck()>
4001bdd0:	40058ffc 	strdmi	r8, [r5], -ip
4001bdd4:	40034080 	andmi	r4, r3, r0, lsl #1
4001bdd8:	40059014 	andmi	r9, r5, r4, lsl r0

4001bddc <RDMHandler::GetHardwareAddress(unsigned short)>:
4001bddc:	e92d4070 	push	{r4, r5, r6, lr}
4001bde0:	e3a02004 	mov	r2, #4
4001bde4:	e9900022 	ldmib	r0, {r1, r5}
4001bde8:	e1a04000 	mov	r4, r0
4001bdec:	e2811017 	add	r1, r1, #23
4001bdf0:	e2850018 	add	r0, r5, #24
4001bdf4:	ebffffbc 	bl	4001bcec <memcpy.isra.0>
4001bdf8:	e59f101c 	ldr	r1, [pc, #28]	; 4001be1c <RDMHandler::GetHardwareAddress(unsigned short)+0x40>
4001bdfc:	e285001c 	add	r0, r5, #28
4001be00:	e3a02006 	mov	r2, #6
4001be04:	ebffffb8 	bl	4001bcec <memcpy.isra.0>
4001be08:	e3a0300a 	mov	r3, #10
4001be0c:	e1a00004 	mov	r0, r4
4001be10:	e5c53017 	strb	r3, [r5, #23]
4001be14:	e8bd4070 	pop	{r4, r5, r6, lr}
4001be18:	eafffccc 	b	4001b150 <RDMHandler::RespondMessageAck()>
4001be1c:	4005a750 	andmi	sl, r5, r0, asr r7

4001be20 <RDMHandler::GetDHCPMode(unsigned short)>:
4001be20:	e92d4070 	push	{r4, r5, r6, lr}
4001be24:	e3a02004 	mov	r2, #4
4001be28:	e9900022 	ldmib	r0, {r1, r5}
4001be2c:	e1a04000 	mov	r4, r0
4001be30:	e2811017 	add	r1, r1, #23
4001be34:	e2850018 	add	r0, r5, #24
4001be38:	ebffffab 	bl	4001bcec <memcpy.isra.0>
4001be3c:	e59f301c 	ldr	r3, [pc, #28]	; 4001be60 <RDMHandler::GetDHCPMode(unsigned short)+0x40>
4001be40:	e1a00004 	mov	r0, r4
4001be44:	e5d3301a 	ldrb	r3, [r3, #26]
4001be48:	e7e030d3 	ubfx	r3, r3, #1, #1
4001be4c:	e5c5301c 	strb	r3, [r5, #28]
4001be50:	e3a03005 	mov	r3, #5
4001be54:	e5c53017 	strb	r3, [r5, #23]
4001be58:	e8bd4070 	pop	{r4, r5, r6, lr}
4001be5c:	eafffcbb 	b	4001b150 <RDMHandler::RespondMessageAck()>
4001be60:	4005a73c 	andmi	sl, r5, ip, lsr r7

4001be64 <RDMHandler::SetDHCPMode(bool, unsigned short)>:
4001be64:	e5903004 	ldr	r3, [r0, #4]
4001be68:	e5d3201b 	ldrb	r2, [r3, #27]
4001be6c:	e3520001 	cmp	r2, #1
4001be70:	8a000005 	bhi	4001be8c <RDMHandler::SetDHCPMode(bool, unsigned short)+0x28>
4001be74:	e59f3018 	ldr	r3, [pc, #24]	; 4001be94 <RDMHandler::SetDHCPMode(bool, unsigned short)+0x30>
4001be78:	e5c32010 	strb	r2, [r3, #16]
4001be7c:	e5932000 	ldr	r2, [r3]
4001be80:	e3822008 	orr	r2, r2, #8
4001be84:	e5832000 	str	r2, [r3]
4001be88:	eafffcb0 	b	4001b150 <RDMHandler::RespondMessageAck()>
4001be8c:	e3a01006 	mov	r1, #6
4001be90:	eafffd5c 	b	4001b408 <RDMHandler::RespondMessageNack(unsigned short)>
4001be94:	40059000 	andmi	r9, r5, r0

4001be98 <RDMHandler::GetNameServers(unsigned short)>:
4001be98:	e5903004 	ldr	r3, [r0, #4]
4001be9c:	e92d4037 	push	{r0, r1, r2, r4, r5, lr}
4001bea0:	e5d33017 	ldrb	r3, [r3, #23]
4001bea4:	e3530002 	cmp	r3, #2
4001bea8:	9a000003 	bls	4001bebc <RDMHandler::GetNameServers(unsigned short)+0x24>
4001beac:	e3a01006 	mov	r1, #6
4001beb0:	e28dd00c 	add	sp, sp, #12
4001beb4:	e8bd4030 	pop	{r4, r5, lr}
4001beb8:	eafffd52 	b	4001b408 <RDMHandler::RespondMessageNack(unsigned short)>
4001bebc:	e59f2040 	ldr	r2, [pc, #64]	; 4001bf04 <RDMHandler::GetNameServers(unsigned short)+0x6c>
4001bec0:	e1a04000 	mov	r4, r0
4001bec4:	e5905008 	ldr	r5, [r0, #8]
4001bec8:	e5922000 	ldr	r2, [r2]
4001becc:	e2850019 	add	r0, r5, #25
4001bed0:	e0822103 	add	r2, r2, r3, lsl #2
4001bed4:	e5922094 	ldr	r2, [r2, #148]	; 0x94
4001bed8:	e5c53018 	strb	r3, [r5, #24]
4001bedc:	e58d2004 	str	r2, [sp, #4]
4001bee0:	e3a02004 	mov	r2, #4
4001bee4:	e08d1002 	add	r1, sp, r2
4001bee8:	ebffff7f 	bl	4001bcec <memcpy.isra.0>
4001beec:	e3a03005 	mov	r3, #5
4001bef0:	e1a00004 	mov	r0, r4
4001bef4:	e5c53017 	strb	r3, [r5, #23]
4001bef8:	ebfffc94 	bl	4001b150 <RDMHandler::RespondMessageAck()>
4001befc:	e28dd00c 	add	sp, sp, #12
4001bf00:	e8bd8030 	pop	{r4, r5, pc}
4001bf04:	40034080 	andmi	r4, r3, r0, lsl #1

4001bf08 <RDMHandler::GetZeroconf(unsigned short)>:
4001bf08:	e92d4070 	push	{r4, r5, r6, lr}
4001bf0c:	e3a02004 	mov	r2, #4
4001bf10:	e9900022 	ldmib	r0, {r1, r5}
4001bf14:	e1a04000 	mov	r4, r0
4001bf18:	e2811017 	add	r1, r1, #23
4001bf1c:	e2850018 	add	r0, r5, #24
4001bf20:	ebffff71 	bl	4001bcec <memcpy.isra.0>
4001bf24:	e59f301c 	ldr	r3, [pc, #28]	; 4001bf48 <RDMHandler::GetZeroconf(unsigned short)+0x40>
4001bf28:	e1a00004 	mov	r0, r4
4001bf2c:	e5d3301a 	ldrb	r3, [r3, #26]
4001bf30:	e7e03153 	ubfx	r3, r3, #2, #1
4001bf34:	e5c5301c 	strb	r3, [r5, #28]
4001bf38:	e3a03005 	mov	r3, #5
4001bf3c:	e5c53017 	strb	r3, [r5, #23]
4001bf40:	e8bd4070 	pop	{r4, r5, r6, lr}
4001bf44:	eafffc81 	b	4001b150 <RDMHandler::RespondMessageAck()>
4001bf48:	4005a73c 	andmi	sl, r5, ip, lsr r7

4001bf4c <RDMHandler::SetZeroconf(bool, unsigned short)>:
4001bf4c:	e5903004 	ldr	r3, [r0, #4]
4001bf50:	e5d3301b 	ldrb	r3, [r3, #27]
4001bf54:	e3530001 	cmp	r3, #1
4001bf58:	1a000004 	bne	4001bf70 <RDMHandler::SetZeroconf(bool, unsigned short)+0x24>
4001bf5c:	e59f2044 	ldr	r2, [pc, #68]	; 4001bfa8 <RDMHandler::SetZeroconf(bool, unsigned short)+0x5c>
4001bf60:	e5923000 	ldr	r3, [r2]
4001bf64:	e3833010 	orr	r3, r3, #16
4001bf68:	e5823000 	str	r3, [r2]
4001bf6c:	eafffc77 	b	4001b150 <RDMHandler::RespondMessageAck()>
4001bf70:	e3530000 	cmp	r3, #0
4001bf74:	1a000009 	bne	4001bfa0 <RDMHandler::SetZeroconf(bool, unsigned short)+0x54>
4001bf78:	e59f202c 	ldr	r2, [pc, #44]	; 4001bfac <RDMHandler::SetZeroconf(bool, unsigned short)+0x60>
4001bf7c:	e59f3024 	ldr	r3, [pc, #36]	; 4001bfa8 <RDMHandler::SetZeroconf(bool, unsigned short)+0x5c>
4001bf80:	e5921000 	ldr	r1, [r2]
4001bf84:	e5922004 	ldr	r2, [r2, #4]
4001bf88:	e5831004 	str	r1, [r3, #4]
4001bf8c:	e5832008 	str	r2, [r3, #8]
4001bf90:	e5932000 	ldr	r2, [r3]
4001bf94:	e3822003 	orr	r2, r2, #3
4001bf98:	e5832000 	str	r2, [r3]
4001bf9c:	eafffff2 	b	4001bf6c <RDMHandler::SetZeroconf(bool, unsigned short)+0x20>
4001bfa0:	e3a01006 	mov	r1, #6
4001bfa4:	eafffd17 	b	4001b408 <RDMHandler::RespondMessageNack(unsigned short)>
4001bfa8:	40059000 	andmi	r9, r5, r0
4001bfac:	4005a73c 	andmi	sl, r5, ip, lsr r7

4001bfb0 <RDMHandler::RenewDhcp(bool, unsigned short)>:
4001bfb0:	e59f3030 	ldr	r3, [pc, #48]	; 4001bfe8 <RDMHandler::RenewDhcp(bool, unsigned short)+0x38>
4001bfb4:	e5d3301a 	ldrb	r3, [r3, #26]
4001bfb8:	e3130002 	tst	r3, #2
4001bfbc:	1a000001 	bne	4001bfc8 <RDMHandler::RenewDhcp(bool, unsigned short)+0x18>
4001bfc0:	e3a0100b 	mov	r1, #11
4001bfc4:	eafffd0f 	b	4001b408 <RDMHandler::RespondMessageNack(unsigned short)>
4001bfc8:	e59f301c 	ldr	r3, [pc, #28]	; 4001bfec <RDMHandler::RenewDhcp(bool, unsigned short)+0x3c>
4001bfcc:	e92d4010 	push	{r4, lr}
4001bfd0:	e1a04000 	mov	r4, r0
4001bfd4:	e5930000 	ldr	r0, [r3]
4001bfd8:	eb001112 	bl	40020428 <Network::EnableDhcp()>
4001bfdc:	e1a00004 	mov	r0, r4
4001bfe0:	e8bd4010 	pop	{r4, lr}
4001bfe4:	eafffc59 	b	4001b150 <RDMHandler::RespondMessageAck()>
4001bfe8:	4005a73c 	andmi	sl, r5, ip, lsr r7
4001bfec:	40034080 	andmi	r4, r3, r0, lsl #1

4001bff0 <RDMHandler::GetAddressNetmask(unsigned short)>:
4001bff0:	e92d4073 	push	{r0, r1, r4, r5, r6, lr}
4001bff4:	e3a02004 	mov	r2, #4
4001bff8:	e59f6058 	ldr	r6, [pc, #88]	; 4001c058 <RDMHandler::GetAddressNetmask(unsigned short)+0x68>
4001bffc:	e1a04000 	mov	r4, r0
4001c000:	e9900022 	ldmib	r0, {r1, r5}
4001c004:	e5963000 	ldr	r3, [r6]
4001c008:	e2850018 	add	r0, r5, #24
4001c00c:	e2811017 	add	r1, r1, #23
4001c010:	e58d3004 	str	r3, [sp, #4]
4001c014:	ebffff34 	bl	4001bcec <memcpy.isra.0>
4001c018:	e3a02004 	mov	r2, #4
4001c01c:	e285001c 	add	r0, r5, #28
4001c020:	e08d1002 	add	r1, sp, r2
4001c024:	ebffff30 	bl	4001bcec <memcpy.isra.0>
4001c028:	e5960004 	ldr	r0, [r6, #4]
4001c02c:	eb0045ec 	bl	4002d7e4 <__popcountsi2>
4001c030:	e5d6301a 	ldrb	r3, [r6, #26]
4001c034:	e5c50020 	strb	r0, [r5, #32]
4001c038:	e1a00004 	mov	r0, r4
4001c03c:	e7e030d3 	ubfx	r3, r3, #1, #1
4001c040:	e5c53021 	strb	r3, [r5, #33]	; 0x21
4001c044:	e3a0300a 	mov	r3, #10
4001c048:	e5c53017 	strb	r3, [r5, #23]
4001c04c:	ebfffc3f 	bl	4001b150 <RDMHandler::RespondMessageAck()>
4001c050:	e28dd008 	add	sp, sp, #8
4001c054:	e8bd8070 	pop	{r4, r5, r6, pc}
4001c058:	4005a73c 	andmi	sl, r5, ip, lsr r7

4001c05c <RDMHandler::GetStaticAddress(unsigned short)>:
4001c05c:	e92d4073 	push	{r0, r1, r4, r5, r6, lr}
4001c060:	e3a02004 	mov	r2, #4
4001c064:	e59f604c 	ldr	r6, [pc, #76]	; 4001c0b8 <RDMHandler::GetStaticAddress(unsigned short)+0x5c>
4001c068:	e1a04000 	mov	r4, r0
4001c06c:	e9900022 	ldmib	r0, {r1, r5}
4001c070:	e5963000 	ldr	r3, [r6]
4001c074:	e2850018 	add	r0, r5, #24
4001c078:	e2811017 	add	r1, r1, #23
4001c07c:	e58d3004 	str	r3, [sp, #4]
4001c080:	ebffff19 	bl	4001bcec <memcpy.isra.0>
4001c084:	e3a02004 	mov	r2, #4
4001c088:	e285001c 	add	r0, r5, #28
4001c08c:	e08d1002 	add	r1, sp, r2
4001c090:	ebffff15 	bl	4001bcec <memcpy.isra.0>
4001c094:	e5960004 	ldr	r0, [r6, #4]
4001c098:	eb0045d1 	bl	4002d7e4 <__popcountsi2>
4001c09c:	e5c50020 	strb	r0, [r5, #32]
4001c0a0:	e3a03009 	mov	r3, #9
4001c0a4:	e5c53017 	strb	r3, [r5, #23]
4001c0a8:	e1a00004 	mov	r0, r4
4001c0ac:	ebfffc27 	bl	4001b150 <RDMHandler::RespondMessageAck()>
4001c0b0:	e28dd008 	add	sp, sp, #8
4001c0b4:	e8bd8070 	pop	{r4, r5, r6, pc}
4001c0b8:	4005a73c 	andmi	sl, r5, ip, lsr r7

4001c0bc <RDMHandler::SetStaticAddress(bool, unsigned short)>:
4001c0bc:	e92d4037 	push	{r0, r1, r2, r4, r5, lr}
4001c0c0:	e5905004 	ldr	r5, [r0, #4]
4001c0c4:	e5d53016 	ldrb	r3, [r5, #22]
4001c0c8:	e3530009 	cmp	r3, #9
4001c0cc:	0a000003 	beq	4001c0e0 <RDMHandler::SetStaticAddress(bool, unsigned short)+0x24>
4001c0d0:	e3a01001 	mov	r1, #1
4001c0d4:	e28dd00c 	add	sp, sp, #12
4001c0d8:	e8bd4030 	pop	{r4, r5, lr}
4001c0dc:	eafffcc9 	b	4001b408 <RDMHandler::RespondMessageNack(unsigned short)>
4001c0e0:	e3a02004 	mov	r2, #4
4001c0e4:	e1a04000 	mov	r4, r0
4001c0e8:	e08d0002 	add	r0, sp, r2
4001c0ec:	e285101b 	add	r1, r5, #27
4001c0f0:	ebfffefd 	bl	4001bcec <memcpy.isra.0>
4001c0f4:	e5d5301f 	ldrb	r3, [r5, #31]
4001c0f8:	e1a00004 	mov	r0, r4
4001c0fc:	e59d1004 	ldr	r1, [sp, #4]
4001c100:	e3530000 	cmp	r3, #0
4001c104:	12633020 	rsbne	r3, r3, #32
4001c108:	13e02000 	mvnne	r2, #0
4001c10c:	11a03312 	lslne	r3, r2, r3
4001c110:	16bf3f33 	revne	r3, r3
4001c114:	e3510000 	cmp	r1, #0
4001c118:	059f2030 	ldreq	r2, [pc, #48]	; 4001c150 <RDMHandler::SetStaticAddress(bool, unsigned short)+0x94>
4001c11c:	05921000 	ldreq	r1, [r2]
4001c120:	e3530000 	cmp	r3, #0
4001c124:	e59f2028 	ldr	r2, [pc, #40]	; 4001c154 <RDMHandler::SetStaticAddress(bool, unsigned short)+0x98>
4001c128:	059f3020 	ldreq	r3, [pc, #32]	; 4001c150 <RDMHandler::SetStaticAddress(bool, unsigned short)+0x94>
4001c12c:	e5821004 	str	r1, [r2, #4]
4001c130:	05933004 	ldreq	r3, [r3, #4]
4001c134:	e5823008 	str	r3, [r2, #8]
4001c138:	e5923000 	ldr	r3, [r2]
4001c13c:	e3833003 	orr	r3, r3, #3
4001c140:	e5823000 	str	r3, [r2]
4001c144:	ebfffc01 	bl	4001b150 <RDMHandler::RespondMessageAck()>
4001c148:	e28dd00c 	add	sp, sp, #12
4001c14c:	e8bd8030 	pop	{r4, r5, pc}
4001c150:	4005a73c 	andmi	sl, r5, ip, lsr r7
4001c154:	40059000 	andmi	r9, r5, r0

4001c158 <RDMHandler::ApplyConfiguration(bool, unsigned short)>:
4001c158:	e92d4070 	push	{r4, r5, r6, lr}
4001c15c:	e1a05000 	mov	r5, r0
4001c160:	e59f40cc 	ldr	r4, [pc, #204]	; 4001c234 <RDMHandler::ApplyConfiguration(bool, unsigned short)+0xdc>
4001c164:	e5943000 	ldr	r3, [r4]
4001c168:	e3530000 	cmp	r3, #0
4001c16c:	0a00002c 	beq	4001c224 <RDMHandler::ApplyConfiguration(bool, unsigned short)+0xcc>
4001c170:	e3130001 	tst	r3, #1
4001c174:	1a00000c 	bne	4001c1ac <RDMHandler::ApplyConfiguration(bool, unsigned short)+0x54>
4001c178:	e3130006 	tst	r3, #6
4001c17c:	1a00000e 	bne	4001c1bc <RDMHandler::ApplyConfiguration(bool, unsigned short)+0x64>
4001c180:	e2136008 	ands	r6, r3, #8
4001c184:	0a00001f 	beq	4001c208 <RDMHandler::ApplyConfiguration(bool, unsigned short)+0xb0>
4001c188:	e5d43010 	ldrb	r3, [r4, #16]
4001c18c:	e3530001 	cmp	r3, #1
4001c190:	1a000002 	bne	4001c1a0 <RDMHandler::ApplyConfiguration(bool, unsigned short)+0x48>
4001c194:	e59f309c 	ldr	r3, [pc, #156]	; 4001c238 <RDMHandler::ApplyConfiguration(bool, unsigned short)+0xe0>
4001c198:	e5930000 	ldr	r0, [r3]
4001c19c:	eb0010a1 	bl	40020428 <Network::EnableDhcp()>
4001c1a0:	e3a03002 	mov	r3, #2
4001c1a4:	e5c43010 	strb	r3, [r4, #16]
4001c1a8:	ea000011 	b	4001c1f4 <RDMHandler::ApplyConfiguration(bool, unsigned short)+0x9c>
4001c1ac:	e59f3084 	ldr	r3, [pc, #132]	; 4001c238 <RDMHandler::ApplyConfiguration(bool, unsigned short)+0xe0>
4001c1b0:	e5941004 	ldr	r1, [r4, #4]
4001c1b4:	e5930000 	ldr	r0, [r3]
4001c1b8:	eb00102b 	bl	4002026c <Network::SetIp(unsigned long)>
4001c1bc:	e5943000 	ldr	r3, [r4]
4001c1c0:	e3130002 	tst	r3, #2
4001c1c4:	0a000003 	beq	4001c1d8 <RDMHandler::ApplyConfiguration(bool, unsigned short)+0x80>
4001c1c8:	e59f3068 	ldr	r3, [pc, #104]	; 4001c238 <RDMHandler::ApplyConfiguration(bool, unsigned short)+0xe0>
4001c1cc:	e5941008 	ldr	r1, [r4, #8]
4001c1d0:	e5930000 	ldr	r0, [r3]
4001c1d4:	eb00103e 	bl	400202d4 <Network::SetNetmask(unsigned long)>
4001c1d8:	e5943000 	ldr	r3, [r4]
4001c1dc:	e3130004 	tst	r3, #4
4001c1e0:	0a000003 	beq	4001c1f4 <RDMHandler::ApplyConfiguration(bool, unsigned short)+0x9c>
4001c1e4:	e59f304c 	ldr	r3, [pc, #76]	; 4001c238 <RDMHandler::ApplyConfiguration(bool, unsigned short)+0xe0>
4001c1e8:	e594100c 	ldr	r1, [r4, #12]
4001c1ec:	e5930000 	ldr	r0, [r3]
4001c1f0:	eb00104f 	bl	40020334 <Network::SetGatewayIp(unsigned long)>
4001c1f4:	e3a03000 	mov	r3, #0
4001c1f8:	e5843000 	str	r3, [r4]
4001c1fc:	e1a00005 	mov	r0, r5
4001c200:	e8bd4070 	pop	{r4, r5, r6, lr}
4001c204:	eafffbd1 	b	4001b150 <RDMHandler::RespondMessageAck()>
4001c208:	e3130010 	tst	r3, #16
4001c20c:	0a000004 	beq	4001c224 <RDMHandler::ApplyConfiguration(bool, unsigned short)+0xcc>
4001c210:	e59f3020 	ldr	r3, [pc, #32]	; 4001c238 <RDMHandler::ApplyConfiguration(bool, unsigned short)+0xe0>
4001c214:	e5930000 	ldr	r0, [r3]
4001c218:	eb00107d 	bl	40020414 <Network::SetZeroconf()>
4001c21c:	e5846000 	str	r6, [r4]
4001c220:	eafffff5 	b	4001c1fc <RDMHandler::ApplyConfiguration(bool, unsigned short)+0xa4>
4001c224:	e1a00005 	mov	r0, r5
4001c228:	e3a01001 	mov	r1, #1
4001c22c:	e8bd4070 	pop	{r4, r5, r6, lr}
4001c230:	eafffc74 	b	4001b408 <RDMHandler::RespondMessageNack(unsigned short)>
4001c234:	40059000 	andmi	r9, r5, r0
4001c238:	40034080 	andmi	r4, r3, r0, lsl #1

4001c23c <RDMHandler::GetDefaultRoute(unsigned short)>:
4001c23c:	e59f3048 	ldr	r3, [pc, #72]	; 4001c28c <RDMHandler::GetDefaultRoute(unsigned short)+0x50>
4001c240:	e92d4037 	push	{r0, r1, r2, r4, r5, lr}
4001c244:	e1a04000 	mov	r4, r0
4001c248:	e9900022 	ldmib	r0, {r1, r5}
4001c24c:	e5933008 	ldr	r3, [r3, #8]
4001c250:	e3a02004 	mov	r2, #4
4001c254:	e2850018 	add	r0, r5, #24
4001c258:	e2811017 	add	r1, r1, #23
4001c25c:	e58d3004 	str	r3, [sp, #4]
4001c260:	ebfffea1 	bl	4001bcec <memcpy.isra.0>
4001c264:	e3a02004 	mov	r2, #4
4001c268:	e285001c 	add	r0, r5, #28
4001c26c:	e08d1002 	add	r1, sp, r2
4001c270:	ebfffe9d 	bl	4001bcec <memcpy.isra.0>
4001c274:	e3a03008 	mov	r3, #8
4001c278:	e1a00004 	mov	r0, r4
4001c27c:	e5c53017 	strb	r3, [r5, #23]
4001c280:	ebfffbb2 	bl	4001b150 <RDMHandler::RespondMessageAck()>
4001c284:	e28dd00c 	add	sp, sp, #12
4001c288:	e8bd8030 	pop	{r4, r5, pc}
4001c28c:	4005a73c 	andmi	sl, r5, ip, lsr r7

4001c290 <RDMHandler::SetDefaultRoute(bool, unsigned short)>:
4001c290:	e92d4013 	push	{r0, r1, r4, lr}
4001c294:	e5901004 	ldr	r1, [r0, #4]
4001c298:	e5d13016 	ldrb	r3, [r1, #22]
4001c29c:	e3530008 	cmp	r3, #8
4001c2a0:	0a000003 	beq	4001c2b4 <RDMHandler::SetDefaultRoute(bool, unsigned short)+0x24>
4001c2a4:	e3a01001 	mov	r1, #1
4001c2a8:	e28dd008 	add	sp, sp, #8
4001c2ac:	e8bd4010 	pop	{r4, lr}
4001c2b0:	eafffc54 	b	4001b408 <RDMHandler::RespondMessageNack(unsigned short)>
4001c2b4:	e3a02004 	mov	r2, #4
4001c2b8:	e1a04000 	mov	r4, r0
4001c2bc:	e08d0002 	add	r0, sp, r2
4001c2c0:	e281101b 	add	r1, r1, #27
4001c2c4:	ebfffe88 	bl	4001bcec <memcpy.isra.0>
4001c2c8:	e59d2004 	ldr	r2, [sp, #4]
4001c2cc:	e1a00004 	mov	r0, r4
4001c2d0:	e3520000 	cmp	r2, #0
4001c2d4:	059f3020 	ldreq	r3, [pc, #32]	; 4001c2fc <RDMHandler::SetDefaultRoute(bool, unsigned short)+0x6c>
4001c2d8:	05932008 	ldreq	r2, [r3, #8]
4001c2dc:	e59f301c 	ldr	r3, [pc, #28]	; 4001c300 <RDMHandler::SetDefaultRoute(bool, unsigned short)+0x70>
4001c2e0:	e583200c 	str	r2, [r3, #12]
4001c2e4:	e5932000 	ldr	r2, [r3]
4001c2e8:	e3822004 	orr	r2, r2, #4
4001c2ec:	e5832000 	str	r2, [r3]
4001c2f0:	ebfffb96 	bl	4001b150 <RDMHandler::RespondMessageAck()>
4001c2f4:	e28dd008 	add	sp, sp, #8
4001c2f8:	e8bd8010 	pop	{r4, pc}
4001c2fc:	4005a73c 	andmi	sl, r5, ip, lsr r7
4001c300:	40059000 	andmi	r9, r5, r0

4001c304 <RDMHandler::GetHostName(unsigned short)>:
4001c304:	e59f303c 	ldr	r3, [pc, #60]	; 4001c348 <RDMHandler::GetHostName(unsigned short)+0x44>
4001c308:	e92d4010 	push	{r4, lr}
4001c30c:	e1a04000 	mov	r4, r0
4001c310:	e5931000 	ldr	r1, [r3]
4001c314:	e2811014 	add	r1, r1, #20
4001c318:	e1a03001 	mov	r3, r1
4001c31c:	e1a02003 	mov	r2, r3
4001c320:	e2833001 	add	r3, r3, #1
4001c324:	e5d20000 	ldrb	r0, [r2]
4001c328:	e3500000 	cmp	r0, #0
4001c32c:	1afffffa 	bne	4001c31c <RDMHandler::GetHostName(unsigned short)+0x18>
4001c330:	e0422001 	sub	r2, r2, r1
4001c334:	e1a00004 	mov	r0, r4
4001c338:	ebfffb34 	bl	4001b010 <RDMHandler::HandleString(char const*, unsigned long)>
4001c33c:	e1a00004 	mov	r0, r4
4001c340:	e8bd4010 	pop	{r4, lr}
4001c344:	eafffb81 	b	4001b150 <RDMHandler::RespondMessageAck()>
4001c348:	40034080 	andmi	r4, r3, r0, lsl #1

4001c34c <RDMHandler::SetHostName(bool, unsigned short)>:
4001c34c:	e5901004 	ldr	r1, [r0, #4]
4001c350:	e5d13016 	ldrb	r3, [r1, #22]
4001c354:	e353003f 	cmp	r3, #63	; 0x3f
4001c358:	9a000001 	bls	4001c364 <RDMHandler::SetHostName(bool, unsigned short)+0x18>
4001c35c:	e3a01002 	mov	r1, #2
4001c360:	eafffc28 	b	4001b408 <RDMHandler::RespondMessageNack(unsigned short)>
4001c364:	e0813003 	add	r3, r1, r3
4001c368:	e3a02000 	mov	r2, #0
4001c36c:	e92d4010 	push	{r4, lr}
4001c370:	e2811017 	add	r1, r1, #23
4001c374:	e5c32017 	strb	r2, [r3, #23]
4001c378:	e1a04000 	mov	r4, r0
4001c37c:	e59f3010 	ldr	r3, [pc, #16]	; 4001c394 <RDMHandler::SetHostName(bool, unsigned short)+0x48>
4001c380:	e5930000 	ldr	r0, [r3]
4001c384:	eb001002 	bl	40020394 <Network::SetHostName(char const*)>
4001c388:	e1a00004 	mov	r0, r4
4001c38c:	e8bd4010 	pop	{r4, lr}
4001c390:	eafffb6e 	b	4001b150 <RDMHandler::RespondMessageAck()>
4001c394:	40034080 	andmi	r4, r3, r0, lsl #1

4001c398 <RDMHandler::GetDomainName(unsigned short)>:
4001c398:	e59f303c 	ldr	r3, [pc, #60]	; 4001c3dc <RDMHandler::GetDomainName(unsigned short)+0x44>
4001c39c:	e92d4010 	push	{r4, lr}
4001c3a0:	e1a04000 	mov	r4, r0
4001c3a4:	e5931000 	ldr	r1, [r3]
4001c3a8:	e2811054 	add	r1, r1, #84	; 0x54
4001c3ac:	e1a03001 	mov	r3, r1
4001c3b0:	e1a02003 	mov	r2, r3
4001c3b4:	e2833001 	add	r3, r3, #1
4001c3b8:	e5d20000 	ldrb	r0, [r2]
4001c3bc:	e3500000 	cmp	r0, #0
4001c3c0:	1afffffa 	bne	4001c3b0 <RDMHandler::GetDomainName(unsigned short)+0x18>
4001c3c4:	e0422001 	sub	r2, r2, r1
4001c3c8:	e1a00004 	mov	r0, r4
4001c3cc:	ebfffb0f 	bl	4001b010 <RDMHandler::HandleString(char const*, unsigned long)>
4001c3d0:	e1a00004 	mov	r0, r4
4001c3d4:	e8bd4010 	pop	{r4, lr}
4001c3d8:	eafffb5c 	b	4001b150 <RDMHandler::RespondMessageAck()>
4001c3dc:	40034080 	andmi	r4, r3, r0, lsl #1

4001c3e0 <RDMHandler::SetDomainName(bool, unsigned short)>:
4001c3e0:	e3a0100b 	mov	r1, #11
4001c3e4:	eafffc07 	b	4001b408 <RDMHandler::RespondMessageNack(unsigned short)>

4001c3e8 <_GLOBAL__sub_I__ZN10RDMHandler16CheckInterfaceIDEPK15TRdmMessageNoSc>:
4001c3e8:	e59f3008 	ldr	r3, [pc, #8]	; 4001c3f8 <_GLOBAL__sub_I__ZN10RDMHandler16CheckInterfaceIDEPK15TRdmMessageNoSc+0x10>
4001c3ec:	e3a02000 	mov	r2, #0
4001c3f0:	e5832000 	str	r2, [r3]
4001c3f4:	e12fff1e 	bx	lr
4001c3f8:	40059000 	andmi	r9, r5, r0

4001c3fc <RDMDevice::RDMDevice()>:
4001c3fc:	e59f10ac 	ldr	r1, [pc, #172]	; 4001c4b0 <RDMDevice::RDMDevice()+0xb4>
4001c400:	e3e03902 	mvn	r3, #32768	; 0x8000
4001c404:	e1c034b0 	strh	r3, [r0, #64]	; 0x40
4001c408:	e24dd008 	sub	sp, sp, #8
4001c40c:	e1c034b2 	strh	r3, [r0, #66]	; 0x42
4001c410:	e3a03000 	mov	r3, #0
4001c414:	e1c034b4 	strh	r3, [r0, #68]	; 0x44
4001c418:	e5c03050 	strb	r3, [r0, #80]	; 0x50
4001c41c:	e5c03052 	strb	r3, [r0, #82]	; 0x52
4001c420:	e59f308c 	ldr	r3, [pc, #140]	; 4001c4b4 <RDMDevice::RDMDevice()+0xb8>
4001c424:	e5830000 	str	r0, [r3]
4001c428:	e59f3088 	ldr	r3, [pc, #136]	; 4001c4b8 <RDMDevice::RDMDevice()+0xbc>
4001c42c:	e5d32000 	ldrb	r2, [r3]
4001c430:	e5c02046 	strb	r2, [r0, #70]	; 0x46
4001c434:	e1a0200d 	mov	r2, sp
4001c438:	e5d33001 	ldrb	r3, [r3, #1]
4001c43c:	e5c03047 	strb	r3, [r0, #71]	; 0x47
4001c440:	e3a03007 	mov	r3, #7
4001c444:	e2533001 	subs	r3, r3, #1
4001c448:	14d1c001 	ldrbne	ip, [r1], #1
4001c44c:	14c2c001 	strbne	ip, [r2], #1
4001c450:	1afffffb 	bne	4001c444 <RDMDevice::RDMDevice()+0x48>
4001c454:	e5dd3002 	ldrb	r3, [sp, #2]
4001c458:	e5dd2003 	ldrb	r2, [sp, #3]
4001c45c:	e5ddc005 	ldrb	ip, [sp, #5]
4001c460:	e5c03048 	strb	r3, [r0, #72]	; 0x48
4001c464:	e5c0304f 	strb	r3, [r0, #79]	; 0x4f
4001c468:	e3a03019 	mov	r3, #25
4001c46c:	e5dd1004 	ldrb	r1, [sp, #4]
4001c470:	e5c02049 	strb	r2, [r0, #73]	; 0x49
4001c474:	e5c0c04b 	strb	ip, [r0, #75]	; 0x4b
4001c478:	e5c0c04c 	strb	ip, [r0, #76]	; 0x4c
4001c47c:	e280c019 	add	ip, r0, #25
4001c480:	e5c0204e 	strb	r2, [r0, #78]	; 0x4e
4001c484:	e5c03051 	strb	r3, [r0, #81]	; 0x51
4001c488:	e1a03000 	mov	r3, r0
4001c48c:	e59f2028 	ldr	r2, [pc, #40]	; 4001c4bc <RDMDevice::RDMDevice()+0xc0>
4001c490:	e5c0104a 	strb	r1, [r0, #74]	; 0x4a
4001c494:	e5c0104d 	strb	r1, [r0, #77]	; 0x4d
4001c498:	e15c0003 	cmp	ip, r3
4001c49c:	14d21001 	ldrbne	r1, [r2], #1
4001c4a0:	14c31001 	strbne	r1, [r3], #1
4001c4a4:	1afffffb 	bne	4001c498 <RDMDevice::RDMDevice()+0x9c>
4001c4a8:	e28dd008 	add	sp, sp, #8
4001c4ac:	e12fff1e 	bx	lr
4001c4b0:	4005a750 	andmi	sl, r5, r0, asr r7
4001c4b4:	40059018 	andmi	r9, r5, r8, lsl r0
4001c4b8:	400320d4 	ldrdmi	r2, [r3], -r4
4001c4bc:	400321c5 	andmi	r2, r3, r5, asr #3

4001c4c0 <RDMDevice::Print()>:
4001c4c0:	e92d4013 	push	{r0, r1, r4, lr}
4001c4c4:	e1a04000 	mov	r4, r0
4001c4c8:	e59f00a0 	ldr	r0, [pc, #160]	; 4001c570 <RDMDevice::Print()+0xb0>
4001c4cc:	eb0041f1 	bl	4002cc98 <puts>
4001c4d0:	e59f309c 	ldr	r3, [pc, #156]	; 4001c574 <RDMDevice::Print()+0xb4>
4001c4d4:	e1a02003 	mov	r2, r3
4001c4d8:	e1a01003 	mov	r1, r3
4001c4dc:	e2833001 	add	r3, r3, #1
4001c4e0:	e5d10000 	ldrb	r0, [r1]
4001c4e4:	e3500000 	cmp	r0, #0
4001c4e8:	1afffffa 	bne	4001c4d8 <RDMDevice::Print()+0x18>
4001c4ec:	e0411002 	sub	r1, r1, r2
4001c4f0:	e59f0080 	ldr	r0, [pc, #128]	; 4001c578 <RDMDevice::Print()+0xb8>
4001c4f4:	e3510020 	cmp	r1, #32
4001c4f8:	e59f2074 	ldr	r2, [pc, #116]	; 4001c574 <RDMDevice::Print()+0xb4>
4001c4fc:	23a01020 	movcs	r1, #32
4001c500:	eb0041a2 	bl	4002cb90 <printf>
4001c504:	e5d42047 	ldrb	r2, [r4, #71]	; 0x47
4001c508:	e5d41046 	ldrb	r1, [r4, #70]	; 0x46
4001c50c:	e59f0068 	ldr	r0, [pc, #104]	; 4001c57c <RDMDevice::Print()+0xbc>
4001c510:	eb00419e 	bl	4002cb90 <printf>
4001c514:	e5d4304c 	ldrb	r3, [r4, #76]	; 0x4c
4001c518:	e5d4204e 	ldrb	r2, [r4, #78]	; 0x4e
4001c51c:	e5d4104f 	ldrb	r1, [r4, #79]	; 0x4f
4001c520:	e58d3000 	str	r3, [sp]
4001c524:	e59f0054 	ldr	r0, [pc, #84]	; 4001c580 <RDMDevice::Print()+0xc0>
4001c528:	e5d4304d 	ldrb	r3, [r4, #77]	; 0x4d
4001c52c:	eb004197 	bl	4002cb90 <printf>
4001c530:	e5d41050 	ldrb	r1, [r4, #80]	; 0x50
4001c534:	e2842020 	add	r2, r4, #32
4001c538:	e59f0044 	ldr	r0, [pc, #68]	; 4001c584 <RDMDevice::Print()+0xc4>
4001c53c:	eb004193 	bl	4002cb90 <printf>
4001c540:	e1d414b0 	ldrh	r1, [r4, #64]	; 0x40
4001c544:	e5d42040 	ldrb	r2, [r4, #64]	; 0x40
4001c548:	e1a01421 	lsr	r1, r1, #8
4001c54c:	e59f0034 	ldr	r0, [pc, #52]	; 4001c588 <RDMDevice::Print()+0xc8>
4001c550:	eb00418e 	bl	4002cb90 <printf>
4001c554:	e1d414b2 	ldrh	r1, [r4, #66]	; 0x42
4001c558:	e5d42042 	ldrb	r2, [r4, #66]	; 0x42
4001c55c:	e59f0028 	ldr	r0, [pc, #40]	; 4001c58c <RDMDevice::Print()+0xcc>
4001c560:	e1a01421 	lsr	r1, r1, #8
4001c564:	e28dd008 	add	sp, sp, #8
4001c568:	e8bd4010 	pop	{r4, lr}
4001c56c:	ea004187 	b	4002cb90 <printf>
4001c570:	400320f2 	strdmi	r2, [r3], -r2	; <UNPREDICTABLE>
4001c574:	400320d6 	ldrdmi	r2, [r3], -r6
4001c578:	4003210b 	andmi	r2, r3, fp, lsl #2
4001c57c:	40032126 	andmi	r2, r3, r6, lsr #2
4001c580:	40032145 	andmi	r2, r3, r5, asr #2
4001c584:	4003216c 	andmi	r2, r3, ip, ror #2
4001c588:	40032187 	andmi	r2, r3, r7, lsl #3
4001c58c:	400321a6 	andmi	r2, r3, r6, lsr #3

4001c590 <ConfigStore::GetStoreOffset(configstore::Store)>:
4001c590:	e59f201c 	ldr	r2, [pc, #28]	; 4001c5b4 <ConfigStore::GetStoreOffset(configstore::Store)+0x24>
4001c594:	e3a03000 	mov	r3, #0
4001c598:	e3a00020 	mov	r0, #32
4001c59c:	e1530001 	cmp	r3, r1
4001c5a0:	012fff1e 	bxeq	lr
4001c5a4:	e492c004 	ldr	ip, [r2], #4
4001c5a8:	e2833001 	add	r3, r3, #1
4001c5ac:	e080000c 	add	r0, r0, ip
4001c5b0:	eafffff9 	b	4001c59c <ConfigStore::GetStoreOffset(configstore::Store)+0xc>
4001c5b4:	400321e0 	andmi	r2, r3, r0, ror #3

4001c5b8 <ConfigStore::ConfigStore()>:
4001c5b8:	e92d40f0 	push	{r4, r5, r6, r7, lr}
4001c5bc:	e24dd014 	sub	sp, sp, #20
4001c5c0:	e59f413c 	ldr	r4, [pc, #316]	; 4001c704 <ConfigStore::ConfigStore()+0x14c>
4001c5c4:	e1a05000 	mov	r5, r0
4001c5c8:	e59f7138 	ldr	r7, [pc, #312]	; 4001c708 <ConfigStore::ConfigStore()+0x150>
4001c5cc:	eb000173 	bl	4001cba0 <StoreDevice::StoreDevice()>
4001c5d0:	e59f3134 	ldr	r3, [pc, #308]	; 4001c70c <ConfigStore::ConfigStore()+0x154>
4001c5d4:	e1a00005 	mov	r0, r5
4001c5d8:	e5835000 	str	r5, [r3]
4001c5dc:	e59f312c 	ldr	r3, [pc, #300]	; 4001c710 <ConfigStore::ConfigStore()+0x158>
4001c5e0:	e5834000 	str	r4, [r3]
4001c5e4:	e2444010 	sub	r4, r4, #16
4001c5e8:	e5d53000 	ldrb	r3, [r5]
4001c5ec:	e5c73000 	strb	r3, [r7]
4001c5f0:	eb000184 	bl	4001cc08 <StoreDevice::GetSectorSize() const>
4001c5f4:	e1a06000 	mov	r6, r0
4001c5f8:	e1a00005 	mov	r0, r5
4001c5fc:	eb000180 	bl	4001cc04 <StoreDevice::GetSize() const>
4001c600:	e59f310c 	ldr	r3, [pc, #268]	; 4001c714 <ConfigStore::ConfigStore()+0x15c>
4001c604:	e3a02a01 	mov	r2, #4096	; 0x1000
4001c608:	e731f612 	udiv	r1, r2, r6
4001c60c:	e0610196 	mls	r1, r6, r1, r0
4001c610:	e5831000 	str	r1, [r3]
4001c614:	e5d73000 	ldrb	r3, [r7]
4001c618:	e3530000 	cmp	r3, #0
4001c61c:	0a000004 	beq	4001c634 <ConfigStore::ConfigStore()+0x7c>
4001c620:	e28d300c 	add	r3, sp, #12
4001c624:	e1a00005 	mov	r0, r5
4001c628:	e58d3000 	str	r3, [sp]
4001c62c:	e1a03004 	mov	r3, r4
4001c630:	eb000176 	bl	4001cc10 <StoreDevice::Read(unsigned long, unsigned long, unsigned char*, storedevice::result&)>
4001c634:	e59f00dc 	ldr	r0, [pc, #220]	; 4001c718 <ConfigStore::ConfigStore()+0x160>
4001c638:	e3a01004 	mov	r1, #4
4001c63c:	e59f30d8 	ldr	r3, [pc, #216]	; 4001c71c <ConfigStore::ConfigStore()+0x164>
4001c640:	e3a02001 	mov	r2, #1
4001c644:	e4d0c001 	ldrb	ip, [r0], #1
4001c648:	e4d3e001 	ldrb	lr, [r3], #1
4001c64c:	e15c000e 	cmp	ip, lr
4001c650:	1543c001 	strbne	ip, [r3, #-1]
4001c654:	13a02000 	movne	r2, #0
4001c658:	e2511001 	subs	r1, r1, #1
4001c65c:	1afffff8 	bne	4001c644 <ConfigStore::ConfigStore()+0x8c>
4001c660:	e3520000 	cmp	r2, #0
4001c664:	1a000008 	bne	4001c68c <ConfigStore::ConfigStore()+0xd4>
4001c668:	e59f2094 	ldr	r2, [pc, #148]	; 4001c704 <ConfigStore::ConfigStore()+0x14c>
4001c66c:	e3003ff1 	movw	r3, #4081	; 0xff1
4001c670:	e1a00001 	mov	r0, r1
4001c674:	e2533001 	subs	r3, r3, #1
4001c678:	14c20001 	strbne	r0, [r2], #1
4001c67c:	1afffffc 	bne	4001c674 <ConfigStore::ConfigStore()+0xbc>
4001c680:	e59f3098 	ldr	r3, [pc, #152]	; 4001c720 <ConfigStore::ConfigStore()+0x168>
4001c684:	e3a02001 	mov	r2, #1
4001c688:	e5832000 	str	r2, [r3]
4001c68c:	e59f0090 	ldr	r0, [pc, #144]	; 4001c724 <ConfigStore::ConfigStore()+0x16c>
4001c690:	e3a02000 	mov	r2, #0
4001c694:	e3a03020 	mov	r3, #32
4001c698:	e490c004 	ldr	ip, [r0], #4
4001c69c:	e2822001 	add	r2, r2, #1
4001c6a0:	e352001b 	cmp	r2, #27
4001c6a4:	e083300c 	add	r3, r3, ip
4001c6a8:	1afffffa 	bne	4001c698 <ConfigStore::ConfigStore()+0xe0>
4001c6ac:	e59f2074 	ldr	r2, [pc, #116]	; 4001c728 <ConfigStore::ConfigStore()+0x170>
4001c6b0:	e3a06000 	mov	r6, #0
4001c6b4:	e5823000 	str	r3, [r2]
4001c6b8:	e1a00005 	mov	r0, r5
4001c6bc:	ebffffb3 	bl	4001c590 <ConfigStore::GetStoreOffset(configstore::Store)>
4001c6c0:	e7903004 	ldr	r3, [r0, r4]
4001c6c4:	e2811001 	add	r1, r1, #1
4001c6c8:	e3730001 	cmn	r3, #1
4001c6cc:	07806004 	streq	r6, [r0, r4]
4001c6d0:	e351001b 	cmp	r1, #27
4001c6d4:	1afffff7 	bne	4001c6b8 <ConfigStore::ConfigStore()+0x100>
4001c6d8:	e5943010 	ldr	r3, [r4, #16]
4001c6dc:	e3730001 	cmn	r3, #1
4001c6e0:	1a000004 	bne	4001c6f8 <ConfigStore::ConfigStore()+0x140>
4001c6e4:	e3a03000 	mov	r3, #0
4001c6e8:	e5c43010 	strb	r3, [r4, #16]
4001c6ec:	e5c43011 	strb	r3, [r4, #17]
4001c6f0:	e5c43012 	strb	r3, [r4, #18]
4001c6f4:	e5c43013 	strb	r3, [r4, #19]
4001c6f8:	e1a00005 	mov	r0, r5
4001c6fc:	e28dd014 	add	sp, sp, #20
4001c700:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
4001c704:	4005902c 	andmi	r9, r5, ip, lsr #32
4001c708:	4005a02c 	andmi	sl, r5, ip, lsr #32
4001c70c:	40034084 	andmi	r4, r3, r4, lsl #1
4001c710:	4006c164 	andmi	ip, r6, r4, ror #2
4001c714:	4005a024 	andmi	sl, r5, r4, lsr #32
4001c718:	4003224c 	andmi	r2, r3, ip, asr #4
4001c71c:	4005901c 	andmi	r9, r5, ip, lsl r0
4001c720:	4005a028 	andmi	sl, r5, r8, lsr #32
4001c724:	400321e0 	andmi	r2, r3, r0, ror #3
4001c728:	4005a01c 	andmi	sl, r5, ip, lsl r0

4001c72c <ConfigStore::ResetSetList(configstore::Store)>:
4001c72c:	e92d4010 	push	{r4, lr}
4001c730:	ebffff96 	bl	4001c590 <ConfigStore::GetStoreOffset(configstore::Store)>
4001c734:	e59f1024 	ldr	r1, [pc, #36]	; 4001c760 <ConfigStore::ResetSetList(configstore::Store)+0x34>
4001c738:	e3a03000 	mov	r3, #0
4001c73c:	e0802001 	add	r2, r0, r1
4001c740:	e7c13000 	strb	r3, [r1, r0]
4001c744:	e5c23001 	strb	r3, [r2, #1]
4001c748:	e5c23002 	strb	r3, [r2, #2]
4001c74c:	e5c23003 	strb	r3, [r2, #3]
4001c750:	e3a02001 	mov	r2, #1
4001c754:	e59f3008 	ldr	r3, [pc, #8]	; 4001c764 <ConfigStore::ResetSetList(configstore::Store)+0x38>
4001c758:	e5832000 	str	r2, [r3]
4001c75c:	e8bd8010 	pop	{r4, pc}
4001c760:	4005901c 	andmi	r9, r5, ip, lsl r0
4001c764:	4005a028 	andmi	sl, r5, r8, lsr #32

4001c768 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>:
4001c768:	e92d4070 	push	{r4, r5, r6, lr}
4001c76c:	e1a04002 	mov	r4, r2
4001c770:	e1a05003 	mov	r5, r3
4001c774:	ebffff85 	bl	4001c590 <ConfigStore::GetStoreOffset(configstore::Store)>
4001c778:	e59f1068 	ldr	r1, [pc, #104]	; 4001c7e8 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)+0x80>
4001c77c:	e2453001 	sub	r3, r5, #1
4001c780:	e0802004 	add	r2, r0, r4
4001c784:	e3a0e000 	mov	lr, #0
4001c788:	e59dc010 	ldr	ip, [sp, #16]
4001c78c:	e0822001 	add	r2, r2, r1
4001c790:	e082c00c 	add	ip, r2, ip
4001c794:	e152000c 	cmp	r2, ip
4001c798:	0a000006 	beq	4001c7b8 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)+0x50>
4001c79c:	e5d25000 	ldrb	r5, [r2]
4001c7a0:	e2822001 	add	r2, r2, #1
4001c7a4:	e5f34001 	ldrb	r4, [r3, #1]!
4001c7a8:	e1550004 	cmp	r5, r4
4001c7ac:	15424001 	strbne	r4, [r2, #-1]
4001c7b0:	13a0e001 	movne	lr, #1
4001c7b4:	eafffff6 	b	4001c794 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)+0x2c>
4001c7b8:	e35e0000 	cmp	lr, #0
4001c7bc:	08bd8070 	popeq	{r4, r5, r6, pc}
4001c7c0:	e59d3018 	ldr	r3, [sp, #24]
4001c7c4:	e59d2014 	ldr	r2, [sp, #20]
4001c7c8:	e0800003 	add	r0, r0, r3
4001c7cc:	e7913000 	ldr	r3, [r1, r0]
4001c7d0:	e1833002 	orr	r3, r3, r2
4001c7d4:	e3a02001 	mov	r2, #1
4001c7d8:	e7813000 	str	r3, [r1, r0]
4001c7dc:	e59f3008 	ldr	r3, [pc, #8]	; 4001c7ec <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)+0x84>
4001c7e0:	e5832000 	str	r2, [r3]
4001c7e4:	e8bd8070 	pop	{r4, r5, r6, pc}
4001c7e8:	4005901c 	andmi	r9, r5, ip, lsl r0
4001c7ec:	4005a028 	andmi	sl, r5, r8, lsr #32

4001c7f0 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)>:
4001c7f0:	e92d40f0 	push	{r4, r5, r6, r7, lr}
4001c7f4:	e24dd014 	sub	sp, sp, #20
4001c7f8:	e1a05003 	mov	r5, r3
4001c7fc:	e1a04002 	mov	r4, r2
4001c800:	e1a06000 	mov	r6, r0
4001c804:	ebffff61 	bl	4001c590 <ConfigStore::GetStoreOffset(configstore::Store)>
4001c808:	e59dc028 	ldr	ip, [sp, #40]	; 0x28
4001c80c:	e1a07001 	mov	r7, r1
4001c810:	e080c00c 	add	ip, r0, ip
4001c814:	e59f0064 	ldr	r0, [pc, #100]	; 4001c880 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)+0x90>
4001c818:	e08cc000 	add	ip, ip, r0
4001c81c:	e085200c 	add	r2, r5, ip
4001c820:	e1a0300c 	mov	r3, ip
4001c824:	e1520003 	cmp	r2, r3
4001c828:	0a000007 	beq	4001c84c <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)+0x5c>
4001c82c:	e4d31001 	ldrb	r1, [r3], #1
4001c830:	e3510000 	cmp	r1, #0
4001c834:	0afffffa 	beq	4001c824 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)+0x34>
4001c838:	e15c0002 	cmp	ip, r2
4001c83c:	0a00000d 	beq	4001c878 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)+0x88>
4001c840:	e4dc3001 	ldrb	r3, [ip], #1
4001c844:	e4c43001 	strb	r3, [r4], #1
4001c848:	eafffffa 	b	4001c838 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)+0x48>
4001c84c:	e5dd302c 	ldrb	r3, [sp, #44]	; 0x2c
4001c850:	e3530000 	cmp	r3, #0
4001c854:	0a000007 	beq	4001c878 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)+0x88>
4001c858:	e58d5000 	str	r5, [sp]
4001c85c:	e3a02000 	mov	r2, #0
4001c860:	e58d2008 	str	r2, [sp, #8]
4001c864:	e1a03004 	mov	r3, r4
4001c868:	e58d2004 	str	r2, [sp, #4]
4001c86c:	e1a01007 	mov	r1, r7
4001c870:	e1a00006 	mov	r0, r6
4001c874:	ebffffbb 	bl	4001c768 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
4001c878:	e28dd014 	add	sp, sp, #20
4001c87c:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
4001c880:	4005901c 	andmi	r9, r5, ip, lsl r0

4001c884 <ConfigStore::Flash()>:
4001c884:	e92d401f 	push	{r0, r1, r2, r3, r4, lr}
4001c888:	e59f4110 	ldr	r4, [pc, #272]	; 4001c9a0 <ConfigStore::Flash()+0x11c>
4001c88c:	e5943000 	ldr	r3, [r4]
4001c890:	e3530000 	cmp	r3, #0
4001c894:	01a00003 	moveq	r0, r3
4001c898:	0a00003e 	beq	4001c998 <ConfigStore::Flash()+0x114>
4001c89c:	e2433001 	sub	r3, r3, #1
4001c8a0:	e3530005 	cmp	r3, #5
4001c8a4:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
4001c8a8:	ea00002e 	b	4001c968 <ConfigStore::Flash()+0xe4>
4001c8ac:	4001c8c4 	andmi	ip, r1, r4, asr #17
4001c8b0:	4001c8e0 	andmi	ip, r1, r0, ror #17
4001c8b4:	4001c908 	andmi	ip, r1, r8, lsl #18
4001c8b8:	4001c960 	andmi	ip, r1, r0, ror #18
4001c8bc:	4001c93c 	andmi	ip, r1, ip, lsr r9
4001c8c0:	4001c968 	andmi	ip, r1, r8, ror #18
4001c8c4:	e59f30d8 	ldr	r3, [pc, #216]	; 4001c9a4 <ConfigStore::Flash()+0x120>
4001c8c8:	e5932084 	ldr	r2, [r3, #132]	; 0x84
4001c8cc:	e59f30d4 	ldr	r3, [pc, #212]	; 4001c9a8 <ConfigStore::Flash()+0x124>
4001c8d0:	e5832000 	str	r2, [r3]
4001c8d4:	e3a03002 	mov	r3, #2
4001c8d8:	e5843000 	str	r3, [r4]
4001c8dc:	ea000007 	b	4001c900 <ConfigStore::Flash()+0x7c>
4001c8e0:	e59f30bc 	ldr	r3, [pc, #188]	; 4001c9a4 <ConfigStore::Flash()+0x120>
4001c8e4:	e59f20bc 	ldr	r2, [pc, #188]	; 4001c9a8 <ConfigStore::Flash()+0x124>
4001c8e8:	e5933084 	ldr	r3, [r3, #132]	; 0x84
4001c8ec:	e5922000 	ldr	r2, [r2]
4001c8f0:	e0433002 	sub	r3, r3, r2
4001c8f4:	e3530063 	cmp	r3, #99	; 0x63
4001c8f8:	83a03003 	movhi	r3, #3
4001c8fc:	8afffff5 	bhi	4001c8d8 <ConfigStore::Flash()+0x54>
4001c900:	e3a00001 	mov	r0, #1
4001c904:	ea000023 	b	4001c998 <ConfigStore::Flash()+0x114>
4001c908:	e59f109c 	ldr	r1, [pc, #156]	; 4001c9ac <ConfigStore::Flash()+0x128>
4001c90c:	e28d300c 	add	r3, sp, #12
4001c910:	e3a02a01 	mov	r2, #4096	; 0x1000
4001c914:	e5911000 	ldr	r1, [r1]
4001c918:	eb0000c7 	bl	4001cc3c <StoreDevice::Erase(unsigned long, unsigned long, storedevice::result&)>
4001c91c:	e3500000 	cmp	r0, #0
4001c920:	0afffff6 	beq	4001c900 <ConfigStore::Flash()+0x7c>
4001c924:	e59f3078 	ldr	r3, [pc, #120]	; 4001c9a4 <ConfigStore::Flash()+0x120>
4001c928:	e5932084 	ldr	r2, [r3, #132]	; 0x84
4001c92c:	e59f3074 	ldr	r3, [pc, #116]	; 4001c9a8 <ConfigStore::Flash()+0x124>
4001c930:	e5832000 	str	r2, [r3]
4001c934:	e3a03005 	mov	r3, #5
4001c938:	eaffffe6 	b	4001c8d8 <ConfigStore::Flash()+0x54>
4001c93c:	e59f3060 	ldr	r3, [pc, #96]	; 4001c9a4 <ConfigStore::Flash()+0x120>
4001c940:	e59f2060 	ldr	r2, [pc, #96]	; 4001c9a8 <ConfigStore::Flash()+0x124>
4001c944:	e5933084 	ldr	r3, [r3, #132]	; 0x84
4001c948:	e5922000 	ldr	r2, [r2]
4001c94c:	e0433002 	sub	r3, r3, r2
4001c950:	e3530063 	cmp	r3, #99	; 0x63
4001c954:	83a03004 	movhi	r3, #4
4001c958:	8affffde 	bhi	4001c8d8 <ConfigStore::Flash()+0x54>
4001c95c:	eaffffe7 	b	4001c900 <ConfigStore::Flash()+0x7c>
4001c960:	e3a03006 	mov	r3, #6
4001c964:	eaffffdb 	b	4001c8d8 <ConfigStore::Flash()+0x54>
4001c968:	e59f2040 	ldr	r2, [pc, #64]	; 4001c9b0 <ConfigStore::Flash()+0x12c>
4001c96c:	e28d300c 	add	r3, sp, #12
4001c970:	e59f1034 	ldr	r1, [pc, #52]	; 4001c9ac <ConfigStore::Flash()+0x128>
4001c974:	e58d3000 	str	r3, [sp]
4001c978:	e59f3034 	ldr	r3, [pc, #52]	; 4001c9b4 <ConfigStore::Flash()+0x130>
4001c97c:	e5922000 	ldr	r2, [r2]
4001c980:	e5911000 	ldr	r1, [r1]
4001c984:	eb0000b6 	bl	4001cc64 <StoreDevice::Write(unsigned long, unsigned long, unsigned char const*, storedevice::result&)>
4001c988:	e3500000 	cmp	r0, #0
4001c98c:	13a00000 	movne	r0, #0
4001c990:	15840000 	strne	r0, [r4]
4001c994:	0affffd9 	beq	4001c900 <ConfigStore::Flash()+0x7c>
4001c998:	e28dd010 	add	sp, sp, #16
4001c99c:	e8bd8010 	pop	{r4, pc}
4001c9a0:	4005a028 	andmi	sl, r5, r8, lsr #32
4001c9a4:	01c20c00 	biceq	r0, r2, r0, lsl #24
4001c9a8:	4005a020 	andmi	sl, r5, r0, lsr #32
4001c9ac:	4005a024 	andmi	sl, r5, r4, lsr #32
4001c9b0:	4005a01c 	andmi	sl, r5, ip, lsl r0
4001c9b4:	4005901c 	andmi	r9, r5, ip, lsl r0

4001c9b8 <ConfigStore::GetEnvUtcOffset(signed char&, unsigned char&) [clone .isra.0]>:
4001c9b8:	e59f203c 	ldr	r2, [pc, #60]	; 4001c9fc <ConfigStore::GetEnvUtcOffset(signed char&, unsigned char&) [clone .isra.0]+0x44>
4001c9bc:	e3a0cee1 	mov	ip, #3600	; 0xe10
4001c9c0:	e5923010 	ldr	r3, [r2, #16]
4001c9c4:	e713fc13 	sdiv	r3, r3, ip
4001c9c8:	e6af3073 	sxtb	r3, r3
4001c9cc:	e5c03000 	strb	r3, [r0]
4001c9d0:	e3530000 	cmp	r3, #0
4001c9d4:	e5922010 	ldr	r2, [r2, #16]
4001c9d8:	d003039c 	mulle	r3, ip, r3
4001c9dc:	c59f001c 	ldrgt	r0, [pc, #28]	; 4001ca00 <ConfigStore::GetEnvUtcOffset(signed char&, unsigned char&) [clone .isra.0]+0x48>
4001c9e0:	d0433002 	suble	r3, r3, r2
4001c9e4:	c0232390 	mlagt	r3, r0, r3, r2
4001c9e8:	e3a0203c 	mov	r2, #60	; 0x3c
4001c9ec:	e733f213 	udiv	r3, r3, r2
4001c9f0:	e6ef3073 	uxtb	r3, r3
4001c9f4:	e5c13000 	strb	r3, [r1]
4001c9f8:	e12fff1e 	bx	lr
4001c9fc:	4005901c 	andmi	r9, r5, ip, lsl r0
4001ca00:	fffff1f0 			; <UNDEFINED> instruction: 0xfffff1f0

4001ca04 <EnvParams::EnvParams()>:
4001ca04:	e12fff1e 	bx	lr

4001ca08 <EnvParams::LoadAndSet(char const*, unsigned long)>:
4001ca08:	e92d4037 	push	{r0, r1, r2, r4, r5, lr}
4001ca0c:	e1a04001 	mov	r4, r1
4001ca10:	e59f102c 	ldr	r1, [pc, #44]	; 4001ca44 <EnvParams::LoadAndSet(char const*, unsigned long)+0x3c>
4001ca14:	e1a05002 	mov	r5, r2
4001ca18:	e1a02000 	mov	r2, r0
4001ca1c:	e1a0000d 	mov	r0, sp
4001ca20:	eb002271 	bl	400253ec <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
4001ca24:	e1a02005 	mov	r2, r5
4001ca28:	e1a01004 	mov	r1, r4
4001ca2c:	e1a0000d 	mov	r0, sp
4001ca30:	eb00229a 	bl	400254a0 <ReadConfigFile::Read(char const*, unsigned int)>
4001ca34:	e1a0000d 	mov	r0, sp
4001ca38:	eb00226d 	bl	400253f4 <ReadConfigFile::~ReadConfigFile()>
4001ca3c:	e28dd00c 	add	sp, sp, #12
4001ca40:	e8bd8030 	pop	{r4, r5, pc}
4001ca44:	4001cb10 	andmi	ip, r1, r0, lsl fp

4001ca48 <EnvParams::callbackFunction(char const*)>:
4001ca48:	e92d4007 	push	{r0, r1, r2, lr}
4001ca4c:	e1a00001 	mov	r0, r1
4001ca50:	e59f10a8 	ldr	r1, [pc, #168]	; 4001cb00 <EnvParams::callbackFunction(char const*)+0xb8>
4001ca54:	e28d3007 	add	r3, sp, #7
4001ca58:	e28d2006 	add	r2, sp, #6
4001ca5c:	eb0023b6 	bl	4002593c <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)>
4001ca60:	e3500000 	cmp	r0, #0
4001ca64:	1a000023 	bne	4001caf8 <EnvParams::callbackFunction(char const*)+0xb0>
4001ca68:	e1dd10d6 	ldrsb	r1, [sp, #6]
4001ca6c:	e281300c 	add	r3, r1, #12
4001ca70:	e6ef3073 	uxtb	r3, r3
4001ca74:	e353001a 	cmp	r3, #26
4001ca78:	8a00001e 	bhi	4001caf8 <EnvParams::callbackFunction(char const*)+0xb0>
4001ca7c:	e5dd3007 	ldrb	r3, [sp, #7]
4001ca80:	e3530000 	cmp	r3, #0
4001ca84:	03a03ee1 	moveq	r3, #3600	; 0xe10
4001ca88:	00030193 	muleq	r3, r3, r1
4001ca8c:	0a00000e 	beq	4001cacc <EnvParams::callbackFunction(char const*)+0x84>
4001ca90:	e59f206c 	ldr	r2, [pc, #108]	; 4001cb04 <EnvParams::callbackFunction(char const*)+0xbc>
4001ca94:	e3a0000b 	mov	r0, #11
4001ca98:	e1d2c0d0 	ldrsb	ip, [r2]
4001ca9c:	e15c0001 	cmp	ip, r1
4001caa0:	1a000011 	bne	4001caec <EnvParams::callbackFunction(char const*)+0xa4>
4001caa4:	e5d2c001 	ldrb	ip, [r2, #1]
4001caa8:	e15c0003 	cmp	ip, r3
4001caac:	1a00000e 	bne	4001caec <EnvParams::callbackFunction(char const*)+0xa4>
4001cab0:	e3510000 	cmp	r1, #0
4001cab4:	e3a02ee1 	mov	r2, #3600	; 0xe10
4001cab8:	e0020192 	mul	r2, r2, r1
4001cabc:	c0633203 	rsbgt	r3, r3, r3, lsl #4
4001cac0:	d3e0103b 	mvnle	r1, #59	; 0x3b
4001cac4:	d0232391 	mlale	r3, r1, r3, r2
4001cac8:	c0823103 	addgt	r3, r2, r3, lsl #2
4001cacc:	e59f2034 	ldr	r2, [pc, #52]	; 4001cb08 <EnvParams::callbackFunction(char const*)+0xc0>
4001cad0:	e5921010 	ldr	r1, [r2, #16]
4001cad4:	e1510003 	cmp	r1, r3
4001cad8:	15823010 	strne	r3, [r2, #16]
4001cadc:	13a02001 	movne	r2, #1
4001cae0:	159f3024 	ldrne	r3, [pc, #36]	; 4001cb0c <EnvParams::callbackFunction(char const*)+0xc4>
4001cae4:	15832000 	strne	r2, [r3]
4001cae8:	ea000002 	b	4001caf8 <EnvParams::callbackFunction(char const*)+0xb0>
4001caec:	e2500001 	subs	r0, r0, #1
4001caf0:	e2822002 	add	r2, r2, #2
4001caf4:	1affffe7 	bne	4001ca98 <EnvParams::callbackFunction(char const*)+0x50>
4001caf8:	e28dd00c 	add	sp, sp, #12
4001cafc:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4001cb00:	40032250 	andmi	r2, r3, r0, asr r2
4001cb04:	4002dc1c 	andmi	sp, r2, ip, lsl ip
4001cb08:	4005901c 	andmi	r9, r5, ip, lsl r0
4001cb0c:	4005a028 	andmi	sl, r5, r8, lsr #32

4001cb10 <EnvParams::staticCallbackFunction(void*, char const*)>:
4001cb10:	eaffffcc 	b	4001ca48 <EnvParams::callbackFunction(char const*)>

4001cb14 <EnvParams::Builder(char*, unsigned long, unsigned long&)>:
4001cb14:	e92d401f 	push	{r0, r1, r2, r3, r4, lr}
4001cb18:	e1a04003 	mov	r4, r3
4001cb1c:	e28d0004 	add	r0, sp, #4
4001cb20:	e1a03002 	mov	r3, r2
4001cb24:	e1a02001 	mov	r2, r1
4001cb28:	e59f1068 	ldr	r1, [pc, #104]	; 4001cb98 <EnvParams::Builder(char*, unsigned long, unsigned long&)+0x84>
4001cb2c:	eb0020ee 	bl	40024eec <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)>
4001cb30:	e28d1003 	add	r1, sp, #3
4001cb34:	e28d0002 	add	r0, sp, #2
4001cb38:	ebffff9e 	bl	4001c9b8 <ConfigStore::GetEnvUtcOffset(signed char&, unsigned char&) [clone .isra.0]>
4001cb3c:	e5dd3003 	ldrb	r3, [sp, #3]
4001cb40:	e28d0004 	add	r0, sp, #4
4001cb44:	e1dd20d2 	ldrsb	r2, [sp, #2]
4001cb48:	e59f104c 	ldr	r1, [pc, #76]	; 4001cb9c <EnvParams::Builder(char*, unsigned long, unsigned long&)+0x88>
4001cb4c:	eb002151 	bl	40025098 <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)>
4001cb50:	e5dd300c 	ldrb	r3, [sp, #12]
4001cb54:	e3530000 	cmp	r3, #0
4001cb58:	0a00000a 	beq	4001cb88 <EnvParams::Builder(char*, unsigned long, unsigned long&)+0x74>
4001cb5c:	e1dd20ba 	ldrh	r2, [sp, #10]
4001cb60:	e59d3004 	ldr	r3, [sp, #4]
4001cb64:	e0833002 	add	r3, r3, r2
4001cb68:	e3a0207d 	mov	r2, #125	; 0x7d
4001cb6c:	e5432001 	strb	r2, [r3, #-1]
4001cb70:	e59d1004 	ldr	r1, [sp, #4]
4001cb74:	e1dd30ba 	ldrh	r3, [sp, #10]
4001cb78:	e7c12003 	strb	r2, [r1, r3]
4001cb7c:	e1dd30ba 	ldrh	r3, [sp, #10]
4001cb80:	e2833001 	add	r3, r3, #1
4001cb84:	e1cd30ba 	strh	r3, [sp, #10]
4001cb88:	e1dd30ba 	ldrh	r3, [sp, #10]
4001cb8c:	e5843000 	str	r3, [r4]
4001cb90:	e28dd010 	add	sp, sp, #16
4001cb94:	e8bd8010 	pop	{r4, pc}
4001cb98:	4003225b 	andmi	r2, r3, fp, asr r2
4001cb9c:	40032250 	andmi	r2, r3, r0, asr r2

4001cba0 <StoreDevice::StoreDevice()>:
4001cba0:	e3a03000 	mov	r3, #0
4001cba4:	e92d4073 	push	{r0, r1, r4, r5, r6, lr}
4001cba8:	e1a04000 	mov	r4, r0
4001cbac:	e5c03000 	strb	r3, [r0]
4001cbb0:	eb0003b5 	bl	4001da8c <spi_flash_probe()>
4001cbb4:	e3500000 	cmp	r0, #0
4001cbb8:	0a00000d 	beq	4001cbf4 <StoreDevice::StoreDevice()+0x54>
4001cbbc:	eb000322 	bl	4001d84c <spi_flash_get_name()>
4001cbc0:	e1a05000 	mov	r5, r0
4001cbc4:	eb00031c 	bl	4001d83c <spi_flash_get_size()>
4001cbc8:	e1a06000 	mov	r6, r0
4001cbcc:	eb00031a 	bl	4001d83c <spi_flash_get_size()>
4001cbd0:	e1a00520 	lsr	r0, r0, #10
4001cbd4:	e1a03006 	mov	r3, r6
4001cbd8:	e58d0000 	str	r0, [sp]
4001cbdc:	e3a02a01 	mov	r2, #4096	; 0x1000
4001cbe0:	e59f0018 	ldr	r0, [pc, #24]	; 4001cc00 <StoreDevice::StoreDevice()+0x60>
4001cbe4:	e1a01005 	mov	r1, r5
4001cbe8:	eb003fe8 	bl	4002cb90 <printf>
4001cbec:	e3a03001 	mov	r3, #1
4001cbf0:	e5c43000 	strb	r3, [r4]
4001cbf4:	e1a00004 	mov	r0, r4
4001cbf8:	e28dd008 	add	sp, sp, #8
4001cbfc:	e8bd8070 	pop	{r4, r5, r6, pc}
4001cc00:	40032263 	andmi	r2, r3, r3, ror #4

4001cc04 <StoreDevice::GetSize() const>:
4001cc04:	ea00030c 	b	4001d83c <spi_flash_get_size()>

4001cc08 <StoreDevice::GetSectorSize() const>:
4001cc08:	e3a00a01 	mov	r0, #4096	; 0x1000
4001cc0c:	e12fff1e 	bx	lr

4001cc10 <StoreDevice::Read(unsigned long, unsigned long, unsigned char*, storedevice::result&)>:
4001cc10:	e92d4010 	push	{r4, lr}
4001cc14:	e1a00001 	mov	r0, r1
4001cc18:	e1a01002 	mov	r1, r2
4001cc1c:	e1a02003 	mov	r2, r3
4001cc20:	eb00033d 	bl	4001d91c <spi_flash_cmd_read_fast(unsigned long, unsigned long, unsigned char*)>
4001cc24:	e59d3008 	ldr	r3, [sp, #8]
4001cc28:	e2200001 	eor	r0, r0, #1
4001cc2c:	e6ef0070 	uxtb	r0, r0
4001cc30:	e5830000 	str	r0, [r3]
4001cc34:	e3a00001 	mov	r0, #1
4001cc38:	e8bd8010 	pop	{r4, pc}

4001cc3c <StoreDevice::Erase(unsigned long, unsigned long, storedevice::result&)>:
4001cc3c:	e92d4010 	push	{r4, lr}
4001cc40:	e1a00001 	mov	r0, r1
4001cc44:	e1a01002 	mov	r1, r2
4001cc48:	e1a04003 	mov	r4, r3
4001cc4c:	eb000355 	bl	4001d9a8 <spi_flash_cmd_erase(unsigned long, unsigned long)>
4001cc50:	e2200001 	eor	r0, r0, #1
4001cc54:	e6ef0070 	uxtb	r0, r0
4001cc58:	e5840000 	str	r0, [r4]
4001cc5c:	e3a00001 	mov	r0, #1
4001cc60:	e8bd8010 	pop	{r4, pc}

4001cc64 <StoreDevice::Write(unsigned long, unsigned long, unsigned char const*, storedevice::result&)>:
4001cc64:	e92d4010 	push	{r4, lr}
4001cc68:	e1a00001 	mov	r0, r1
4001cc6c:	e1a01002 	mov	r1, r2
4001cc70:	e1a02003 	mov	r2, r3
4001cc74:	eb0002f8 	bl	4001d85c <spi_flash_cmd_write_multi(unsigned long, unsigned long, unsigned char const*)>
4001cc78:	e59d3008 	ldr	r3, [sp, #8]
4001cc7c:	e2200001 	eor	r0, r0, #1
4001cc80:	e6ef0070 	uxtb	r0, r0
4001cc84:	e5830000 	str	r0, [r3]
4001cc88:	e3a00001 	mov	r0, #1
4001cc8c:	e8bd8010 	pop	{r4, pc}

4001cc90 <Display::TextStatus(char const*, unsigned long) [clone .isra.0]>:
4001cc90:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4001cc94:	e2504000 	subs	r4, r0, #0
4001cc98:	e1a05001 	mov	r5, r1
4001cc9c:	e1a06002 	mov	r6, r2
4001cca0:	0a000025 	beq	4001cd3c <Display::TextStatus(char const*, unsigned long) [clone .isra.0]+0xac>
4001cca4:	e1c480d4 	ldrd	r8, [r4, #4]
4001cca8:	e5943000 	ldr	r3, [r4]
4001ccac:	e3a01000 	mov	r1, #0
4001ccb0:	e249a001 	sub	sl, r9, #1
4001ccb4:	e3a07000 	mov	r7, #0
4001ccb8:	e5933020 	ldr	r3, [r3, #32]
4001ccbc:	e1a0200a 	mov	r2, sl
4001ccc0:	e2488001 	sub	r8, r8, #1
4001ccc4:	e12fff33 	blx	r3
4001ccc8:	e1580007 	cmp	r8, r7
4001cccc:	e5943000 	ldr	r3, [r4]
4001ccd0:	9a000005 	bls	4001ccec <Display::TextStatus(char const*, unsigned long) [clone .isra.0]+0x5c>
4001ccd4:	e5933014 	ldr	r3, [r3, #20]
4001ccd8:	e3a01020 	mov	r1, #32
4001ccdc:	e1a00004 	mov	r0, r4
4001cce0:	e2877001 	add	r7, r7, #1
4001cce4:	e12fff33 	blx	r3
4001cce8:	eafffff6 	b	4001ccc8 <Display::TextStatus(char const*, unsigned long) [clone .isra.0]+0x38>
4001ccec:	e5933020 	ldr	r3, [r3, #32]
4001ccf0:	e3a01000 	mov	r1, #0
4001ccf4:	e1a0200a 	mov	r2, sl
4001ccf8:	e1a00004 	mov	r0, r4
4001ccfc:	e12fff33 	blx	r3
4001cd00:	e5941004 	ldr	r1, [r4, #4]
4001cd04:	e3a03000 	mov	r3, #0
4001cd08:	e7d52003 	ldrb	r2, [r5, r3]
4001cd0c:	e3520000 	cmp	r2, #0
4001cd10:	0a000003 	beq	4001cd24 <Display::TextStatus(char const*, unsigned long) [clone .isra.0]+0x94>
4001cd14:	e1510003 	cmp	r1, r3
4001cd18:	e2832001 	add	r2, r3, #1
4001cd1c:	e1a03002 	mov	r3, r2
4001cd20:	8afffff8 	bhi	4001cd08 <Display::TextStatus(char const*, unsigned long) [clone .isra.0]+0x78>
4001cd24:	e5942000 	ldr	r2, [r4]
4001cd28:	e1a01009 	mov	r1, r9
4001cd2c:	e1a00004 	mov	r0, r4
4001cd30:	e592701c 	ldr	r7, [r2, #28]
4001cd34:	e1a02005 	mov	r2, r5
4001cd38:	e12fff37 	blx	r7
4001cd3c:	e3760001 	cmn	r6, #1
4001cd40:	08bd87f0 	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
4001cd44:	e1a01005 	mov	r1, r5
4001cd48:	e1a00006 	mov	r0, r6
4001cd4c:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
4001cd50:	ea002647 	b	40026674 <console_status>

4001cd54 <FlashCodeInstall::WriteFirmware(unsigned char const*, unsigned long)>:
4001cd54:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
4001cd58:	e1a07001 	mov	r7, r1
4001cd5c:	e1a06002 	mov	r6, r2
4001cd60:	e2821706 	add	r1, r2, #1572864	; 0x180000
4001cd64:	e5902008 	ldr	r2, [r0, #8]
4001cd68:	e24dd014 	sub	sp, sp, #20
4001cd6c:	e1510002 	cmp	r1, r2
4001cd70:	9a000005 	bls	4001cd8c <FlashCodeInstall::WriteFirmware(unsigned char const*, unsigned long)+0x38>
4001cd74:	e59f0118 	ldr	r0, [pc, #280]	; 4001ce94 <FlashCodeInstall::WriteFirmware(unsigned char const*, unsigned long)+0x140>
4001cd78:	eb003f84 	bl	4002cb90 <printf>
4001cd7c:	e3a04000 	mov	r4, #0
4001cd80:	e1a00004 	mov	r0, r4
4001cd84:	e28dd014 	add	sp, sp, #20
4001cd88:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4001cd8c:	e59f8104 	ldr	r8, [pc, #260]	; 4001ce98 <FlashCodeInstall::WriteFirmware(unsigned char const*, unsigned long)+0x144>
4001cd90:	e1a05000 	mov	r5, r0
4001cd94:	e5983000 	ldr	r3, [r8]
4001cd98:	e5d39020 	ldrb	r9, [r3, #32]
4001cd9c:	e3590000 	cmp	r9, #0
4001cda0:	0a000002 	beq	4001cdb0 <FlashCodeInstall::WriteFirmware(unsigned char const*, unsigned long)+0x5c>
4001cda4:	e3a02000 	mov	r2, #0
4001cda8:	e5c32020 	strb	r2, [r3, #32]
4001cdac:	eb003bb3 	bl	4002bc80 <h3_watchdog_disable()>
4001cdb0:	e59f00e4 	ldr	r0, [pc, #228]	; 4001ce9c <FlashCodeInstall::WriteFirmware(unsigned char const*, unsigned long)+0x148>
4001cdb4:	e2464001 	sub	r4, r6, #1
4001cdb8:	e59fa0e0 	ldr	sl, [pc, #224]	; 4001cea0 <FlashCodeInstall::WriteFirmware(unsigned char const*, unsigned long)+0x14c>
4001cdbc:	eb003fb5 	bl	4002cc98 <puts>
4001cdc0:	e1a00005 	mov	r0, r5
4001cdc4:	e28db00c 	add	fp, sp, #12
4001cdc8:	eb000232 	bl	4001d698 <FlashCode::GetSectorSize() const>
4001cdcc:	e59a3000 	ldr	r3, [sl]
4001cdd0:	e3a02002 	mov	r2, #2
4001cdd4:	e0844000 	add	r4, r4, r0
4001cdd8:	e2600000 	rsb	r0, r0, #0
4001cddc:	e59f10c0 	ldr	r1, [pc, #192]	; 4001cea4 <FlashCodeInstall::WriteFirmware(unsigned char const*, unsigned long)+0x150>
4001cde0:	e0044000 	and	r4, r4, r0
4001cde4:	e5930014 	ldr	r0, [r3, #20]
4001cde8:	ebffffa8 	bl	4001cc90 <Display::TextStatus(char const*, unsigned long) [clone .isra.0]>
4001cdec:	e1a0300b 	mov	r3, fp
4001cdf0:	e1a02004 	mov	r2, r4
4001cdf4:	e3a01706 	mov	r1, #1572864	; 0x180000
4001cdf8:	e1a00005 	mov	r0, r5
4001cdfc:	eb000232 	bl	4001d6cc <FlashCode::Erase(unsigned long, unsigned long, flashcode::result&)>
4001ce00:	e3500000 	cmp	r0, #0
4001ce04:	0afffff8 	beq	4001cdec <FlashCodeInstall::WriteFirmware(unsigned char const*, unsigned long)+0x98>
4001ce08:	e59d300c 	ldr	r3, [sp, #12]
4001ce0c:	e3530001 	cmp	r3, #1
4001ce10:	1a000002 	bne	4001ce20 <FlashCodeInstall::WriteFirmware(unsigned char const*, unsigned long)+0xcc>
4001ce14:	e59f008c 	ldr	r0, [pc, #140]	; 4001cea8 <FlashCodeInstall::WriteFirmware(unsigned char const*, unsigned long)+0x154>
4001ce18:	eb003f9e 	bl	4002cc98 <puts>
4001ce1c:	eaffffd6 	b	4001cd7c <FlashCodeInstall::WriteFirmware(unsigned char const*, unsigned long)+0x28>
4001ce20:	e59a3000 	ldr	r3, [sl]
4001ce24:	e3a02002 	mov	r2, #2
4001ce28:	e59f107c 	ldr	r1, [pc, #124]	; 4001ceac <FlashCodeInstall::WriteFirmware(unsigned char const*, unsigned long)+0x158>
4001ce2c:	e5930014 	ldr	r0, [r3, #20]
4001ce30:	ebffff96 	bl	4001cc90 <Display::TextStatus(char const*, unsigned long) [clone .isra.0]>
4001ce34:	e58db000 	str	fp, [sp]
4001ce38:	e1a03007 	mov	r3, r7
4001ce3c:	e1a02006 	mov	r2, r6
4001ce40:	e3a01706 	mov	r1, #1572864	; 0x180000
4001ce44:	e1a00005 	mov	r0, r5
4001ce48:	eb000229 	bl	4001d6f4 <FlashCode::Write(unsigned long, unsigned long, unsigned char const*, flashcode::result&)>
4001ce4c:	e2504000 	subs	r4, r0, #0
4001ce50:	0afffff7 	beq	4001ce34 <FlashCodeInstall::WriteFirmware(unsigned char const*, unsigned long)+0xe0>
4001ce54:	e59d300c 	ldr	r3, [sp, #12]
4001ce58:	e3530001 	cmp	r3, #1
4001ce5c:	059f004c 	ldreq	r0, [pc, #76]	; 4001ceb0 <FlashCodeInstall::WriteFirmware(unsigned char const*, unsigned long)+0x15c>
4001ce60:	0affffec 	beq	4001ce18 <FlashCodeInstall::WriteFirmware(unsigned char const*, unsigned long)+0xc4>
4001ce64:	e3590000 	cmp	r9, #0
4001ce68:	0a000003 	beq	4001ce7c <FlashCodeInstall::WriteFirmware(unsigned char const*, unsigned long)+0x128>
4001ce6c:	e5983000 	ldr	r3, [r8]
4001ce70:	e3a02001 	mov	r2, #1
4001ce74:	e5c32020 	strb	r2, [r3, #32]
4001ce78:	eb003b71 	bl	4002bc44 <h3_watchdog_enable()>
4001ce7c:	e59a3000 	ldr	r3, [sl]
4001ce80:	e3a02002 	mov	r2, #2
4001ce84:	e59f1028 	ldr	r1, [pc, #40]	; 4001ceb4 <FlashCodeInstall::WriteFirmware(unsigned char const*, unsigned long)+0x160>
4001ce88:	e5930014 	ldr	r0, [r3, #20]
4001ce8c:	ebffff7f 	bl	4001cc90 <Display::TextStatus(char const*, unsigned long) [clone .isra.0]>
4001ce90:	eaffffba 	b	4001cd80 <FlashCodeInstall::WriteFirmware(unsigned char const*, unsigned long)+0x2c>
4001ce94:	4003229a 	mulmi	r3, sl, r2
4001ce98:	40034088 	andmi	r4, r3, r8, lsl #1
4001ce9c:	400322b5 			; <UNDEFINED> instruction: 0x400322b5
4001cea0:	4003407c 	andmi	r4, r3, ip, ror r0
4001cea4:	400322c4 	andmi	r2, r3, r4, asr #5
4001cea8:	400322ca 	andmi	r2, r3, sl, asr #5
4001ceac:	400322dd 	ldrdmi	r2, [r3], -sp
4001ceb0:	400322e5 	andmi	r2, r3, r5, ror #5
4001ceb4:	400322f8 	strdmi	r2, [r3], -r8

4001ceb8 <Display::Write(unsigned long, char const*) [clone .isra.0]>:
4001ceb8:	e3500000 	cmp	r0, #0
4001cebc:	012fff1e 	bxeq	lr
4001cec0:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4001cec4:	e3a03000 	mov	r3, #0
4001cec8:	e590e004 	ldr	lr, [r0, #4]
4001cecc:	e7d2c003 	ldrb	ip, [r2, r3]
4001ced0:	e35c0000 	cmp	ip, #0
4001ced4:	0a000003 	beq	4001cee8 <Display::Write(unsigned long, char const*) [clone .isra.0]+0x30>
4001ced8:	e15e0003 	cmp	lr, r3
4001cedc:	e283c001 	add	ip, r3, #1
4001cee0:	e1a0300c 	mov	r3, ip
4001cee4:	8afffff8 	bhi	4001cecc <Display::Write(unsigned long, char const*) [clone .isra.0]+0x14>
4001cee8:	e590c000 	ldr	ip, [r0]
4001ceec:	e59ce01c 	ldr	lr, [ip, #28]
4001cef0:	e1a0c00e 	mov	ip, lr
4001cef4:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
4001cef8:	e12fff1c 	bx	ip

4001cefc <Display::TextStatus(char const*) [clone .isra.0]>:
4001cefc:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4001cf00:	e2504000 	subs	r4, r0, #0
4001cf04:	08bd87f0 	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
4001cf08:	e9940240 	ldmib	r4, {r6, r9}
4001cf0c:	e5943000 	ldr	r3, [r4]
4001cf10:	e1a08001 	mov	r8, r1
4001cf14:	e2497001 	sub	r7, r9, #1
4001cf18:	e3a01000 	mov	r1, #0
4001cf1c:	e5933020 	ldr	r3, [r3, #32]
4001cf20:	e1a02007 	mov	r2, r7
4001cf24:	e3a05000 	mov	r5, #0
4001cf28:	e2466001 	sub	r6, r6, #1
4001cf2c:	e12fff33 	blx	r3
4001cf30:	e1560005 	cmp	r6, r5
4001cf34:	e5943000 	ldr	r3, [r4]
4001cf38:	9a000005 	bls	4001cf54 <Display::TextStatus(char const*) [clone .isra.0]+0x58>
4001cf3c:	e5933014 	ldr	r3, [r3, #20]
4001cf40:	e3a01020 	mov	r1, #32
4001cf44:	e1a00004 	mov	r0, r4
4001cf48:	e2855001 	add	r5, r5, #1
4001cf4c:	e12fff33 	blx	r3
4001cf50:	eafffff6 	b	4001cf30 <Display::TextStatus(char const*) [clone .isra.0]+0x34>
4001cf54:	e5933020 	ldr	r3, [r3, #32]
4001cf58:	e1a02007 	mov	r2, r7
4001cf5c:	e1a00004 	mov	r0, r4
4001cf60:	e3a01000 	mov	r1, #0
4001cf64:	e12fff33 	blx	r3
4001cf68:	e1a02008 	mov	r2, r8
4001cf6c:	e1a01009 	mov	r1, r9
4001cf70:	e1a00004 	mov	r0, r4
4001cf74:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
4001cf78:	eaffffce 	b	4001ceb8 <Display::Write(unsigned long, char const*) [clone .isra.0]>

4001cf7c <FlashCodeInstall::Open(char const*)>:
4001cf7c:	e92d4070 	push	{r4, r5, r6, lr}
4001cf80:	e1a05001 	mov	r5, r1
4001cf84:	e59f1060 	ldr	r1, [pc, #96]	; 4001cfec <FlashCodeInstall::Open(char const*)+0x70>
4001cf88:	e1a06000 	mov	r6, r0
4001cf8c:	e1a00005 	mov	r0, r5
4001cf90:	eb0025d9 	bl	400266fc <fopen>
4001cf94:	e5860014 	str	r0, [r6, #20]
4001cf98:	e3500000 	cmp	r0, #0
4001cf9c:	1a000005 	bne	4001cfb8 <FlashCodeInstall::Open(char const*)+0x3c>
4001cfa0:	e1a04000 	mov	r4, r0
4001cfa4:	e1a01005 	mov	r1, r5
4001cfa8:	e59f0040 	ldr	r0, [pc, #64]	; 4001cff0 <FlashCodeInstall::Open(char const*)+0x74>
4001cfac:	eb003ef7 	bl	4002cb90 <printf>
4001cfb0:	e1a00004 	mov	r0, r4
4001cfb4:	e8bd8070 	pop	{r4, r5, r6, pc}
4001cfb8:	e59f3034 	ldr	r3, [pc, #52]	; 4001cff4 <FlashCodeInstall::Open(char const*)+0x78>
4001cfbc:	e1a02005 	mov	r2, r5
4001cfc0:	e3a01002 	mov	r1, #2
4001cfc4:	e5933000 	ldr	r3, [r3]
4001cfc8:	e5930014 	ldr	r0, [r3, #20]
4001cfcc:	e3500000 	cmp	r0, #0
4001cfd0:	13a03001 	movne	r3, #1
4001cfd4:	15c0300c 	strbne	r3, [r0, #12]
4001cfd8:	ebffffb6 	bl	4001ceb8 <Display::Write(unsigned long, char const*) [clone .isra.0]>
4001cfdc:	e1a00005 	mov	r0, r5
4001cfe0:	eb003f2c 	bl	4002cc98 <puts>
4001cfe4:	e3a00001 	mov	r0, #1
4001cfe8:	e8bd8070 	pop	{r4, r5, r6, pc}
4001cfec:	4003104b 	andmi	r1, r3, fp, asr #32
4001cff0:	400322fd 	strdmi	r2, [r3], -sp
4001cff4:	4003407c 	andmi	r4, r3, ip, ror r0

4001cff8 <FlashCodeInstall::Close()>:
4001cff8:	e92d4010 	push	{r4, lr}
4001cffc:	e1a04000 	mov	r4, r0
4001d000:	e5900014 	ldr	r0, [r0, #20]
4001d004:	eb0025ff 	bl	40026808 <fclose>
4001d008:	e3a03000 	mov	r3, #0
4001d00c:	e5843014 	str	r3, [r4, #20]
4001d010:	e59f301c 	ldr	r3, [pc, #28]	; 4001d034 <FlashCodeInstall::Close()+0x3c>
4001d014:	e59f401c 	ldr	r4, [pc, #28]	; 4001d038 <FlashCodeInstall::Close()+0x40>
4001d018:	e5933000 	ldr	r3, [r3]
4001d01c:	e1a01004 	mov	r1, r4
4001d020:	e5930014 	ldr	r0, [r3, #20]
4001d024:	ebffffb4 	bl	4001cefc <Display::TextStatus(char const*) [clone .isra.0]>
4001d028:	e1a00004 	mov	r0, r4
4001d02c:	e8bd4010 	pop	{r4, lr}
4001d030:	ea003f18 	b	4002cc98 <puts>
4001d034:	4003407c 	andmi	r4, r3, ip, ror r0
4001d038:	4003238b 	andmi	r2, r3, fp, lsl #7

4001d03c <FlashCodeInstall::BuffersCompare(unsigned long)>:
4001d03c:	e590300c 	ldr	r3, [r0, #12]
4001d040:	e5902010 	ldr	r2, [r0, #16]
4001d044:	e3510003 	cmp	r1, #3
4001d048:	9a000005 	bls	4001d064 <FlashCodeInstall::BuffersCompare(unsigned long)+0x28>
4001d04c:	e493c004 	ldr	ip, [r3], #4
4001d050:	e4920004 	ldr	r0, [r2], #4
4001d054:	e15c0000 	cmp	ip, r0
4001d058:	1a000008 	bne	4001d080 <FlashCodeInstall::BuffersCompare(unsigned long)+0x44>
4001d05c:	e2411004 	sub	r1, r1, #4
4001d060:	eafffff7 	b	4001d044 <FlashCodeInstall::BuffersCompare(unsigned long)+0x8>
4001d064:	e0831001 	add	r1, r3, r1
4001d068:	e1530001 	cmp	r3, r1
4001d06c:	0a000005 	beq	4001d088 <FlashCodeInstall::BuffersCompare(unsigned long)+0x4c>
4001d070:	e4d3c001 	ldrb	ip, [r3], #1
4001d074:	e4d20001 	ldrb	r0, [r2], #1
4001d078:	e15c0000 	cmp	ip, r0
4001d07c:	0afffff9 	beq	4001d068 <FlashCodeInstall::BuffersCompare(unsigned long)+0x2c>
4001d080:	e3a00000 	mov	r0, #0
4001d084:	e12fff1e 	bx	lr
4001d088:	e3a00001 	mov	r0, #1
4001d08c:	e12fff1e 	bx	lr

4001d090 <FlashCodeInstall::Diff(unsigned long)>:
4001d090:	e3a02000 	mov	r2, #0
4001d094:	e92d40f0 	push	{r4, r5, r6, r7, lr}
4001d098:	e1a05000 	mov	r5, r0
4001d09c:	e5900014 	ldr	r0, [r0, #20]
4001d0a0:	e24dd014 	sub	sp, sp, #20
4001d0a4:	e1a07001 	mov	r7, r1
4001d0a8:	e1a01002 	mov	r1, r2
4001d0ac:	eb00260d 	bl	400268e8 <fseek>
4001d0b0:	e2504000 	subs	r4, r0, #0
4001d0b4:	0a000002 	beq	4001d0c4 <FlashCodeInstall::Diff(unsigned long)+0x34>
4001d0b8:	e3a00000 	mov	r0, #0
4001d0bc:	e28dd014 	add	sp, sp, #20
4001d0c0:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
4001d0c4:	e5953014 	ldr	r3, [r5, #20]
4001d0c8:	e3a02b01 	mov	r2, #1024	; 0x400
4001d0cc:	e595000c 	ldr	r0, [r5, #12]
4001d0d0:	e3a01001 	mov	r1, #1
4001d0d4:	eb0025ec 	bl	4002688c <fread>
4001d0d8:	e3500b01 	cmp	r0, #1024	; 0x400
4001d0dc:	e1a06000 	mov	r6, r0
4001d0e0:	1afffff4 	bne	4001d0b8 <FlashCodeInstall::Diff(unsigned long)+0x28>
4001d0e4:	e28d300c 	add	r3, sp, #12
4001d0e8:	e1a02000 	mov	r2, r0
4001d0ec:	e58d3000 	str	r3, [sp]
4001d0f0:	e1a01007 	mov	r1, r7
4001d0f4:	e5953010 	ldr	r3, [r5, #16]
4001d0f8:	e1a00005 	mov	r0, r5
4001d0fc:	eb000167 	bl	4001d6a0 <FlashCode::Read(unsigned long, unsigned long, unsigned char*, flashcode::result&)>
4001d100:	e59d300c 	ldr	r3, [sp, #12]
4001d104:	e3530001 	cmp	r3, #1
4001d108:	01a00004 	moveq	r0, r4
4001d10c:	0affffea 	beq	4001d0bc <FlashCodeInstall::Diff(unsigned long)+0x2c>
4001d110:	e1a01006 	mov	r1, r6
4001d114:	e1a00005 	mov	r0, r5
4001d118:	ebffffc7 	bl	4001d03c <FlashCodeInstall::BuffersCompare(unsigned long)>
4001d11c:	e2200001 	eor	r0, r0, #1
4001d120:	e6ef0070 	uxtb	r0, r0
4001d124:	eaffffe4 	b	4001d0bc <FlashCodeInstall::Diff(unsigned long)+0x2c>

4001d128 <FlashCodeInstall::Write(unsigned long)>:
4001d128:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
4001d12c:	e3a02000 	mov	r2, #0
4001d130:	e24dd014 	sub	sp, sp, #20
4001d134:	e1a04000 	mov	r4, r0
4001d138:	e5900014 	ldr	r0, [r0, #20]
4001d13c:	e1a06001 	mov	r6, r1
4001d140:	e3a07000 	mov	r7, #0
4001d144:	e1a01002 	mov	r1, r2
4001d148:	e28d800c 	add	r8, sp, #12
4001d14c:	e3e09000 	mvn	r9, #0
4001d150:	eb0025e4 	bl	400268e8 <fseek>
4001d154:	e5943008 	ldr	r3, [r4, #8]
4001d158:	e1530006 	cmp	r3, r6
4001d15c:	9a000010 	bls	4001d1a4 <FlashCodeInstall::Write(unsigned long)+0x7c>
4001d160:	e5943014 	ldr	r3, [r4, #20]
4001d164:	e3a01001 	mov	r1, #1
4001d168:	e5942004 	ldr	r2, [r4, #4]
4001d16c:	e594000c 	ldr	r0, [r4, #12]
4001d170:	eb0025c5 	bl	4002688c <fread>
4001d174:	e0877000 	add	r7, r7, r0
4001d178:	e1a03008 	mov	r3, r8
4001d17c:	e5942004 	ldr	r2, [r4, #4]
4001d180:	e1a05000 	mov	r5, r0
4001d184:	e1a01006 	mov	r1, r6
4001d188:	e1a00004 	mov	r0, r4
4001d18c:	eb00014e 	bl	4001d6cc <FlashCode::Erase(unsigned long, unsigned long, flashcode::result&)>
4001d190:	e59d300c 	ldr	r3, [sp, #12]
4001d194:	e3530001 	cmp	r3, #1
4001d198:	1a000003 	bne	4001d1ac <FlashCodeInstall::Write(unsigned long)+0x84>
4001d19c:	e59f00f8 	ldr	r0, [pc, #248]	; 4001d29c <FlashCodeInstall::Write(unsigned long)+0x174>
4001d1a0:	eb003ebc 	bl	4002cc98 <puts>
4001d1a4:	e28dd014 	add	sp, sp, #20
4001d1a8:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
4001d1ac:	e5943004 	ldr	r3, [r4, #4]
4001d1b0:	e1530005 	cmp	r3, r5
4001d1b4:	9a000006 	bls	4001d1d4 <FlashCodeInstall::Write(unsigned long)+0xac>
4001d1b8:	e1a03005 	mov	r3, r5
4001d1bc:	e594200c 	ldr	r2, [r4, #12]
4001d1c0:	e7c29003 	strb	r9, [r2, r3]
4001d1c4:	e2833001 	add	r3, r3, #1
4001d1c8:	e5942004 	ldr	r2, [r4, #4]
4001d1cc:	e1520003 	cmp	r2, r3
4001d1d0:	8afffff9 	bhi	4001d1bc <FlashCodeInstall::Write(unsigned long)+0x94>
4001d1d4:	e594300c 	ldr	r3, [r4, #12]
4001d1d8:	e1a01006 	mov	r1, r6
4001d1dc:	e5942004 	ldr	r2, [r4, #4]
4001d1e0:	e1a00004 	mov	r0, r4
4001d1e4:	e58d8000 	str	r8, [sp]
4001d1e8:	eb000141 	bl	4001d6f4 <FlashCode::Write(unsigned long, unsigned long, unsigned char const*, flashcode::result&)>
4001d1ec:	e59d300c 	ldr	r3, [sp, #12]
4001d1f0:	e3530001 	cmp	r3, #1
4001d1f4:	059f00a4 	ldreq	r0, [pc, #164]	; 4001d2a0 <FlashCodeInstall::Write(unsigned long)+0x178>
4001d1f8:	0affffe8 	beq	4001d1a0 <FlashCodeInstall::Write(unsigned long)+0x78>
4001d1fc:	e5943010 	ldr	r3, [r4, #16]
4001d200:	e1a02005 	mov	r2, r5
4001d204:	e58d8000 	str	r8, [sp]
4001d208:	e1a01006 	mov	r1, r6
4001d20c:	e1a00004 	mov	r0, r4
4001d210:	eb000122 	bl	4001d6a0 <FlashCode::Read(unsigned long, unsigned long, unsigned char*, flashcode::result&)>
4001d214:	e59d300c 	ldr	r3, [sp, #12]
4001d218:	e3530001 	cmp	r3, #1
4001d21c:	059f0080 	ldreq	r0, [pc, #128]	; 4001d2a4 <FlashCodeInstall::Write(unsigned long)+0x17c>
4001d220:	0affffde 	beq	4001d1a0 <FlashCodeInstall::Write(unsigned long)+0x78>
4001d224:	e1a01005 	mov	r1, r5
4001d228:	e1a00004 	mov	r0, r4
4001d22c:	ebffff82 	bl	4001d03c <FlashCodeInstall::BuffersCompare(unsigned long)>
4001d230:	e3500000 	cmp	r0, #0
4001d234:	059f006c 	ldreq	r0, [pc, #108]	; 4001d2a8 <FlashCodeInstall::Write(unsigned long)+0x180>
4001d238:	0affffd8 	beq	4001d1a0 <FlashCodeInstall::Write(unsigned long)+0x78>
4001d23c:	e5943004 	ldr	r3, [r4, #4]
4001d240:	e1530005 	cmp	r3, r5
4001d244:	0a000012 	beq	4001d294 <FlashCodeInstall::Write(unsigned long)+0x16c>
4001d248:	e5940014 	ldr	r0, [r4, #20]
4001d24c:	eb0025d7 	bl	400269b0 <ferror>
4001d250:	e3500000 	cmp	r0, #0
4001d254:	1affffd2 	bne	4001d1a4 <FlashCodeInstall::Write(unsigned long)+0x7c>
4001d258:	e59f304c 	ldr	r3, [pc, #76]	; 4001d2ac <FlashCodeInstall::Write(unsigned long)+0x184>
4001d25c:	e3a01003 	mov	r1, #3
4001d260:	e5930000 	ldr	r0, [r3]
4001d264:	e5903014 	ldr	r3, [r0, #20]
4001d268:	e3530000 	cmp	r3, #0
4001d26c:	13a02001 	movne	r2, #1
4001d270:	15c3200c 	strbne	r2, [r3, #12]
4001d274:	e1a03007 	mov	r3, r7
4001d278:	e59f2030 	ldr	r2, [pc, #48]	; 4001d2b0 <FlashCodeInstall::Write(unsigned long)+0x188>
4001d27c:	ebffa94b 	bl	400077b0 <Display::Printf(unsigned long, char const*, ...)>
4001d280:	e59f002c 	ldr	r0, [pc, #44]	; 4001d2b4 <FlashCodeInstall::Write(unsigned long)+0x18c>
4001d284:	e1a01007 	mov	r1, r7
4001d288:	e28dd014 	add	sp, sp, #20
4001d28c:	e8bd43f0 	pop	{r4, r5, r6, r7, r8, r9, lr}
4001d290:	ea003e3e 	b	4002cb90 <printf>
4001d294:	e0866005 	add	r6, r6, r5
4001d298:	eaffffad 	b	4001d154 <FlashCodeInstall::Write(unsigned long)+0x2c>
4001d29c:	400322ca 	andmi	r2, r3, sl, asr #5
4001d2a0:	400322e5 	andmi	r2, r3, r5, ror #5
4001d2a4:	40032316 	andmi	r2, r3, r6, lsl r3
4001d2a8:	40032328 	andmi	r2, r3, r8, lsr #6
4001d2ac:	4003407c 	andmi	r4, r3, ip, ror r0
4001d2b0:	40030f06 	andmi	r0, r3, r6, lsl #30
4001d2b4:	4003233c 	andmi	r2, r3, ip, lsr r3

4001d2b8 <FlashCodeInstall::Process(char const*, unsigned long)>:
4001d2b8:	e92d4070 	push	{r4, r5, r6, lr}
4001d2bc:	e1a04000 	mov	r4, r0
4001d2c0:	e1a05002 	mov	r5, r2
4001d2c4:	ebffff2c 	bl	4001cf7c <FlashCodeInstall::Open(char const*)>
4001d2c8:	e3500000 	cmp	r0, #0
4001d2cc:	08bd8070 	popeq	{r4, r5, r6, pc}
4001d2d0:	e59f6070 	ldr	r6, [pc, #112]	; 4001d348 <FlashCodeInstall::Process(char const*, unsigned long)+0x90>
4001d2d4:	e59f1070 	ldr	r1, [pc, #112]	; 4001d34c <FlashCodeInstall::Process(char const*, unsigned long)+0x94>
4001d2d8:	e5963000 	ldr	r3, [r6]
4001d2dc:	e5930014 	ldr	r0, [r3, #20]
4001d2e0:	ebffff05 	bl	4001cefc <Display::TextStatus(char const*) [clone .isra.0]>
4001d2e4:	e59f0060 	ldr	r0, [pc, #96]	; 4001d34c <FlashCodeInstall::Process(char const*, unsigned long)+0x94>
4001d2e8:	eb003e6a 	bl	4002cc98 <puts>
4001d2ec:	e1a01005 	mov	r1, r5
4001d2f0:	e1a00004 	mov	r0, r4
4001d2f4:	ebffff65 	bl	4001d090 <FlashCodeInstall::Diff(unsigned long)>
4001d2f8:	e5963000 	ldr	r3, [r6]
4001d2fc:	e3500000 	cmp	r0, #0
4001d300:	0a00000a 	beq	4001d330 <FlashCodeInstall::Process(char const*, unsigned long)+0x78>
4001d304:	e59f1044 	ldr	r1, [pc, #68]	; 4001d350 <FlashCodeInstall::Process(char const*, unsigned long)+0x98>
4001d308:	e5930014 	ldr	r0, [r3, #20]
4001d30c:	ebfffefa 	bl	4001cefc <Display::TextStatus(char const*) [clone .isra.0]>
4001d310:	e59f0038 	ldr	r0, [pc, #56]	; 4001d350 <FlashCodeInstall::Process(char const*, unsigned long)+0x98>
4001d314:	eb003e5f 	bl	4002cc98 <puts>
4001d318:	e1a01005 	mov	r1, r5
4001d31c:	e1a00004 	mov	r0, r4
4001d320:	ebffff80 	bl	4001d128 <FlashCodeInstall::Write(unsigned long)>
4001d324:	e1a00004 	mov	r0, r4
4001d328:	e8bd4070 	pop	{r4, r5, r6, lr}
4001d32c:	eaffff31 	b	4001cff8 <FlashCodeInstall::Close()>
4001d330:	e5930014 	ldr	r0, [r3, #20]
4001d334:	e59f1018 	ldr	r1, [pc, #24]	; 4001d354 <FlashCodeInstall::Process(char const*, unsigned long)+0x9c>
4001d338:	ebfffeef 	bl	4001cefc <Display::TextStatus(char const*) [clone .isra.0]>
4001d33c:	e59f0010 	ldr	r0, [pc, #16]	; 4001d354 <FlashCodeInstall::Process(char const*, unsigned long)+0x9c>
4001d340:	eb003e54 	bl	4002cc98 <puts>
4001d344:	eafffff6 	b	4001d324 <FlashCodeInstall::Process(char const*, unsigned long)+0x6c>
4001d348:	4003407c 	andmi	r4, r3, ip, ror r0
4001d34c:	4003237a 	andmi	r2, r3, sl, ror r3
4001d350:	40032390 	mulmi	r3, r0, r3
4001d354:	4003236c 	andmi	r2, r3, ip, ror #6

4001d358 <FlashCodeInstall::FlashCodeInstall()>:
4001d358:	e92d4037 	push	{r0, r1, r2, r4, r5, lr}
4001d35c:	e1a04000 	mov	r4, r0
4001d360:	e59f5124 	ldr	r5, [pc, #292]	; 4001d48c <FlashCodeInstall::FlashCodeInstall()+0x134>
4001d364:	eb0000b2 	bl	4001d634 <FlashCode::FlashCode()>
4001d368:	e3a03000 	mov	r3, #0
4001d36c:	e5843004 	str	r3, [r4, #4]
4001d370:	e5843008 	str	r3, [r4, #8]
4001d374:	e584300c 	str	r3, [r4, #12]
4001d378:	e5843010 	str	r3, [r4, #16]
4001d37c:	e5843014 	str	r3, [r4, #20]
4001d380:	e5c43018 	strb	r3, [r4, #24]
4001d384:	e59f3104 	ldr	r3, [pc, #260]	; 4001d490 <FlashCodeInstall::FlashCodeInstall()+0x138>
4001d388:	e5834000 	str	r4, [r3]
4001d38c:	e5953000 	ldr	r3, [r5]
4001d390:	e5930014 	ldr	r0, [r3, #20]
4001d394:	e3500000 	cmp	r0, #0
4001d398:	0a000002 	beq	4001d3a8 <FlashCodeInstall::FlashCodeInstall()+0x50>
4001d39c:	e5903000 	ldr	r3, [r0]
4001d3a0:	e593300c 	ldr	r3, [r3, #12]
4001d3a4:	e12fff33 	blx	r3
4001d3a8:	e5d43000 	ldrb	r3, [r4]
4001d3ac:	e3530000 	cmp	r3, #0
4001d3b0:	1a00002a 	bne	4001d460 <FlashCodeInstall::FlashCodeInstall()+0x108>
4001d3b4:	e5953000 	ldr	r3, [r5]
4001d3b8:	e59f10d4 	ldr	r1, [pc, #212]	; 4001d494 <FlashCodeInstall::FlashCodeInstall()+0x13c>
4001d3bc:	e5930014 	ldr	r0, [r3, #20]
4001d3c0:	ebfffecd 	bl	4001cefc <Display::TextStatus(char const*) [clone .isra.0]>
4001d3c4:	eb002fd6 	bl	40029324 <h3_get_boot_device>
4001d3c8:	e3500002 	cmp	r0, #2
4001d3cc:	1a000020 	bne	4001d454 <FlashCodeInstall::FlashCodeInstall()+0xfc>
4001d3d0:	e3a05000 	mov	r5, #0
4001d3d4:	e28d0004 	add	r0, sp, #4
4001d3d8:	e58d5004 	str	r5, [sp, #4]
4001d3dc:	eb000062 	bl	4001d56c <FlashCodeInstallParams::Load()>
4001d3e0:	e1500005 	cmp	r0, r5
4001d3e4:	0a00001a 	beq	4001d454 <FlashCodeInstall::FlashCodeInstall()+0xfc>
4001d3e8:	e5943008 	ldr	r3, [r4, #8]
4001d3ec:	e3530602 	cmp	r3, #2097152	; 0x200000
4001d3f0:	3a000017 	bcc	4001d454 <FlashCodeInstall::FlashCodeInstall()+0xfc>
4001d3f4:	e3a03001 	mov	r3, #1
4001d3f8:	e1a00004 	mov	r0, r4
4001d3fc:	e5c43018 	strb	r3, [r4, #24]
4001d400:	eb0000a4 	bl	4001d698 <FlashCode::GetSectorSize() const>
4001d404:	e5840004 	str	r0, [r4, #4]
4001d408:	eb003ff3 	bl	4002d3dc <operator new[](unsigned int)>
4001d40c:	e584000c 	str	r0, [r4, #12]
4001d410:	e5940004 	ldr	r0, [r4, #4]
4001d414:	eb003ff0 	bl	4002d3dc <operator new[](unsigned int)>
4001d418:	e59d3004 	ldr	r3, [sp, #4]
4001d41c:	e5840010 	str	r0, [r4, #16]
4001d420:	e3130001 	tst	r3, #1
4001d424:	0a000003 	beq	4001d438 <FlashCodeInstall::FlashCodeInstall()+0xe0>
4001d428:	e59f1068 	ldr	r1, [pc, #104]	; 4001d498 <FlashCodeInstall::FlashCodeInstall()+0x140>
4001d42c:	e1a02005 	mov	r2, r5
4001d430:	e1a00004 	mov	r0, r4
4001d434:	ebffff9f 	bl	4001d2b8 <FlashCodeInstall::Process(char const*, unsigned long)>
4001d438:	e59d3004 	ldr	r3, [sp, #4]
4001d43c:	e3130002 	tst	r3, #2
4001d440:	0a000003 	beq	4001d454 <FlashCodeInstall::FlashCodeInstall()+0xfc>
4001d444:	e59f1050 	ldr	r1, [pc, #80]	; 4001d49c <FlashCodeInstall::FlashCodeInstall()+0x144>
4001d448:	e3a02706 	mov	r2, #1572864	; 0x180000
4001d44c:	e1a00004 	mov	r0, r4
4001d450:	ebffff98 	bl	4001d2b8 <FlashCodeInstall::Process(char const*, unsigned long)>
4001d454:	e1a00004 	mov	r0, r4
4001d458:	e28dd00c 	add	sp, sp, #12
4001d45c:	e8bd8030 	pop	{r4, r5, pc}
4001d460:	e1a00004 	mov	r0, r4
4001d464:	eb00008a 	bl	4001d694 <FlashCode::GetSize() const>
4001d468:	e5840008 	str	r0, [r4, #8]
4001d46c:	e1a00004 	mov	r0, r4
4001d470:	e5955000 	ldr	r5, [r5]
4001d474:	eb000085 	bl	4001d690 <FlashCode::GetName() const>
4001d478:	e1a02000 	mov	r2, r0
4001d47c:	e3a01001 	mov	r1, #1
4001d480:	e5950014 	ldr	r0, [r5, #20]
4001d484:	ebfffe8b 	bl	4001ceb8 <Display::Write(unsigned long, char const*) [clone .isra.0]>
4001d488:	eaffffcd 	b	4001d3c4 <FlashCodeInstall::FlashCodeInstall()+0x6c>
4001d48c:	4003407c 	andmi	r4, r3, ip, ror r0
4001d490:	4005a030 	andmi	sl, r5, r0, lsr r0
4001d494:	4003234e 	andmi	r2, r3, lr, asr #6
4001d498:	40032362 	andmi	r2, r3, r2, ror #6
4001d49c:	4003235b 	andmi	r2, r3, fp, asr r3

4001d4a0 <UBootHeader::UBootHeader(unsigned char*)>:
4001d4a0:	e5913000 	ldr	r3, [r1]
4001d4a4:	e5912010 	ldr	r2, [r1, #16]
4001d4a8:	e59fc0b4 	ldr	ip, [pc, #180]	; 4001d564 <UBootHeader::UBootHeader(unsigned char*)+0xc4>
4001d4ac:	e92d4030 	push	{r4, r5, lr}
4001d4b0:	e2815040 	add	r5, r1, #64	; 0x40
4001d4b4:	e153000c 	cmp	r3, ip
4001d4b8:	03520040 	cmpeq	r2, #64	; 0x40
4001d4bc:	e281c020 	add	ip, r1, #32
4001d4c0:	e5912014 	ldr	r2, [r1, #20]
4001d4c4:	03a03001 	moveq	r3, #1
4001d4c8:	e59fe098 	ldr	lr, [pc, #152]	; 4001d568 <UBootHeader::UBootHeader(unsigned char*)+0xc8>
4001d4cc:	13a03000 	movne	r3, #0
4001d4d0:	e5801000 	str	r1, [r0]
4001d4d4:	e3520040 	cmp	r2, #64	; 0x40
4001d4d8:	13a03000 	movne	r3, #0
4001d4dc:	02033001 	andeq	r3, r3, #1
4001d4e0:	e5d1201c 	ldrb	r2, [r1, #28]
4001d4e4:	e3520011 	cmp	r2, #17
4001d4e8:	13a03000 	movne	r3, #0
4001d4ec:	02033001 	andeq	r3, r3, #1
4001d4f0:	e5d1201d 	ldrb	r2, [r1, #29]
4001d4f4:	e3520002 	cmp	r2, #2
4001d4f8:	13a03000 	movne	r3, #0
4001d4fc:	02033001 	andeq	r3, r3, #1
4001d500:	e5d1201e 	ldrb	r2, [r1, #30]
4001d504:	e3520001 	cmp	r2, #1
4001d508:	13a03000 	movne	r3, #0
4001d50c:	02033001 	andeq	r3, r3, #1
4001d510:	e4dc2001 	ldrb	r2, [ip], #1
4001d514:	e4de4001 	ldrb	r4, [lr], #1
4001d518:	e1520004 	cmp	r2, r4
4001d51c:	0a00000a 	beq	4001d54c <UBootHeader::UBootHeader(unsigned char*)+0xac>
4001d520:	e0422004 	sub	r2, r2, r4
4001d524:	e3520000 	cmp	r2, #0
4001d528:	13a03000 	movne	r3, #0
4001d52c:	02033001 	andeq	r3, r3, #1
4001d530:	e5c03004 	strb	r3, [r0, #4]
4001d534:	e5d1301f 	ldrb	r3, [r1, #31]
4001d538:	e2433001 	sub	r3, r3, #1
4001d53c:	e16f3f13 	clz	r3, r3
4001d540:	e1a032a3 	lsr	r3, r3, #5
4001d544:	e5c03005 	strb	r3, [r0, #5]
4001d548:	e8bd8030 	pop	{r4, r5, pc}
4001d54c:	e3520000 	cmp	r2, #0
4001d550:	0afffff3 	beq	4001d524 <UBootHeader::UBootHeader(unsigned char*)+0x84>
4001d554:	e15c0005 	cmp	ip, r5
4001d558:	1affffec 	bne	4001d510 <UBootHeader::UBootHeader(unsigned char*)+0x70>
4001d55c:	e3a02000 	mov	r2, #0
4001d560:	eaffffef 	b	4001d524 <UBootHeader::UBootHeader(unsigned char*)+0x84>
4001d564:	56190527 	ldrpl	r0, [r9], -r7, lsr #10
4001d568:	40032398 	mulmi	r3, r8, r3

4001d56c <FlashCodeInstallParams::Load()>:
4001d56c:	e3a03000 	mov	r3, #0
4001d570:	e1a02000 	mov	r2, r0
4001d574:	e92d4013 	push	{r0, r1, r4, lr}
4001d578:	e5803000 	str	r3, [r0]
4001d57c:	e1a0000d 	mov	r0, sp
4001d580:	e59f1024 	ldr	r1, [pc, #36]	; 4001d5ac <FlashCodeInstallParams::Load()+0x40>
4001d584:	eb001f98 	bl	400253ec <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
4001d588:	e59f1020 	ldr	r1, [pc, #32]	; 4001d5b0 <FlashCodeInstallParams::Load()+0x44>
4001d58c:	e1a0000d 	mov	r0, sp
4001d590:	eb001f98 	bl	400253f8 <ReadConfigFile::Read(char const*)>
4001d594:	e1a04000 	mov	r4, r0
4001d598:	e1a0000d 	mov	r0, sp
4001d59c:	eb001f94 	bl	400253f4 <ReadConfigFile::~ReadConfigFile()>
4001d5a0:	e1a00004 	mov	r0, r4
4001d5a4:	e28dd008 	add	sp, sp, #8
4001d5a8:	e8bd8010 	pop	{r4, pc}
4001d5ac:	4001d630 	andmi	sp, r1, r0, lsr r6
4001d5b0:	400323d1 	ldrdmi	r2, [r3], -r1

4001d5b4 <FlashCodeInstallParams::callbackFunction(char const*)>:
4001d5b4:	e92d4037 	push	{r0, r1, r2, r4, r5, lr}
4001d5b8:	e1a05001 	mov	r5, r1
4001d5bc:	e59f1064 	ldr	r1, [pc, #100]	; 4001d628 <FlashCodeInstallParams::callbackFunction(char const*)+0x74>
4001d5c0:	e1a04000 	mov	r4, r0
4001d5c4:	e28d2007 	add	r2, sp, #7
4001d5c8:	e1a00005 	mov	r0, r5
4001d5cc:	eb0020c2 	bl	400258dc <Sscan::Uint8(char const*, char const*, unsigned char&)>
4001d5d0:	e3500000 	cmp	r0, #0
4001d5d4:	1a000007 	bne	4001d5f8 <FlashCodeInstallParams::callbackFunction(char const*)+0x44>
4001d5d8:	e5dd2007 	ldrb	r2, [sp, #7]
4001d5dc:	e5943000 	ldr	r3, [r4]
4001d5e0:	e3520000 	cmp	r2, #0
4001d5e4:	03c33001 	biceq	r3, r3, #1
4001d5e8:	13833001 	orrne	r3, r3, #1
4001d5ec:	e5843000 	str	r3, [r4]
4001d5f0:	e28dd00c 	add	sp, sp, #12
4001d5f4:	e8bd8030 	pop	{r4, r5, pc}
4001d5f8:	e59f102c 	ldr	r1, [pc, #44]	; 4001d62c <FlashCodeInstallParams::callbackFunction(char const*)+0x78>
4001d5fc:	e28d2007 	add	r2, sp, #7
4001d600:	e1a00005 	mov	r0, r5
4001d604:	eb0020b4 	bl	400258dc <Sscan::Uint8(char const*, char const*, unsigned char&)>
4001d608:	e3500000 	cmp	r0, #0
4001d60c:	1afffff7 	bne	4001d5f0 <FlashCodeInstallParams::callbackFunction(char const*)+0x3c>
4001d610:	e5dd2007 	ldrb	r2, [sp, #7]
4001d614:	e5943000 	ldr	r3, [r4]
4001d618:	e3520000 	cmp	r2, #0
4001d61c:	03c33002 	biceq	r3, r3, #2
4001d620:	13833002 	orrne	r3, r3, #2
4001d624:	eafffff0 	b	4001d5ec <FlashCodeInstallParams::callbackFunction(char const*)+0x38>
4001d628:	400323c3 	andmi	r2, r3, r3, asr #7
4001d62c:	400323b4 			; <UNDEFINED> instruction: 0x400323b4

4001d630 <FlashCodeInstallParams::staticCallbackFunction(void*, char const*)>:
4001d630:	eaffffdf 	b	4001d5b4 <FlashCodeInstallParams::callbackFunction(char const*)>

4001d634 <FlashCode::FlashCode()>:
4001d634:	e3a03000 	mov	r3, #0
4001d638:	e92d4070 	push	{r4, r5, r6, lr}
4001d63c:	e1a04000 	mov	r4, r0
4001d640:	e5c03000 	strb	r3, [r0]
4001d644:	e59f303c 	ldr	r3, [pc, #60]	; 4001d688 <FlashCode::FlashCode()+0x54>
4001d648:	e5830000 	str	r0, [r3]
4001d64c:	eb00010e 	bl	4001da8c <spi_flash_probe()>
4001d650:	e3500000 	cmp	r0, #0
4001d654:	0a000009 	beq	4001d680 <FlashCode::FlashCode()+0x4c>
4001d658:	eb00007b 	bl	4001d84c <spi_flash_get_name()>
4001d65c:	e1a05000 	mov	r5, r0
4001d660:	eb000075 	bl	4001d83c <spi_flash_get_size()>
4001d664:	e1a03000 	mov	r3, r0
4001d668:	e3a02a01 	mov	r2, #4096	; 0x1000
4001d66c:	e59f0018 	ldr	r0, [pc, #24]	; 4001d68c <FlashCode::FlashCode()+0x58>
4001d670:	e1a01005 	mov	r1, r5
4001d674:	eb003d45 	bl	4002cb90 <printf>
4001d678:	e3a03001 	mov	r3, #1
4001d67c:	e5c43000 	strb	r3, [r4]
4001d680:	e1a00004 	mov	r0, r4
4001d684:	e8bd8070 	pop	{r4, r5, r6, pc}
4001d688:	4005a034 	andmi	sl, r5, r4, lsr r0
4001d68c:	400323de 	ldrdmi	r2, [r3], -lr

4001d690 <FlashCode::GetName() const>:
4001d690:	ea00006d 	b	4001d84c <spi_flash_get_name()>

4001d694 <FlashCode::GetSize() const>:
4001d694:	ea000068 	b	4001d83c <spi_flash_get_size()>

4001d698 <FlashCode::GetSectorSize() const>:
4001d698:	e3a00a01 	mov	r0, #4096	; 0x1000
4001d69c:	e12fff1e 	bx	lr

4001d6a0 <FlashCode::Read(unsigned long, unsigned long, unsigned char*, flashcode::result&)>:
4001d6a0:	e92d4010 	push	{r4, lr}
4001d6a4:	e1a00001 	mov	r0, r1
4001d6a8:	e1a01002 	mov	r1, r2
4001d6ac:	e1a02003 	mov	r2, r3
4001d6b0:	eb000099 	bl	4001d91c <spi_flash_cmd_read_fast(unsigned long, unsigned long, unsigned char*)>
4001d6b4:	e59d3008 	ldr	r3, [sp, #8]
4001d6b8:	e2200001 	eor	r0, r0, #1
4001d6bc:	e6ef0070 	uxtb	r0, r0
4001d6c0:	e5830000 	str	r0, [r3]
4001d6c4:	e3a00001 	mov	r0, #1
4001d6c8:	e8bd8010 	pop	{r4, pc}

4001d6cc <FlashCode::Erase(unsigned long, unsigned long, flashcode::result&)>:
4001d6cc:	e92d4010 	push	{r4, lr}
4001d6d0:	e1a00001 	mov	r0, r1
4001d6d4:	e1a01002 	mov	r1, r2
4001d6d8:	e1a04003 	mov	r4, r3
4001d6dc:	eb0000b1 	bl	4001d9a8 <spi_flash_cmd_erase(unsigned long, unsigned long)>
4001d6e0:	e2200001 	eor	r0, r0, #1
4001d6e4:	e6ef0070 	uxtb	r0, r0
4001d6e8:	e5840000 	str	r0, [r4]
4001d6ec:	e3a00001 	mov	r0, #1
4001d6f0:	e8bd8010 	pop	{r4, pc}

4001d6f4 <FlashCode::Write(unsigned long, unsigned long, unsigned char const*, flashcode::result&)>:
4001d6f4:	e92d4010 	push	{r4, lr}
4001d6f8:	e1a00001 	mov	r0, r1
4001d6fc:	e1a01002 	mov	r1, r2
4001d700:	e1a02003 	mov	r2, r3
4001d704:	eb000054 	bl	4001d85c <spi_flash_cmd_write_multi(unsigned long, unsigned long, unsigned char const*)>
4001d708:	e59d3008 	ldr	r3, [sp, #8]
4001d70c:	e2200001 	eor	r0, r0, #1
4001d710:	e6ef0070 	uxtb	r0, r0
4001d714:	e5830000 	str	r0, [r3]
4001d718:	e3a00001 	mov	r0, #1
4001d71c:	e8bd8010 	pop	{r4, pc}

4001d720 <spi_flash_read_write(unsigned char const*, unsigned long, unsigned char const*, unsigned char*, unsigned long)>:
4001d720:	e92d4070 	push	{r4, r5, r6, lr}
4001d724:	e1a0c000 	mov	ip, r0
4001d728:	e59d4010 	ldr	r4, [sp, #16]
4001d72c:	e1a06003 	mov	r6, r3
4001d730:	e1a00001 	mov	r0, r1
4001d734:	e1a05002 	mov	r5, r2
4001d738:	e3540000 	cmp	r4, #0
4001d73c:	e3a02000 	mov	r2, #0
4001d740:	13a03001 	movne	r3, #1
4001d744:	03a03003 	moveq	r3, #3
4001d748:	e1a0100c 	mov	r1, ip
4001d74c:	eb0001bb 	bl	4001de40 <spi_xfer(unsigned long, unsigned char const*, unsigned char*, unsigned long)>
4001d750:	e3540000 	cmp	r4, #0
4001d754:	08bd8070 	popeq	{r4, r5, r6, pc}
4001d758:	e1a02006 	mov	r2, r6
4001d75c:	e1a01005 	mov	r1, r5
4001d760:	e1a00004 	mov	r0, r4
4001d764:	e3a03002 	mov	r3, #2
4001d768:	e8bd4070 	pop	{r4, r5, r6, lr}
4001d76c:	ea0001b3 	b	4001de40 <spi_xfer(unsigned long, unsigned char const*, unsigned char*, unsigned long)>

4001d770 <spi_flash_cmd_wait_ready(unsigned long)>:
4001d770:	e3a03005 	mov	r3, #5
4001d774:	e92d4037 	push	{r0, r1, r2, r4, r5, lr}
4001d778:	e3a02000 	mov	r2, #0
4001d77c:	e5cd3006 	strb	r3, [sp, #6]
4001d780:	e3a03001 	mov	r3, #1
4001d784:	e28d1006 	add	r1, sp, #6
4001d788:	e1a05000 	mov	r5, r0
4001d78c:	e1a00003 	mov	r0, r3
4001d790:	eb0001aa 	bl	4001de40 <spi_xfer(unsigned long, unsigned char const*, unsigned char*, unsigned long)>
4001d794:	e3a00000 	mov	r0, #0
4001d798:	eb003ece 	bl	4002d2d8 <time>
4001d79c:	e1a04000 	mov	r4, r0
4001d7a0:	e3a03000 	mov	r3, #0
4001d7a4:	e28d2007 	add	r2, sp, #7
4001d7a8:	e1a01003 	mov	r1, r3
4001d7ac:	e3a00001 	mov	r0, #1
4001d7b0:	eb0001a2 	bl	4001de40 <spi_xfer(unsigned long, unsigned char const*, unsigned char*, unsigned long)>
4001d7b4:	e5dd3007 	ldrb	r3, [sp, #7]
4001d7b8:	e3130001 	tst	r3, #1
4001d7bc:	0a000005 	beq	4001d7d8 <spi_flash_cmd_wait_ready(unsigned long)+0x68>
4001d7c0:	e3540000 	cmp	r4, #0
4001d7c4:	1a00000d 	bne	4001d800 <spi_flash_cmd_wait_ready(unsigned long)+0x90>
4001d7c8:	e1a00004 	mov	r0, r4
4001d7cc:	eb003ec1 	bl	4002d2d8 <time>
4001d7d0:	e1550000 	cmp	r5, r0
4001d7d4:	8afffff1 	bhi	4001d7a0 <spi_flash_cmd_wait_ready(unsigned long)+0x30>
4001d7d8:	e3a02000 	mov	r2, #0
4001d7dc:	e3a03002 	mov	r3, #2
4001d7e0:	e1a00002 	mov	r0, r2
4001d7e4:	e1a01002 	mov	r1, r2
4001d7e8:	eb000194 	bl	4001de40 <spi_xfer(unsigned long, unsigned char const*, unsigned char*, unsigned long)>
4001d7ec:	e5dd0007 	ldrb	r0, [sp, #7]
4001d7f0:	e1e00000 	mvn	r0, r0
4001d7f4:	e2000001 	and	r0, r0, #1
4001d7f8:	e28dd00c 	add	sp, sp, #12
4001d7fc:	e8bd8030 	pop	{r4, r5, pc}
4001d800:	e3a00000 	mov	r0, #0
4001d804:	eb003eb3 	bl	4002d2d8 <time>
4001d808:	e0400004 	sub	r0, r0, r4
4001d80c:	eaffffef 	b	4001d7d0 <spi_flash_cmd_wait_ready(unsigned long)+0x60>

4001d810 <spi_flash_cmd_write_enable()>:
4001d810:	e92d401f 	push	{r0, r1, r2, r3, r4, lr}
4001d814:	e3a03006 	mov	r3, #6
4001d818:	e5cd300f 	strb	r3, [sp, #15]
4001d81c:	e3a03000 	mov	r3, #0
4001d820:	e58d3000 	str	r3, [sp]
4001d824:	e1a02003 	mov	r2, r3
4001d828:	e3a01001 	mov	r1, #1
4001d82c:	e28d000f 	add	r0, sp, #15
4001d830:	ebffffba 	bl	4001d720 <spi_flash_read_write(unsigned char const*, unsigned long, unsigned char const*, unsigned char*, unsigned long)>
4001d834:	e28dd014 	add	sp, sp, #20
4001d838:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

4001d83c <spi_flash_get_size()>:
4001d83c:	e59f3004 	ldr	r3, [pc, #4]	; 4001d848 <spi_flash_get_size()+0xc>
4001d840:	e5930004 	ldr	r0, [r3, #4]
4001d844:	e12fff1e 	bx	lr
4001d848:	400336d4 	ldrdmi	r3, [r3], -r4

4001d84c <spi_flash_get_name()>:
4001d84c:	e59f3004 	ldr	r3, [pc, #4]	; 4001d858 <spi_flash_get_name()+0xc>
4001d850:	e5930000 	ldr	r0, [r3]
4001d854:	e12fff1e 	bx	lr
4001d858:	400336d4 	ldrdmi	r3, [r3], -r4

4001d85c <spi_flash_cmd_write_multi(unsigned long, unsigned long, unsigned char const*)>:
4001d85c:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
4001d860:	e1a05000 	mov	r5, r0
4001d864:	e24dd014 	sub	sp, sp, #20
4001d868:	e3a0000a 	mov	r0, #10
4001d86c:	e1a08001 	mov	r8, r1
4001d870:	e1a09002 	mov	r9, r2
4001d874:	ebffffbd 	bl	4001d770 <spi_flash_cmd_wait_ready(unsigned long)>
4001d878:	e2507000 	subs	r7, r0, #0
4001d87c:	0a000022 	beq	4001d90c <spi_flash_cmd_write_multi(unsigned long, unsigned long, unsigned char const*)+0xb0>
4001d880:	e3a06000 	mov	r6, #0
4001d884:	e3a03002 	mov	r3, #2
4001d888:	e5cd300c 	strb	r3, [sp, #12]
4001d88c:	e1560008 	cmp	r6, r8
4001d890:	2a00001e 	bcs	4001d910 <spi_flash_cmd_write_multi(unsigned long, unsigned long, unsigned char const*)+0xb4>
4001d894:	e0483006 	sub	r3, r8, r6
4001d898:	e6ef4075 	uxtb	r4, r5
4001d89c:	e089a006 	add	sl, r9, r6
4001d8a0:	e2644c01 	rsb	r4, r4, #256	; 0x100
4001d8a4:	e1540003 	cmp	r4, r3
4001d8a8:	e5cd500f 	strb	r5, [sp, #15]
4001d8ac:	21a04003 	movcs	r4, r3
4001d8b0:	e1a03825 	lsr	r3, r5, #16
4001d8b4:	e35a0000 	cmp	sl, #0
4001d8b8:	e5cd300d 	strb	r3, [sp, #13]
4001d8bc:	03a0b005 	moveq	fp, #5
4001d8c0:	e1a03425 	lsr	r3, r5, #8
4001d8c4:	13a0b002 	movne	fp, #2
4001d8c8:	e5cd300e 	strb	r3, [sp, #14]
4001d8cc:	ebffffcf 	bl	4001d810 <spi_flash_cmd_write_enable()>
4001d8d0:	e0866004 	add	r6, r6, r4
4001d8d4:	e3a03000 	mov	r3, #0
4001d8d8:	e58d4000 	str	r4, [sp]
4001d8dc:	e1a0200a 	mov	r2, sl
4001d8e0:	e3a01004 	mov	r1, #4
4001d8e4:	e28d000c 	add	r0, sp, #12
4001d8e8:	ebffff8c 	bl	4001d720 <spi_flash_read_write(unsigned char const*, unsigned long, unsigned char const*, unsigned char*, unsigned long)>
4001d8ec:	e1560008 	cmp	r6, r8
4001d8f0:	1a000001 	bne	4001d8fc <spi_flash_cmd_write_multi(unsigned long, unsigned long, unsigned char const*)+0xa0>
4001d8f4:	e0855004 	add	r5, r5, r4
4001d8f8:	eaffffe3 	b	4001d88c <spi_flash_cmd_write_multi(unsigned long, unsigned long, unsigned char const*)+0x30>
4001d8fc:	e1a0000b 	mov	r0, fp
4001d900:	ebffff9a 	bl	4001d770 <spi_flash_cmd_wait_ready(unsigned long)>
4001d904:	e3500000 	cmp	r0, #0
4001d908:	1afffff9 	bne	4001d8f4 <spi_flash_cmd_write_multi(unsigned long, unsigned long, unsigned char const*)+0x98>
4001d90c:	e3a07000 	mov	r7, #0
4001d910:	e1a00007 	mov	r0, r7
4001d914:	e28dd014 	add	sp, sp, #20
4001d918:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

4001d91c <spi_flash_cmd_read_fast(unsigned long, unsigned long, unsigned char*)>:
4001d91c:	e92d41ff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
4001d920:	e1a04000 	mov	r4, r0
4001d924:	e3a00002 	mov	r0, #2
4001d928:	e1a06001 	mov	r6, r1
4001d92c:	e1a07002 	mov	r7, r2
4001d930:	ebffff8e 	bl	4001d770 <spi_flash_cmd_wait_ready(unsigned long)>
4001d934:	e2508000 	subs	r8, r0, #0
4001d938:	0a000017 	beq	4001d99c <spi_flash_cmd_read_fast(unsigned long, unsigned long, unsigned char*)+0x80>
4001d93c:	e3a0300b 	mov	r3, #11
4001d940:	e5cd3008 	strb	r3, [sp, #8]
4001d944:	e3a03000 	mov	r3, #0
4001d948:	e5cd300c 	strb	r3, [sp, #12]
4001d94c:	e3560000 	cmp	r6, #0
4001d950:	0a000011 	beq	4001d99c <spi_flash_cmd_read_fast(unsigned long, unsigned long, unsigned char*)+0x80>
4001d954:	e5cd400b 	strb	r4, [sp, #11]
4001d958:	e2645401 	rsb	r5, r4, #16777216	; 0x1000000
4001d95c:	e1550006 	cmp	r5, r6
4001d960:	e3a02000 	mov	r2, #0
4001d964:	e1a03824 	lsr	r3, r4, #16
4001d968:	21a05006 	movcs	r5, r6
4001d96c:	e5cd3009 	strb	r3, [sp, #9]
4001d970:	e3a01005 	mov	r1, #5
4001d974:	e1a03424 	lsr	r3, r4, #8
4001d978:	e28d0008 	add	r0, sp, #8
4001d97c:	e5cd300a 	strb	r3, [sp, #10]
4001d980:	e1a03007 	mov	r3, r7
4001d984:	e58d5000 	str	r5, [sp]
4001d988:	e0844005 	add	r4, r4, r5
4001d98c:	ebffff63 	bl	4001d720 <spi_flash_read_write(unsigned char const*, unsigned long, unsigned char const*, unsigned char*, unsigned long)>
4001d990:	e0466005 	sub	r6, r6, r5
4001d994:	e0877005 	add	r7, r7, r5
4001d998:	eaffffeb 	b	4001d94c <spi_flash_cmd_read_fast(unsigned long, unsigned long, unsigned char*)+0x30>
4001d99c:	e1a00008 	mov	r0, r8
4001d9a0:	e28dd010 	add	sp, sp, #16
4001d9a4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

4001d9a8 <spi_flash_cmd_erase(unsigned long, unsigned long)>:
4001d9a8:	e92d40f0 	push	{r4, r5, r6, r7, lr}
4001d9ac:	e24dd014 	sub	sp, sp, #20
4001d9b0:	e1807001 	orr	r7, r0, r1
4001d9b4:	e7eb7057 	ubfx	r7, r7, #0, #12
4001d9b8:	e3570000 	cmp	r7, #0
4001d9bc:	1a00001f 	bne	4001da40 <spi_flash_cmd_erase(unsigned long, unsigned long)+0x98>
4001d9c0:	e1a05000 	mov	r5, r0
4001d9c4:	e3a00002 	mov	r0, #2
4001d9c8:	e1a04001 	mov	r4, r1
4001d9cc:	ebffff67 	bl	4001d770 <spi_flash_cmd_wait_ready(unsigned long)>
4001d9d0:	e2506000 	subs	r6, r0, #0
4001d9d4:	0a000019 	beq	4001da40 <spi_flash_cmd_erase(unsigned long, unsigned long)+0x98>
4001d9d8:	e0855004 	add	r5, r5, r4
4001d9dc:	e3a03020 	mov	r3, #32
4001d9e0:	e5cd300c 	strb	r3, [sp, #12]
4001d9e4:	e0453004 	sub	r3, r5, r4
4001d9e8:	e3540000 	cmp	r4, #0
4001d9ec:	0a000014 	beq	4001da44 <spi_flash_cmd_erase(unsigned long, unsigned long)+0x9c>
4001d9f0:	e1a02823 	lsr	r2, r3, #16
4001d9f4:	e5cd200d 	strb	r2, [sp, #13]
4001d9f8:	e1a02423 	lsr	r2, r3, #8
4001d9fc:	e5cd200e 	strb	r2, [sp, #14]
4001da00:	e5cd300f 	strb	r3, [sp, #15]
4001da04:	ebffff81 	bl	4001d810 <spi_flash_cmd_write_enable()>
4001da08:	e58d7000 	str	r7, [sp]
4001da0c:	e3a03000 	mov	r3, #0
4001da10:	e1a02003 	mov	r2, r3
4001da14:	e3a01004 	mov	r1, #4
4001da18:	e28d000c 	add	r0, sp, #12
4001da1c:	ebffff3f 	bl	4001d720 <spi_flash_read_write(unsigned char const*, unsigned long, unsigned char const*, unsigned char*, unsigned long)>
4001da20:	e3540a01 	cmp	r4, #4096	; 0x1000
4001da24:	1a000001 	bne	4001da30 <spi_flash_cmd_erase(unsigned long, unsigned long)+0x88>
4001da28:	e2444a01 	sub	r4, r4, #4096	; 0x1000
4001da2c:	eaffffec 	b	4001d9e4 <spi_flash_cmd_erase(unsigned long, unsigned long)+0x3c>
4001da30:	e3a00005 	mov	r0, #5
4001da34:	ebffff4d 	bl	4001d770 <spi_flash_cmd_wait_ready(unsigned long)>
4001da38:	e3500000 	cmp	r0, #0
4001da3c:	1afffff9 	bne	4001da28 <spi_flash_cmd_erase(unsigned long, unsigned long)+0x80>
4001da40:	e3a06000 	mov	r6, #0
4001da44:	e1a00006 	mov	r0, r6
4001da48:	e28dd014 	add	sp, sp, #20
4001da4c:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}

4001da50 <spi_flash_cmd_write_status(unsigned char)>:
4001da50:	e92d4010 	push	{r4, lr}
4001da54:	e24dd018 	sub	sp, sp, #24
4001da58:	e3a04001 	mov	r4, #1
4001da5c:	e5cd000f 	strb	r0, [sp, #15]
4001da60:	e5cd4017 	strb	r4, [sp, #23]
4001da64:	ebffff69 	bl	4001d810 <spi_flash_cmd_write_enable()>
4001da68:	e58d4000 	str	r4, [sp]
4001da6c:	e28d0017 	add	r0, sp, #23
4001da70:	e3a03000 	mov	r3, #0
4001da74:	e28d200f 	add	r2, sp, #15
4001da78:	e1a01004 	mov	r1, r4
4001da7c:	ebffff27 	bl	4001d720 <spi_flash_read_write(unsigned char const*, unsigned long, unsigned char const*, unsigned char*, unsigned long)>
4001da80:	e1a00004 	mov	r0, r4
4001da84:	e28dd018 	add	sp, sp, #24
4001da88:	e8bd8010 	pop	{r4, pc}

4001da8c <spi_flash_probe()>:
4001da8c:	e92d4070 	push	{r4, r5, r6, lr}
4001da90:	e24dd018 	sub	sp, sp, #24
4001da94:	e59f4074 	ldr	r4, [pc, #116]	; 4001db10 <spi_flash_probe()+0x84>
4001da98:	eb0000a9 	bl	4001dd44 <spi_init()>
4001da9c:	e59f6070 	ldr	r6, [pc, #112]	; 4001db14 <spi_flash_probe()+0x88>
4001daa0:	e3e03060 	mvn	r3, #96	; 0x60
4001daa4:	e5cd300f 	strb	r3, [sp, #15]
4001daa8:	e3a03005 	mov	r3, #5
4001daac:	e58d3000 	str	r3, [sp]
4001dab0:	e3a02000 	mov	r2, #0
4001dab4:	e28d3010 	add	r3, sp, #16
4001dab8:	e3a01001 	mov	r1, #1
4001dabc:	e28d000f 	add	r0, sp, #15
4001dac0:	e3a05000 	mov	r5, #0
4001dac4:	ebffff15 	bl	4001d720 <spi_flash_read_write(unsigned char const*, unsigned long, unsigned char const*, unsigned char*, unsigned long)>
4001dac8:	e5d42000 	ldrb	r2, [r4]
4001dacc:	e5dd3010 	ldrb	r3, [sp, #16]
4001dad0:	e1520003 	cmp	r2, r3
4001dad4:	0a000005 	beq	4001daf0 <spi_flash_probe()+0x64>
4001dad8:	e2855001 	add	r5, r5, #1
4001dadc:	e2844008 	add	r4, r4, #8
4001dae0:	e3550003 	cmp	r5, #3
4001dae4:	1afffff7 	bne	4001dac8 <spi_flash_probe()+0x3c>
4001dae8:	e3a00000 	mov	r0, #0
4001daec:	ea000005 	b	4001db08 <spi_flash_probe()+0x7c>
4001daf0:	e5943004 	ldr	r3, [r4, #4]
4001daf4:	e28d1010 	add	r1, sp, #16
4001daf8:	e1a00006 	mov	r0, r6
4001dafc:	e12fff33 	blx	r3
4001db00:	e3500000 	cmp	r0, #0
4001db04:	0afffff3 	beq	4001dad8 <spi_flash_probe()+0x4c>
4001db08:	e28dd018 	add	sp, sp, #24
4001db0c:	e8bd8070 	pop	{r4, r5, r6, pc}
4001db10:	40032410 	andmi	r2, r3, r0, lsl r4
4001db14:	400336d4 	ldrdmi	r3, [r3], -r4

4001db18 <spi_flash_probe_winbond(SpiFlashInfo*, unsigned char*)>:
4001db18:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4001db1c:	e1d120b1 	ldrh	r2, [r1, #1]
4001db20:	e3a01000 	mov	r1, #0
4001db24:	e59f3048 	ldr	r3, [pc, #72]	; 4001db74 <spi_flash_probe_winbond(SpiFlashInfo*, unsigned char*)+0x5c>
4001db28:	e6bf2fb2 	rev16	r2, r2
4001db2c:	e6ff2072 	uxth	r2, r2
4001db30:	e1a0c181 	lsl	ip, r1, #3
4001db34:	e19ce0b3 	ldrh	lr, [ip, r3]
4001db38:	e15e0002 	cmp	lr, r2
4001db3c:	0a000004 	beq	4001db54 <spi_flash_probe_winbond(SpiFlashInfo*, unsigned char*)+0x3c>
4001db40:	e2811001 	add	r1, r1, #1
4001db44:	e351000c 	cmp	r1, #12
4001db48:	1afffff8 	bne	4001db30 <spi_flash_probe_winbond(SpiFlashInfo*, unsigned char*)+0x18>
4001db4c:	e3a00000 	mov	r0, #0
4001db50:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4001db54:	e083300c 	add	r3, r3, ip
4001db58:	e5932004 	ldr	r2, [r3, #4]
4001db5c:	e1d330b2 	ldrh	r3, [r3, #2]
4001db60:	e5802000 	str	r2, [r0]
4001db64:	e1a03803 	lsl	r3, r3, #16
4001db68:	e5803004 	str	r3, [r0, #4]
4001db6c:	e3a00001 	mov	r0, #1
4001db70:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4001db74:	4003248c 	andmi	r2, r3, ip, lsl #9

4001db78 <_clear_fifos()>:
4001db78:	e59f3020 	ldr	r3, [pc, #32]	; 4001dba0 <_clear_fifos()+0x28>
4001db7c:	e59f2020 	ldr	r2, [pc, #32]	; 4001dba4 <_clear_fifos()+0x2c>
4001db80:	e5823018 	str	r3, [r2, #24]
4001db84:	e3a03ffa 	mov	r3, #1000	; 0x3e8
4001db88:	e5921018 	ldr	r1, [r2, #24]
4001db8c:	e3510000 	cmp	r1, #0
4001db90:	012fff1e 	bxeq	lr
4001db94:	e2533001 	subs	r3, r3, #1
4001db98:	1afffffa 	bne	4001db88 <_clear_fifos()+0x10>
4001db9c:	e12fff1e 	bx	lr
4001dba0:	80008000 	andhi	r8, r0, r0
4001dba4:	01c68000 	biceq	r8, r6, r0

4001dba8 <_read_rxfifo()>:
4001dba8:	e59f1054 	ldr	r1, [pc, #84]	; 4001dc04 <_read_rxfifo()+0x5c>
4001dbac:	e92d4030 	push	{r4, r5, lr}
4001dbb0:	e5913008 	ldr	r3, [r1, #8]
4001dbb4:	e591e018 	ldr	lr, [r1, #24]
4001dbb8:	e153000e 	cmp	r3, lr
4001dbbc:	08bd8030 	popeq	{r4, r5, pc}
4001dbc0:	e59f4040 	ldr	r4, [pc, #64]	; 4001dc08 <_read_rxfifo()+0x60>
4001dbc4:	e3a0c000 	mov	ip, #0
4001dbc8:	e5915004 	ldr	r5, [r1, #4]
4001dbcc:	e594201c 	ldr	r2, [r4, #28]
4001dbd0:	e6ef2072 	uxtb	r2, r2
4001dbd4:	e2522001 	subs	r2, r2, #1
4001dbd8:	3a000006 	bcc	4001dbf8 <_read_rxfifo()+0x50>
4001dbdc:	e5d40300 	ldrb	r0, [r4, #768]	; 0x300
4001dbe0:	e15e0003 	cmp	lr, r3
4001dbe4:	e6ef0070 	uxtb	r0, r0
4001dbe8:	83a0c001 	movhi	ip, #1
4001dbec:	87c50003 	strbhi	r0, [r5, r3]
4001dbf0:	82833001 	addhi	r3, r3, #1
4001dbf4:	eafffff6 	b	4001dbd4 <_read_rxfifo()+0x2c>
4001dbf8:	e35c0000 	cmp	ip, #0
4001dbfc:	15813008 	strne	r3, [r1, #8]
4001dc00:	e8bd8030 	pop	{r4, r5, pc}
4001dc04:	4005a038 	andmi	sl, r5, r8, lsr r0
4001dc08:	01c68000 	biceq	r8, r6, r0

4001dc0c <_write_txfifo()>:
4001dc0c:	e59f2064 	ldr	r2, [pc, #100]	; 4001dc78 <_write_txfifo()+0x6c>
4001dc10:	e5923010 	ldr	r3, [r2, #16]
4001dc14:	e592c014 	ldr	ip, [r2, #20]
4001dc18:	e153000c 	cmp	r3, ip
4001dc1c:	012fff1e 	bxeq	lr
4001dc20:	e92d4010 	push	{r4, lr}
4001dc24:	e2831040 	add	r1, r3, #64	; 0x40
4001dc28:	e59f404c 	ldr	r4, [pc, #76]	; 4001dc7c <_write_txfifo()+0x70>
4001dc2c:	e592000c 	ldr	r0, [r2, #12]
4001dc30:	e594e01c 	ldr	lr, [r4, #28]
4001dc34:	e0800003 	add	r0, r0, r3
4001dc38:	e7e7e85e 	ubfx	lr, lr, #16, #8
4001dc3c:	e041100e 	sub	r1, r1, lr
4001dc40:	e3a0e000 	mov	lr, #0
4001dc44:	e1530001 	cmp	r3, r1
4001dc48:	1a000002 	bne	4001dc58 <_write_txfifo()+0x4c>
4001dc4c:	e35e0000 	cmp	lr, #0
4001dc50:	15823010 	strne	r3, [r2, #16]
4001dc54:	e8bd8010 	pop	{r4, pc}
4001dc58:	e4d0e001 	ldrb	lr, [r0], #1
4001dc5c:	e2833001 	add	r3, r3, #1
4001dc60:	e15c0003 	cmp	ip, r3
4001dc64:	e5c4e200 	strb	lr, [r4, #512]	; 0x200
4001dc68:	e3a0e001 	mov	lr, #1
4001dc6c:	1afffff4 	bne	4001dc44 <_write_txfifo()+0x38>
4001dc70:	e582c010 	str	ip, [r2, #16]
4001dc74:	e8bd8010 	pop	{r4, pc}
4001dc78:	4005a038 	andmi	sl, r5, r8, lsr r0
4001dc7c:	01c68000 	biceq	r8, r6, r0

4001dc80 <spi0_transfernb(char*, char*, unsigned long)>:
4001dc80:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001dc84:	e3a07000 	mov	r7, #0
4001dc88:	e59f40ac 	ldr	r4, [pc, #172]	; 4001dd3c <spi0_transfernb(char*, char*, unsigned long)+0xbc>
4001dc8c:	e1a06002 	mov	r6, r2
4001dc90:	e59f50a8 	ldr	r5, [pc, #168]	; 4001dd40 <spi0_transfernb(char*, char*, unsigned long)+0xc0>
4001dc94:	e3018004 	movw	r8, #4100	; 0x1004
4001dc98:	e5852014 	str	r2, [r5, #20]
4001dc9c:	e5852018 	str	r2, [r5, #24]
4001dca0:	e5857008 	str	r7, [r5, #8]
4001dca4:	e5857010 	str	r7, [r5, #16]
4001dca8:	e5943004 	ldr	r3, [r4, #4]
4001dcac:	e5851004 	str	r1, [r5, #4]
4001dcb0:	e585000c 	str	r0, [r5, #12]
4001dcb4:	e3833080 	orr	r3, r3, #128	; 0x80
4001dcb8:	e5843004 	str	r3, [r4, #4]
4001dcbc:	ebffffad 	bl	4001db78 <_clear_fifos()>
4001dcc0:	e5846030 	str	r6, [r4, #48]	; 0x30
4001dcc4:	e5846034 	str	r6, [r4, #52]	; 0x34
4001dcc8:	e5846038 	str	r6, [r4, #56]	; 0x38
4001dccc:	ebffffce 	bl	4001dc0c <_write_txfifo()>
4001dcd0:	e5943008 	ldr	r3, [r4, #8]
4001dcd4:	e3833102 	orr	r3, r3, #-2147483648	; 0x80000000
4001dcd8:	e5843008 	str	r3, [r4, #8]
4001dcdc:	e3013024 	movw	r3, #4132	; 0x1024
4001dce0:	e5843010 	str	r3, [r4, #16]
4001dce4:	e3a03001 	mov	r3, #1
4001dce8:	e5c53000 	strb	r3, [r5]
4001dcec:	e5946014 	ldr	r6, [r4, #20]
4001dcf0:	e3160004 	tst	r6, #4
4001dcf4:	0a000000 	beq	4001dcfc <spi0_transfernb(char*, char*, unsigned long)+0x7c>
4001dcf8:	ebffffaa 	bl	4001dba8 <_read_rxfifo()>
4001dcfc:	e3160020 	tst	r6, #32
4001dd00:	0a000003 	beq	4001dd14 <spi0_transfernb(char*, char*, unsigned long)+0x94>
4001dd04:	ebffffc0 	bl	4001dc0c <_write_txfifo()>
4001dd08:	e1c521d0 	ldrd	r2, [r5, #16]
4001dd0c:	e1520003 	cmp	r2, r3
4001dd10:	05848010 	streq	r8, [r4, #16]
4001dd14:	e3160a01 	tst	r6, #4096	; 0x1000
4001dd18:	0a000002 	beq	4001dd28 <spi0_transfernb(char*, char*, unsigned long)+0xa8>
4001dd1c:	ebffffa1 	bl	4001dba8 <_read_rxfifo()>
4001dd20:	e5847010 	str	r7, [r4, #16]
4001dd24:	e5c57000 	strb	r7, [r5]
4001dd28:	e5d53000 	ldrb	r3, [r5]
4001dd2c:	e5846014 	str	r6, [r4, #20]
4001dd30:	e3530000 	cmp	r3, #0
4001dd34:	1affffec 	bne	4001dcec <spi0_transfernb(char*, char*, unsigned long)+0x6c>
4001dd38:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001dd3c:	01c68000 	biceq	r8, r6, r0
4001dd40:	4005a038 	andmi	sl, r5, r8, lsr r0

4001dd44 <spi_init()>:
4001dd44:	e92d4010 	push	{r4, lr}
4001dd48:	e3a01003 	mov	r1, #3
4001dd4c:	e59f40e0 	ldr	r4, [pc, #224]	; 4001de34 <spi_init()+0xf0>
4001dd50:	e3a00043 	mov	r0, #67	; 0x43
4001dd54:	eb002d88 	bl	4002937c <h3_gpio_fsel>
4001dd58:	e3a01003 	mov	r1, #3
4001dd5c:	e3a00042 	mov	r0, #66	; 0x42
4001dd60:	eb002d85 	bl	4002937c <h3_gpio_fsel>
4001dd64:	e3a01003 	mov	r1, #3
4001dd68:	e3a00041 	mov	r0, #65	; 0x41
4001dd6c:	eb002d82 	bl	4002937c <h3_gpio_fsel>
4001dd70:	e3a01003 	mov	r1, #3
4001dd74:	e3a00040 	mov	r0, #64	; 0x40
4001dd78:	eb002d7f 	bl	4002937c <h3_gpio_fsel>
4001dd7c:	e59432c0 	ldr	r3, [r4, #704]	; 0x2c0
4001dd80:	e3a01000 	mov	r1, #0
4001dd84:	e3a00ffa 	mov	r0, #1000	; 0x3e8
4001dd88:	e3833601 	orr	r3, r3, #1048576	; 0x100000
4001dd8c:	e58432c0 	str	r3, [r4, #704]	; 0x2c0
4001dd90:	eb003799 	bl	4002bbfc <udelay(unsigned long, unsigned long)>
4001dd94:	e5943060 	ldr	r3, [r4, #96]	; 0x60
4001dd98:	e3a01000 	mov	r1, #0
4001dd9c:	e3a00ffa 	mov	r0, #1000	; 0x3e8
4001dda0:	e3c33601 	bic	r3, r3, #1048576	; 0x100000
4001dda4:	e5843060 	str	r3, [r4, #96]	; 0x60
4001dda8:	eb003793 	bl	4002bbfc <udelay(unsigned long, unsigned long)>
4001ddac:	e5943060 	ldr	r3, [r4, #96]	; 0x60
4001ddb0:	e3a01001 	mov	r1, #1
4001ddb4:	e3a00043 	mov	r0, #67	; 0x43
4001ddb8:	e3833601 	orr	r3, r3, #1048576	; 0x100000
4001ddbc:	e5843060 	str	r3, [r4, #96]	; 0x60
4001ddc0:	e3a03481 	mov	r3, #-2130706432	; 0x81000000
4001ddc4:	e58430a0 	str	r3, [r4, #160]	; 0xa0
4001ddc8:	e59f3068 	ldr	r3, [pc, #104]	; 4001de38 <spi_init()+0xf4>
4001ddcc:	e5932004 	ldr	r2, [r3, #4]
4001ddd0:	e3822102 	orr	r2, r2, #-2147483648	; 0x80000000
4001ddd4:	e5832004 	str	r2, [r3, #4]
4001ddd8:	e5932004 	ldr	r2, [r3, #4]
4001dddc:	e3822003 	orr	r2, r2, #3
4001dde0:	e5832004 	str	r2, [r3, #4]
4001dde4:	e3a02000 	mov	r2, #0
4001dde8:	e5832010 	str	r2, [r3, #16]
4001ddec:	e5932008 	ldr	r2, [r3, #8]
4001ddf0:	e3822040 	orr	r2, r2, #64	; 0x40
4001ddf4:	e5832008 	str	r2, [r3, #8]
4001ddf8:	e5932008 	ldr	r2, [r3, #8]
4001ddfc:	e3c22003 	bic	r2, r2, #3
4001de00:	e5832008 	str	r2, [r3, #8]
4001de04:	e5932024 	ldr	r2, [r3, #36]	; 0x24
4001de08:	e3c22d43 	bic	r2, r2, #4288	; 0x10c0
4001de0c:	e3c2203f 	bic	r2, r2, #63	; 0x3f
4001de10:	e3822a01 	orr	r2, r2, #4096	; 0x1000
4001de14:	e3822031 	orr	r2, r2, #49	; 0x31
4001de18:	e5832024 	str	r2, [r3, #36]	; 0x24
4001de1c:	eb002d56 	bl	4002937c <h3_gpio_fsel>
4001de20:	e59f2014 	ldr	r2, [pc, #20]	; 4001de3c <spi_init()+0xf8>
4001de24:	e5923058 	ldr	r3, [r2, #88]	; 0x58
4001de28:	e3833008 	orr	r3, r3, #8
4001de2c:	e5823058 	str	r3, [r2, #88]	; 0x58
4001de30:	e8bd8010 	pop	{r4, pc}
4001de34:	01c20000 	biceq	r0, r2, r0
4001de38:	01c68000 	biceq	r8, r6, r0
4001de3c:	01c20800 	biceq	r0, r2, r0, lsl #16

4001de40 <spi_xfer(unsigned long, unsigned char const*, unsigned char*, unsigned long)>:
4001de40:	e3130001 	tst	r3, #1
4001de44:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001de48:	e1a06002 	mov	r6, r2
4001de4c:	159f2138 	ldrne	r2, [pc, #312]	; 4001df8c <spi_xfer(unsigned long, unsigned char const*, unsigned char*, unsigned long)+0x14c>
4001de50:	e1a05003 	mov	r5, r3
4001de54:	e1a04000 	mov	r4, r0
4001de58:	e1a00001 	mov	r0, r1
4001de5c:	15923058 	ldrne	r3, [r2, #88]	; 0x58
4001de60:	13c33008 	bicne	r3, r3, #8
4001de64:	15823058 	strne	r3, [r2, #88]	; 0x58
4001de68:	e3540000 	cmp	r4, #0
4001de6c:	0a00003a 	beq	4001df5c <spi_xfer(unsigned long, unsigned char const*, unsigned char*, unsigned long)+0x11c>
4001de70:	e3560000 	cmp	r6, #0
4001de74:	1a00003e 	bne	4001df74 <spi_xfer(unsigned long, unsigned char const*, unsigned char*, unsigned long)+0x134>
4001de78:	e59f7110 	ldr	r7, [pc, #272]	; 4001df90 <spi_xfer(unsigned long, unsigned char const*, unsigned char*, unsigned long)+0x150>
4001de7c:	e5973004 	ldr	r3, [r7, #4]
4001de80:	e3c33080 	bic	r3, r3, #128	; 0x80
4001de84:	e5873004 	str	r3, [r7, #4]
4001de88:	ebffff3a 	bl	4001db78 <_clear_fifos()>
4001de8c:	e5874030 	str	r4, [r7, #48]	; 0x30
4001de90:	e1a01006 	mov	r1, r6
4001de94:	e5874034 	str	r4, [r7, #52]	; 0x34
4001de98:	e5874038 	str	r4, [r7, #56]	; 0x38
4001de9c:	e597c01c 	ldr	ip, [r7, #28]
4001dea0:	e7e7c85c 	ubfx	ip, ip, #16, #8
4001dea4:	e26cc040 	rsb	ip, ip, #64	; 0x40
4001dea8:	e15c0001 	cmp	ip, r1
4001deac:	0a000005 	beq	4001dec8 <spi_xfer(unsigned long, unsigned char const*, unsigned char*, unsigned long)+0x88>
4001deb0:	e7d03001 	ldrb	r3, [r0, r1]
4001deb4:	e2811001 	add	r1, r1, #1
4001deb8:	e1540001 	cmp	r4, r1
4001debc:	e5c73200 	strb	r3, [r7, #512]	; 0x200
4001dec0:	1afffff8 	bne	4001dea8 <spi_xfer(unsigned long, unsigned char const*, unsigned char*, unsigned long)+0x68>
4001dec4:	e1a0c004 	mov	ip, r4
4001dec8:	e5973008 	ldr	r3, [r7, #8]
4001decc:	e59f20bc 	ldr	r2, [pc, #188]	; 4001df90 <spi_xfer(unsigned long, unsigned char const*, unsigned char*, unsigned long)+0x150>
4001ded0:	e3833102 	orr	r3, r3, #-2147483648	; 0x80000000
4001ded4:	e5873008 	str	r3, [r7, #8]
4001ded8:	e3013020 	movw	r3, #4128	; 0x1020
4001dedc:	e5873010 	str	r3, [r7, #16]
4001dee0:	e5923014 	ldr	r3, [r2, #20]
4001dee4:	e3130020 	tst	r3, #32
4001dee8:	0afffffc 	beq	4001dee0 <spi_xfer(unsigned long, unsigned char const*, unsigned char*, unsigned long)+0xa0>
4001deec:	e3a03020 	mov	r3, #32
4001def0:	e5823014 	str	r3, [r2, #20]
4001def4:	e59f2094 	ldr	r2, [pc, #148]	; 4001df90 <spi_xfer(unsigned long, unsigned char const*, unsigned char*, unsigned long)+0x150>
4001def8:	e154000c 	cmp	r4, ip
4001defc:	9a00000f 	bls	4001df40 <spi_xfer(unsigned long, unsigned char const*, unsigned char*, unsigned long)+0x100>
4001df00:	e592e01c 	ldr	lr, [r2, #28]
4001df04:	e7e7e85e 	ubfx	lr, lr, #16, #8
4001df08:	e26ee040 	rsb	lr, lr, #64	; 0x40
4001df0c:	e08ee00c 	add	lr, lr, ip
4001df10:	e15c000e 	cmp	ip, lr
4001df14:	0a000004 	beq	4001df2c <spi_xfer(unsigned long, unsigned char const*, unsigned char*, unsigned long)+0xec>
4001df18:	e7d0100c 	ldrb	r1, [r0, ip]
4001df1c:	e28cc001 	add	ip, ip, #1
4001df20:	e154000c 	cmp	r4, ip
4001df24:	e5c21200 	strb	r1, [r2, #512]	; 0x200
4001df28:	1afffff8 	bne	4001df10 <spi_xfer(unsigned long, unsigned char const*, unsigned char*, unsigned long)+0xd0>
4001df2c:	e5921014 	ldr	r1, [r2, #20]
4001df30:	e3110020 	tst	r1, #32
4001df34:	0afffffc 	beq	4001df2c <spi_xfer(unsigned long, unsigned char const*, unsigned char*, unsigned long)+0xec>
4001df38:	e5823014 	str	r3, [r2, #20]
4001df3c:	eaffffed 	b	4001def8 <spi_xfer(unsigned long, unsigned char const*, unsigned char*, unsigned long)+0xb8>
4001df40:	e5923014 	ldr	r3, [r2, #20]
4001df44:	e3130a01 	tst	r3, #4096	; 0x1000
4001df48:	0afffffc 	beq	4001df40 <spi_xfer(unsigned long, unsigned char const*, unsigned char*, unsigned long)+0x100>
4001df4c:	e5923014 	ldr	r3, [r2, #20]
4001df50:	e5823014 	str	r3, [r2, #20]
4001df54:	e3a03000 	mov	r3, #0
4001df58:	e5823010 	str	r3, [r2, #16]
4001df5c:	e3150002 	tst	r5, #2
4001df60:	159f2024 	ldrne	r2, [pc, #36]	; 4001df8c <spi_xfer(unsigned long, unsigned char const*, unsigned char*, unsigned long)+0x14c>
4001df64:	15923058 	ldrne	r3, [r2, #88]	; 0x58
4001df68:	13833008 	orrne	r3, r3, #8
4001df6c:	15823058 	strne	r3, [r2, #88]	; 0x58
4001df70:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001df74:	e3500000 	cmp	r0, #0
4001df78:	e1a02004 	mov	r2, r4
4001df7c:	e1a01006 	mov	r1, r6
4001df80:	01a00006 	moveq	r0, r6
4001df84:	ebffff3d 	bl	4001dc80 <spi0_transfernb(char*, char*, unsigned long)>
4001df88:	eafffff3 	b	4001df5c <spi_xfer(unsigned long, unsigned char const*, unsigned char*, unsigned long)+0x11c>
4001df8c:	01c20800 	biceq	r0, r2, r0, lsl #16
4001df90:	01c68000 	biceq	r8, r6, r0

4001df94 <spi_flash_probe_gigadevice(SpiFlashInfo*, unsigned char*)>:
4001df94:	e1d130b1 	ldrh	r3, [r1, #1]
4001df98:	e3062016 	movw	r2, #24598	; 0x6016
4001df9c:	e6bf3fb3 	rev16	r3, r3
4001dfa0:	e6ff3073 	uxth	r3, r3
4001dfa4:	e1530002 	cmp	r3, r2
4001dfa8:	0a000007 	beq	4001dfcc <spi_flash_probe_gigadevice(SpiFlashInfo*, unsigned char*)+0x38>
4001dfac:	e3042015 	movw	r2, #16405	; 0x4015
4001dfb0:	e1530002 	cmp	r3, r2
4001dfb4:	0a00000e 	beq	4001dff4 <spi_flash_probe_gigadevice(SpiFlashInfo*, unsigned char*)+0x60>
4001dfb8:	e3042017 	movw	r2, #16407	; 0x4017
4001dfbc:	e1530002 	cmp	r3, r2
4001dfc0:	0a00000d 	beq	4001dffc <spi_flash_probe_gigadevice(SpiFlashInfo*, unsigned char*)+0x68>
4001dfc4:	e3a00000 	mov	r0, #0
4001dfc8:	e12fff1e 	bx	lr
4001dfcc:	e3a02000 	mov	r2, #0
4001dfd0:	e59f302c 	ldr	r3, [pc, #44]	; 4001e004 <spi_flash_probe_gigadevice(SpiFlashInfo*, unsigned char*)+0x70>
4001dfd4:	e0833182 	add	r3, r3, r2, lsl #3
4001dfd8:	e5932004 	ldr	r2, [r3, #4]
4001dfdc:	e1d330b2 	ldrh	r3, [r3, #2]
4001dfe0:	e5802000 	str	r2, [r0]
4001dfe4:	e1a03803 	lsl	r3, r3, #16
4001dfe8:	e5803004 	str	r3, [r0, #4]
4001dfec:	e3a00001 	mov	r0, #1
4001dff0:	e12fff1e 	bx	lr
4001dff4:	e3a02001 	mov	r2, #1
4001dff8:	eafffff4 	b	4001dfd0 <spi_flash_probe_gigadevice(SpiFlashInfo*, unsigned char*)+0x3c>
4001dffc:	e3a02002 	mov	r2, #2
4001e000:	eafffff2 	b	4001dfd0 <spi_flash_probe_gigadevice(SpiFlashInfo*, unsigned char*)+0x3c>
4001e004:	40032504 	andmi	r2, r3, r4, lsl #10

4001e008 <spi_flash_probe_macronix(SpiFlashInfo*, unsigned char*)>:
4001e008:	e92d4010 	push	{r4, lr}
4001e00c:	e1d120b1 	ldrh	r2, [r1, #1]
4001e010:	e3a01000 	mov	r1, #0
4001e014:	e59f3050 	ldr	r3, [pc, #80]	; 4001e06c <spi_flash_probe_macronix(SpiFlashInfo*, unsigned char*)+0x64>
4001e018:	e6bf2fb2 	rev16	r2, r2
4001e01c:	e6ff2072 	uxth	r2, r2
4001e020:	e1a0c181 	lsl	ip, r1, #3
4001e024:	e19ce0b3 	ldrh	lr, [ip, r3]
4001e028:	e15e0002 	cmp	lr, r2
4001e02c:	0a000004 	beq	4001e044 <spi_flash_probe_macronix(SpiFlashInfo*, unsigned char*)+0x3c>
4001e030:	e2811001 	add	r1, r1, #1
4001e034:	e3510007 	cmp	r1, #7
4001e038:	1afffff8 	bne	4001e020 <spi_flash_probe_macronix(SpiFlashInfo*, unsigned char*)+0x18>
4001e03c:	e3a00000 	mov	r0, #0
4001e040:	e8bd8010 	pop	{r4, pc}
4001e044:	e083300c 	add	r3, r3, ip
4001e048:	e5932004 	ldr	r2, [r3, #4]
4001e04c:	e1d330b2 	ldrh	r3, [r3, #2]
4001e050:	e5802000 	str	r2, [r0]
4001e054:	e1a03803 	lsl	r3, r3, #16
4001e058:	e5803004 	str	r3, [r0, #4]
4001e05c:	e3a00000 	mov	r0, #0
4001e060:	ebfffe7a 	bl	4001da50 <spi_flash_cmd_write_status(unsigned char)>
4001e064:	e3a00001 	mov	r0, #1
4001e068:	e8bd8010 	pop	{r4, pc}
4001e06c:	4003256c 	andmi	r2, r3, ip, ror #10

4001e070 <memcpy.isra.0>:
4001e070:	e0812002 	add	r2, r1, r2
4001e074:	e1510002 	cmp	r1, r2
4001e078:	012fff1e 	bxeq	lr
4001e07c:	e4d13001 	ldrb	r3, [r1], #1
4001e080:	e4c03001 	strb	r3, [r0], #1
4001e084:	eafffffa 	b	4001e074 <memcpy.isra.0+0x4>

4001e088 <mdns_sendto(unsigned long)>:
4001e088:	e59f3064 	ldr	r3, [pc, #100]	; 4001e0f4 <mdns_sendto(unsigned long)+0x6c>
4001e08c:	e92d4007 	push	{r0, r1, r2, lr}
4001e090:	e1a02000 	mov	r2, r0
4001e094:	e5930000 	ldr	r0, [r3]
4001e098:	e59f3058 	ldr	r3, [pc, #88]	; 4001e0f8 <mdns_sendto(unsigned long)+0x70>
4001e09c:	e5931000 	ldr	r1, [r3]
4001e0a0:	e59f3054 	ldr	r3, [pc, #84]	; 4001e0fc <mdns_sendto(unsigned long)+0x74>
4001e0a4:	e5d33000 	ldrb	r3, [r3]
4001e0a8:	e3530000 	cmp	r3, #0
4001e0ac:	1a000008 	bne	4001e0d4 <mdns_sendto(unsigned long)+0x4c>
4001e0b0:	e3510000 	cmp	r1, #0
4001e0b4:	0a000004 	beq	4001e0cc <mdns_sendto(unsigned long)+0x44>
4001e0b8:	e30134e9 	movw	r3, #5353	; 0x14e9
4001e0bc:	e58d3000 	str	r3, [sp]
4001e0c0:	e59f3038 	ldr	r3, [pc, #56]	; 4001e100 <mdns_sendto(unsigned long)+0x78>
4001e0c4:	e59f1038 	ldr	r1, [pc, #56]	; 4001e104 <mdns_sendto(unsigned long)+0x7c>
4001e0c8:	eb0010aa 	bl	40022378 <net::udp_send(long, unsigned char const*, unsigned long, unsigned long, unsigned short)>
4001e0cc:	e28dd00c 	add	sp, sp, #12
4001e0d0:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4001e0d4:	e59f302c 	ldr	r3, [pc, #44]	; 4001e108 <mdns_sendto(unsigned long)+0x80>
4001e0d8:	e3510000 	cmp	r1, #0
4001e0dc:	e59fc028 	ldr	ip, [pc, #40]	; 4001e10c <mdns_sendto(unsigned long)+0x84>
4001e0e0:	e5933000 	ldr	r3, [r3]
4001e0e4:	e1dcc0b0 	ldrh	ip, [ip]
4001e0e8:	0afffff7 	beq	4001e0cc <mdns_sendto(unsigned long)+0x44>
4001e0ec:	e58dc000 	str	ip, [sp]
4001e0f0:	eafffff3 	b	4001e0c4 <mdns_sendto(unsigned long)+0x3c>
4001e0f4:	4005a2e8 	andmi	sl, r5, r8, ror #5
4001e0f8:	4005a73c 	andmi	sl, r5, ip, lsr r7
4001e0fc:	4005a054 	andmi	sl, r5, r4, asr r0
4001e100:	fb0000e0 	blx	4001e48a <mdns::operator==(mdns::Domain const&, mdns::Domain const&)+0xb2>
4001e104:	4005a05c 	andmi	sl, r5, ip, asr r0
4001e108:	4005a2ec 	andmi	sl, r5, ip, ror #5
4001e10c:	4005a2f0 	strdmi	sl, [r5], -r0

4001e110 <strlen>:
4001e110:	e1a03000 	mov	r3, r0
4001e114:	e1a02003 	mov	r2, r3
4001e118:	e2833001 	add	r3, r3, #1
4001e11c:	e5d21000 	ldrb	r1, [r2]
4001e120:	e3510000 	cmp	r1, #0
4001e124:	1afffffa 	bne	4001e114 <strlen+0x4>
4001e128:	e0420000 	sub	r0, r2, r0
4001e12c:	e12fff1e 	bx	lr

4001e130 <mdns::Domain::AddLabel(char const*, unsigned int)>:
4001e130:	e92d4070 	push	{r4, r5, r6, lr}
4001e134:	e2804c01 	add	r4, r0, #256	; 0x100
4001e138:	e1a05002 	mov	r5, r2
4001e13c:	e1d430b0 	ldrh	r3, [r4]
4001e140:	e7c02003 	strb	r2, [r0, r3]
4001e144:	e2833001 	add	r3, r3, #1
4001e148:	e6ff3073 	uxth	r3, r3
4001e14c:	e0800003 	add	r0, r0, r3
4001e150:	e1c430b0 	strh	r3, [r4]
4001e154:	ebffffc5 	bl	4001e070 <memcpy.isra.0>
4001e158:	e1d420b0 	ldrh	r2, [r4]
4001e15c:	e0825005 	add	r5, r2, r5
4001e160:	e1c450b0 	strh	r5, [r4]
4001e164:	e8bd8070 	pop	{r4, r5, r6, pc}

4001e168 <create_reverse_domain(mdns::Domain&)>:
4001e168:	e92d41f3 	push	{r0, r1, r4, r5, r6, r7, r8, lr}
4001e16c:	e2804c01 	add	r4, r0, #256	; 0x100
4001e170:	e3a03000 	mov	r3, #0
4001e174:	e1a08000 	mov	r8, r0
4001e178:	e1c430b0 	strh	r3, [r4]
4001e17c:	e3a05003 	mov	r5, #3
4001e180:	e59f30a4 	ldr	r3, [pc, #164]	; 4001e22c <create_reverse_domain(mdns::Domain&)+0xc4>
4001e184:	e28d7004 	add	r7, sp, #4
4001e188:	e3a0600a 	mov	r6, #10
4001e18c:	e5933000 	ldr	r3, [r3]
4001e190:	e58d3004 	str	r3, [sp, #4]
4001e194:	e7d53007 	ldrb	r3, [r5, r7]
4001e198:	e3530063 	cmp	r3, #99	; 0x63
4001e19c:	83a01064 	movhi	r1, #100	; 0x64
4001e1a0:	93a02001 	movls	r2, #1
4001e1a4:	8732f113 	udivhi	r2, r3, r1
4001e1a8:	80633291 	mlshi	r3, r1, r2, r3
4001e1ac:	82820030 	addhi	r0, r2, #48	; 0x30
4001e1b0:	83a02003 	movhi	r2, #3
4001e1b4:	85cd0000 	strbhi	r0, [sp]
4001e1b8:	86ef3073 	uxtbhi	r3, r3
4001e1bc:	e3530009 	cmp	r3, #9
4001e1c0:	e731f613 	udiv	r1, r3, r6
4001e1c4:	9a000001 	bls	4001e1d0 <create_reverse_domain(mdns::Domain&)+0x68>
4001e1c8:	e3520002 	cmp	r2, #2
4001e1cc:	33a02002 	movcc	r2, #2
4001e1d0:	e2811030 	add	r1, r1, #48	; 0x30
4001e1d4:	e1a00008 	mov	r0, r8
4001e1d8:	e5cd1001 	strb	r1, [sp, #1]
4001e1dc:	e731f613 	udiv	r1, r3, r6
4001e1e0:	e0633196 	mls	r3, r6, r1, r3
4001e1e4:	e2833030 	add	r3, r3, #48	; 0x30
4001e1e8:	e5cd3002 	strb	r3, [sp, #2]
4001e1ec:	e28d3008 	add	r3, sp, #8
4001e1f0:	e0431002 	sub	r1, r3, r2
4001e1f4:	e2411005 	sub	r1, r1, #5
4001e1f8:	ebffffcc 	bl	4001e130 <mdns::Domain::AddLabel(char const*, unsigned int)>
4001e1fc:	e2555001 	subs	r5, r5, #1
4001e200:	2affffe3 	bcs	4001e194 <create_reverse_domain(mdns::Domain&)+0x2c>
4001e204:	e1d400b0 	ldrh	r0, [r4]
4001e208:	e3a0200e 	mov	r2, #14
4001e20c:	e59f101c 	ldr	r1, [pc, #28]	; 4001e230 <create_reverse_domain(mdns::Domain&)+0xc8>
4001e210:	e0880000 	add	r0, r8, r0
4001e214:	ebffff95 	bl	4001e070 <memcpy.isra.0>
4001e218:	e1d430b0 	ldrh	r3, [r4]
4001e21c:	e283300e 	add	r3, r3, #14
4001e220:	e1c430b0 	strh	r3, [r4]
4001e224:	e28dd008 	add	sp, sp, #8
4001e228:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001e22c:	4005a73c 	andmi	sl, r5, ip, lsr r7
4001e230:	40032789 	andmi	r2, r3, r9, lsl #15

4001e234 <mdns::Domain::AddDotLocal()>:
4001e234:	e92d4010 	push	{r4, lr}
4001e238:	e2804c01 	add	r4, r0, #256	; 0x100
4001e23c:	e59f101c 	ldr	r1, [pc, #28]	; 4001e260 <mdns::Domain::AddDotLocal()+0x2c>
4001e240:	e3a02007 	mov	r2, #7
4001e244:	e1d430b0 	ldrh	r3, [r4]
4001e248:	e0800003 	add	r0, r0, r3
4001e24c:	ebffff87 	bl	4001e070 <memcpy.isra.0>
4001e250:	e1d430b0 	ldrh	r3, [r4]
4001e254:	e2833007 	add	r3, r3, #7
4001e258:	e1c430b0 	strh	r3, [r4]
4001e25c:	e8bd8010 	pop	{r4, pc}
4001e260:	4003277a 	andmi	r2, r3, sl, ror r7

4001e264 <create_host_domain(mdns::Domain&)>:
4001e264:	e2803c01 	add	r3, r0, #256	; 0x100
4001e268:	e3a02000 	mov	r2, #0
4001e26c:	e92d4070 	push	{r4, r5, r6, lr}
4001e270:	e1a04000 	mov	r4, r0
4001e274:	e1c320b0 	strh	r2, [r3]
4001e278:	e59f3028 	ldr	r3, [pc, #40]	; 4001e2a8 <create_host_domain(mdns::Domain&)+0x44>
4001e27c:	e5935000 	ldr	r5, [r3]
4001e280:	e2855014 	add	r5, r5, #20
4001e284:	e1a00005 	mov	r0, r5
4001e288:	ebffffa0 	bl	4001e110 <strlen>
4001e28c:	e1a02000 	mov	r2, r0
4001e290:	e1a01005 	mov	r1, r5
4001e294:	e1a00004 	mov	r0, r4
4001e298:	ebffffa4 	bl	4001e130 <mdns::Domain::AddLabel(char const*, unsigned int)>
4001e29c:	e1a00004 	mov	r0, r4
4001e2a0:	ebffffe3 	bl	4001e234 <mdns::Domain::AddDotLocal()>
4001e2a4:	e8bd8070 	pop	{r4, r5, r6, pc}
4001e2a8:	40034080 	andmi	r4, r3, r0, lsl #1

4001e2ac <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)>:
4001e2ac:	e3a03000 	mov	r3, #0
4001e2b0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001e2b4:	e2806c01 	add	r6, r0, #256	; 0x100
4001e2b8:	e1520003 	cmp	r2, r3
4001e2bc:	e1a05000 	mov	r5, r0
4001e2c0:	e1c630b0 	strh	r3, [r6]
4001e2c4:	e1a04001 	mov	r4, r1
4001e2c8:	0a00000a 	beq	4001e2f8 <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)+0x4c>
4001e2cc:	e5917000 	ldr	r7, [r1]
4001e2d0:	e1570003 	cmp	r7, r3
4001e2d4:	059f3084 	ldreq	r3, [pc, #132]	; 4001e360 <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)+0xb4>
4001e2d8:	05937000 	ldreq	r7, [r3]
4001e2dc:	02877014 	addeq	r7, r7, #20
4001e2e0:	e1a00007 	mov	r0, r7
4001e2e4:	ebffff89 	bl	4001e110 <strlen>
4001e2e8:	e1a02000 	mov	r2, r0
4001e2ec:	e1a01007 	mov	r1, r7
4001e2f0:	e1a00005 	mov	r0, r5
4001e2f4:	ebffff8d 	bl	4001e130 <mdns::Domain::AddLabel(char const*, unsigned int)>
4001e2f8:	e594100c 	ldr	r1, [r4, #12]
4001e2fc:	e59f3060 	ldr	r3, [pc, #96]	; 4001e364 <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)+0xb8>
4001e300:	e1d600b0 	ldrh	r0, [r6]
4001e304:	e0837201 	add	r7, r3, r1, lsl #4
4001e308:	e0850000 	add	r0, r5, r0
4001e30c:	e1d740b4 	ldrh	r4, [r7, #4]
4001e310:	e7931201 	ldr	r1, [r3, r1, lsl #4]
4001e314:	e1a02004 	mov	r2, r4
4001e318:	ebffff54 	bl	4001e070 <memcpy.isra.0>
4001e31c:	e1d600b0 	ldrh	r0, [r6]
4001e320:	e3a02005 	mov	r2, #5
4001e324:	e5973008 	ldr	r3, [r7, #8]
4001e328:	e0844000 	add	r4, r4, r0
4001e32c:	e3530000 	cmp	r3, #0
4001e330:	e6ff4074 	uxth	r4, r4
4001e334:	e0850004 	add	r0, r5, r4
4001e338:	059f1028 	ldreq	r1, [pc, #40]	; 4001e368 <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)+0xbc>
4001e33c:	159f1028 	ldrne	r1, [pc, #40]	; 4001e36c <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)+0xc0>
4001e340:	e1c640b0 	strh	r4, [r6]
4001e344:	ebffff49 	bl	4001e070 <memcpy.isra.0>
4001e348:	e1d630b0 	ldrh	r3, [r6]
4001e34c:	e1a00005 	mov	r0, r5
4001e350:	e2833005 	add	r3, r3, #5
4001e354:	e1c630b0 	strh	r3, [r6]
4001e358:	ebffffb5 	bl	4001e234 <mdns::Domain::AddDotLocal()>
4001e35c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001e360:	40034080 	andmi	r4, r3, r0, lsl #1
4001e364:	400325d0 	ldrdmi	r2, [r3], -r0
4001e368:	400325c8 	andmi	r2, r3, r8, asr #11
4001e36c:	400325c3 	andmi	r2, r3, r3, asr #11

4001e370 <mdns::Domain::Print(bool)>:
4001e370:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4001e374:	e1a02000 	mov	r2, r0
4001e378:	e59f8054 	ldr	r8, [pc, #84]	; 4001e3d4 <mdns::Domain::Print(bool)+0x64>
4001e37c:	e1a05000 	mov	r5, r0
4001e380:	e1a06001 	mov	r6, r1
4001e384:	e2809c01 	add	r9, r0, #256	; 0x100
4001e388:	e5d27000 	ldrb	r7, [r2]
4001e38c:	e3570000 	cmp	r7, #0
4001e390:	0a00000a 	beq	4001e3c0 <mdns::Domain::Print(bool)+0x50>
4001e394:	e1d930b0 	ldrh	r3, [r9]
4001e398:	e0853003 	add	r3, r5, r3
4001e39c:	e1520003 	cmp	r2, r3
4001e3a0:	2a000006 	bcs	4001e3c0 <mdns::Domain::Print(bool)+0x50>
4001e3a4:	e2824001 	add	r4, r2, #1
4001e3a8:	e1a01007 	mov	r1, r7
4001e3ac:	e1a02004 	mov	r2, r4
4001e3b0:	e1a00008 	mov	r0, r8
4001e3b4:	eb0039f5 	bl	4002cb90 <printf>
4001e3b8:	e0842007 	add	r2, r4, r7
4001e3bc:	eafffff1 	b	4001e388 <mdns::Domain::Print(bool)+0x18>
4001e3c0:	e3560000 	cmp	r6, #0
4001e3c4:	08bd87f0 	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
4001e3c8:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
4001e3cc:	e3a0000a 	mov	r0, #10
4001e3d0:	ea003a2c 	b	4002cc88 <putchar>
4001e3d4:	400325a4 	andmi	r2, r3, r4, lsr #11

4001e3d8 <mdns::operator==(mdns::Domain const&, mdns::Domain const&)>:
4001e3d8:	e2803c01 	add	r3, r0, #256	; 0x100
4001e3dc:	e1d320b0 	ldrh	r2, [r3]
4001e3e0:	e2813c01 	add	r3, r1, #256	; 0x100
4001e3e4:	e1d330b0 	ldrh	r3, [r3]
4001e3e8:	e1530002 	cmp	r3, r2
4001e3ec:	1a000022 	bne	4001e47c <mdns::operator==(mdns::Domain const&, mdns::Domain const&)+0xa4>
4001e3f0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001e3f4:	e0807003 	add	r7, r0, r3
4001e3f8:	e5d03000 	ldrb	r3, [r0]
4001e3fc:	e3530000 	cmp	r3, #0
4001e400:	0a00001f 	beq	4001e484 <mdns::operator==(mdns::Domain const&, mdns::Domain const&)+0xac>
4001e404:	e5d12000 	ldrb	r2, [r1]
4001e408:	e3520000 	cmp	r2, #0
4001e40c:	0a00001c 	beq	4001e484 <mdns::operator==(mdns::Domain const&, mdns::Domain const&)+0xac>
4001e410:	e1500007 	cmp	r0, r7
4001e414:	2a00001a 	bcs	4001e484 <mdns::operator==(mdns::Domain const&, mdns::Domain const&)+0xac>
4001e418:	e1530002 	cmp	r3, r2
4001e41c:	1a00001a 	bne	4001e48c <mdns::operator==(mdns::Domain const&, mdns::Domain const&)+0xb4>
4001e420:	e2800001 	add	r0, r0, #1
4001e424:	e2811001 	add	r1, r1, #1
4001e428:	e1a05000 	mov	r5, r0
4001e42c:	e1a04001 	mov	r4, r1
4001e430:	e1a0e003 	mov	lr, r3
4001e434:	e4d52001 	ldrb	r2, [r5], #1
4001e438:	e242c041 	sub	ip, r2, #65	; 0x41
4001e43c:	e1a06002 	mov	r6, r2
4001e440:	e35c0019 	cmp	ip, #25
4001e444:	e4d4c001 	ldrb	ip, [r4], #1
4001e448:	92826020 	addls	r6, r2, #32
4001e44c:	e24c8041 	sub	r8, ip, #65	; 0x41
4001e450:	e3580019 	cmp	r8, #25
4001e454:	928cc020 	addls	ip, ip, #32
4001e458:	e15c0006 	cmp	ip, r6
4001e45c:	1a00000a 	bne	4001e48c <mdns::operator==(mdns::Domain const&, mdns::Domain const&)+0xb4>
4001e460:	e3520000 	cmp	r2, #0
4001e464:	0a000001 	beq	4001e470 <mdns::operator==(mdns::Domain const&, mdns::Domain const&)+0x98>
4001e468:	e25ee001 	subs	lr, lr, #1
4001e46c:	1afffff0 	bne	4001e434 <mdns::operator==(mdns::Domain const&, mdns::Domain const&)+0x5c>
4001e470:	e0800003 	add	r0, r0, r3
4001e474:	e0811003 	add	r1, r1, r3
4001e478:	eaffffde 	b	4001e3f8 <mdns::operator==(mdns::Domain const&, mdns::Domain const&)+0x20>
4001e47c:	e3a00000 	mov	r0, #0
4001e480:	e12fff1e 	bx	lr
4001e484:	e3a00001 	mov	r0, #1
4001e488:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001e48c:	e3a00000 	mov	r0, #0
4001e490:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

4001e494 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)>:
4001e494:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
4001e498:	e1a04000 	mov	r4, r0
4001e49c:	e5d27000 	ldrb	r7, [r2]
4001e4a0:	e1e0e007 	mvn	lr, r7
4001e4a4:	e081e00e 	add	lr, r1, lr
4001e4a8:	e15e0004 	cmp	lr, r4
4001e4ac:	e1a0000e 	mov	r0, lr
4001e4b0:	3a000019 	bcc	4001e51c <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x88>
4001e4b4:	e5d03000 	ldrb	r3, [r0]
4001e4b8:	e24ee001 	sub	lr, lr, #1
4001e4bc:	e1530007 	cmp	r3, r7
4001e4c0:	1afffff8 	bne	4001e4a8 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x14>
4001e4c4:	e5dec002 	ldrb	ip, [lr, #2]
4001e4c8:	e5d23001 	ldrb	r3, [r2, #1]
4001e4cc:	e15c0003 	cmp	ip, r3
4001e4d0:	1afffff4 	bne	4001e4a8 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x14>
4001e4d4:	e1a0c000 	mov	ip, r0
4001e4d8:	e1a05002 	mov	r5, r2
4001e4dc:	e5d56000 	ldrb	r6, [r5]
4001e4e0:	e08c3006 	add	r3, ip, r6
4001e4e4:	e1510003 	cmp	r1, r3
4001e4e8:	9affffee 	bls	4001e4a8 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x14>
4001e4ec:	e3a03000 	mov	r3, #0
4001e4f0:	e1560003 	cmp	r6, r3
4001e4f4:	ba00000a 	blt	4001e524 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x90>
4001e4f8:	e7dc9003 	ldrb	r9, [ip, r3]
4001e4fc:	e7d58003 	ldrb	r8, [r5, r3]
4001e500:	e1590008 	cmp	r9, r8
4001e504:	1affffe7 	bne	4001e4a8 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x14>
4001e508:	e2833001 	add	r3, r3, #1
4001e50c:	eafffff7 	b	4001e4f0 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x5c>
4001e510:	e3530000 	cmp	r3, #0
4001e514:	1affffe3 	bne	4001e4a8 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x14>
4001e518:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
4001e51c:	e3a00000 	mov	r0, #0
4001e520:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
4001e524:	e2866001 	add	r6, r6, #1
4001e528:	e7fc3006 	ldrb	r3, [ip, r6]!
4001e52c:	e7f56006 	ldrb	r6, [r5, r6]!
4001e530:	e3560000 	cmp	r6, #0
4001e534:	0afffff5 	beq	4001e510 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x7c>
4001e538:	e353003f 	cmp	r3, #63	; 0x3f
4001e53c:	9affffe6 	bls	4001e4dc <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x48>
4001e540:	e35300bf 	cmp	r3, #191	; 0xbf
4001e544:	9affffd7 	bls	4001e4a8 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x14>
4001e548:	e28c6001 	add	r6, ip, #1
4001e54c:	e1510006 	cmp	r1, r6
4001e550:	9affffd4 	bls	4001e4a8 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x14>
4001e554:	e5dc6001 	ldrb	r6, [ip, #1]
4001e558:	e1a03403 	lsl	r3, r3, #8
4001e55c:	e2033c3f 	and	r3, r3, #16128	; 0x3f00
4001e560:	e0833006 	add	r3, r3, r6
4001e564:	e0846003 	add	r6, r4, r3
4001e568:	e15c0006 	cmp	ip, r6
4001e56c:	3affffcd 	bcc	4001e4a8 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x14>
4001e570:	e7d43003 	ldrb	r3, [r4, r3]
4001e574:	e353003f 	cmp	r3, #63	; 0x3f
4001e578:	8affffca 	bhi	4001e4a8 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x14>
4001e57c:	e1a0c006 	mov	ip, r6
4001e580:	eaffffd5 	b	4001e4dc <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x48>

4001e584 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)>:
4001e584:	e92d4070 	push	{r4, r5, r6, lr}
4001e588:	e1a02001 	mov	r2, r1
4001e58c:	e1a06000 	mov	r6, r0
4001e590:	e1a05000 	mov	r5, r0
4001e594:	e5d24000 	ldrb	r4, [r2]
4001e598:	e3540000 	cmp	r4, #0
4001e59c:	0a00001c 	beq	4001e614 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)+0x90>
4001e5a0:	e59f0078 	ldr	r0, [pc, #120]	; 4001e620 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)+0x9c>
4001e5a4:	e1a01006 	mov	r1, r6
4001e5a8:	ebffffb9 	bl	4001e494 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)>
4001e5ac:	e2503000 	subs	r3, r0, #0
4001e5b0:	0a000008 	beq	4001e5d8 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)+0x54>
4001e5b4:	e59f0064 	ldr	r0, [pc, #100]	; 4001e620 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)+0x9c>
4001e5b8:	e0433000 	sub	r3, r3, r0
4001e5bc:	e1a00005 	mov	r0, r5
4001e5c0:	e7e72453 	ubfx	r2, r3, #8, #8
4001e5c4:	e1e02d02 	mvn	r2, r2, lsl #26
4001e5c8:	e1e02d22 	mvn	r2, r2, lsr #26
4001e5cc:	e4c02002 	strb	r2, [r0], #2
4001e5d0:	e5c53001 	strb	r3, [r5, #1]
4001e5d4:	e8bd8070 	pop	{r4, r5, r6, pc}
4001e5d8:	e1a01005 	mov	r1, r5
4001e5dc:	e2822001 	add	r2, r2, #1
4001e5e0:	e1a0c002 	mov	ip, r2
4001e5e4:	e4c14001 	strb	r4, [r1], #1
4001e5e8:	e1a00001 	mov	r0, r1
4001e5ec:	e4dce001 	ldrb	lr, [ip], #1
4001e5f0:	e2800001 	add	r0, r0, #1
4001e5f4:	e1a03000 	mov	r3, r0
4001e5f8:	e563e001 	strb	lr, [r3, #-1]!
4001e5fc:	e0433005 	sub	r3, r3, r5
4001e600:	e1540003 	cmp	r4, r3
4001e604:	8afffff8 	bhi	4001e5ec <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)+0x68>
4001e608:	e0822004 	add	r2, r2, r4
4001e60c:	e0815004 	add	r5, r1, r4
4001e610:	eaffffdf 	b	4001e594 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)+0x10>
4001e614:	e1a00005 	mov	r0, r5
4001e618:	e4c04001 	strb	r4, [r0], #1
4001e61c:	e8bd8070 	pop	{r4, r5, r6, pc}
4001e620:	4005a05c 	andmi	sl, r5, ip, asr r0

4001e624 <add_question(unsigned char*, mdns::Domain const&, net::dns::RRType, bool)>:
4001e624:	e92d4070 	push	{r4, r5, r6, lr}
4001e628:	e1a05003 	mov	r5, r3
4001e62c:	e1a04002 	mov	r4, r2
4001e630:	ebffffd3 	bl	4001e584 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)>
4001e634:	e6bf4fb4 	rev16	r4, r4
4001e638:	e3550000 	cmp	r5, #0
4001e63c:	e1c040b0 	strh	r4, [r0]
4001e640:	e3083001 	movw	r3, #32769	; 0x8001
4001e644:	03a03001 	moveq	r3, #1
4001e648:	e2800004 	add	r0, r0, #4
4001e64c:	e6bf3fb3 	rev16	r3, r3
4001e650:	e14030b2 	strh	r3, [r0, #-2]
4001e654:	e8bd8070 	pop	{r4, r5, r6, pc}

4001e658 <add_answer_a(unsigned char*, unsigned long)>:
4001e658:	e92d4030 	push	{r4, r5, lr}
4001e65c:	e24ddf43 	sub	sp, sp, #268	; 0x10c
4001e660:	e1a05000 	mov	r5, r0
4001e664:	e28d0004 	add	r0, sp, #4
4001e668:	e1a04001 	mov	r4, r1
4001e66c:	ebfffefc 	bl	4001e264 <create_host_domain(mdns::Domain&)>
4001e670:	e6bf4f34 	rev	r4, r4
4001e674:	e3a03001 	mov	r3, #1
4001e678:	e1a02003 	mov	r2, r3
4001e67c:	e28d1004 	add	r1, sp, #4
4001e680:	e1a00005 	mov	r0, r5
4001e684:	ebffffe6 	bl	4001e624 <add_question(unsigned char*, mdns::Domain const&, net::dns::RRType, bool)>
4001e688:	e5804000 	str	r4, [r0]
4001e68c:	e3a03b01 	mov	r3, #1024	; 0x400
4001e690:	e1c030b4 	strh	r3, [r0, #4]
4001e694:	e280000a 	add	r0, r0, #10
4001e698:	e59f3010 	ldr	r3, [pc, #16]	; 4001e6b0 <add_answer_a(unsigned char*, unsigned long)+0x58>
4001e69c:	e5933000 	ldr	r3, [r3]
4001e6a0:	e5003004 	str	r3, [r0, #-4]
4001e6a4:	e0400005 	sub	r0, r0, r5
4001e6a8:	e28ddf43 	add	sp, sp, #268	; 0x10c
4001e6ac:	e8bd8030 	pop	{r4, r5, pc}
4001e6b0:	4005a73c 	andmi	sl, r5, ip, lsr r7

4001e6b4 <add_answer_txt(mdns::ServiceRecord const&, unsigned char*, unsigned long)>:
4001e6b4:	e92d40f0 	push	{r4, r5, r6, r7, lr}
4001e6b8:	e24ddf43 	sub	sp, sp, #268	; 0x10c
4001e6bc:	e1a04002 	mov	r4, r2
4001e6c0:	e1a05000 	mov	r5, r0
4001e6c4:	e1a06001 	mov	r6, r1
4001e6c8:	e3a02001 	mov	r2, #1
4001e6cc:	e1a01000 	mov	r1, r0
4001e6d0:	e28d0004 	add	r0, sp, #4
4001e6d4:	ebfffef4 	bl	4001e2ac <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)>
4001e6d8:	e3a03001 	mov	r3, #1
4001e6dc:	e3a02010 	mov	r2, #16
4001e6e0:	e28d1004 	add	r1, sp, #4
4001e6e4:	e1a00006 	mov	r0, r6
4001e6e8:	ebffffcd 	bl	4001e624 <add_question(unsigned char*, mdns::Domain const&, net::dns::RRType, bool)>
4001e6ec:	e5953004 	ldr	r3, [r5, #4]
4001e6f0:	e6bf2f34 	rev	r2, r4
4001e6f4:	e1a04000 	mov	r4, r0
4001e6f8:	e3530000 	cmp	r3, #0
4001e6fc:	e4842007 	str	r2, [r4], #7
4001e700:	03a02c01 	moveq	r2, #256	; 0x100
4001e704:	01c020b4 	strheq	r2, [r0, #4]
4001e708:	05c03006 	strbeq	r3, [r0, #6]
4001e70c:	0a000009 	beq	4001e738 <add_answer_txt(mdns::ServiceRecord const&, unsigned char*, unsigned long)+0x84>
4001e710:	e1d570b8 	ldrh	r7, [r5, #8]
4001e714:	e5c07006 	strb	r7, [r0, #6]
4001e718:	e2873001 	add	r3, r7, #1
4001e71c:	e6bf3fb3 	rev16	r3, r3
4001e720:	e1c030b4 	strh	r3, [r0, #4]
4001e724:	e1a00004 	mov	r0, r4
4001e728:	e1d520b8 	ldrh	r2, [r5, #8]
4001e72c:	e5951004 	ldr	r1, [r5, #4]
4001e730:	e0844007 	add	r4, r4, r7
4001e734:	ebfffe4d 	bl	4001e070 <memcpy.isra.0>
4001e738:	e0440006 	sub	r0, r4, r6
4001e73c:	e28ddf43 	add	sp, sp, #268	; 0x10c
4001e740:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}

4001e744 <add_answer_ptr(mdns::ServiceRecord const&, unsigned char*, unsigned long)>:
4001e744:	e92d40f0 	push	{r4, r5, r6, r7, lr}
4001e748:	e24ddf43 	sub	sp, sp, #268	; 0x10c
4001e74c:	e1a05001 	mov	r5, r1
4001e750:	e1a07000 	mov	r7, r0
4001e754:	e1a04002 	mov	r4, r2
4001e758:	e1a01000 	mov	r1, r0
4001e75c:	e3a02000 	mov	r2, #0
4001e760:	e28d0004 	add	r0, sp, #4
4001e764:	ebfffed0 	bl	4001e2ac <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)>
4001e768:	e3a03000 	mov	r3, #0
4001e76c:	e28d1004 	add	r1, sp, #4
4001e770:	e3a0200c 	mov	r2, #12
4001e774:	e1a00005 	mov	r0, r5
4001e778:	ebffffa9 	bl	4001e624 <add_question(unsigned char*, mdns::Domain const&, net::dns::RRType, bool)>
4001e77c:	e6bf2f34 	rev	r2, r4
4001e780:	e1a04000 	mov	r4, r0
4001e784:	e1a06000 	mov	r6, r0
4001e788:	e1a01007 	mov	r1, r7
4001e78c:	e4842006 	str	r2, [r4], #6
4001e790:	e28d0004 	add	r0, sp, #4
4001e794:	e3a02001 	mov	r2, #1
4001e798:	ebfffec3 	bl	4001e2ac <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)>
4001e79c:	e28d1004 	add	r1, sp, #4
4001e7a0:	e1a00004 	mov	r0, r4
4001e7a4:	ebffff76 	bl	4001e584 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)>
4001e7a8:	e0404004 	sub	r4, r0, r4
4001e7ac:	e6bf4fb4 	rev16	r4, r4
4001e7b0:	e0400005 	sub	r0, r0, r5
4001e7b4:	e1c640b4 	strh	r4, [r6, #4]
4001e7b8:	e28ddf43 	add	sp, sp, #268	; 0x10c
4001e7bc:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}

4001e7c0 <add_answer_srv(mdns::ServiceRecord const&, unsigned char*, unsigned long)>:
4001e7c0:	e92d40f0 	push	{r4, r5, r6, r7, lr}
4001e7c4:	e24ddf43 	sub	sp, sp, #268	; 0x10c
4001e7c8:	e1a06001 	mov	r6, r1
4001e7cc:	e1a07000 	mov	r7, r0
4001e7d0:	e1a01000 	mov	r1, r0
4001e7d4:	e1a05002 	mov	r5, r2
4001e7d8:	e6bf5f35 	rev	r5, r5
4001e7dc:	e28d0004 	add	r0, sp, #4
4001e7e0:	e3a02001 	mov	r2, #1
4001e7e4:	ebfffeb0 	bl	4001e2ac <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)>
4001e7e8:	e3a02021 	mov	r2, #33	; 0x21
4001e7ec:	e28d1004 	add	r1, sp, #4
4001e7f0:	e3a03001 	mov	r3, #1
4001e7f4:	e1a00006 	mov	r0, r6
4001e7f8:	ebffff89 	bl	4001e624 <add_question(unsigned char*, mdns::Domain const&, net::dns::RRType, bool)>
4001e7fc:	e5805000 	str	r5, [r0]
4001e800:	e3a03000 	mov	r3, #0
4001e804:	e5803006 	str	r3, [r0, #6]
4001e808:	e280500c 	add	r5, r0, #12
4001e80c:	e1d730ba 	ldrh	r3, [r7, #10]
4001e810:	e1a04000 	mov	r4, r0
4001e814:	e1c030ba 	strh	r3, [r0, #10]
4001e818:	e28d0004 	add	r0, sp, #4
4001e81c:	ebfffe90 	bl	4001e264 <create_host_domain(mdns::Domain&)>
4001e820:	e28d1004 	add	r1, sp, #4
4001e824:	e1a00005 	mov	r0, r5
4001e828:	ebffff55 	bl	4001e584 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)>
4001e82c:	e2803006 	add	r3, r0, #6
4001e830:	e0433005 	sub	r3, r3, r5
4001e834:	e6bf3fb3 	rev16	r3, r3
4001e838:	e0400006 	sub	r0, r0, r6
4001e83c:	e1c430b4 	strh	r3, [r4, #4]
4001e840:	e28ddf43 	add	sp, sp, #268	; 0x10c
4001e844:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}

4001e848 <add_answer_dnsd_ptr(mdns::ServiceRecord const&, unsigned char*, unsigned long) [clone .constprop.0]>:
4001e848:	e92d40f0 	push	{r4, r5, r6, r7, lr}
4001e84c:	e3a03000 	mov	r3, #0
4001e850:	e59f505c 	ldr	r5, [pc, #92]	; 4001e8b4 <add_answer_dnsd_ptr(mdns::ServiceRecord const&, unsigned char*, unsigned long) [clone .constprop.0]+0x6c>
4001e854:	e24ddf43 	sub	sp, sp, #268	; 0x10c
4001e858:	e1a07000 	mov	r7, r0
4001e85c:	e1a04001 	mov	r4, r1
4001e860:	e59f1050 	ldr	r1, [pc, #80]	; 4001e8b8 <add_answer_dnsd_ptr(mdns::ServiceRecord const&, unsigned char*, unsigned long) [clone .constprop.0]+0x70>
4001e864:	e3a0200c 	mov	r2, #12
4001e868:	e1a00005 	mov	r0, r5
4001e86c:	ebffff6c 	bl	4001e624 <add_question(unsigned char*, mdns::Domain const&, net::dns::RRType, bool)>
4001e870:	e6bf3f34 	rev	r3, r4
4001e874:	e1a04000 	mov	r4, r0
4001e878:	e1a06000 	mov	r6, r0
4001e87c:	e3a02000 	mov	r2, #0
4001e880:	e4843006 	str	r3, [r4], #6
4001e884:	e1a01007 	mov	r1, r7
4001e888:	e28d0004 	add	r0, sp, #4
4001e88c:	ebfffe86 	bl	4001e2ac <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)>
4001e890:	e28d1004 	add	r1, sp, #4
4001e894:	e1a00004 	mov	r0, r4
4001e898:	ebffff39 	bl	4001e584 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)>
4001e89c:	e0404004 	sub	r4, r0, r4
4001e8a0:	e6bf4fb4 	rev16	r4, r4
4001e8a4:	e0400005 	sub	r0, r0, r5
4001e8a8:	e1c640b4 	strh	r4, [r6, #4]
4001e8ac:	e28ddf43 	add	sp, sp, #268	; 0x10c
4001e8b0:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
4001e8b4:	4005a068 	andmi	sl, r5, r8, rrx
4001e8b8:	40032678 	andmi	r2, r3, r8, ror r6

4001e8bc <mdns_send_message(mdns::ServiceRecord const&, unsigned short, unsigned long)>:
4001e8bc:	e59f30e8 	ldr	r3, [pc, #232]	; 4001e9ac <mdns_send_message(mdns::ServiceRecord const&, unsigned short, unsigned long)+0xf0>
4001e8c0:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4001e8c4:	e1a06000 	mov	r6, r0
4001e8c8:	e5937000 	ldr	r7, [r3]
4001e8cc:	e1a09001 	mov	r9, r1
4001e8d0:	e59f40d8 	ldr	r4, [pc, #216]	; 4001e9b0 <mdns_send_message(mdns::ServiceRecord const&, unsigned short, unsigned long)+0xf4>
4001e8d4:	e1a05002 	mov	r5, r2
4001e8d8:	e2178010 	ands	r8, r7, #16
4001e8dc:	0a000003 	beq	4001e8f0 <mdns_send_message(mdns::ServiceRecord const&, unsigned short, unsigned long)+0x34>
4001e8e0:	e1a01002 	mov	r1, r2
4001e8e4:	e3a08001 	mov	r8, #1
4001e8e8:	ebffffd6 	bl	4001e848 <add_answer_dnsd_ptr(mdns::ServiceRecord const&, unsigned char*, unsigned long) [clone .constprop.0]>
4001e8ec:	e0844000 	add	r4, r4, r0
4001e8f0:	e3170020 	tst	r7, #32
4001e8f4:	0a000005 	beq	4001e910 <mdns_send_message(mdns::ServiceRecord const&, unsigned short, unsigned long)+0x54>
4001e8f8:	e1a01004 	mov	r1, r4
4001e8fc:	e1a02005 	mov	r2, r5
4001e900:	e1a00006 	mov	r0, r6
4001e904:	e2888001 	add	r8, r8, #1
4001e908:	ebffff8d 	bl	4001e744 <add_answer_ptr(mdns::ServiceRecord const&, unsigned char*, unsigned long)>
4001e90c:	e0844000 	add	r4, r4, r0
4001e910:	e3170040 	tst	r7, #64	; 0x40
4001e914:	0a000005 	beq	4001e930 <mdns_send_message(mdns::ServiceRecord const&, unsigned short, unsigned long)+0x74>
4001e918:	e1a01004 	mov	r1, r4
4001e91c:	e1a02005 	mov	r2, r5
4001e920:	e1a00006 	mov	r0, r6
4001e924:	e2888001 	add	r8, r8, #1
4001e928:	ebffffa4 	bl	4001e7c0 <add_answer_srv(mdns::ServiceRecord const&, unsigned char*, unsigned long)>
4001e92c:	e0844000 	add	r4, r4, r0
4001e930:	e3170080 	tst	r7, #128	; 0x80
4001e934:	0a000005 	beq	4001e950 <mdns_send_message(mdns::ServiceRecord const&, unsigned short, unsigned long)+0x94>
4001e938:	e1a01004 	mov	r1, r4
4001e93c:	e1a02005 	mov	r2, r5
4001e940:	e1a00006 	mov	r0, r6
4001e944:	e2888001 	add	r8, r8, #1
4001e948:	ebffff59 	bl	4001e6b4 <add_answer_txt(mdns::ServiceRecord const&, unsigned char*, unsigned long)>
4001e94c:	e0844000 	add	r4, r4, r0
4001e950:	e1a01005 	mov	r1, r5
4001e954:	e1a00004 	mov	r0, r4
4001e958:	ebffff3e 	bl	4001e658 <add_answer_a(unsigned char*, unsigned long)>
4001e95c:	e59f3050 	ldr	r3, [pc, #80]	; 4001e9b4 <mdns_send_message(mdns::ServiceRecord const&, unsigned short, unsigned long)+0xf8>
4001e960:	e3e0207b 	mvn	r2, #123	; 0x7b
4001e964:	e0840000 	add	r0, r4, r0
4001e968:	e3a01000 	mov	r1, #0
4001e96c:	e5c32002 	strb	r2, [r3, #2]
4001e970:	e6bf2fb8 	rev16	r2, r8
4001e974:	e0400003 	sub	r0, r0, r3
4001e978:	e1c320b6 	strh	r2, [r3, #6]
4001e97c:	e3a02001 	mov	r2, #1
4001e980:	e1c390b0 	strh	r9, [r3]
4001e984:	e6ff0070 	uxth	r0, r0
4001e988:	e5c31003 	strb	r1, [r3, #3]
4001e98c:	e5c31004 	strb	r1, [r3, #4]
4001e990:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
4001e994:	e5c31005 	strb	r1, [r3, #5]
4001e998:	e5c31008 	strb	r1, [r3, #8]
4001e99c:	e5c32009 	strb	r2, [r3, #9]
4001e9a0:	e5c3100a 	strb	r1, [r3, #10]
4001e9a4:	e5c3100b 	strb	r1, [r3, #11]
4001e9a8:	eafffdb6 	b	4001e088 <mdns_sendto(unsigned long)>
4001e9ac:	4005a2e0 	andmi	sl, r5, r0, ror #5
4001e9b0:	4005a068 	andmi	sl, r5, r8, rrx
4001e9b4:	4005a05c 	andmi	sl, r5, ip, asr r0

4001e9b8 <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)>:
4001e9b8:	e1510002 	cmp	r1, r2
4001e9bc:	e92d40f0 	push	{r4, r5, r6, r7, lr}
4001e9c0:	e1a0e000 	mov	lr, r0
4001e9c4:	33a00000 	movcc	r0, #0
4001e9c8:	23a00001 	movcs	r0, #1
4001e9cc:	e151000e 	cmp	r1, lr
4001e9d0:	33800001 	orrcc	r0, r0, #1
4001e9d4:	e3500000 	cmp	r0, #0
4001e9d8:	05c30000 	strbeq	r0, [r3]
4001e9dc:	02836c01 	addeq	r6, r3, #256	; 0x100
4001e9e0:	01a07000 	moveq	r7, r0
4001e9e4:	0a000023 	beq	4001ea78 <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0xc0>
4001e9e8:	e3a00000 	mov	r0, #0
4001e9ec:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
4001e9f0:	e35400c0 	cmp	r4, #192	; 0xc0
4001e9f4:	1a00001f 	bne	4001ea78 <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0xc0>
4001e9f8:	e5d51001 	ldrb	r1, [r5, #1]
4001e9fc:	e3500000 	cmp	r0, #0
4001ea00:	e1a0c40c 	lsl	ip, ip, #8
4001ea04:	02850002 	addeq	r0, r5, #2
4001ea08:	e20ccc3f 	and	ip, ip, #16128	; 0x3f00
4001ea0c:	e181c00c 	orr	ip, r1, ip
4001ea10:	e09e400c 	adds	r4, lr, ip
4001ea14:	23a01001 	movcs	r1, #1
4001ea18:	33a01000 	movcc	r1, #0
4001ea1c:	e1520004 	cmp	r2, r4
4001ea20:	93811001 	orrls	r1, r1, #1
4001ea24:	e3510000 	cmp	r1, #0
4001ea28:	1affffee 	bne	4001e9e8 <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x30>
4001ea2c:	e7de100c 	ldrb	r1, [lr, ip]
4001ea30:	e31100c0 	tst	r1, #192	; 0xc0
4001ea34:	0a00000e 	beq	4001ea74 <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0xbc>
4001ea38:	eaffffea 	b	4001e9e8 <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x30>
4001ea3c:	e081400c 	add	r4, r1, ip
4001ea40:	e1540002 	cmp	r4, r2
4001ea44:	2affffe7 	bcs	4001e9e8 <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x30>
4001ea48:	e28c5001 	add	r5, ip, #1
4001ea4c:	e0835005 	add	r5, r3, r5
4001ea50:	e1550006 	cmp	r5, r6
4001ea54:	2affffe3 	bcs	4001e9e8 <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x30>
4001ea58:	e4c3c001 	strb	ip, [r3], #1
4001ea5c:	e4d1c001 	ldrb	ip, [r1], #1
4001ea60:	e1540001 	cmp	r4, r1
4001ea64:	e4c3c001 	strb	ip, [r3], #1
4001ea68:	1afffffb 	bne	4001ea5c <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0xa4>
4001ea6c:	e5c57000 	strb	r7, [r5]
4001ea70:	e1a03005 	mov	r3, r5
4001ea74:	e1a01004 	mov	r1, r4
4001ea78:	e1a05001 	mov	r5, r1
4001ea7c:	e4d1c001 	ldrb	ip, [r1], #1
4001ea80:	e35c0000 	cmp	ip, #0
4001ea84:	0a000008 	beq	4001eaac <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0xf4>
4001ea88:	e20c40c0 	and	r4, ip, #192	; 0xc0
4001ea8c:	e3540080 	cmp	r4, #128	; 0x80
4001ea90:	0affffd4 	beq	4001e9e8 <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x30>
4001ea94:	8affffd5 	bhi	4001e9f0 <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x38>
4001ea98:	e3540000 	cmp	r4, #0
4001ea9c:	0affffe6 	beq	4001ea3c <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x84>
4001eaa0:	e3540040 	cmp	r4, #64	; 0x40
4001eaa4:	0affffcf 	beq	4001e9e8 <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x30>
4001eaa8:	eafffff2 	b	4001ea78 <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0xc0>
4001eaac:	e3500000 	cmp	r0, #0
4001eab0:	01a00001 	moveq	r0, r1
4001eab4:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}

4001eab8 <mdns_send_answer_local_ip_address(unsigned short, unsigned long)>:
4001eab8:	e59f3110 	ldr	r3, [pc, #272]	; 4001ebd0 <mdns_send_answer_local_ip_address(unsigned short, unsigned long)+0x118>
4001eabc:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
4001eac0:	e1a08000 	mov	r8, r0
4001eac4:	e5935000 	ldr	r5, [r3]
4001eac8:	e24ddf43 	sub	sp, sp, #268	; 0x10c
4001eacc:	e59f3100 	ldr	r3, [pc, #256]	; 4001ebd4 <mdns_send_answer_local_ip_address(unsigned short, unsigned long)+0x11c>
4001ead0:	e1a06001 	mov	r6, r1
4001ead4:	e2159002 	ands	r9, r5, #2
4001ead8:	e5d37000 	ldrb	r7, [r3]
4001eadc:	0a000039 	beq	4001ebc8 <mdns_send_answer_local_ip_address(unsigned short, unsigned long)+0x110>
4001eae0:	e3570000 	cmp	r7, #0
4001eae4:	0a000037 	beq	4001ebc8 <mdns_send_answer_local_ip_address(unsigned short, unsigned long)+0x110>
4001eae8:	e28d0004 	add	r0, sp, #4
4001eaec:	ebfffd9d 	bl	4001e168 <create_reverse_domain(mdns::Domain&)>
4001eaf0:	e59f00e0 	ldr	r0, [pc, #224]	; 4001ebd8 <mdns_send_answer_local_ip_address(unsigned short, unsigned long)+0x120>
4001eaf4:	e3a03000 	mov	r3, #0
4001eaf8:	e3a0200c 	mov	r2, #12
4001eafc:	e28d1004 	add	r1, sp, #4
4001eb00:	ebfffec7 	bl	4001e624 <add_question(unsigned char*, mdns::Domain const&, net::dns::RRType, bool)>
4001eb04:	e1a04000 	mov	r4, r0
4001eb08:	e2155001 	ands	r5, r5, #1
4001eb0c:	0a000003 	beq	4001eb20 <mdns_send_answer_local_ip_address(unsigned short, unsigned long)+0x68>
4001eb10:	e1a00004 	mov	r0, r4
4001eb14:	e1a01006 	mov	r1, r6
4001eb18:	ebfffece 	bl	4001e658 <add_answer_a(unsigned char*, unsigned long)>
4001eb1c:	e0844000 	add	r4, r4, r0
4001eb20:	e3590000 	cmp	r9, #0
4001eb24:	0a000014 	beq	4001eb7c <mdns_send_answer_local_ip_address(unsigned short, unsigned long)+0xc4>
4001eb28:	e28d0004 	add	r0, sp, #4
4001eb2c:	e2855001 	add	r5, r5, #1
4001eb30:	ebfffd8c 	bl	4001e168 <create_reverse_domain(mdns::Domain&)>
4001eb34:	e3a03001 	mov	r3, #1
4001eb38:	e3a0200c 	mov	r2, #12
4001eb3c:	e28d1004 	add	r1, sp, #4
4001eb40:	e1a00004 	mov	r0, r4
4001eb44:	ebfffeb6 	bl	4001e624 <add_question(unsigned char*, mdns::Domain const&, net::dns::RRType, bool)>
4001eb48:	e6bf1f36 	rev	r1, r6
4001eb4c:	e1a06000 	mov	r6, r0
4001eb50:	e1a09000 	mov	r9, r0
4001eb54:	e28d0004 	add	r0, sp, #4
4001eb58:	e4861006 	str	r1, [r6], #6
4001eb5c:	ebfffdc0 	bl	4001e264 <create_host_domain(mdns::Domain&)>
4001eb60:	e1a00006 	mov	r0, r6
4001eb64:	e28d1004 	add	r1, sp, #4
4001eb68:	ebfffe85 	bl	4001e584 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)>
4001eb6c:	e0406006 	sub	r6, r0, r6
4001eb70:	e1a04000 	mov	r4, r0
4001eb74:	e6bf6fb6 	rev16	r6, r6
4001eb78:	e1c960b4 	strh	r6, [r9, #4]
4001eb7c:	e59f3058 	ldr	r3, [pc, #88]	; 4001ebdc <mdns_send_answer_local_ip_address(unsigned short, unsigned long)+0x124>
4001eb80:	e3e0207b 	mvn	r2, #123	; 0x7b
4001eb84:	e6bf7fb7 	rev16	r7, r7
4001eb88:	e6bf5fb5 	rev16	r5, r5
4001eb8c:	e0440003 	sub	r0, r4, r3
4001eb90:	e5c32002 	strb	r2, [r3, #2]
4001eb94:	e3a02000 	mov	r2, #0
4001eb98:	e1c380b0 	strh	r8, [r3]
4001eb9c:	e6ff0070 	uxth	r0, r0
4001eba0:	e5c32003 	strb	r2, [r3, #3]
4001eba4:	e1c370b4 	strh	r7, [r3, #4]
4001eba8:	e1c350b6 	strh	r5, [r3, #6]
4001ebac:	e5c32008 	strb	r2, [r3, #8]
4001ebb0:	e5c32009 	strb	r2, [r3, #9]
4001ebb4:	e5c3200a 	strb	r2, [r3, #10]
4001ebb8:	e5c3200b 	strb	r2, [r3, #11]
4001ebbc:	e28ddf43 	add	sp, sp, #268	; 0x10c
4001ebc0:	e8bd43f0 	pop	{r4, r5, r6, r7, r8, r9, lr}
4001ebc4:	eafffd2f 	b	4001e088 <mdns_sendto(unsigned long)>
4001ebc8:	e59f4008 	ldr	r4, [pc, #8]	; 4001ebd8 <mdns_send_answer_local_ip_address(unsigned short, unsigned long)+0x120>
4001ebcc:	eaffffcd 	b	4001eb08 <mdns_send_answer_local_ip_address(unsigned short, unsigned long)+0x50>
4001ebd0:	4005a058 	andmi	sl, r5, r8, asr r0
4001ebd4:	4005a25c 	andmi	sl, r5, ip, asr r2
4001ebd8:	4005a068 	andmi	sl, r5, r8, rrx
4001ebdc:	4005a05c 	andmi	sl, r5, ip, asr r0

4001ebe0 <mdns_send_announcement(unsigned long)>:
4001ebe0:	e59f3064 	ldr	r3, [pc, #100]	; 4001ec4c <mdns_send_announcement(unsigned long)+0x6c>
4001ebe4:	e30124e9 	movw	r2, #5353	; 0x14e9
4001ebe8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001ebec:	e1a01000 	mov	r1, r0
4001ebf0:	e1c320b0 	strh	r2, [r3]
4001ebf4:	e1a05000 	mov	r5, r0
4001ebf8:	e59f3050 	ldr	r3, [pc, #80]	; 4001ec50 <mdns_send_announcement(unsigned long)+0x70>
4001ebfc:	e3a02001 	mov	r2, #1
4001ec00:	e59f404c 	ldr	r4, [pc, #76]	; 4001ec54 <mdns_send_announcement(unsigned long)+0x74>
4001ec04:	e3a00000 	mov	r0, #0
4001ec08:	e59f7048 	ldr	r7, [pc, #72]	; 4001ec58 <mdns_send_announcement(unsigned long)+0x78>
4001ec0c:	e3a06008 	mov	r6, #8
4001ec10:	e5832000 	str	r2, [r3]
4001ec14:	e3a080f0 	mov	r8, #240	; 0xf0
4001ec18:	ebffffa6 	bl	4001eab8 <mdns_send_answer_local_ip_address(unsigned short, unsigned long)>
4001ec1c:	e594300c 	ldr	r3, [r4, #12]
4001ec20:	e3530008 	cmp	r3, #8
4001ec24:	ca000004 	bgt	4001ec3c <mdns_send_announcement(unsigned long)+0x5c>
4001ec28:	e5878000 	str	r8, [r7]
4001ec2c:	e1a02005 	mov	r2, r5
4001ec30:	e3a01000 	mov	r1, #0
4001ec34:	e1a00004 	mov	r0, r4
4001ec38:	ebffff1f 	bl	4001e8bc <mdns_send_message(mdns::ServiceRecord const&, unsigned short, unsigned long)>
4001ec3c:	e2566001 	subs	r6, r6, #1
4001ec40:	e2844010 	add	r4, r4, #16
4001ec44:	1afffff4 	bne	4001ec1c <mdns_send_announcement(unsigned long)+0x3c>
4001ec48:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001ec4c:	4005a2f0 	strdmi	sl, [r5], -r0
4001ec50:	4005a058 	andmi	sl, r5, r8, asr r0
4001ec54:	4005a260 	andmi	sl, r5, r0, ror #4
4001ec58:	4005a2e0 	andmi	sl, r5, r0, ror #5

4001ec5c <mdns_start()>:
4001ec5c:	e59f0078 	ldr	r0, [pc, #120]	; 4001ecdc <mdns_start()+0x80>
4001ec60:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4001ec64:	e24ddf43 	sub	sp, sp, #268	; 0x10c
4001ec68:	eb00096e 	bl	40021228 <net::igmp_join(unsigned long)>
4001ec6c:	e59f306c 	ldr	r3, [pc, #108]	; 4001ece0 <mdns_start()+0x84>
4001ec70:	e3a0203f 	mov	r2, #63	; 0x3f
4001ec74:	e59f0068 	ldr	r0, [pc, #104]	; 4001ece4 <mdns_start()+0x88>
4001ec78:	e593c000 	ldr	ip, [r3]
4001ec7c:	e28c3054 	add	r3, ip, #84	; 0x54
4001ec80:	e5d01001 	ldrb	r1, [r0, #1]
4001ec84:	e3510000 	cmp	r1, #0
4001ec88:	1a000004 	bne	4001eca0 <mdns_start()+0x44>
4001ec8c:	e0832002 	add	r2, r3, r2
4001ec90:	e1530002 	cmp	r3, r2
4001ec94:	0a000005 	beq	4001ecb0 <mdns_start()+0x54>
4001ec98:	e4c31001 	strb	r1, [r3], #1
4001ec9c:	eafffffb 	b	4001ec90 <mdns_start()+0x34>
4001eca0:	e4c31001 	strb	r1, [r3], #1
4001eca4:	e2522001 	subs	r2, r2, #1
4001eca8:	e2800001 	add	r0, r0, #1
4001ecac:	1afffff3 	bne	4001ec80 <mdns_start()+0x24>
4001ecb0:	e3a03000 	mov	r3, #0
4001ecb4:	e3a00ee1 	mov	r0, #3600	; 0xe10
4001ecb8:	e5cc3093 	strb	r3, [ip, #147]	; 0x93
4001ecbc:	ebffffc7 	bl	4001ebe0 <mdns_send_announcement(unsigned long)>
4001ecc0:	e28d0004 	add	r0, sp, #4
4001ecc4:	ebfffd66 	bl	4001e264 <create_host_domain(mdns::Domain&)>
4001ecc8:	e3a01001 	mov	r1, #1
4001eccc:	e28d0004 	add	r0, sp, #4
4001ecd0:	ebfffda6 	bl	4001e370 <mdns::Domain::Print(bool)>
4001ecd4:	e28ddf43 	add	sp, sp, #268	; 0x10c
4001ecd8:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4001ecdc:	fb0000e0 	blx	4001f066 <mdns_handle_questions(unsigned long)+0x19e>
4001ece0:	40034080 	andmi	r4, r3, r0, lsl #1
4001ece4:	4003277a 	andmi	r2, r3, sl, ror r7

4001ece8 <mdns_service_record_add(char const*, mdns::Services, char const*, unsigned short)>:
4001ece8:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
4001ecec:	e1a08000 	mov	r8, r0
4001ecf0:	e59f5150 	ldr	r5, [pc, #336]	; 4001ee48 <mdns_service_record_add(char const*, mdns::Services, char const*, unsigned short)+0x160>
4001ecf4:	e24ddf43 	sub	sp, sp, #268	; 0x10c
4001ecf8:	e1a09001 	mov	r9, r1
4001ecfc:	e1a07002 	mov	r7, r2
4001ed00:	e1a06003 	mov	r6, r3
4001ed04:	e3a04008 	mov	r4, #8
4001ed08:	e595300c 	ldr	r3, [r5, #12]
4001ed0c:	e3530009 	cmp	r3, #9
4001ed10:	1a000047 	bne	4001ee34 <mdns_service_record_add(char const*, mdns::Services, char const*, unsigned short)+0x14c>
4001ed14:	e3580000 	cmp	r8, #0
4001ed18:	0a00000f 	beq	4001ed5c <mdns_service_record_add(char const*, mdns::Services, char const*, unsigned short)+0x74>
4001ed1c:	e1a00008 	mov	r0, r8
4001ed20:	ebfffcfa 	bl	4001e110 <strlen>
4001ed24:	e350003f 	cmp	r0, #63	; 0x3f
4001ed28:	e1a04000 	mov	r4, r0
4001ed2c:	8a00003e 	bhi	4001ee2c <mdns_service_record_add(char const*, mdns::Services, char const*, unsigned short)+0x144>
4001ed30:	e3500000 	cmp	r0, #0
4001ed34:	0a000041 	beq	4001ee40 <mdns_service_record_add(char const*, mdns::Services, char const*, unsigned short)+0x158>
4001ed38:	e2840001 	add	r0, r4, #1
4001ed3c:	eb0039a6 	bl	4002d3dc <operator new[](unsigned int)>
4001ed40:	e5850000 	str	r0, [r5]
4001ed44:	e1a02004 	mov	r2, r4
4001ed48:	e1a01008 	mov	r1, r8
4001ed4c:	ebfffcc7 	bl	4001e070 <memcpy.isra.0>
4001ed50:	e5953000 	ldr	r3, [r5]
4001ed54:	e3a02000 	mov	r2, #0
4001ed58:	e7c32004 	strb	r2, [r3, r4]
4001ed5c:	e585900c 	str	r9, [r5, #12]
4001ed60:	e3560000 	cmp	r6, #0
4001ed64:	059f10e0 	ldreq	r1, [pc, #224]	; 4001ee4c <mdns_service_record_add(char const*, mdns::Services, char const*, unsigned short)+0x164>
4001ed68:	00819209 	addeq	r9, r1, r9, lsl #4
4001ed6c:	01d960bc 	ldrheq	r6, [r9, #12]
4001ed70:	e3570000 	cmp	r7, #0
4001ed74:	e6bf6fb6 	rev16	r6, r6
4001ed78:	e6ff6076 	uxth	r6, r6
4001ed7c:	e1c560ba 	strh	r6, [r5, #10]
4001ed80:	0a00000b 	beq	4001edb4 <mdns_service_record_add(char const*, mdns::Services, char const*, unsigned short)+0xcc>
4001ed84:	e1a00007 	mov	r0, r7
4001ed88:	ebfffce0 	bl	4001e110 <strlen>
4001ed8c:	e3500c01 	cmp	r0, #256	; 0x100
4001ed90:	31a04000 	movcc	r4, r0
4001ed94:	23a04c01 	movcs	r4, #256	; 0x100
4001ed98:	e1a00004 	mov	r0, r4
4001ed9c:	eb00398e 	bl	4002d3dc <operator new[](unsigned int)>
4001eda0:	e5850004 	str	r0, [r5, #4]
4001eda4:	e1a02004 	mov	r2, r4
4001eda8:	e1a01007 	mov	r1, r7
4001edac:	ebfffcaf 	bl	4001e070 <memcpy.isra.0>
4001edb0:	e1c540b8 	strh	r4, [r5, #8]
4001edb4:	e59f3094 	ldr	r3, [pc, #148]	; 4001ee50 <mdns_service_record_add(char const*, mdns::Services, char const*, unsigned short)+0x168>
4001edb8:	e30124e9 	movw	r2, #5353	; 0x14e9
4001edbc:	e3a01000 	mov	r1, #0
4001edc0:	e1a00005 	mov	r0, r5
4001edc4:	e1c320b0 	strh	r2, [r3]
4001edc8:	e3a020f0 	mov	r2, #240	; 0xf0
4001edcc:	e59f3080 	ldr	r3, [pc, #128]	; 4001ee54 <mdns_service_record_add(char const*, mdns::Services, char const*, unsigned short)+0x16c>
4001edd0:	e5832000 	str	r2, [r3]
4001edd4:	e3a02ee1 	mov	r2, #3600	; 0xe10
4001edd8:	ebfffeb7 	bl	4001e8bc <mdns_send_message(mdns::ServiceRecord const&, unsigned short, unsigned long)>
4001eddc:	e3a02000 	mov	r2, #0
4001ede0:	e1a01005 	mov	r1, r5
4001ede4:	e28d0004 	add	r0, sp, #4
4001ede8:	ebfffd2f 	bl	4001e2ac <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)>
4001edec:	e3a01000 	mov	r1, #0
4001edf0:	e28d0004 	add	r0, sp, #4
4001edf4:	ebfffd5d 	bl	4001e370 <mdns::Domain::Print(bool)>
4001edf8:	e5953004 	ldr	r3, [r5, #4]
4001edfc:	e1d510ba 	ldrh	r1, [r5, #10]
4001ee00:	e59f2050 	ldr	r2, [pc, #80]	; 4001ee58 <mdns_service_record_add(char const*, mdns::Services, char const*, unsigned short)+0x170>
4001ee04:	e3530000 	cmp	r3, #0
4001ee08:	e6bf1fb1 	rev16	r1, r1
4001ee0c:	e59f0048 	ldr	r0, [pc, #72]	; 4001ee5c <mdns_service_record_add(char const*, mdns::Services, char const*, unsigned short)+0x174>
4001ee10:	01a03002 	moveq	r3, r2
4001ee14:	e1d520b8 	ldrh	r2, [r5, #8]
4001ee18:	e6ff1071 	uxth	r1, r1
4001ee1c:	eb00375b 	bl	4002cb90 <printf>
4001ee20:	e3a00001 	mov	r0, #1
4001ee24:	e28ddf43 	add	sp, sp, #268	; 0x10c
4001ee28:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
4001ee2c:	e3a0403f 	mov	r4, #63	; 0x3f
4001ee30:	eaffffc0 	b	4001ed38 <mdns_service_record_add(char const*, mdns::Services, char const*, unsigned short)+0x50>
4001ee34:	e2544001 	subs	r4, r4, #1
4001ee38:	e2855010 	add	r5, r5, #16
4001ee3c:	1affffb1 	bne	4001ed08 <mdns_service_record_add(char const*, mdns::Services, char const*, unsigned short)+0x20>
4001ee40:	e1a00004 	mov	r0, r4
4001ee44:	eafffff6 	b	4001ee24 <mdns_service_record_add(char const*, mdns::Services, char const*, unsigned short)+0x13c>
4001ee48:	4005a260 	andmi	sl, r5, r0, ror #4
4001ee4c:	400325d0 	ldrdmi	r2, [r3], -r0
4001ee50:	4005a2f0 	strdmi	sl, [r5], -r0
4001ee54:	4005a2e0 	andmi	sl, r5, r0, ror #5
4001ee58:	4002ded2 	ldrdmi	sp, [r2], -r2
4001ee5c:	400325aa 	andmi	r2, r3, sl, lsr #11

4001ee60 <mdns_service_record_delete(mdns::Services)>:
4001ee60:	e1a03000 	mov	r3, r0
4001ee64:	e3a00008 	mov	r0, #8
4001ee68:	e92d4010 	push	{r4, lr}
4001ee6c:	e59f4050 	ldr	r4, [pc, #80]	; 4001eec4 <mdns_service_record_delete(mdns::Services)+0x64>
4001ee70:	e594200c 	ldr	r2, [r4, #12]
4001ee74:	e1520003 	cmp	r2, r3
4001ee78:	1a00000d 	bne	4001eeb4 <mdns_service_record_delete(mdns::Services)+0x54>
4001ee7c:	e3a02000 	mov	r2, #0
4001ee80:	e1a00004 	mov	r0, r4
4001ee84:	e1a01002 	mov	r1, r2
4001ee88:	ebfffe8b 	bl	4001e8bc <mdns_send_message(mdns::ServiceRecord const&, unsigned short, unsigned long)>
4001ee8c:	e5940000 	ldr	r0, [r4]
4001ee90:	e3500000 	cmp	r0, #0
4001ee94:	0a000000 	beq	4001ee9c <mdns_service_record_delete(mdns::Services)+0x3c>
4001ee98:	eb00394c 	bl	4002d3d0 <operator delete[](void*)>
4001ee9c:	e5940004 	ldr	r0, [r4, #4]
4001eea0:	e3500000 	cmp	r0, #0
4001eea4:	0a000000 	beq	4001eeac <mdns_service_record_delete(mdns::Services)+0x4c>
4001eea8:	eb003948 	bl	4002d3d0 <operator delete[](void*)>
4001eeac:	e3a00001 	mov	r0, #1
4001eeb0:	e8bd8010 	pop	{r4, pc}
4001eeb4:	e2500001 	subs	r0, r0, #1
4001eeb8:	e2844010 	add	r4, r4, #16
4001eebc:	1affffeb 	bne	4001ee70 <mdns_service_record_delete(mdns::Services)+0x10>
4001eec0:	e8bd8010 	pop	{r4, pc}
4001eec4:	4005a260 	andmi	sl, r5, r0, ror #4

4001eec8 <mdns_handle_questions(unsigned long)>:
4001eec8:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
4001eecc:	e3a03000 	mov	r3, #0
4001eed0:	e59f7288 	ldr	r7, [pc, #648]	; 4001f160 <mdns_handle_questions(unsigned long)+0x298>
4001eed4:	e24ddfc9 	sub	sp, sp, #804	; 0x324
4001eed8:	e59fb284 	ldr	fp, [pc, #644]	; 4001f164 <mdns_handle_questions(unsigned long)+0x29c>
4001eedc:	e3a0800c 	mov	r8, #12
4001eee0:	e5873000 	str	r3, [r7]
4001eee4:	e59f327c 	ldr	r3, [pc, #636]	; 4001f168 <mdns_handle_questions(unsigned long)+0x2a0>
4001eee8:	e59f527c 	ldr	r5, [pc, #636]	; 4001f16c <mdns_handle_questions(unsigned long)+0x2a4>
4001eeec:	e1d340b0 	ldrh	r4, [r3]
4001eef0:	e30134e9 	movw	r3, #5353	; 0x14e9
4001eef4:	e58d0008 	str	r0, [sp, #8]
4001eef8:	e0544003 	subs	r4, r4, r3
4001eefc:	e59f326c 	ldr	r3, [pc, #620]	; 4001f170 <mdns_handle_questions(unsigned long)+0x2a8>
4001ef00:	13a04001 	movne	r4, #1
4001ef04:	e5c34000 	strb	r4, [r3]
4001ef08:	e3500001 	cmp	r0, #1
4001ef0c:	13a04000 	movne	r4, #0
4001ef10:	02044001 	andeq	r4, r4, #1
4001ef14:	e59f3258 	ldr	r3, [pc, #600]	; 4001f174 <mdns_handle_questions(unsigned long)+0x2ac>
4001ef18:	e3540000 	cmp	r4, #0
4001ef1c:	13a02001 	movne	r2, #1
4001ef20:	15c32000 	strbne	r2, [r3]
4001ef24:	159f3238 	ldrne	r3, [pc, #568]	; 4001f164 <mdns_handle_questions(unsigned long)+0x29c>
4001ef28:	05c34000 	strbeq	r4, [r3]
4001ef2c:	15933000 	ldrne	r3, [r3]
4001ef30:	11d340b0 	ldrhne	r4, [r3]
4001ef34:	e3a03000 	mov	r3, #0
4001ef38:	e58d3004 	str	r3, [sp, #4]
4001ef3c:	e59d3004 	ldr	r3, [sp, #4]
4001ef40:	e59d2008 	ldr	r2, [sp, #8]
4001ef44:	e1530002 	cmp	r3, r2
4001ef48:	0a00007a 	beq	4001f138 <mdns_handle_questions(unsigned long)+0x270>
4001ef4c:	e59f3224 	ldr	r3, [pc, #548]	; 4001f178 <mdns_handle_questions(unsigned long)+0x2b0>
4001ef50:	e59b0000 	ldr	r0, [fp]
4001ef54:	e5932000 	ldr	r2, [r3]
4001ef58:	e28d3014 	add	r3, sp, #20
4001ef5c:	e0801008 	add	r1, r0, r8
4001ef60:	e0802002 	add	r2, r0, r2
4001ef64:	ebfffe93 	bl	4001e9b8 <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)>
4001ef68:	e3500000 	cmp	r0, #0
4001ef6c:	0a000079 	beq	4001f158 <mdns_handle_questions(unsigned long)+0x290>
4001ef70:	e59b2000 	ldr	r2, [fp]
4001ef74:	e0823008 	add	r3, r2, r8
4001ef78:	e0400003 	sub	r0, r0, r3
4001ef7c:	e28d3f45 	add	r3, sp, #276	; 0x114
4001ef80:	e1c300b0 	strh	r0, [r3]
4001ef84:	e6f80070 	uxtah	r0, r8, r0
4001ef88:	e0823000 	add	r3, r2, r0
4001ef8c:	e2808004 	add	r8, r0, #4
4001ef90:	e1d330b2 	ldrh	r3, [r3, #2]
4001ef94:	e6bf3fb3 	rev16	r3, r3
4001ef98:	e203307f 	and	r3, r3, #127	; 0x7f
4001ef9c:	e3530001 	cmp	r3, #1
4001efa0:	0a000003 	beq	4001efb4 <mdns_handle_questions(unsigned long)+0xec>
4001efa4:	e59d3004 	ldr	r3, [sp, #4]
4001efa8:	e2833001 	add	r3, r3, #1
4001efac:	e58d3004 	str	r3, [sp, #4]
4001efb0:	eaffffe1 	b	4001ef3c <mdns_handle_questions(unsigned long)+0x74>
4001efb4:	e19260b0 	ldrh	r6, [r2, r0]
4001efb8:	e6bf6fb6 	rev16	r6, r6
4001efbc:	e6ff6076 	uxth	r6, r6
4001efc0:	e24690ff 	sub	r9, r6, #255	; 0xff
4001efc4:	e16f9f19 	clz	r9, r9
4001efc8:	e1a092a9 	lsr	r9, r9, #5
4001efcc:	e3560001 	cmp	r6, #1
4001efd0:	11a03009 	movne	r3, r9
4001efd4:	03893001 	orreq	r3, r9, #1
4001efd8:	e3530000 	cmp	r3, #0
4001efdc:	0a000008 	beq	4001f004 <mdns_handle_questions(unsigned long)+0x13c>
4001efe0:	e28d0f46 	add	r0, sp, #280	; 0x118
4001efe4:	ebfffc9e 	bl	4001e264 <create_host_domain(mdns::Domain&)>
4001efe8:	e28d1014 	add	r1, sp, #20
4001efec:	e28d0f46 	add	r0, sp, #280	; 0x118
4001eff0:	ebfffcf8 	bl	4001e3d8 <mdns::operator==(mdns::Domain const&, mdns::Domain const&)>
4001eff4:	e3500000 	cmp	r0, #0
4001eff8:	15973000 	ldrne	r3, [r7]
4001effc:	13833001 	orrne	r3, r3, #1
4001f000:	15873000 	strne	r3, [r7]
4001f004:	e356000c 	cmp	r6, #12
4001f008:	11a03009 	movne	r3, r9
4001f00c:	03893001 	orreq	r3, r9, #1
4001f010:	e58d300c 	str	r3, [sp, #12]
4001f014:	e3530000 	cmp	r3, #0
4001f018:	0a000008 	beq	4001f040 <mdns_handle_questions(unsigned long)+0x178>
4001f01c:	e28d0f46 	add	r0, sp, #280	; 0x118
4001f020:	ebfffc50 	bl	4001e168 <create_reverse_domain(mdns::Domain&)>
4001f024:	e28d1014 	add	r1, sp, #20
4001f028:	e28d0f46 	add	r0, sp, #280	; 0x118
4001f02c:	ebfffce9 	bl	4001e3d8 <mdns::operator==(mdns::Domain const&, mdns::Domain const&)>
4001f030:	e3500000 	cmp	r0, #0
4001f034:	15973000 	ldrne	r3, [r7]
4001f038:	13833002 	orrne	r3, r3, #2
4001f03c:	15873000 	strne	r3, [r7]
4001f040:	e59fa134 	ldr	sl, [pc, #308]	; 4001f17c <mdns_handle_questions(unsigned long)+0x2b4>
4001f044:	e59a200c 	ldr	r2, [sl, #12]
4001f048:	e3520008 	cmp	r2, #8
4001f04c:	ca000034 	bgt	4001f124 <mdns_handle_questions(unsigned long)+0x25c>
4001f050:	e3a03000 	mov	r3, #0
4001f054:	e5853000 	str	r3, [r5]
4001f058:	e59d300c 	ldr	r3, [sp, #12]
4001f05c:	e3530000 	cmp	r3, #0
4001f060:	0a000010 	beq	4001f0a8 <mdns_handle_questions(unsigned long)+0x1e0>
4001f064:	e59f0114 	ldr	r0, [pc, #276]	; 4001f180 <mdns_handle_questions(unsigned long)+0x2b8>
4001f068:	e28d1014 	add	r1, sp, #20
4001f06c:	ebfffcd9 	bl	4001e3d8 <mdns::operator==(mdns::Domain const&, mdns::Domain const&)>
4001f070:	e3500000 	cmp	r0, #0
4001f074:	e1a0100a 	mov	r1, sl
4001f078:	13a02010 	movne	r2, #16
4001f07c:	e28d0f87 	add	r0, sp, #540	; 0x21c
4001f080:	15852000 	strne	r2, [r5]
4001f084:	e3a02000 	mov	r2, #0
4001f088:	ebfffc87 	bl	4001e2ac <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)>
4001f08c:	e28d1014 	add	r1, sp, #20
4001f090:	e28d0f87 	add	r0, sp, #540	; 0x21c
4001f094:	ebfffccf 	bl	4001e3d8 <mdns::operator==(mdns::Domain const&, mdns::Domain const&)>
4001f098:	e3500000 	cmp	r0, #0
4001f09c:	15952000 	ldrne	r2, [r5]
4001f0a0:	13822020 	orrne	r2, r2, #32
4001f0a4:	15852000 	strne	r2, [r5]
4001f0a8:	e3a02001 	mov	r2, #1
4001f0ac:	e1a0100a 	mov	r1, sl
4001f0b0:	e28d0f87 	add	r0, sp, #540	; 0x21c
4001f0b4:	ebfffc7c 	bl	4001e2ac <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)>
4001f0b8:	e28d1014 	add	r1, sp, #20
4001f0bc:	e28d0f87 	add	r0, sp, #540	; 0x21c
4001f0c0:	ebfffcc4 	bl	4001e3d8 <mdns::operator==(mdns::Domain const&, mdns::Domain const&)>
4001f0c4:	e3500000 	cmp	r0, #0
4001f0c8:	0a00000e 	beq	4001f108 <mdns_handle_questions(unsigned long)+0x240>
4001f0cc:	e3560021 	cmp	r6, #33	; 0x21
4001f0d0:	11a02009 	movne	r2, r9
4001f0d4:	03892001 	orreq	r2, r9, #1
4001f0d8:	e3520000 	cmp	r2, #0
4001f0dc:	15952000 	ldrne	r2, [r5]
4001f0e0:	13822040 	orrne	r2, r2, #64	; 0x40
4001f0e4:	15852000 	strne	r2, [r5]
4001f0e8:	e3560010 	cmp	r6, #16
4001f0ec:	11a02009 	movne	r2, r9
4001f0f0:	03892001 	orreq	r2, r9, #1
4001f0f4:	e3520000 	cmp	r2, #0
4001f0f8:	15952000 	ldrne	r2, [r5]
4001f0fc:	13822080 	orrne	r2, r2, #128	; 0x80
4001f100:	15852000 	strne	r2, [r5]
4001f104:	1a000002 	bne	4001f114 <mdns_handle_questions(unsigned long)+0x24c>
4001f108:	e5952000 	ldr	r2, [r5]
4001f10c:	e3520000 	cmp	r2, #0
4001f110:	0a000003 	beq	4001f124 <mdns_handle_questions(unsigned long)+0x25c>
4001f114:	e3a02ee1 	mov	r2, #3600	; 0xe10
4001f118:	e1a01004 	mov	r1, r4
4001f11c:	e1a0000a 	mov	r0, sl
4001f120:	ebfffde5 	bl	4001e8bc <mdns_send_message(mdns::ServiceRecord const&, unsigned short, unsigned long)>
4001f124:	e59f3058 	ldr	r3, [pc, #88]	; 4001f184 <mdns_handle_questions(unsigned long)+0x2bc>
4001f128:	e28aa010 	add	sl, sl, #16
4001f12c:	e153000a 	cmp	r3, sl
4001f130:	1affffc3 	bne	4001f044 <mdns_handle_questions(unsigned long)+0x17c>
4001f134:	eaffff9a 	b	4001efa4 <mdns_handle_questions(unsigned long)+0xdc>
4001f138:	e5973000 	ldr	r3, [r7]
4001f13c:	e3530000 	cmp	r3, #0
4001f140:	0a000004 	beq	4001f158 <mdns_handle_questions(unsigned long)+0x290>
4001f144:	e3a01ee1 	mov	r1, #3600	; 0xe10
4001f148:	e1a00004 	mov	r0, r4
4001f14c:	e28ddfc9 	add	sp, sp, #804	; 0x324
4001f150:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
4001f154:	eafffe57 	b	4001eab8 <mdns_send_answer_local_ip_address(unsigned short, unsigned long)>
4001f158:	e28ddfc9 	add	sp, sp, #804	; 0x324
4001f15c:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4001f160:	4005a058 	andmi	sl, r5, r8, asr r0
4001f164:	4005a2f4 	strdmi	sl, [r5], -r4
4001f168:	4005a2f0 	strdmi	sl, [r5], -r0
4001f16c:	4005a2e0 	andmi	sl, r5, r0, ror #5
4001f170:	4005a054 	andmi	sl, r5, r4, asr r0
4001f174:	4005a25c 	andmi	sl, r5, ip, asr r2
4001f178:	4005a2e4 	andmi	sl, r5, r4, ror #5
4001f17c:	4005a260 	andmi	sl, r5, r0, ror #4
4001f180:	40032678 	andmi	r2, r3, r8, ror r6
4001f184:	4005a2e0 	andmi	sl, r5, r0, ror #5

4001f188 <mdns_input(unsigned char const*, unsigned long, unsigned long, unsigned short)>:
4001f188:	e59fc040 	ldr	ip, [pc, #64]	; 4001f1d0 <mdns_input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x48>
4001f18c:	e3500000 	cmp	r0, #0
4001f190:	0a000006 	beq	4001f1b0 <mdns_input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x28>
4001f194:	e58c0000 	str	r0, [ip]
4001f198:	e59f0034 	ldr	r0, [pc, #52]	; 4001f1d4 <mdns_input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x4c>
4001f19c:	e5801000 	str	r1, [r0]
4001f1a0:	e59f1030 	ldr	r1, [pc, #48]	; 4001f1d8 <mdns_input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x50>
4001f1a4:	e5812000 	str	r2, [r1]
4001f1a8:	e59f202c 	ldr	r2, [pc, #44]	; 4001f1dc <mdns_input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x54>
4001f1ac:	e1c230b0 	strh	r3, [r2]
4001f1b0:	e59c3000 	ldr	r3, [ip]
4001f1b4:	e5d32002 	ldrb	r2, [r3, #2]
4001f1b8:	e3120078 	tst	r2, #120	; 0x78
4001f1bc:	112fff1e 	bxne	lr
4001f1c0:	e1d300b4 	ldrh	r0, [r3, #4]
4001f1c4:	e6bf0fb0 	rev16	r0, r0
4001f1c8:	e6ff0070 	uxth	r0, r0
4001f1cc:	eaffff3d 	b	4001eec8 <mdns_handle_questions(unsigned long)>
4001f1d0:	4005a2f4 	strdmi	sl, [r5], -r4
4001f1d4:	4005a2e4 	andmi	sl, r5, r4, ror #5
4001f1d8:	4005a2ec 	andmi	sl, r5, ip, ror #5
4001f1dc:	4005a2f0 	strdmi	sl, [r5], -r0

4001f1e0 <mdns_init()>:
4001f1e0:	e59f2030 	ldr	r2, [pc, #48]	; 4001f218 <mdns_init()+0x38>
4001f1e4:	e3a03008 	mov	r3, #8
4001f1e8:	e3a01009 	mov	r1, #9
4001f1ec:	e92d4010 	push	{r4, lr}
4001f1f0:	e2533001 	subs	r3, r3, #1
4001f1f4:	e582100c 	str	r1, [r2, #12]
4001f1f8:	e2822010 	add	r2, r2, #16
4001f1fc:	1afffffb 	bne	4001f1f0 <mdns_init()+0x10>
4001f200:	e59f1014 	ldr	r1, [pc, #20]	; 4001f21c <mdns_init()+0x3c>
4001f204:	e30104e9 	movw	r0, #5353	; 0x14e9
4001f208:	eb000c0e 	bl	40022248 <net::udp_begin(unsigned short, void (*)(unsigned char const*, unsigned long, unsigned long, unsigned short))>
4001f20c:	e59f300c 	ldr	r3, [pc, #12]	; 4001f220 <mdns_init()+0x40>
4001f210:	e5830000 	str	r0, [r3]
4001f214:	e8bd8010 	pop	{r4, pc}
4001f218:	4005a260 	andmi	sl, r5, r0, ror #4
4001f21c:	4001f188 	andmi	pc, r1, r8, lsl #3
4001f220:	4005a2e8 	andmi	sl, r5, r8, ror #5

4001f224 <send()>:
4001f224:	e92d4030 	push	{r4, r5, lr}
4001f228:	e30a5368 	movw	r5, #41832	; 0xa368
4001f22c:	e3445005 	movt	r5, #16389	; 0x4005
4001f230:	e3a01000 	mov	r1, #0
4001f234:	e1a00005 	mov	r0, r5
4001f238:	e24dd00c 	sub	sp, sp, #12
4001f23c:	e30a42f8 	movw	r4, #41720	; 0xa2f8
4001f240:	eb0037be 	bl	4002d140 <gettimeofday>
4001f244:	e8951020 	ldm	r5, {r5, ip}
4001f248:	e3444005 	movt	r4, #16389	; 0x4005
4001f24c:	e3071e80 	movw	r1, #32384	; 0x7e80
4001f250:	e34813aa 	movt	r1, #33706	; 0x83aa
4001f254:	e3002b5f 	movw	r2, #2911	; 0xb5f
4001f258:	e0851001 	add	r1, r5, r1
4001f25c:	e300e7bd 	movw	lr, #1981	; 0x7bd
4001f260:	e5841050 	str	r1, [r4, #80]	; 0x50
4001f264:	e6bf1f31 	rev	r1, r1
4001f268:	e5841044 	str	r1, [r4, #68]	; 0x44
4001f26c:	e30a173c 	movw	r1, #42812	; 0xa73c
4001f270:	e3441005 	movt	r1, #16389	; 0x4005
4001f274:	e0020c92 	mul	r2, r2, ip
4001f278:	e5911000 	ldr	r1, [r1]
4001f27c:	e00e0c9e 	mul	lr, lr, ip
4001f280:	e1a02e22 	lsr	r2, r2, #28
4001f284:	e3510000 	cmp	r1, #0
4001f288:	e08225ae 	add	r2, r2, lr, lsr #11
4001f28c:	e30110c6 	movw	r1, #4294	; 0x10c6
4001f290:	e0222c91 	mla	r2, r1, ip, r2
4001f294:	e5940004 	ldr	r0, [r4, #4]
4001f298:	e5842054 	str	r2, [r4, #84]	; 0x54
4001f29c:	e6bf2f32 	rev	r2, r2
4001f2a0:	e5943000 	ldr	r3, [r4]
4001f2a4:	e5842048 	str	r2, [r4, #72]	; 0x48
4001f2a8:	0a000004 	beq	4001f2c0 <send()+0x9c>
4001f2ac:	e3a0207b 	mov	r2, #123	; 0x7b
4001f2b0:	e284101c 	add	r1, r4, #28
4001f2b4:	e58d2000 	str	r2, [sp]
4001f2b8:	e3a02030 	mov	r2, #48	; 0x30
4001f2bc:	eb000c2d 	bl	40022378 <net::udp_send(long, unsigned char const*, unsigned long, unsigned long, unsigned short)>
4001f2c0:	e3a00002 	mov	r0, #2
4001f2c4:	e3a03003 	mov	r3, #3
4001f2c8:	e584300c 	str	r3, [r4, #12]
4001f2cc:	e5840018 	str	r0, [r4, #24]
4001f2d0:	e28dd00c 	add	sp, sp, #12
4001f2d4:	e8bd4030 	pop	{r4, r5, lr}
4001f2d8:	eaff8ed3 	b	40002e2c <ntpclient::display_status(ntp::Status)>

4001f2dc <ntp_client_timer(long)>:
4001f2dc:	e92d4010 	push	{r4, lr}
4001f2e0:	e30a42f8 	movw	r4, #41720	; 0xa2f8
4001f2e4:	e3444005 	movt	r4, #16389	; 0x4005
4001f2e8:	e5943018 	ldr	r3, [r4, #24]
4001f2ec:	e3530002 	cmp	r3, #2
4001f2f0:	0a000008 	beq	4001f318 <ntp_client_timer(long)+0x3c>
4001f2f4:	e5943010 	ldr	r3, [r4, #16]
4001f2f8:	e3530001 	cmp	r3, #1
4001f2fc:	8a000002 	bhi	4001f30c <ntp_client_timer(long)+0x30>
4001f300:	18bd8010 	popne	{r4, pc}
4001f304:	e8bd4010 	pop	{r4, lr}
4001f308:	eaffffc5 	b	4001f224 <send()>
4001f30c:	e2433001 	sub	r3, r3, #1
4001f310:	e5843010 	str	r3, [r4, #16]
4001f314:	e8bd8010 	pop	{r4, pc}
4001f318:	e594300c 	ldr	r3, [r4, #12]
4001f31c:	e3530001 	cmp	r3, #1
4001f320:	8a000005 	bhi	4001f33c <ntp_client_timer(long)+0x60>
4001f324:	18bd8010 	popne	{r4, pc}
4001f328:	e3a00004 	mov	r0, #4
4001f32c:	e5840018 	str	r0, [r4, #24]
4001f330:	ebff8ebd 	bl	40002e2c <ntpclient::display_status(ntp::Status)>
4001f334:	e3a03008 	mov	r3, #8
4001f338:	eafffff4 	b	4001f310 <ntp_client_timer(long)+0x34>
4001f33c:	e2433001 	sub	r3, r3, #1
4001f340:	e584300c 	str	r3, [r4, #12]
4001f344:	e8bd8010 	pop	{r4, pc}

4001f348 <input(unsigned char const*, unsigned long, unsigned long, unsigned short)>:
4001f348:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4001f34c:	e30a4368 	movw	r4, #41832	; 0xa368
4001f350:	e3444005 	movt	r4, #16389	; 0x4005
4001f354:	e3a01000 	mov	r1, #0
4001f358:	e24dd008 	sub	sp, sp, #8
4001f35c:	e1a09000 	mov	r9, r0
4001f360:	e1a00004 	mov	r0, r4
4001f364:	e1a05002 	mov	r5, r2
4001f368:	e3006b5f 	movw	r6, #2911	; 0xb5f
4001f36c:	eb003773 	bl	4002d140 <gettimeofday>
4001f370:	e8945000 	ldm	r4, {ip, lr}
4001f374:	e30a42f8 	movw	r4, #41720	; 0xa2f8
4001f378:	e30017bd 	movw	r1, #1981	; 0x7bd
4001f37c:	e3444005 	movt	r4, #16389	; 0x4005
4001f380:	e3078e80 	movw	r8, #32384	; 0x7e80
4001f384:	e0060e96 	mul	r6, r6, lr
4001f388:	e0010e91 	mul	r1, r1, lr
4001f38c:	e1a06e26 	lsr	r6, r6, #28
4001f390:	e5943000 	ldr	r3, [r4]
4001f394:	e08665a1 	add	r6, r6, r1, lsr #11
4001f398:	e30110c6 	movw	r1, #4294	; 0x10c6
4001f39c:	e34883aa 	movt	r8, #33706	; 0x83aa
4001f3a0:	e0266e91 	mla	r6, r1, lr, r6
4001f3a4:	e1530005 	cmp	r3, r5
4001f3a8:	e08c8008 	add	r8, ip, r8
4001f3ac:	e5848068 	str	r8, [r4, #104]	; 0x68
4001f3b0:	e584606c 	str	r6, [r4, #108]	; 0x6c
4001f3b4:	1a0000b1 	bne	4001f680 <input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x338>
4001f3b8:	e5995020 	ldr	r5, [r9, #32]
4001f3bc:	e6bf5f35 	rev	r5, r5
4001f3c0:	e5845058 	str	r5, [r4, #88]	; 0x58
4001f3c4:	e599a024 	ldr	sl, [r9, #36]	; 0x24
4001f3c8:	e6bfaf3a 	rev	sl, sl
4001f3cc:	e584a05c 	str	sl, [r4, #92]	; 0x5c
4001f3d0:	e5992028 	ldr	r2, [r9, #40]	; 0x28
4001f3d4:	e6bf2f32 	rev	r2, r2
4001f3d8:	e5842060 	str	r2, [r4, #96]	; 0x60
4001f3dc:	e599102c 	ldr	r1, [r9, #44]	; 0x2c
4001f3e0:	e6bf7f31 	rev	r7, r1
4001f3e4:	e5847064 	str	r7, [r4, #100]	; 0x64
4001f3e8:	e5d93000 	ldrb	r3, [r9]
4001f3ec:	e3130004 	tst	r3, #4
4001f3f0:	0a00005c 	beq	4001f568 <input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x220>
4001f3f4:	e5941054 	ldr	r1, [r4, #84]	; 0x54
4001f3f8:	e30092f7 	movw	r9, #759	; 0x2f7
4001f3fc:	e5943050 	ldr	r3, [r4, #80]	; 0x50
4001f400:	e1a0052a 	lsr	r0, sl, #10
4001f404:	e0455003 	sub	r5, r5, r3
4001f408:	e2800902 	add	r0, r0, #32768	; 0x8000
4001f40c:	e1a03521 	lsr	r3, r1, #10
4001f410:	e1a00820 	lsr	r0, r0, #16
4001f414:	e2833902 	add	r3, r3, #32768	; 0x8000
4001f418:	e0000099 	mul	r0, r9, r0
4001f41c:	e1a03823 	lsr	r3, r3, #16
4001f420:	e0030399 	mul	r3, r9, r3
4001f424:	e060a62a 	rsb	sl, r0, sl, lsr #12
4001f428:	e3040240 	movw	r0, #16960	; 0x4240
4001f42c:	e0633621 	rsb	r3, r3, r1, lsr #12
4001f430:	e30d1e83 	movw	r1, #56963	; 0xde83
4001f434:	e04aa003 	sub	sl, sl, r3
4001f438:	e344131b 	movt	r1, #17179	; 0x431b
4001f43c:	e0c93a91 	smull	r3, r9, r1, sl
4001f440:	e1a01fca 	asr	r1, sl, #31
4001f444:	e0611949 	rsb	r1, r1, r9, asr #18
4001f448:	e0855001 	add	r5, r5, r1
4001f44c:	e340000f 	movt	r0, #15
4001f450:	e3550000 	cmp	r5, #0
4001f454:	e060a190 	mls	r0, r0, r1, sl
4001f458:	da000044 	ble	4001f570 <input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x228>
4001f45c:	e3500000 	cmp	r0, #0
4001f460:	b280093d 	addlt	r0, r0, #999424	; 0xf4000
4001f464:	b2455001 	sublt	r5, r5, #1
4001f468:	b2800d09 	addlt	r0, r0, #576	; 0x240
4001f46c:	ea000047 	b	4001f590 <input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x248>
4001f470:	e1a01fa2 	lsr	r1, r2, #31
4001f474:	e3530000 	cmp	r3, #0
4001f478:	d3a01000 	movle	r1, #0
4001f47c:	c2011001 	andgt	r1, r1, #1
4001f480:	e3510000 	cmp	r1, #0
4001f484:	1243393d 	subne	r3, r3, #999424	; 0xf4000
4001f488:	12822001 	addne	r2, r2, #1
4001f48c:	12433d09 	subne	r3, r3, #576	; 0x240
4001f490:	e0956002 	adds	r6, r5, r2
4001f494:	e1a02fc2 	asr	r2, r2, #31
4001f498:	e0a22fc5 	adc	r2, r2, r5, asr #31
4001f49c:	e1a05fc3 	asr	r5, r3, #31
4001f4a0:	e1a01fa2 	lsr	r1, r2, #31
4001f4a4:	e0911006 	adds	r1, r1, r6
4001f4a8:	e2a22000 	adc	r2, r2, #0
4001f4ac:	e0903003 	adds	r3, r0, r3
4001f4b0:	e0a50fc0 	adc	r0, r5, r0, asr #31
4001f4b4:	e1a010a1 	lsr	r1, r1, #1
4001f4b8:	e1812f82 	orr	r2, r1, r2, lsl #31
4001f4bc:	e1a01fa0 	lsr	r1, r0, #31
4001f4c0:	e0913003 	adds	r3, r1, r3
4001f4c4:	e2a00000 	adc	r0, r0, #0
4001f4c8:	e3520000 	cmp	r2, #0
4001f4cc:	e1a030a3 	lsr	r3, r3, #1
4001f4d0:	e1833f80 	orr	r3, r3, r0, lsl #31
4001f4d4:	da00005b 	ble	4001f648 <input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x300>
4001f4d8:	e3530000 	cmp	r3, #0
4001f4dc:	ba000063 	blt	4001f670 <input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x328>
4001f4e0:	e1a06003 	mov	r6, r3
4001f4e4:	e1a05002 	mov	r5, r2
4001f4e8:	e08e3003 	add	r3, lr, r3
4001f4ec:	e3040240 	movw	r0, #16960	; 0x4240
4001f4f0:	e340000f 	movt	r0, #15
4001f4f4:	e1530000 	cmp	r3, r0
4001f4f8:	e08c2002 	add	r2, ip, r2
4001f4fc:	e1cd20f0 	strd	r2, [sp]
4001f500:	ba00003f 	blt	4001f604 <input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x2bc>
4001f504:	e30dee83 	movw	lr, #56963	; 0xde83
4001f508:	e344e31b 	movt	lr, #17179	; 0x431b
4001f50c:	e0cc139e 	smull	r1, ip, lr, r3
4001f510:	e1a0efc3 	asr	lr, r3, #31
4001f514:	e06ee94c 	rsb	lr, lr, ip, asr #18
4001f518:	e0633e90 	mls	r3, r0, lr, r3
4001f51c:	e08ee002 	add	lr, lr, r2
4001f520:	e58de000 	str	lr, [sp]
4001f524:	e58d3004 	str	r3, [sp, #4]
4001f528:	e3a01000 	mov	r1, #0
4001f52c:	e1a0000d 	mov	r0, sp
4001f530:	eb003748 	bl	4002d258 <settimeofday>
4001f534:	e3550000 	cmp	r5, #0
4001f538:	1a000004 	bne	4001f550 <input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x208>
4001f53c:	e2866ff9 	add	r6, r6, #996	; 0x3e4
4001f540:	e30037cc 	movw	r3, #1996	; 0x7cc
4001f544:	e2866002 	add	r6, r6, #2
4001f548:	e1560003 	cmp	r6, r3
4001f54c:	9a000050 	bls	4001f694 <input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x34c>
4001f550:	e3a00001 	mov	r0, #1
4001f554:	e5840018 	str	r0, [r4, #24]
4001f558:	ebff8e33 	bl	40002e2c <ntpclient::display_status(ntp::Status)>
4001f55c:	eddf0b57 	vldr	d16, [pc, #348]	; 4001f6c0 <input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x378>
4001f560:	e59f3160 	ldr	r3, [pc, #352]	; 4001f6c8 <input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x380>
4001f564:	f443078f 	vst1.32	{d16}, [r3]
4001f568:	e28dd008 	add	sp, sp, #8
4001f56c:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4001f570:	e1a03fa5 	lsr	r3, r5, #31
4001f574:	e3500000 	cmp	r0, #0
4001f578:	d3a03000 	movle	r3, #0
4001f57c:	c2033001 	andgt	r3, r3, #1
4001f580:	e3530000 	cmp	r3, #0
4001f584:	1240093d 	subne	r0, r0, #999424	; 0xf4000
4001f588:	12855001 	addne	r5, r5, #1
4001f58c:	12400d09 	subne	r0, r0, #576	; 0x240
4001f590:	e1a03526 	lsr	r3, r6, #10
4001f594:	e1a01527 	lsr	r1, r7, #10
4001f598:	e2833902 	add	r3, r3, #32768	; 0x8000
4001f59c:	e0422008 	sub	r2, r2, r8
4001f5a0:	e2811902 	add	r1, r1, #32768	; 0x8000
4001f5a4:	e1a03823 	lsr	r3, r3, #16
4001f5a8:	e30082f7 	movw	r8, #759	; 0x2f7
4001f5ac:	e1a01821 	lsr	r1, r1, #16
4001f5b0:	e0010198 	mul	r1, r8, r1
4001f5b4:	e0030398 	mul	r3, r8, r3
4001f5b8:	e0611627 	rsb	r1, r1, r7, lsr #12
4001f5bc:	e0633626 	rsb	r3, r3, r6, lsr #12
4001f5c0:	e0411003 	sub	r1, r1, r3
4001f5c4:	e30d3e83 	movw	r3, #56963	; 0xde83
4001f5c8:	e344331b 	movt	r3, #17179	; 0x431b
4001f5cc:	e0c63193 	smull	r3, r6, r3, r1
4001f5d0:	e1a03fc1 	asr	r3, r1, #31
4001f5d4:	e0633946 	rsb	r3, r3, r6, asr #18
4001f5d8:	e3046240 	movw	r6, #16960	; 0x4240
4001f5dc:	e0822003 	add	r2, r2, r3
4001f5e0:	e340600f 	movt	r6, #15
4001f5e4:	e3520000 	cmp	r2, #0
4001f5e8:	e0631396 	mls	r3, r6, r3, r1
4001f5ec:	daffff9f 	ble	4001f470 <input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x128>
4001f5f0:	e3530000 	cmp	r3, #0
4001f5f4:	b283393d 	addlt	r3, r3, #999424	; 0xf4000
4001f5f8:	b2422001 	sublt	r2, r2, #1
4001f5fc:	b2833d09 	addlt	r3, r3, #576	; 0x240
4001f600:	eaffffa2 	b	4001f490 <input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x148>
4001f604:	e3530000 	cmp	r3, #0
4001f608:	aaffffc6 	bge	4001f528 <input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x1e0>
4001f60c:	e30d1e83 	movw	r1, #56963	; 0xde83
4001f610:	e263c000 	rsb	ip, r3, #0
4001f614:	e344131b 	movt	r1, #17179	; 0x431b
4001f618:	e08e7c91 	umull	r7, lr, r1, ip
4001f61c:	e0c17391 	smull	r7, r1, r1, r3
4001f620:	e1a03fc3 	asr	r3, r3, #31
4001f624:	e0433941 	sub	r3, r3, r1, asr #18
4001f628:	e1a0192e 	lsr	r1, lr, #18
4001f62c:	e2833001 	add	r3, r3, #1
4001f630:	e06cc190 	mls	ip, r0, r1, ip
4001f634:	e0422003 	sub	r2, r2, r3
4001f638:	e040000c 	sub	r0, r0, ip
4001f63c:	e58d0004 	str	r0, [sp, #4]
4001f640:	e58d2000 	str	r2, [sp]
4001f644:	eaffffb7 	b	4001f528 <input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x1e0>
4001f648:	e1a01fa2 	lsr	r1, r2, #31
4001f64c:	e3530000 	cmp	r3, #0
4001f650:	d3a01000 	movle	r1, #0
4001f654:	c2011001 	andgt	r1, r1, #1
4001f658:	e3510000 	cmp	r1, #0
4001f65c:	0affff9f 	beq	4001f4e0 <input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x198>
4001f660:	e243693d 	sub	r6, r3, #999424	; 0xf4000
4001f664:	e2825001 	add	r5, r2, #1
4001f668:	e2466d09 	sub	r6, r6, #576	; 0x240
4001f66c:	eaffff9d 	b	4001f4e8 <input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x1a0>
4001f670:	e283693d 	add	r6, r3, #999424	; 0xf4000
4001f674:	e2425001 	sub	r5, r2, #1
4001f678:	e2866d09 	add	r6, r6, #576	; 0x240
4001f67c:	eaffff99 	b	4001f4e8 <input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x1a0>
4001f680:	e3a00004 	mov	r0, #4
4001f684:	e5840018 	str	r0, [r4, #24]
4001f688:	e28dd008 	add	sp, sp, #8
4001f68c:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
4001f690:	eaff8de5 	b	40002e2c <ntpclient::display_status(ntp::Status)>
4001f694:	e3a00003 	mov	r0, #3
4001f698:	e5840018 	str	r0, [r4, #24]
4001f69c:	ebff8de2 	bl	40002e2c <ntpclient::display_status(ntp::Status)>
4001f6a0:	e5943014 	ldr	r3, [r4, #20]
4001f6a4:	e2833001 	add	r3, r3, #1
4001f6a8:	e5843014 	str	r3, [r4, #20]
4001f6ac:	e3530004 	cmp	r3, #4
4001f6b0:	03a03a01 	moveq	r3, #4096	; 0x1000
4001f6b4:	05843010 	streq	r3, [r4, #16]
4001f6b8:	eaffffaa 	b	4001f568 <input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x220>
4001f6bc:	e320f000 	nop	{0}
4001f6c0:	00000008 	andeq	r0, r0, r8
4001f6c4:	00000000 	andeq	r0, r0, r0
4001f6c8:	4005a308 	andmi	sl, r5, r8, lsl #6

4001f6cc <ntp_client_init()>:
4001f6cc:	e92d4010 	push	{r4, lr}
4001f6d0:	e30a42f8 	movw	r4, #41720	; 0xa2f8
4001f6d4:	f2c00050 	vmov.i32	q8, #0	; 0x00000000
4001f6d8:	e3444005 	movt	r4, #16389	; 0x4005
4001f6dc:	e24dd060 	sub	sp, sp, #96	; 0x60
4001f6e0:	e1a03004 	mov	r3, r4
4001f6e4:	e2842030 	add	r2, r4, #48	; 0x30
4001f6e8:	e2841020 	add	r1, r4, #32
4001f6ec:	e1a0000d 	mov	r0, sp
4001f6f0:	f4430a0d 	vst1.8	{d16-d17}, [r3]!
4001f6f4:	f4420a0f 	vst1.8	{d16-d17}, [r2]
4001f6f8:	e2842050 	add	r2, r4, #80	; 0x50
4001f6fc:	f4410a0f 	vst1.8	{d16-d17}, [r1]
4001f700:	f4430a0f 	vst1.8	{d16-d17}, [r3]
4001f704:	f4420a0f 	vst1.8	{d16-d17}, [r2]
4001f708:	e2841040 	add	r1, r4, #64	; 0x40
4001f70c:	e2842060 	add	r2, r4, #96	; 0x60
4001f710:	e3053641 	movw	r3, #22081	; 0x5641
4001f714:	e3403053 	movt	r3, #83	; 0x53
4001f718:	f4410a0f 	vst1.8	{d16-d17}, [r1]
4001f71c:	f4420a0f 	vst1.8	{d16-d17}, [r2]
4001f720:	e5843028 	str	r3, [r4, #40]	; 0x28
4001f724:	e3e01000 	mvn	r1, #0
4001f728:	e5841004 	str	r1, [r4, #4]
4001f72c:	e3a03003 	mov	r3, #3
4001f730:	e5c4301e 	strb	r3, [r4, #30]
4001f734:	e3a02023 	mov	r2, #35	; 0x23
4001f738:	e5c4201c 	strb	r2, [r4, #28]
4001f73c:	eb000ba0 	bl	400225c4 <NetworkParams::NetworkParams()>
4001f740:	e1a0000d 	mov	r0, sp
4001f744:	eb000ba7 	bl	400225e8 <NetworkParams::Load()>
4001f748:	e59d3000 	ldr	r3, [sp]
4001f74c:	e2133040 	ands	r3, r3, #64	; 0x40
4001f750:	05843000 	streq	r3, [r4]
4001f754:	0a000005 	beq	4001f770 <ntp_client_init()+0xa4>
4001f758:	e59d3055 	ldr	r3, [sp, #85]	; 0x55
4001f75c:	e5843000 	str	r3, [r4]
4001f760:	e3530000 	cmp	r3, #0
4001f764:	0a000001 	beq	4001f770 <ntp_client_init()+0xa4>
4001f768:	e28dd060 	add	sp, sp, #96	; 0x60
4001f76c:	e8bd8010 	pop	{r4, pc}
4001f770:	e3a03000 	mov	r3, #0
4001f774:	e5843018 	str	r3, [r4, #24]
4001f778:	e28dd060 	add	sp, sp, #96	; 0x60
4001f77c:	e8bd8010 	pop	{r4, pc}

4001f780 <ntp_client_start()>:
4001f780:	e92d4010 	push	{r4, lr}
4001f784:	e30a42f8 	movw	r4, #41720	; 0xa2f8
4001f788:	e3444005 	movt	r4, #16389	; 0x4005
4001f78c:	e5943018 	ldr	r3, [r4, #24]
4001f790:	e3530005 	cmp	r3, #5
4001f794:	08bd8010 	popeq	{r4, pc}
4001f798:	e5940000 	ldr	r0, [r4]
4001f79c:	e3500000 	cmp	r0, #0
4001f7a0:	0a00000e 	beq	4001f7e0 <ntp_client_start()+0x60>
4001f7a4:	e30f1348 	movw	r1, #62280	; 0xf348
4001f7a8:	e3a0007b 	mov	r0, #123	; 0x7b
4001f7ac:	e3441001 	movt	r1, #16385	; 0x4001
4001f7b0:	eb000aa4 	bl	40022248 <net::udp_begin(unsigned short, void (*)(unsigned char const*, unsigned long, unsigned long, unsigned short))>
4001f7b4:	e5840004 	str	r0, [r4, #4]
4001f7b8:	e3a00001 	mov	r0, #1
4001f7bc:	e5840018 	str	r0, [r4, #24]
4001f7c0:	ebff8d99 	bl	40002e2c <ntpclient::display_status(ntp::Status)>
4001f7c4:	e30f12dc 	movw	r1, #62172	; 0xf2dc
4001f7c8:	e3a00ffa 	mov	r0, #1000	; 0x3e8
4001f7cc:	e3441001 	movt	r1, #16385	; 0x4001
4001f7d0:	eb0020d2 	bl	40027b20 <SoftwareTimerAdd(unsigned long, void (*)(long))>
4001f7d4:	e5840008 	str	r0, [r4, #8]
4001f7d8:	e8bd4010 	pop	{r4, lr}
4001f7dc:	eafffe90 	b	4001f224 <send()>
4001f7e0:	e5840018 	str	r0, [r4, #24]
4001f7e4:	e8bd4010 	pop	{r4, lr}
4001f7e8:	eaff8d8f 	b	40002e2c <ntpclient::display_status(ntp::Status)>

4001f7ec <ntp_client_stop(bool)>:
4001f7ec:	e92d4070 	push	{r4, r5, r6, lr}
4001f7f0:	e2504000 	subs	r4, r0, #0
4001f7f4:	1a00000e 	bne	4001f834 <ntp_client_stop(bool)+0x48>
4001f7f8:	e30a52f8 	movw	r5, #41720	; 0xa2f8
4001f7fc:	e3445005 	movt	r5, #16389	; 0x4005
4001f800:	e5953018 	ldr	r3, [r5, #24]
4001f804:	e3530000 	cmp	r3, #0
4001f808:	08bd8070 	popeq	{r4, r5, r6, pc}
4001f80c:	e2850008 	add	r0, r5, #8
4001f810:	eb0020dd 	bl	40027b8c <SoftwareTimerDelete(long&)>
4001f814:	e3a0007b 	mov	r0, #123	; 0x7b
4001f818:	eb000aa2 	bl	400222a8 <net::udp_end(unsigned short)>
4001f81c:	e5854018 	str	r4, [r5, #24]
4001f820:	e3e03000 	mvn	r3, #0
4001f824:	e5853004 	str	r3, [r5, #4]
4001f828:	e1a00004 	mov	r0, r4
4001f82c:	e8bd4070 	pop	{r4, r5, r6, lr}
4001f830:	eaff8d7d 	b	40002e2c <ntpclient::display_status(ntp::Status)>
4001f834:	e30a42f8 	movw	r4, #41720	; 0xa2f8
4001f838:	e3a00005 	mov	r0, #5
4001f83c:	e3444005 	movt	r4, #16389	; 0x4005
4001f840:	e5840018 	str	r0, [r4, #24]
4001f844:	ebff8d78 	bl	40002e2c <ntpclient::display_status(ntp::Status)>
4001f848:	e5943018 	ldr	r3, [r4, #24]
4001f84c:	e3530000 	cmp	r3, #0
4001f850:	08bd8070 	popeq	{r4, r5, r6, pc}
4001f854:	e2840008 	add	r0, r4, #8
4001f858:	eb0020cb 	bl	40027b8c <SoftwareTimerDelete(long&)>
4001f85c:	e3a0007b 	mov	r0, #123	; 0x7b
4001f860:	eb000a90 	bl	400222a8 <net::udp_end(unsigned short)>
4001f864:	e3e03000 	mvn	r3, #0
4001f868:	e5843004 	str	r3, [r4, #4]
4001f86c:	e8bd8070 	pop	{r4, r5, r6, pc}

4001f870 <ntp_client_get_status()>:
4001f870:	e30a32f8 	movw	r3, #41720	; 0xa2f8
4001f874:	e3443005 	movt	r3, #16389	; 0x4005
4001f878:	e5930018 	ldr	r0, [r3, #24]
4001f87c:	e12fff1e 	bx	lr

4001f880 <strncmp>:
4001f880:	e0802002 	add	r2, r0, r2
4001f884:	e1a03000 	mov	r3, r0
4001f888:	e2411001 	sub	r1, r1, #1
4001f88c:	e1530002 	cmp	r3, r2
4001f890:	0a000009 	beq	4001f8bc <strncmp+0x3c>
4001f894:	e5d30000 	ldrb	r0, [r3]
4001f898:	e5f1c001 	ldrb	ip, [r1, #1]!
4001f89c:	e150000c 	cmp	r0, ip
4001f8a0:	0a000001 	beq	4001f8ac <strncmp+0x2c>
4001f8a4:	e040000c 	sub	r0, r0, ip
4001f8a8:	e12fff1e 	bx	lr
4001f8ac:	e3500000 	cmp	r0, #0
4001f8b0:	012fff1e 	bxeq	lr
4001f8b4:	e2833001 	add	r3, r3, #1
4001f8b8:	eafffff3 	b	4001f88c <strncmp+0xc>
4001f8bc:	e3a00000 	mov	r0, #0
4001f8c0:	e12fff1e 	bx	lr

4001f8c4 <TFTPDaemon::~TFTPDaemon()>:
4001f8c4:	e59f3024 	ldr	r3, [pc, #36]	; 4001f8f0 <TFTPDaemon::~TFTPDaemon()+0x2c>
4001f8c8:	e92d4010 	push	{r4, lr}
4001f8cc:	e1a04000 	mov	r4, r0
4001f8d0:	e5803000 	str	r3, [r0]
4001f8d4:	e1d002b0 	ldrh	r0, [r0, #32]
4001f8d8:	eb000a72 	bl	400222a8 <net::udp_end(unsigned short)>
4001f8dc:	e59f3010 	ldr	r3, [pc, #16]	; 4001f8f4 <TFTPDaemon::~TFTPDaemon()+0x30>
4001f8e0:	e3a02000 	mov	r2, #0
4001f8e4:	e1a00004 	mov	r0, r4
4001f8e8:	e5832000 	str	r2, [r3]
4001f8ec:	e8bd8010 	pop	{r4, pc}
4001f8f0:	40032810 	andmi	r2, r3, r0, lsl r8
4001f8f4:	4005a370 	andmi	sl, r5, r0, ror r3

4001f8f8 <TFTPDaemon::Init()>:
4001f8f8:	e92d4010 	push	{r4, lr}
4001f8fc:	e1a04000 	mov	r4, r0
4001f900:	e1d002b0 	ldrh	r0, [r0, #32]
4001f904:	e3500000 	cmp	r0, #0
4001f908:	0a000002 	beq	4001f918 <TFTPDaemon::Init()+0x20>
4001f90c:	eb000a65 	bl	400222a8 <net::udp_end(unsigned short)>
4001f910:	e3e03000 	mvn	r3, #0
4001f914:	e5843008 	str	r3, [r4, #8]
4001f918:	e59f1024 	ldr	r1, [pc, #36]	; 4001f944 <TFTPDaemon::Init()+0x4c>
4001f91c:	e3a00045 	mov	r0, #69	; 0x45
4001f920:	eb000a48 	bl	40022248 <net::udp_begin(unsigned short, void (*)(unsigned char const*, unsigned long, unsigned long, unsigned short))>
4001f924:	e5840008 	str	r0, [r4, #8]
4001f928:	e3a03001 	mov	r3, #1
4001f92c:	e5843004 	str	r3, [r4, #4]
4001f930:	e3a03045 	mov	r3, #69	; 0x45
4001f934:	e5843020 	str	r3, [r4, #32]
4001f938:	e3a03000 	mov	r3, #0
4001f93c:	e5c43024 	strb	r3, [r4, #36]	; 0x24
4001f940:	e8bd8010 	pop	{r4, pc}
4001f944:	4001fe58 	andmi	pc, r1, r8, asr lr	; <UNPREDICTABLE>

4001f948 <TFTPDaemon::TFTPDaemon()>:
4001f948:	e59f3060 	ldr	r3, [pc, #96]	; 4001f9b0 <TFTPDaemon::TFTPDaemon()+0x68>
4001f94c:	e3e02000 	mvn	r2, #0
4001f950:	e92d4070 	push	{r4, r5, r6, lr}
4001f954:	e1a04000 	mov	r4, r0
4001f958:	e59f5054 	ldr	r5, [pc, #84]	; 4001f9b4 <TFTPDaemon::TFTPDaemon()+0x6c>
4001f95c:	e5803000 	str	r3, [r0]
4001f960:	e3a03000 	mov	r3, #0
4001f964:	e5803004 	str	r3, [r0, #4]
4001f968:	e1c020f8 	strd	r2, [r0, #8]
4001f96c:	e5803010 	str	r3, [r0, #16]
4001f970:	e5803014 	str	r3, [r0, #20]
4001f974:	e5803018 	str	r3, [r0, #24]
4001f978:	e580301c 	str	r3, [r0, #28]
4001f97c:	e5803020 	str	r3, [r0, #32]
4001f980:	e5c03024 	strb	r3, [r0, #36]	; 0x24
4001f984:	e5950000 	ldr	r0, [r5]
4001f988:	e1500003 	cmp	r0, r3
4001f98c:	0a000002 	beq	4001f99c <TFTPDaemon::TFTPDaemon()+0x54>
4001f990:	e5903000 	ldr	r3, [r0]
4001f994:	e593301c 	ldr	r3, [r3, #28]
4001f998:	e12fff33 	blx	r3
4001f99c:	e5854000 	str	r4, [r5]
4001f9a0:	e1a00004 	mov	r0, r4
4001f9a4:	ebffffd3 	bl	4001f8f8 <TFTPDaemon::Init()>
4001f9a8:	e1a00004 	mov	r0, r4
4001f9ac:	e8bd8070 	pop	{r4, r5, r6, pc}
4001f9b0:	40032810 	andmi	r2, r3, r0, lsl r8
4001f9b4:	4005a370 	andmi	sl, r5, r0, ror r3

4001f9b8 <TFTPDaemon::SendError(unsigned short, char const*)>:
4001f9b8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4001f9bc:	e24dd094 	sub	sp, sp, #148	; 0x94
4001f9c0:	e6bf1fb1 	rev16	r1, r1
4001f9c4:	e3a03c05 	mov	r3, #1280	; 0x500
4001f9c8:	e1cd30bc 	strh	r3, [sp, #12]
4001f9cc:	e1a0c000 	mov	ip, r0
4001f9d0:	e1cd10be 	strh	r1, [sp, #14]
4001f9d4:	e2422001 	sub	r2, r2, #1
4001f9d8:	e3a0107f 	mov	r1, #127	; 0x7f
4001f9dc:	e28d3010 	add	r3, sp, #16
4001f9e0:	e5f20001 	ldrb	r0, [r2, #1]!
4001f9e4:	e3500000 	cmp	r0, #0
4001f9e8:	1a000004 	bne	4001fa00 <TFTPDaemon::SendError(unsigned short, char const*)+0x48>
4001f9ec:	e0831001 	add	r1, r3, r1
4001f9f0:	e1510003 	cmp	r1, r3
4001f9f4:	0a000004 	beq	4001fa0c <TFTPDaemon::SendError(unsigned short, char const*)+0x54>
4001f9f8:	e4c30001 	strb	r0, [r3], #1
4001f9fc:	eafffffb 	b	4001f9f0 <TFTPDaemon::SendError(unsigned short, char const*)+0x38>
4001fa00:	e4c30001 	strb	r0, [r3], #1
4001fa04:	e2511001 	subs	r1, r1, #1
4001fa08:	1afffff4 	bne	4001f9e0 <TFTPDaemon::SendError(unsigned short, char const*)+0x28>
4001fa0c:	e59f102c 	ldr	r1, [pc, #44]	; 4001fa40 <TFTPDaemon::SendError(unsigned short, char const*)+0x88>
4001fa10:	e59c0008 	ldr	r0, [ip, #8]
4001fa14:	e5911000 	ldr	r1, [r1]
4001fa18:	e59c3010 	ldr	r3, [ip, #16]
4001fa1c:	e1dc22b0 	ldrh	r2, [ip, #32]
4001fa20:	e3510000 	cmp	r1, #0
4001fa24:	0a000003 	beq	4001fa38 <TFTPDaemon::SendError(unsigned short, char const*)+0x80>
4001fa28:	e58d2000 	str	r2, [sp]
4001fa2c:	e28d100c 	add	r1, sp, #12
4001fa30:	e3a02084 	mov	r2, #132	; 0x84
4001fa34:	eb000a4f 	bl	40022378 <net::udp_send(long, unsigned char const*, unsigned long, unsigned long, unsigned short)>
4001fa38:	e28dd094 	add	sp, sp, #148	; 0x94
4001fa3c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4001fa40:	4005a73c 	andmi	sl, r5, ip, lsr r7

4001fa44 <TFTPDaemon::DoRead()>:
4001fa44:	e5903004 	ldr	r3, [r0, #4]
4001fa48:	e92d4073 	push	{r0, r1, r4, r5, r6, lr}
4001fa4c:	e3530002 	cmp	r3, #2
4001fa50:	e1a04000 	mov	r4, r0
4001fa54:	1a00001d 	bne	4001fad0 <TFTPDaemon::DoRead()+0x8c>
4001fa58:	e5903000 	ldr	r3, [r0]
4001fa5c:	e3a02c02 	mov	r2, #512	; 0x200
4001fa60:	e590500c 	ldr	r5, [r0, #12]
4001fa64:	e5936014 	ldr	r6, [r3, #20]
4001fa68:	e1d032b2 	ldrh	r3, [r0, #34]	; 0x22
4001fa6c:	e2851004 	add	r1, r5, #4
4001fa70:	e2833001 	add	r3, r3, #1
4001fa74:	e6ff3073 	uxth	r3, r3
4001fa78:	e1c032b2 	strh	r3, [r0, #34]	; 0x22
4001fa7c:	e12fff36 	blx	r6
4001fa80:	e5840018 	str	r0, [r4, #24]
4001fa84:	e3a03000 	mov	r3, #0
4001fa88:	e5c53000 	strb	r3, [r5]
4001fa8c:	e3a03003 	mov	r3, #3
4001fa90:	e5c53001 	strb	r3, [r5, #1]
4001fa94:	e3500c02 	cmp	r0, #512	; 0x200
4001fa98:	e1d432b2 	ldrh	r3, [r4, #34]	; 0x22
4001fa9c:	e6bf3fb3 	rev16	r3, r3
4001faa0:	e1c530b2 	strh	r3, [r5, #2]
4001faa4:	e2803004 	add	r3, r0, #4
4001faa8:	e584301c 	str	r3, [r4, #28]
4001faac:	23a03000 	movcs	r3, #0
4001fab0:	33a03001 	movcc	r3, #1
4001fab4:	e3500c02 	cmp	r0, #512	; 0x200
4001fab8:	e5c43024 	strb	r3, [r4, #36]	; 0x24
4001fabc:	2a000003 	bcs	4001fad0 <TFTPDaemon::DoRead()+0x8c>
4001fac0:	e5943000 	ldr	r3, [r4]
4001fac4:	e1a00004 	mov	r0, r4
4001fac8:	e5933010 	ldr	r3, [r3, #16]
4001facc:	e12fff33 	blx	r3
4001fad0:	e59fe030 	ldr	lr, [pc, #48]	; 4001fb08 <TFTPDaemon::DoRead()+0xc4>
4001fad4:	e1c400d8 	ldrd	r0, [r4, #8]
4001fad8:	e59ee000 	ldr	lr, [lr]
4001fadc:	e594201c 	ldr	r2, [r4, #28]
4001fae0:	e5943010 	ldr	r3, [r4, #16]
4001fae4:	e35e0000 	cmp	lr, #0
4001fae8:	e1d4c2b0 	ldrh	ip, [r4, #32]
4001faec:	0a000001 	beq	4001faf8 <TFTPDaemon::DoRead()+0xb4>
4001faf0:	e58dc000 	str	ip, [sp]
4001faf4:	eb000a1f 	bl	40022378 <net::udp_send(long, unsigned char const*, unsigned long, unsigned long, unsigned short)>
4001faf8:	e3a03003 	mov	r3, #3
4001fafc:	e5843004 	str	r3, [r4, #4]
4001fb00:	e28dd008 	add	sp, sp, #8
4001fb04:	e8bd8070 	pop	{r4, r5, r6, pc}
4001fb08:	4005a73c 	andmi	sl, r5, ip, lsr r7

4001fb0c <TFTPDaemon::HandleRecvAck()>:
4001fb0c:	e590200c 	ldr	r2, [r0, #12]
4001fb10:	e1d230b0 	ldrh	r3, [r2]
4001fb14:	e3530b01 	cmp	r3, #1024	; 0x400
4001fb18:	112fff1e 	bxne	lr
4001fb1c:	e1d032b2 	ldrh	r3, [r0, #34]	; 0x22
4001fb20:	e1d220b2 	ldrh	r2, [r2, #2]
4001fb24:	e6bf3fb3 	rev16	r3, r3
4001fb28:	e6ff3073 	uxth	r3, r3
4001fb2c:	e1520003 	cmp	r2, r3
4001fb30:	112fff1e 	bxne	lr
4001fb34:	e5d03024 	ldrb	r3, [r0, #36]	; 0x24
4001fb38:	e3530000 	cmp	r3, #0
4001fb3c:	13a03000 	movne	r3, #0
4001fb40:	03a03002 	moveq	r3, #2
4001fb44:	e5803004 	str	r3, [r0, #4]
4001fb48:	e12fff1e 	bx	lr

4001fb4c <TFTPDaemon::DoWriteAck()>:
4001fb4c:	e92d4013 	push	{r0, r1, r4, lr}
4001fb50:	e3a03000 	mov	r3, #0
4001fb54:	e590100c 	ldr	r1, [r0, #12]
4001fb58:	e1a04000 	mov	r4, r0
4001fb5c:	e59fe06c 	ldr	lr, [pc, #108]	; 4001fbd0 <TFTPDaemon::DoWriteAck()+0x84>
4001fb60:	e3a02004 	mov	r2, #4
4001fb64:	e5c13000 	strb	r3, [r1]
4001fb68:	e1d032b2 	ldrh	r3, [r0, #34]	; 0x22
4001fb6c:	e59ee000 	ldr	lr, [lr]
4001fb70:	e6bf3fb3 	rev16	r3, r3
4001fb74:	e1c130b2 	strh	r3, [r1, #2]
4001fb78:	e5d03024 	ldrb	r3, [r0, #36]	; 0x24
4001fb7c:	e5c12001 	strb	r2, [r1, #1]
4001fb80:	e1d4c2b0 	ldrh	ip, [r4, #32]
4001fb84:	e3530000 	cmp	r3, #0
4001fb88:	13a03000 	movne	r3, #0
4001fb8c:	03a03005 	moveq	r3, #5
4001fb90:	e5803004 	str	r3, [r0, #4]
4001fb94:	e35e0000 	cmp	lr, #0
4001fb98:	e5900008 	ldr	r0, [r0, #8]
4001fb9c:	e5943010 	ldr	r3, [r4, #16]
4001fba0:	0a000001 	beq	4001fbac <TFTPDaemon::DoWriteAck()+0x60>
4001fba4:	e58dc000 	str	ip, [sp]
4001fba8:	eb0009f2 	bl	40022378 <net::udp_send(long, unsigned char const*, unsigned long, unsigned long, unsigned short)>
4001fbac:	e5943004 	ldr	r3, [r4, #4]
4001fbb0:	e3530000 	cmp	r3, #0
4001fbb4:	1a000003 	bne	4001fbc8 <TFTPDaemon::DoWriteAck()+0x7c>
4001fbb8:	e1a00004 	mov	r0, r4
4001fbbc:	e28dd008 	add	sp, sp, #8
4001fbc0:	e8bd4010 	pop	{r4, lr}
4001fbc4:	eaffff4b 	b	4001f8f8 <TFTPDaemon::Init()>
4001fbc8:	e28dd008 	add	sp, sp, #8
4001fbcc:	e8bd8010 	pop	{r4, pc}
4001fbd0:	4005a73c 	andmi	sl, r5, ip, lsr r7

4001fbd4 <TFTPDaemon::HandleRequest()>:
4001fbd4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001fbd8:	e1a04000 	mov	r4, r0
4001fbdc:	e590000c 	ldr	r0, [r0, #12]
4001fbe0:	e1d050b0 	ldrh	r5, [r0]
4001fbe4:	e6bf5fb5 	rev16	r5, r5
4001fbe8:	e6ff5075 	uxth	r5, r5
4001fbec:	e2453001 	sub	r3, r5, #1
4001fbf0:	e3530001 	cmp	r3, #1
4001fbf4:	92806002 	addls	r6, r0, #2
4001fbf8:	91a02006 	movls	r2, r6
4001fbfc:	9a000004 	bls	4001fc14 <TFTPDaemon::HandleRequest()+0x40>
4001fc00:	e59f2128 	ldr	r2, [pc, #296]	; 4001fd30 <TFTPDaemon::HandleRequest()+0x15c>
4001fc04:	e3a01004 	mov	r1, #4
4001fc08:	e1a00004 	mov	r0, r4
4001fc0c:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
4001fc10:	eaffff68 	b	4001f9b8 <TFTPDaemon::SendError(unsigned short, char const*)>
4001fc14:	e1a03002 	mov	r3, r2
4001fc18:	e2822001 	add	r2, r2, #1
4001fc1c:	e5d31000 	ldrb	r1, [r3]
4001fc20:	e3510000 	cmp	r1, #0
4001fc24:	1afffffa 	bne	4001fc14 <TFTPDaemon::HandleRequest()+0x40>
4001fc28:	e0433006 	sub	r3, r3, r6
4001fc2c:	e2432001 	sub	r2, r3, #1
4001fc30:	e352007f 	cmp	r2, #127	; 0x7f
4001fc34:	859f20f8 	ldrhi	r2, [pc, #248]	; 4001fd34 <TFTPDaemon::HandleRequest()+0x160>
4001fc38:	8afffff2 	bhi	4001fc08 <TFTPDaemon::HandleRequest()+0x34>
4001fc3c:	e59f10f4 	ldr	r1, [pc, #244]	; 4001fd38 <TFTPDaemon::HandleRequest()+0x164>
4001fc40:	e2833003 	add	r3, r3, #3
4001fc44:	e0807003 	add	r7, r0, r3
4001fc48:	e3a02005 	mov	r2, #5
4001fc4c:	e1a00007 	mov	r0, r7
4001fc50:	ebffff0a 	bl	4001f880 <strncmp>
4001fc54:	e2502000 	subs	r2, r0, #0
4001fc58:	0a000006 	beq	4001fc78 <TFTPDaemon::HandleRequest()+0xa4>
4001fc5c:	e59f10d8 	ldr	r1, [pc, #216]	; 4001fd3c <TFTPDaemon::HandleRequest()+0x168>
4001fc60:	e3a02008 	mov	r2, #8
4001fc64:	e1a00007 	mov	r0, r7
4001fc68:	ebffff04 	bl	4001f880 <strncmp>
4001fc6c:	e3500000 	cmp	r0, #0
4001fc70:	1affffe2 	bne	4001fc00 <TFTPDaemon::HandleRequest()+0x2c>
4001fc74:	e3a02001 	mov	r2, #1
4001fc78:	e5943000 	ldr	r3, [r4]
4001fc7c:	e3550002 	cmp	r5, #2
4001fc80:	0a000012 	beq	4001fcd0 <TFTPDaemon::HandleRequest()+0xfc>
4001fc84:	e5933008 	ldr	r3, [r3, #8]
4001fc88:	e1a01006 	mov	r1, r6
4001fc8c:	e1a00004 	mov	r0, r4
4001fc90:	e12fff33 	blx	r3
4001fc94:	e3500000 	cmp	r0, #0
4001fc98:	03a01001 	moveq	r1, #1
4001fc9c:	059f209c 	ldreq	r2, [pc, #156]	; 4001fd40 <TFTPDaemon::HandleRequest()+0x16c>
4001fca0:	0a000012 	beq	4001fcf0 <TFTPDaemon::HandleRequest()+0x11c>
4001fca4:	e3a00045 	mov	r0, #69	; 0x45
4001fca8:	eb00097e 	bl	400222a8 <net::udp_end(unsigned short)>
4001fcac:	e1d402b0 	ldrh	r0, [r4, #32]
4001fcb0:	e59f108c 	ldr	r1, [pc, #140]	; 4001fd44 <TFTPDaemon::HandleRequest()+0x170>
4001fcb4:	eb000963 	bl	40022248 <net::udp_begin(unsigned short, void (*)(unsigned char const*, unsigned long, unsigned long, unsigned short))>
4001fcb8:	e5840008 	str	r0, [r4, #8]
4001fcbc:	e3a03002 	mov	r3, #2
4001fcc0:	e5843004 	str	r3, [r4, #4]
4001fcc4:	e1a00004 	mov	r0, r4
4001fcc8:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
4001fccc:	eaffff5c 	b	4001fa44 <TFTPDaemon::DoRead()>
4001fcd0:	e593300c 	ldr	r3, [r3, #12]
4001fcd4:	e1a01006 	mov	r1, r6
4001fcd8:	e1a00004 	mov	r0, r4
4001fcdc:	e12fff33 	blx	r3
4001fce0:	e3500000 	cmp	r0, #0
4001fce4:	1a000006 	bne	4001fd04 <TFTPDaemon::HandleRequest()+0x130>
4001fce8:	e59f2058 	ldr	r2, [pc, #88]	; 4001fd48 <TFTPDaemon::HandleRequest()+0x174>
4001fcec:	e1a01005 	mov	r1, r5
4001fcf0:	e1a00004 	mov	r0, r4
4001fcf4:	ebffff2f 	bl	4001f9b8 <TFTPDaemon::SendError(unsigned short, char const*)>
4001fcf8:	e3a03001 	mov	r3, #1
4001fcfc:	e5843004 	str	r3, [r4, #4]
4001fd00:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001fd04:	e3a00045 	mov	r0, #69	; 0x45
4001fd08:	eb000966 	bl	400222a8 <net::udp_end(unsigned short)>
4001fd0c:	e1d402b0 	ldrh	r0, [r4, #32]
4001fd10:	e59f102c 	ldr	r1, [pc, #44]	; 4001fd44 <TFTPDaemon::HandleRequest()+0x170>
4001fd14:	eb00094b 	bl	40022248 <net::udp_begin(unsigned short, void (*)(unsigned char const*, unsigned long, unsigned long, unsigned short))>
4001fd18:	e5840008 	str	r0, [r4, #8]
4001fd1c:	e3a03004 	mov	r3, #4
4001fd20:	e5843004 	str	r3, [r4, #4]
4001fd24:	e1a00004 	mov	r0, r4
4001fd28:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
4001fd2c:	eaffff86 	b	4001fb4c <TFTPDaemon::DoWriteAck()>
4001fd30:	400327a8 	andmi	r2, r3, r8, lsr #15
4001fd34:	400327ba 			; <UNDEFINED> instruction: 0x400327ba
4001fd38:	400327cc 	andmi	r2, r3, ip, asr #15
4001fd3c:	400327d2 	ldrdmi	r2, [r3], -r2	; <UNPREDICTABLE>
4001fd40:	400327db 	ldrdmi	r2, [r3], -fp
4001fd44:	4001fe58 	andmi	pc, r1, r8, asr lr	; <UNPREDICTABLE>
4001fd48:	400327ea 	andmi	r2, r3, sl, ror #15

4001fd4c <TFTPDaemon::HandleRecvData()>:
4001fd4c:	e590100c 	ldr	r1, [r0, #12]
4001fd50:	e1d130b0 	ldrh	r3, [r1]
4001fd54:	e3530c03 	cmp	r3, #768	; 0x300
4001fd58:	112fff1e 	bxne	lr
4001fd5c:	e92d4070 	push	{r4, r5, r6, lr}
4001fd60:	e2811004 	add	r1, r1, #4
4001fd64:	e5905014 	ldr	r5, [r0, #20]
4001fd68:	e1a04000 	mov	r4, r0
4001fd6c:	e5902000 	ldr	r2, [r0]
4001fd70:	e2455004 	sub	r5, r5, #4
4001fd74:	e5805018 	str	r5, [r0, #24]
4001fd78:	e15130b2 	ldrh	r3, [r1, #-2]
4001fd7c:	e5926018 	ldr	r6, [r2, #24]
4001fd80:	e1a02005 	mov	r2, r5
4001fd84:	e6bf3fb3 	rev16	r3, r3
4001fd88:	e1c032b2 	strh	r3, [r0, #34]	; 0x22
4001fd8c:	e6ff3073 	uxth	r3, r3
4001fd90:	e12fff36 	blx	r6
4001fd94:	e1550000 	cmp	r5, r0
4001fd98:	1a00000b 	bne	4001fdcc <TFTPDaemon::HandleRecvData()+0x80>
4001fd9c:	e5943018 	ldr	r3, [r4, #24]
4001fda0:	e3530c02 	cmp	r3, #512	; 0x200
4001fda4:	2a000005 	bcs	4001fdc0 <TFTPDaemon::HandleRecvData()+0x74>
4001fda8:	e3a03001 	mov	r3, #1
4001fdac:	e1a00004 	mov	r0, r4
4001fdb0:	e5c43024 	strb	r3, [r4, #36]	; 0x24
4001fdb4:	e5943000 	ldr	r3, [r4]
4001fdb8:	e5933010 	ldr	r3, [r3, #16]
4001fdbc:	e12fff33 	blx	r3
4001fdc0:	e1a00004 	mov	r0, r4
4001fdc4:	e8bd4070 	pop	{r4, r5, r6, lr}
4001fdc8:	eaffff5f 	b	4001fb4c <TFTPDaemon::DoWriteAck()>
4001fdcc:	e59f201c 	ldr	r2, [pc, #28]	; 4001fdf0 <TFTPDaemon::HandleRecvData()+0xa4>
4001fdd0:	e1a00004 	mov	r0, r4
4001fdd4:	e3a01003 	mov	r1, #3
4001fdd8:	ebfffef6 	bl	4001f9b8 <TFTPDaemon::SendError(unsigned short, char const*)>
4001fddc:	e3a03000 	mov	r3, #0
4001fde0:	e1a00004 	mov	r0, r4
4001fde4:	e5843004 	str	r3, [r4, #4]
4001fde8:	e8bd4070 	pop	{r4, r5, r6, lr}
4001fdec:	eafffec1 	b	4001f8f8 <TFTPDaemon::Init()>
4001fdf0:	400327fb 	strdmi	r2, [r3], -fp

4001fdf4 <TFTPDaemon::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)>:
4001fdf4:	e5803010 	str	r3, [r0, #16]
4001fdf8:	e5903004 	ldr	r3, [r0, #4]
4001fdfc:	e1ddc0b0 	ldrh	ip, [sp]
4001fe00:	e580100c 	str	r1, [r0, #12]
4001fe04:	e2433001 	sub	r3, r3, #1
4001fe08:	e5802014 	str	r2, [r0, #20]
4001fe0c:	e1c0c2b0 	strh	ip, [r0, #32]
4001fe10:	e3530004 	cmp	r3, #4
4001fe14:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
4001fe18:	ea00000b 	b	4001fe4c <TFTPDaemon::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x58>
4001fe1c:	4001fe30 	andmi	pc, r1, r0, lsr lr	; <UNPREDICTABLE>
4001fe20:	4001fe3c 	andmi	pc, r1, ip, lsr lr	; <UNPREDICTABLE>
4001fe24:	4001fe40 	andmi	pc, r1, r0, asr #28
4001fe28:	4001fe4c 	andmi	pc, r1, ip, asr #28
4001fe2c:	4001fe4c 	andmi	pc, r1, ip, asr #28
4001fe30:	e3520004 	cmp	r2, #4
4001fe34:	912fff1e 	bxls	lr
4001fe38:	eaffff65 	b	4001fbd4 <TFTPDaemon::HandleRequest()>
4001fe3c:	eaffff00 	b	4001fa44 <TFTPDaemon::DoRead()>
4001fe40:	e3520004 	cmp	r2, #4
4001fe44:	112fff1e 	bxne	lr
4001fe48:	eaffff2f 	b	4001fb0c <TFTPDaemon::HandleRecvAck()>
4001fe4c:	e3520f81 	cmp	r2, #516	; 0x204
4001fe50:	812fff1e 	bxhi	lr
4001fe54:	eaffffbc 	b	4001fd4c <TFTPDaemon::HandleRecvData()>

4001fe58 <TFTPDaemon::staticCallbackFunction(unsigned char const*, unsigned long, unsigned long, unsigned short)>:
4001fe58:	e92d4007 	push	{r0, r1, r2, lr}
4001fe5c:	e58d3000 	str	r3, [sp]
4001fe60:	e1a03002 	mov	r3, r2
4001fe64:	e1a02001 	mov	r2, r1
4001fe68:	e1a01000 	mov	r1, r0
4001fe6c:	e59f000c 	ldr	r0, [pc, #12]	; 4001fe80 <TFTPDaemon::staticCallbackFunction(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x28>
4001fe70:	e5900000 	ldr	r0, [r0]
4001fe74:	ebffffde 	bl	4001fdf4 <TFTPDaemon::Input(unsigned char const*, unsigned long, unsigned long, unsigned short)>
4001fe78:	e28dd00c 	add	sp, sp, #12
4001fe7c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4001fe80:	4005a370 	andmi	sl, r5, r0, ror r3

4001fe84 <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)>:
4001fe84:	e3100010 	tst	r0, #16
4001fe88:	e92d4030 	push	{r4, r5, lr}
4001fe8c:	e1a05000 	mov	r5, r0
4001fe90:	e24dd01c 	sub	sp, sp, #28
4001fe94:	e1a04001 	mov	r4, r1
4001fe98:	0a000014 	beq	4001fef0 <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0x6c>
4001fe9c:	ebff9eb5 	bl	40007978 <net::display_ip()>
4001fea0:	ebfffe36 	bl	4001f780 <ntp_client_start()>
4001fea4:	ebfffb6c 	bl	4001ec5c <mdns_start()>
4001fea8:	e59f312c 	ldr	r3, [pc, #300]	; 4001ffdc <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0x158>
4001feac:	e5941000 	ldr	r1, [r4]
4001feb0:	e5933000 	ldr	r3, [r3]
4001feb4:	e59f0124 	ldr	r0, [pc, #292]	; 4001ffe0 <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0x15c>
4001feb8:	e1a02c23 	lsr	r2, r3, #24
4001febc:	e58d2010 	str	r2, [sp, #16]
4001fec0:	e7e72853 	ubfx	r2, r3, #16, #8
4001fec4:	e58d200c 	str	r2, [sp, #12]
4001fec8:	e7e72453 	ubfx	r2, r3, #8, #8
4001fecc:	e6ef3073 	uxtb	r3, r3
4001fed0:	e58d3004 	str	r3, [sp, #4]
4001fed4:	e1a03c21 	lsr	r3, r1, #24
4001fed8:	e58d2008 	str	r2, [sp, #8]
4001fedc:	e58d3000 	str	r3, [sp]
4001fee0:	e7e72451 	ubfx	r2, r1, #8, #8
4001fee4:	e7e73851 	ubfx	r3, r1, #16, #8
4001fee8:	e6ef1071 	uxtb	r1, r1
4001feec:	eb003327 	bl	4002cb90 <printf>
4001fef0:	e3150040 	tst	r5, #64	; 0x40
4001fef4:	0a000012 	beq	4001ff44 <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0xc0>
4001fef8:	ebff9ec8 	bl	40007a20 <net::display_netmask()>
4001fefc:	e59f30d8 	ldr	r3, [pc, #216]	; 4001ffdc <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0x158>
4001ff00:	e5941004 	ldr	r1, [r4, #4]
4001ff04:	e5933004 	ldr	r3, [r3, #4]
4001ff08:	e59f00d4 	ldr	r0, [pc, #212]	; 4001ffe4 <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0x160>
4001ff0c:	e1a02c23 	lsr	r2, r3, #24
4001ff10:	e58d2010 	str	r2, [sp, #16]
4001ff14:	e7e72853 	ubfx	r2, r3, #16, #8
4001ff18:	e58d200c 	str	r2, [sp, #12]
4001ff1c:	e7e72453 	ubfx	r2, r3, #8, #8
4001ff20:	e6ef3073 	uxtb	r3, r3
4001ff24:	e58d3004 	str	r3, [sp, #4]
4001ff28:	e1a03c21 	lsr	r3, r1, #24
4001ff2c:	e58d2008 	str	r2, [sp, #8]
4001ff30:	e58d3000 	str	r3, [sp]
4001ff34:	e7e72451 	ubfx	r2, r1, #8, #8
4001ff38:	e7e73851 	ubfx	r3, r1, #16, #8
4001ff3c:	e6ef1071 	uxtb	r1, r1
4001ff40:	eb003312 	bl	4002cb90 <printf>
4001ff44:	e3150020 	tst	r5, #32
4001ff48:	0a000012 	beq	4001ff98 <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0x114>
4001ff4c:	ebff9eb4 	bl	40007a24 <net::display_gateway()>
4001ff50:	e59f3084 	ldr	r3, [pc, #132]	; 4001ffdc <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0x158>
4001ff54:	e5941008 	ldr	r1, [r4, #8]
4001ff58:	e5933008 	ldr	r3, [r3, #8]
4001ff5c:	e59f0084 	ldr	r0, [pc, #132]	; 4001ffe8 <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0x164>
4001ff60:	e1a02c23 	lsr	r2, r3, #24
4001ff64:	e58d2010 	str	r2, [sp, #16]
4001ff68:	e7e72853 	ubfx	r2, r3, #16, #8
4001ff6c:	e58d200c 	str	r2, [sp, #12]
4001ff70:	e7e72453 	ubfx	r2, r3, #8, #8
4001ff74:	e6ef3073 	uxtb	r3, r3
4001ff78:	e58d3004 	str	r3, [sp, #4]
4001ff7c:	e1a03c21 	lsr	r3, r1, #24
4001ff80:	e58d2008 	str	r2, [sp, #8]
4001ff84:	e58d3000 	str	r3, [sp]
4001ff88:	e7e72451 	ubfx	r2, r1, #8, #8
4001ff8c:	e7e73851 	ubfx	r3, r1, #16, #8
4001ff90:	e6ef1071 	uxtb	r1, r1
4001ff94:	eb0032fd 	bl	4002cb90 <printf>
4001ff98:	e3150004 	tst	r5, #4
4001ff9c:	0a00000c 	beq	4001ffd4 <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0x150>
4001ffa0:	e5d40000 	ldrb	r0, [r4]
4001ffa4:	e3500000 	cmp	r0, #0
4001ffa8:	1a000005 	bne	4001ffc4 <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0x140>
4001ffac:	ebfffb0b 	bl	4001ebe0 <mdns_send_announcement(unsigned long)>
4001ffb0:	eb0007ce 	bl	40021ef0 <net::tcp_shutdown()>
4001ffb4:	ebff80ac 	bl	4000026c <net::igmp_shutdown()>
4001ffb8:	e28dd01c 	add	sp, sp, #28
4001ffbc:	e8bd4030 	pop	{r4, r5, lr}
4001ffc0:	ea00032d 	b	40020c7c <net::dhcp_release_and_stop()>
4001ffc4:	ebfffded 	bl	4001f780 <ntp_client_start()>
4001ffc8:	e28dd01c 	add	sp, sp, #28
4001ffcc:	e8bd4030 	pop	{r4, r5, lr}
4001ffd0:	eafffb21 	b	4001ec5c <mdns_start()>
4001ffd4:	e28dd01c 	add	sp, sp, #28
4001ffd8:	e8bd8030 	pop	{r4, r5, pc}
4001ffdc:	4005a73c 	andmi	sl, r5, ip, lsr r7
4001ffe0:	40032830 	andmi	r2, r3, r0, lsr r8
4001ffe4:	40032850 	andmi	r2, r3, r0, asr r8
4001ffe8:	40032875 	andmi	r2, r3, r5, ror r8

4001ffec <strncpy.isra.0>:
4001ffec:	e3520000 	cmp	r2, #0
4001fff0:	012fff1e 	bxeq	lr
4001fff4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4001fff8:	ea000003 	b	4002000c <strncpy.isra.0+0x20>
4001fffc:	e4c0c001 	strb	ip, [r0], #1
40020000:	e35e0000 	cmp	lr, #0
40020004:	e1a0200e 	mov	r2, lr
40020008:	049df004 	popeq	{pc}		; (ldreq pc, [sp], #4)
4002000c:	e4d1c001 	ldrb	ip, [r1], #1
40020010:	e242e001 	sub	lr, r2, #1
40020014:	e35c0000 	cmp	ip, #0
40020018:	1afffff7 	bne	4001fffc <strncpy.isra.0+0x10>
4002001c:	e0802002 	add	r2, r0, r2
40020020:	e1a03000 	mov	r3, r0
40020024:	e4c3c001 	strb	ip, [r3], #1
40020028:	e1520003 	cmp	r2, r3
4002002c:	1afffffc 	bne	40020024 <strncpy.isra.0+0x38>
40020030:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

40020034 <NetworkStore::SaveDhcp(bool)>:
40020034:	e92d407f 	push	{r0, r1, r2, r3, r4, r5, r6, lr}
40020038:	e3a01000 	mov	r1, #0
4002003c:	e5cd0017 	strb	r0, [sp, #23]
40020040:	e3a03001 	mov	r3, #1
40020044:	e59f0020 	ldr	r0, [pc, #32]	; 4002006c <NetworkStore::SaveDhcp(bool)+0x38>
40020048:	e3a02014 	mov	r2, #20
4002004c:	e58d3004 	str	r3, [sp, #4]
40020050:	e58d3000 	str	r3, [sp]
40020054:	e28d3017 	add	r3, sp, #23
40020058:	e58d1008 	str	r1, [sp, #8]
4002005c:	e5900000 	ldr	r0, [r0]
40020060:	ebfff1c0 	bl	4001c768 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
40020064:	e28dd01c 	add	sp, sp, #28
40020068:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4002006c:	40034084 	andmi	r4, r3, r4, lsl #1

40020070 <Network::Network()>:
40020070:	e59f11d8 	ldr	r1, [pc, #472]	; 40020250 <Network::Network()+0x1e0>
40020074:	e3a03000 	mov	r3, #0
40020078:	e92d40f0 	push	{r4, r5, r6, r7, lr}
4002007c:	e2802004 	add	r2, r0, #4
40020080:	e5803000 	str	r3, [r0]
40020084:	e24dd07c 	sub	sp, sp, #124	; 0x7c
40020088:	e59f31c4 	ldr	r3, [pc, #452]	; 40020254 <Network::Network()+0x1e4>
4002008c:	e1a04000 	mov	r4, r0
40020090:	e5830000 	str	r0, [r3]
40020094:	e4d13001 	ldrb	r3, [r1], #1
40020098:	e4c23001 	strb	r3, [r2], #1
4002009c:	e3530000 	cmp	r3, #0
400200a0:	1afffffb 	bne	40020094 <Network::Network()+0x24>
400200a4:	e5c43054 	strb	r3, [r4, #84]	; 0x54
400200a8:	e2842094 	add	r2, r4, #148	; 0x94
400200ac:	e28410a0 	add	r1, r4, #160	; 0xa0
400200b0:	e1520001 	cmp	r2, r1
400200b4:	14c23001 	strbne	r3, [r2], #1
400200b8:	1afffffc 	bne	400200b0 <Network::Network()+0x40>
400200bc:	e59f5194 	ldr	r5, [pc, #404]	; 40020258 <Network::Network()+0x1e8>
400200c0:	ebff9dd5 	bl	4000781c <net::display_emac_config()>
400200c4:	e2846014 	add	r6, r4, #20
400200c8:	ebff80d9 	bl	40000434 <emac_config()>
400200cc:	ebff9de7 	bl	40007870 <net::display_emac_start()>
400200d0:	e59f0184 	ldr	r0, [pc, #388]	; 4002025c <Network::Network()+0x1ec>
400200d4:	e1a01004 	mov	r1, r4
400200d8:	ebff80ef 	bl	4000049c <emac_start(unsigned char*, net::Link&)>
400200dc:	e5d53019 	ldrb	r3, [r5, #25]
400200e0:	e59f0178 	ldr	r0, [pc, #376]	; 40020260 <Network::Network()+0x1f0>
400200e4:	e58d3008 	str	r3, [sp, #8]
400200e8:	e5d53018 	ldrb	r3, [r5, #24]
400200ec:	e58d3004 	str	r3, [sp, #4]
400200f0:	e5d53017 	ldrb	r3, [r5, #23]
400200f4:	e58d3000 	str	r3, [sp]
400200f8:	e5d53016 	ldrb	r3, [r5, #22]
400200fc:	e5d52015 	ldrb	r2, [r5, #21]
40020100:	e5d51014 	ldrb	r1, [r5, #20]
40020104:	eb0032a1 	bl	4002cb90 <printf>
40020108:	eb000a9e 	bl	40022b88 <net::phy_customized_timing()>
4002010c:	eb000a9c 	bl	40022b84 <net::phy_customized_led()>
40020110:	eb000571 	bl	400216dc <net::netif_init()>
40020114:	e59f0148 	ldr	r0, [pc, #328]	; 40020264 <Network::Network()+0x1f4>
40020118:	eb0005f5 	bl	400218f4 <net::netif_add_ext_callback(void (*)(unsigned short, net::netif_ext_callback_args_t const*))>
4002011c:	e28d0018 	add	r0, sp, #24
40020120:	eb000927 	bl	400225c4 <NetworkParams::NetworkParams()>
40020124:	e28d0018 	add	r0, sp, #24
40020128:	eb00092e 	bl	400225e8 <NetworkParams::Load()>
4002012c:	e5dd302d 	ldrb	r3, [sp, #45]	; 0x2d
40020130:	e3530000 	cmp	r3, #0
40020134:	1a00003e 	bne	40020234 <Network::Network()+0x1c4>
40020138:	e59f3128 	ldr	r3, [pc, #296]	; 40020268 <Network::Network()+0x1f8>
4002013c:	e5843014 	str	r3, [r4, #20]
40020140:	e28334ee 	add	r3, r3, #-301989888	; 0xee000000
40020144:	e2833802 	add	r3, r3, #131072	; 0x20000
40020148:	e2833f82 	add	r3, r3, #520	; 0x208
4002014c:	e5843018 	str	r3, [r4, #24]
40020150:	e3053f72 	movw	r3, #24434	; 0x5f72
40020154:	e1c431bc 	strh	r3, [r4, #28]
40020158:	e5d53017 	ldrb	r3, [r5, #23]
4002015c:	e1a02223 	lsr	r2, r3, #4
40020160:	e353009f 	cmp	r3, #159	; 0x9f
40020164:	e203300f 	and	r3, r3, #15
40020168:	92822030 	addls	r2, r2, #48	; 0x30
4002016c:	82822037 	addhi	r2, r2, #55	; 0x37
40020170:	e3530009 	cmp	r3, #9
40020174:	e5c4201e 	strb	r2, [r4, #30]
40020178:	92833030 	addls	r3, r3, #48	; 0x30
4002017c:	82833037 	addhi	r3, r3, #55	; 0x37
40020180:	e5c4301f 	strb	r3, [r4, #31]
40020184:	e5d53018 	ldrb	r3, [r5, #24]
40020188:	e1a02223 	lsr	r2, r3, #4
4002018c:	e353009f 	cmp	r3, #159	; 0x9f
40020190:	e203300f 	and	r3, r3, #15
40020194:	92822030 	addls	r2, r2, #48	; 0x30
40020198:	82822037 	addhi	r2, r2, #55	; 0x37
4002019c:	e3530009 	cmp	r3, #9
400201a0:	e5c42020 	strb	r2, [r4, #32]
400201a4:	92833030 	addls	r3, r3, #48	; 0x30
400201a8:	82833037 	addhi	r3, r3, #55	; 0x37
400201ac:	e5c43021 	strb	r3, [r4, #33]	; 0x21
400201b0:	e5d53019 	ldrb	r3, [r5, #25]
400201b4:	e1a02223 	lsr	r2, r3, #4
400201b8:	e353009f 	cmp	r3, #159	; 0x9f
400201bc:	e203300f 	and	r3, r3, #15
400201c0:	92822030 	addls	r2, r2, #48	; 0x30
400201c4:	82822037 	addhi	r2, r2, #55	; 0x37
400201c8:	e3530009 	cmp	r3, #9
400201cc:	e5c42022 	strb	r2, [r4, #34]	; 0x22
400201d0:	92833030 	addls	r3, r3, #48	; 0x30
400201d4:	82833037 	addhi	r3, r3, #55	; 0x37
400201d8:	e5c43023 	strb	r3, [r4, #35]	; 0x23
400201dc:	e3a03000 	mov	r3, #0
400201e0:	e5c43024 	strb	r3, [r4, #36]	; 0x24
400201e4:	e5940000 	ldr	r0, [r4]
400201e8:	e585601c 	str	r6, [r5, #28]
400201ec:	e28d501c 	add	r5, sp, #28
400201f0:	e5dd302c 	ldrb	r3, [sp, #44]	; 0x2c
400201f4:	e2400001 	sub	r0, r0, #1
400201f8:	e16f0f10 	clz	r0, r0
400201fc:	e89500e0 	ldm	r5, {r5, r6, r7}
40020200:	e1a002a0 	lsr	r0, r0, #5
40020204:	e5cd3017 	strb	r3, [sp, #23]
40020208:	ebff9dad 	bl	400078c4 <net::display_emac_status(bool)>
4002020c:	e5940000 	ldr	r0, [r4]
40020210:	e28d3017 	add	r3, sp, #23
40020214:	e58d3000 	str	r3, [sp]
40020218:	e1a02006 	mov	r2, r6
4002021c:	e1a03007 	mov	r3, r7
40020220:	e1a01005 	mov	r1, r5
40020224:	ebff801c 	bl	4000029c <net::net_init(net::Link, net::ip_addr, net::ip_addr, net::ip_addr, bool&)>
40020228:	e1a00004 	mov	r0, r4
4002022c:	e28dd07c 	add	sp, sp, #124	; 0x7c
40020230:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
40020234:	e3a0203f 	mov	r2, #63	; 0x3f
40020238:	e28d102d 	add	r1, sp, #45	; 0x2d
4002023c:	e1a00006 	mov	r0, r6
40020240:	ebffff69 	bl	4001ffec <strncpy.isra.0>
40020244:	e3a03000 	mov	r3, #0
40020248:	e5c43053 	strb	r3, [r4, #83]	; 0x53
4002024c:	eaffffe4 	b	400201e4 <Network::Network()+0x174>
40020250:	40032895 	mulmi	r3, r5, r8
40020254:	40034080 	andmi	r4, r3, r0, lsl #1
40020258:	4005a73c 	andmi	sl, r5, ip, lsr r7
4002025c:	4005a750 	andmi	sl, r5, r0, asr r7
40020260:	4003289a 	mulmi	r3, sl, r8
40020264:	4001fe84 	andmi	pc, r1, r4, lsl #29
40020268:	776c6c61 	strbvc	r6, [ip, -r1, ror #24]!

4002026c <Network::SetIp(unsigned long)>:
4002026c:	e59f3058 	ldr	r3, [pc, #88]	; 400202cc <Network::SetIp(unsigned long)+0x60>
40020270:	e5933000 	ldr	r3, [r3]
40020274:	e1530001 	cmp	r3, r1
40020278:	012fff1e 	bxeq	lr
4002027c:	e92d4010 	push	{r4, lr}
40020280:	e1a00001 	mov	r0, r1
40020284:	e24dd018 	sub	sp, sp, #24
40020288:	e1a04001 	mov	r4, r1
4002028c:	eb0004d2 	bl	400215dc <net::net_set_primary_ip(net::ip_addr)>
40020290:	e59f0038 	ldr	r0, [pc, #56]	; 400202d0 <Network::SetIp(unsigned long)+0x64>
40020294:	e3a02004 	mov	r2, #4
40020298:	e58d4014 	str	r4, [sp, #20]
4002029c:	e3a03002 	mov	r3, #2
400202a0:	e3a04000 	mov	r4, #0
400202a4:	e1cd20f0 	strd	r2, [sp]
400202a8:	e58d4008 	str	r4, [sp, #8]
400202ac:	e28d3014 	add	r3, sp, #20
400202b0:	e5900000 	ldr	r0, [r0]
400202b4:	e1a01004 	mov	r1, r4
400202b8:	ebfff12a 	bl	4001c768 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
400202bc:	e1a00004 	mov	r0, r4
400202c0:	ebffff5b 	bl	40020034 <NetworkStore::SaveDhcp(bool)>
400202c4:	e28dd018 	add	sp, sp, #24
400202c8:	e8bd8010 	pop	{r4, pc}
400202cc:	4005a73c 	andmi	sl, r5, ip, lsr r7
400202d0:	40034084 	andmi	r4, r3, r4, lsl #1

400202d4 <Network::SetNetmask(unsigned long)>:
400202d4:	e59f3050 	ldr	r3, [pc, #80]	; 4002032c <Network::SetNetmask(unsigned long)+0x58>
400202d8:	e5933004 	ldr	r3, [r3, #4]
400202dc:	e1530001 	cmp	r3, r1
400202e0:	012fff1e 	bxeq	lr
400202e4:	e92d4010 	push	{r4, lr}
400202e8:	e1a00001 	mov	r0, r1
400202ec:	e24dd018 	sub	sp, sp, #24
400202f0:	e1a04001 	mov	r4, r1
400202f4:	eb000522 	bl	40021784 <net::netif_set_netmask(net::ip_addr)>
400202f8:	e59f0030 	ldr	r0, [pc, #48]	; 40020330 <Network::SetNetmask(unsigned long)+0x5c>
400202fc:	e3a01000 	mov	r1, #0
40020300:	e58d1008 	str	r1, [sp, #8]
40020304:	e3a03004 	mov	r3, #4
40020308:	e58d3004 	str	r3, [sp, #4]
4002030c:	e3a02008 	mov	r2, #8
40020310:	e58d3000 	str	r3, [sp]
40020314:	e28d3014 	add	r3, sp, #20
40020318:	e5900000 	ldr	r0, [r0]
4002031c:	e58d4014 	str	r4, [sp, #20]
40020320:	ebfff110 	bl	4001c768 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
40020324:	e28dd018 	add	sp, sp, #24
40020328:	e8bd8010 	pop	{r4, pc}
4002032c:	4005a73c 	andmi	sl, r5, ip, lsr r7
40020330:	40034084 	andmi	r4, r3, r4, lsl #1

40020334 <Network::SetGatewayIp(unsigned long)>:
40020334:	e59f3050 	ldr	r3, [pc, #80]	; 4002038c <Network::SetGatewayIp(unsigned long)+0x58>
40020338:	e5933008 	ldr	r3, [r3, #8]
4002033c:	e1530001 	cmp	r3, r1
40020340:	012fff1e 	bxeq	lr
40020344:	e92d4010 	push	{r4, lr}
40020348:	e1a00001 	mov	r0, r1
4002034c:	e24dd018 	sub	sp, sp, #24
40020350:	e1a04001 	mov	r4, r1
40020354:	eb00051b 	bl	400217c8 <net::netif_set_gw(net::ip_addr)>
40020358:	e59f0030 	ldr	r0, [pc, #48]	; 40020390 <Network::SetGatewayIp(unsigned long)+0x5c>
4002035c:	e3a01000 	mov	r1, #0
40020360:	e58d1008 	str	r1, [sp, #8]
40020364:	e3a02004 	mov	r2, #4
40020368:	e58d4014 	str	r4, [sp, #20]
4002036c:	e3a03008 	mov	r3, #8
40020370:	e1cd20f0 	strd	r2, [sp]
40020374:	e5900000 	ldr	r0, [r0]
40020378:	e28d3014 	add	r3, sp, #20
4002037c:	e3a0200c 	mov	r2, #12
40020380:	ebfff0f8 	bl	4001c768 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
40020384:	e28dd018 	add	sp, sp, #24
40020388:	e8bd8010 	pop	{r4, pc}
4002038c:	4005a73c 	andmi	sl, r5, ip, lsr r7
40020390:	40034084 	andmi	r4, r3, r4, lsl #1

40020394 <Network::SetHostName(char const*)>:
40020394:	e92d4030 	push	{r4, r5, lr}
40020398:	e2804014 	add	r4, r0, #20
4002039c:	e1a05000 	mov	r5, r0
400203a0:	e24dd014 	sub	sp, sp, #20
400203a4:	e3a0203f 	mov	r2, #63	; 0x3f
400203a8:	e1a00004 	mov	r0, r4
400203ac:	ebffff0e 	bl	4001ffec <strncpy.isra.0>
400203b0:	e3a03000 	mov	r3, #0
400203b4:	e5c53053 	strb	r3, [r5, #83]	; 0x53
400203b8:	e1a03004 	mov	r3, r4
400203bc:	e1a02003 	mov	r2, r3
400203c0:	e2833001 	add	r3, r3, #1
400203c4:	e5d21000 	ldrb	r1, [r2]
400203c8:	e3510000 	cmp	r1, #0
400203cc:	1afffffa 	bne	400203bc <Network::SetHostName(char const*)+0x28>
400203d0:	e0422004 	sub	r2, r2, r4
400203d4:	e3a03020 	mov	r3, #32
400203d8:	e59f0030 	ldr	r0, [pc, #48]	; 40020410 <Network::SetHostName(char const*)+0x7c>
400203dc:	e3520040 	cmp	r2, #64	; 0x40
400203e0:	e58d1008 	str	r1, [sp, #8]
400203e4:	23a02040 	movcs	r2, #64	; 0x40
400203e8:	e1cd20f0 	strd	r2, [sp]
400203ec:	e5900000 	ldr	r0, [r0]
400203f0:	e1a03004 	mov	r3, r4
400203f4:	e3a02015 	mov	r2, #21
400203f8:	ebfff0da 	bl	4001c768 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
400203fc:	e3a00ee1 	mov	r0, #3600	; 0xe10
40020400:	ebfff9f6 	bl	4001ebe0 <mdns_send_announcement(unsigned long)>
40020404:	e28dd014 	add	sp, sp, #20
40020408:	e8bd4030 	pop	{r4, r5, lr}
4002040c:	eaff9d85 	b	40007a28 <net::display_hostname()>
40020410:	40034084 	andmi	r4, r3, r4, lsl #1

40020414 <Network::SetZeroconf()>:
40020414:	e92d4010 	push	{r4, lr}
40020418:	eb000007 	bl	4002043c <net::autoip_start()>
4002041c:	e3a00000 	mov	r0, #0
40020420:	ebffff03 	bl	40020034 <NetworkStore::SaveDhcp(bool)>
40020424:	e8bd8010 	pop	{r4, pc}

40020428 <Network::EnableDhcp()>:
40020428:	e92d4010 	push	{r4, lr}
4002042c:	eb0001ec 	bl	40020be4 <net::dhcp_start()>
40020430:	e3a00001 	mov	r0, #1
40020434:	ebfffefe 	bl	40020034 <NetworkStore::SaveDhcp(bool)>
40020438:	e8bd8010 	pop	{r4, pc}

4002043c <net::autoip_start()>:
4002043c:	e92d4070 	push	{r4, r5, r6, lr}
40020440:	e59f60d0 	ldr	r6, [pc, #208]	; 40020518 <net::autoip_start()+0xdc>
40020444:	e5964028 	ldr	r4, [r6, #40]	; 0x28
40020448:	e3540000 	cmp	r4, #0
4002044c:	1a000008 	bne	40020474 <net::autoip_start()+0x38>
40020450:	e3a0001c 	mov	r0, #28
40020454:	eb0033df 	bl	4002d3d8 <operator new(unsigned int)>
40020458:	e1a04000 	mov	r4, r0
4002045c:	e280101c 	add	r1, r0, #28
40020460:	e1a03000 	mov	r3, r0
40020464:	e3a02000 	mov	r2, #0
40020468:	e1530001 	cmp	r3, r1
4002046c:	14c32001 	strbne	r2, [r3], #1
40020470:	1afffffc 	bne	40020468 <net::autoip_start()+0x2c>
40020474:	e5943004 	ldr	r3, [r4, #4]
40020478:	e3530000 	cmp	r3, #0
4002047c:	18bd8070 	popne	{r4, r5, r6, pc}
40020480:	e59f1094 	ldr	r1, [pc, #148]	; 4002051c <net::autoip_start()+0xe0>
40020484:	e284500c 	add	r5, r4, #12
40020488:	e1a00005 	mov	r0, r5
4002048c:	eb000b21 	bl	40023118 <net::acd_add(net::acd::Acd*, void (*)(net::acd::Callback))>
40020490:	e1d420b0 	ldrh	r2, [r4]
40020494:	e30a39fe 	movw	r3, #43518	; 0xa9fe
40020498:	e1520003 	cmp	r2, r3
4002049c:	0a000017 	beq	40020500 <net::autoip_start()+0xc4>
400204a0:	e5d63018 	ldrb	r3, [r6, #24]
400204a4:	e5d62017 	ldrb	r2, [r6, #23]
400204a8:	e0822403 	add	r2, r2, r3, lsl #8
400204ac:	e59f306c 	ldr	r3, [pc, #108]	; 40020520 <net::autoip_start()+0xe4>
400204b0:	e1833802 	orr	r3, r3, r2, lsl #16
400204b4:	e6bf2f33 	rev	r2, r3
400204b8:	e5963028 	ldr	r3, [r6, #40]	; 0x28
400204bc:	e5d33008 	ldrb	r3, [r3, #8]
400204c0:	e0833002 	add	r3, r3, r2
400204c4:	e59f2058 	ldr	r2, [pc, #88]	; 40020524 <net::autoip_start()+0xe8>
400204c8:	e6ff3073 	uxth	r3, r3
400204cc:	e38334a9 	orr	r3, r3, #-1459617792	; 0xa9000000
400204d0:	e38338fe 	orr	r3, r3, #16646144	; 0xfe0000
400204d4:	e1530002 	cmp	r3, r2
400204d8:	e59f2048 	ldr	r2, [pc, #72]	; 40020528 <net::autoip_start()+0xec>
400204dc:	92833cfe 	addls	r3, r3, #65024	; 0xfe00
400204e0:	e5843000 	str	r3, [r4]
400204e4:	e5943000 	ldr	r3, [r4]
400204e8:	e1530002 	cmp	r3, r2
400204ec:	82433cfe 	subhi	r3, r3, #65024	; 0xfe00
400204f0:	85843000 	strhi	r3, [r4]
400204f4:	e5943000 	ldr	r3, [r4]
400204f8:	e6bf3f33 	rev	r3, r3
400204fc:	e5843000 	str	r3, [r4]
40020500:	e5941000 	ldr	r1, [r4]
40020504:	e3a03001 	mov	r3, #1
40020508:	e5843004 	str	r3, [r4, #4]
4002050c:	e1a00005 	mov	r0, r5
40020510:	e8bd4070 	pop	{r4, r5, r6, lr}
40020514:	ea000a2e 	b	40022dd4 <net::acd_start(net::acd::Acd*, net::ip_addr)>
40020518:	4005a73c 	andmi	sl, r5, ip, lsr r7
4002051c:	40020564 	andmi	r0, r2, r4, ror #10
40020520:	0001fea9 	andeq	pc, r1, r9, lsr #29
40020524:	a9fe00ff 	ldmibge	lr!, {r0, r1, r2, r3, r4, r5, r6, r7}^
40020528:	a9fefeff 	ldmibge	lr!, {r0, r1, r2, r3, r4, r5, r6, r7, r9, sl, fp, ip, sp, lr, pc}^

4002052c <net::autoip_stop()>:
4002052c:	e59f302c 	ldr	r3, [pc, #44]	; 40020560 <net::autoip_stop()+0x34>
40020530:	e5931028 	ldr	r1, [r3, #40]	; 0x28
40020534:	e3510000 	cmp	r1, #0
40020538:	012fff1e 	bxeq	lr
4002053c:	e3a02000 	mov	r2, #0
40020540:	e5812004 	str	r2, [r1, #4]
40020544:	e1d310b0 	ldrh	r1, [r3]
40020548:	e30a39fe 	movw	r3, #43518	; 0xa9fe
4002054c:	e1510003 	cmp	r1, r3
40020550:	112fff1e 	bxne	lr
40020554:	e1a01002 	mov	r1, r2
40020558:	e1a00002 	mov	r0, r2
4002055c:	ea0004a9 	b	40021808 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)>
40020560:	4005a73c 	andmi	sl, r5, ip, lsr r7

40020564 <net::autoip_conflict_callback(net::acd::Callback)>:
40020564:	e92d4010 	push	{r4, lr}
40020568:	e3500001 	cmp	r0, #1
4002056c:	e59f4068 	ldr	r4, [pc, #104]	; 400205dc <net::autoip_conflict_callback(net::acd::Callback)+0x78>
40020570:	e5943028 	ldr	r3, [r4, #40]	; 0x28
40020574:	0a00000d 	beq	400205b0 <net::autoip_conflict_callback(net::acd::Callback)+0x4c>
40020578:	e3500002 	cmp	r0, #2
4002057c:	e1a02000 	mov	r2, r0
40020580:	0a00000f 	beq	400205c4 <net::autoip_conflict_callback(net::acd::Callback)+0x60>
40020584:	e3500000 	cmp	r0, #0
40020588:	18bd8010 	popne	{r4, pc}
4002058c:	e5930000 	ldr	r0, [r3]
40020590:	e3a01002 	mov	r1, #2
40020594:	e5831004 	str	r1, [r3, #4]
40020598:	e30f1fff 	movw	r1, #65535	; 0xffff
4002059c:	eb000499 	bl	40021808 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)>
400205a0:	e5d4301a 	ldrb	r3, [r4, #26]
400205a4:	e3833004 	orr	r3, r3, #4
400205a8:	e5c4301a 	strb	r3, [r4, #26]
400205ac:	e8bd8010 	pop	{r4, pc}
400205b0:	e5d32008 	ldrb	r2, [r3, #8]
400205b4:	e2822001 	add	r2, r2, #1
400205b8:	e5c32008 	strb	r2, [r3, #8]
400205bc:	e8bd4010 	pop	{r4, lr}
400205c0:	eaffff9d 	b	4002043c <net::autoip_start()>
400205c4:	e3a02000 	mov	r2, #0
400205c8:	e5832000 	str	r2, [r3]
400205cc:	ebffffd6 	bl	4002052c <net::autoip_stop()>
400205d0:	e5d4301a 	ldrb	r3, [r4, #26]
400205d4:	e3c33004 	bic	r3, r3, #4
400205d8:	eafffff2 	b	400205a8 <net::autoip_conflict_callback(net::acd::Callback)+0x44>
400205dc:	4005a73c 	andmi	sl, r5, ip, lsr r7

400205e0 <net::dhcp_bind()>:
400205e0:	e59f0130 	ldr	r0, [pc, #304]	; 40020718 <net::dhcp_bind()+0x138>
400205e4:	e3a02000 	mov	r2, #0
400205e8:	e5903020 	ldr	r3, [r0, #32]
400205ec:	e1c321b6 	strh	r2, [r3, #22]
400205f0:	e593202c 	ldr	r2, [r3, #44]	; 0x2c
400205f4:	e3720001 	cmn	r2, #1
400205f8:	0a000008 	beq	40020620 <net::dhcp_bind()+0x40>
400205fc:	e282201e 	add	r2, r2, #30
40020600:	e352070f 	cmp	r2, #3932160	; 0x3c0000
40020604:	230f2fff 	movwcs	r2, #65535	; 0xffff
40020608:	2a000003 	bcs	4002061c <net::dhcp_bind()+0x3c>
4002060c:	e3a0103c 	mov	r1, #60	; 0x3c
40020610:	e732f112 	udiv	r2, r2, r1
40020614:	e3520001 	cmp	r2, #1
40020618:	33a02001 	movcc	r2, #1
4002061c:	e1c321b8 	strh	r2, [r3, #24]
40020620:	e5932030 	ldr	r2, [r3, #48]	; 0x30
40020624:	e3720001 	cmn	r2, #1
40020628:	0a00000a 	beq	40020658 <net::dhcp_bind()+0x78>
4002062c:	e282201e 	add	r2, r2, #30
40020630:	e352070f 	cmp	r2, #3932160	; 0x3c0000
40020634:	230f2fff 	movwcs	r2, #65535	; 0xffff
40020638:	2a000003 	bcs	4002064c <net::dhcp_bind()+0x6c>
4002063c:	e3a0103c 	mov	r1, #60	; 0x3c
40020640:	e732f112 	udiv	r2, r2, r1
40020644:	e3520001 	cmp	r2, #1
40020648:	33a02001 	movcc	r2, #1
4002064c:	e6ff2072 	uxth	r2, r2
40020650:	e1c320be 	strh	r2, [r3, #14]
40020654:	e1c321b2 	strh	r2, [r3, #18]
40020658:	e5932034 	ldr	r2, [r3, #52]	; 0x34
4002065c:	e3720001 	cmn	r2, #1
40020660:	0a00000a 	beq	40020690 <net::dhcp_bind()+0xb0>
40020664:	e282201e 	add	r2, r2, #30
40020668:	e352070f 	cmp	r2, #3932160	; 0x3c0000
4002066c:	230f2fff 	movwcs	r2, #65535	; 0xffff
40020670:	2a000003 	bcs	40020684 <net::dhcp_bind()+0xa4>
40020674:	e3a0103c 	mov	r1, #60	; 0x3c
40020678:	e732f112 	udiv	r2, r2, r1
4002067c:	e3520001 	cmp	r2, #1
40020680:	33a02001 	movcc	r2, #1
40020684:	e6ff2072 	uxth	r2, r2
40020688:	e1c321b0 	strh	r2, [r3, #16]
4002068c:	e1c321b4 	strh	r2, [r3, #20]
40020690:	e1d320be 	ldrh	r2, [r3, #14]
40020694:	e1d311b0 	ldrh	r1, [r3, #16]
40020698:	e1520001 	cmp	r2, r1
4002069c:	33a02000 	movcc	r2, #0
400206a0:	23a02001 	movcs	r2, #1
400206a4:	e3510000 	cmp	r1, #0
400206a8:	03a02000 	moveq	r2, #0
400206ac:	e3520000 	cmp	r2, #0
400206b0:	13a02000 	movne	r2, #0
400206b4:	11c320be 	strhne	r2, [r3, #14]
400206b8:	e5d3200a 	ldrb	r2, [r3, #10]
400206bc:	e3120001 	tst	r2, #1
400206c0:	15931024 	ldrne	r1, [r3, #36]	; 0x24
400206c4:	1a000007 	bne	400206e8 <net::dhcp_bind()+0x108>
400206c8:	e5932020 	ldr	r2, [r3, #32]
400206cc:	e3120080 	tst	r2, #128	; 0x80
400206d0:	03a010ff 	moveq	r1, #255	; 0xff
400206d4:	0a000003 	beq	400206e8 <net::dhcp_bind()+0x108>
400206d8:	e6ef2072 	uxtb	r2, r2
400206dc:	e30f1fff 	movw	r1, #65535	; 0xffff
400206e0:	e35200c0 	cmp	r2, #192	; 0xc0
400206e4:	23e014ff 	mvncs	r1, #-16777216	; 0xff000000
400206e8:	e5d3c008 	ldrb	ip, [r3, #8]
400206ec:	e5932028 	ldr	r2, [r3, #40]	; 0x28
400206f0:	e35c000a 	cmp	ip, #10
400206f4:	13a0c00a 	movne	ip, #10
400206f8:	11c3c0b8 	strhne	ip, [r3, #8]
400206fc:	13a0c000 	movne	ip, #0
40020700:	11c3c0bc 	strhne	ip, [r3, #12]
40020704:	e5d0c01a 	ldrb	ip, [r0, #26]
40020708:	e38cc002 	orr	ip, ip, #2
4002070c:	e5c0c01a 	strb	ip, [r0, #26]
40020710:	e5930020 	ldr	r0, [r3, #32]
40020714:	ea00043b 	b	40021808 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)>
40020718:	4005a73c 	andmi	sl, r5, ip, lsr r7

4002071c <net::message_init()>:
4002071c:	e59f204c 	ldr	r2, [pc, #76]	; 40020770 <net::message_init()+0x54>
40020720:	e3001225 	movw	r1, #549	; 0x225
40020724:	e3a00000 	mov	r0, #0
40020728:	e1a03002 	mov	r3, r2
4002072c:	e2511001 	subs	r1, r1, #1
40020730:	14c20001 	strbne	r0, [r2], #1
40020734:	1afffffc 	bne	4002072c <net::message_init()+0x10>
40020738:	e3002101 	movw	r2, #257	; 0x101
4002073c:	e1c320b0 	strh	r2, [r3]
40020740:	e3a02006 	mov	r2, #6
40020744:	e5c32002 	strb	r2, [r3, #2]
40020748:	e59f2024 	ldr	r2, [pc, #36]	; 40020774 <net::message_init()+0x58>
4002074c:	e5921014 	ldr	r1, [r2, #20]
40020750:	e1d221b8 	ldrh	r2, [r2, #24]
40020754:	e583101c 	str	r1, [r3, #28]
40020758:	e1c322b0 	strh	r2, [r3, #32]
4002075c:	e59f2014 	ldr	r2, [pc, #20]	; 40020778 <net::message_init()+0x5c>
40020760:	e58320ec 	str	r2, [r3, #236]	; 0xec
40020764:	e3002135 	movw	r2, #309	; 0x135
40020768:	e1c32fb0 	strh	r2, [r3, #240]	; 0xf0
4002076c:	e12fff1e 	bx	lr
40020770:	4005a374 	andmi	sl, r5, r4, ror r3
40020774:	4005a73c 	andmi	sl, r5, ip, lsr r7
40020778:	63538263 	cmpvs	r3, #805306374	; 0x30000006

4002077c <net::dhcp_discover()>:
4002077c:	e59f20e0 	ldr	r2, [pc, #224]	; 40020864 <net::dhcp_discover()+0xe8>
40020780:	e3a03000 	mov	r3, #0
40020784:	e92d4013 	push	{r0, r1, r4, lr}
40020788:	e5924020 	ldr	r4, [r2, #32]
4002078c:	e5d41008 	ldrb	r1, [r4, #8]
40020790:	e5843020 	str	r3, [r4, #32]
40020794:	e3510006 	cmp	r1, #6
40020798:	11c430bc 	strhne	r3, [r4, #12]
4002079c:	13a01006 	movne	r1, #6
400207a0:	11c410b8 	strhne	r1, [r4, #8]
400207a4:	e5920020 	ldr	r0, [r2, #32]
400207a8:	e5d03009 	ldrb	r3, [r0, #9]
400207ac:	e3530000 	cmp	r3, #0
400207b0:	1a000004 	bne	400207c8 <net::dhcp_discover()+0x4c>
400207b4:	e5903004 	ldr	r3, [r0, #4]
400207b8:	e6bf3f33 	rev	r3, r3
400207bc:	e2833001 	add	r3, r3, #1
400207c0:	e6bf3f33 	rev	r3, r3
400207c4:	e5803004 	str	r3, [r0, #4]
400207c8:	e5903004 	ldr	r3, [r0, #4]
400207cc:	e59f1094 	ldr	r1, [pc, #148]	; 40020868 <net::dhcp_discover()+0xec>
400207d0:	e5813004 	str	r3, [r1, #4]
400207d4:	e3033d01 	movw	r3, #15617	; 0x3d01
400207d8:	e1c13fb2 	strh	r3, [r1, #242]	; 0xf2
400207dc:	e3003107 	movw	r3, #263	; 0x107
400207e0:	e1c13fb4 	strh	r3, [r1, #244]	; 0xf4
400207e4:	e1d231b4 	ldrh	r3, [r2, #20]
400207e8:	e1c13fb6 	strh	r3, [r1, #246]	; 0xf6
400207ec:	e1d231b6 	ldrh	r3, [r2, #22]
400207f0:	e1c13fb8 	strh	r3, [r1, #248]	; 0xf8
400207f4:	e1d231b8 	ldrh	r3, [r2, #24]
400207f8:	e59f206c 	ldr	r2, [pc, #108]	; 4002086c <net::dhcp_discover()+0xf0>
400207fc:	e1c13fba 	strh	r3, [r1, #250]	; 0xfa
40020800:	e59f3068 	ldr	r3, [pc, #104]	; 40020870 <net::dhcp_discover()+0xf4>
40020804:	e1c12ffc 	strd	r2, [r1, #252]	; 0xfc
40020808:	e3e03000 	mvn	r3, #0
4002080c:	e3a02043 	mov	r2, #67	; 0x43
40020810:	e5c13104 	strb	r3, [r1, #260]	; 0x104
40020814:	e58d2000 	str	r2, [sp]
40020818:	e3002105 	movw	r2, #261	; 0x105
4002081c:	e5900000 	ldr	r0, [r0]
40020820:	eb0006d4 	bl	40022378 <net::udp_send(long, unsigned char const*, unsigned long, unsigned long, unsigned short)>
40020824:	e5d43009 	ldrb	r3, [r4, #9]
40020828:	e35300ff 	cmp	r3, #255	; 0xff
4002082c:	12833001 	addne	r3, r3, #1
40020830:	15c43009 	strbne	r3, [r4, #9]
40020834:	e5d42009 	ldrb	r2, [r4, #9]
40020838:	e3520005 	cmp	r2, #5
4002083c:	93a03ffa 	movls	r3, #1000	; 0x3e8
40020840:	830e3a60 	movwhi	r3, #60000	; 0xea60
40020844:	91a03213 	lslls	r3, r3, r2
40020848:	e3a02f7d 	mov	r2, #500	; 0x1f4
4002084c:	e2833e1f 	add	r3, r3, #496	; 0x1f0
40020850:	e2833003 	add	r3, r3, #3
40020854:	e733f213 	udiv	r3, r3, r2
40020858:	e1c430bc 	strh	r3, [r4, #12]
4002085c:	e28dd008 	add	sp, sp, #8
40020860:	e8bd8010 	pop	{r4, pc}
40020864:	4005a73c 	andmi	sl, r5, ip, lsr r7
40020868:	4005a374 	andmi	sl, r5, r4, ror r3
4002086c:	03010637 	movweq	r0, #5687	; 0x1637
40020870:	3b3a330f 	blcc	40ead4b4 <__heap_start+0x9ad4b4>

40020874 <net::memcpy_ip(unsigned char*, unsigned long)>:
40020874:	e3100003 	tst	r0, #3
40020878:	1a000001 	bne	40020884 <net::memcpy_ip(unsigned char*, unsigned long)+0x10>
4002087c:	e5801000 	str	r1, [r0]
40020880:	e12fff1e 	bx	lr
40020884:	e24dd008 	sub	sp, sp, #8
40020888:	e3a03000 	mov	r3, #0
4002088c:	e58d1004 	str	r1, [sp, #4]
40020890:	e28d1004 	add	r1, sp, #4
40020894:	e7d12003 	ldrb	r2, [r1, r3]
40020898:	e6ef2072 	uxtb	r2, r2
4002089c:	e7c02003 	strb	r2, [r0, r3]
400208a0:	e2833001 	add	r3, r3, #1
400208a4:	e3530004 	cmp	r3, #4
400208a8:	1afffff9 	bne	40020894 <net::memcpy_ip(unsigned char*, unsigned long)+0x20>
400208ac:	e28dd008 	add	sp, sp, #8
400208b0:	e12fff1e 	bx	lr

400208b4 <net::send_request()>:
400208b4:	e92d4073 	push	{r0, r1, r4, r5, r6, lr}
400208b8:	e3033d03 	movw	r3, #15619	; 0x3d03
400208bc:	e59f4100 	ldr	r4, [pc, #256]	; 400209c4 <net::send_request()+0x110>
400208c0:	e59f5100 	ldr	r5, [pc, #256]	; 400209c8 <net::send_request()+0x114>
400208c4:	e1c43fb2 	strh	r3, [r4, #242]	; 0xf2
400208c8:	e3003107 	movw	r3, #263	; 0x107
400208cc:	e1c43fb4 	strh	r3, [r4, #244]	; 0xf4
400208d0:	e28400fe 	add	r0, r4, #254	; 0xfe
400208d4:	e1d531b4 	ldrh	r3, [r5, #20]
400208d8:	e5956020 	ldr	r6, [r5, #32]
400208dc:	e1c43fb6 	strh	r3, [r4, #246]	; 0xf6
400208e0:	e1d531b6 	ldrh	r3, [r5, #22]
400208e4:	e1c43fb8 	strh	r3, [r4, #248]	; 0xf8
400208e8:	e1d531b8 	ldrh	r3, [r5, #24]
400208ec:	e1c43fba 	strh	r3, [r4, #250]	; 0xfa
400208f0:	e3003432 	movw	r3, #1074	; 0x432
400208f4:	e1c43fbc 	strh	r3, [r4, #252]	; 0xfc
400208f8:	e5961020 	ldr	r1, [r6, #32]
400208fc:	ebffffdc 	bl	40020874 <net::memcpy_ip(unsigned char*, unsigned long)>
40020900:	e3003102 	movw	r3, #258	; 0x102
40020904:	e3002436 	movw	r2, #1078	; 0x436
40020908:	e2840f41 	add	r0, r4, #260	; 0x104
4002090c:	e18420b3 	strh	r2, [r4, r3]
40020910:	e596101c 	ldr	r1, [r6, #28]
40020914:	ebffffd6 	bl	40020874 <net::memcpy_ip(unsigned char*, unsigned long)>
40020918:	e59f10ac 	ldr	r1, [pc, #172]	; 400209cc <net::send_request()+0x118>
4002091c:	e2843f42 	add	r3, r4, #264	; 0x108
40020920:	e3a0200c 	mov	r2, #12
40020924:	e1c320b0 	strh	r2, [r3]
40020928:	e3a0201e 	mov	r2, #30
4002092c:	e595301c 	ldr	r3, [r5, #28]
40020930:	e2433001 	sub	r3, r3, #1
40020934:	e5f3c001 	ldrb	ip, [r3, #1]!
40020938:	e242e01e 	sub	lr, r2, #30
4002093c:	e2820001 	add	r0, r2, #1
40020940:	e35c0000 	cmp	ip, #0
40020944:	14c1c001 	strbne	ip, [r1], #1
40020948:	11a02000 	movne	r2, r0
4002094c:	1afffff8 	bne	40020934 <net::send_request()+0x80>
40020950:	e0841002 	add	r1, r4, r2
40020954:	e3a03037 	mov	r3, #55	; 0x37
40020958:	e5c4e109 	strb	lr, [r4, #265]	; 0x109
4002095c:	e28220f5 	add	r2, r2, #245	; 0xf5
40020960:	e0844000 	add	r4, r4, r0
40020964:	e3a00001 	mov	r0, #1
40020968:	e5c130ec 	strb	r3, [r1, #236]	; 0xec
4002096c:	e3a03006 	mov	r3, #6
40020970:	e5c430ec 	strb	r3, [r4, #236]	; 0xec
40020974:	e6ff2072 	uxth	r2, r2
40020978:	e5c130f0 	strb	r3, [r1, #240]	; 0xf0
4002097c:	e3a0300f 	mov	r3, #15
40020980:	e5c130f1 	strb	r3, [r1, #241]	; 0xf1
40020984:	e3a0303a 	mov	r3, #58	; 0x3a
40020988:	e5c130f2 	strb	r3, [r1, #242]	; 0xf2
4002098c:	e3a0303b 	mov	r3, #59	; 0x3b
40020990:	e5c100ee 	strb	r0, [r1, #238]	; 0xee
40020994:	e3a00003 	mov	r0, #3
40020998:	e5c130f3 	strb	r3, [r1, #243]	; 0xf3
4002099c:	e3e03000 	mvn	r3, #0
400209a0:	e5c130f4 	strb	r3, [r1, #244]	; 0xf4
400209a4:	e5c100ef 	strb	r0, [r1, #239]	; 0xef
400209a8:	e3a01043 	mov	r1, #67	; 0x43
400209ac:	e58d1000 	str	r1, [sp]
400209b0:	e59f100c 	ldr	r1, [pc, #12]	; 400209c4 <net::send_request()+0x110>
400209b4:	e5960000 	ldr	r0, [r6]
400209b8:	eb00066e 	bl	40022378 <net::udp_send(long, unsigned char const*, unsigned long, unsigned long, unsigned short)>
400209bc:	e28dd008 	add	sp, sp, #8
400209c0:	e8bd8070 	pop	{r4, r5, r6, pc}
400209c4:	4005a374 	andmi	sl, r5, r4, ror r3
400209c8:	4005a73c 	andmi	sl, r5, ip, lsr r7
400209cc:	4005a47e 	andmi	sl, r5, lr, ror r4

400209d0 <net::dhcp_select()>:
400209d0:	e59f3064 	ldr	r3, [pc, #100]	; 40020a3c <net::dhcp_select()+0x6c>
400209d4:	e92d4010 	push	{r4, lr}
400209d8:	e5934020 	ldr	r4, [r3, #32]
400209dc:	e5d43008 	ldrb	r3, [r4, #8]
400209e0:	e3530001 	cmp	r3, #1
400209e4:	13a03001 	movne	r3, #1
400209e8:	11c430b8 	strhne	r3, [r4, #8]
400209ec:	13a03000 	movne	r3, #0
400209f0:	11c430bc 	strhne	r3, [r4, #12]
400209f4:	ebffffae 	bl	400208b4 <net::send_request()>
400209f8:	e5d43009 	ldrb	r3, [r4, #9]
400209fc:	e35300ff 	cmp	r3, #255	; 0xff
40020a00:	12833001 	addne	r3, r3, #1
40020a04:	15c43009 	strbne	r3, [r4, #9]
40020a08:	e5d42009 	ldrb	r2, [r4, #9]
40020a0c:	e3520005 	cmp	r2, #5
40020a10:	93a03ffa 	movls	r3, #1000	; 0x3e8
40020a14:	830e3a60 	movwhi	r3, #60000	; 0xea60
40020a18:	91a03213 	lslls	r3, r3, r2
40020a1c:	e3a02f7d 	mov	r2, #500	; 0x1f4
40020a20:	96ff3073 	uxthls	r3, r3
40020a24:	e2833e1f 	add	r3, r3, #496	; 0x1f0
40020a28:	e2833003 	add	r3, r3, #3
40020a2c:	e6ff3073 	uxth	r3, r3
40020a30:	e733f213 	udiv	r3, r3, r2
40020a34:	e1c430bc 	strh	r3, [r4, #12]
40020a38:	e8bd8010 	pop	{r4, pc}
40020a3c:	4005a73c 	andmi	sl, r5, ip, lsr r7

40020a40 <net::dhcp_reboot()>:
40020a40:	e59f3068 	ldr	r3, [pc, #104]	; 40020ab0 <net::dhcp_reboot()+0x70>
40020a44:	e92d4010 	push	{r4, lr}
40020a48:	e5934020 	ldr	r4, [r3, #32]
40020a4c:	e5d43008 	ldrb	r3, [r4, #8]
40020a50:	e3530003 	cmp	r3, #3
40020a54:	13a03003 	movne	r3, #3
40020a58:	11c430b8 	strhne	r3, [r4, #8]
40020a5c:	13a03000 	movne	r3, #0
40020a60:	11c430bc 	strhne	r3, [r4, #12]
40020a64:	ebffff92 	bl	400208b4 <net::send_request()>
40020a68:	e5d43009 	ldrb	r3, [r4, #9]
40020a6c:	e35300ff 	cmp	r3, #255	; 0xff
40020a70:	12833001 	addne	r3, r3, #1
40020a74:	15c43009 	strbne	r3, [r4, #9]
40020a78:	e5d43009 	ldrb	r3, [r4, #9]
40020a7c:	e3530009 	cmp	r3, #9
40020a80:	90632283 	rsbls	r2, r3, r3, lsl #5
40020a84:	83023710 	movwhi	r3, #10000	; 0x2710
40020a88:	90833102 	addls	r3, r3, r2, lsl #2
40020a8c:	e3a02f7d 	mov	r2, #500	; 0x1f4
40020a90:	91a03183 	lslls	r3, r3, #3
40020a94:	96ff3073 	uxthls	r3, r3
40020a98:	e2833e1f 	add	r3, r3, #496	; 0x1f0
40020a9c:	e2833003 	add	r3, r3, #3
40020aa0:	e6ff3073 	uxth	r3, r3
40020aa4:	e733f213 	udiv	r3, r3, r2
40020aa8:	e1c430bc 	strh	r3, [r4, #12]
40020aac:	e8bd8010 	pop	{r4, pc}
40020ab0:	4005a73c 	andmi	sl, r5, ip, lsr r7

40020ab4 <net::memcpy_ip(unsigned char const*)>:
40020ab4:	e3100003 	tst	r0, #3
40020ab8:	1a000001 	bne	40020ac4 <net::memcpy_ip(unsigned char const*)+0x10>
40020abc:	e5900000 	ldr	r0, [r0]
40020ac0:	e12fff1e 	bx	lr
40020ac4:	e24dd008 	sub	sp, sp, #8
40020ac8:	e3a03000 	mov	r3, #0
40020acc:	e28d1004 	add	r1, sp, #4
40020ad0:	e7d02003 	ldrb	r2, [r0, r3]
40020ad4:	e6ef2072 	uxtb	r2, r2
40020ad8:	e7c12003 	strb	r2, [r1, r3]
40020adc:	e2833001 	add	r3, r3, #1
40020ae0:	e3530004 	cmp	r3, #4
40020ae4:	1afffff9 	bne	40020ad0 <net::memcpy_ip(unsigned char const*)+0x1c>
40020ae8:	e59d0004 	ldr	r0, [sp, #4]
40020aec:	e28dd008 	add	sp, sp, #8
40020af0:	e12fff1e 	bx	lr

40020af4 <net::dhcp_handle_ack(net::dhcp::Message const*)>:
40020af4:	e59f3058 	ldr	r3, [pc, #88]	; 40020b54 <net::dhcp_handle_ack(net::dhcp::Message const*)+0x60>
40020af8:	e2800010 	add	r0, r0, #16
40020afc:	e92d4010 	push	{r4, lr}
40020b00:	e5934020 	ldr	r4, [r3, #32]
40020b04:	e5943030 	ldr	r3, [r4, #48]	; 0x30
40020b08:	e3530000 	cmp	r3, #0
40020b0c:	0594302c 	ldreq	r3, [r4, #44]	; 0x2c
40020b10:	01a030a3 	lsreq	r3, r3, #1
40020b14:	05843030 	streq	r3, [r4, #48]	; 0x30
40020b18:	e5943034 	ldr	r3, [r4, #52]	; 0x34
40020b1c:	e3530000 	cmp	r3, #0
40020b20:	0594302c 	ldreq	r3, [r4, #44]	; 0x2c
40020b24:	00633183 	rsbeq	r3, r3, r3, lsl #3
40020b28:	01a031a3 	lsreq	r3, r3, #3
40020b2c:	05843034 	streq	r3, [r4, #52]	; 0x34
40020b30:	ebffffdf 	bl	40020ab4 <net::memcpy_ip(unsigned char const*)>
40020b34:	e5943024 	ldr	r3, [r4, #36]	; 0x24
40020b38:	e5840020 	str	r0, [r4, #32]
40020b3c:	e3530000 	cmp	r3, #0
40020b40:	e5d4300a 	ldrb	r3, [r4, #10]
40020b44:	13833001 	orrne	r3, r3, #1
40020b48:	020330fe 	andeq	r3, r3, #254	; 0xfe
40020b4c:	e5c4300a 	strb	r3, [r4, #10]
40020b50:	e8bd8010 	pop	{r4, pc}
40020b54:	4005a73c 	andmi	sl, r5, ip, lsr r7

40020b58 <net::dhcp_inform()>:
40020b58:	e92d4073 	push	{r0, r1, r4, r5, r6, lr}
40020b5c:	e3a01000 	mov	r1, #0
40020b60:	e59f4074 	ldr	r4, [pc, #116]	; 40020bdc <net::dhcp_inform()+0x84>
40020b64:	e3a00044 	mov	r0, #68	; 0x44
40020b68:	e59f5070 	ldr	r5, [pc, #112]	; 40020be0 <net::dhcp_inform()+0x88>
40020b6c:	eb0005b5 	bl	40022248 <net::udp_begin(unsigned short, void (*)(unsigned char const*, unsigned long, unsigned long, unsigned short))>
40020b70:	e1a06000 	mov	r6, r0
40020b74:	ebfffee8 	bl	4002071c <net::message_init()>
40020b78:	e5951000 	ldr	r1, [r5]
40020b7c:	e284000c 	add	r0, r4, #12
40020b80:	ebffff3b 	bl	40020874 <net::memcpy_ip(unsigned char*, unsigned long)>
40020b84:	e3033d08 	movw	r3, #15624	; 0x3d08
40020b88:	e3a02043 	mov	r2, #67	; 0x43
40020b8c:	e1c43fb2 	strh	r3, [r4, #242]	; 0xf2
40020b90:	e3003107 	movw	r3, #263	; 0x107
40020b94:	e1c43fb4 	strh	r3, [r4, #244]	; 0xf4
40020b98:	e1a00006 	mov	r0, r6
40020b9c:	e1d531b4 	ldrh	r3, [r5, #20]
40020ba0:	e1a01004 	mov	r1, r4
40020ba4:	e58d2000 	str	r2, [sp]
40020ba8:	e3a020fd 	mov	r2, #253	; 0xfd
40020bac:	e1c43fb6 	strh	r3, [r4, #246]	; 0xf6
40020bb0:	e1d531b6 	ldrh	r3, [r5, #22]
40020bb4:	e1c43fb8 	strh	r3, [r4, #248]	; 0xf8
40020bb8:	e1d531b8 	ldrh	r3, [r5, #24]
40020bbc:	e1c43fba 	strh	r3, [r4, #250]	; 0xfa
40020bc0:	e3e03000 	mvn	r3, #0
40020bc4:	e5c430fc 	strb	r3, [r4, #252]	; 0xfc
40020bc8:	eb0005ea 	bl	40022378 <net::udp_send(long, unsigned char const*, unsigned long, unsigned long, unsigned short)>
40020bcc:	e3a00044 	mov	r0, #68	; 0x44
40020bd0:	e28dd008 	add	sp, sp, #8
40020bd4:	e8bd4070 	pop	{r4, r5, r6, lr}
40020bd8:	ea0005b2 	b	400222a8 <net::udp_end(unsigned short)>
40020bdc:	4005a374 	andmi	sl, r5, r4, ror r3
40020be0:	4005a73c 	andmi	sl, r5, ip, lsr r7

40020be4 <net::dhcp_start()>:
40020be4:	e92d4070 	push	{r4, r5, r6, lr}
40020be8:	e59f5080 	ldr	r5, [pc, #128]	; 40020c70 <net::dhcp_start()+0x8c>
40020bec:	e5954020 	ldr	r4, [r5, #32]
40020bf0:	e3540000 	cmp	r4, #0
40020bf4:	1a000006 	bne	40020c14 <net::dhcp_start()+0x30>
40020bf8:	e3a00048 	mov	r0, #72	; 0x48
40020bfc:	eb0031f5 	bl	4002d3d8 <operator new(unsigned int)>
40020c00:	e5850020 	str	r0, [r5, #32]
40020c04:	e1a04000 	mov	r4, r0
40020c08:	e59f1064 	ldr	r1, [pc, #100]	; 40020c74 <net::dhcp_start()+0x90>
40020c0c:	e3a00f7d 	mov	r0, #500	; 0x1f4
40020c10:	eb001bc2 	bl	40027b20 <SoftwareTimerAdd(unsigned long, void (*)(long))>
40020c14:	e2841048 	add	r1, r4, #72	; 0x48
40020c18:	e1a03004 	mov	r3, r4
40020c1c:	e3a02000 	mov	r2, #0
40020c20:	e1510003 	cmp	r1, r3
40020c24:	14c32001 	strbne	r2, [r3], #1
40020c28:	1afffffc 	bne	40020c20 <net::dhcp_start()+0x3c>
40020c2c:	e59f1044 	ldr	r1, [pc, #68]	; 40020c78 <net::dhcp_start()+0x94>
40020c30:	e3a00044 	mov	r0, #68	; 0x44
40020c34:	eb000583 	bl	40022248 <net::udp_begin(unsigned short, void (*)(unsigned char const*, unsigned long, unsigned long, unsigned short))>
40020c38:	e5840000 	str	r0, [r4]
40020c3c:	ebfffeb6 	bl	4002071c <net::message_init()>
40020c40:	e5d5501a 	ldrb	r5, [r5, #26]
40020c44:	e2155001 	ands	r5, r5, #1
40020c48:	1a000006 	bne	40020c68 <net::dhcp_start()+0x84>
40020c4c:	e5d43008 	ldrb	r3, [r4, #8]
40020c50:	e3530002 	cmp	r3, #2
40020c54:	11c450bc 	strhne	r5, [r4, #12]
40020c58:	13a03002 	movne	r3, #2
40020c5c:	11c430b8 	strhne	r3, [r4, #8]
40020c60:	e1a00005 	mov	r0, r5
40020c64:	e8bd8070 	pop	{r4, r5, r6, pc}
40020c68:	ebfffec3 	bl	4002077c <net::dhcp_discover()>
40020c6c:	eafffffb 	b	40020c60 <net::dhcp_start()+0x7c>
40020c70:	4005a73c 	andmi	sl, r5, ip, lsr r7
40020c74:	40020d84 	andmi	r0, r2, r4, lsl #27
40020c78:	4002102c 	andmi	r1, r2, ip, lsr #32

40020c7c <net::dhcp_release_and_stop()>:
40020c7c:	e92d40f7 	push	{r0, r1, r2, r4, r5, r6, r7, lr}
40020c80:	e59f40f4 	ldr	r4, [pc, #244]	; 40020d7c <net::dhcp_release_and_stop()+0x100>
40020c84:	e5942020 	ldr	r2, [r4, #32]
40020c88:	e3520000 	cmp	r2, #0
40020c8c:	0a000038 	beq	40020d74 <net::dhcp_release_and_stop()+0xf8>
40020c90:	e5d23008 	ldrb	r3, [r2, #8]
40020c94:	e3530000 	cmp	r3, #0
40020c98:	0a000035 	beq	40020d74 <net::dhcp_release_and_stop()+0xf8>
40020c9c:	e592701c 	ldr	r7, [r2, #28]
40020ca0:	e2820020 	add	r0, r2, #32
40020ca4:	e2823038 	add	r3, r2, #56	; 0x38
40020ca8:	e3a01000 	mov	r1, #0
40020cac:	e582101c 	str	r1, [r2, #28]
40020cb0:	e1530000 	cmp	r3, r0
40020cb4:	14c01001 	strbne	r1, [r0], #1
40020cb8:	1afffffc 	bne	40020cb0 <net::dhcp_release_and_stop()+0x34>
40020cbc:	e5940020 	ldr	r0, [r4, #32]
40020cc0:	e1c211b2 	strh	r1, [r2, #18]
40020cc4:	e5821014 	str	r1, [r2, #20]
40020cc8:	e3500000 	cmp	r0, #0
40020ccc:	e1c211b8 	strh	r1, [r2, #24]
40020cd0:	0a000020 	beq	40020d58 <net::dhcp_release_and_stop()+0xdc>
40020cd4:	e5d00008 	ldrb	r0, [r0, #8]
40020cd8:	e2403004 	sub	r3, r0, #4
40020cdc:	e350000a 	cmp	r0, #10
40020ce0:	13530001 	cmpne	r3, #1
40020ce4:	8a00001b 	bhi	40020d58 <net::dhcp_release_and_stop()+0xdc>
40020ce8:	e5d23008 	ldrb	r3, [r2, #8]
40020cec:	e59f508c 	ldr	r5, [pc, #140]	; 40020d80 <net::dhcp_release_and_stop()+0x104>
40020cf0:	e3530000 	cmp	r3, #0
40020cf4:	e3033607 	movw	r3, #13831	; 0x3607
40020cf8:	11c210b8 	strhne	r1, [r2, #8]
40020cfc:	e28500f5 	add	r0, r5, #245	; 0xf5
40020d00:	e5946020 	ldr	r6, [r4, #32]
40020d04:	11c210bc 	strhne	r1, [r2, #12]
40020d08:	e1c53fb2 	strh	r3, [r5, #242]	; 0xf2
40020d0c:	e3a03004 	mov	r3, #4
40020d10:	e5c530f4 	strb	r3, [r5, #244]	; 0xf4
40020d14:	e596101c 	ldr	r1, [r6, #28]
40020d18:	ebfffed5 	bl	40020874 <net::memcpy_ip(unsigned char*, unsigned long)>
40020d1c:	e3e03000 	mvn	r3, #0
40020d20:	e3a020fa 	mov	r2, #250	; 0xfa
40020d24:	e5c530f9 	strb	r3, [r5, #249]	; 0xf9
40020d28:	e3a03043 	mov	r3, #67	; 0x43
40020d2c:	e58d3000 	str	r3, [sp]
40020d30:	e1a01005 	mov	r1, r5
40020d34:	e5960000 	ldr	r0, [r6]
40020d38:	e1a03007 	mov	r3, r7
40020d3c:	eb00058d 	bl	40022378 <net::udp_send(long, unsigned char const*, unsigned long, unsigned long, unsigned short)>
40020d40:	e3a00044 	mov	r0, #68	; 0x44
40020d44:	eb000557 	bl	400222a8 <net::udp_end(unsigned short)>
40020d48:	e3a02000 	mov	r2, #0
40020d4c:	e1a01002 	mov	r1, r2
40020d50:	e1a00002 	mov	r0, r2
40020d54:	eb0002ab 	bl	40021808 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)>
40020d58:	e5940020 	ldr	r0, [r4, #32]
40020d5c:	e3500000 	cmp	r0, #0
40020d60:	0a000001 	beq	40020d6c <net::dhcp_release_and_stop()+0xf0>
40020d64:	e3a01048 	mov	r1, #72	; 0x48
40020d68:	eb003199 	bl	4002d3d4 <operator delete(void*, unsigned int)>
40020d6c:	e3a03000 	mov	r3, #0
40020d70:	e5843020 	str	r3, [r4, #32]
40020d74:	e28dd00c 	add	sp, sp, #12
40020d78:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
40020d7c:	4005a73c 	andmi	sl, r5, ip, lsr r7
40020d80:	4005a374 	andmi	sl, r5, r4, ror r3

40020d84 <net::dhcp_fine_tmr(long)>:
40020d84:	e59f3080 	ldr	r3, [pc, #128]	; 40020e0c <net::dhcp_fine_tmr(long)+0x88>
40020d88:	e5933020 	ldr	r3, [r3, #32]
40020d8c:	e3530000 	cmp	r3, #0
40020d90:	012fff1e 	bxeq	lr
40020d94:	e1d320bc 	ldrh	r2, [r3, #12]
40020d98:	e3520001 	cmp	r2, #1
40020d9c:	9a000002 	bls	40020dac <net::dhcp_fine_tmr(long)+0x28>
40020da0:	e2422001 	sub	r2, r2, #1
40020da4:	e1c320bc 	strh	r2, [r3, #12]
40020da8:	e12fff1e 	bx	lr
40020dac:	112fff1e 	bxne	lr
40020db0:	e3a02000 	mov	r2, #0
40020db4:	e1c320bc 	strh	r2, [r3, #12]
40020db8:	e5d32008 	ldrb	r2, [r3, #8]
40020dbc:	e3520006 	cmp	r2, #6
40020dc0:	1352000c 	cmpne	r2, #12
40020dc4:	1a000000 	bne	40020dcc <net::dhcp_fine_tmr(long)+0x48>
40020dc8:	eafffe6b 	b	4002077c <net::dhcp_discover()>
40020dcc:	e3520001 	cmp	r2, #1
40020dd0:	1a000007 	bne	40020df4 <net::dhcp_fine_tmr(long)+0x70>
40020dd4:	e5d33009 	ldrb	r3, [r3, #9]
40020dd8:	e3530005 	cmp	r3, #5
40020ddc:	8a000000 	bhi	40020de4 <net::dhcp_fine_tmr(long)+0x60>
40020de0:	eafffefa 	b	400209d0 <net::dhcp_select()>
40020de4:	e92d4010 	push	{r4, lr}
40020de8:	ebffffa3 	bl	40020c7c <net::dhcp_release_and_stop()>
40020dec:	e8bd4010 	pop	{r4, lr}
40020df0:	eaffff7b 	b	40020be4 <net::dhcp_start()>
40020df4:	e3520003 	cmp	r2, #3
40020df8:	112fff1e 	bxne	lr
40020dfc:	e5d33009 	ldrb	r3, [r3, #9]
40020e00:	e3530001 	cmp	r3, #1
40020e04:	8affffef 	bhi	40020dc8 <net::dhcp_fine_tmr(long)+0x44>
40020e08:	eaffff0c 	b	40020a40 <net::dhcp_reboot()>
40020e0c:	4005a73c 	andmi	sl, r5, ip, lsr r7

40020e10 <net::dhcp_process(net::dhcp::Message const*, unsigned long)>:
40020e10:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
40020e14:	e3a02000 	mov	r2, #0
40020e18:	e59f8208 	ldr	r8, [pc, #520]	; 40021028 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x218>
40020e1c:	e1a06000 	mov	r6, r0
40020e20:	e5985020 	ldr	r5, [r8, #32]
40020e24:	e2853020 	add	r3, r5, #32
40020e28:	e2850038 	add	r0, r5, #56	; 0x38
40020e2c:	e1500003 	cmp	r0, r3
40020e30:	14c32001 	strbne	r2, [r3], #1
40020e34:	1afffffc 	bne	40020e2c <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x1c>
40020e38:	e585201c 	str	r2, [r5, #28]
40020e3c:	e28640f0 	add	r4, r6, #240	; 0xf0
40020e40:	e0847001 	add	r7, r4, r1
40020e44:	e3a09000 	mov	r9, #0
40020e48:	e1540007 	cmp	r4, r7
40020e4c:	2a00003f 	bcs	40020f50 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x140>
40020e50:	e5d43000 	ldrb	r3, [r4]
40020e54:	e353003b 	cmp	r3, #59	; 0x3b
40020e58:	8a000019 	bhi	40020ec4 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0xb4>
40020e5c:	e3530032 	cmp	r3, #50	; 0x32
40020e60:	8a00000a 	bhi	40020e90 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x80>
40020e64:	e3530001 	cmp	r3, #1
40020e68:	0a00001c 	beq	40020ee0 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0xd0>
40020e6c:	e3530003 	cmp	r3, #3
40020e70:	0a00001f 	beq	40020ef4 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0xe4>
40020e74:	e3530000 	cmp	r3, #0
40020e78:	02844001 	addeq	r4, r4, #1
40020e7c:	0afffff1 	beq	40020e48 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x38>
40020e80:	e2843002 	add	r3, r4, #2
40020e84:	e5d44001 	ldrb	r4, [r4, #1]
40020e88:	e0834004 	add	r4, r3, r4
40020e8c:	eaffffed 	b	40020e48 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x38>
40020e90:	e2433033 	sub	r3, r3, #51	; 0x33
40020e94:	e3530008 	cmp	r3, #8
40020e98:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
40020e9c:	eafffff7 	b	40020e80 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x70>
40020ea0:	40020f14 	andmi	r0, r2, r4, lsl pc
40020ea4:	40020e80 	andmi	r0, r2, r0, lsl #29
40020ea8:	40020ed4 	ldrdmi	r0, [r2], -r4
40020eac:	40020f04 	andmi	r0, r2, r4, lsl #30
40020eb0:	40020e80 	andmi	r0, r2, r0, lsl #29
40020eb4:	40020e80 	andmi	r0, r2, r0, lsl #29
40020eb8:	40020e80 	andmi	r0, r2, r0, lsl #29
40020ebc:	40020f28 	andmi	r0, r2, r8, lsr #30
40020ec0:	40020f3c 	andmi	r0, r2, ip, lsr pc
40020ec4:	e35300ff 	cmp	r3, #255	; 0xff
40020ec8:	01a04007 	moveq	r4, r7
40020ecc:	0affffdd 	beq	40020e48 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x38>
40020ed0:	eaffffea 	b	40020e80 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x70>
40020ed4:	e5d49002 	ldrb	r9, [r4, #2]
40020ed8:	e2844003 	add	r4, r4, #3
40020edc:	eaffffd9 	b	40020e48 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x38>
40020ee0:	e2840002 	add	r0, r4, #2
40020ee4:	ebfffef2 	bl	40020ab4 <net::memcpy_ip(unsigned char const*)>
40020ee8:	e5850024 	str	r0, [r5, #36]	; 0x24
40020eec:	e2844006 	add	r4, r4, #6
40020ef0:	eaffffd4 	b	40020e48 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x38>
40020ef4:	e2840002 	add	r0, r4, #2
40020ef8:	ebfffeed 	bl	40020ab4 <net::memcpy_ip(unsigned char const*)>
40020efc:	e5850028 	str	r0, [r5, #40]	; 0x28
40020f00:	eafffff9 	b	40020eec <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0xdc>
40020f04:	e2840002 	add	r0, r4, #2
40020f08:	ebfffee9 	bl	40020ab4 <net::memcpy_ip(unsigned char const*)>
40020f0c:	e585001c 	str	r0, [r5, #28]
40020f10:	eafffff5 	b	40020eec <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0xdc>
40020f14:	e2840002 	add	r0, r4, #2
40020f18:	ebfffee5 	bl	40020ab4 <net::memcpy_ip(unsigned char const*)>
40020f1c:	e6bf0f30 	rev	r0, r0
40020f20:	e585002c 	str	r0, [r5, #44]	; 0x2c
40020f24:	eafffff0 	b	40020eec <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0xdc>
40020f28:	e2840002 	add	r0, r4, #2
40020f2c:	ebfffee0 	bl	40020ab4 <net::memcpy_ip(unsigned char const*)>
40020f30:	e6bf0f30 	rev	r0, r0
40020f34:	e5850030 	str	r0, [r5, #48]	; 0x30
40020f38:	eaffffeb 	b	40020eec <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0xdc>
40020f3c:	e2840002 	add	r0, r4, #2
40020f40:	ebfffedb 	bl	40020ab4 <net::memcpy_ip(unsigned char const*)>
40020f44:	e6bf0f30 	rev	r0, r0
40020f48:	e5850034 	str	r0, [r5, #52]	; 0x34
40020f4c:	eaffffe6 	b	40020eec <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0xdc>
40020f50:	e3590002 	cmp	r9, #2
40020f54:	1a000011 	bne	40020fa0 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x190>
40020f58:	e2866010 	add	r6, r6, #16
40020f5c:	e1a00006 	mov	r0, r6
40020f60:	ebfffed3 	bl	40020ab4 <net::memcpy_ip(unsigned char const*)>
40020f64:	e5d53008 	ldrb	r3, [r5, #8]
40020f68:	e5850020 	str	r0, [r5, #32]
40020f6c:	e3530006 	cmp	r3, #6
40020f70:	18bd87f0 	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
40020f74:	e5984020 	ldr	r4, [r8, #32]
40020f78:	e594301c 	ldr	r3, [r4, #28]
40020f7c:	e3530000 	cmp	r3, #0
40020f80:	08bd87f0 	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
40020f84:	e3a03000 	mov	r3, #0
40020f88:	e1a00006 	mov	r0, r6
40020f8c:	e1c430bc 	strh	r3, [r4, #12]
40020f90:	ebfffec7 	bl	40020ab4 <net::memcpy_ip(unsigned char const*)>
40020f94:	e5840020 	str	r0, [r4, #32]
40020f98:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
40020f9c:	eafffe8b 	b	400209d0 <net::dhcp_select()>
40020fa0:	e3590005 	cmp	r9, #5
40020fa4:	1a00000b 	bne	40020fd8 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x1c8>
40020fa8:	e5d53008 	ldrb	r3, [r5, #8]
40020fac:	e20320fd 	and	r2, r3, #253	; 0xfd
40020fb0:	e3520001 	cmp	r2, #1
40020fb4:	1a000003 	bne	40020fc8 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x1b8>
40020fb8:	e1a00006 	mov	r0, r6
40020fbc:	ebfffecc 	bl	40020af4 <net::dhcp_handle_ack(net::dhcp::Message const*)>
40020fc0:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
40020fc4:	eafffd85 	b	400205e0 <net::dhcp_bind()>
40020fc8:	e2433004 	sub	r3, r3, #4
40020fcc:	e3530001 	cmp	r3, #1
40020fd0:	88bd87f0 	pophi	{r4, r5, r6, r7, r8, r9, sl, pc}
40020fd4:	eafffff7 	b	40020fb8 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x1a8>
40020fd8:	e3590006 	cmp	r9, #6
40020fdc:	18bd87f0 	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
40020fe0:	e5d53008 	ldrb	r3, [r5, #8]
40020fe4:	e2432003 	sub	r2, r3, #3
40020fe8:	e3530001 	cmp	r3, #1
40020fec:	13520002 	cmpne	r2, #2
40020ff0:	88bd87f0 	pophi	{r4, r5, r6, r7, r8, r9, sl, pc}
40020ff4:	e5983020 	ldr	r3, [r8, #32]
40020ff8:	e5d32008 	ldrb	r2, [r3, #8]
40020ffc:	e352000c 	cmp	r2, #12
40021000:	13a0200c 	movne	r2, #12
40021004:	11c320b8 	strhne	r2, [r3, #8]
40021008:	13a02000 	movne	r2, #0
4002100c:	11c320bc 	strhne	r2, [r3, #12]
40021010:	e3a02000 	mov	r2, #0
40021014:	e1a01002 	mov	r1, r2
40021018:	e1a00002 	mov	r0, r2
4002101c:	eb0001f9 	bl	40021808 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)>
40021020:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
40021024:	eafffdd4 	b	4002077c <net::dhcp_discover()>
40021028:	4005a73c 	andmi	sl, r5, ip, lsr r7

4002102c <net::dhcp_input(unsigned char const*, unsigned long, unsigned long, unsigned short)>:
4002102c:	e3530043 	cmp	r3, #67	; 0x43
40021030:	112fff1e 	bxne	lr
40021034:	e59f3014 	ldr	r3, [pc, #20]	; 40021050 <net::dhcp_input(unsigned char const*, unsigned long, unsigned long, unsigned short)+0x24>
40021038:	e5902004 	ldr	r2, [r0, #4]
4002103c:	e5933020 	ldr	r3, [r3, #32]
40021040:	e5933004 	ldr	r3, [r3, #4]
40021044:	e1520003 	cmp	r2, r3
40021048:	112fff1e 	bxne	lr
4002104c:	eaffff6f 	b	40020e10 <net::dhcp_process(net::dhcp::Message const*, unsigned long)>
40021050:	4005a73c 	andmi	sl, r5, ip, lsr r7

40021054 <net::igmp_send_report(unsigned long)>:
40021054:	e7e6c450 	ubfx	ip, r0, #8, #7
40021058:	e30a1598 	movw	r1, #42392	; 0xa598
4002105c:	e92d4030 	push	{r4, r5, lr}
40021060:	e24dd00c 	sub	sp, sp, #12
40021064:	e3441005 	movt	r1, #16389	; 0x4005
40021068:	e30a46f4 	movw	r4, #42740	; 0xa6f4
4002106c:	e3444005 	movt	r4, #16389	; 0x4005
40021070:	e1a03001 	mov	r3, r1
40021074:	e5c1c003 	strb	ip, [r1, #3]
40021078:	e1a02004 	mov	r2, r4
4002107c:	e7e7c850 	ubfx	ip, r0, #16, #8
40021080:	e58d0004 	str	r0, [sp, #4]
40021084:	e7e70c50 	ubfx	r0, r0, #24, #8
40021088:	e5c10005 	strb	r0, [r1, #5]
4002108c:	e2810006 	add	r0, r1, #6
40021090:	e5c1c004 	strb	ip, [r1, #4]
40021094:	e4d31001 	ldrb	r1, [r3], #1
40021098:	e1530000 	cmp	r3, r0
4002109c:	e4c21001 	strb	r1, [r2], #1
400210a0:	1afffffb 	bne	40021094 <net::igmp_send_report(unsigned long)+0x40>
400210a4:	e59f2098 	ldr	r2, [pc, #152]	; 40021144 <net::igmp_send_report(unsigned long)+0xf0>
400210a8:	e30a55a0 	movw	r5, #42400	; 0xa5a0
400210ac:	e3445005 	movt	r5, #16389	; 0x4005
400210b0:	e1d530b0 	ldrh	r3, [r5]
400210b4:	e1c431b2 	strh	r3, [r4, #18]
400210b8:	e28d3004 	add	r3, sp, #4
400210bc:	e4d31001 	ldrb	r1, [r3], #1
400210c0:	e28d0008 	add	r0, sp, #8
400210c4:	e1530000 	cmp	r3, r0
400210c8:	e4c21001 	strb	r1, [r2], #1
400210cc:	1afffffa 	bne	400210bc <net::igmp_send_report(unsigned long)+0x68>
400210d0:	e59f0070 	ldr	r0, [pc, #112]	; 40021148 <net::igmp_send_report(unsigned long)+0xf4>
400210d4:	e3a03000 	mov	r3, #0
400210d8:	e1c431b8 	strh	r3, [r4, #24]
400210dc:	e3a01018 	mov	r1, #24
400210e0:	eb0000b9 	bl	400213cc <net::net_chksum(void const*, unsigned long)>
400210e4:	e59f2060 	ldr	r2, [pc, #96]	; 4002114c <net::igmp_send_report(unsigned long)+0xf8>
400210e8:	e28d3004 	add	r3, sp, #4
400210ec:	e1c401b8 	strh	r0, [r4, #24]
400210f0:	e4d31001 	ldrb	r1, [r3], #1
400210f4:	e28d0008 	add	r0, sp, #8
400210f8:	e1530000 	cmp	r3, r0
400210fc:	e4c21001 	strb	r1, [r2], #1
40021100:	1afffffa 	bne	400210f0 <net::igmp_send_report(unsigned long)+0x9c>
40021104:	e59f003c 	ldr	r0, [pc, #60]	; 40021148 <net::igmp_send_report(unsigned long)+0xf4>
40021108:	e3a03000 	mov	r3, #0
4002110c:	e1c432b8 	strh	r3, [r4, #40]	; 0x28
40021110:	e3a01020 	mov	r1, #32
40021114:	eb0000ac 	bl	400213cc <net::net_chksum(void const*, unsigned long)>
40021118:	e1a03000 	mov	r3, r0
4002111c:	e30a06f4 	movw	r0, #42740	; 0xa6f4
40021120:	e3440005 	movt	r0, #16389	; 0x4005
40021124:	e3a0102e 	mov	r1, #46	; 0x2e
40021128:	e1c432b8 	strh	r3, [r4, #40]	; 0x28
4002112c:	eb0006bb 	bl	40022c20 <emac_eth_send(void*, unsigned long)>
40021130:	e1d530b0 	ldrh	r3, [r5]
40021134:	e2833001 	add	r3, r3, #1
40021138:	e1c530b0 	strh	r3, [r5]
4002113c:	e28dd00c 	add	sp, sp, #12
40021140:	e8bd8030 	pop	{r4, r5, pc}
40021144:	4005a712 	andmi	sl, r5, r2, lsl r7
40021148:	4005a702 	andmi	sl, r5, r2, lsl #14
4002114c:	4005a71e 	andmi	sl, r5, lr, lsl r7

40021150 <net::igmp_timer(long)>:
40021150:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40021154:	e3a060e0 	mov	r6, #224	; 0xe0
40021158:	e59f405c 	ldr	r4, [pc, #92]	; 400211bc <net::igmp_timer(long)+0x6c>
4002115c:	e3a07002 	mov	r7, #2
40021160:	e3406100 	movt	r6, #256	; 0x100
40021164:	e2845e12 	add	r5, r4, #288	; 0x120
40021168:	ea000002 	b	40021178 <net::igmp_timer(long)+0x28>
4002116c:	e2844008 	add	r4, r4, #8
40021170:	e1540005 	cmp	r4, r5
40021174:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
40021178:	e15420b4 	ldrh	r2, [r4, #-4]
4002117c:	e3520000 	cmp	r2, #0
40021180:	e2423001 	sub	r3, r2, #1
40021184:	e6ff3073 	uxth	r3, r3
40021188:	0afffff7 	beq	4002116c <net::igmp_timer(long)+0x1c>
4002118c:	e14430b4 	strh	r3, [r4, #-4]
40021190:	e3530000 	cmp	r3, #0
40021194:	1afffff4 	bne	4002116c <net::igmp_timer(long)+0x1c>
40021198:	e5543002 	ldrb	r3, [r4, #-2]
4002119c:	e3530001 	cmp	r3, #1
400211a0:	1afffff1 	bne	4002116c <net::igmp_timer(long)+0x1c>
400211a4:	e5140008 	ldr	r0, [r4, #-8]
400211a8:	e1500006 	cmp	r0, r6
400211ac:	0affffee 	beq	4002116c <net::igmp_timer(long)+0x1c>
400211b0:	e5447002 	strb	r7, [r4, #-2]
400211b4:	ebffffa6 	bl	40021054 <net::igmp_send_report(unsigned long)>
400211b8:	eaffffeb 	b	4002116c <net::igmp_timer(long)+0x1c>
400211bc:	4005a5dc 	ldrdmi	sl, [r5], -ip

400211c0 <net::igmp_set_ip()>:
400211c0:	e59f1058 	ldr	r1, [pc, #88]	; 40021220 <net::igmp_set_ip()+0x60>
400211c4:	e30a373c 	movw	r3, #42812	; 0xa73c
400211c8:	e3443005 	movt	r3, #16389	; 0x4005
400211cc:	e24dd008 	sub	sp, sp, #8
400211d0:	e28d2004 	add	r2, sp, #4
400211d4:	e28d0008 	add	r0, sp, #8
400211d8:	e593c000 	ldr	ip, [r3]
400211dc:	e58dc004 	str	ip, [sp, #4]
400211e0:	e4d23001 	ldrb	r3, [r2], #1
400211e4:	e1520000 	cmp	r2, r0
400211e8:	e6ef3073 	uxtb	r3, r3
400211ec:	e4c13001 	strb	r3, [r1], #1
400211f0:	1afffffa 	bne	400211e0 <net::igmp_set_ip()+0x20>
400211f4:	e59f1028 	ldr	r1, [pc, #40]	; 40021224 <net::igmp_set_ip()+0x64>
400211f8:	e28d2004 	add	r2, sp, #4
400211fc:	e58dc004 	str	ip, [sp, #4]
40021200:	e28d0008 	add	r0, sp, #8
40021204:	e4d23001 	ldrb	r3, [r2], #1
40021208:	e1520000 	cmp	r2, r0
4002120c:	e6ef3073 	uxtb	r3, r3
40021210:	e4c13001 	strb	r3, [r1], #1
40021214:	1afffffa 	bne	40021204 <net::igmp_set_ip()+0x44>
40021218:	e28dd008 	add	sp, sp, #8
4002121c:	e12fff1e 	bx	lr
40021220:	4005a70e 	andmi	sl, r5, lr, lsl #14
40021224:	4005a5be 			; <UNDEFINED> instruction: 0x4005a5be

40021228 <net::igmp_join(unsigned long)>:
40021228:	e20030e0 	and	r3, r0, #224	; 0xe0
4002122c:	e35300e0 	cmp	r3, #224	; 0xe0
40021230:	112fff1e 	bxne	lr
40021234:	e30a15d4 	movw	r1, #42452	; 0xa5d4
40021238:	e3a03000 	mov	r3, #0
4002123c:	e3441005 	movt	r1, #16389	; 0x4005
40021240:	ea000002 	b	40021250 <net::igmp_join(unsigned long)+0x28>
40021244:	e2833001 	add	r3, r3, #1
40021248:	e3530024 	cmp	r3, #36	; 0x24
4002124c:	012fff1e 	bxeq	lr
40021250:	e7912183 	ldr	r2, [r1, r3, lsl #3]
40021254:	e1520000 	cmp	r2, r0
40021258:	012fff1e 	bxeq	lr
4002125c:	e3520000 	cmp	r2, #0
40021260:	1afffff7 	bne	40021244 <net::igmp_join(unsigned long)+0x1c>
40021264:	e0812183 	add	r2, r1, r3, lsl #3
40021268:	e3a0c001 	mov	ip, #1
4002126c:	e7810183 	str	r0, [r1, r3, lsl #3]
40021270:	e3a03002 	mov	r3, #2
40021274:	e5c2c006 	strb	ip, [r2, #6]
40021278:	e1c230b4 	strh	r3, [r2, #4]
4002127c:	eaffff74 	b	40021054 <net::igmp_send_report(unsigned long)>

40021280 <net::igmp_leave(unsigned long)>:
40021280:	e92d40f0 	push	{r4, r5, r6, r7, lr}
40021284:	e30a45d4 	movw	r4, #42452	; 0xa5d4
40021288:	e3444005 	movt	r4, #16389	; 0x4005
4002128c:	e24dd00c 	sub	sp, sp, #12
40021290:	e1a05000 	mov	r5, r0
40021294:	e2842e12 	add	r2, r4, #288	; 0x120
40021298:	ea000002 	b	400212a8 <net::igmp_leave(unsigned long)+0x28>
4002129c:	e2844008 	add	r4, r4, #8
400212a0:	e1540002 	cmp	r4, r2
400212a4:	0a000027 	beq	40021348 <net::igmp_leave(unsigned long)+0xc8>
400212a8:	e5943000 	ldr	r3, [r4]
400212ac:	e1530005 	cmp	r3, r5
400212b0:	1afffff9 	bne	4002129c <net::igmp_leave(unsigned long)+0x1c>
400212b4:	e30a75a0 	movw	r7, #42400	; 0xa5a0
400212b8:	e30a65a4 	movw	r6, #42404	; 0xa5a4
400212bc:	e3447005 	movt	r7, #16389	; 0x4005
400212c0:	e3a01018 	mov	r1, #24
400212c4:	e3446005 	movt	r6, #16389	; 0x4005
400212c8:	e1d730b0 	ldrh	r3, [r7]
400212cc:	e286000e 	add	r0, r6, #14
400212d0:	e1c631b2 	strh	r3, [r6, #18]
400212d4:	e3a03000 	mov	r3, #0
400212d8:	e1c631b8 	strh	r3, [r6, #24]
400212dc:	eb00003a 	bl	400213cc <net::net_chksum(void const*, unsigned long)>
400212e0:	e1c601b8 	strh	r0, [r6, #24]
400212e4:	e28d2004 	add	r2, sp, #4
400212e8:	e58d5004 	str	r5, [sp, #4]
400212ec:	e286102a 	add	r1, r6, #42	; 0x2a
400212f0:	e28d0008 	add	r0, sp, #8
400212f4:	e4d23001 	ldrb	r3, [r2], #1
400212f8:	e1520000 	cmp	r2, r0
400212fc:	e6ef3073 	uxtb	r3, r3
40021300:	e4c13001 	strb	r3, [r1], #1
40021304:	1afffffa 	bne	400212f4 <net::igmp_leave(unsigned long)+0x74>
40021308:	e59f0040 	ldr	r0, [pc, #64]	; 40021350 <net::igmp_leave(unsigned long)+0xd0>
4002130c:	e3a05000 	mov	r5, #0
40021310:	e1c652b8 	strh	r5, [r6, #40]	; 0x28
40021314:	e3a01020 	mov	r1, #32
40021318:	eb00002b 	bl	400213cc <net::net_chksum(void const*, unsigned long)>
4002131c:	e1c602b8 	strh	r0, [r6, #40]	; 0x28
40021320:	e30a05a4 	movw	r0, #42404	; 0xa5a4
40021324:	e3440005 	movt	r0, #16389	; 0x4005
40021328:	e3a0102e 	mov	r1, #46	; 0x2e
4002132c:	eb00063b 	bl	40022c20 <emac_eth_send(void*, unsigned long)>
40021330:	e1d730b0 	ldrh	r3, [r7]
40021334:	e5845000 	str	r5, [r4]
40021338:	e5c45006 	strb	r5, [r4, #6]
4002133c:	e2833001 	add	r3, r3, #1
40021340:	e1c450b4 	strh	r5, [r4, #4]
40021344:	e1c730b0 	strh	r3, [r7]
40021348:	e28dd00c 	add	sp, sp, #12
4002134c:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
40021350:	4005a5b2 			; <UNDEFINED> instruction: 0x4005a5b2

40021354 <net::igmp_report_groups()>:
40021354:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40021358:	e30c5ccd 	movw	r5, #52429	; 0xcccd
4002135c:	e59f4064 	ldr	r4, [pc, #100]	; 400213c8 <net::igmp_report_groups()+0x74>
40021360:	e3a06005 	mov	r6, #5
40021364:	e34c5ccc 	movt	r5, #52428	; 0xcccc
40021368:	e3a08001 	mov	r8, #1
4002136c:	e2847e12 	add	r7, r4, #288	; 0x120
40021370:	ea000002 	b	40021380 <net::igmp_report_groups()+0x2c>
40021374:	e2844008 	add	r4, r4, #8
40021378:	e1540007 	cmp	r4, r7
4002137c:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
40021380:	e5543002 	ldrb	r3, [r4, #-2]
40021384:	e3530002 	cmp	r3, #2
40021388:	0a000005 	beq	400213a4 <net::igmp_report_groups()+0x50>
4002138c:	e3530001 	cmp	r3, #1
40021390:	1afffff7 	bne	40021374 <net::igmp_report_groups()+0x20>
40021394:	e15430b4 	ldrh	r3, [r4, #-4]
40021398:	e2433001 	sub	r3, r3, #1
4002139c:	e3530004 	cmp	r3, #4
400213a0:	9afffff3 	bls	40021374 <net::igmp_report_groups()+0x20>
400213a4:	eb002e41 	bl	4002ccb0 <random>
400213a8:	e0832095 	umull	r2, r3, r5, r0
400213ac:	e5448002 	strb	r8, [r4, #-2]
400213b0:	e1a03123 	lsr	r3, r3, #2
400213b4:	e0630396 	mls	r3, r6, r3, r0
400213b8:	e3530000 	cmp	r3, #0
400213bc:	01a03008 	moveq	r3, r8
400213c0:	e14430b4 	strh	r3, [r4, #-4]
400213c4:	eaffffea 	b	40021374 <net::igmp_report_groups()+0x20>
400213c8:	4005a5dc 	ldrdmi	sl, [r5], -ip

400213cc <net::net_chksum(void const*, unsigned long)>:
400213cc:	e3510001 	cmp	r1, #1
400213d0:	9a000048 	bls	400214f8 <net::net_chksum(void const*, unsigned long)+0x12c>
400213d4:	e92d40f0 	push	{r4, r5, r6, r7, lr}
400213d8:	e241e002 	sub	lr, r1, #2
400213dc:	e35e001f 	cmp	lr, #31
400213e0:	9a000048 	bls	40021508 <net::net_chksum(void const*, unsigned long)+0x13c>
400213e4:	e0815000 	add	r5, r1, r0
400213e8:	e281401e 	add	r4, r1, #30
400213ec:	e0804004 	add	r4, r0, r4
400213f0:	e280c020 	add	ip, r0, #32
400213f4:	e3a03000 	mov	r3, #0
400213f8:	e15c61be 	ldrh	r6, [ip, #-30]	; 0xffffffe2
400213fc:	e15c22b0 	ldrh	r2, [ip, #-32]	; 0xffffffe0
40021400:	f5dcf024 	pld	[ip, #36]	; 0x24
40021404:	e0822006 	add	r2, r2, r6
40021408:	e15c61bc 	ldrh	r6, [ip, #-28]	; 0xffffffe4
4002140c:	e0822006 	add	r2, r2, r6
40021410:	e15c61ba 	ldrh	r6, [ip, #-26]	; 0xffffffe6
40021414:	e0822006 	add	r2, r2, r6
40021418:	e15c61b8 	ldrh	r6, [ip, #-24]	; 0xffffffe8
4002141c:	e0822006 	add	r2, r2, r6
40021420:	e15c61b6 	ldrh	r6, [ip, #-22]	; 0xffffffea
40021424:	e0822006 	add	r2, r2, r6
40021428:	e15c61b4 	ldrh	r6, [ip, #-20]	; 0xffffffec
4002142c:	e0822006 	add	r2, r2, r6
40021430:	e15c61b2 	ldrh	r6, [ip, #-18]	; 0xffffffee
40021434:	e0822006 	add	r2, r2, r6
40021438:	e15c61b0 	ldrh	r6, [ip, #-16]
4002143c:	e0822006 	add	r2, r2, r6
40021440:	e15c60be 	ldrh	r6, [ip, #-14]
40021444:	e0822006 	add	r2, r2, r6
40021448:	e15c60bc 	ldrh	r6, [ip, #-12]
4002144c:	e0822006 	add	r2, r2, r6
40021450:	e15c60ba 	ldrh	r6, [ip, #-10]
40021454:	e0822006 	add	r2, r2, r6
40021458:	e15c60b8 	ldrh	r6, [ip, #-8]
4002145c:	e0822006 	add	r2, r2, r6
40021460:	e15c60b6 	ldrh	r6, [ip, #-6]
40021464:	e0822006 	add	r2, r2, r6
40021468:	e15c60b4 	ldrh	r6, [ip, #-4]
4002146c:	e0822006 	add	r2, r2, r6
40021470:	e15c60b2 	ldrh	r6, [ip, #-2]
40021474:	e0822006 	add	r2, r2, r6
40021478:	e0833002 	add	r3, r3, r2
4002147c:	e1a0200c 	mov	r2, ip
40021480:	e045600c 	sub	r6, r5, ip
40021484:	e28cc020 	add	ip, ip, #32
40021488:	e044700c 	sub	r7, r4, ip
4002148c:	e357001f 	cmp	r7, #31
40021490:	8affffd8 	bhi	400213f8 <net::net_chksum(void const*, unsigned long)+0x2c>
40021494:	e2464002 	sub	r4, r6, #2
40021498:	e3c44001 	bic	r4, r4, #1
4002149c:	e2844002 	add	r4, r4, #2
400214a0:	e0824004 	add	r4, r2, r4
400214a4:	e0d2c0b2 	ldrh	ip, [r2], #2
400214a8:	e1520004 	cmp	r2, r4
400214ac:	e083300c 	add	r3, r3, ip
400214b0:	1afffffb 	bne	400214a4 <net::net_chksum(void const*, unsigned long)+0xd8>
400214b4:	e3cee001 	bic	lr, lr, #1
400214b8:	e3110001 	tst	r1, #1
400214bc:	e28ee002 	add	lr, lr, #2
400214c0:	e080000e 	add	r0, r0, lr
400214c4:	0a000003 	beq	400214d8 <net::net_chksum(void const*, unsigned long)+0x10c>
400214c8:	e5d02000 	ldrb	r2, [r0]
400214cc:	e1a02402 	lsl	r2, r2, #8
400214d0:	e6bf2fb2 	rev16	r2, r2
400214d4:	e6f33072 	uxtah	r3, r3, r2
400214d8:	e1b02823 	lsrs	r2, r3, #16
400214dc:	0a00001a 	beq	4002154c <net::net_chksum(void const*, unsigned long)+0x180>
400214e0:	e6f23073 	uxtah	r3, r2, r3
400214e4:	e1b02823 	lsrs	r2, r3, #16
400214e8:	1afffffc 	bne	400214e0 <net::net_chksum(void const*, unsigned long)+0x114>
400214ec:	e1e00003 	mvn	r0, r3
400214f0:	e6ff0070 	uxth	r0, r0
400214f4:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
400214f8:	e3510000 	cmp	r1, #0
400214fc:	1a000005 	bne	40021518 <net::net_chksum(void const*, unsigned long)+0x14c>
40021500:	e30f0fff 	movw	r0, #65535	; 0xffff
40021504:	e12fff1e 	bx	lr
40021508:	e1a02000 	mov	r2, r0
4002150c:	e1a06001 	mov	r6, r1
40021510:	e3a03000 	mov	r3, #0
40021514:	eaffffde 	b	40021494 <net::net_chksum(void const*, unsigned long)+0xc8>
40021518:	e5d02000 	ldrb	r2, [r0]
4002151c:	e3a03000 	mov	r3, #0
40021520:	e1a02402 	lsl	r2, r2, #8
40021524:	e6bf2fb2 	rev16	r2, r2
40021528:	e6f33072 	uxtah	r3, r3, r2
4002152c:	e1b02823 	lsrs	r2, r3, #16
40021530:	0a000008 	beq	40021558 <net::net_chksum(void const*, unsigned long)+0x18c>
40021534:	e6f23073 	uxtah	r3, r2, r3
40021538:	e1b02823 	lsrs	r2, r3, #16
4002153c:	1afffffc 	bne	40021534 <net::net_chksum(void const*, unsigned long)+0x168>
40021540:	e1e00003 	mvn	r0, r3
40021544:	e6ff0070 	uxth	r0, r0
40021548:	e12fff1e 	bx	lr
4002154c:	e1e03003 	mvn	r3, r3
40021550:	e6ff0073 	uxth	r0, r3
40021554:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
40021558:	e1e03003 	mvn	r3, r3
4002155c:	e6ff0073 	uxth	r0, r3
40021560:	e12fff1e 	bx	lr

40021564 <net::primary_ip_conflict_callback(net::acd::Callback)>:
40021564:	e3500000 	cmp	r0, #0
40021568:	0a000007 	beq	4002158c <net::primary_ip_conflict_callback(net::acd::Callback)+0x28>
4002156c:	e3500002 	cmp	r0, #2
40021570:	112fff1e 	bxne	lr
40021574:	e30a373c 	movw	r3, #42812	; 0xa73c
40021578:	e3443005 	movt	r3, #16389	; 0x4005
4002157c:	e5d3201a 	ldrb	r2, [r3, #26]
40021580:	e3c22008 	bic	r2, r2, #8
40021584:	e5c3201a 	strb	r2, [r3, #26]
40021588:	e12fff1e 	bx	lr
4002158c:	e30a3724 	movw	r3, #42788	; 0xa724
40021590:	e92d4010 	push	{r4, lr}
40021594:	e30a473c 	movw	r4, #42812	; 0xa73c
40021598:	e3443005 	movt	r3, #16389	; 0x4005
4002159c:	e3444005 	movt	r4, #16389	; 0x4005
400215a0:	e5930000 	ldr	r0, [r3]
400215a4:	e5943010 	ldr	r3, [r4, #16]
400215a8:	e1500003 	cmp	r0, r3
400215ac:	0a000005 	beq	400215c8 <net::primary_ip_conflict_callback(net::acd::Callback)+0x64>
400215b0:	eb000064 	bl	40021748 <net::netif_set_ipaddr(net::ip_addr)>
400215b4:	ebfffd67 	bl	40020b58 <net::dhcp_inform()>
400215b8:	e5d4301a 	ldrb	r3, [r4, #26]
400215bc:	e3833008 	orr	r3, r3, #8
400215c0:	e5c4301a 	strb	r3, [r4, #26]
400215c4:	e8bd8010 	pop	{r4, pc}
400215c8:	e1a02000 	mov	r2, r0
400215cc:	e3a010ff 	mov	r1, #255	; 0xff
400215d0:	eb00008c 	bl	40021808 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)>
400215d4:	eafffff6 	b	400215b4 <net::primary_ip_conflict_callback(net::acd::Callback)+0x50>

400215d8 <net::net_shutdown()>:
400215d8:	ea0000c9 	b	40021904 <net::netif_set_link_down()>

400215dc <net::net_set_primary_ip(net::ip_addr)>:
400215dc:	e92d4010 	push	{r4, lr}
400215e0:	e1a04000 	mov	r4, r0
400215e4:	ebfffda4 	bl	40020c7c <net::dhcp_release_and_stop()>
400215e8:	e3011564 	movw	r1, #5476	; 0x1564
400215ec:	e30a0724 	movw	r0, #42788	; 0xa724
400215f0:	e3440005 	movt	r0, #16389	; 0x4005
400215f4:	e3441002 	movt	r1, #16386	; 0x4002
400215f8:	eb0006c6 	bl	40023118 <net::acd_add(net::acd::Acd*, void (*)(net::acd::Callback))>
400215fc:	e3540000 	cmp	r4, #0
40021600:	030a373c 	movweq	r3, #42812	; 0xa73c
40021604:	030a0724 	movweq	r0, #42788	; 0xa724
40021608:	03443005 	movteq	r3, #16389	; 0x4005
4002160c:	130a0724 	movwne	r0, #42788	; 0xa724
40021610:	03440005 	movteq	r0, #16389	; 0x4005
40021614:	11a01004 	movne	r1, r4
40021618:	05931010 	ldreq	r1, [r3, #16]
4002161c:	e8bd4010 	pop	{r4, lr}
40021620:	13440005 	movtne	r0, #16389	; 0x4005
40021624:	ea0005ea 	b	40022dd4 <net::acd_start(net::acd::Acd*, net::ip_addr)>

40021628 <net::default_callback(unsigned short, net::netif_ext_callback_args_t const*)>:
40021628:	e12fff1e 	bx	lr

4002162c <net::netif_do_update_globals()>:
4002162c:	e59f2028 	ldr	r2, [pc, #40]	; 4002165c <net::netif_do_update_globals()+0x30>
40021630:	e5921004 	ldr	r1, [r2, #4]
40021634:	e5923000 	ldr	r3, [r2]
40021638:	e1e00001 	mvn	r0, r1
4002163c:	e183c000 	orr	ip, r3, r0
40021640:	e0033001 	and	r3, r3, r1
40021644:	e582c00c 	str	ip, [r2, #12]
40021648:	e59f2010 	ldr	r2, [pc, #16]	; 40021660 <net::netif_do_update_globals()+0x34>
4002164c:	e5820000 	str	r0, [r2]
40021650:	e59f200c 	ldr	r2, [pc, #12]	; 40021664 <net::netif_do_update_globals()+0x38>
40021654:	e5823000 	str	r3, [r2]
40021658:	ea00082d 	b	40023714 <net::ip_set_ip()>
4002165c:	4005a73c 	andmi	sl, r5, ip, lsr r7
40021660:	4005a734 	andmi	sl, r5, r4, lsr r7
40021664:	4005a738 	andmi	sl, r5, r8, lsr r7

40021668 <net::netif_issue_reports()>:
40021668:	e59f3018 	ldr	r3, [pc, #24]	; 40021688 <net::netif_issue_reports()+0x20>
4002166c:	e5d3201a 	ldrb	r2, [r3, #26]
40021670:	e3120001 	tst	r2, #1
40021674:	012fff1e 	bxeq	lr
40021678:	e5933000 	ldr	r3, [r3]
4002167c:	e3530000 	cmp	r3, #0
40021680:	012fff1e 	bxeq	lr
40021684:	eaffff32 	b	40021354 <net::igmp_report_groups()>
40021688:	4005a73c 	andmi	sl, r5, ip, lsr r7

4002168c <net::netif_do_set_ipaddr(net::ip_addr, net::ip_addr&)>:
4002168c:	e92d4070 	push	{r4, r5, r6, lr}
40021690:	e59f6040 	ldr	r6, [pc, #64]	; 400216d8 <net::netif_do_set_ipaddr(net::ip_addr, net::ip_addr&)+0x4c>
40021694:	e5963000 	ldr	r3, [r6]
40021698:	e1530000 	cmp	r3, r0
4002169c:	0a00000b 	beq	400216d0 <net::netif_do_set_ipaddr(net::ip_addr, net::ip_addr&)+0x44>
400216a0:	e5813000 	str	r3, [r1]
400216a4:	e1a05001 	mov	r5, r1
400216a8:	e1a04000 	mov	r4, r0
400216ac:	eb000818 	bl	40023714 <net::ip_set_ip()>
400216b0:	e5950000 	ldr	r0, [r5]
400216b4:	e1a01004 	mov	r1, r4
400216b8:	eb00069b 	bl	4002312c <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)>
400216bc:	e5864000 	str	r4, [r6]
400216c0:	ebffffd9 	bl	4002162c <net::netif_do_update_globals()>
400216c4:	ebffffe7 	bl	40021668 <net::netif_issue_reports()>
400216c8:	e3a00001 	mov	r0, #1
400216cc:	e8bd8070 	pop	{r4, r5, r6, pc}
400216d0:	e3a00000 	mov	r0, #0
400216d4:	e8bd8070 	pop	{r4, r5, r6, pc}
400216d8:	4005a73c 	andmi	sl, r5, ip, lsr r7

400216dc <net::netif_init()>:
400216dc:	e59f3058 	ldr	r3, [pc, #88]	; 4002173c <net::netif_init()+0x60>
400216e0:	e3a01000 	mov	r1, #0
400216e4:	e5d32019 	ldrb	r2, [r3, #25]
400216e8:	e5d30018 	ldrb	r0, [r3, #24]
400216ec:	e1a02c02 	lsl	r2, r2, #24
400216f0:	e0822800 	add	r2, r2, r0, lsl #16
400216f4:	e5d30017 	ldrb	r0, [r3, #23]
400216f8:	e2822002 	add	r2, r2, #2
400216fc:	e5831000 	str	r1, [r3]
40021700:	e5831004 	str	r1, [r3, #4]
40021704:	e2400002 	sub	r0, r0, #2
40021708:	e5831008 	str	r1, [r3, #8]
4002170c:	e6ef0070 	uxtb	r0, r0
40021710:	e583100c 	str	r1, [r3, #12]
40021714:	e0822400 	add	r2, r2, r0, lsl #8
40021718:	e5832010 	str	r2, [r3, #16]
4002171c:	e5c3101a 	strb	r1, [r3, #26]
40021720:	e59f2018 	ldr	r2, [pc, #24]	; 40021740 <net::netif_init()+0x64>
40021724:	e5831020 	str	r1, [r3, #32]
40021728:	e5831024 	str	r1, [r3, #36]	; 0x24
4002172c:	e5831028 	str	r1, [r3, #40]	; 0x28
40021730:	e59f300c 	ldr	r3, [pc, #12]	; 40021744 <net::netif_init()+0x68>
40021734:	e5832000 	str	r2, [r3]
40021738:	eaff7bb6 	b	40000618 <net::arp_init()>
4002173c:	4005a73c 	andmi	sl, r5, ip, lsr r7
40021740:	40021628 	andmi	r1, r2, r8, lsr #12
40021744:	4005a768 	andmi	sl, r5, r8, ror #14

40021748 <net::netif_set_ipaddr(net::ip_addr)>:
40021748:	e92d401f 	push	{r0, r1, r2, r3, r4, lr}
4002174c:	e1a0100d 	mov	r1, sp
40021750:	ebffffcd 	bl	4002168c <net::netif_do_set_ipaddr(net::ip_addr, net::ip_addr&)>
40021754:	e3500000 	cmp	r0, #0
40021758:	0a000006 	beq	40021778 <net::netif_set_ipaddr(net::ip_addr)+0x30>
4002175c:	e59d3000 	ldr	r3, [sp]
40021760:	e28d1004 	add	r1, sp, #4
40021764:	e3a00010 	mov	r0, #16
40021768:	e58d3004 	str	r3, [sp, #4]
4002176c:	e59f300c 	ldr	r3, [pc, #12]	; 40021780 <net::netif_set_ipaddr(net::ip_addr)+0x38>
40021770:	e5933000 	ldr	r3, [r3]
40021774:	e12fff33 	blx	r3
40021778:	e28dd014 	add	sp, sp, #20
4002177c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40021780:	4005a768 	andmi	sl, r5, r8, ror #14

40021784 <net::netif_set_netmask(net::ip_addr)>:
40021784:	e92d401f 	push	{r0, r1, r2, r3, r4, lr}
40021788:	e59f3030 	ldr	r3, [pc, #48]	; 400217c0 <net::netif_set_netmask(net::ip_addr)+0x3c>
4002178c:	e5934004 	ldr	r4, [r3, #4]
40021790:	e1500004 	cmp	r0, r4
40021794:	0a000007 	beq	400217b8 <net::netif_set_netmask(net::ip_addr)+0x34>
40021798:	e5830004 	str	r0, [r3, #4]
4002179c:	ebffffa2 	bl	4002162c <net::netif_do_update_globals()>
400217a0:	e59f301c 	ldr	r3, [pc, #28]	; 400217c4 <net::netif_set_netmask(net::ip_addr)+0x40>
400217a4:	e28d1004 	add	r1, sp, #4
400217a8:	e58d4008 	str	r4, [sp, #8]
400217ac:	e3a00040 	mov	r0, #64	; 0x40
400217b0:	e5933000 	ldr	r3, [r3]
400217b4:	e12fff33 	blx	r3
400217b8:	e28dd010 	add	sp, sp, #16
400217bc:	e8bd8010 	pop	{r4, pc}
400217c0:	4005a73c 	andmi	sl, r5, ip, lsr r7
400217c4:	4005a768 	andmi	sl, r5, r8, ror #14

400217c8 <net::netif_set_gw(net::ip_addr)>:
400217c8:	e92d401f 	push	{r0, r1, r2, r3, r4, lr}
400217cc:	e59f202c 	ldr	r2, [pc, #44]	; 40021800 <net::netif_set_gw(net::ip_addr)+0x38>
400217d0:	e5923008 	ldr	r3, [r2, #8]
400217d4:	e1500003 	cmp	r0, r3
400217d8:	0a000006 	beq	400217f8 <net::netif_set_gw(net::ip_addr)+0x30>
400217dc:	e58d300c 	str	r3, [sp, #12]
400217e0:	e28d1004 	add	r1, sp, #4
400217e4:	e59f3018 	ldr	r3, [pc, #24]	; 40021804 <net::netif_set_gw(net::ip_addr)+0x3c>
400217e8:	e5820008 	str	r0, [r2, #8]
400217ec:	e3a00020 	mov	r0, #32
400217f0:	e5933000 	ldr	r3, [r3]
400217f4:	e12fff33 	blx	r3
400217f8:	e28dd014 	add	sp, sp, #20
400217fc:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40021800:	4005a73c 	andmi	sl, r5, ip, lsr r7
40021804:	4005a768 	andmi	sl, r5, r8, ror #14

40021808 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)>:
40021808:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
4002180c:	e2505000 	subs	r5, r0, #0
40021810:	e24dd014 	sub	sp, sp, #20
40021814:	e1a08001 	mov	r8, r1
40021818:	e1a07002 	mov	r7, r2
4002181c:	0a000025 	beq	400218b8 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0xb0>
40021820:	e3a04000 	mov	r4, #0
40021824:	e59f60c0 	ldr	r6, [pc, #192]	; 400218ec <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0xe4>
40021828:	e5969004 	ldr	r9, [r6, #4]
4002182c:	e1580009 	cmp	r8, r9
40021830:	0a000003 	beq	40021844 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x3c>
40021834:	e5868004 	str	r8, [r6, #4]
40021838:	e3844040 	orr	r4, r4, #64	; 0x40
4002183c:	ebffff7a 	bl	4002162c <net::netif_do_update_globals()>
40021840:	e58d9008 	str	r9, [sp, #8]
40021844:	e5963008 	ldr	r3, [r6, #8]
40021848:	e1570003 	cmp	r7, r3
4002184c:	0a000021 	beq	400218d8 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0xd0>
40021850:	e5867008 	str	r7, [r6, #8]
40021854:	e3550000 	cmp	r5, #0
40021858:	e58d300c 	str	r3, [sp, #12]
4002185c:	e3844020 	orr	r4, r4, #32
40021860:	0a000009 	beq	4002188c <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x84>
40021864:	e1a0100d 	mov	r1, sp
40021868:	e1a00005 	mov	r0, r5
4002186c:	ebffff86 	bl	4002168c <net::netif_do_set_ipaddr(net::ip_addr, net::ip_addr&)>
40021870:	e3500000 	cmp	r0, #0
40021874:	13844010 	orrne	r4, r4, #16
40021878:	159d3000 	ldrne	r3, [sp]
4002187c:	158d3004 	strne	r3, [sp, #4]
40021880:	1a000001 	bne	4002188c <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x84>
40021884:	e3540000 	cmp	r4, #0
40021888:	0a000002 	beq	40021898 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x90>
4002188c:	e3550000 	cmp	r5, #0
40021890:	e3844080 	orr	r4, r4, #128	; 0x80
40021894:	0a000000 	beq	4002189c <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x94>
40021898:	e3844b01 	orr	r4, r4, #1024	; 0x400
4002189c:	e59f304c 	ldr	r3, [pc, #76]	; 400218f0 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0xe8>
400218a0:	e28d1004 	add	r1, sp, #4
400218a4:	e1a00004 	mov	r0, r4
400218a8:	e5933000 	ldr	r3, [r3]
400218ac:	e12fff33 	blx	r3
400218b0:	e28dd014 	add	sp, sp, #20
400218b4:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
400218b8:	e1a0100d 	mov	r1, sp
400218bc:	ebffff72 	bl	4002168c <net::netif_do_set_ipaddr(net::ip_addr, net::ip_addr&)>
400218c0:	e3500000 	cmp	r0, #0
400218c4:	0affffd5 	beq	40021820 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x18>
400218c8:	e59d3000 	ldr	r3, [sp]
400218cc:	e3a04010 	mov	r4, #16
400218d0:	e58d3004 	str	r3, [sp, #4]
400218d4:	eaffffd2 	b	40021824 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x1c>
400218d8:	e3550000 	cmp	r5, #0
400218dc:	1affffe0 	bne	40021864 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x5c>
400218e0:	e3540000 	cmp	r4, #0
400218e4:	0afffff1 	beq	400218b0 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0xa8>
400218e8:	eaffffe7 	b	4002188c <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x84>
400218ec:	4005a73c 	andmi	sl, r5, ip, lsr r7
400218f0:	4005a768 	andmi	sl, r5, r8, ror #14

400218f4 <net::netif_add_ext_callback(void (*)(unsigned short, net::netif_ext_callback_args_t const*))>:
400218f4:	e59f3004 	ldr	r3, [pc, #4]	; 40021900 <net::netif_add_ext_callback(void (*)(unsigned short, net::netif_ext_callback_args_t const*))+0xc>
400218f8:	e5830000 	str	r0, [r3]
400218fc:	e12fff1e 	bx	lr
40021900:	4005a768 	andmi	sl, r5, r8, ror #14

40021904 <net::netif_set_link_down()>:
40021904:	e92d401f 	push	{r0, r1, r2, r3, r4, lr}
40021908:	e59f2054 	ldr	r2, [pc, #84]	; 40021964 <net::netif_set_link_down()+0x60>
4002190c:	e5d2301a 	ldrb	r3, [r2, #26]
40021910:	e3130001 	tst	r3, #1
40021914:	0a000010 	beq	4002195c <net::netif_set_link_down()+0x58>
40021918:	e3c33001 	bic	r3, r3, #1
4002191c:	e5c2301a 	strb	r3, [r2, #26]
40021920:	e5923028 	ldr	r3, [r2, #40]	; 0x28
40021924:	e3530000 	cmp	r3, #0
40021928:	0a000003 	beq	4002193c <net::netif_set_link_down()+0x38>
4002192c:	e5933004 	ldr	r3, [r3, #4]
40021930:	e3530000 	cmp	r3, #0
40021934:	0a000000 	beq	4002193c <net::netif_set_link_down()+0x38>
40021938:	ebfffafb 	bl	4002052c <net::autoip_stop()>
4002193c:	eb0005a6 	bl	40022fdc <net::acd_network_changed_link_down()>
40021940:	e3a03000 	mov	r3, #0
40021944:	e28d1004 	add	r1, sp, #4
40021948:	e5cd3004 	strb	r3, [sp, #4]
4002194c:	e3a00004 	mov	r0, #4
40021950:	e59f3010 	ldr	r3, [pc, #16]	; 40021968 <net::netif_set_link_down()+0x64>
40021954:	e5933000 	ldr	r3, [r3]
40021958:	e12fff33 	blx	r3
4002195c:	e28dd014 	add	sp, sp, #20
40021960:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40021964:	4005a73c 	andmi	sl, r5, ip, lsr r7
40021968:	4005a768 	andmi	sl, r5, r8, ror #14

4002196c <net::_bswap32(t_tcp*)>:
4002196c:	e280c02a 	add	ip, r0, #42	; 0x2a
40021970:	e31c0003 	tst	ip, #3
40021974:	e92d4030 	push	{r4, r5, lr}
40021978:	e24dd00c 	sub	sp, sp, #12
4002197c:	1a00000b 	bne	400219b0 <net::_bswap32(t_tcp*)+0x44>
40021980:	e590302a 	ldr	r3, [r0, #42]	; 0x2a
40021984:	e2802026 	add	r2, r0, #38	; 0x26
40021988:	e3120003 	tst	r2, #3
4002198c:	e6bf3f33 	rev	r3, r3
40021990:	e58d3004 	str	r3, [sp, #4]
40021994:	e580302a 	str	r3, [r0, #42]	; 0x2a
40021998:	1a000017 	bne	400219fc <net::_bswap32(t_tcp*)+0x90>
4002199c:	e5903026 	ldr	r3, [r0, #38]	; 0x26
400219a0:	e6bf3f33 	rev	r3, r3
400219a4:	e5803026 	str	r3, [r0, #38]	; 0x26
400219a8:	e28dd00c 	add	sp, sp, #12
400219ac:	e8bd8030 	pop	{r4, r5, pc}
400219b0:	e28d3004 	add	r3, sp, #4
400219b4:	e1a0200c 	mov	r2, ip
400219b8:	e280e02e 	add	lr, r0, #46	; 0x2e
400219bc:	e1a0100c 	mov	r1, ip
400219c0:	e1a04003 	mov	r4, r3
400219c4:	e4d15001 	ldrb	r5, [r1], #1
400219c8:	e151000e 	cmp	r1, lr
400219cc:	e4c45001 	strb	r5, [r4], #1
400219d0:	1afffffb 	bne	400219c4 <net::_bswap32(t_tcp*)+0x58>
400219d4:	e59d1004 	ldr	r1, [sp, #4]
400219d8:	e6bf1f31 	rev	r1, r1
400219dc:	e58d1004 	str	r1, [sp, #4]
400219e0:	e4d31001 	ldrb	r1, [r3], #1
400219e4:	e4c21001 	strb	r1, [r2], #1
400219e8:	e152000e 	cmp	r2, lr
400219ec:	1afffffb 	bne	400219e0 <net::_bswap32(t_tcp*)+0x74>
400219f0:	e2802026 	add	r2, r0, #38	; 0x26
400219f4:	e3120003 	tst	r2, #3
400219f8:	0affffe7 	beq	4002199c <net::_bswap32(t_tcp*)+0x30>
400219fc:	e28d3004 	add	r3, sp, #4
40021a00:	e1a01002 	mov	r1, r2
40021a04:	e1a00003 	mov	r0, r3
40021a08:	e4d1e001 	ldrb	lr, [r1], #1
40021a0c:	e15c0001 	cmp	ip, r1
40021a10:	e4c0e001 	strb	lr, [r0], #1
40021a14:	1afffffb 	bne	40021a08 <net::_bswap32(t_tcp*)+0x9c>
40021a18:	e59d1004 	ldr	r1, [sp, #4]
40021a1c:	e6bf1f31 	rev	r1, r1
40021a20:	e58d1004 	str	r1, [sp, #4]
40021a24:	e4d31001 	ldrb	r1, [r3], #1
40021a28:	e4c21001 	strb	r1, [r2], #1
40021a2c:	e152000c 	cmp	r2, ip
40021a30:	1afffffb 	bne	40021a24 <net::_bswap32(t_tcp*)+0xb8>
40021a34:	e28dd00c 	add	sp, sp, #12
40021a38:	e8bd8030 	pop	{r4, r5, pc}

40021a3c <net::send_package(net::tcb const*, net::SendInfo const&)>:
40021a3c:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
40021a40:	e1a03001 	mov	r3, r1
40021a44:	e5d11008 	ldrb	r1, [r1, #8]
40021a48:	e1a05000 	mov	r5, r0
40021a4c:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
40021a50:	e24dd01c 	sub	sp, sp, #28
40021a54:	e2011002 	and	r1, r1, #2
40021a58:	e30a4770 	movw	r4, #42864	; 0xa770
40021a5c:	e3444005 	movt	r4, #16389	; 0x4005
40021a60:	e3510000 	cmp	r1, #0
40021a64:	03a01080 	moveq	r1, #128	; 0x80
40021a68:	13a01090 	movne	r1, #144	; 0x90
40021a6c:	e58d1000 	str	r1, [sp]
40021a70:	03a0a020 	moveq	sl, #32
40021a74:	13a0a024 	movne	sl, #36	; 0x24
40021a78:	e285200c 	add	r2, r5, #12
40021a7c:	e08aa000 	add	sl, sl, r0
40021a80:	e285c012 	add	ip, r5, #18
40021a84:	e1a01004 	mov	r1, r4
40021a88:	e4d20001 	ldrb	r0, [r2], #1
40021a8c:	e152000c 	cmp	r2, ip
40021a90:	e4c10001 	strb	r0, [r1], #1
40021a94:	1afffffb 	bne	40021a88 <net::send_package(net::tcb const*, net::SendInfo const&)+0x4c>
40021a98:	e59f125c 	ldr	r1, [pc, #604]	; 40021cfc <net::send_package(net::tcb const*, net::SendInfo const&)+0x2c0>
40021a9c:	e30a276c 	movw	r2, #42860	; 0xa76c
40021aa0:	e3442005 	movt	r2, #16389	; 0x4005
40021aa4:	e6ffb07a 	uxth	fp, sl
40021aa8:	e1a07005 	mov	r7, r5
40021aac:	e2858004 	add	r8, r5, #4
40021ab0:	e1d200b0 	ldrh	r0, [r2]
40021ab4:	e1c401b2 	strh	r0, [r4, #18]
40021ab8:	e2800001 	add	r0, r0, #1
40021abc:	e1c200b0 	strh	r0, [r2]
40021ac0:	e28b2014 	add	r2, fp, #20
40021ac4:	e6bf2fb2 	rev16	r2, r2
40021ac8:	e1c421b0 	strh	r2, [r4, #16]
40021acc:	e1a02005 	mov	r2, r5
40021ad0:	e4d20001 	ldrb	r0, [r2], #1
40021ad4:	e1520008 	cmp	r2, r8
40021ad8:	e4c10001 	strb	r0, [r1], #1
40021adc:	1afffffb 	bne	40021ad0 <net::send_package(net::tcb const*, net::SendInfo const&)+0x94>
40021ae0:	e59f1218 	ldr	r1, [pc, #536]	; 40021d00 <net::send_package(net::tcb const*, net::SendInfo const&)+0x2c4>
40021ae4:	e1a06008 	mov	r6, r8
40021ae8:	e2859008 	add	r9, r5, #8
40021aec:	e1a02008 	mov	r2, r8
40021af0:	e4d20001 	ldrb	r0, [r2], #1
40021af4:	e1520009 	cmp	r2, r9
40021af8:	e4c10001 	strb	r0, [r1], #1
40021afc:	1afffffb 	bne	40021af0 <net::send_package(net::tcb const*, net::SendInfo const&)+0xb4>
40021b00:	e59f01fc 	ldr	r0, [pc, #508]	; 40021d04 <net::send_package(net::tcb const*, net::SendInfo const&)+0x2c8>
40021b04:	e3a02000 	mov	r2, #0
40021b08:	e58d3004 	str	r3, [sp, #4]
40021b0c:	e3a01014 	mov	r1, #20
40021b10:	e1c421b8 	strh	r2, [r4, #24]
40021b14:	ebfffe2c 	bl	400213cc <net::net_chksum(void const*, unsigned long)>
40021b18:	e1c401b8 	strh	r0, [r4, #24]
40021b1c:	e59d3004 	ldr	r3, [sp, #4]
40021b20:	e1d510b8 	ldrh	r1, [r5, #8]
40021b24:	e5930000 	ldr	r0, [r3]
40021b28:	e1c412b2 	strh	r1, [r4, #34]	; 0x22
40021b2c:	e1d510ba 	ldrh	r1, [r5, #10]
40021b30:	e59d2000 	ldr	r2, [sp]
40021b34:	e5840026 	str	r0, [r4, #38]	; 0x26
40021b38:	e1c412b4 	strh	r1, [r4, #36]	; 0x24
40021b3c:	e5931004 	ldr	r1, [r3, #4]
40021b40:	e1d504b4 	ldrh	r0, [r5, #68]	; 0x44
40021b44:	e5c4202e 	strb	r2, [r4, #46]	; 0x2e
40021b48:	e3a02000 	mov	r2, #0
40021b4c:	e584102a 	str	r1, [r4, #42]	; 0x2a
40021b50:	e5d31008 	ldrb	r1, [r3, #8]
40021b54:	e1c403b0 	strh	r0, [r4, #48]	; 0x30
40021b58:	e3000101 	movw	r0, #257	; 0x101
40021b5c:	e5c4102f 	strb	r1, [r4, #47]	; 0x2f
40021b60:	e1d512b0 	ldrh	r1, [r5, #32]
40021b64:	e1c423b2 	strh	r2, [r4, #50]	; 0x32
40021b68:	e3a02b03 	mov	r2, #3072	; 0xc00
40021b6c:	e1c413b4 	strh	r1, [r4, #52]	; 0x34
40021b70:	e5d33008 	ldrb	r3, [r3, #8]
40021b74:	e34021c2 	movt	r2, #450	; 0x1c2
40021b78:	e3130002 	tst	r3, #2
40021b7c:	13083c05 	movwne	r3, #35845	; 0x8c05
40021b80:	134f3fff 	movtne	r3, #65535	; 0xffff
40021b84:	159f117c 	ldrne	r1, [pc, #380]	; 40021d08 <net::send_package(net::tcb const*, net::SendInfo const&)+0x2cc>
40021b88:	059f117c 	ldreq	r1, [pc, #380]	; 40021d0c <net::send_package(net::tcb const*, net::SendInfo const&)+0x2d0>
40021b8c:	11c433b8 	strhne	r3, [r4, #56]	; 0x38
40021b90:	13003402 	movwne	r3, #1026	; 0x402
40021b94:	11c433b6 	strhne	r3, [r4, #54]	; 0x36
40021b98:	e1a03001 	mov	r3, r1
40021b9c:	e281c008 	add	ip, r1, #8
40021ba0:	e0c300b4 	strh	r0, [r3], #4
40021ba4:	e3000a08 	movw	r0, #2568	; 0xa08
40021ba8:	e1c100b2 	strh	r0, [r1, #2]
40021bac:	e5922084 	ldr	r2, [r2, #132]	; 0x84
40021bb0:	e6bf2f32 	rev	r2, r2
40021bb4:	e58d2008 	str	r2, [sp, #8]
40021bb8:	e28d2008 	add	r2, sp, #8
40021bbc:	e4d20001 	ldrb	r0, [r2], #1
40021bc0:	e4c30001 	strb	r0, [r3], #1
40021bc4:	e153000c 	cmp	r3, ip
40021bc8:	1afffffb 	bne	40021bbc <net::send_package(net::tcb const*, net::SendInfo const&)+0x180>
40021bcc:	e2852030 	add	r2, r5, #48	; 0x30
40021bd0:	e285c034 	add	ip, r5, #52	; 0x34
40021bd4:	e4d20001 	ldrb	r0, [r2], #1
40021bd8:	e152000c 	cmp	r2, ip
40021bdc:	e4c30001 	strb	r0, [r3], #1
40021be0:	1afffffb 	bne	40021bd4 <net::send_package(net::tcb const*, net::SendInfo const&)+0x198>
40021be4:	e5950038 	ldr	r0, [r5, #56]	; 0x38
40021be8:	e3500000 	cmp	r0, #0
40021bec:	0a00000c 	beq	40021c24 <net::send_package(net::tcb const*, net::SendInfo const&)+0x1e8>
40021bf0:	e595303c 	ldr	r3, [r5, #60]	; 0x3c
40021bf4:	e3530000 	cmp	r3, #0
40021bf8:	0a000009 	beq	40021c24 <net::send_package(net::tcb const*, net::SendInfo const&)+0x1e8>
40021bfc:	e281200c 	add	r2, r1, #12
40021c00:	e3a03000 	mov	r3, #0
40021c04:	ea000000 	b	40021c0c <net::send_package(net::tcb const*, net::SendInfo const&)+0x1d0>
40021c08:	e5950038 	ldr	r0, [r5, #56]	; 0x38
40021c0c:	e7d01003 	ldrb	r1, [r0, r3]
40021c10:	e2833001 	add	r3, r3, #1
40021c14:	e4c21001 	strb	r1, [r2], #1
40021c18:	e595103c 	ldr	r1, [r5, #60]	; 0x3c
40021c1c:	e1510003 	cmp	r1, r3
40021c20:	8afffff8 	bhi	40021c08 <net::send_package(net::tcb const*, net::SendInfo const&)+0x1cc>
40021c24:	e1d432b2 	ldrh	r3, [r4, #34]	; 0x22
40021c28:	e30a0770 	movw	r0, #42864	; 0xa770
40021c2c:	e3440005 	movt	r0, #16389	; 0x4005
40021c30:	e6bf3fb3 	rev16	r3, r3
40021c34:	e1c432b2 	strh	r3, [r4, #34]	; 0x22
40021c38:	e1d432b4 	ldrh	r3, [r4, #36]	; 0x24
40021c3c:	e6bf3fb3 	rev16	r3, r3
40021c40:	e1c432b4 	strh	r3, [r4, #36]	; 0x24
40021c44:	ebffff48 	bl	4002196c <net::_bswap32(t_tcp*)>
40021c48:	e1d433b0 	ldrh	r3, [r4, #48]	; 0x30
40021c4c:	e59f20bc 	ldr	r2, [pc, #188]	; 40021d10 <net::send_package(net::tcb const*, net::SendInfo const&)+0x2d4>
40021c50:	e6bf3fb3 	rev16	r3, r3
40021c54:	e1c433b0 	strh	r3, [r4, #48]	; 0x30
40021c58:	e1d433b4 	ldrh	r3, [r4, #52]	; 0x34
40021c5c:	e6bf3fb3 	rev16	r3, r3
40021c60:	e1c433b4 	strh	r3, [r4, #52]	; 0x34
40021c64:	e28d300c 	add	r3, sp, #12
40021c68:	e4d21001 	ldrb	r1, [r2], #1
40021c6c:	e4c31001 	strb	r1, [r3], #1
40021c70:	e28d1018 	add	r1, sp, #24
40021c74:	e1530001 	cmp	r3, r1
40021c78:	1afffffa 	bne	40021c68 <net::send_package(net::tcb const*, net::SendInfo const&)+0x22c>
40021c7c:	e59f308c 	ldr	r3, [pc, #140]	; 40021d10 <net::send_package(net::tcb const*, net::SendInfo const&)+0x2d4>
40021c80:	e4d72001 	ldrb	r2, [r7], #1
40021c84:	e1570008 	cmp	r7, r8
40021c88:	e4c32001 	strb	r2, [r3], #1
40021c8c:	1afffffb 	bne	40021c80 <net::send_package(net::tcb const*, net::SendInfo const&)+0x244>
40021c90:	e59f3064 	ldr	r3, [pc, #100]	; 40021cfc <net::send_package(net::tcb const*, net::SendInfo const&)+0x2c0>
40021c94:	e4d62001 	ldrb	r2, [r6], #1
40021c98:	e1560009 	cmp	r6, r9
40021c9c:	e4c32001 	strb	r2, [r3], #1
40021ca0:	1afffffb 	bne	40021c94 <net::send_package(net::tcb const*, net::SendInfo const&)+0x258>
40021ca4:	e6bfbfbb 	rev16	fp, fp
40021ca8:	e6ff107a 	uxth	r1, sl
40021cac:	e59f005c 	ldr	r0, [pc, #92]	; 40021d10 <net::send_package(net::tcb const*, net::SendInfo const&)+0x2d4>
40021cb0:	e3a03c06 	mov	r3, #1536	; 0x600
40021cb4:	e1c431be 	strh	r3, [r4, #30]
40021cb8:	e281100c 	add	r1, r1, #12
40021cbc:	e1c4b2b0 	strh	fp, [r4, #32]
40021cc0:	ebfffdc1 	bl	400213cc <net::net_chksum(void const*, unsigned long)>
40021cc4:	e59f2044 	ldr	r2, [pc, #68]	; 40021d10 <net::send_package(net::tcb const*, net::SendInfo const&)+0x2d4>
40021cc8:	e28d300c 	add	r3, sp, #12
40021ccc:	e4d31001 	ldrb	r1, [r3], #1
40021cd0:	e28dc018 	add	ip, sp, #24
40021cd4:	e153000c 	cmp	r3, ip
40021cd8:	e4c21001 	strb	r1, [r2], #1
40021cdc:	1afffffa 	bne	40021ccc <net::send_package(net::tcb const*, net::SendInfo const&)+0x290>
40021ce0:	e1c403b2 	strh	r0, [r4, #50]	; 0x32
40021ce4:	e30a0770 	movw	r0, #42864	; 0xa770
40021ce8:	e3440005 	movt	r0, #16389	; 0x4005
40021cec:	e28a1022 	add	r1, sl, #34	; 0x22
40021cf0:	e28dd01c 	add	sp, sp, #28
40021cf4:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
40021cf8:	ea0003c8 	b	40022c20 <emac_eth_send(void*, unsigned long)>
40021cfc:	4005a78a 	andmi	sl, r5, sl, lsl #15
40021d00:	4005a78e 	andmi	sl, r5, lr, lsl #15
40021d04:	4005a77e 	andmi	sl, r5, lr, ror r7
40021d08:	4005a7aa 	andmi	sl, r5, sl, lsr #15
40021d0c:	4005a7a6 	andmi	sl, r5, r6, lsr #15
40021d10:	4005a786 	andmi	sl, r5, r6, lsl #15

40021d14 <net::send_reset(t_tcp*, net::tcb const*)>:
40021d14:	e5d0c02f 	ldrb	ip, [r0, #47]	; 0x2f
40021d18:	e1a02000 	mov	r2, r0
40021d1c:	e31c0004 	tst	ip, #4
40021d20:	112fff1e 	bxne	lr
40021d24:	e92d4010 	push	{r4, lr}
40021d28:	e24dd010 	sub	sp, sp, #16
40021d2c:	e3a03004 	mov	r3, #4
40021d30:	e1a00001 	mov	r0, r1
40021d34:	e5cd300c 	strb	r3, [sp, #12]
40021d38:	e21c1010 	ands	r1, ip, #16
40021d3c:	058d1004 	streq	r1, [sp, #4]
40021d40:	03a03014 	moveq	r3, #20
40021d44:	05cd300c 	strbeq	r3, [sp, #12]
40021d48:	1a000013 	bne	40021d9c <net::send_reset(t_tcp*, net::tcb const*)+0x88>
40021d4c:	e7e040dc 	ubfx	r4, ip, #1, #1
40021d50:	e31c0001 	tst	ip, #1
40021d54:	e2823026 	add	r3, r2, #38	; 0x26
40021d58:	12844001 	addne	r4, r4, #1
40021d5c:	e3130003 	tst	r3, #3
40021d60:	05923026 	ldreq	r3, [r2, #38]	; 0x26
40021d64:	0a000006 	beq	40021d84 <net::send_reset(t_tcp*, net::tcb const*)+0x70>
40021d68:	e282202a 	add	r2, r2, #42	; 0x2a
40021d6c:	e1a0c00d 	mov	ip, sp
40021d70:	e4d3e001 	ldrb	lr, [r3], #1
40021d74:	e1520003 	cmp	r2, r3
40021d78:	e4cce001 	strb	lr, [ip], #1
40021d7c:	1afffffb 	bne	40021d70 <net::send_reset(t_tcp*, net::tcb const*)+0x5c>
40021d80:	e59d3000 	ldr	r3, [sp]
40021d84:	e0844003 	add	r4, r4, r3
40021d88:	e28d1004 	add	r1, sp, #4
40021d8c:	e58d4008 	str	r4, [sp, #8]
40021d90:	ebffff29 	bl	40021a3c <net::send_package(net::tcb const*, net::SendInfo const&)>
40021d94:	e28dd010 	add	sp, sp, #16
40021d98:	e8bd8010 	pop	{r4, pc}
40021d9c:	e282302a 	add	r3, r2, #42	; 0x2a
40021da0:	e3130003 	tst	r3, #3
40021da4:	0592302a 	ldreq	r3, [r2, #42]	; 0x2a
40021da8:	0a000006 	beq	40021dc8 <net::send_reset(t_tcp*, net::tcb const*)+0xb4>
40021dac:	e282102e 	add	r1, r2, #46	; 0x2e
40021db0:	e1a0e00d 	mov	lr, sp
40021db4:	e4d34001 	ldrb	r4, [r3], #1
40021db8:	e1530001 	cmp	r3, r1
40021dbc:	e4ce4001 	strb	r4, [lr], #1
40021dc0:	1afffffb 	bne	40021db4 <net::send_reset(t_tcp*, net::tcb const*)+0xa0>
40021dc4:	e59d3000 	ldr	r3, [sp]
40021dc8:	e58d3004 	str	r3, [sp, #4]
40021dcc:	eaffffde 	b	40021d4c <net::send_reset(t_tcp*, net::tcb const*)+0x38>

40021dd0 <net::scan_options(t_tcp*, net::tcb*, long)>:
40021dd0:	e280c022 	add	ip, r0, #34	; 0x22
40021dd4:	e280303c 	add	r3, r0, #60	; 0x3c
40021dd8:	e08c2002 	add	r2, ip, r2
40021ddc:	e1520003 	cmp	r2, r3
40021de0:	312fff1e 	bxcc	lr
40021de4:	e92d40f0 	push	{r4, r5, r6, r7, lr}
40021de8:	e2803036 	add	r3, r0, #54	; 0x36
40021dec:	e24dd00c 	sub	sp, sp, #12
40021df0:	e3006578 	movw	r6, #1400	; 0x578
40021df4:	e5d3c000 	ldrb	ip, [r3]
40021df8:	e35c0008 	cmp	ip, #8
40021dfc:	979ff10c 	ldrls	pc, [pc, ip, lsl #2]
40021e00:	ea000014 	b	40021e58 <net::scan_options(t_tcp*, net::tcb*, long)+0x88>
40021e04:	40021e6c 	andmi	r1, r2, ip, ror #28
40021e08:	40021e74 	andmi	r1, r2, r4, ror lr
40021e0c:	40021e28 	andmi	r1, r2, r8, lsr #28
40021e10:	40021e58 	andmi	r1, r2, r8, asr lr
40021e14:	40021e58 	andmi	r1, r2, r8, asr lr
40021e18:	40021e58 	andmi	r1, r2, r8, asr lr
40021e1c:	40021e58 	andmi	r1, r2, r8, asr lr
40021e20:	40021e58 	andmi	r1, r2, r8, asr lr
40021e24:	40021e7c 	andmi	r1, r2, ip, ror lr
40021e28:	e5d3c001 	ldrb	ip, [r3, #1]
40021e2c:	e35c0004 	cmp	ip, #4
40021e30:	1a000009 	bne	40021e5c <net::scan_options(t_tcp*, net::tcb*, long)+0x8c>
40021e34:	e283e004 	add	lr, r3, #4
40021e38:	e152000e 	cmp	r2, lr
40021e3c:	3a000006 	bcc	40021e5c <net::scan_options(t_tcp*, net::tcb*, long)+0x8c>
40021e40:	e5d3e002 	ldrb	lr, [r3, #2]
40021e44:	e5d3c003 	ldrb	ip, [r3, #3]
40021e48:	e08cc40e 	add	ip, ip, lr, lsl #8
40021e4c:	e15c0006 	cmp	ip, r6
40021e50:	a1a0c006 	movge	ip, r6
40021e54:	e1c1c3b4 	strh	ip, [r1, #52]	; 0x34
40021e58:	e5d3c001 	ldrb	ip, [r3, #1]
40021e5c:	e083300c 	add	r3, r3, ip
40021e60:	e283c006 	add	ip, r3, #6
40021e64:	e152000c 	cmp	r2, ip
40021e68:	2affffe1 	bcs	40021df4 <net::scan_options(t_tcp*, net::tcb*, long)+0x24>
40021e6c:	e28dd00c 	add	sp, sp, #12
40021e70:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
40021e74:	e2833001 	add	r3, r3, #1
40021e78:	eafffff8 	b	40021e60 <net::scan_options(t_tcp*, net::tcb*, long)+0x90>
40021e7c:	e5d3c001 	ldrb	ip, [r3, #1]
40021e80:	e35c000a 	cmp	ip, #10
40021e84:	1afffff4 	bne	40021e5c <net::scan_options(t_tcp*, net::tcb*, long)+0x8c>
40021e88:	e283e00a 	add	lr, r3, #10
40021e8c:	e152000e 	cmp	r2, lr
40021e90:	3afffff1 	bcc	40021e5c <net::scan_options(t_tcp*, net::tcb*, long)+0x8c>
40021e94:	e283e002 	add	lr, r3, #2
40021e98:	e31e0003 	tst	lr, #3
40021e9c:	1a00000b 	bne	40021ed0 <net::scan_options(t_tcp*, net::tcb*, long)+0x100>
40021ea0:	e593e002 	ldr	lr, [r3, #2]
40021ea4:	e58de004 	str	lr, [sp, #4]
40021ea8:	e5d0402f 	ldrb	r4, [r0, #47]	; 0x2f
40021eac:	e3140002 	tst	r4, #2
40021eb0:	1a000004 	bne	40021ec8 <net::scan_options(t_tcp*, net::tcb*, long)+0xf8>
40021eb4:	e5914030 	ldr	r4, [r1, #48]	; 0x30
40021eb8:	e6bf5f3e 	rev	r5, lr
40021ebc:	e6bf4f34 	rev	r4, r4
40021ec0:	e1550004 	cmp	r5, r4
40021ec4:	9affffe4 	bls	40021e5c <net::scan_options(t_tcp*, net::tcb*, long)+0x8c>
40021ec8:	e581e030 	str	lr, [r1, #48]	; 0x30
40021ecc:	eaffffe1 	b	40021e58 <net::scan_options(t_tcp*, net::tcb*, long)+0x88>
40021ed0:	e2837006 	add	r7, r3, #6
40021ed4:	e28d4004 	add	r4, sp, #4
40021ed8:	e4de5001 	ldrb	r5, [lr], #1
40021edc:	e15e0007 	cmp	lr, r7
40021ee0:	e4c45001 	strb	r5, [r4], #1
40021ee4:	1afffffb 	bne	40021ed8 <net::scan_options(t_tcp*, net::tcb*, long)+0x108>
40021ee8:	e59de004 	ldr	lr, [sp, #4]
40021eec:	eaffffed 	b	40021ea8 <net::scan_options(t_tcp*, net::tcb*, long)+0xd8>

40021ef0 <net::tcp_shutdown()>:
40021ef0:	e12fff1e 	bx	lr

40021ef4 <net::tcp_begin(unsigned short)>:
40021ef4:	e3003b5c 	movw	r3, #2908	; 0xb5c
40021ef8:	e92d40f0 	push	{r4, r5, r6, r7, lr}
40021efc:	e59f707c 	ldr	r7, [pc, #124]	; 40021f80 <net::tcp_begin(unsigned short)+0x8c>
40021f00:	e19710b3 	ldrh	r1, [r7, r3]
40021f04:	e1510000 	cmp	r1, r0
40021f08:	0a000018 	beq	40021f70 <net::tcp_begin(unsigned short)+0x7c>
40021f0c:	e3510000 	cmp	r1, #0
40021f10:	1a000018 	bne	40021f78 <net::tcp_begin(unsigned short)+0x84>
40021f14:	e18700b3 	strh	r0, [r7, r3]
40021f18:	e3a0eb03 	mov	lr, #3072	; 0xc00
40021f1c:	e340e1c2 	movt	lr, #450	; 0x1c2
40021f20:	e2472efb 	sub	r2, r7, #4016	; 0xfb0
40021f24:	e2476eab 	sub	r6, r7, #2736	; 0xab0
40021f28:	e3005b18 	movw	r5, #2840	; 0xb18
40021f2c:	e3a04001 	mov	r4, #1
40021f30:	e2423050 	sub	r3, r2, #80	; 0x50
40021f34:	e4c31001 	strb	r1, [r3], #1
40021f38:	e1530002 	cmp	r3, r2
40021f3c:	1afffffc 	bne	40021f34 <net::tcp_begin(unsigned short)+0x40>
40021f40:	e14304b8 	strh	r0, [r3, #-72]	; 0xffffffb8
40021f44:	e2832050 	add	r2, r3, #80	; 0x50
40021f48:	e59ec084 	ldr	ip, [lr, #132]	; 0x84
40021f4c:	e1520006 	cmp	r2, r6
40021f50:	e14350bc 	strh	r5, [r3, #-12]
40021f54:	e5434004 	strb	r4, [r3, #-4]
40021f58:	e503c024 	str	ip, [r3, #-36]	; 0xffffffdc
40021f5c:	e503c03c 	str	ip, [r3, #-60]	; 0xffffffc4
40021f60:	e503c038 	str	ip, [r3, #-56]	; 0xffffffc8
40021f64:	e503c028 	str	ip, [r3, #-40]	; 0xffffffd8
40021f68:	1afffff0 	bne	40021f30 <net::tcp_begin(unsigned short)+0x3c>
40021f6c:	e5871024 	str	r1, [r7, #36]	; 0x24
40021f70:	e3a00000 	mov	r0, #0
40021f74:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
40021f78:	e3e00000 	mvn	r0, #0
40021f7c:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
40021f80:	4005bd5c 	andmi	fp, r5, ip, asr sp

40021f84 <net::tcp_read(long, unsigned char const**, unsigned long&)>:
40021f84:	e301cb60 	movw	ip, #7008	; 0x1b60
40021f88:	e30a3d5c 	movw	r3, #44380	; 0xad5c
40021f8c:	e000009c 	mul	r0, ip, r0
40021f90:	e3443005 	movt	r3, #16389	; 0x4005
40021f94:	e083c000 	add	ip, r3, r0
40021f98:	e92d4070 	push	{r4, r5, r6, lr}
40021f9c:	e28cec05 	add	lr, ip, #1280	; 0x500
40021fa0:	e3005502 	movw	r5, #1282	; 0x502
40021fa4:	e1de40b0 	ldrh	r4, [lr]
40021fa8:	e19ce0b5 	ldrh	lr, [ip, r5]
40021fac:	e154000e 	cmp	r4, lr
40021fb0:	1a000001 	bne	40021fbc <net::tcp_read(long, unsigned char const**, unsigned long&)+0x38>
40021fb4:	e3a00000 	mov	r0, #0
40021fb8:	e8bd8070 	pop	{r4, r5, r6, pc}
40021fbc:	e3a04e59 	mov	r4, #1424	; 0x590
40021fc0:	e3006a92 	movw	r6, #2706	; 0xa92
40021fc4:	e00e0e94 	mul	lr, r4, lr
40021fc8:	e08e4000 	add	r4, lr, r0
40021fcc:	e0834004 	add	r4, r3, r4
40021fd0:	e19460b6 	ldrh	r6, [r4, r6]
40021fd4:	e2844ea9 	add	r4, r4, #2704	; 0xa90
40021fd8:	e5826000 	str	r6, [r2]
40021fdc:	e3a02050 	mov	r2, #80	; 0x50
40021fe0:	e0220692 	mla	r2, r2, r6, r0
40021fe4:	e2800c05 	add	r0, r0, #1280	; 0x500
40021fe8:	e0832002 	add	r2, r3, r2
40021fec:	e2800004 	add	r0, r0, #4
40021ff0:	e080000e 	add	r0, r0, lr
40021ff4:	e0800003 	add	r0, r0, r3
40021ff8:	e5810000 	str	r0, [r1]
40021ffc:	e1d214b4 	ldrh	r1, [r2, #68]	; 0x44
40022000:	e19c30b5 	ldrh	r3, [ip, r5]
40022004:	e1d400b0 	ldrh	r0, [r4]
40022008:	e2811d16 	add	r1, r1, #1408	; 0x580
4002200c:	e2833001 	add	r3, r3, #1
40022010:	e281100c 	add	r1, r1, #12
40022014:	e1c214b4 	strh	r1, [r2, #68]	; 0x44
40022018:	e2033001 	and	r3, r3, #1
4002201c:	e18c30b5 	strh	r3, [ip, r5]
40022020:	e8bd8070 	pop	{r4, r5, r6, pc}

40022024 <net::tcp_write(long, unsigned char const*, unsigned long, unsigned long)>:
40022024:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
40022028:	e1a08000 	mov	r8, r0
4002202c:	e3a09050 	mov	r9, #80	; 0x50
40022030:	e3010b60 	movw	r0, #7008	; 0x1b60
40022034:	e0000890 	mul	r0, r0, r8
40022038:	e0090399 	mul	r9, r9, r3
4002203c:	e24dd01c 	sub	sp, sp, #28
40022040:	e30a6d5c 	movw	r6, #44380	; 0xad5c
40022044:	e3446005 	movt	r6, #16389	; 0x4005
40022048:	e2524000 	subs	r4, r2, #0
4002204c:	e089b000 	add	fp, r9, r0
40022050:	e086b00b 	add	fp, r6, fp
40022054:	e58d0000 	str	r0, [sp]
40022058:	0a000061 	beq	400221e4 <net::tcp_write(long, unsigned char const*, unsigned long, unsigned long)+0x1c0>
4002205c:	e1a05001 	mov	r5, r1
40022060:	e300a58c 	movw	sl, #1420	; 0x58c
40022064:	e59b101c 	ldr	r1, [fp, #28]
40022068:	ea00001a 	b	400220d8 <net::tcp_write(long, unsigned char const*, unsigned long, unsigned long)+0xb4>
4002206c:	e5921018 	ldr	r1, [r2, #24]
40022070:	e1540003 	cmp	r4, r3
40022074:	e592e040 	ldr	lr, [r2, #64]	; 0x40
40022078:	e5825038 	str	r5, [r2, #56]	; 0x38
4002207c:	95cd0014 	strbls	r0, [sp, #20]
40022080:	e1a0000b 	mov	r0, fp
40022084:	e582703c 	str	r7, [r2, #60]	; 0x3c
40022088:	e58d100c 	str	r1, [sp, #12]
4002208c:	e28d100c 	add	r1, sp, #12
40022090:	85cdc014 	strbhi	ip, [sp, #20]
40022094:	e58de010 	str	lr, [sp, #16]
40022098:	ebfffe67 	bl	40021a3c <net::send_package(net::tcb const*, net::SendInfo const&)>
4002209c:	e0544007 	subs	r4, r4, r7
400220a0:	e3013b60 	movw	r3, #7008	; 0x1b60
400220a4:	e0239893 	mla	r3, r3, r8, r9
400220a8:	e0855007 	add	r5, r5, r7
400220ac:	e3a00000 	mov	r0, #0
400220b0:	e0863003 	add	r3, r6, r3
400220b4:	e5932018 	ldr	r2, [r3, #24]
400220b8:	e593101c 	ldr	r1, [r3, #28]
400220bc:	e0822007 	add	r2, r2, r7
400220c0:	e0411007 	sub	r1, r1, r7
400220c4:	e5830038 	str	r0, [r3, #56]	; 0x38
400220c8:	e583003c 	str	r0, [r3, #60]	; 0x3c
400220cc:	e5832018 	str	r2, [r3, #24]
400220d0:	e583101c 	str	r1, [r3, #28]
400220d4:	0a000042 	beq	400221e4 <net::tcp_write(long, unsigned char const*, unsigned long, unsigned long)+0x1c0>
400220d8:	e154000a 	cmp	r4, sl
400220dc:	e3012b60 	movw	r2, #7008	; 0x1b60
400220e0:	e0229892 	mla	r2, r2, r8, r9
400220e4:	31a07004 	movcc	r7, r4
400220e8:	21a0700a 	movcs	r7, sl
400220ec:	e1540001 	cmp	r4, r1
400220f0:	e300358b 	movw	r3, #1419	; 0x58b
400220f4:	e0862002 	add	r2, r6, r2
400220f8:	e3a0c010 	mov	ip, #16
400220fc:	e3a00018 	mov	r0, #24
40022100:	9affffd9 	bls	4002206c <net::tcp_write(long, unsigned char const*, unsigned long, unsigned long)+0x48>
40022104:	e3013b60 	movw	r3, #7008	; 0x1b60
40022108:	e300758c 	movw	r7, #1420	; 0x58c
4002210c:	e0030893 	mul	r3, r3, r8
40022110:	e58d3004 	str	r3, [sp, #4]
40022114:	e1a02003 	mov	r2, r3
40022118:	e086a002 	add	sl, r6, r2
4002211c:	e3013024 	movw	r3, #4132	; 0x1024
40022120:	e28a8d6d 	add	r8, sl, #6976	; 0x1b40
40022124:	e28a9d6d 	add	r9, sl, #6976	; 0x1b40
40022128:	e78ab003 	str	fp, [sl, r3]
4002212c:	e1a0a008 	mov	sl, r8
40022130:	e2899018 	add	r9, r9, #24
40022134:	e2888010 	add	r8, r8, #16
40022138:	e28aa014 	add	sl, sl, #20
4002213c:	e300b594 	movw	fp, #1428	; 0x594
40022140:	e5d93000 	ldrb	r3, [r9]
40022144:	e1540007 	cmp	r4, r7
40022148:	31a00004 	movcc	r0, r4
4002214c:	21a00007 	movcs	r0, r7
40022150:	e3530000 	cmp	r3, #0
40022154:	1a00001f 	bne	400221d8 <net::tcp_write(long, unsigned char const*, unsigned long, unsigned long)+0x1b4>
40022158:	e598e000 	ldr	lr, [r8]
4002215c:	e1a02005 	mov	r2, r5
40022160:	e59d3000 	ldr	r3, [sp]
40022164:	e0233e9b 	mla	r3, fp, lr, r3
40022168:	e2833a01 	add	r3, r3, #4096	; 0x1000
4002216c:	e2833028 	add	r3, r3, #40	; 0x28
40022170:	e0863003 	add	r3, r6, r3
40022174:	e083c000 	add	ip, r3, r0
40022178:	e4d21001 	ldrb	r1, [r2], #1
4002217c:	e4c31001 	strb	r1, [r3], #1
40022180:	e15c0003 	cmp	ip, r3
40022184:	1afffffb 	bne	40022178 <net::tcp_write(long, unsigned char const*, unsigned long, unsigned long)+0x154>
40022188:	e59d3004 	ldr	r3, [sp, #4]
4002218c:	e59a2000 	ldr	r2, [sl]
40022190:	e02e3e9b 	mla	lr, fp, lr, r3
40022194:	e5983000 	ldr	r3, [r8]
40022198:	e086e00e 	add	lr, r6, lr
4002219c:	e2833001 	add	r3, r3, #1
400221a0:	e2033001 	and	r3, r3, #1
400221a4:	e5883000 	str	r3, [r8]
400221a8:	e0423003 	sub	r3, r2, r3
400221ac:	e30125b4 	movw	r2, #5556	; 0x15b4
400221b0:	e16f3f13 	clz	r3, r3
400221b4:	e78e0002 	str	r0, [lr, r2]
400221b8:	e30125b8 	movw	r2, #5560	; 0x15b8
400221bc:	e1a032a3 	lsr	r3, r3, #5
400221c0:	e5c93000 	strb	r3, [r9]
400221c4:	e300358b 	movw	r3, #1419	; 0x58b
400221c8:	e1540003 	cmp	r4, r3
400221cc:	83a03000 	movhi	r3, #0
400221d0:	93a03001 	movls	r3, #1
400221d4:	e7ce3002 	strb	r3, [lr, r2]
400221d8:	e0544000 	subs	r4, r4, r0
400221dc:	e0855000 	add	r5, r5, r0
400221e0:	1affffd6 	bne	40022140 <net::tcp_write(long, unsigned char const*, unsigned long, unsigned long)+0x11c>
400221e4:	e28dd01c 	add	sp, sp, #28
400221e8:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

400221ec <_GLOBAL__sub_I__ZN3net8tcp_initEv>:
400221ec:	e59f0010 	ldr	r0, [pc, #16]	; 40022204 <_GLOBAL__sub_I__ZN3net8tcp_initEv+0x18>
400221f0:	e3012b60 	movw	r2, #7008	; 0x1b60
400221f4:	e3a01000 	mov	r1, #0
400221f8:	e92d4010 	push	{r4, lr}
400221fc:	eb002804 	bl	4002c214 <memset>
40022200:	e8bd8010 	pop	{r4, pc}
40022204:	4005ad5c 	andmi	sl, r5, ip, asr sp

40022208 <net::udp_set_ip()>:
40022208:	e59f1034 	ldr	r1, [pc, #52]	; 40022244 <net::udp_set_ip()+0x3c>
4002220c:	e30a373c 	movw	r3, #42812	; 0xa73c
40022210:	e3443005 	movt	r3, #16389	; 0x4005
40022214:	e24dd008 	sub	sp, sp, #8
40022218:	e28d2004 	add	r2, sp, #4
4002221c:	e28d0008 	add	r0, sp, #8
40022220:	e5933000 	ldr	r3, [r3]
40022224:	e58d3004 	str	r3, [sp, #4]
40022228:	e4d23001 	ldrb	r3, [r2], #1
4002222c:	e1520000 	cmp	r2, r0
40022230:	e6ef3073 	uxtb	r3, r3
40022234:	e4c13001 	strb	r3, [r1], #1
40022238:	1afffffa 	bne	40022228 <net::udp_set_ip()+0x20>
4002223c:	e28dd008 	add	sp, sp, #8
40022240:	e12fff1e 	bx	lr
40022244:	4005c8d6 	ldrdmi	ip, [r5], -r6

40022248 <net::udp_begin(unsigned short, void (*)(unsigned char const*, unsigned long, unsigned long, unsigned short))>:
40022248:	e92d4010 	push	{r4, lr}
4002224c:	e30c4eb4 	movw	r4, #52916	; 0xceb4
40022250:	e3444005 	movt	r4, #16389	; 0x4005
40022254:	e1a0c000 	mov	ip, r0
40022258:	e1a03004 	mov	r3, r4
4002225c:	e3a00000 	mov	r0, #0
40022260:	e300e5d4 	movw	lr, #1492	; 0x5d4
40022264:	e1d320b4 	ldrh	r2, [r3, #4]
40022268:	e083300e 	add	r3, r3, lr
4002226c:	e152000c 	cmp	r2, ip
40022270:	08bd8010 	popeq	{r4, pc}
40022274:	e3520000 	cmp	r2, #0
40022278:	0a000004 	beq	40022290 <net::udp_begin(unsigned short, void (*)(unsigned char const*, unsigned long, unsigned long, unsigned short))+0x48>
4002227c:	e2800001 	add	r0, r0, #1
40022280:	e3500010 	cmp	r0, #16
40022284:	1afffff6 	bne	40022264 <net::udp_begin(unsigned short, void (*)(unsigned char const*, unsigned long, unsigned long, unsigned short))+0x1c>
40022288:	e3e00000 	mvn	r0, #0
4002228c:	e8bd8010 	pop	{r4, pc}
40022290:	e30035d4 	movw	r3, #1492	; 0x5d4
40022294:	e0030093 	mul	r3, r3, r0
40022298:	e7841003 	str	r1, [r4, r3]
4002229c:	e0844003 	add	r4, r4, r3
400222a0:	e1c4c0b4 	strh	ip, [r4, #4]
400222a4:	e8bd8010 	pop	{r4, pc}

400222a8 <net::udp_end(unsigned short)>:
400222a8:	e92d4010 	push	{r4, lr}
400222ac:	e30ceeb4 	movw	lr, #52916	; 0xceb4
400222b0:	e344e005 	movt	lr, #16389	; 0x4005
400222b4:	e3a03000 	mov	r3, #0
400222b8:	e1a0200e 	mov	r2, lr
400222bc:	e300c5d4 	movw	ip, #1492	; 0x5d4
400222c0:	e1d210b4 	ldrh	r1, [r2, #4]
400222c4:	e082200c 	add	r2, r2, ip
400222c8:	e1510000 	cmp	r1, r0
400222cc:	0a000007 	beq	400222f0 <net::udp_end(unsigned short)+0x48>
400222d0:	e2833001 	add	r3, r3, #1
400222d4:	e3530010 	cmp	r3, #16
400222d8:	1afffff8 	bne	400222c0 <net::udp_end(unsigned short)+0x18>
400222dc:	e30208bc 	movw	r0, #10428	; 0x28bc
400222e0:	e3440003 	movt	r0, #16387	; 0x4003
400222e4:	eb0010ba 	bl	400265d4 <console_error>
400222e8:	e3e00000 	mvn	r0, #0
400222ec:	e8bd8010 	pop	{r4, pc}
400222f0:	e30015d4 	movw	r1, #1492	; 0x5d4
400222f4:	e3a02000 	mov	r2, #0
400222f8:	e0030391 	mul	r3, r1, r3
400222fc:	e1a00002 	mov	r0, r2
40022300:	e08e1003 	add	r1, lr, r3
40022304:	e78e2003 	str	r2, [lr, r3]
40022308:	e1c120b4 	strh	r2, [r1, #4]
4002230c:	e581200c 	str	r2, [r1, #12]
40022310:	e8bd8010 	pop	{r4, pc}

40022314 <net::udp_recv2(long, unsigned char const**, unsigned long*, unsigned short*)>:
40022314:	e92d4030 	push	{r4, r5, lr}
40022318:	e300c5d4 	movw	ip, #1492	; 0x5d4
4002231c:	e30ceeb4 	movw	lr, #52916	; 0xceb4
40022320:	e344e005 	movt	lr, #16389	; 0x4005
40022324:	e00c009c 	mul	ip, ip, r0
40022328:	e79e500c 	ldr	r5, [lr, ip]
4002232c:	e08e400c 	add	r4, lr, ip
40022330:	e3550000 	cmp	r5, #0
40022334:	1a00000d 	bne	40022370 <net::udp_recv2(long, unsigned char const**, unsigned long*, unsigned short*)+0x5c>
40022338:	e594000c 	ldr	r0, [r4, #12]
4002233c:	e3500000 	cmp	r0, #0
40022340:	08bd8030 	popeq	{r4, r5, pc}
40022344:	e28cc010 	add	ip, ip, #16
40022348:	e08cc00e 	add	ip, ip, lr
4002234c:	e581c000 	str	ip, [r1]
40022350:	e5941008 	ldr	r1, [r4, #8]
40022354:	e5821000 	str	r1, [r2]
40022358:	e2842e5d 	add	r2, r4, #1488	; 0x5d0
4002235c:	e1d220b0 	ldrh	r2, [r2]
40022360:	e1c320b0 	strh	r2, [r3]
40022364:	e594000c 	ldr	r0, [r4, #12]
40022368:	e584500c 	str	r5, [r4, #12]
4002236c:	e8bd8030 	pop	{r4, r5, pc}
40022370:	e3a00000 	mov	r0, #0
40022374:	e8bd8030 	pop	{r4, r5, pc}

40022378 <net::udp_send(long, unsigned char const*, unsigned long, unsigned long, unsigned short)>:
40022378:	e30cceb4 	movw	ip, #52916	; 0xceb4
4002237c:	e3520d17 	cmp	r2, #1472	; 0x5c0
40022380:	e92d4070 	push	{r4, r5, r6, lr}
40022384:	e30045d4 	movw	r4, #1492	; 0x5d4
40022388:	e344c005 	movt	ip, #16389	; 0x4005
4002238c:	e30ceeb0 	movw	lr, #52912	; 0xceb0
40022390:	e02cc094 	mla	ip, r4, r0, ip
40022394:	e344e005 	movt	lr, #16389	; 0x4005
40022398:	e24dd008 	sub	sp, sp, #8
4002239c:	e1dc60b4 	ldrh	r6, [ip, #4]
400223a0:	e30c48bc 	movw	r4, #51388	; 0xc8bc
400223a4:	e3444005 	movt	r4, #16389	; 0x4005
400223a8:	e6ff0072 	uxth	r0, r2
400223ac:	e1dec0b0 	ldrh	ip, [lr]
400223b0:	e1dd51b8 	ldrh	r5, [sp, #24]
400223b4:	e1c4c1b2 	strh	ip, [r4, #18]
400223b8:	e28cc001 	add	ip, ip, #1
400223bc:	e6bf5fb5 	rev16	r5, r5
400223c0:	e1c452b4 	strh	r5, [r4, #36]	; 0x24
400223c4:	31a05002 	movcc	r5, r2
400223c8:	e1cec0b0 	strh	ip, [lr]
400223cc:	23a05d17 	movcs	r5, #1472	; 0x5c0
400223d0:	e6bf6fb6 	rev16	r6, r6
400223d4:	e3520000 	cmp	r2, #0
400223d8:	e1c462b2 	strh	r6, [r4, #34]	; 0x22
400223dc:	e280c01c 	add	ip, r0, #28
400223e0:	e6bfcfbc 	rev16	ip, ip
400223e4:	e2800008 	add	r0, r0, #8
400223e8:	e6bf0fb0 	rev16	r0, r0
400223ec:	e3a02000 	mov	r2, #0
400223f0:	e1c402b6 	strh	r0, [r4, #38]	; 0x26
400223f4:	1284002a 	addne	r0, r4, #42	; 0x2a
400223f8:	e1c421b8 	strh	r2, [r4, #24]
400223fc:	e1c4c1b0 	strh	ip, [r4, #16]
40022400:	10812005 	addne	r2, r1, r5
40022404:	0a000003 	beq	40022418 <net::udp_send(long, unsigned char const*, unsigned long, unsigned long, unsigned short)+0xa0>
40022408:	e4d1c001 	ldrb	ip, [r1], #1
4002240c:	e1510002 	cmp	r1, r2
40022410:	e4c0c001 	strb	ip, [r0], #1
40022414:	1afffffb 	bne	40022408 <net::udp_send(long, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x90>
40022418:	e3730001 	cmn	r3, #1
4002241c:	e285502a 	add	r5, r5, #42	; 0x2a
40022420:	0a00003a 	beq	40022510 <net::udp_send(long, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x198>
40022424:	e30a2734 	movw	r2, #42804	; 0xa734
40022428:	e3442005 	movt	r2, #16389	; 0x4005
4002242c:	e5922000 	ldr	r2, [r2]
40022430:	e1d22003 	bics	r2, r2, r3
40022434:	0a000024 	beq	400224cc <net::udp_send(long, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x154>
40022438:	e20320f0 	and	r2, r3, #240	; 0xf0
4002243c:	e35200e0 	cmp	r2, #224	; 0xe0
40022440:	1a00003b 	bne	40022534 <net::udp_send(long, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x1bc>
40022444:	e7e61453 	ubfx	r1, r3, #8, #7
40022448:	e30c2ea8 	movw	r2, #52904	; 0xcea8
4002244c:	e3442005 	movt	r2, #16389	; 0x4005
40022450:	e30c08bc 	movw	r0, #51388	; 0xc8bc
40022454:	e3440005 	movt	r0, #16389	; 0x4005
40022458:	e282c006 	add	ip, r2, #6
4002245c:	e5c21003 	strb	r1, [r2, #3]
40022460:	e7e71853 	ubfx	r1, r3, #16, #8
40022464:	e5c21004 	strb	r1, [r2, #4]
40022468:	e7e71c53 	ubfx	r1, r3, #24, #8
4002246c:	e5c21005 	strb	r1, [r2, #5]
40022470:	e4d21001 	ldrb	r1, [r2], #1
40022474:	e152000c 	cmp	r2, ip
40022478:	e4c01001 	strb	r1, [r0], #1
4002247c:	1afffffb 	bne	40022470 <net::udp_send(long, unsigned char const*, unsigned long, unsigned long, unsigned short)+0xf8>
40022480:	e59f10c8 	ldr	r1, [pc, #200]	; 40022550 <net::udp_send(long, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x1d8>
40022484:	e28d2004 	add	r2, sp, #4
40022488:	e58d3004 	str	r3, [sp, #4]
4002248c:	e28d0008 	add	r0, sp, #8
40022490:	e4d23001 	ldrb	r3, [r2], #1
40022494:	e1520000 	cmp	r2, r0
40022498:	e6ef3073 	uxtb	r3, r3
4002249c:	e4c13001 	strb	r3, [r1], #1
400224a0:	1afffffa 	bne	40022490 <net::udp_send(long, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x118>
400224a4:	e59f00a8 	ldr	r0, [pc, #168]	; 40022554 <net::udp_send(long, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x1dc>
400224a8:	e3a01014 	mov	r1, #20
400224ac:	ebfffbc6 	bl	400213cc <net::net_chksum(void const*, unsigned long)>
400224b0:	e1c401b8 	strh	r0, [r4, #24]
400224b4:	e30c08bc 	movw	r0, #51388	; 0xc8bc
400224b8:	e3440005 	movt	r0, #16389	; 0x4005
400224bc:	e1a01005 	mov	r1, r5
400224c0:	e28dd008 	add	sp, sp, #8
400224c4:	e8bd4070 	pop	{r4, r5, r6, lr}
400224c8:	ea0001d4 	b	40022c20 <emac_eth_send(void*, unsigned long)>
400224cc:	e30c28bc 	movw	r2, #51388	; 0xc8bc
400224d0:	e3e01000 	mvn	r1, #0
400224d4:	e3442005 	movt	r2, #16389	; 0x4005
400224d8:	e2820006 	add	r0, r2, #6
400224dc:	e4c21001 	strb	r1, [r2], #1
400224e0:	e1520000 	cmp	r2, r0
400224e4:	1afffffc 	bne	400224dc <net::udp_send(long, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x164>
400224e8:	e59f1060 	ldr	r1, [pc, #96]	; 40022550 <net::udp_send(long, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x1d8>
400224ec:	e28d2004 	add	r2, sp, #4
400224f0:	e58d3004 	str	r3, [sp, #4]
400224f4:	e28d0008 	add	r0, sp, #8
400224f8:	e4d23001 	ldrb	r3, [r2], #1
400224fc:	e1500002 	cmp	r0, r2
40022500:	e6ef3073 	uxtb	r3, r3
40022504:	e4c13001 	strb	r3, [r1], #1
40022508:	1afffffa 	bne	400224f8 <net::udp_send(long, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x180>
4002250c:	eaffffe4 	b	400224a4 <net::udp_send(long, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x12c>
40022510:	e30c28bc 	movw	r2, #51388	; 0xc8bc
40022514:	e3442005 	movt	r2, #16389	; 0x4005
40022518:	e2820006 	add	r0, r2, #6
4002251c:	e4c23001 	strb	r3, [r2], #1
40022520:	e1520000 	cmp	r2, r0
40022524:	1afffffc 	bne	4002251c <net::udp_send(long, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x1a4>
40022528:	e1c431be 	strh	r3, [r4, #30]
4002252c:	e1c432b0 	strh	r3, [r4, #32]
40022530:	eaffffdb 	b	400224a4 <net::udp_send(long, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x12c>
40022534:	e30c08bc 	movw	r0, #51388	; 0xc8bc
40022538:	e1a02003 	mov	r2, r3
4002253c:	e3440005 	movt	r0, #16389	; 0x4005
40022540:	e1a01005 	mov	r1, r5
40022544:	e28dd008 	add	sp, sp, #8
40022548:	e8bd4070 	pop	{r4, r5, r6, lr}
4002254c:	ea000398 	b	400233b4 <net::arp_send(t_udp*, unsigned long, unsigned long)>
40022550:	4005c8da 	ldrdmi	ip, [r5], -sl
40022554:	4005c8ca 	andmi	ip, r5, sl, asr #17

40022558 <networkparams::store::update(networkparams::Params const*)>:
40022558:	e92d401f 	push	{r0, r1, r2, r3, r4, lr}
4002255c:	e1a03000 	mov	r3, r0
40022560:	e59f0024 	ldr	r0, [pc, #36]	; 4002258c <networkparams::store::update(networkparams::Params const*)+0x34>
40022564:	e3a02000 	mov	r2, #0
40022568:	e58d2008 	str	r2, [sp, #8]
4002256c:	e3a0105e 	mov	r1, #94	; 0x5e
40022570:	e58d1000 	str	r1, [sp]
40022574:	e1a01002 	mov	r1, r2
40022578:	e58d2004 	str	r2, [sp, #4]
4002257c:	e5900000 	ldr	r0, [r0]
40022580:	ebffe878 	bl	4001c768 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
40022584:	e28dd014 	add	sp, sp, #20
40022588:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4002258c:	40034084 	andmi	r4, r3, r4, lsl #1

40022590 <networkparams::store::copy(networkparams::Params*)>:
40022590:	e92d4007 	push	{r0, r1, r2, lr}
40022594:	e1a02000 	mov	r2, r0
40022598:	e59f0020 	ldr	r0, [pc, #32]	; 400225c0 <networkparams::store::copy(networkparams::Params*)+0x30>
4002259c:	e3a01000 	mov	r1, #0
400225a0:	e58d1000 	str	r1, [sp]
400225a4:	e3a03001 	mov	r3, #1
400225a8:	e58d3004 	str	r3, [sp, #4]
400225ac:	e3a0305e 	mov	r3, #94	; 0x5e
400225b0:	e5900000 	ldr	r0, [r0]
400225b4:	ebffe88d 	bl	4001c7f0 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)>
400225b8:	e28dd00c 	add	sp, sp, #12
400225bc:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
400225c0:	40034084 	andmi	r4, r3, r4, lsl #1

400225c4 <NetworkParams::NetworkParams()>:
400225c4:	e1a03000 	mov	r3, r0
400225c8:	e280105e 	add	r1, r0, #94	; 0x5e
400225cc:	e3a02000 	mov	r2, #0
400225d0:	e1530001 	cmp	r3, r1
400225d4:	14c32001 	strbne	r2, [r3], #1
400225d8:	1afffffc 	bne	400225d0 <NetworkParams::NetworkParams()+0xc>
400225dc:	e3a03001 	mov	r3, #1
400225e0:	e5c03014 	strb	r3, [r0, #20]
400225e4:	e12fff1e 	bx	lr

400225e8 <NetworkParams::Load()>:
400225e8:	e3a03000 	mov	r3, #0
400225ec:	e1a02000 	mov	r2, r0
400225f0:	e92d4013 	push	{r0, r1, r4, lr}
400225f4:	e1a04000 	mov	r4, r0
400225f8:	e5c03000 	strb	r3, [r0]
400225fc:	e5c03001 	strb	r3, [r0, #1]
40022600:	e5c03002 	strb	r3, [r0, #2]
40022604:	e5c03003 	strb	r3, [r0, #3]
40022608:	e1a0000d 	mov	r0, sp
4002260c:	e59f1034 	ldr	r1, [pc, #52]	; 40022648 <NetworkParams::Load()+0x60>
40022610:	eb000b75 	bl	400253ec <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
40022614:	e59f1030 	ldr	r1, [pc, #48]	; 4002264c <NetworkParams::Load()+0x64>
40022618:	e1a0000d 	mov	r0, sp
4002261c:	eb000b75 	bl	400253f8 <ReadConfigFile::Read(char const*)>
40022620:	e3500000 	cmp	r0, #0
40022624:	e1a00004 	mov	r0, r4
40022628:	0a000004 	beq	40022640 <NetworkParams::Load()+0x58>
4002262c:	ebffffc9 	bl	40022558 <networkparams::store::update(networkparams::Params const*)>
40022630:	e1a0000d 	mov	r0, sp
40022634:	eb000b6e 	bl	400253f4 <ReadConfigFile::~ReadConfigFile()>
40022638:	e28dd008 	add	sp, sp, #8
4002263c:	e8bd8010 	pop	{r4, pc}
40022640:	ebffffd2 	bl	40022590 <networkparams::store::copy(networkparams::Params*)>
40022644:	eafffff9 	b	40022630 <NetworkParams::Load()+0x48>
40022648:	4002288c 	andmi	r2, r2, ip, lsl #17
4002264c:	4003291c 	andmi	r2, r3, ip, lsl r9

40022650 <NetworkParams::Load(char const*, unsigned long)>:
40022650:	e3a03000 	mov	r3, #0
40022654:	e92d4073 	push	{r0, r1, r4, r5, r6, lr}
40022658:	e1a04000 	mov	r4, r0
4002265c:	e5c03000 	strb	r3, [r0]
40022660:	e1a05001 	mov	r5, r1
40022664:	e5c03001 	strb	r3, [r0, #1]
40022668:	e1a06002 	mov	r6, r2
4002266c:	e5c03002 	strb	r3, [r0, #2]
40022670:	e1a02000 	mov	r2, r0
40022674:	e5c03003 	strb	r3, [r0, #3]
40022678:	e1a0000d 	mov	r0, sp
4002267c:	e59f1028 	ldr	r1, [pc, #40]	; 400226ac <NetworkParams::Load(char const*, unsigned long)+0x5c>
40022680:	eb000b59 	bl	400253ec <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
40022684:	e1a02006 	mov	r2, r6
40022688:	e1a01005 	mov	r1, r5
4002268c:	e1a0000d 	mov	r0, sp
40022690:	eb000b82 	bl	400254a0 <ReadConfigFile::Read(char const*, unsigned int)>
40022694:	e1a00004 	mov	r0, r4
40022698:	ebffffae 	bl	40022558 <networkparams::store::update(networkparams::Params const*)>
4002269c:	e1a0000d 	mov	r0, sp
400226a0:	eb000b53 	bl	400253f4 <ReadConfigFile::~ReadConfigFile()>
400226a4:	e28dd008 	add	sp, sp, #8
400226a8:	e8bd8070 	pop	{r4, r5, r6, pc}
400226ac:	4002288c 	andmi	r2, r2, ip, lsl #17

400226b0 <NetworkParams::callbackFunction(char const*)>:
400226b0:	e92d4030 	push	{r4, r5, lr}
400226b4:	e1a05001 	mov	r5, r1
400226b8:	e59f11b4 	ldr	r1, [pc, #436]	; 40022874 <NetworkParams::callbackFunction(char const*)+0x1c4>
400226bc:	e24dd014 	sub	sp, sp, #20
400226c0:	e1a04000 	mov	r4, r0
400226c4:	e28d2007 	add	r2, sp, #7
400226c8:	e1a00005 	mov	r0, r5
400226cc:	eb000c82 	bl	400258dc <Sscan::Uint8(char const*, char const*, unsigned char&)>
400226d0:	e3500000 	cmp	r0, #0
400226d4:	1a00000a 	bne	40022704 <NetworkParams::callbackFunction(char const*)+0x54>
400226d8:	e5dd2007 	ldrb	r2, [sp, #7]
400226dc:	e5943000 	ldr	r3, [r4]
400226e0:	e3520000 	cmp	r2, #0
400226e4:	13c33001 	bicne	r3, r3, #1
400226e8:	03833001 	orreq	r3, r3, #1
400226ec:	e2522000 	subs	r2, r2, #0
400226f0:	e5843000 	str	r3, [r4]
400226f4:	13a02001 	movne	r2, #1
400226f8:	e5c42014 	strb	r2, [r4, #20]
400226fc:	e28dd014 	add	sp, sp, #20
40022700:	e8bd8030 	pop	{r4, r5, pc}
40022704:	e59f116c 	ldr	r1, [pc, #364]	; 40022878 <NetworkParams::callbackFunction(char const*)+0x1c8>
40022708:	e28d2008 	add	r2, sp, #8
4002270c:	e1a00005 	mov	r0, r5
40022710:	eb000c23 	bl	400257a4 <Sscan::IpAddress(char const*, char const*, unsigned long&)>
40022714:	e3500000 	cmp	r0, #0
40022718:	1a000017 	bne	4002277c <NetworkParams::callbackFunction(char const*)+0xcc>
4002271c:	e59d2008 	ldr	r2, [sp, #8]
40022720:	e5943000 	ldr	r3, [r4]
40022724:	e7e70452 	ubfx	r0, r2, #8, #8
40022728:	e6ef1072 	uxtb	r1, r2
4002272c:	e35100ac 	cmp	r1, #172	; 0xac
40022730:	0a000009 	beq	4002275c <NetworkParams::callbackFunction(char const*)+0xac>
40022734:	e35100c0 	cmp	r1, #192	; 0xc0
40022738:	0a00000d 	beq	40022774 <NetworkParams::callbackFunction(char const*)+0xc4>
4002273c:	e351000a 	cmp	r1, #10
40022740:	0a000008 	beq	40022768 <NetworkParams::callbackFunction(char const*)+0xb8>
40022744:	e3510002 	cmp	r1, #2
40022748:	13520000 	cmpne	r2, #0
4002274c:	13c33002 	bicne	r3, r3, #2
40022750:	0a000004 	beq	40022768 <NetworkParams::callbackFunction(char const*)+0xb8>
40022754:	e5843000 	str	r3, [r4]
40022758:	eaffffe7 	b	400226fc <NetworkParams::callbackFunction(char const*)+0x4c>
4002275c:	e2400010 	sub	r0, r0, #16
40022760:	e350000f 	cmp	r0, #15
40022764:	8afffff6 	bhi	40022744 <NetworkParams::callbackFunction(char const*)+0x94>
40022768:	e5842004 	str	r2, [r4, #4]
4002276c:	e3833002 	orr	r3, r3, #2
40022770:	eafffff7 	b	40022754 <NetworkParams::callbackFunction(char const*)+0xa4>
40022774:	e35000a8 	cmp	r0, #168	; 0xa8
40022778:	eafffff0 	b	40022740 <NetworkParams::callbackFunction(char const*)+0x90>
4002277c:	e59f10f8 	ldr	r1, [pc, #248]	; 4002287c <NetworkParams::callbackFunction(char const*)+0x1cc>
40022780:	e28d2008 	add	r2, sp, #8
40022784:	e1a00005 	mov	r0, r5
40022788:	eb000c05 	bl	400257a4 <Sscan::IpAddress(char const*, char const*, unsigned long&)>
4002278c:	e3500000 	cmp	r0, #0
40022790:	1a00000b 	bne	400227c4 <NetworkParams::callbackFunction(char const*)+0x114>
40022794:	e59d2008 	ldr	r2, [sp, #8]
40022798:	e5943000 	ldr	r3, [r4]
4002279c:	e3520000 	cmp	r2, #0
400227a0:	0a000005 	beq	400227bc <NetworkParams::callbackFunction(char const*)+0x10c>
400227a4:	e6bf1f32 	rev	r1, r2
400227a8:	e1e00001 	mvn	r0, r1
400227ac:	e01110a0 	ands	r1, r1, r0, lsr #1
400227b0:	05842008 	streq	r2, [r4, #8]
400227b4:	03833004 	orreq	r3, r3, #4
400227b8:	0affffe5 	beq	40022754 <NetworkParams::callbackFunction(char const*)+0xa4>
400227bc:	e3c33004 	bic	r3, r3, #4
400227c0:	eaffffe3 	b	40022754 <NetworkParams::callbackFunction(char const*)+0xa4>
400227c4:	e59f10b4 	ldr	r1, [pc, #180]	; 40022880 <NetworkParams::callbackFunction(char const*)+0x1d0>
400227c8:	e28d2008 	add	r2, sp, #8
400227cc:	e1a00005 	mov	r0, r5
400227d0:	eb000bf3 	bl	400257a4 <Sscan::IpAddress(char const*, char const*, unsigned long&)>
400227d4:	e3500000 	cmp	r0, #0
400227d8:	1a000008 	bne	40022800 <NetworkParams::callbackFunction(char const*)+0x150>
400227dc:	e59d2008 	ldr	r2, [sp, #8]
400227e0:	e5943000 	ldr	r3, [r4]
400227e4:	e3520000 	cmp	r2, #0
400227e8:	03c33008 	biceq	r3, r3, #8
400227ec:	13833008 	orrne	r3, r3, #8
400227f0:	15843000 	strne	r3, [r4]
400227f4:	1584200c 	strne	r2, [r4, #12]
400227f8:	0affffd5 	beq	40022754 <NetworkParams::callbackFunction(char const*)+0xa4>
400227fc:	eaffffbe 	b	400226fc <NetworkParams::callbackFunction(char const*)+0x4c>
40022800:	e59f107c 	ldr	r1, [pc, #124]	; 40022884 <NetworkParams::callbackFunction(char const*)+0x1d4>
40022804:	e3a0303f 	mov	r3, #63	; 0x3f
40022808:	e58d300c 	str	r3, [sp, #12]
4002280c:	e2842015 	add	r2, r4, #21
40022810:	e28d300c 	add	r3, sp, #12
40022814:	e1a00005 	mov	r0, r5
40022818:	eb000b4d 	bl	40025554 <Sscan::Char(char const*, char const*, char*, unsigned long&)>
4002281c:	e3500000 	cmp	r0, #0
40022820:	1a000005 	bne	4002283c <NetworkParams::callbackFunction(char const*)+0x18c>
40022824:	e59d300c 	ldr	r3, [sp, #12]
40022828:	e0843003 	add	r3, r4, r3
4002282c:	e5c30015 	strb	r0, [r3, #21]
40022830:	e5943000 	ldr	r3, [r4]
40022834:	e3833020 	orr	r3, r3, #32
40022838:	eaffffc5 	b	40022754 <NetworkParams::callbackFunction(char const*)+0xa4>
4002283c:	e59f1044 	ldr	r1, [pc, #68]	; 40022888 <NetworkParams::callbackFunction(char const*)+0x1d8>
40022840:	e28d2008 	add	r2, sp, #8
40022844:	e1a00005 	mov	r0, r5
40022848:	eb000bd5 	bl	400257a4 <Sscan::IpAddress(char const*, char const*, unsigned long&)>
4002284c:	e3500000 	cmp	r0, #0
40022850:	1affffa9 	bne	400226fc <NetworkParams::callbackFunction(char const*)+0x4c>
40022854:	e59d2008 	ldr	r2, [sp, #8]
40022858:	e5943000 	ldr	r3, [r4]
4002285c:	e5842055 	str	r2, [r4, #85]	; 0x55
40022860:	e3520000 	cmp	r2, #0
40022864:	03c33040 	biceq	r3, r3, #64	; 0x40
40022868:	13833040 	orrne	r3, r3, #64	; 0x40
4002286c:	e5843000 	str	r3, [r4]
40022870:	eaffffa1 	b	400226fc <NetworkParams::callbackFunction(char const*)+0x4c>
40022874:	40032913 	andmi	r2, r3, r3, lsl r9
40022878:	40032908 	andmi	r2, r3, r8, lsl #18
4002287c:	400328ff 	strdmi	r2, [r3], -pc	; <UNPREDICTABLE>
40022880:	400328ef 	andmi	r2, r3, pc, ror #17
40022884:	400328e6 	andmi	r2, r3, r6, ror #17
40022888:	400328db 	ldrdmi	r2, [r3], -fp

4002288c <NetworkParams::staticCallbackFunction(void*, char const*)>:
4002288c:	eaffff87 	b	400226b0 <NetworkParams::callbackFunction(char const*)>

40022890 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)>:
40022890:	e3510000 	cmp	r1, #0
40022894:	e92d4070 	push	{r4, r5, r6, lr}
40022898:	e1a04000 	mov	r4, r0
4002289c:	e24dd018 	sub	sp, sp, #24
400228a0:	e1a05002 	mov	r5, r2
400228a4:	e1a06003 	mov	r6, r3
400228a8:	0a000006 	beq	400228c8 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x38>
400228ac:	e1a03000 	mov	r3, r0
400228b0:	e281005e 	add	r0, r1, #94	; 0x5e
400228b4:	e1510000 	cmp	r1, r0
400228b8:	0a000003 	beq	400228cc <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x3c>
400228bc:	e4d12001 	ldrb	r2, [r1], #1
400228c0:	e4c32001 	strb	r2, [r3], #1
400228c4:	eafffffa 	b	400228b4 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x24>
400228c8:	ebffff30 	bl	40022590 <networkparams::store::copy(networkparams::Params*)>
400228cc:	e59f1268 	ldr	r1, [pc, #616]	; 40022b3c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x2ac>
400228d0:	e1a02005 	mov	r2, r5
400228d4:	e59f5264 	ldr	r5, [pc, #612]	; 40022b40 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x2b0>
400228d8:	e1a03006 	mov	r3, r6
400228dc:	e28d000c 	add	r0, sp, #12
400228e0:	e2846015 	add	r6, r4, #21
400228e4:	eb000980 	bl	40024eec <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)>
400228e8:	e5952010 	ldr	r2, [r5, #16]
400228ec:	e3a03000 	mov	r3, #0
400228f0:	e59f124c 	ldr	r1, [pc, #588]	; 40022b44 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x2b4>
400228f4:	e28d000c 	add	r0, sp, #12
400228f8:	eb0009b1 	bl	40024fc4 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)>
400228fc:	e5943000 	ldr	r3, [r4]
40022900:	e3130002 	tst	r3, #2
40022904:	05952000 	ldreq	r2, [r5]
40022908:	05842004 	streq	r2, [r4, #4]
4002290c:	e3130004 	tst	r3, #4
40022910:	05952004 	ldreq	r2, [r5, #4]
40022914:	05842008 	streq	r2, [r4, #8]
40022918:	e3130008 	tst	r3, #8
4002291c:	05952008 	ldreq	r2, [r5, #8]
40022920:	0584200c 	streq	r2, [r4, #12]
40022924:	e3130020 	tst	r3, #32
40022928:	1a000011 	bne	40022974 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0xe4>
4002292c:	e59f3214 	ldr	r3, [pc, #532]	; 40022b48 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x2b8>
40022930:	e3a0203f 	mov	r2, #63	; 0x3f
40022934:	e5931000 	ldr	r1, [r3]
40022938:	e1a03006 	mov	r3, r6
4002293c:	e2811013 	add	r1, r1, #19
40022940:	e5f10001 	ldrb	r0, [r1, #1]!
40022944:	e3500000 	cmp	r0, #0
40022948:	1a000004 	bne	40022960 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0xd0>
4002294c:	e0832002 	add	r2, r3, r2
40022950:	e1520003 	cmp	r2, r3
40022954:	0a000004 	beq	4002296c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0xdc>
40022958:	e4c30001 	strb	r0, [r3], #1
4002295c:	eafffffb 	b	40022950 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0xc0>
40022960:	e4c30001 	strb	r0, [r3], #1
40022964:	e2522001 	subs	r2, r2, #1
40022968:	1afffff4 	bne	40022940 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0xb0>
4002296c:	e3a03000 	mov	r3, #0
40022970:	e5c43054 	strb	r3, [r4, #84]	; 0x54
40022974:	e1dd11b2 	ldrh	r1, [sp, #18]
40022978:	e1dd51b0 	ldrh	r5, [sp, #16]
4002297c:	e1510005 	cmp	r1, r5
40022980:	2a000018 	bcs	400229e8 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x158>
40022984:	e59d000c 	ldr	r0, [sp, #12]
40022988:	e0455001 	sub	r5, r5, r1
4002298c:	e0800001 	add	r0, r0, r1
40022990:	e5941000 	ldr	r1, [r4]
40022994:	e5dd2014 	ldrb	r2, [sp, #20]
40022998:	e5d43014 	ldrb	r3, [r4, #20]
4002299c:	e3110001 	tst	r1, #1
400229a0:	1a000005 	bne	400229bc <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x12c>
400229a4:	e3520000 	cmp	r2, #0
400229a8:	1a000005 	bne	400229c4 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x134>
400229ac:	e58d3000 	str	r3, [sp]
400229b0:	e59f2194 	ldr	r2, [pc, #404]	; 40022b4c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x2bc>
400229b4:	e59f3194 	ldr	r3, [pc, #404]	; 40022b50 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x2c0>
400229b8:	ea000004 	b	400229d0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x140>
400229bc:	e3520000 	cmp	r2, #0
400229c0:	0a00002e 	beq	40022a80 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x1f0>
400229c4:	e58d3000 	str	r3, [sp]
400229c8:	e59f2184 	ldr	r2, [pc, #388]	; 40022b54 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x2c4>
400229cc:	e59f317c 	ldr	r3, [pc, #380]	; 40022b50 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x2c0>
400229d0:	e1a01005 	mov	r1, r5
400229d4:	eb00288a 	bl	4002cc04 <snprintf>
400229d8:	e1550000 	cmp	r5, r0
400229dc:	a1dd31b2 	ldrhge	r3, [sp, #18]
400229e0:	a0830000 	addge	r0, r3, r0
400229e4:	a1cd01b2 	strhge	r0, [sp, #18]
400229e8:	e59f1168 	ldr	r1, [pc, #360]	; 40022b58 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x2c8>
400229ec:	e28d000c 	add	r0, sp, #12
400229f0:	eb0009d4 	bl	40025148 <PropertiesBuilder::AddComment(char const*)>
400229f4:	e5943000 	ldr	r3, [r4]
400229f8:	e28d000c 	add	r0, sp, #12
400229fc:	e5942004 	ldr	r2, [r4, #4]
40022a00:	e7e030d3 	ubfx	r3, r3, #1, #1
40022a04:	e59f1150 	ldr	r1, [pc, #336]	; 40022b5c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x2cc>
40022a08:	eb00096d 	bl	40024fc4 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)>
40022a0c:	e5943000 	ldr	r3, [r4]
40022a10:	e28d000c 	add	r0, sp, #12
40022a14:	e5942008 	ldr	r2, [r4, #8]
40022a18:	e7e03153 	ubfx	r3, r3, #2, #1
40022a1c:	e59f113c 	ldr	r1, [pc, #316]	; 40022b60 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x2d0>
40022a20:	eb000967 	bl	40024fc4 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)>
40022a24:	e5943000 	ldr	r3, [r4]
40022a28:	e28d000c 	add	r0, sp, #12
40022a2c:	e59f1130 	ldr	r1, [pc, #304]	; 40022b64 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x2d4>
40022a30:	e7e031d3 	ubfx	r3, r3, #3, #1
40022a34:	e594200c 	ldr	r2, [r4, #12]
40022a38:	eb000961 	bl	40024fc4 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)>
40022a3c:	e1dd11b2 	ldrh	r1, [sp, #18]
40022a40:	e1dd51b0 	ldrh	r5, [sp, #16]
40022a44:	e1510005 	cmp	r1, r5
40022a48:	2a00001b 	bcs	40022abc <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x22c>
40022a4c:	e5942000 	ldr	r2, [r4]
40022a50:	e59d000c 	ldr	r0, [sp, #12]
40022a54:	e0455001 	sub	r5, r5, r1
40022a58:	e3120020 	tst	r2, #32
40022a5c:	e0800001 	add	r0, r0, r1
40022a60:	e5dd3014 	ldrb	r3, [sp, #20]
40022a64:	1a000009 	bne	40022a90 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x200>
40022a68:	e3530000 	cmp	r3, #0
40022a6c:	1a000009 	bne	40022a98 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x208>
40022a70:	e59f30f0 	ldr	r3, [pc, #240]	; 40022b68 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x2d8>
40022a74:	e59f20f0 	ldr	r2, [pc, #240]	; 40022b6c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x2dc>
40022a78:	e58d6000 	str	r6, [sp]
40022a7c:	ea000008 	b	40022aa4 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x214>
40022a80:	e58d3000 	str	r3, [sp]
40022a84:	e59f20e4 	ldr	r2, [pc, #228]	; 40022b70 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x2e0>
40022a88:	e59f30c0 	ldr	r3, [pc, #192]	; 40022b50 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x2c0>
40022a8c:	eaffffcf 	b	400229d0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x140>
40022a90:	e3530000 	cmp	r3, #0
40022a94:	0a000024 	beq	40022b2c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x29c>
40022a98:	e59f30c8 	ldr	r3, [pc, #200]	; 40022b68 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x2d8>
40022a9c:	e59f20d0 	ldr	r2, [pc, #208]	; 40022b74 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x2e4>
40022aa0:	e58d6000 	str	r6, [sp]
40022aa4:	e1a01005 	mov	r1, r5
40022aa8:	eb002855 	bl	4002cc04 <snprintf>
40022aac:	e1550000 	cmp	r5, r0
40022ab0:	a1dd31b2 	ldrhge	r3, [sp, #18]
40022ab4:	a0830000 	addge	r0, r3, r0
40022ab8:	a1cd01b2 	strhge	r0, [sp, #18]
40022abc:	e59f10b4 	ldr	r1, [pc, #180]	; 40022b78 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x2e8>
40022ac0:	e28d000c 	add	r0, sp, #12
40022ac4:	eb00099f 	bl	40025148 <PropertiesBuilder::AddComment(char const*)>
40022ac8:	e5943000 	ldr	r3, [r4]
40022acc:	e28d000c 	add	r0, sp, #12
40022ad0:	e5942055 	ldr	r2, [r4, #85]	; 0x55
40022ad4:	e7e03353 	ubfx	r3, r3, #6, #1
40022ad8:	e59f109c 	ldr	r1, [pc, #156]	; 40022b7c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x2ec>
40022adc:	eb000938 	bl	40024fc4 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)>
40022ae0:	e5dd3014 	ldrb	r3, [sp, #20]
40022ae4:	e3530000 	cmp	r3, #0
40022ae8:	0a00000a 	beq	40022b18 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x288>
40022aec:	e1dd21b2 	ldrh	r2, [sp, #18]
40022af0:	e59d300c 	ldr	r3, [sp, #12]
40022af4:	e0833002 	add	r3, r3, r2
40022af8:	e3a0207d 	mov	r2, #125	; 0x7d
40022afc:	e5432001 	strb	r2, [r3, #-1]
40022b00:	e59d100c 	ldr	r1, [sp, #12]
40022b04:	e1dd31b2 	ldrh	r3, [sp, #18]
40022b08:	e7c12003 	strb	r2, [r1, r3]
40022b0c:	e1dd31b2 	ldrh	r3, [sp, #18]
40022b10:	e2833001 	add	r3, r3, #1
40022b14:	e1cd31b2 	strh	r3, [sp, #18]
40022b18:	e1dd21b2 	ldrh	r2, [sp, #18]
40022b1c:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
40022b20:	e5832000 	str	r2, [r3]
40022b24:	e28dd018 	add	sp, sp, #24
40022b28:	e8bd8070 	pop	{r4, r5, r6, pc}
40022b2c:	e59f3034 	ldr	r3, [pc, #52]	; 40022b68 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x2d8>
40022b30:	e59f2048 	ldr	r2, [pc, #72]	; 40022b80 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x2f0>
40022b34:	e58d6000 	str	r6, [sp]
40022b38:	eaffffd9 	b	40022aa4 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x214>
40022b3c:	4003291c 	andmi	r2, r3, ip, lsl r9
40022b40:	4005a73c 	andmi	sl, r5, ip, lsr r7
40022b44:	400328c4 	andmi	r2, r3, r4, asr #17
40022b48:	40034080 	andmi	r4, r3, r0, lsl #1
40022b4c:	4002e13b 	andmi	lr, r2, fp, lsr r1
40022b50:	40032913 	andmi	r2, r3, r3, lsl r9
40022b54:	4002e132 	andmi	lr, r2, r2, lsr r1
40022b58:	400328d1 	ldrdmi	r2, [r3], -r1
40022b5c:	40032908 	andmi	r2, r3, r8, lsl #18
40022b60:	400328ff 	strdmi	r2, [r3], -pc	; <UNPREDICTABLE>
40022b64:	400328ef 	andmi	r2, r3, pc, ror #17
40022b68:	400328e6 	andmi	r2, r3, r6, ror #17
40022b6c:	4002e14e 	andmi	lr, r2, lr, asr #2
40022b70:	4002e13c 	andmi	lr, r2, ip, lsr r1
40022b74:	4002e143 	andmi	lr, r2, r3, asr #2
40022b78:	40031037 	andmi	r1, r3, r7, lsr r0
40022b7c:	400328db 	ldrdmi	r2, [r3], -fp
40022b80:	4002e14f 	andmi	lr, r2, pc, asr #2

40022b84 <net::phy_customized_led()>:
40022b84:	e12fff1e 	bx	lr

40022b88 <net::phy_customized_timing()>:
40022b88:	e12fff1e 	bx	lr

40022b8c <emac_adjust_link(net::PhyStatus)>:
40022b8c:	e92d4030 	push	{r4, r5, lr}
40022b90:	e24dd014 	sub	sp, sp, #20
40022b94:	e28dc010 	add	ip, sp, #16
40022b98:	e2524000 	subs	r4, r2, #0
40022b9c:	e1a05001 	mov	r5, r1
40022ba0:	e90c000f 	stmdb	ip, {r0, r1, r2, r3}
40022ba4:	e1a0c000 	mov	ip, r0
40022ba8:	e59f1058 	ldr	r1, [pc, #88]	; 40022c08 <emac_adjust_link(net::PhyStatus)+0x7c>
40022bac:	03a0200a 	moveq	r2, #10
40022bb0:	e59f0054 	ldr	r0, [pc, #84]	; 40022c0c <emac_adjust_link(net::PhyStatus)+0x80>
40022bb4:	13a02064 	movne	r2, #100	; 0x64
40022bb8:	e59f3050 	ldr	r3, [pc, #80]	; 40022c10 <emac_adjust_link(net::PhyStatus)+0x84>
40022bbc:	e3550000 	cmp	r5, #0
40022bc0:	01a03001 	moveq	r3, r1
40022bc4:	e35c0001 	cmp	ip, #1
40022bc8:	e59f1044 	ldr	r1, [pc, #68]	; 40022c14 <emac_adjust_link(net::PhyStatus)+0x88>
40022bcc:	11a01000 	movne	r1, r0
40022bd0:	e59f0040 	ldr	r0, [pc, #64]	; 40022c18 <emac_adjust_link(net::PhyStatus)+0x8c>
40022bd4:	eb0027ed 	bl	4002cb90 <printf>
40022bd8:	e59f203c 	ldr	r2, [pc, #60]	; 40022c1c <emac_adjust_link(net::PhyStatus)+0x90>
40022bdc:	e3550001 	cmp	r5, #1
40022be0:	e5923000 	ldr	r3, [r2]
40022be4:	13c33001 	bicne	r3, r3, #1
40022be8:	03833001 	orreq	r3, r3, #1
40022bec:	e3c3300c 	bic	r3, r3, #12
40022bf0:	e3540000 	cmp	r4, #0
40022bf4:	03833008 	orreq	r3, r3, #8
40022bf8:	1383300c 	orrne	r3, r3, #12
40022bfc:	e5823000 	str	r3, [r2]
40022c00:	e28dd014 	add	sp, sp, #20
40022c04:	e8bd8030 	pop	{r4, r5, pc}
40022c08:	40032930 	andmi	r2, r3, r0, lsr r9
40022c0c:	4003292b 	andmi	r2, r3, fp, lsr #18
40022c10:	40032935 	andmi	r2, r3, r5, lsr r9
40022c14:	40032928 	andmi	r2, r3, r8, lsr #18
40022c18:	4003293a 	andmi	r2, r3, sl, lsr r9
40022c1c:	01c30000 	biceq	r0, r3, r0

40022c20 <emac_eth_send(void*, unsigned long)>:
40022c20:	e92d4070 	push	{r4, r5, r6, lr}
40022c24:	e1a02001 	mov	r2, r1
40022c28:	e59f6060 	ldr	r6, [pc, #96]	; 40022c90 <emac_eth_send(void*, unsigned long)+0x70>
40022c2c:	e5964000 	ldr	r4, [r6]
40022c30:	e2843a31 	add	r3, r4, #200704	; 0x31000
40022c34:	e5935804 	ldr	r5, [r3, #2052]	; 0x804
40022c38:	e3813401 	orr	r3, r1, #16777216	; 0x1000000
40022c3c:	e1a01000 	mov	r1, r0
40022c40:	e0844305 	add	r4, r4, r5, lsl #6
40022c44:	e5843c04 	str	r3, [r4, #3076]	; 0xc04
40022c48:	e5940c08 	ldr	r0, [r4, #3080]	; 0xc08
40022c4c:	eb001a13 	bl	400294a0 <h3_memcpy>
40022c50:	e5943c04 	ldr	r3, [r4, #3076]	; 0xc04
40022c54:	e5962000 	ldr	r2, [r6]
40022c58:	e383320e 	orr	r3, r3, #-536870912	; 0xe0000000
40022c5c:	e5843c04 	str	r3, [r4, #3076]	; 0xc04
40022c60:	e3a03102 	mov	r3, #-2147483648	; 0x80000000
40022c64:	e5843c00 	str	r3, [r4, #3072]	; 0xc00
40022c68:	e2853001 	add	r3, r5, #1
40022c6c:	e3530030 	cmp	r3, #48	; 0x30
40022c70:	e2822a31 	add	r2, r2, #200704	; 0x31000
40022c74:	23a03000 	movcs	r3, #0
40022c78:	e5823804 	str	r3, [r2, #2052]	; 0x804
40022c7c:	e59f2010 	ldr	r2, [pc, #16]	; 40022c94 <emac_eth_send(void*, unsigned long)+0x74>
40022c80:	e5923014 	ldr	r3, [r2, #20]
40022c84:	e3833103 	orr	r3, r3, #-1073741824	; 0xc0000000
40022c88:	e5823014 	str	r3, [r2, #20]
40022c8c:	e8bd8070 	pop	{r4, r5, r6, pc}
40022c90:	40062bf4 	strdmi	r2, [r6], -r4
40022c94:	01c30000 	biceq	r0, r3, r0

40022c98 <emac_free_pkt()>:
40022c98:	e59f3028 	ldr	r3, [pc, #40]	; 40022cc8 <emac_free_pkt()+0x30>
40022c9c:	e5932000 	ldr	r2, [r3]
40022ca0:	e2820a31 	add	r0, r2, #200704	; 0x31000
40022ca4:	e5903800 	ldr	r3, [r0, #2048]	; 0x800
40022ca8:	e7921303 	ldr	r1, [r2, r3, lsl #6]
40022cac:	e3811102 	orr	r1, r1, #-2147483648	; 0x80000000
40022cb0:	e7821303 	str	r1, [r2, r3, lsl #6]
40022cb4:	e2833001 	add	r3, r3, #1
40022cb8:	e3530030 	cmp	r3, #48	; 0x30
40022cbc:	23a03000 	movcs	r3, #0
40022cc0:	e5803800 	str	r3, [r0, #2048]	; 0x800
40022cc4:	e12fff1e 	bx	lr
40022cc8:	40062bf4 	strdmi	r2, [r6], -r4

40022ccc <net::phy_read(unsigned long, unsigned long, unsigned short&)>:
40022ccc:	e59fc08c 	ldr	ip, [pc, #140]	; 40022d60 <net::phy_read(unsigned long, unsigned long, unsigned short&)+0x94>
40022cd0:	e92d4030 	push	{r4, r5, lr}
40022cd4:	e3005bb7 	movw	r5, #2999	; 0xbb7
40022cd8:	e59c4088 	ldr	r4, [ip, #136]	; 0x88
40022cdc:	e59fe080 	ldr	lr, [pc, #128]	; 40022d64 <net::phy_read(unsigned long, unsigned long, unsigned short&)+0x98>
40022ce0:	e59c3088 	ldr	r3, [ip, #136]	; 0x88
40022ce4:	e0433004 	sub	r3, r3, r4
40022ce8:	e1530005 	cmp	r3, r5
40022cec:	8a000019 	bhi	40022d58 <net::phy_read(unsigned long, unsigned long, unsigned short&)+0x8c>
40022cf0:	e59e3048 	ldr	r3, [lr, #72]	; 0x48
40022cf4:	e3130001 	tst	r3, #1
40022cf8:	1afffff8 	bne	40022ce0 <net::phy_read(unsigned long, unsigned long, unsigned short&)+0x14>
40022cfc:	e1a03600 	lsl	r3, r0, #12
40022d00:	e3000bb7 	movw	r0, #2999	; 0xbb7
40022d04:	e1a01201 	lsl	r1, r1, #4
40022d08:	e2033a1f 	and	r3, r3, #126976	; 0x1f000
40022d0c:	e2011e7f 	and	r1, r1, #2032	; 0x7f0
40022d10:	e1833001 	orr	r3, r3, r1
40022d14:	e59f1048 	ldr	r1, [pc, #72]	; 40022d64 <net::phy_read(unsigned long, unsigned long, unsigned short&)+0x98>
40022d18:	e3833603 	orr	r3, r3, #3145728	; 0x300000
40022d1c:	e3833001 	orr	r3, r3, #1
40022d20:	e58e3048 	str	r3, [lr, #72]	; 0x48
40022d24:	e59ce088 	ldr	lr, [ip, #136]	; 0x88
40022d28:	e59fc030 	ldr	ip, [pc, #48]	; 40022d60 <net::phy_read(unsigned long, unsigned long, unsigned short&)+0x94>
40022d2c:	e59c3088 	ldr	r3, [ip, #136]	; 0x88
40022d30:	e043300e 	sub	r3, r3, lr
40022d34:	e1530000 	cmp	r3, r0
40022d38:	8a000006 	bhi	40022d58 <net::phy_read(unsigned long, unsigned long, unsigned short&)+0x8c>
40022d3c:	e5913048 	ldr	r3, [r1, #72]	; 0x48
40022d40:	e3130001 	tst	r3, #1
40022d44:	1afffff8 	bne	40022d2c <net::phy_read(unsigned long, unsigned long, unsigned short&)+0x60>
40022d48:	e591304c 	ldr	r3, [r1, #76]	; 0x4c
40022d4c:	e3a00001 	mov	r0, #1
40022d50:	e1c230b0 	strh	r3, [r2]
40022d54:	e8bd8030 	pop	{r4, r5, pc}
40022d58:	e3a00000 	mov	r0, #0
40022d5c:	e8bd8030 	pop	{r4, r5, pc}
40022d60:	01c20c00 	biceq	r0, r2, r0, lsl #24
40022d64:	01c30000 	biceq	r0, r3, r0

40022d68 <net::phy_write(unsigned long, unsigned long, unsigned short)>:
40022d68:	e1a01201 	lsl	r1, r1, #4
40022d6c:	e300cbb7 	movw	ip, #2999	; 0xbb7
40022d70:	e1a00600 	lsl	r0, r0, #12
40022d74:	e2011e1f 	and	r1, r1, #496	; 0x1f0
40022d78:	e59f3044 	ldr	r3, [pc, #68]	; 40022dc4 <net::phy_write(unsigned long, unsigned long, unsigned short)+0x5c>
40022d7c:	e2000a1f 	and	r0, r0, #126976	; 0x1f000
40022d80:	e1800001 	orr	r0, r0, r1
40022d84:	e59f103c 	ldr	r1, [pc, #60]	; 40022dc8 <net::phy_write(unsigned long, unsigned long, unsigned short)+0x60>
40022d88:	e3800003 	orr	r0, r0, #3
40022d8c:	e583204c 	str	r2, [r3, #76]	; 0x4c
40022d90:	e5830048 	str	r0, [r3, #72]	; 0x48
40022d94:	e5910088 	ldr	r0, [r1, #136]	; 0x88
40022d98:	e5912088 	ldr	r2, [r1, #136]	; 0x88
40022d9c:	e0422000 	sub	r2, r2, r0
40022da0:	e152000c 	cmp	r2, ip
40022da4:	8a000004 	bhi	40022dbc <net::phy_write(unsigned long, unsigned long, unsigned short)+0x54>
40022da8:	e5932048 	ldr	r2, [r3, #72]	; 0x48
40022dac:	e3120001 	tst	r2, #1
40022db0:	1afffff8 	bne	40022d98 <net::phy_write(unsigned long, unsigned long, unsigned short)+0x30>
40022db4:	e3a00001 	mov	r0, #1
40022db8:	e12fff1e 	bx	lr
40022dbc:	e3a00000 	mov	r0, #0
40022dc0:	e12fff1e 	bx	lr
40022dc4:	01c30000 	biceq	r0, r3, r0
40022dc8:	01c20c00 	biceq	r0, r2, r0, lsl #24

40022dcc <net::phy_config(unsigned long)>:
40022dcc:	e3a00001 	mov	r0, #1
40022dd0:	e12fff1e 	bx	lr

40022dd4 <net::acd_start(net::acd::Acd*, net::ip_addr)>:
40022dd4:	e3a03001 	mov	r3, #1
40022dd8:	e92d4010 	push	{r4, lr}
40022ddc:	e1a04000 	mov	r4, r0
40022de0:	e5801000 	str	r1, [r0]
40022de4:	e5c03004 	strb	r3, [r0, #4]
40022de8:	eb0027b0 	bl	4002ccb0 <random>
40022dec:	e59f1020 	ldr	r1, [pc, #32]	; 40022e14 <net::acd_start(net::acd::Acd*, net::ip_addr)+0x40>
40022df0:	e3a0300a 	mov	r3, #10
40022df4:	e732f310 	udiv	r2, r0, r3
40022df8:	e0600392 	mls	r0, r2, r3, r0
40022dfc:	e1c400bc 	strh	r0, [r4, #12]
40022e00:	e3a00064 	mov	r0, #100	; 0x64
40022e04:	eb001345 	bl	40027b20 <SoftwareTimerAdd(unsigned long, void (*)(long))>
40022e08:	e59f3008 	ldr	r3, [pc, #8]	; 40022e18 <net::acd_start(net::acd::Acd*, net::ip_addr)+0x44>
40022e0c:	e5830000 	str	r0, [r3]
40022e10:	e8bd8010 	pop	{r4, pc}
40022e14:	40022e44 	andmi	r2, r2, r4, asr #28
40022e18:	40062bf8 	strdmi	r2, [r6], -r8

40022e1c <net::acd_stop(net::acd::Acd*)>:
40022e1c:	e92d4010 	push	{r4, lr}
40022e20:	e3a03000 	mov	r3, #0
40022e24:	e59f4014 	ldr	r4, [pc, #20]	; 40022e40 <net::acd_stop(net::acd::Acd*)+0x24>
40022e28:	e5c03004 	strb	r3, [r0, #4]
40022e2c:	e1a00004 	mov	r0, r4
40022e30:	eb001355 	bl	40027b8c <SoftwareTimerDelete(long&)>
40022e34:	e3e03000 	mvn	r3, #0
40022e38:	e5843000 	str	r3, [r4]
40022e3c:	e8bd8010 	pop	{r4, pc}
40022e40:	40062bf8 	strdmi	r2, [r6], -r8

40022e44 <net::acd_timer(long)>:
40022e44:	e59f3134 	ldr	r3, [pc, #308]	; 40022f80 <net::acd_timer(long)+0x13c>
40022e48:	e92d4010 	push	{r4, lr}
40022e4c:	e5934024 	ldr	r4, [r3, #36]	; 0x24
40022e50:	e5d43006 	ldrb	r3, [r4, #6]
40022e54:	e3530000 	cmp	r3, #0
40022e58:	12433001 	subne	r3, r3, #1
40022e5c:	15c43006 	strbne	r3, [r4, #6]
40022e60:	e1d430bc 	ldrh	r3, [r4, #12]
40022e64:	e3530000 	cmp	r3, #0
40022e68:	12433001 	subne	r3, r3, #1
40022e6c:	11c430bc 	strhne	r3, [r4, #12]
40022e70:	e5d43004 	ldrb	r3, [r4, #4]
40022e74:	e3530004 	cmp	r3, #4
40022e78:	8a000016 	bhi	40022ed8 <net::acd_timer(long)+0x94>
40022e7c:	e3530002 	cmp	r3, #2
40022e80:	8a000025 	bhi	40022f1c <net::acd_timer(long)+0xd8>
40022e84:	e2433001 	sub	r3, r3, #1
40022e88:	e3530001 	cmp	r3, #1
40022e8c:	88bd8010 	pophi	{r4, pc}
40022e90:	e1d430bc 	ldrh	r3, [r4, #12]
40022e94:	e3530000 	cmp	r3, #0
40022e98:	18bd8010 	popne	{r4, pc}
40022e9c:	e5940000 	ldr	r0, [r4]
40022ea0:	e3a03002 	mov	r3, #2
40022ea4:	e5c43004 	strb	r3, [r4, #4]
40022ea8:	eb0001ec 	bl	40023660 <net::arp_acd_probe(net::ip_addr)>
40022eac:	e5d43005 	ldrb	r3, [r4, #5]
40022eb0:	e2833001 	add	r3, r3, #1
40022eb4:	e6ef3073 	uxtb	r3, r3
40022eb8:	e5c43005 	strb	r3, [r4, #5]
40022ebc:	e3530002 	cmp	r3, #2
40022ec0:	9a00000e 	bls	40022f00 <net::acd_timer(long)+0xbc>
40022ec4:	e3a03003 	mov	r3, #3
40022ec8:	e1c430b4 	strh	r3, [r4, #4]
40022ecc:	e3a03014 	mov	r3, #20
40022ed0:	e1c430bc 	strh	r3, [r4, #12]
40022ed4:	e8bd8010 	pop	{r4, pc}
40022ed8:	e3530007 	cmp	r3, #7
40022edc:	18bd8010 	popne	{r4, pc}
40022ee0:	e1d430bc 	ldrh	r3, [r4, #12]
40022ee4:	e3530000 	cmp	r3, #0
40022ee8:	18bd8010 	popne	{r4, pc}
40022eec:	e1a00004 	mov	r0, r4
40022ef0:	ebffffc9 	bl	40022e1c <net::acd_stop(net::acd::Acd*)>
40022ef4:	e5943008 	ldr	r3, [r4, #8]
40022ef8:	e3a00001 	mov	r0, #1
40022efc:	ea00001d 	b	40022f78 <net::acd_timer(long)+0x134>
40022f00:	eb00276a 	bl	4002ccb0 <random>
40022f04:	e3a0300a 	mov	r3, #10
40022f08:	e732f310 	udiv	r2, r0, r3
40022f0c:	e0600392 	mls	r0, r2, r3, r0
40022f10:	e0800003 	add	r0, r0, r3
40022f14:	e1c400bc 	strh	r0, [r4, #12]
40022f18:	e8bd8010 	pop	{r4, pc}
40022f1c:	e1d430bc 	ldrh	r3, [r4, #12]
40022f20:	e3530000 	cmp	r3, #0
40022f24:	18bd8010 	popne	{r4, pc}
40022f28:	e5d43005 	ldrb	r3, [r4, #5]
40022f2c:	e5940000 	ldr	r0, [r4]
40022f30:	e3530000 	cmp	r3, #0
40022f34:	05c43007 	strbeq	r3, [r4, #7]
40022f38:	03a02004 	moveq	r2, #4
40022f3c:	05c42004 	strbeq	r2, [r4, #4]
40022f40:	eb0001df 	bl	400236c4 <net::arp_acd_send_announcement(net::ip_addr)>
40022f44:	e3a03014 	mov	r3, #20
40022f48:	e1c430bc 	strh	r3, [r4, #12]
40022f4c:	e5d43005 	ldrb	r3, [r4, #5]
40022f50:	e2833001 	add	r3, r3, #1
40022f54:	e6ef3073 	uxtb	r3, r3
40022f58:	e5c43005 	strb	r3, [r4, #5]
40022f5c:	e3530001 	cmp	r3, #1
40022f60:	98bd8010 	popls	{r4, pc}
40022f64:	e3a03005 	mov	r3, #5
40022f68:	e3a00000 	mov	r0, #0
40022f6c:	e1c430b4 	strh	r3, [r4, #4]
40022f70:	e5943008 	ldr	r3, [r4, #8]
40022f74:	e1c400bc 	strh	r0, [r4, #12]
40022f78:	e8bd4010 	pop	{r4, lr}
40022f7c:	e12fff13 	bx	r3
40022f80:	4005a73c 	andmi	sl, r5, ip, lsr r7

40022f84 <net::acd_restart(net::acd::Acd*)>:
40022f84:	e92d4010 	push	{r4, lr}
40022f88:	e1a04000 	mov	r4, r0
40022f8c:	e5d03007 	ldrb	r3, [r0, #7]
40022f90:	e2833001 	add	r3, r3, #1
40022f94:	e5c03007 	strb	r3, [r0, #7]
40022f98:	e5903008 	ldr	r3, [r0, #8]
40022f9c:	e3a00002 	mov	r0, #2
40022fa0:	e12fff33 	blx	r3
40022fa4:	e5d43007 	ldrb	r3, [r4, #7]
40022fa8:	e3530009 	cmp	r3, #9
40022fac:	9a000004 	bls	40022fc4 <net::acd_restart(net::acd::Acd*)+0x40>
40022fb0:	e3a03007 	mov	r3, #7
40022fb4:	e5c43004 	strb	r3, [r4, #4]
40022fb8:	e3a03f96 	mov	r3, #600	; 0x258
40022fbc:	e1c430bc 	strh	r3, [r4, #12]
40022fc0:	e8bd8010 	pop	{r4, pc}
40022fc4:	e1a00004 	mov	r0, r4
40022fc8:	ebffff93 	bl	40022e1c <net::acd_stop(net::acd::Acd*)>
40022fcc:	e5943008 	ldr	r3, [r4, #8]
40022fd0:	e3a00001 	mov	r0, #1
40022fd4:	e8bd4010 	pop	{r4, lr}
40022fd8:	e12fff13 	bx	r3

40022fdc <net::acd_network_changed_link_down()>:
40022fdc:	e59f300c 	ldr	r3, [pc, #12]	; 40022ff0 <net::acd_network_changed_link_down()+0x14>
40022fe0:	e5930024 	ldr	r0, [r3, #36]	; 0x24
40022fe4:	e3500000 	cmp	r0, #0
40022fe8:	012fff1e 	bxeq	lr
40022fec:	eaffff8a 	b	40022e1c <net::acd_stop(net::acd::Acd*)>
40022ff0:	4005a73c 	andmi	sl, r5, ip, lsr r7

40022ff4 <net::acd_arp_reply(t_arp*)>:
40022ff4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40022ff8:	e59f6114 	ldr	r6, [pc, #276]	; 40023114 <net::acd_arp_reply(t_arp*)+0x120>
40022ffc:	e5965024 	ldr	r5, [r6, #36]	; 0x24
40023000:	e3550000 	cmp	r5, #0
40023004:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
40023008:	e5d53004 	ldrb	r3, [r5, #4]
4002300c:	e1a04000 	mov	r4, r0
40023010:	e3530003 	cmp	r3, #3
40023014:	8a000019 	bhi	40023080 <net::acd_arp_reply(t_arp*)+0x8c>
40023018:	e3530000 	cmp	r3, #0
4002301c:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
40023020:	e280701c 	add	r7, r0, #28
40023024:	e1a00007 	mov	r0, r7
40023028:	ebfff6a1 	bl	40020ab4 <net::memcpy_ip(unsigned char const*)>
4002302c:	e5953000 	ldr	r3, [r5]
40023030:	e1500003 	cmp	r0, r3
40023034:	0a00002e 	beq	400230f4 <net::acd_arp_reply(t_arp*)+0x100>
40023038:	e1a00007 	mov	r0, r7
4002303c:	ebfff69c 	bl	40020ab4 <net::memcpy_ip(unsigned char const*)>
40023040:	e3500000 	cmp	r0, #0
40023044:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
40023048:	e2840026 	add	r0, r4, #38	; 0x26
4002304c:	ebfff698 	bl	40020ab4 <net::memcpy_ip(unsigned char const*)>
40023050:	e5953000 	ldr	r3, [r5]
40023054:	e1500003 	cmp	r0, r3
40023058:	18bd81f0 	popne	{r4, r5, r6, r7, r8, pc}
4002305c:	e2844016 	add	r4, r4, #22
40023060:	e2863014 	add	r3, r6, #20
40023064:	e1540007 	cmp	r4, r7
40023068:	0a000021 	beq	400230f4 <net::acd_arp_reply(t_arp*)+0x100>
4002306c:	e4d41001 	ldrb	r1, [r4], #1
40023070:	e4d32001 	ldrb	r2, [r3], #1
40023074:	e1510002 	cmp	r1, r2
40023078:	0afffff9 	beq	40023064 <net::acd_arp_reply(t_arp*)+0x70>
4002307c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40023080:	e2433004 	sub	r3, r3, #4
40023084:	e3530002 	cmp	r3, #2
40023088:	88bd81f0 	pophi	{r4, r5, r6, r7, r8, pc}
4002308c:	e280701c 	add	r7, r0, #28
40023090:	e1a00007 	mov	r0, r7
40023094:	ebfff686 	bl	40020ab4 <net::memcpy_ip(unsigned char const*)>
40023098:	e5953000 	ldr	r3, [r5]
4002309c:	e1500003 	cmp	r0, r3
400230a0:	18bd81f0 	popne	{r4, r5, r6, r7, r8, pc}
400230a4:	e2844016 	add	r4, r4, #22
400230a8:	e2863014 	add	r3, r6, #20
400230ac:	e1540007 	cmp	r4, r7
400230b0:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
400230b4:	e4d41001 	ldrb	r1, [r4], #1
400230b8:	e4d32001 	ldrb	r2, [r3], #1
400230bc:	e1510002 	cmp	r1, r2
400230c0:	0afffff9 	beq	400230ac <net::acd_arp_reply(t_arp*)+0xb8>
400230c4:	e5d53004 	ldrb	r3, [r5, #4]
400230c8:	e3530006 	cmp	r3, #6
400230cc:	1a000005 	bne	400230e8 <net::acd_arp_reply(t_arp*)+0xf4>
400230d0:	e1a00005 	mov	r0, r5
400230d4:	ebffff50 	bl	40022e1c <net::acd_stop(net::acd::Acd*)>
400230d8:	e5953008 	ldr	r3, [r5, #8]
400230dc:	e3a00002 	mov	r0, #2
400230e0:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
400230e4:	e12fff13 	bx	r3
400230e8:	e5d53006 	ldrb	r3, [r5, #6]
400230ec:	e3530000 	cmp	r3, #0
400230f0:	0a000002 	beq	40023100 <net::acd_arp_reply(t_arp*)+0x10c>
400230f4:	e1a00005 	mov	r0, r5
400230f8:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
400230fc:	eaffffa0 	b	40022f84 <net::acd_restart(net::acd::Acd*)>
40023100:	e5950000 	ldr	r0, [r5]
40023104:	eb00016e 	bl	400236c4 <net::arp_acd_send_announcement(net::ip_addr)>
40023108:	e3a03064 	mov	r3, #100	; 0x64
4002310c:	e5c53006 	strb	r3, [r5, #6]
40023110:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40023114:	4005a73c 	andmi	sl, r5, ip, lsr r7

40023118 <net::acd_add(net::acd::Acd*, void (*)(net::acd::Callback))>:
40023118:	e59f3008 	ldr	r3, [pc, #8]	; 40023128 <net::acd_add(net::acd::Acd*, void (*)(net::acd::Callback))+0x10>
4002311c:	e5801008 	str	r1, [r0, #8]
40023120:	e5830024 	str	r0, [r3, #36]	; 0x24
40023124:	e12fff1e 	bx	lr
40023128:	4005a73c 	andmi	sl, r5, ip, lsr r7

4002312c <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)>:
4002312c:	e3510000 	cmp	r1, #0
40023130:	13500000 	cmpne	r0, #0
40023134:	012fff1e 	bxeq	lr
40023138:	e59f307c 	ldr	r3, [pc, #124]	; 400231bc <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)+0x90>
4002313c:	e92d4010 	push	{r4, lr}
40023140:	e5934024 	ldr	r4, [r3, #36]	; 0x24
40023144:	e5943000 	ldr	r3, [r4]
40023148:	e1530000 	cmp	r3, r0
4002314c:	18bd8010 	popne	{r4, pc}
40023150:	e6ff3073 	uxth	r3, r3
40023154:	e30a29fe 	movw	r2, #43518	; 0xa9fe
40023158:	e1530002 	cmp	r3, r2
4002315c:	18bd8010 	popne	{r4, pc}
40023160:	e6ff1071 	uxth	r1, r1
40023164:	e1510003 	cmp	r1, r3
40023168:	08bd8010 	popeq	{r4, pc}
4002316c:	e5d43004 	ldrb	r3, [r4, #4]
40023170:	e3530005 	cmp	r3, #5
40023174:	8a00000a 	bhi	400231a4 <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)+0x78>
40023178:	e3530003 	cmp	r3, #3
4002317c:	8a00000b 	bhi	400231b0 <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)+0x84>
40023180:	e2433001 	sub	r3, r3, #1
40023184:	e3530002 	cmp	r3, #2
40023188:	88bd8010 	pophi	{r4, pc}
4002318c:	e1a00004 	mov	r0, r4
40023190:	ebffff21 	bl	40022e1c <net::acd_stop(net::acd::Acd*)>
40023194:	e5943008 	ldr	r3, [r4, #8]
40023198:	e3a00002 	mov	r0, #2
4002319c:	e8bd4010 	pop	{r4, lr}
400231a0:	e12fff13 	bx	r3
400231a4:	e3530007 	cmp	r3, #7
400231a8:	18bd8010 	popne	{r4, pc}
400231ac:	eafffff6 	b	4002318c <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)+0x60>
400231b0:	e3a03006 	mov	r3, #6
400231b4:	e5c43004 	strb	r3, [r4, #4]
400231b8:	e8bd8010 	pop	{r4, pc}
400231bc:	4005a73c 	andmi	sl, r5, ip, lsr r7

400231c0 <net::arp_find_record(unsigned long, net::arp::Flags)>:
400231c0:	e3023c38 	movw	r3, #11320	; 0x2c38
400231c4:	e1a0c000 	mov	ip, r0
400231c8:	e92d40f0 	push	{r4, r5, r6, r7, lr}
400231cc:	e3a04000 	mov	r4, #0
400231d0:	e3443006 	movt	r3, #16390	; 0x4006
400231d4:	e1a07004 	mov	r7, r4
400231d8:	e283ed06 	add	lr, r3, #384	; 0x180
400231dc:	e1a05004 	mov	r5, r4
400231e0:	e1a06004 	mov	r6, r4
400231e4:	ea000004 	b	400231fc <net::arp_find_record(unsigned long, net::arp::Flags)+0x3c>
400231e8:	e3520003 	cmp	r2, #3
400231ec:	0a000018 	beq	40023254 <net::arp_find_record(unsigned long, net::arp::Flags)+0x94>
400231f0:	e2833018 	add	r3, r3, #24
400231f4:	e153000e 	cmp	r3, lr
400231f8:	0a000011 	beq	40023244 <net::arp_find_record(unsigned long, net::arp::Flags)+0x84>
400231fc:	e5932000 	ldr	r2, [r3]
40023200:	e1a00003 	mov	r0, r3
40023204:	e152000c 	cmp	r2, ip
40023208:	08bd80f0 	popeq	{r4, r5, r6, r7, pc}
4002320c:	e3510001 	cmp	r1, #1
40023210:	0afffff6 	beq	400231f0 <net::arp_find_record(unsigned long, net::arp::Flags)+0x30>
40023214:	e5932014 	ldr	r2, [r3, #20]
40023218:	e3520000 	cmp	r2, #0
4002321c:	0a000011 	beq	40023268 <net::arp_find_record(unsigned long, net::arp::Flags)+0xa8>
40023220:	e3520002 	cmp	r2, #2
40023224:	1affffef 	bne	400231e8 <net::arp_find_record(unsigned long, net::arp::Flags)+0x28>
40023228:	e1d321b2 	ldrh	r2, [r3, #18]
4002322c:	e1520004 	cmp	r2, r4
40023230:	81a05003 	movhi	r5, r3
40023234:	e2833018 	add	r3, r3, #24
40023238:	81a04002 	movhi	r4, r2
4002323c:	e153000e 	cmp	r3, lr
40023240:	1affffed 	bne	400231fc <net::arp_find_record(unsigned long, net::arp::Flags)+0x3c>
40023244:	e3560000 	cmp	r6, #0
40023248:	11a00006 	movne	r0, r6
4002324c:	01a00005 	moveq	r0, r5
40023250:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
40023254:	e1d321b2 	ldrh	r2, [r3, #18]
40023258:	e1520007 	cmp	r2, r7
4002325c:	81a07002 	movhi	r7, r2
40023260:	81a06003 	movhi	r6, r3
40023264:	eaffffe1 	b	400231f0 <net::arp_find_record(unsigned long, net::arp::Flags)+0x30>
40023268:	e583c000 	str	ip, [r3]
4002326c:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}

40023270 <net::arp_timer(long)>:
40023270:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
40023274:	e3028db8 	movw	r8, #11704	; 0x2db8
40023278:	e59f412c 	ldr	r4, [pc, #300]	; 400233ac <net::arp_timer(long)+0x13c>
4002327c:	e24dd00c 	sub	sp, sp, #12
40023280:	e3448006 	movt	r8, #16390	; 0x4006
40023284:	e3a09003 	mov	r9, #3
40023288:	e2846d06 	add	r6, r4, #384	; 0x180
4002328c:	e3a07000 	mov	r7, #0
40023290:	ea000004 	b	400232a8 <net::arp_timer(long)+0x38>
40023294:	e3530001 	cmp	r3, #1
40023298:	0a000032 	beq	40023368 <net::arp_timer(long)+0xf8>
4002329c:	e2844018 	add	r4, r4, #24
400232a0:	e1560004 	cmp	r6, r4
400232a4:	0a00002d 	beq	40023360 <net::arp_timer(long)+0xf0>
400232a8:	e5143004 	ldr	r3, [r4, #-4]
400232ac:	e2445018 	sub	r5, r4, #24
400232b0:	f5d4f044 	pld	[r4, #68]	; 0x44
400232b4:	e3530000 	cmp	r3, #0
400232b8:	0afffff7 	beq	4002329c <net::arp_timer(long)+0x2c>
400232bc:	e15420b6 	ldrh	r2, [r4, #-6]
400232c0:	e3530002 	cmp	r3, #2
400232c4:	e2822001 	add	r2, r2, #1
400232c8:	e6ff2072 	uxth	r2, r2
400232cc:	e14420b6 	strh	r2, [r4, #-6]
400232d0:	0a000031 	beq	4002339c <net::arp_timer(long)+0x12c>
400232d4:	e3530003 	cmp	r3, #3
400232d8:	1affffed 	bne	40023294 <net::arp_timer(long)+0x24>
400232dc:	e3520f4b 	cmp	r2, #300	; 0x12c
400232e0:	9affffed 	bls	4002329c <net::arp_timer(long)+0x2c>
400232e4:	e5143018 	ldr	r3, [r4, #-24]	; 0xffffffe8
400232e8:	e28d2004 	add	r2, sp, #4
400232ec:	e59f10bc 	ldr	r1, [pc, #188]	; 400233b0 <net::arp_timer(long)+0x140>
400232f0:	e28d0008 	add	r0, sp, #8
400232f4:	e58d3004 	str	r3, [sp, #4]
400232f8:	e514300c 	ldr	r3, [r4, #-12]
400232fc:	e5883000 	str	r3, [r8]
40023300:	e5543008 	ldrb	r3, [r4, #-8]
40023304:	e5c83004 	strb	r3, [r8, #4]
40023308:	e5543007 	ldrb	r3, [r4, #-7]
4002330c:	e5c83005 	strb	r3, [r8, #5]
40023310:	e3a03001 	mov	r3, #1
40023314:	e5043004 	str	r3, [r4, #-4]
40023318:	e4d23001 	ldrb	r3, [r2], #1
4002331c:	e1520000 	cmp	r2, r0
40023320:	e6ef3073 	uxtb	r3, r3
40023324:	e4c13001 	strb	r3, [r1], #1
40023328:	1afffffa 	bne	40023318 <net::arp_timer(long)+0xa8>
4002332c:	e3a0103c 	mov	r1, #60	; 0x3c
40023330:	e1a00008 	mov	r0, r8
40023334:	ebfffe39 	bl	40022c20 <emac_eth_send(void*, unsigned long)>
40023338:	e3023db8 	movw	r3, #11704	; 0x2db8
4002333c:	e3e01000 	mvn	r1, #0
40023340:	e3443006 	movt	r3, #16390	; 0x4006
40023344:	e2832006 	add	r2, r3, #6
40023348:	e4c31001 	strb	r1, [r3], #1
4002334c:	e1530002 	cmp	r3, r2
40023350:	1afffffc 	bne	40023348 <net::arp_timer(long)+0xd8>
40023354:	e2844018 	add	r4, r4, #24
40023358:	e1560004 	cmp	r6, r4
4002335c:	1affffd1 	bne	400232a8 <net::arp_timer(long)+0x38>
40023360:	e28dd00c 	add	sp, sp, #12
40023364:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
40023368:	e3520002 	cmp	r2, #2
4002336c:	9affffca 	bls	4002329c <net::arp_timer(long)+0x2c>
40023370:	e5140014 	ldr	r0, [r4, #-20]	; 0xffffffec
40023374:	e3500000 	cmp	r0, #0
40023378:	0a000000 	beq	40023380 <net::arp_timer(long)+0x110>
4002337c:	eb002813 	bl	4002d3d0 <operator delete[](void*)>
40023380:	e4c57001 	strb	r7, [r5], #1
40023384:	e1550004 	cmp	r5, r4
40023388:	0affffc3 	beq	4002329c <net::arp_timer(long)+0x2c>
4002338c:	e4c57001 	strb	r7, [r5], #1
40023390:	e1550004 	cmp	r5, r4
40023394:	1afffff9 	bne	40023380 <net::arp_timer(long)+0x110>
40023398:	eaffffbf 	b	4002329c <net::arp_timer(long)+0x2c>
4002339c:	e3520f96 	cmp	r2, #600	; 0x258
400233a0:	85049004 	strhi	r9, [r4, #-4]
400233a4:	814470b6 	strhhi	r7, [r4, #-6]
400233a8:	eaffffbb 	b	4002329c <net::arp_timer(long)+0x2c>
400233ac:	40062c50 	andmi	r2, r6, r0, asr ip
400233b0:	40062dde 	ldrdmi	r2, [r6], -lr

400233b4 <net::arp_send(t_udp*, unsigned long, unsigned long)>:
400233b4:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
400233b8:	e30a773c 	movw	r7, #42812	; 0xa73c
400233bc:	e3447005 	movt	r7, #16389	; 0x4005
400233c0:	e24dd00c 	sub	sp, sp, #12
400233c4:	e5973000 	ldr	r3, [r7]
400233c8:	e3530000 	cmp	r3, #0
400233cc:	0a000027 	beq	40023470 <net::arp_send(t_udp*, unsigned long, unsigned long)+0xbc>
400233d0:	e280301e 	add	r3, r0, #30
400233d4:	e1a04000 	mov	r4, r0
400233d8:	e3130003 	tst	r3, #3
400233dc:	e1a06001 	mov	r6, r1
400233e0:	0580201e 	streq	r2, [r0, #30]
400233e4:	e1a05002 	mov	r5, r2
400233e8:	1a000022 	bne	40023478 <net::arp_send(t_udp*, unsigned long, unsigned long)+0xc4>
400233ec:	e3a03000 	mov	r3, #0
400233f0:	e3a01014 	mov	r1, #20
400233f4:	e5c43018 	strb	r3, [r4, #24]
400233f8:	e284000e 	add	r0, r4, #14
400233fc:	e5c43019 	strb	r3, [r4, #25]
40023400:	ebfff7f1 	bl	400213cc <net::net_chksum(void const*, unsigned long)>
40023404:	e1c401b8 	strh	r0, [r4, #24]
40023408:	e30a3738 	movw	r3, #42808	; 0xa738
4002340c:	e3443005 	movt	r3, #16389	; 0x4005
40023410:	e5933000 	ldr	r3, [r3]
40023414:	e1d33005 	bics	r3, r3, r5
40023418:	1a000086 	bne	40023638 <net::arp_send(t_udp*, unsigned long, unsigned long)+0x284>
4002341c:	e3023c38 	movw	r3, #11320	; 0x2c38
40023420:	e3443006 	movt	r3, #16390	; 0x4006
40023424:	e283ed06 	add	lr, r3, #384	; 0x180
40023428:	e593c014 	ldr	ip, [r3, #20]
4002342c:	e35c0001 	cmp	ip, #1
40023430:	da000002 	ble	40023440 <net::arp_send(t_udp*, unsigned long, unsigned long)+0x8c>
40023434:	e5932000 	ldr	r2, [r3]
40023438:	e1520005 	cmp	r2, r5
4002343c:	0a00002c 	beq	400234f4 <net::arp_send(t_udp*, unsigned long, unsigned long)+0x140>
40023440:	e2833018 	add	r3, r3, #24
40023444:	e153000e 	cmp	r3, lr
40023448:	1afffff6 	bne	40023428 <net::arp_send(t_udp*, unsigned long, unsigned long)+0x74>
4002344c:	e3a01000 	mov	r1, #0
40023450:	e1a00005 	mov	r0, r5
40023454:	ebffff59 	bl	400231c0 <net::arp_find_record(unsigned long, net::arp::Flags)>
40023458:	e5903014 	ldr	r3, [r0, #20]
4002345c:	e1a07000 	mov	r7, r0
40023460:	e1530001 	cmp	r3, r1
40023464:	0a00002e 	beq	40023524 <net::arp_send(t_udp*, unsigned long, unsigned long)+0x170>
40023468:	e3530001 	cmp	r3, #1
4002346c:	0a00000a 	beq	4002349c <net::arp_send(t_udp*, unsigned long, unsigned long)+0xe8>
40023470:	e28dd00c 	add	sp, sp, #12
40023474:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
40023478:	e58d2004 	str	r2, [sp, #4]
4002347c:	e28d1004 	add	r1, sp, #4
40023480:	e2800022 	add	r0, r0, #34	; 0x22
40023484:	e4d12001 	ldrb	r2, [r1], #1
40023488:	e6ef2072 	uxtb	r2, r2
4002348c:	e4c32001 	strb	r2, [r3], #1
40023490:	e1530000 	cmp	r3, r0
40023494:	1afffffa 	bne	40023484 <net::arp_send(t_udp*, unsigned long, unsigned long)+0xd0>
40023498:	eaffffd3 	b	400233ec <net::arp_send(t_udp*, unsigned long, unsigned long)+0x38>
4002349c:	e5970004 	ldr	r0, [r7, #4]
400234a0:	e3500000 	cmp	r0, #0
400234a4:	0a000000 	beq	400234ac <net::arp_send(t_udp*, unsigned long, unsigned long)+0xf8>
400234a8:	eb0027c8 	bl	4002d3d0 <operator delete[](void*)>
400234ac:	e1a00006 	mov	r0, r6
400234b0:	eb0027c9 	bl	4002d3dc <operator new[](unsigned int)>
400234b4:	e1842000 	orr	r2, r4, r0
400234b8:	e1a03000 	mov	r3, r0
400234bc:	e5870004 	str	r0, [r7, #4]
400234c0:	e3120003 	tst	r2, #3
400234c4:	0a00002a 	beq	40023574 <net::arp_send(t_udp*, unsigned long, unsigned long)+0x1c0>
400234c8:	e1a01006 	mov	r1, r6
400234cc:	e3510000 	cmp	r1, #0
400234d0:	10831001 	addne	r1, r3, r1
400234d4:	0a000003 	beq	400234e8 <net::arp_send(t_udp*, unsigned long, unsigned long)+0x134>
400234d8:	e4d42001 	ldrb	r2, [r4], #1
400234dc:	e4c32001 	strb	r2, [r3], #1
400234e0:	e1530001 	cmp	r3, r1
400234e4:	1afffffb 	bne	400234d8 <net::arp_send(t_udp*, unsigned long, unsigned long)+0x124>
400234e8:	e5876008 	str	r6, [r7, #8]
400234ec:	e28dd00c 	add	sp, sp, #12
400234f0:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
400234f4:	e1a02004 	mov	r2, r4
400234f8:	e283300c 	add	r3, r3, #12
400234fc:	e2840006 	add	r0, r4, #6
40023500:	e4d31001 	ldrb	r1, [r3], #1
40023504:	e4c21001 	strb	r1, [r2], #1
40023508:	e1520000 	cmp	r2, r0
4002350c:	1afffffb 	bne	40023500 <net::arp_send(t_udp*, unsigned long, unsigned long)+0x14c>
40023510:	e1a01006 	mov	r1, r6
40023514:	e1a00004 	mov	r0, r4
40023518:	e28dd00c 	add	sp, sp, #12
4002351c:	e8bd43f0 	pop	{r4, r5, r6, r7, r8, r9, lr}
40023520:	eafffdbe 	b	40022c20 <emac_eth_send(void*, unsigned long)>
40023524:	e1c031b2 	strh	r3, [r0, #18]
40023528:	e28d2004 	add	r2, sp, #4
4002352c:	e59f1128 	ldr	r1, [pc, #296]	; 4002365c <net::arp_send(t_udp*, unsigned long, unsigned long)+0x2a8>
40023530:	e28d0008 	add	r0, sp, #8
40023534:	e58d5004 	str	r5, [sp, #4]
40023538:	e3a03001 	mov	r3, #1
4002353c:	e5873014 	str	r3, [r7, #20]
40023540:	e4d23001 	ldrb	r3, [r2], #1
40023544:	e1520000 	cmp	r2, r0
40023548:	e6ef3073 	uxtb	r3, r3
4002354c:	e4c13001 	strb	r3, [r1], #1
40023550:	1afffffa 	bne	40023540 <net::arp_send(t_udp*, unsigned long, unsigned long)+0x18c>
40023554:	e3020db8 	movw	r0, #11704	; 0x2db8
40023558:	e3a0103c 	mov	r1, #60	; 0x3c
4002355c:	e3440006 	movt	r0, #16390	; 0x4006
40023560:	ebfffdae 	bl	40022c20 <emac_eth_send(void*, unsigned long)>
40023564:	e5973014 	ldr	r3, [r7, #20]
40023568:	e3530001 	cmp	r3, #1
4002356c:	1affffbf 	bne	40023470 <net::arp_send(t_udp*, unsigned long, unsigned long)+0xbc>
40023570:	eaffffc9 	b	4002349c <net::arp_send(t_udp*, unsigned long, unsigned long)+0xe8>
40023574:	e3560003 	cmp	r6, #3
40023578:	9affffd2 	bls	400234c8 <net::arp_send(t_udp*, unsigned long, unsigned long)+0x114>
4002357c:	e246e004 	sub	lr, r6, #4
40023580:	e35e001f 	cmp	lr, #31
40023584:	9a000030 	bls	4002364c <net::arp_send(t_udp*, unsigned long, unsigned long)+0x298>
40023588:	e0809006 	add	r9, r0, r6
4002358c:	e286801c 	add	r8, r6, #28
40023590:	e0808008 	add	r8, r0, r8
40023594:	e2845020 	add	r5, r4, #32
40023598:	e2800020 	add	r0, r0, #32
4002359c:	e5152020 	ldr	r2, [r5, #-32]	; 0xffffffe0
400235a0:	e1a01000 	mov	r1, r0
400235a4:	f5d5f054 	pld	[r5, #84]	; 0x54
400235a8:	e5002020 	str	r2, [r0, #-32]	; 0xffffffe0
400235ac:	e515201c 	ldr	r2, [r5, #-28]	; 0xffffffe4
400235b0:	e049c000 	sub	ip, r9, r0
400235b4:	e2800020 	add	r0, r0, #32
400235b8:	e500203c 	str	r2, [r0, #-60]	; 0xffffffc4
400235bc:	e5152018 	ldr	r2, [r5, #-24]	; 0xffffffe8
400235c0:	e5002038 	str	r2, [r0, #-56]	; 0xffffffc8
400235c4:	e5152014 	ldr	r2, [r5, #-20]	; 0xffffffec
400235c8:	e5002034 	str	r2, [r0, #-52]	; 0xffffffcc
400235cc:	e5152010 	ldr	r2, [r5, #-16]
400235d0:	e5002030 	str	r2, [r0, #-48]	; 0xffffffd0
400235d4:	e515200c 	ldr	r2, [r5, #-12]
400235d8:	e500202c 	str	r2, [r0, #-44]	; 0xffffffd4
400235dc:	e5152008 	ldr	r2, [r5, #-8]
400235e0:	e5002028 	str	r2, [r0, #-40]	; 0xffffffd8
400235e4:	e5152004 	ldr	r2, [r5, #-4]
400235e8:	e5002024 	str	r2, [r0, #-36]	; 0xffffffdc
400235ec:	e0482000 	sub	r2, r8, r0
400235f0:	e352001f 	cmp	r2, #31
400235f4:	e1a02005 	mov	r2, r5
400235f8:	e2855020 	add	r5, r5, #32
400235fc:	8affffe6 	bhi	4002359c <net::arp_send(t_udp*, unsigned long, unsigned long)+0x1e8>
40023600:	e24cc004 	sub	ip, ip, #4
40023604:	e3ccc003 	bic	ip, ip, #3
40023608:	e28cc004 	add	ip, ip, #4
4002360c:	e082c00c 	add	ip, r2, ip
40023610:	e4920004 	ldr	r0, [r2], #4
40023614:	e152000c 	cmp	r2, ip
40023618:	e4810004 	str	r0, [r1], #4
4002361c:	1afffffb 	bne	40023610 <net::arp_send(t_udp*, unsigned long, unsigned long)+0x25c>
40023620:	e3ce2003 	bic	r2, lr, #3
40023624:	e2061003 	and	r1, r6, #3
40023628:	e2822004 	add	r2, r2, #4
4002362c:	e0844002 	add	r4, r4, r2
40023630:	e0833002 	add	r3, r3, r2
40023634:	eaffffa4 	b	400234cc <net::arp_send(t_udp*, unsigned long, unsigned long)+0x118>
40023638:	e6ff2075 	uxth	r2, r5
4002363c:	e30a39fe 	movw	r3, #43518	; 0xa9fe
40023640:	e1520003 	cmp	r2, r3
40023644:	15975008 	ldrne	r5, [r7, #8]
40023648:	eaffff73 	b	4002341c <net::arp_send(t_udp*, unsigned long, unsigned long)+0x68>
4002364c:	e1a01000 	mov	r1, r0
40023650:	e1a02004 	mov	r2, r4
40023654:	e1a0c006 	mov	ip, r6
40023658:	eaffffe8 	b	40023600 <net::arp_send(t_udp*, unsigned long, unsigned long)+0x24c>
4002365c:	40062dde 	ldrdmi	r2, [r6], -lr

40023660 <net::arp_acd_probe(net::ip_addr)>:
40023660:	e92d4010 	push	{r4, lr}
40023664:	e3024db8 	movw	r4, #11704	; 0x2db8
40023668:	e3444006 	movt	r4, #16390	; 0x4006
4002366c:	e24dd008 	sub	sp, sp, #8
40023670:	e28d2004 	add	r2, sp, #4
40023674:	e28dc008 	add	ip, sp, #8
40023678:	e58d0004 	str	r0, [sp, #4]
4002367c:	e2841026 	add	r1, r4, #38	; 0x26
40023680:	e3a03000 	mov	r3, #0
40023684:	e584301c 	str	r3, [r4, #28]
40023688:	e4d23001 	ldrb	r3, [r2], #1
4002368c:	e15c0002 	cmp	ip, r2
40023690:	e6ef3073 	uxtb	r3, r3
40023694:	e4c13001 	strb	r3, [r1], #1
40023698:	1afffffa 	bne	40023688 <net::arp_acd_probe(net::ip_addr)+0x28>
4002369c:	e3020db8 	movw	r0, #11704	; 0x2db8
400236a0:	e3a0103c 	mov	r1, #60	; 0x3c
400236a4:	e3440006 	movt	r0, #16390	; 0x4006
400236a8:	ebfffd5c 	bl	40022c20 <emac_eth_send(void*, unsigned long)>
400236ac:	e30a373c 	movw	r3, #42812	; 0xa73c
400236b0:	e3443005 	movt	r3, #16389	; 0x4005
400236b4:	e5933000 	ldr	r3, [r3]
400236b8:	e584301c 	str	r3, [r4, #28]
400236bc:	e28dd008 	add	sp, sp, #8
400236c0:	e8bd8010 	pop	{r4, pc}

400236c4 <net::arp_acd_send_announcement(net::ip_addr)>:
400236c4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
400236c8:	e24dd00c 	sub	sp, sp, #12
400236cc:	e59f103c 	ldr	r1, [pc, #60]	; 40023710 <net::arp_acd_send_announcement(net::ip_addr)+0x4c>
400236d0:	e28d2004 	add	r2, sp, #4
400236d4:	e58d0004 	str	r0, [sp, #4]
400236d8:	e28de008 	add	lr, sp, #8
400236dc:	e1a0c000 	mov	ip, r0
400236e0:	e4d23001 	ldrb	r3, [r2], #1
400236e4:	e152000e 	cmp	r2, lr
400236e8:	e6ef3073 	uxtb	r3, r3
400236ec:	e4c13001 	strb	r3, [r1], #1
400236f0:	1afffffa 	bne	400236e0 <net::arp_acd_send_announcement(net::ip_addr)+0x1c>
400236f4:	e3020db8 	movw	r0, #11704	; 0x2db8
400236f8:	e3a0103c 	mov	r1, #60	; 0x3c
400236fc:	e3440006 	movt	r0, #16390	; 0x4006
40023700:	e580c01c 	str	ip, [r0, #28]
40023704:	e28dd00c 	add	sp, sp, #12
40023708:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
4002370c:	eafffd43 	b	40022c20 <emac_eth_send(void*, unsigned long)>
40023710:	40062dde 	ldrdmi	r2, [r6], -lr

40023714 <net::ip_set_ip()>:
40023714:	e92d4010 	push	{r4, lr}
40023718:	ebfffaba 	bl	40022208 <net::udp_set_ip()>
4002371c:	e8bd4010 	pop	{r4, lr}
40023720:	eafff6a6 	b	400211c0 <net::igmp_set_ip()>

40023724 <net::phy_get_link(unsigned long)>:
40023724:	e92d4007 	push	{r0, r1, r2, lr}
40023728:	e3a03000 	mov	r3, #0
4002372c:	e1cd30b6 	strh	r3, [sp, #6]
40023730:	e28d2006 	add	r2, sp, #6
40023734:	e3a01001 	mov	r1, #1
40023738:	ebfffd63 	bl	40022ccc <net::phy_read(unsigned long, unsigned long, unsigned short&)>
4002373c:	e1dd00b6 	ldrh	r0, [sp, #6]
40023740:	e7e00150 	ubfx	r0, r0, #2, #1
40023744:	e28dd00c 	add	sp, sp, #12
40023748:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

4002374c <net::phy_start(unsigned long, net::PhyStatus&)>:
4002374c:	e92d43f7 	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
40023750:	e1a06001 	mov	r6, r1
40023754:	e28d2006 	add	r2, sp, #6
40023758:	e3a01004 	mov	r1, #4
4002375c:	e1a05000 	mov	r5, r0
40023760:	ebfffd59 	bl	40022ccc <net::phy_read(unsigned long, unsigned long, unsigned short&)>
40023764:	e1dd30b6 	ldrh	r3, [sp, #6]
40023768:	e3002141 	movw	r2, #321	; 0x141
4002376c:	e2033efe 	and	r3, r3, #4064	; 0xfe0
40023770:	e1823003 	orr	r3, r2, r3
40023774:	e1530002 	cmp	r3, r2
40023778:	e1cd30b6 	strh	r3, [sp, #6]
4002377c:	1a000008 	bne	400237a4 <net::phy_start(unsigned long, net::PhyStatus&)+0x58>
40023780:	e28d2006 	add	r2, sp, #6
40023784:	e3a01000 	mov	r1, #0
40023788:	e1a00005 	mov	r0, r5
4002378c:	ebfffd4e 	bl	40022ccc <net::phy_read(unsigned long, unsigned long, unsigned short&)>
40023790:	e2504000 	subs	r4, r0, #0
40023794:	1a000015 	bne	400237f0 <net::phy_start(unsigned long, net::PhyStatus&)+0xa4>
40023798:	e1a00004 	mov	r0, r4
4002379c:	e28dd00c 	add	sp, sp, #12
400237a0:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
400237a4:	e3a01004 	mov	r1, #4
400237a8:	e1a00005 	mov	r0, r5
400237ac:	ebfffd6d 	bl	40022d68 <net::phy_write(unsigned long, unsigned long, unsigned short)>
400237b0:	e2504000 	subs	r4, r0, #0
400237b4:	0afffff7 	beq	40023798 <net::phy_start(unsigned long, net::PhyStatus&)+0x4c>
400237b8:	e28d2006 	add	r2, sp, #6
400237bc:	e3a01000 	mov	r1, #0
400237c0:	e1a00005 	mov	r0, r5
400237c4:	ebfffd40 	bl	40022ccc <net::phy_read(unsigned long, unsigned long, unsigned short&)>
400237c8:	e1dd20b6 	ldrh	r2, [sp, #6]
400237cc:	e3a01000 	mov	r1, #0
400237d0:	e1a00005 	mov	r0, r5
400237d4:	e3c22b01 	bic	r2, r2, #1024	; 0x400
400237d8:	e3822c12 	orr	r2, r2, #4608	; 0x1200
400237dc:	e1cd20b6 	strh	r2, [sp, #6]
400237e0:	ebfffd60 	bl	40022d68 <net::phy_write(unsigned long, unsigned long, unsigned short)>
400237e4:	e2504000 	subs	r4, r0, #0
400237e8:	1a000004 	bne	40023800 <net::phy_start(unsigned long, net::PhyStatus&)+0xb4>
400237ec:	eaffffe9 	b	40023798 <net::phy_start(unsigned long, net::PhyStatus&)+0x4c>
400237f0:	e1dd30b6 	ldrh	r3, [sp, #6]
400237f4:	e2033b05 	and	r3, r3, #5120	; 0x1400
400237f8:	e3530a01 	cmp	r3, #4096	; 0x1000
400237fc:	1affffed 	bne	400237b8 <net::phy_start(unsigned long, net::PhyStatus&)+0x6c>
40023800:	e28d2006 	add	r2, sp, #6
40023804:	e3a01001 	mov	r1, #1
40023808:	e1a00005 	mov	r0, r5
4002380c:	ebfffd2e 	bl	40022ccc <net::phy_read(unsigned long, unsigned long, unsigned short&)>
40023810:	e2504000 	subs	r4, r0, #0
40023814:	0a00003a 	beq	40023904 <net::phy_start(unsigned long, net::PhyStatus&)+0x1b8>
40023818:	e5962000 	ldr	r2, [r6]
4002381c:	e1dd30b6 	ldrh	r3, [sp, #6]
40023820:	e3520000 	cmp	r2, #0
40023824:	1a000001 	bne	40023830 <net::phy_start(unsigned long, net::PhyStatus&)+0xe4>
40023828:	e3130004 	tst	r3, #4
4002382c:	1a000014 	bne	40023884 <net::phy_start(unsigned long, net::PhyStatus&)+0x138>
40023830:	e3130020 	tst	r3, #32
40023834:	1a00002b 	bne	400238e8 <net::phy_start(unsigned long, net::PhyStatus&)+0x19c>
40023838:	e59f70d4 	ldr	r7, [pc, #212]	; 40023914 <net::phy_start(unsigned long, net::PhyStatus&)+0x1c8>
4002383c:	e3019388 	movw	r9, #5000	; 0x1388
40023840:	e59f00d0 	ldr	r0, [pc, #208]	; 40023918 <net::phy_start(unsigned long, net::PhyStatus&)+0x1cc>
40023844:	eb002513 	bl	4002cc98 <puts>
40023848:	e5978084 	ldr	r8, [r7, #132]	; 0x84
4002384c:	e1dd30b6 	ldrh	r3, [sp, #6]
40023850:	e3130020 	tst	r3, #32
40023854:	1a000008 	bne	4002387c <net::phy_start(unsigned long, net::PhyStatus&)+0x130>
40023858:	e5973084 	ldr	r3, [r7, #132]	; 0x84
4002385c:	e0433008 	sub	r3, r3, r8
40023860:	e1530009 	cmp	r3, r9
40023864:	8a000026 	bhi	40023904 <net::phy_start(unsigned long, net::PhyStatus&)+0x1b8>
40023868:	e28d2006 	add	r2, sp, #6
4002386c:	e3a01001 	mov	r1, #1
40023870:	e1a00005 	mov	r0, r5
40023874:	ebfffd14 	bl	40022ccc <net::phy_read(unsigned long, unsigned long, unsigned short&)>
40023878:	eafffff3 	b	4002384c <net::phy_start(unsigned long, net::PhyStatus&)+0x100>
4002387c:	e3a03001 	mov	r3, #1
40023880:	e5863000 	str	r3, [r6]
40023884:	e3a03000 	mov	r3, #0
40023888:	e28d2004 	add	r2, sp, #4
4002388c:	e5863004 	str	r3, [r6, #4]
40023890:	e3a01004 	mov	r1, #4
40023894:	e5863008 	str	r3, [r6, #8]
40023898:	e1a00005 	mov	r0, r5
4002389c:	ebfffd0a 	bl	40022ccc <net::phy_read(unsigned long, unsigned long, unsigned short&)>
400238a0:	e28d2006 	add	r2, sp, #6
400238a4:	e3a01005 	mov	r1, #5
400238a8:	e1a00005 	mov	r0, r5
400238ac:	ebfffd06 	bl	40022ccc <net::phy_read(unsigned long, unsigned long, unsigned short&)>
400238b0:	e1dd30b6 	ldrh	r3, [sp, #6]
400238b4:	e1dd20b4 	ldrh	r2, [sp, #4]
400238b8:	e0033002 	and	r3, r3, r2
400238bc:	e3130d06 	tst	r3, #384	; 0x180
400238c0:	0a000011 	beq	4002390c <net::phy_start(unsigned long, net::PhyStatus&)+0x1c0>
400238c4:	e3130c01 	tst	r3, #256	; 0x100
400238c8:	e3a02001 	mov	r2, #1
400238cc:	e5862008 	str	r2, [r6, #8]
400238d0:	13a03001 	movne	r3, #1
400238d4:	e1a00005 	mov	r0, r5
400238d8:	15863004 	strne	r3, [r6, #4]
400238dc:	ebffff90 	bl	40023724 <net::phy_get_link(unsigned long)>
400238e0:	e5860000 	str	r0, [r6]
400238e4:	eaffffab 	b	40023798 <net::phy_start(unsigned long, net::PhyStatus&)+0x4c>
400238e8:	e28d2006 	add	r2, sp, #6
400238ec:	e3a01001 	mov	r1, #1
400238f0:	e1a00005 	mov	r0, r5
400238f4:	ebfffcf4 	bl	40022ccc <net::phy_read(unsigned long, unsigned long, unsigned short&)>
400238f8:	e1dd30b6 	ldrh	r3, [sp, #6]
400238fc:	e7e03153 	ubfx	r3, r3, #2, #1
40023900:	eaffffde 	b	40023880 <net::phy_start(unsigned long, net::PhyStatus&)+0x134>
40023904:	e3a04000 	mov	r4, #0
40023908:	eaffffa2 	b	40023798 <net::phy_start(unsigned long, net::PhyStatus&)+0x4c>
4002390c:	e3130040 	tst	r3, #64	; 0x40
40023910:	eaffffee 	b	400238d0 <net::phy_start(unsigned long, net::PhyStatus&)+0x184>
40023914:	01c20c00 	biceq	r0, r2, r0, lsl #24
40023918:	4003294b 	andmi	r2, r3, fp, asr #18

4002391c <display::timeout::gpio_init()>:
4002391c:	e92d4010 	push	{r4, lr}
40023920:	e3a01000 	mov	r1, #0
40023924:	e3a00003 	mov	r0, #3
40023928:	eb001693 	bl	4002937c <h3_gpio_fsel>
4002392c:	e3a01001 	mov	r1, #1
40023930:	e3a00003 	mov	r0, #3
40023934:	eb0016c5 	bl	40029450 <h3_gpio_set_pud>
40023938:	e8bd4010 	pop	{r4, lr}
4002393c:	ea00053b 	b	40024e30 <display::timeout::irq_init()>

40023940 <Display::PrintInfo() [clone .isra.0]>:
40023940:	e2503000 	subs	r3, r0, #0
40023944:	1a000001 	bne	40023950 <Display::PrintInfo() [clone .isra.0]+0x10>
40023948:	e59f000c 	ldr	r0, [pc, #12]	; 4002395c <Display::PrintInfo() [clone .isra.0]+0x1c>
4002394c:	ea0024d1 	b	4002cc98 <puts>
40023950:	e5933000 	ldr	r3, [r3]
40023954:	e5933034 	ldr	r3, [r3, #52]	; 0x34
40023958:	e12fff13 	bx	r3
4002395c:	40032978 	andmi	r2, r3, r8, ror r9

40023960 <Display::Detect(unsigned long)>:
40023960:	e92d4070 	push	{r4, r5, r6, lr}
40023964:	e1a04000 	mov	r4, r0
40023968:	e1a05001 	mov	r5, r1
4002396c:	e3a0003c 	mov	r0, #60	; 0x3c
40023970:	e59f1160 	ldr	r1, [pc, #352]	; 40023ad8 <Display::Detect(unsigned long)+0x178>
40023974:	eb001f31 	bl	4002b640 <h3_i2c_is_connected(unsigned char, unsigned long)>
40023978:	e3500000 	cmp	r0, #0
4002397c:	0a000027 	beq	40023a20 <Display::Detect(unsigned long)+0xc0>
40023980:	e3550004 	cmp	r5, #4
40023984:	8a000020 	bhi	40023a0c <Display::Detect(unsigned long)+0xac>
40023988:	e3a0001c 	mov	r0, #28
4002398c:	eb002691 	bl	4002d3d8 <operator new(unsigned int)>
40023990:	e1a05000 	mov	r5, r0
40023994:	eb0003c1 	bl	400248a0 <Ssd1311::Ssd1311()>
40023998:	e5845014 	str	r5, [r4, #20]
4002399c:	e1a00005 	mov	r0, r5
400239a0:	eb0004bb 	bl	40024c94 <Ssd1311::Start()>
400239a4:	e3500000 	cmp	r0, #0
400239a8:	0a000010 	beq	400239f0 <Display::Detect(unsigned long)+0x90>
400239ac:	e59f2128 	ldr	r2, [pc, #296]	; 40023adc <Display::Detect(unsigned long)+0x17c>
400239b0:	e3a03003 	mov	r3, #3
400239b4:	e5843000 	str	r3, [r4]
400239b8:	e3a01001 	mov	r1, #1
400239bc:	e1a00004 	mov	r0, r4
400239c0:	ebff8f7a 	bl	400077b0 <Display::Printf(unsigned long, char const*, ...)>
400239c4:	e5940014 	ldr	r0, [r4, #20]
400239c8:	e5903000 	ldr	r3, [r0]
400239cc:	e5933008 	ldr	r3, [r3, #8]
400239d0:	e12fff33 	blx	r3
400239d4:	e3500000 	cmp	r0, #0
400239d8:	0a000026 	beq	40023a78 <Display::Detect(unsigned long)+0x118>
400239dc:	e59f20fc 	ldr	r2, [pc, #252]	; 40023ae0 <Display::Detect(unsigned long)+0x180>
400239e0:	e3a03002 	mov	r3, #2
400239e4:	e5843000 	str	r3, [r4]
400239e8:	e3a01001 	mov	r1, #1
400239ec:	ea00001f 	b	40023a70 <Display::Detect(unsigned long)+0x110>
400239f0:	e3a00030 	mov	r0, #48	; 0x30
400239f4:	eb002677 	bl	4002d3d8 <operator new(unsigned int)>
400239f8:	e1a05000 	mov	r5, r0
400239fc:	e3a01001 	mov	r1, #1
40023a00:	eb0001b8 	bl	400240e8 <Ssd1306::Ssd1306(TOledPanel)>
40023a04:	e5845014 	str	r5, [r4, #20]
40023a08:	eaffffed 	b	400239c4 <Display::Detect(unsigned long)+0x64>
40023a0c:	e3a00030 	mov	r0, #48	; 0x30
40023a10:	eb002670 	bl	4002d3d8 <operator new(unsigned int)>
40023a14:	e1a05000 	mov	r5, r0
40023a18:	e3a01000 	mov	r1, #0
40023a1c:	eafffff7 	b	40023a00 <Display::Detect(unsigned long)+0xa0>
40023a20:	e59f10b0 	ldr	r1, [pc, #176]	; 40023ad8 <Display::Detect(unsigned long)+0x178>
40023a24:	e3a00027 	mov	r0, #39	; 0x27
40023a28:	eb001f04 	bl	4002b640 <h3_i2c_is_connected(unsigned char, unsigned long)>
40023a2c:	e2505000 	subs	r5, r0, #0
40023a30:	0a000014 	beq	40023a88 <Display::Detect(unsigned long)+0x128>
40023a34:	e3a00018 	mov	r0, #24
40023a38:	eb002666 	bl	4002d3d8 <operator new(unsigned int)>
40023a3c:	e1a05000 	mov	r5, r0
40023a40:	e3a03004 	mov	r3, #4
40023a44:	e3a02014 	mov	r2, #20
40023a48:	e3a01027 	mov	r1, #39	; 0x27
40023a4c:	eb00005c 	bl	40023bc4 <Hd44780::Hd44780(unsigned char, unsigned char, unsigned char)>
40023a50:	e5845014 	str	r5, [r4, #20]
40023a54:	e1a00005 	mov	r0, r5
40023a58:	eb00008a 	bl	40023c88 <Hd44780::Start()>
40023a5c:	e3500000 	cmp	r0, #0
40023a60:	0a000004 	beq	40023a78 <Display::Detect(unsigned long)+0x118>
40023a64:	e59f2078 	ldr	r2, [pc, #120]	; 40023ae4 <Display::Detect(unsigned long)+0x184>
40023a68:	e3a01001 	mov	r1, #1
40023a6c:	e5841000 	str	r1, [r4]
40023a70:	e1a00004 	mov	r0, r4
40023a74:	ebff8f4d 	bl	400077b0 <Display::Printf(unsigned long, char const*, ...)>
40023a78:	e5943014 	ldr	r3, [r4, #20]
40023a7c:	e3530000 	cmp	r3, #0
40023a80:	0584300c 	streq	r3, [r4, #12]
40023a84:	e8bd8070 	pop	{r4, r5, r6, pc}
40023a88:	e59f1048 	ldr	r1, [pc, #72]	; 40023ad8 <Display::Detect(unsigned long)+0x178>
40023a8c:	e3a00026 	mov	r0, #38	; 0x26
40023a90:	eb001eea 	bl	4002b640 <h3_i2c_is_connected(unsigned char, unsigned long)>
40023a94:	e3500000 	cmp	r0, #0
40023a98:	0afffff6 	beq	40023a78 <Display::Detect(unsigned long)+0x118>
40023a9c:	e3a00018 	mov	r0, #24
40023aa0:	eb00264c 	bl	4002d3d8 <operator new(unsigned int)>
40023aa4:	e1a06000 	mov	r6, r0
40023aa8:	e3a03002 	mov	r3, #2
40023aac:	e3a02010 	mov	r2, #16
40023ab0:	e3a01026 	mov	r1, #38	; 0x26
40023ab4:	eb000042 	bl	40023bc4 <Hd44780::Hd44780(unsigned char, unsigned char, unsigned char)>
40023ab8:	e5846014 	str	r6, [r4, #20]
40023abc:	e1a00006 	mov	r0, r6
40023ac0:	eb000070 	bl	40023c88 <Hd44780::Start()>
40023ac4:	e3500000 	cmp	r0, #0
40023ac8:	0affffea 	beq	40023a78 <Display::Detect(unsigned long)+0x118>
40023acc:	e59f2014 	ldr	r2, [pc, #20]	; 40023ae8 <Display::Detect(unsigned long)+0x188>
40023ad0:	e5845000 	str	r5, [r4]
40023ad4:	eaffffc3 	b	400239e8 <Display::Detect(unsigned long)+0x88>
40023ad8:	000186a0 	andeq	r8, r1, r0, lsr #13
40023adc:	40032989 	andmi	r2, r3, r9, lsl #19
40023ae0:	40032991 	mulmi	r3, r1, r9
40023ae4:	40032999 	mulmi	r3, r9, r9
40023ae8:	400329a9 	andmi	r2, r3, r9, lsr #19

40023aec <Display::Display(unsigned long)>:
40023aec:	e59f205c 	ldr	r2, [pc, #92]	; 40023b50 <Display::Display(unsigned long)+0x64>
40023af0:	e3a03004 	mov	r3, #4
40023af4:	e92d4010 	push	{r4, lr}
40023af8:	e1a04000 	mov	r4, r0
40023afc:	e5803000 	str	r3, [r0]
40023b00:	e3a03021 	mov	r3, #33	; 0x21
40023b04:	e5c03004 	strb	r3, [r0, #4]
40023b08:	e59f3044 	ldr	r3, [pc, #68]	; 40023b54 <Display::Display(unsigned long)+0x68>
40023b0c:	e1c020f8 	strd	r2, [r0, #8]
40023b10:	e3a0307f 	mov	r3, #127	; 0x7f
40023b14:	e1c031b0 	strh	r3, [r0, #16]
40023b18:	e3a03000 	mov	r3, #0
40023b1c:	e5c03012 	strb	r3, [r0, #18]
40023b20:	e5803014 	str	r3, [r0, #20]
40023b24:	e59f302c 	ldr	r3, [pc, #44]	; 40023b58 <Display::Display(unsigned long)+0x6c>
40023b28:	e5830000 	str	r0, [r3]
40023b2c:	ebffff8b 	bl	40023960 <Display::Detect(unsigned long)>
40023b30:	e5943014 	ldr	r3, [r4, #20]
40023b34:	e3530000 	cmp	r3, #0
40023b38:	0a000000 	beq	40023b40 <Display::Display(unsigned long)+0x54>
40023b3c:	ebffff76 	bl	4002391c <display::timeout::gpio_init()>
40023b40:	e5940014 	ldr	r0, [r4, #20]
40023b44:	ebffff7d 	bl	40023940 <Display::PrintInfo() [clone .isra.0]>
40023b48:	e1a00004 	mov	r0, r4
40023b4c:	e8bd8010 	pop	{r4, pc}
40023b50:	00061a80 	andeq	r1, r6, r0, lsl #21
40023b54:	000493e0 	andeq	r9, r4, r0, ror #7
40023b58:	4003407c 	andmi	r4, r3, ip, ror r0

40023b5c <DisplaySet::SetFlipVertically(bool)>:
40023b5c:	e12fff1e 	bx	lr

40023b60 <Hd44780::~Hd44780()>:
40023b60:	e12fff1e 	bx	lr

40023b64 <Hd44780::PrintInfo()>:
40023b64:	e5902004 	ldr	r2, [r0, #4]
40023b68:	e5901008 	ldr	r1, [r0, #8]
40023b6c:	e59f0000 	ldr	r0, [pc]	; 40023b74 <Hd44780::PrintInfo()+0x10>
40023b70:	ea002406 	b	4002cb90 <printf>
40023b74:	400329b9 			; <UNDEFINED> instruction: 0x400329b9

40023b78 <Hd44780::~Hd44780()>:
40023b78:	e92d4010 	push	{r4, lr}
40023b7c:	e3a01018 	mov	r1, #24
40023b80:	e1a04000 	mov	r4, r0
40023b84:	eb002612 	bl	4002d3d4 <operator delete(void*, unsigned int)>
40023b88:	e1a00004 	mov	r0, r4
40023b8c:	e8bd8010 	pop	{r4, pc}

40023b90 <HAL_I2C::Write(unsigned char)>:
40023b90:	e92d4037 	push	{r0, r1, r2, r4, r5, lr}
40023b94:	e1a04000 	mov	r4, r0
40023b98:	e5d00000 	ldrb	r0, [r0]
40023b9c:	e1a05001 	mov	r5, r1
40023ba0:	eb001ea2 	bl	4002b630 <h3_i2c_set_slave_address(unsigned char)>
40023ba4:	e5940004 	ldr	r0, [r4, #4]
40023ba8:	eb001e99 	bl	4002b614 <h3_i2c_set_baudrate(unsigned long)>
40023bac:	e5cd5004 	strb	r5, [sp, #4]
40023bb0:	e3a01001 	mov	r1, #1
40023bb4:	e28d0004 	add	r0, sp, #4
40023bb8:	eb001e12 	bl	4002b408 <h3_i2c_write(char const*, unsigned long)>
40023bbc:	e28dd00c 	add	sp, sp, #12
40023bc0:	e8bd8030 	pop	{r4, r5, pc}

40023bc4 <Hd44780::Hd44780(unsigned char, unsigned char, unsigned char)>:
40023bc4:	e3510000 	cmp	r1, #0
40023bc8:	03a01027 	moveq	r1, #39	; 0x27
40023bcc:	e3520010 	cmp	r2, #16
40023bd0:	e5c01010 	strb	r1, [r0, #16]
40023bd4:	33a02010 	movcc	r2, #16
40023bd8:	e59f1038 	ldr	r1, [pc, #56]	; 40023c18 <Hd44780::Hd44780(unsigned char, unsigned char, unsigned char)+0x54>
40023bdc:	e3520014 	cmp	r2, #20
40023be0:	23a02014 	movcs	r2, #20
40023be4:	e3530002 	cmp	r3, #2
40023be8:	e5801014 	str	r1, [r0, #20]
40023bec:	33a03002 	movcc	r3, #2
40023bf0:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40023bf4:	e3a0e000 	mov	lr, #0
40023bf8:	e5c0e00c 	strb	lr, [r0, #12]
40023bfc:	e3530004 	cmp	r3, #4
40023c00:	e59fe014 	ldr	lr, [pc, #20]	; 40023c1c <Hd44780::Hd44780(unsigned char, unsigned char, unsigned char)+0x58>
40023c04:	23a03004 	movcs	r3, #4
40023c08:	e5802004 	str	r2, [r0, #4]
40023c0c:	e580e000 	str	lr, [r0]
40023c10:	e5803008 	str	r3, [r0, #8]
40023c14:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40023c18:	00061a80 	andeq	r1, r6, r0, lsl #21
40023c1c:	400329e0 	andmi	r2, r3, r0, ror #19

40023c20 <Hd44780::Write4bits(unsigned char)>:
40023c20:	e92d4070 	push	{r4, r5, r6, lr}
40023c24:	e2805010 	add	r5, r0, #16
40023c28:	e1a04001 	mov	r4, r1
40023c2c:	e1a00005 	mov	r0, r5
40023c30:	ebffffd6 	bl	40023b90 <HAL_I2C::Write(unsigned char)>
40023c34:	e384100c 	orr	r1, r4, #12
40023c38:	e1a00005 	mov	r0, r5
40023c3c:	ebffffd3 	bl	40023b90 <HAL_I2C::Write(unsigned char)>
40023c40:	e3c4100c 	bic	r1, r4, #12
40023c44:	e1a00005 	mov	r0, r5
40023c48:	e3811008 	orr	r1, r1, #8
40023c4c:	ebffffcf 	bl	40023b90 <HAL_I2C::Write(unsigned char)>
40023c50:	e8bd8070 	pop	{r4, r5, r6, pc}

40023c54 <Hd44780::WriteCmd(unsigned char)>:
40023c54:	e92d4070 	push	{r4, r5, r6, lr}
40023c58:	e1a04001 	mov	r4, r1
40023c5c:	e20110f0 	and	r1, r1, #240	; 0xf0
40023c60:	e1a05000 	mov	r5, r0
40023c64:	ebffffed 	bl	40023c20 <Hd44780::Write4bits(unsigned char)>
40023c68:	e1a01204 	lsl	r1, r4, #4
40023c6c:	e1a00005 	mov	r0, r5
40023c70:	e20110f0 	and	r1, r1, #240	; 0xf0
40023c74:	ebffffe9 	bl	40023c20 <Hd44780::Write4bits(unsigned char)>
40023c78:	e8bd4070 	pop	{r4, r5, r6, lr}
40023c7c:	e3a01000 	mov	r1, #0
40023c80:	e3a00025 	mov	r0, #37	; 0x25
40023c84:	ea001fdc 	b	4002bbfc <udelay(unsigned long, unsigned long)>

40023c88 <Hd44780::Start()>:
40023c88:	e92d4070 	push	{r4, r5, r6, lr}
40023c8c:	e1a04000 	mov	r4, r0
40023c90:	e5901014 	ldr	r1, [r0, #20]
40023c94:	e5d00010 	ldrb	r0, [r0, #16]
40023c98:	eb001e68 	bl	4002b640 <h3_i2c_is_connected(unsigned char, unsigned long)>
40023c9c:	e2505000 	subs	r5, r0, #0
40023ca0:	0a000014 	beq	40023cf8 <Hd44780::Start()+0x70>
40023ca4:	e3a01033 	mov	r1, #51	; 0x33
40023ca8:	e1a00004 	mov	r0, r4
40023cac:	ebffffe8 	bl	40023c54 <Hd44780::WriteCmd(unsigned char)>
40023cb0:	e3a01032 	mov	r1, #50	; 0x32
40023cb4:	e1a00004 	mov	r0, r4
40023cb8:	ebffffe5 	bl	40023c54 <Hd44780::WriteCmd(unsigned char)>
40023cbc:	e3a01028 	mov	r1, #40	; 0x28
40023cc0:	e1a00004 	mov	r0, r4
40023cc4:	ebffffe2 	bl	40023c54 <Hd44780::WriteCmd(unsigned char)>
40023cc8:	e3a0100c 	mov	r1, #12
40023ccc:	e1a00004 	mov	r0, r4
40023cd0:	ebffffdf 	bl	40023c54 <Hd44780::WriteCmd(unsigned char)>
40023cd4:	e3a01001 	mov	r1, #1
40023cd8:	e1a00004 	mov	r0, r4
40023cdc:	ebffffdc 	bl	40023c54 <Hd44780::WriteCmd(unsigned char)>
40023ce0:	e3a01000 	mov	r1, #0
40023ce4:	e30005cb 	movw	r0, #1483	; 0x5cb
40023ce8:	eb001fc3 	bl	4002bbfc <udelay(unsigned long, unsigned long)>
40023cec:	e3a01006 	mov	r1, #6
40023cf0:	e1a00004 	mov	r0, r4
40023cf4:	ebffffd6 	bl	40023c54 <Hd44780::WriteCmd(unsigned char)>
40023cf8:	e1a00005 	mov	r0, r5
40023cfc:	e8bd8070 	pop	{r4, r5, r6, pc}

40023d00 <Hd44780::Cls()>:
40023d00:	e3a01001 	mov	r1, #1
40023d04:	e92d4010 	push	{r4, lr}
40023d08:	ebffffd1 	bl	40023c54 <Hd44780::WriteCmd(unsigned char)>
40023d0c:	e8bd4010 	pop	{r4, lr}
40023d10:	e3a01000 	mov	r1, #0
40023d14:	e30005cb 	movw	r0, #1483	; 0x5cb
40023d18:	ea001fb7 	b	4002bbfc <udelay(unsigned long, unsigned long)>

40023d1c <Hd44780::SetCursorPos(unsigned long, unsigned long)>:
40023d1c:	e59f302c 	ldr	r3, [pc, #44]	; 40023d50 <Hd44780::SetCursorPos(unsigned long, unsigned long)+0x34>
40023d20:	e24dd008 	sub	sp, sp, #8
40023d24:	e2022003 	and	r2, r2, #3
40023d28:	e58d3004 	str	r3, [sp, #4]
40023d2c:	e28d3008 	add	r3, sp, #8
40023d30:	e0832002 	add	r2, r3, r2
40023d34:	e5523004 	ldrb	r3, [r2, #-4]
40023d38:	e0831001 	add	r1, r3, r1
40023d3c:	e1e01c81 	mvn	r1, r1, lsl #25
40023d40:	e1e01ca1 	mvn	r1, r1, lsr #25
40023d44:	e6ef1071 	uxtb	r1, r1
40023d48:	e28dd008 	add	sp, sp, #8
40023d4c:	eaffffc0 	b	40023c54 <Hd44780::WriteCmd(unsigned char)>
40023d50:	54144000 	ldrpl	r4, [r4], #-0

40023d54 <Hd44780::SetCursor(unsigned long)>:
40023d54:	e1a03001 	mov	r3, r1
40023d58:	e3110001 	tst	r1, #1
40023d5c:	13a0100e 	movne	r1, #14
40023d60:	03a0100c 	moveq	r1, #12
40023d64:	e3130002 	tst	r3, #2
40023d68:	13811001 	orrne	r1, r1, #1
40023d6c:	eaffffb8 	b	40023c54 <Hd44780::WriteCmd(unsigned char)>

40023d70 <Hd44780::WriteReg(unsigned char)>:
40023d70:	e92d4070 	push	{r4, r5, r6, lr}
40023d74:	e1a04001 	mov	r4, r1
40023d78:	e3c1100f 	bic	r1, r1, #15
40023d7c:	e1a05000 	mov	r5, r0
40023d80:	e3811001 	orr	r1, r1, #1
40023d84:	ebffffa5 	bl	40023c20 <Hd44780::Write4bits(unsigned char)>
40023d88:	e1a01204 	lsl	r1, r4, #4
40023d8c:	e1a00005 	mov	r0, r5
40023d90:	e3811001 	orr	r1, r1, #1
40023d94:	e20110f1 	and	r1, r1, #241	; 0xf1
40023d98:	ebffffa0 	bl	40023c20 <Hd44780::Write4bits(unsigned char)>
40023d9c:	e8bd4070 	pop	{r4, r5, r6, lr}
40023da0:	e3a01000 	mov	r1, #0
40023da4:	e3a0002b 	mov	r0, #43	; 0x2b
40023da8:	ea001f93 	b	4002bbfc <udelay(unsigned long, unsigned long)>

40023dac <Hd44780::PutChar(int)>:
40023dac:	e6ef1071 	uxtb	r1, r1
40023db0:	eaffffee 	b	40023d70 <Hd44780::WriteReg(unsigned char)>

40023db4 <Hd44780::PutString(char const*)>:
40023db4:	e92d4070 	push	{r4, r5, r6, lr}
40023db8:	e1a05000 	mov	r5, r0
40023dbc:	e2414001 	sub	r4, r1, #1
40023dc0:	e5f41001 	ldrb	r1, [r4, #1]!
40023dc4:	e3510000 	cmp	r1, #0
40023dc8:	08bd8070 	popeq	{r4, r5, r6, pc}
40023dcc:	e1a00005 	mov	r0, r5
40023dd0:	ebffffe6 	bl	40023d70 <Hd44780::WriteReg(unsigned char)>
40023dd4:	eafffff9 	b	40023dc0 <Hd44780::PutString(char const*)+0xc>

40023dd8 <Hd44780::Text(char const*, unsigned long)>:
40023dd8:	e5903004 	ldr	r3, [r0, #4]
40023ddc:	e92d4070 	push	{r4, r5, r6, lr}
40023de0:	e1a05000 	mov	r5, r0
40023de4:	e1520003 	cmp	r2, r3
40023de8:	90816002 	addls	r6, r1, r2
40023dec:	80816003 	addhi	r6, r1, r3
40023df0:	e1a04001 	mov	r4, r1
40023df4:	e1540006 	cmp	r4, r6
40023df8:	08bd8070 	popeq	{r4, r5, r6, pc}
40023dfc:	e4d41001 	ldrb	r1, [r4], #1
40023e00:	e1a00005 	mov	r0, r5
40023e04:	ebffffd9 	bl	40023d70 <Hd44780::WriteReg(unsigned char)>
40023e08:	eafffff9 	b	40023df4 <Hd44780::Text(char const*, unsigned long)+0x1c>

40023e0c <Hd44780::TextLine(unsigned long, char const*, unsigned long)>:
40023e0c:	e92d4070 	push	{r4, r5, r6, lr}
40023e10:	e1a06003 	mov	r6, r3
40023e14:	e5903008 	ldr	r3, [r0, #8]
40023e18:	e1530001 	cmp	r3, r1
40023e1c:	38bd8070 	popcc	{r4, r5, r6, pc}
40023e20:	e2411001 	sub	r1, r1, #1
40023e24:	e1a04000 	mov	r4, r0
40023e28:	e1a05002 	mov	r5, r2
40023e2c:	e6ef2071 	uxtb	r2, r1
40023e30:	e3a01000 	mov	r1, #0
40023e34:	ebffffb8 	bl	40023d1c <Hd44780::SetCursorPos(unsigned long, unsigned long)>
40023e38:	e1a02006 	mov	r2, r6
40023e3c:	e1a01005 	mov	r1, r5
40023e40:	e1a00004 	mov	r0, r4
40023e44:	e8bd4070 	pop	{r4, r5, r6, lr}
40023e48:	eaffffe2 	b	40023dd8 <Hd44780::Text(char const*, unsigned long)>

40023e4c <Hd44780::ClearLine(unsigned long)>:
40023e4c:	e5903008 	ldr	r3, [r0, #8]
40023e50:	e1530001 	cmp	r3, r1
40023e54:	312fff1e 	bxcc	lr
40023e58:	e2411001 	sub	r1, r1, #1
40023e5c:	e92d4070 	push	{r4, r5, r6, lr}
40023e60:	e6ef4071 	uxtb	r4, r1
40023e64:	e1a02004 	mov	r2, r4
40023e68:	e3a01000 	mov	r1, #0
40023e6c:	e3a06000 	mov	r6, #0
40023e70:	e1a05000 	mov	r5, r0
40023e74:	ebffffa8 	bl	40023d1c <Hd44780::SetCursorPos(unsigned long, unsigned long)>
40023e78:	e5953004 	ldr	r3, [r5, #4]
40023e7c:	e1530006 	cmp	r3, r6
40023e80:	9a000004 	bls	40023e98 <Hd44780::ClearLine(unsigned long)+0x4c>
40023e84:	e3a01020 	mov	r1, #32
40023e88:	e1a00005 	mov	r0, r5
40023e8c:	e2866001 	add	r6, r6, #1
40023e90:	ebffffb6 	bl	40023d70 <Hd44780::WriteReg(unsigned char)>
40023e94:	eafffff7 	b	40023e78 <Hd44780::ClearLine(unsigned long)+0x2c>
40023e98:	e1a02004 	mov	r2, r4
40023e9c:	e1a00005 	mov	r0, r5
40023ea0:	e3a01000 	mov	r1, #0
40023ea4:	e8bd4070 	pop	{r4, r5, r6, lr}
40023ea8:	eaffff9b 	b	40023d1c <Hd44780::SetCursorPos(unsigned long, unsigned long)>

40023eac <Ssd1306::PrintInfo()>:
40023eac:	e5d0c019 	ldrb	ip, [r0, #25]
40023eb0:	e5903004 	ldr	r3, [r0, #4]
40023eb4:	e5902008 	ldr	r2, [r0, #8]
40023eb8:	e35c0000 	cmp	ip, #0
40023ebc:	e59f000c 	ldr	r0, [pc, #12]	; 40023ed0 <Ssd1306::PrintInfo()+0x24>
40023ec0:	e59f100c 	ldr	r1, [pc, #12]	; 40023ed4 <Ssd1306::PrintInfo()+0x28>
40023ec4:	01a01000 	moveq	r1, r0
40023ec8:	e59f0008 	ldr	r0, [pc, #8]	; 40023ed8 <Ssd1306::PrintInfo()+0x2c>
40023ecc:	ea00232f 	b	4002cb90 <printf>
40023ed0:	40032991 	mulmi	r3, r1, r9
40023ed4:	40032a18 	andmi	r2, r3, r8, lsl sl
40023ed8:	40032a1f 	andmi	r2, r3, pc, lsl sl

40023edc <Ssd1306::~Ssd1306()>:
40023edc:	e59f3020 	ldr	r3, [pc, #32]	; 40023f04 <Ssd1306::~Ssd1306()+0x28>
40023ee0:	e92d4010 	push	{r4, lr}
40023ee4:	e1a04000 	mov	r4, r0
40023ee8:	e5803000 	str	r3, [r0]
40023eec:	e5900020 	ldr	r0, [r0, #32]
40023ef0:	e3500000 	cmp	r0, #0
40023ef4:	0a000000 	beq	40023efc <Ssd1306::~Ssd1306()+0x20>
40023ef8:	eb002534 	bl	4002d3d0 <operator delete[](void*)>
40023efc:	e1a00004 	mov	r0, r4
40023f00:	e8bd8010 	pop	{r4, pc}
40023f04:	40032d0c 	andmi	r2, r3, ip, lsl #26

40023f08 <Ssd1306::~Ssd1306()>:
40023f08:	e92d4010 	push	{r4, lr}
40023f0c:	e1a04000 	mov	r4, r0
40023f10:	ebfffff1 	bl	40023edc <Ssd1306::~Ssd1306()>
40023f14:	e1a00004 	mov	r0, r4
40023f18:	e3a01030 	mov	r1, #48	; 0x30
40023f1c:	eb00252c 	bl	4002d3d4 <operator delete(void*, unsigned int)>
40023f20:	e1a00004 	mov	r0, r4
40023f24:	e8bd8010 	pop	{r4, pc}

40023f28 <HAL_I2C::Setup()>:
40023f28:	e92d4010 	push	{r4, lr}
40023f2c:	e1a04000 	mov	r4, r0
40023f30:	e5d00000 	ldrb	r0, [r0]
40023f34:	eb001dbd 	bl	4002b630 <h3_i2c_set_slave_address(unsigned char)>
40023f38:	e5940004 	ldr	r0, [r4, #4]
40023f3c:	e8bd4010 	pop	{r4, lr}
40023f40:	ea001db3 	b	4002b614 <h3_i2c_set_baudrate(unsigned long)>

40023f44 <HAL_I2C::Write(char const*, unsigned long)>:
40023f44:	e92d4070 	push	{r4, r5, r6, lr}
40023f48:	e1a04001 	mov	r4, r1
40023f4c:	e1a05002 	mov	r5, r2
40023f50:	ebfffff4 	bl	40023f28 <HAL_I2C::Setup()>
40023f54:	e1a01005 	mov	r1, r5
40023f58:	e1a00004 	mov	r0, r4
40023f5c:	e8bd4070 	pop	{r4, r5, r6, lr}
40023f60:	ea001d28 	b	4002b408 <h3_i2c_write(char const*, unsigned long)>

40023f64 <Ssd1306::PutChar(int)>:
40023f64:	e5902024 	ldr	r2, [r0, #36]	; 0x24
40023f68:	e2413020 	sub	r3, r1, #32
40023f6c:	e590c020 	ldr	ip, [r0, #32]
40023f70:	e353005f 	cmp	r3, #95	; 0x5f
40023f74:	e92d4010 	push	{r4, lr}
40023f78:	83a01020 	movhi	r1, #32
40023f7c:	e282e001 	add	lr, r2, #1
40023f80:	83a03000 	movhi	r3, #0
40023f84:	e580e024 	str	lr, [r0, #36]	; 0x24
40023f88:	e2800010 	add	r0, r0, #16
40023f8c:	e7cc1002 	strb	r1, [ip, r2]
40023f90:	e3a02007 	mov	r2, #7
40023f94:	e59f100c 	ldr	r1, [pc, #12]	; 40023fa8 <Ssd1306::PutChar(int)+0x44>
40023f98:	e0633183 	rsb	r3, r3, r3, lsl #3
40023f9c:	e0811003 	add	r1, r1, r3
40023fa0:	ebffffe7 	bl	40023f44 <HAL_I2C::Write(char const*, unsigned long)>
40023fa4:	e8bd8010 	pop	{r4, pc}
40023fa8:	40032a34 	andmi	r2, r3, r4, lsr sl

40023fac <Ssd1306::PutString(char const*)>:
40023fac:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40023fb0:	e1a04000 	mov	r4, r0
40023fb4:	e1a06001 	mov	r6, r1
40023fb8:	e1a07001 	mov	r7, r1
40023fbc:	e1a05007 	mov	r5, r7
40023fc0:	e4d71001 	ldrb	r1, [r7], #1
40023fc4:	e3510000 	cmp	r1, #0
40023fc8:	0a000002 	beq	40023fd8 <Ssd1306::PutString(char const*)+0x2c>
40023fcc:	e1a00004 	mov	r0, r4
40023fd0:	ebffffe3 	bl	40023f64 <Ssd1306::PutChar(int)>
40023fd4:	eafffff8 	b	40023fbc <Ssd1306::PutString(char const*)+0x10>
40023fd8:	e5d4300c 	ldrb	r3, [r4, #12]
40023fdc:	e3530000 	cmp	r3, #0
40023fe0:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
40023fe4:	e0455006 	sub	r5, r5, r6
40023fe8:	e5c4100c 	strb	r1, [r4, #12]
40023fec:	e5943004 	ldr	r3, [r4, #4]
40023ff0:	e1530005 	cmp	r3, r5
40023ff4:	98bd81f0 	popls	{r4, r5, r6, r7, r8, pc}
40023ff8:	e3a01020 	mov	r1, #32
40023ffc:	e1a00004 	mov	r0, r4
40024000:	e2855001 	add	r5, r5, #1
40024004:	ebffffd6 	bl	40023f64 <Ssd1306::PutChar(int)>
40024008:	eafffff7 	b	40023fec <Ssd1306::PutString(char const*)+0x40>

4002400c <Ssd1306::Text(char const*, unsigned long)>:
4002400c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40024010:	e1a04000 	mov	r4, r0
40024014:	e5905004 	ldr	r5, [r0, #4]
40024018:	e1a06001 	mov	r6, r1
4002401c:	e1520005 	cmp	r2, r5
40024020:	31a05002 	movcc	r5, r2
40024024:	e0817005 	add	r7, r1, r5
40024028:	e1560007 	cmp	r6, r7
4002402c:	0a000003 	beq	40024040 <Ssd1306::Text(char const*, unsigned long)+0x34>
40024030:	e4d61001 	ldrb	r1, [r6], #1
40024034:	e1a00004 	mov	r0, r4
40024038:	ebffffc9 	bl	40023f64 <Ssd1306::PutChar(int)>
4002403c:	eafffff9 	b	40024028 <Ssd1306::Text(char const*, unsigned long)+0x1c>
40024040:	e5d4300c 	ldrb	r3, [r4, #12]
40024044:	e3530000 	cmp	r3, #0
40024048:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
4002404c:	e3a03000 	mov	r3, #0
40024050:	e5c4300c 	strb	r3, [r4, #12]
40024054:	e5943004 	ldr	r3, [r4, #4]
40024058:	e1530005 	cmp	r3, r5
4002405c:	98bd81f0 	popls	{r4, r5, r6, r7, r8, pc}
40024060:	e3a01020 	mov	r1, #32
40024064:	e1a00004 	mov	r0, r4
40024068:	e2855001 	add	r5, r5, #1
4002406c:	ebffffbc 	bl	40023f64 <Ssd1306::PutChar(int)>
40024070:	eafffff7 	b	40024054 <Ssd1306::Text(char const*, unsigned long)+0x48>

40024074 <Ssd1306::InitMembers()>:
40024074:	e3a03015 	mov	r3, #21
40024078:	e92d4070 	push	{r4, r5, r6, lr}
4002407c:	e1a04000 	mov	r4, r0
40024080:	e5803004 	str	r3, [r0, #4]
40024084:	e5d03018 	ldrb	r3, [r0, #24]
40024088:	e3530000 	cmp	r3, #0
4002408c:	0a000006 	beq	400240ac <Ssd1306::InitMembers()+0x38>
40024090:	e2433001 	sub	r3, r3, #1
40024094:	e3530001 	cmp	r3, #1
40024098:	e3a03004 	mov	r3, #4
4002409c:	9a000003 	bls	400240b0 <Ssd1306::InitMembers()+0x3c>
400240a0:	e3a02008 	mov	r2, #8
400240a4:	e5802008 	str	r2, [r0, #8]
400240a8:	ea000001 	b	400240b4 <Ssd1306::InitMembers()+0x40>
400240ac:	e3a03008 	mov	r3, #8
400240b0:	e5843008 	str	r3, [r4, #8]
400240b4:	e5940008 	ldr	r0, [r4, #8]
400240b8:	e3a05015 	mov	r5, #21
400240bc:	e584301c 	str	r3, [r4, #28]
400240c0:	e0000095 	mul	r0, r5, r0
400240c4:	eb0024c4 	bl	4002d3dc <operator new[](unsigned int)>
400240c8:	e5943008 	ldr	r3, [r4, #8]
400240cc:	e3a02020 	mov	r2, #32
400240d0:	e5840020 	str	r0, [r4, #32]
400240d4:	e0230395 	mla	r3, r5, r3, r0
400240d8:	e1500003 	cmp	r0, r3
400240dc:	08bd8070 	popeq	{r4, r5, r6, pc}
400240e0:	e4c02001 	strb	r2, [r0], #1
400240e4:	eafffffb 	b	400240d8 <Ssd1306::InitMembers()+0x64>

400240e8 <Ssd1306::Ssd1306(TOledPanel)>:
400240e8:	e59f2048 	ldr	r2, [pc, #72]	; 40024138 <Ssd1306::Ssd1306(TOledPanel)+0x50>
400240ec:	e3a03000 	mov	r3, #0
400240f0:	e92d4010 	push	{r4, lr}
400240f4:	e1a04000 	mov	r4, r0
400240f8:	e5802000 	str	r2, [r0]
400240fc:	e3a0203c 	mov	r2, #60	; 0x3c
40024100:	e5c02010 	strb	r2, [r0, #16]
40024104:	e59f2030 	ldr	r2, [pc, #48]	; 4002413c <Ssd1306::Ssd1306(TOledPanel)+0x54>
40024108:	e5c0300c 	strb	r3, [r0, #12]
4002410c:	e5c03019 	strb	r3, [r0, #25]
40024110:	e5803020 	str	r3, [r0, #32]
40024114:	e5803024 	str	r3, [r0, #36]	; 0x24
40024118:	e5803028 	str	r3, [r0, #40]	; 0x28
4002411c:	e59f301c 	ldr	r3, [pc, #28]	; 40024140 <Ssd1306::Ssd1306(TOledPanel)+0x58>
40024120:	e5802014 	str	r2, [r0, #20]
40024124:	e5c01018 	strb	r1, [r0, #24]
40024128:	e5830000 	str	r0, [r3]
4002412c:	ebffffd0 	bl	40024074 <Ssd1306::InitMembers()>
40024130:	e1a00004 	mov	r0, r4
40024134:	e8bd8010 	pop	{r4, pc}
40024138:	40032d0c 	andmi	r2, r3, ip, lsl #26
4002413c:	00061a80 	andeq	r1, r6, r0, lsl #21
40024140:	40062df4 	strdmi	r2, [r6], -r4

40024144 <Ssd1306::SendCommand(unsigned char)>:
40024144:	e92d4007 	push	{r0, r1, r2, lr}
40024148:	e3a03000 	mov	r3, #0
4002414c:	e5cd3004 	strb	r3, [sp, #4]
40024150:	e2800010 	add	r0, r0, #16
40024154:	e5cd1005 	strb	r1, [sp, #5]
40024158:	ebffff72 	bl	40023f28 <HAL_I2C::Setup()>
4002415c:	e3a01002 	mov	r1, #2
40024160:	e28d0004 	add	r0, sp, #4
40024164:	eb001ca7 	bl	4002b408 <h3_i2c_write(char const*, unsigned long)>
40024168:	e28dd00c 	add	sp, sp, #12
4002416c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

40024170 <Ssd1306::SetSleep(bool)>:
40024170:	e3510000 	cmp	r1, #0
40024174:	13a010ae 	movne	r1, #174	; 0xae
40024178:	03a010af 	moveq	r1, #175	; 0xaf
4002417c:	eafffff0 	b	40024144 <Ssd1306::SendCommand(unsigned char)>

40024180 <Ssd1306::SetContrast(unsigned char)>:
40024180:	e92d4070 	push	{r4, r5, r6, lr}
40024184:	e1a04000 	mov	r4, r0
40024188:	e1a05001 	mov	r5, r1
4002418c:	e3a01081 	mov	r1, #129	; 0x81
40024190:	ebffffeb 	bl	40024144 <Ssd1306::SendCommand(unsigned char)>
40024194:	e1a01005 	mov	r1, r5
40024198:	e1a00004 	mov	r0, r4
4002419c:	e8bd4070 	pop	{r4, r5, r6, lr}
400241a0:	eaffffe7 	b	40024144 <Ssd1306::SendCommand(unsigned char)>

400241a4 <Ssd1306::SetFlipVertically(bool)>:
400241a4:	e3510000 	cmp	r1, #0
400241a8:	e92d4010 	push	{r4, lr}
400241ac:	e1a04000 	mov	r4, r0
400241b0:	0a000005 	beq	400241cc <Ssd1306::SetFlipVertically(bool)+0x28>
400241b4:	e3a010a0 	mov	r1, #160	; 0xa0
400241b8:	ebffffe1 	bl	40024144 <Ssd1306::SendCommand(unsigned char)>
400241bc:	e3a010c0 	mov	r1, #192	; 0xc0
400241c0:	e1a00004 	mov	r0, r4
400241c4:	e8bd4010 	pop	{r4, lr}
400241c8:	eaffffdd 	b	40024144 <Ssd1306::SendCommand(unsigned char)>
400241cc:	e3a010a1 	mov	r1, #161	; 0xa1
400241d0:	ebffffdb 	bl	40024144 <Ssd1306::SendCommand(unsigned char)>
400241d4:	e3a010c8 	mov	r1, #200	; 0xc8
400241d8:	eafffff8 	b	400241c0 <Ssd1306::SetFlipVertically(bool)+0x1c>

400241dc <Ssd1306::CheckSH1106()>:
400241dc:	e92d4070 	push	{r4, r5, r6, lr}
400241e0:	e3a01000 	mov	r1, #0
400241e4:	e24dd018 	sub	sp, sp, #24
400241e8:	e1a04000 	mov	r4, r0
400241ec:	e2846010 	add	r6, r4, #16
400241f0:	ebffffd3 	bl	40024144 <Ssd1306::SendCommand(unsigned char)>
400241f4:	e3a01090 	mov	r1, #144	; 0x90
400241f8:	e1a00004 	mov	r0, r4
400241fc:	e28d5008 	add	r5, sp, #8
40024200:	ebffffcf 	bl	40024144 <Ssd1306::SendCommand(unsigned char)>
40024204:	e3a010b0 	mov	r1, #176	; 0xb0
40024208:	e1a00004 	mov	r0, r4
4002420c:	ebffffcc 	bl	40024144 <Ssd1306::SendCommand(unsigned char)>
40024210:	e59f30c4 	ldr	r3, [pc, #196]	; 400242dc <Ssd1306::CheckSH1106()+0x100>
40024214:	e3a02005 	mov	r2, #5
40024218:	e1a01005 	mov	r1, r5
4002421c:	e5930000 	ldr	r0, [r3]
40024220:	e5d33004 	ldrb	r3, [r3, #4]
40024224:	e58d0008 	str	r0, [sp, #8]
40024228:	e1a00006 	mov	r0, r6
4002422c:	e5c53004 	strb	r3, [r5, #4]
40024230:	ebffff43 	bl	40023f44 <HAL_I2C::Write(char const*, unsigned long)>
40024234:	e3a01000 	mov	r1, #0
40024238:	e1a00004 	mov	r0, r4
4002423c:	ebffffc0 	bl	40024144 <Ssd1306::SendCommand(unsigned char)>
40024240:	e3a01090 	mov	r1, #144	; 0x90
40024244:	e1a00004 	mov	r0, r4
40024248:	ebffffbd 	bl	40024144 <Ssd1306::SendCommand(unsigned char)>
4002424c:	e3a010b0 	mov	r1, #176	; 0xb0
40024250:	e1a00004 	mov	r0, r4
40024254:	ebffffba 	bl	40024144 <Ssd1306::SendCommand(unsigned char)>
40024258:	e3a03000 	mov	r3, #0
4002425c:	e1a00006 	mov	r0, r6
40024260:	e58d3010 	str	r3, [sp, #16]
40024264:	e5cd3014 	strb	r3, [sp, #20]
40024268:	ebffff2e 	bl	40023f28 <HAL_I2C::Setup()>
4002426c:	e3a03040 	mov	r3, #64	; 0x40
40024270:	e3a01001 	mov	r1, #1
40024274:	e5cd3004 	strb	r3, [sp, #4]
40024278:	e28d0004 	add	r0, sp, #4
4002427c:	eb001c61 	bl	4002b408 <h3_i2c_write(char const*, unsigned long)>
40024280:	e1a00006 	mov	r0, r6
40024284:	ebffff27 	bl	40023f28 <HAL_I2C::Setup()>
40024288:	e3a01005 	mov	r1, #5
4002428c:	e28d0010 	add	r0, sp, #16
40024290:	eb001c85 	bl	4002b4ac <h3_i2c_read(char*, unsigned long)>
40024294:	e3a02001 	mov	r2, #1
40024298:	e7d53002 	ldrb	r3, [r5, r2]
4002429c:	e28d1010 	add	r1, sp, #16
400242a0:	e2822001 	add	r2, r2, #1
400242a4:	e0811002 	add	r1, r1, r2
400242a8:	e5511001 	ldrb	r1, [r1, #-1]
400242ac:	e1530001 	cmp	r3, r1
400242b0:	0a000005 	beq	400242cc <Ssd1306::CheckSH1106()+0xf0>
400242b4:	e0433001 	sub	r3, r3, r1
400242b8:	e16f3f13 	clz	r3, r3
400242bc:	e1a032a3 	lsr	r3, r3, #5
400242c0:	e5c43019 	strb	r3, [r4, #25]
400242c4:	e28dd018 	add	sp, sp, #24
400242c8:	e8bd8070 	pop	{r4, r5, r6, pc}
400242cc:	e3520005 	cmp	r2, #5
400242d0:	1afffff0 	bne	40024298 <Ssd1306::CheckSH1106()+0xbc>
400242d4:	e3a03000 	mov	r3, #0
400242d8:	eafffff6 	b	400242b8 <Ssd1306::CheckSH1106()+0xdc>
400242dc:	40032a2b 	andmi	r2, r3, fp, lsr #20

400242e0 <Ssd1306::Cls()>:
400242e0:	e5d03019 	ldrb	r3, [r0, #25]
400242e4:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
400242e8:	e3530000 	cmp	r3, #0
400242ec:	e59f90b0 	ldr	r9, [pc, #176]	; 400243a4 <Ssd1306::Cls()+0xc4>
400242f0:	03a06000 	moveq	r6, #0
400242f4:	13a06004 	movne	r6, #4
400242f8:	e1a04000 	mov	r4, r0
400242fc:	e3a05000 	mov	r5, #0
40024300:	e6ef8076 	uxtb	r8, r6
40024304:	e3867010 	orr	r7, r6, #16
40024308:	e594301c 	ldr	r3, [r4, #28]
4002430c:	e1a01008 	mov	r1, r8
40024310:	e1a00004 	mov	r0, r4
40024314:	e1530005 	cmp	r3, r5
40024318:	9a00000f 	bls	4002435c <Ssd1306::Cls()+0x7c>
4002431c:	ebffff88 	bl	40024144 <Ssd1306::SendCommand(unsigned char)>
40024320:	e1a01007 	mov	r1, r7
40024324:	e1a00004 	mov	r0, r4
40024328:	ebffff85 	bl	40024144 <Ssd1306::SendCommand(unsigned char)>
4002432c:	e1e01005 	mvn	r1, r5
40024330:	e1a00004 	mov	r0, r4
40024334:	e201104f 	and	r1, r1, #79	; 0x4f
40024338:	e2855001 	add	r5, r5, #1
4002433c:	e1e01001 	mvn	r1, r1
40024340:	e6ef1071 	uxtb	r1, r1
40024344:	ebffff7e 	bl	40024144 <Ssd1306::SendCommand(unsigned char)>
40024348:	e2862081 	add	r2, r6, #129	; 0x81
4002434c:	e1a01009 	mov	r1, r9
40024350:	e2840010 	add	r0, r4, #16
40024354:	ebfffefa 	bl	40023f44 <HAL_I2C::Write(char const*, unsigned long)>
40024358:	eaffffea 	b	40024308 <Ssd1306::Cls()+0x28>
4002435c:	ebffff78 	bl	40024144 <Ssd1306::SendCommand(unsigned char)>
40024360:	e1a01007 	mov	r1, r7
40024364:	e1a00004 	mov	r0, r4
40024368:	ebffff75 	bl	40024144 <Ssd1306::SendCommand(unsigned char)>
4002436c:	e3a010b0 	mov	r1, #176	; 0xb0
40024370:	e1a00004 	mov	r0, r4
40024374:	ebffff72 	bl	40024144 <Ssd1306::SendCommand(unsigned char)>
40024378:	e5942008 	ldr	r2, [r4, #8]
4002437c:	e3a03000 	mov	r3, #0
40024380:	e5843024 	str	r3, [r4, #36]	; 0x24
40024384:	e3a01015 	mov	r1, #21
40024388:	e5943020 	ldr	r3, [r4, #32]
4002438c:	e0223291 	mla	r2, r1, r2, r3
40024390:	e3a01020 	mov	r1, #32
40024394:	e1520003 	cmp	r2, r3
40024398:	08bd87f0 	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
4002439c:	e4c31001 	strb	r1, [r3], #1
400243a0:	eafffffb 	b	40024394 <Ssd1306::Cls()+0xb4>
400243a4:	40062df8 	strdmi	r2, [r6], -r8

400243a8 <Ssd1306::Start()>:
400243a8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400243ac:	e1a04000 	mov	r4, r0
400243b0:	e5901014 	ldr	r1, [r0, #20]
400243b4:	e5d00010 	ldrb	r0, [r0, #16]
400243b8:	eb001ca0 	bl	4002b640 <h3_i2c_is_connected(unsigned char, unsigned long)>
400243bc:	e2506000 	subs	r6, r0, #0
400243c0:	0a000021 	beq	4002444c <Ssd1306::Start()+0xa4>
400243c4:	e5d45018 	ldrb	r5, [r4, #24]
400243c8:	e3550000 	cmp	r5, #0
400243cc:	0a000006 	beq	400243ec <Ssd1306::Start()+0x44>
400243d0:	e2455001 	sub	r5, r5, #1
400243d4:	e3550001 	cmp	r5, #1
400243d8:	93a05000 	movls	r5, #0
400243dc:	959f708c 	ldrls	r7, [pc, #140]	; 40024470 <Ssd1306::Start()+0xc8>
400243e0:	9a00001b 	bls	40024454 <Ssd1306::Start()+0xac>
400243e4:	e3a06000 	mov	r6, #0
400243e8:	ea000017 	b	4002444c <Ssd1306::Start()+0xa4>
400243ec:	e59f7080 	ldr	r7, [pc, #128]	; 40024474 <Ssd1306::Start()+0xcc>
400243f0:	e4d71001 	ldrb	r1, [r7], #1
400243f4:	e1a00004 	mov	r0, r4
400243f8:	e2855001 	add	r5, r5, #1
400243fc:	ebffff50 	bl	40024144 <Ssd1306::SendCommand(unsigned char)>
40024400:	e3550018 	cmp	r5, #24
40024404:	1afffff9 	bne	400243f0 <Ssd1306::Start()+0x48>
40024408:	e59f2068 	ldr	r2, [pc, #104]	; 40024478 <Ssd1306::Start()+0xd0>
4002440c:	e3a03000 	mov	r3, #0
40024410:	e1a00003 	mov	r0, r3
40024414:	e1a01002 	mov	r1, r2
40024418:	e4c20001 	strb	r0, [r2], #1
4002441c:	e2833001 	add	r3, r3, #1
40024420:	e3530086 	cmp	r3, #134	; 0x86
40024424:	1afffffb 	bne	40024418 <Ssd1306::Start()+0x70>
40024428:	e3a03040 	mov	r3, #64	; 0x40
4002442c:	e1a00004 	mov	r0, r4
40024430:	e5c13000 	strb	r3, [r1]
40024434:	ebffff68 	bl	400241dc <Ssd1306::CheckSH1106()>
40024438:	e1a00004 	mov	r0, r4
4002443c:	ebffffa7 	bl	400242e0 <Ssd1306::Cls()>
40024440:	e3a010af 	mov	r1, #175	; 0xaf
40024444:	e1a00004 	mov	r0, r4
40024448:	ebffff3d 	bl	40024144 <Ssd1306::SendCommand(unsigned char)>
4002444c:	e1a00006 	mov	r0, r6
40024450:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40024454:	e4d71001 	ldrb	r1, [r7], #1
40024458:	e1a00004 	mov	r0, r4
4002445c:	e2855001 	add	r5, r5, #1
40024460:	ebffff37 	bl	40024144 <Ssd1306::SendCommand(unsigned char)>
40024464:	e3550018 	cmp	r5, #24
40024468:	1afffff9 	bne	40024454 <Ssd1306::Start()+0xac>
4002446c:	eaffffe5 	b	40024408 <Ssd1306::Start()+0x60>
40024470:	40032cd4 	ldrdmi	r2, [r3], -r4
40024474:	40032cec 	andmi	r2, r3, ip, ror #25
40024478:	40062df8 	strdmi	r2, [r6], -r8

4002447c <Ssd1306::SetColumnRow(unsigned char, unsigned char)>:
4002447c:	e0811081 	add	r1, r1, r1, lsl #1
40024480:	e5d03019 	ldrb	r3, [r0, #25]
40024484:	e92d4070 	push	{r4, r5, r6, lr}
40024488:	e3530000 	cmp	r3, #0
4002448c:	e1a04081 	lsl	r4, r1, #1
40024490:	e1a05000 	mov	r5, r0
40024494:	e6ef4074 	uxtb	r4, r4
40024498:	e1a06002 	mov	r6, r2
4002449c:	12844004 	addne	r4, r4, #4
400244a0:	16ef4074 	uxtbne	r4, r4
400244a4:	e204100e 	and	r1, r4, #14
400244a8:	ebffff25 	bl	40024144 <Ssd1306::SendCommand(unsigned char)>
400244ac:	e1a01224 	lsr	r1, r4, #4
400244b0:	e1a00005 	mov	r0, r5
400244b4:	e3811010 	orr	r1, r1, #16
400244b8:	ebffff21 	bl	40024144 <Ssd1306::SendCommand(unsigned char)>
400244bc:	e38610b0 	orr	r1, r6, #176	; 0xb0
400244c0:	e1a00005 	mov	r0, r5
400244c4:	e8bd4070 	pop	{r4, r5, r6, lr}
400244c8:	eaffff1d 	b	40024144 <Ssd1306::SendCommand(unsigned char)>

400244cc <Ssd1306::SetCursorOn()>:
400244cc:	e5902024 	ldr	r2, [r0, #36]	; 0x24
400244d0:	e3a03015 	mov	r3, #21
400244d4:	e92d4013 	push	{r0, r1, r4, lr}
400244d8:	e3a0c007 	mov	ip, #7
400244dc:	e731f312 	udiv	r1, r2, r3
400244e0:	e0632193 	mls	r3, r3, r1, r2
400244e4:	e5c0102e 	strb	r1, [r0, #46]	; 0x2e
400244e8:	e1a04000 	mov	r4, r0
400244ec:	e5c0302d 	strb	r3, [r0, #45]	; 0x2d
400244f0:	e5903020 	ldr	r3, [r0, #32]
400244f4:	e7d33002 	ldrb	r3, [r3, r2]
400244f8:	e3a02040 	mov	r2, #64	; 0x40
400244fc:	e5cd2000 	strb	r2, [sp]
40024500:	e59f2054 	ldr	r2, [pc, #84]	; 4002455c <Ssd1306::SetCursorOn()+0x90>
40024504:	e2433020 	sub	r3, r3, #32
40024508:	e6ef3073 	uxtb	r3, r3
4002450c:	e0212c93 	mla	r1, r3, ip, r2
40024510:	e5c0302c 	strb	r3, [r0, #44]	; 0x2c
40024514:	e3e0c07f 	mvn	ip, #127	; 0x7f
40024518:	e28d0001 	add	r0, sp, #1
4002451c:	e2812006 	add	r2, r1, #6
40024520:	e5f13001 	ldrb	r3, [r1, #1]!
40024524:	e1510002 	cmp	r1, r2
40024528:	e18c3003 	orr	r3, ip, r3
4002452c:	e4c03001 	strb	r3, [r0], #1
40024530:	1afffffa 	bne	40024520 <Ssd1306::SetCursorOn()+0x54>
40024534:	e1a0100d 	mov	r1, sp
40024538:	e2840010 	add	r0, r4, #16
4002453c:	e3a02007 	mov	r2, #7
40024540:	ebfffe7f 	bl	40023f44 <HAL_I2C::Write(char const*, unsigned long)>
40024544:	e5d4202e 	ldrb	r2, [r4, #46]	; 0x2e
40024548:	e1a00004 	mov	r0, r4
4002454c:	e5d4102d 	ldrb	r1, [r4, #45]	; 0x2d
40024550:	ebffffc9 	bl	4002447c <Ssd1306::SetColumnRow(unsigned char, unsigned char)>
40024554:	e28dd008 	add	sp, sp, #8
40024558:	e8bd8010 	pop	{r4, pc}
4002455c:	40032a34 	andmi	r2, r3, r4, lsr sl

40024560 <Ssd1306::SetCursorBlinkOn()>:
40024560:	e5902024 	ldr	r2, [r0, #36]	; 0x24
40024564:	e3a03015 	mov	r3, #21
40024568:	e92d4013 	push	{r0, r1, r4, lr}
4002456c:	e3a0c007 	mov	ip, #7
40024570:	e731f312 	udiv	r1, r2, r3
40024574:	e0632193 	mls	r3, r3, r1, r2
40024578:	e5c0102e 	strb	r1, [r0, #46]	; 0x2e
4002457c:	e1a04000 	mov	r4, r0
40024580:	e5c0302d 	strb	r3, [r0, #45]	; 0x2d
40024584:	e5903020 	ldr	r3, [r0, #32]
40024588:	e7d33002 	ldrb	r3, [r3, r2]
4002458c:	e3a02040 	mov	r2, #64	; 0x40
40024590:	e5cd2000 	strb	r2, [sp]
40024594:	e59f2050 	ldr	r2, [pc, #80]	; 400245ec <Ssd1306::SetCursorBlinkOn()+0x8c>
40024598:	e2433020 	sub	r3, r3, #32
4002459c:	e6ef3073 	uxtb	r3, r3
400245a0:	e0212c93 	mla	r1, r3, ip, r2
400245a4:	e5c0302c 	strb	r3, [r0, #44]	; 0x2c
400245a8:	e28d0001 	add	r0, sp, #1
400245ac:	e2812006 	add	r2, r1, #6
400245b0:	e5f13001 	ldrb	r3, [r1, #1]!
400245b4:	e1510002 	cmp	r1, r2
400245b8:	e1e03003 	mvn	r3, r3
400245bc:	e4c03001 	strb	r3, [r0], #1
400245c0:	1afffffa 	bne	400245b0 <Ssd1306::SetCursorBlinkOn()+0x50>
400245c4:	e1a0100d 	mov	r1, sp
400245c8:	e2840010 	add	r0, r4, #16
400245cc:	e3a02007 	mov	r2, #7
400245d0:	ebfffe5b 	bl	40023f44 <HAL_I2C::Write(char const*, unsigned long)>
400245d4:	e5d4202e 	ldrb	r2, [r4, #46]	; 0x2e
400245d8:	e1a00004 	mov	r0, r4
400245dc:	e5d4102d 	ldrb	r1, [r4, #45]	; 0x2d
400245e0:	ebffffa5 	bl	4002447c <Ssd1306::SetColumnRow(unsigned char, unsigned char)>
400245e4:	e28dd008 	add	sp, sp, #8
400245e8:	e8bd8010 	pop	{r4, pc}
400245ec:	40032a34 	andmi	r2, r3, r4, lsr sl

400245f0 <Ssd1306::SetCursorOff()>:
400245f0:	e92d4070 	push	{r4, r5, r6, lr}
400245f4:	e1a04000 	mov	r4, r0
400245f8:	e5d0202e 	ldrb	r2, [r0, #46]	; 0x2e
400245fc:	e5d0102d 	ldrb	r1, [r0, #45]	; 0x2d
40024600:	e5905024 	ldr	r5, [r0, #36]	; 0x24
40024604:	ebffff9c 	bl	4002447c <Ssd1306::SetColumnRow(unsigned char, unsigned char)>
40024608:	e5d4102c 	ldrb	r1, [r4, #44]	; 0x2c
4002460c:	e2840010 	add	r0, r4, #16
40024610:	e59f302c 	ldr	r3, [pc, #44]	; 40024644 <Ssd1306::SetCursorOff()+0x54>
40024614:	e3a02007 	mov	r2, #7
40024618:	e0611181 	rsb	r1, r1, r1, lsl #3
4002461c:	e0831001 	add	r1, r3, r1
40024620:	ebfffe47 	bl	40023f44 <HAL_I2C::Write(char const*, unsigned long)>
40024624:	e3a01015 	mov	r1, #21
40024628:	e1a00004 	mov	r0, r4
4002462c:	e732f115 	udiv	r2, r5, r1
40024630:	e0615291 	mls	r1, r1, r2, r5
40024634:	e8bd4070 	pop	{r4, r5, r6, lr}
40024638:	e6ef2072 	uxtb	r2, r2
4002463c:	e6ef1071 	uxtb	r1, r1
40024640:	eaffff8d 	b	4002447c <Ssd1306::SetColumnRow(unsigned char, unsigned char)>
40024644:	40032a34 	andmi	r2, r3, r4, lsr sl

40024648 <Ssd1306::SetCursorPos(unsigned long, unsigned long)>:
40024648:	e3510014 	cmp	r1, #20
4002464c:	812fff1e 	bxhi	lr
40024650:	e5903008 	ldr	r3, [r0, #8]
40024654:	e92d4070 	push	{r4, r5, r6, lr}
40024658:	e1a06000 	mov	r6, r0
4002465c:	e1530002 	cmp	r3, r2
40024660:	e1a05002 	mov	r5, r2
40024664:	98bd8070 	popls	{r4, r5, r6, pc}
40024668:	e0811081 	add	r1, r1, r1, lsl #1
4002466c:	e5d03019 	ldrb	r3, [r0, #25]
40024670:	e1a04081 	lsl	r4, r1, #1
40024674:	e3530000 	cmp	r3, #0
40024678:	e6ef4074 	uxtb	r4, r4
4002467c:	12844004 	addne	r4, r4, #4
40024680:	16ef4074 	uxtbne	r4, r4
40024684:	e204100e 	and	r1, r4, #14
40024688:	ebfffead 	bl	40024144 <Ssd1306::SendCommand(unsigned char)>
4002468c:	e1a01224 	lsr	r1, r4, #4
40024690:	e1a00006 	mov	r0, r6
40024694:	e3811010 	orr	r1, r1, #16
40024698:	ebfffea9 	bl	40024144 <Ssd1306::SendCommand(unsigned char)>
4002469c:	e1e01005 	mvn	r1, r5
400246a0:	e1a00006 	mov	r0, r6
400246a4:	e0855085 	add	r5, r5, r5, lsl #1
400246a8:	e201104f 	and	r1, r1, #79	; 0x4f
400246ac:	e1e01001 	mvn	r1, r1
400246b0:	e0655185 	rsb	r5, r5, r5, lsl #3
400246b4:	e6ef1071 	uxtb	r1, r1
400246b8:	ebfffea1 	bl	40024144 <Ssd1306::SendCommand(unsigned char)>
400246bc:	e3a03006 	mov	r3, #6
400246c0:	e734f314 	udiv	r4, r4, r3
400246c4:	e5963028 	ldr	r3, [r6, #40]	; 0x28
400246c8:	e0854004 	add	r4, r5, r4
400246cc:	e3530001 	cmp	r3, #1
400246d0:	e6ff4074 	uxth	r4, r4
400246d4:	e5864024 	str	r4, [r6, #36]	; 0x24
400246d8:	1a000004 	bne	400246f0 <Ssd1306::SetCursorPos(unsigned long, unsigned long)+0xa8>
400246dc:	e1a00006 	mov	r0, r6
400246e0:	ebffffc2 	bl	400245f0 <Ssd1306::SetCursorOff()>
400246e4:	e1a00006 	mov	r0, r6
400246e8:	e8bd4070 	pop	{r4, r5, r6, lr}
400246ec:	eaffff76 	b	400244cc <Ssd1306::SetCursorOn()>
400246f0:	e3530003 	cmp	r3, #3
400246f4:	18bd8070 	popne	{r4, r5, r6, pc}
400246f8:	e1a00006 	mov	r0, r6
400246fc:	ebffffbb 	bl	400245f0 <Ssd1306::SetCursorOff()>
40024700:	e1a00006 	mov	r0, r6
40024704:	e8bd4070 	pop	{r4, r5, r6, lr}
40024708:	eaffff94 	b	40024560 <Ssd1306::SetCursorBlinkOn()>

4002470c <Ssd1306::ClearLine(unsigned long)>:
4002470c:	e5903008 	ldr	r3, [r0, #8]
40024710:	e1530001 	cmp	r3, r1
40024714:	312fff1e 	bxcc	lr
40024718:	e2411001 	sub	r1, r1, #1
4002471c:	e92d4070 	push	{r4, r5, r6, lr}
40024720:	e6ef4071 	uxtb	r4, r1
40024724:	e1a05000 	mov	r5, r0
40024728:	e1a02004 	mov	r2, r4
4002472c:	e3a01000 	mov	r1, #0
40024730:	ebffffc4 	bl	40024648 <Ssd1306::SetCursorPos(unsigned long, unsigned long)>
40024734:	e59f1038 	ldr	r1, [pc, #56]	; 40024774 <Ssd1306::ClearLine(unsigned long)+0x68>
40024738:	e3a02081 	mov	r2, #129	; 0x81
4002473c:	e2850010 	add	r0, r5, #16
40024740:	ebfffdff 	bl	40023f44 <HAL_I2C::Write(char const*, unsigned long)>
40024744:	e1a02004 	mov	r2, r4
40024748:	e3a01000 	mov	r1, #0
4002474c:	e1a00005 	mov	r0, r5
40024750:	ebffffbc 	bl	40024648 <Ssd1306::SetCursorPos(unsigned long, unsigned long)>
40024754:	e1c522d0 	ldrd	r2, [r5, #32]
40024758:	e0833002 	add	r3, r3, r2
4002475c:	e3a02020 	mov	r2, #32
40024760:	e2831015 	add	r1, r3, #21
40024764:	e1510003 	cmp	r1, r3
40024768:	08bd8070 	popeq	{r4, r5, r6, pc}
4002476c:	e4c32001 	strb	r2, [r3], #1
40024770:	eafffffb 	b	40024764 <Ssd1306::ClearLine(unsigned long)+0x58>
40024774:	40062df8 	strdmi	r2, [r6], -r8

40024778 <Ssd1306::TextLine(unsigned long, char const*, unsigned long)>:
40024778:	e92d4070 	push	{r4, r5, r6, lr}
4002477c:	e1a06003 	mov	r6, r3
40024780:	e5903008 	ldr	r3, [r0, #8]
40024784:	e1530001 	cmp	r3, r1
40024788:	38bd8070 	popcc	{r4, r5, r6, pc}
4002478c:	e2411001 	sub	r1, r1, #1
40024790:	e1a04000 	mov	r4, r0
40024794:	e1a05002 	mov	r5, r2
40024798:	e6ef2071 	uxtb	r2, r1
4002479c:	e3a01000 	mov	r1, #0
400247a0:	ebffffa8 	bl	40024648 <Ssd1306::SetCursorPos(unsigned long, unsigned long)>
400247a4:	e1a02006 	mov	r2, r6
400247a8:	e1a01005 	mov	r1, r5
400247ac:	e1a00004 	mov	r0, r4
400247b0:	e8bd4070 	pop	{r4, r5, r6, lr}
400247b4:	eafffe14 	b	4002400c <Ssd1306::Text(char const*, unsigned long)>

400247b8 <Ssd1306::SetCursor(unsigned long)>:
400247b8:	e5902028 	ldr	r2, [r0, #40]	; 0x28
400247bc:	e1520001 	cmp	r2, r1
400247c0:	012fff1e 	bxeq	lr
400247c4:	e5801028 	str	r1, [r0, #40]	; 0x28
400247c8:	e3510001 	cmp	r1, #1
400247cc:	0a000004 	beq	400247e4 <Ssd1306::SetCursor(unsigned long)+0x2c>
400247d0:	e3510003 	cmp	r1, #3
400247d4:	0a000003 	beq	400247e8 <Ssd1306::SetCursor(unsigned long)+0x30>
400247d8:	e3510000 	cmp	r1, #0
400247dc:	112fff1e 	bxne	lr
400247e0:	eaffff82 	b	400245f0 <Ssd1306::SetCursorOff()>
400247e4:	eaffff38 	b	400244cc <Ssd1306::SetCursorOn()>
400247e8:	eaffff5c 	b	40024560 <Ssd1306::SetCursorBlinkOn()>

400247ec <Ssd1311::~Ssd1311()>:
400247ec:	e12fff1e 	bx	lr

400247f0 <Ssd1311::PrintInfo()>:
400247f0:	e5902004 	ldr	r2, [r0, #4]
400247f4:	e5901008 	ldr	r1, [r0, #8]
400247f8:	e59f0000 	ldr	r0, [pc]	; 40024800 <Ssd1311::PrintInfo()+0x10>
400247fc:	ea0020e3 	b	4002cb90 <printf>
40024800:	40032d44 	andmi	r2, r3, r4, asr #26

40024804 <Ssd1311::~Ssd1311()>:
40024804:	e92d4010 	push	{r4, lr}
40024808:	e3a0101c 	mov	r1, #28
4002480c:	e1a04000 	mov	r4, r0
40024810:	eb0022ef 	bl	4002d3d4 <operator delete(void*, unsigned int)>
40024814:	e1a00004 	mov	r0, r4
40024818:	e8bd8010 	pop	{r4, pc}

4002481c <Ssd1311::PutString(char const*)>:
4002481c:	e92d4010 	push	{r4, lr}
40024820:	e3a02014 	mov	r2, #20
40024824:	e59f306c 	ldr	r3, [pc, #108]	; 40024898 <Ssd1311::PutString(char const*)+0x7c>
40024828:	e1a0e000 	mov	lr, r0
4002482c:	e1a00001 	mov	r0, r1
40024830:	e1a0c000 	mov	ip, r0
40024834:	e4d04001 	ldrb	r4, [r0], #1
40024838:	e3540000 	cmp	r4, #0
4002483c:	0a000003 	beq	40024850 <Ssd1311::PutString(char const*)+0x34>
40024840:	e4c34001 	strb	r4, [r3], #1
40024844:	e2522001 	subs	r2, r2, #1
40024848:	e1a0c000 	mov	ip, r0
4002484c:	1afffff7 	bne	40024830 <Ssd1311::PutString(char const*)+0x14>
40024850:	e5de400c 	ldrb	r4, [lr, #12]
40024854:	e28e0010 	add	r0, lr, #16
40024858:	e3540000 	cmp	r4, #0
4002485c:	02622015 	rsbeq	r2, r2, #21
40024860:	0a000009 	beq	4002488c <Ssd1311::PutString(char const*)+0x70>
40024864:	e04cc001 	sub	ip, ip, r1
40024868:	e3a02000 	mov	r2, #0
4002486c:	e5ce200c 	strb	r2, [lr, #12]
40024870:	e3a02020 	mov	r2, #32
40024874:	e04cc003 	sub	ip, ip, r3
40024878:	e083100c 	add	r1, r3, ip
4002487c:	e3510013 	cmp	r1, #19
40024880:	94c32001 	strbls	r2, [r3], #1
40024884:	9afffffb 	bls	40024878 <Ssd1311::PutString(char const*)+0x5c>
40024888:	e3a02015 	mov	r2, #21
4002488c:	e59f1008 	ldr	r1, [pc, #8]	; 4002489c <Ssd1311::PutString(char const*)+0x80>
40024890:	ebfffdab 	bl	40023f44 <HAL_I2C::Write(char const*, unsigned long)>
40024894:	e8bd8010 	pop	{r4, pc}
40024898:	40062e85 	andmi	r2, r6, r5, lsl #29
4002489c:	40062e84 	andmi	r2, r6, r4, lsl #29

400248a0 <Ssd1311::Ssd1311()>:
400248a0:	e3a02000 	mov	r2, #0
400248a4:	e3a01014 	mov	r1, #20
400248a8:	e5c0200c 	strb	r2, [r0, #12]
400248ac:	e59f202c 	ldr	r2, [pc, #44]	; 400248e0 <Ssd1311::Ssd1311()+0x40>
400248b0:	e5802000 	str	r2, [r0]
400248b4:	e3a0203c 	mov	r2, #60	; 0x3c
400248b8:	e5c02010 	strb	r2, [r0, #16]
400248bc:	e59f2020 	ldr	r2, [pc, #32]	; 400248e4 <Ssd1311::Ssd1311()+0x44>
400248c0:	e5802014 	str	r2, [r0, #20]
400248c4:	e3a02008 	mov	r2, #8
400248c8:	e5c02018 	strb	r2, [r0, #24]
400248cc:	e59f2014 	ldr	r2, [pc, #20]	; 400248e8 <Ssd1311::Ssd1311()+0x48>
400248d0:	e5820000 	str	r0, [r2]
400248d4:	e3a02004 	mov	r2, #4
400248d8:	e9800006 	stmib	r0, {r1, r2}
400248dc:	e12fff1e 	bx	lr
400248e0:	40032d6c 	andmi	r2, r3, ip, ror #26
400248e4:	00061a80 	andeq	r1, r6, r0, lsl #21
400248e8:	40062e80 	andmi	r2, r6, r0, lsl #29

400248ec <Ssd1311::Text(char const*, unsigned long)>:
400248ec:	e3520014 	cmp	r2, #20
400248f0:	e1a03000 	mov	r3, r0
400248f4:	e59f0060 	ldr	r0, [pc, #96]	; 4002495c <Ssd1311::Text(char const*, unsigned long)+0x70>
400248f8:	23a02014 	movcs	r2, #20
400248fc:	e92d4010 	push	{r4, lr}
40024900:	e081e002 	add	lr, r1, r2
40024904:	e15e0001 	cmp	lr, r1
40024908:	14d1c001 	ldrbne	ip, [r1], #1
4002490c:	14c0c001 	strbne	ip, [r0], #1
40024910:	1afffffb 	bne	40024904 <Ssd1311::Text(char const*, unsigned long)+0x18>
40024914:	e5d3100c 	ldrb	r1, [r3, #12]
40024918:	e2822001 	add	r2, r2, #1
4002491c:	e2830010 	add	r0, r3, #16
40024920:	e3510000 	cmp	r1, #0
40024924:	0a000009 	beq	40024950 <Ssd1311::Text(char const*, unsigned long)+0x64>
40024928:	e3a01000 	mov	r1, #0
4002492c:	e5c3100c 	strb	r1, [r3, #12]
40024930:	e3a01020 	mov	r1, #32
40024934:	e59f3024 	ldr	r3, [pc, #36]	; 40024960 <Ssd1311::Text(char const*, unsigned long)+0x74>
40024938:	e0832002 	add	r2, r3, r2
4002493c:	e2833015 	add	r3, r3, #21
40024940:	e1530002 	cmp	r3, r2
40024944:	14c21001 	strbne	r1, [r2], #1
40024948:	1afffffc 	bne	40024940 <Ssd1311::Text(char const*, unsigned long)+0x54>
4002494c:	e3a02015 	mov	r2, #21
40024950:	e59f1008 	ldr	r1, [pc, #8]	; 40024960 <Ssd1311::Text(char const*, unsigned long)+0x74>
40024954:	ebfffd7a 	bl	40023f44 <HAL_I2C::Write(char const*, unsigned long)>
40024958:	e8bd8010 	pop	{r4, pc}
4002495c:	40062e85 	andmi	r2, r6, r5, lsl #29
40024960:	40062e84 	andmi	r2, r6, r4, lsl #29

40024964 <Ssd1311::SendCommand(unsigned char)>:
40024964:	e92d4007 	push	{r0, r1, r2, lr}
40024968:	e3e0307f 	mvn	r3, #127	; 0x7f
4002496c:	e5cd3004 	strb	r3, [sp, #4]
40024970:	e2800010 	add	r0, r0, #16
40024974:	e5cd1005 	strb	r1, [sp, #5]
40024978:	ebfffd6a 	bl	40023f28 <HAL_I2C::Setup()>
4002497c:	e3a01002 	mov	r1, #2
40024980:	e28d0004 	add	r0, sp, #4
40024984:	eb001a9f 	bl	4002b408 <h3_i2c_write(char const*, unsigned long)>
40024988:	e28dd00c 	add	sp, sp, #12
4002498c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

40024990 <Ssd1311::Cls()>:
40024990:	e3a01001 	mov	r1, #1
40024994:	eafffff2 	b	40024964 <Ssd1311::SendCommand(unsigned char)>

40024998 <Ssd1311::SetDDRAM(unsigned char)>:
40024998:	e3811080 	orr	r1, r1, #128	; 0x80
4002499c:	eafffff0 	b	40024964 <Ssd1311::SendCommand(unsigned char)>

400249a0 <Ssd1311::SetCursorPos(unsigned long, unsigned long)>:
400249a0:	e3520003 	cmp	r2, #3
400249a4:	93510013 	cmpls	r1, #19
400249a8:	812fff1e 	bxhi	lr
400249ac:	e0811282 	add	r1, r1, r2, lsl #5
400249b0:	e6ef1071 	uxtb	r1, r1
400249b4:	eafffff7 	b	40024998 <Ssd1311::SetDDRAM(unsigned char)>

400249b8 <Ssd1311::ClearLine(unsigned long)>:
400249b8:	e92d4070 	push	{r4, r5, r6, lr}
400249bc:	e2414001 	sub	r4, r1, #1
400249c0:	e3540003 	cmp	r4, #3
400249c4:	88bd8070 	pophi	{r4, r5, r6, pc}
400249c8:	e6ef4074 	uxtb	r4, r4
400249cc:	e1a05000 	mov	r5, r0
400249d0:	e1a02004 	mov	r2, r4
400249d4:	e3a01000 	mov	r1, #0
400249d8:	ebfffff0 	bl	400249a0 <Ssd1311::SetCursorPos(unsigned long, unsigned long)>
400249dc:	e59f101c 	ldr	r1, [pc, #28]	; 40024a00 <Ssd1311::ClearLine(unsigned long)+0x48>
400249e0:	e2850010 	add	r0, r5, #16
400249e4:	e3a02015 	mov	r2, #21
400249e8:	ebfffd55 	bl	40023f44 <HAL_I2C::Write(char const*, unsigned long)>
400249ec:	e1a02004 	mov	r2, r4
400249f0:	e1a00005 	mov	r0, r5
400249f4:	e3a01000 	mov	r1, #0
400249f8:	e8bd4070 	pop	{r4, r5, r6, lr}
400249fc:	eaffffe7 	b	400249a0 <Ssd1311::SetCursorPos(unsigned long, unsigned long)>
40024a00:	40062e9c 	mulmi	r6, ip, lr

40024a04 <Ssd1311::TextLine(unsigned long, char const*, unsigned long)>:
40024a04:	e92d4070 	push	{r4, r5, r6, lr}
40024a08:	e1a05002 	mov	r5, r2
40024a0c:	e2412001 	sub	r2, r1, #1
40024a10:	e3520003 	cmp	r2, #3
40024a14:	88bd8070 	pophi	{r4, r5, r6, pc}
40024a18:	e1a04000 	mov	r4, r0
40024a1c:	e1a06003 	mov	r6, r3
40024a20:	e6ef2072 	uxtb	r2, r2
40024a24:	e3a01000 	mov	r1, #0
40024a28:	ebffffdc 	bl	400249a0 <Ssd1311::SetCursorPos(unsigned long, unsigned long)>
40024a2c:	e1a02006 	mov	r2, r6
40024a30:	e1a01005 	mov	r1, r5
40024a34:	e1a00004 	mov	r0, r4
40024a38:	e8bd4070 	pop	{r4, r5, r6, lr}
40024a3c:	eaffffaa 	b	400248ec <Ssd1311::Text(char const*, unsigned long)>

40024a40 <Ssd1311::SetSD(Ssd1311::CommandSet)>:
40024a40:	e92d4070 	push	{r4, r5, r6, lr}
40024a44:	e1a05001 	mov	r5, r1
40024a48:	e3a0102a 	mov	r1, #42	; 0x2a
40024a4c:	e1a04000 	mov	r4, r0
40024a50:	ebffffc3 	bl	40024964 <Ssd1311::SendCommand(unsigned char)>
40024a54:	e3550000 	cmp	r5, #0
40024a58:	e1a00004 	mov	r0, r4
40024a5c:	03a01078 	moveq	r1, #120	; 0x78
40024a60:	13a01079 	movne	r1, #121	; 0x79
40024a64:	e8bd4070 	pop	{r4, r5, r6, lr}
40024a68:	eaffffbd 	b	40024964 <Ssd1311::SendCommand(unsigned char)>

40024a6c <Ssd1311::SetSleep(bool)>:
40024a6c:	e5d03018 	ldrb	r3, [r0, #24]
40024a70:	e3510000 	cmp	r1, #0
40024a74:	120310fb 	andne	r1, r3, #251	; 0xfb
40024a78:	03831004 	orreq	r1, r3, #4
40024a7c:	e5c01018 	strb	r1, [r0, #24]
40024a80:	eaffffb7 	b	40024964 <Ssd1311::SendCommand(unsigned char)>

40024a84 <Ssd1311::SelectRamRom(unsigned long, unsigned long)>:
40024a84:	e92d4070 	push	{r4, r5, r6, lr}
40024a88:	e1a04000 	mov	r4, r0
40024a8c:	e1a05002 	mov	r5, r2
40024a90:	e1a06001 	mov	r6, r1
40024a94:	e3a01001 	mov	r1, #1
40024a98:	e1a05105 	lsl	r5, r5, #2
40024a9c:	ebfffff2 	bl	40024a6c <Ssd1311::SetSleep(bool)>
40024aa0:	e1a00004 	mov	r0, r4
40024aa4:	e3a0102a 	mov	r1, #42	; 0x2a
40024aa8:	e205500c 	and	r5, r5, #12
40024aac:	ebffffac 	bl	40024964 <Ssd1311::SendCommand(unsigned char)>
40024ab0:	e1a00004 	mov	r0, r4
40024ab4:	e3a01072 	mov	r1, #114	; 0x72
40024ab8:	ebffffa9 	bl	40024964 <Ssd1311::SendCommand(unsigned char)>
40024abc:	e2061003 	and	r1, r6, #3
40024ac0:	e1a00004 	mov	r0, r4
40024ac4:	e1851001 	orr	r1, r5, r1
40024ac8:	ebffffa5 	bl	40024964 <Ssd1311::SendCommand(unsigned char)>
40024acc:	e1a00004 	mov	r0, r4
40024ad0:	e3a01028 	mov	r1, #40	; 0x28
40024ad4:	ebffffa2 	bl	40024964 <Ssd1311::SendCommand(unsigned char)>
40024ad8:	e1a00004 	mov	r0, r4
40024adc:	e3a01000 	mov	r1, #0
40024ae0:	ebffffe1 	bl	40024a6c <Ssd1311::SetSleep(bool)>
40024ae4:	e1a00004 	mov	r0, r4
40024ae8:	e8bd4070 	pop	{r4, r5, r6, lr}
40024aec:	eaffffa7 	b	40024990 <Ssd1311::Cls()>

40024af0 <Ssd1311::SetContrast(unsigned char)>:
40024af0:	e92d4070 	push	{r4, r5, r6, lr}
40024af4:	e1a04000 	mov	r4, r0
40024af8:	e1a05001 	mov	r5, r1
40024afc:	e3a0102a 	mov	r1, #42	; 0x2a
40024b00:	ebffff97 	bl	40024964 <Ssd1311::SendCommand(unsigned char)>
40024b04:	e1a00004 	mov	r0, r4
40024b08:	e3a01001 	mov	r1, #1
40024b0c:	ebffffcb 	bl	40024a40 <Ssd1311::SetSD(Ssd1311::CommandSet)>
40024b10:	e1a00004 	mov	r0, r4
40024b14:	e3a01081 	mov	r1, #129	; 0x81
40024b18:	ebffff91 	bl	40024964 <Ssd1311::SendCommand(unsigned char)>
40024b1c:	e1a01005 	mov	r1, r5
40024b20:	e1a00004 	mov	r0, r4
40024b24:	ebffff8e 	bl	40024964 <Ssd1311::SendCommand(unsigned char)>
40024b28:	e1a00004 	mov	r0, r4
40024b2c:	e3a01000 	mov	r1, #0
40024b30:	ebffffc2 	bl	40024a40 <Ssd1311::SetSD(Ssd1311::CommandSet)>
40024b34:	e1a00004 	mov	r0, r4
40024b38:	e3a01028 	mov	r1, #40	; 0x28
40024b3c:	e8bd4070 	pop	{r4, r5, r6, lr}
40024b40:	eaffff87 	b	40024964 <Ssd1311::SendCommand(unsigned char)>

40024b44 <Ssd1311::SetCursor(unsigned long)>:
40024b44:	e5d03018 	ldrb	r3, [r0, #24]
40024b48:	e3510001 	cmp	r1, #1
40024b4c:	0a000006 	beq	40024b6c <Ssd1311::SetCursor(unsigned long)+0x28>
40024b50:	e3510003 	cmp	r1, #3
40024b54:	0a000008 	beq	40024b7c <Ssd1311::SetCursor(unsigned long)+0x38>
40024b58:	e3510000 	cmp	r1, #0
40024b5c:	03c33002 	biceq	r3, r3, #2
40024b60:	0a000003 	beq	40024b74 <Ssd1311::SetCursor(unsigned long)+0x30>
40024b64:	e5d01018 	ldrb	r1, [r0, #24]
40024b68:	eaffff7d 	b	40024964 <Ssd1311::SendCommand(unsigned char)>
40024b6c:	e3c33001 	bic	r3, r3, #1
40024b70:	e3833002 	orr	r3, r3, #2
40024b74:	e5c03018 	strb	r3, [r0, #24]
40024b78:	eafffff9 	b	40024b64 <Ssd1311::SetCursor(unsigned long)+0x20>
40024b7c:	e3833003 	orr	r3, r3, #3
40024b80:	eafffffb 	b	40024b74 <Ssd1311::SetCursor(unsigned long)+0x30>

40024b84 <Ssd1311::SendData(unsigned char)>:
40024b84:	e92d4007 	push	{r0, r1, r2, lr}
40024b88:	e3a03040 	mov	r3, #64	; 0x40
40024b8c:	e5cd3004 	strb	r3, [sp, #4]
40024b90:	e2800010 	add	r0, r0, #16
40024b94:	e5cd1005 	strb	r1, [sp, #5]
40024b98:	ebfffce2 	bl	40023f28 <HAL_I2C::Setup()>
40024b9c:	e3a01002 	mov	r1, #2
40024ba0:	e28d0004 	add	r0, sp, #4
40024ba4:	eb001a17 	bl	4002b408 <h3_i2c_write(char const*, unsigned long)>
40024ba8:	e28dd00c 	add	sp, sp, #12
40024bac:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

40024bb0 <Ssd1311::PutChar(int)>:
40024bb0:	e201107f 	and	r1, r1, #127	; 0x7f
40024bb4:	eafffff2 	b	40024b84 <Ssd1311::SendData(unsigned char)>

40024bb8 <Ssd1311::CheckSSD1311()>:
40024bb8:	e92d4070 	push	{r4, r5, r6, lr}
40024bbc:	e3a01040 	mov	r1, #64	; 0x40
40024bc0:	e24dd018 	sub	sp, sp, #24
40024bc4:	e1a04000 	mov	r4, r0
40024bc8:	e2846010 	add	r6, r4, #16
40024bcc:	ebffff64 	bl	40024964 <Ssd1311::SendCommand(unsigned char)>
40024bd0:	e59f30b4 	ldr	r3, [pc, #180]	; 40024c8c <Ssd1311::CheckSSD1311()+0xd4>
40024bd4:	e28d5008 	add	r5, sp, #8
40024bd8:	e3a02005 	mov	r2, #5
40024bdc:	e1a01005 	mov	r1, r5
40024be0:	e5930000 	ldr	r0, [r3]
40024be4:	e5d33004 	ldrb	r3, [r3, #4]
40024be8:	e58d0008 	str	r0, [sp, #8]
40024bec:	e1a00006 	mov	r0, r6
40024bf0:	e5c53004 	strb	r3, [r5, #4]
40024bf4:	ebfffcd2 	bl	40023f44 <HAL_I2C::Write(char const*, unsigned long)>
40024bf8:	e59f3090 	ldr	r3, [pc, #144]	; 40024c90 <Ssd1311::CheckSSD1311()+0xd8>
40024bfc:	e3a01040 	mov	r1, #64	; 0x40
40024c00:	e5930000 	ldr	r0, [r3]
40024c04:	e1d330b4 	ldrh	r3, [r3, #4]
40024c08:	e58d0010 	str	r0, [sp, #16]
40024c0c:	e1a00004 	mov	r0, r4
40024c10:	e1cd31b4 	strh	r3, [sp, #20]
40024c14:	ebffff52 	bl	40024964 <Ssd1311::SendCommand(unsigned char)>
40024c18:	e1a00006 	mov	r0, r6
40024c1c:	ebfffcc1 	bl	40023f28 <HAL_I2C::Setup()>
40024c20:	e3a03040 	mov	r3, #64	; 0x40
40024c24:	e3a01001 	mov	r1, #1
40024c28:	e5cd3004 	strb	r3, [sp, #4]
40024c2c:	e28d0004 	add	r0, sp, #4
40024c30:	eb0019f4 	bl	4002b408 <h3_i2c_write(char const*, unsigned long)>
40024c34:	e1a00006 	mov	r0, r6
40024c38:	ebfffcba 	bl	40023f28 <HAL_I2C::Setup()>
40024c3c:	e3a01006 	mov	r1, #6
40024c40:	e28d0010 	add	r0, sp, #16
40024c44:	eb001a18 	bl	4002b4ac <h3_i2c_read(char*, unsigned long)>
40024c48:	e3a03001 	mov	r3, #1
40024c4c:	e7d50003 	ldrb	r0, [r5, r3]
40024c50:	e28d2010 	add	r2, sp, #16
40024c54:	e2833001 	add	r3, r3, #1
40024c58:	e0822003 	add	r2, r2, r3
40024c5c:	e5522001 	ldrb	r2, [r2, #-1]
40024c60:	e1500002 	cmp	r0, r2
40024c64:	0a000004 	beq	40024c7c <Ssd1311::CheckSSD1311()+0xc4>
40024c68:	e0400002 	sub	r0, r0, r2
40024c6c:	e16f0f10 	clz	r0, r0
40024c70:	e1a002a0 	lsr	r0, r0, #5
40024c74:	e28dd018 	add	sp, sp, #24
40024c78:	e8bd8070 	pop	{r4, r5, r6, pc}
40024c7c:	e3530005 	cmp	r3, #5
40024c80:	1afffff1 	bne	40024c4c <Ssd1311::CheckSSD1311()+0x94>
40024c84:	e3a00000 	mov	r0, #0
40024c88:	eafffff7 	b	40024c6c <Ssd1311::CheckSSD1311()+0xb4>
40024c8c:	40032d55 	andmi	r2, r3, r5, asr sp
40024c90:	40032d5b 	andmi	r2, r3, fp, asr sp

40024c94 <Ssd1311::Start()>:
40024c94:	e92d4070 	push	{r4, r5, r6, lr}
40024c98:	e1a04000 	mov	r4, r0
40024c9c:	e5901014 	ldr	r1, [r0, #20]
40024ca0:	e5d00010 	ldrb	r0, [r0, #16]
40024ca4:	eb001a65 	bl	4002b640 <h3_i2c_is_connected(unsigned char, unsigned long)>
40024ca8:	e3500000 	cmp	r0, #0
40024cac:	1a000002 	bne	40024cbc <Ssd1311::Start()+0x28>
40024cb0:	e3a05000 	mov	r5, #0
40024cb4:	e1a00005 	mov	r0, r5
40024cb8:	e8bd8070 	pop	{r4, r5, r6, pc}
40024cbc:	e1a00004 	mov	r0, r4
40024cc0:	ebffffbc 	bl	40024bb8 <Ssd1311::CheckSSD1311()>
40024cc4:	e2505000 	subs	r5, r0, #0
40024cc8:	0afffff8 	beq	40024cb0 <Ssd1311::Start()+0x1c>
40024ccc:	e59f20c0 	ldr	r2, [pc, #192]	; 40024d94 <Ssd1311::Start()+0x100>
40024cd0:	e3a03000 	mov	r3, #0
40024cd4:	e3a00020 	mov	r0, #32
40024cd8:	e1a01002 	mov	r1, r2
40024cdc:	e4c20001 	strb	r0, [r2], #1
40024ce0:	e2833001 	add	r3, r3, #1
40024ce4:	e3530015 	cmp	r3, #21
40024ce8:	1afffffb 	bne	40024cdc <Ssd1311::Start()+0x48>
40024cec:	e59f20a4 	ldr	r2, [pc, #164]	; 40024d98 <Ssd1311::Start()+0x104>
40024cf0:	e3a03040 	mov	r3, #64	; 0x40
40024cf4:	e5c13000 	strb	r3, [r1]
40024cf8:	e1a00004 	mov	r0, r4
40024cfc:	e5c23000 	strb	r3, [r2]
40024d00:	e3a0103a 	mov	r1, #58	; 0x3a
40024d04:	ebffff16 	bl	40024964 <Ssd1311::SendCommand(unsigned char)>
40024d08:	e1a00004 	mov	r0, r4
40024d0c:	e3a01009 	mov	r1, #9
40024d10:	ebffff13 	bl	40024964 <Ssd1311::SendCommand(unsigned char)>
40024d14:	e1a00004 	mov	r0, r4
40024d18:	e3a01005 	mov	r1, #5
40024d1c:	ebffff10 	bl	40024964 <Ssd1311::SendCommand(unsigned char)>
40024d20:	e1a00004 	mov	r0, r4
40024d24:	e3a0101c 	mov	r1, #28
40024d28:	ebffff0d 	bl	40024964 <Ssd1311::SendCommand(unsigned char)>
40024d2c:	e1a00004 	mov	r0, r4
40024d30:	e3a0103c 	mov	r1, #60	; 0x3c
40024d34:	ebffff0a 	bl	40024964 <Ssd1311::SendCommand(unsigned char)>
40024d38:	e1a00004 	mov	r0, r4
40024d3c:	e3a0103a 	mov	r1, #58	; 0x3a
40024d40:	ebffff07 	bl	40024964 <Ssd1311::SendCommand(unsigned char)>
40024d44:	e1a00004 	mov	r0, r4
40024d48:	e3a01072 	mov	r1, #114	; 0x72
40024d4c:	ebffff04 	bl	40024964 <Ssd1311::SendCommand(unsigned char)>
40024d50:	e1a00004 	mov	r0, r4
40024d54:	e3a01000 	mov	r1, #0
40024d58:	ebffff89 	bl	40024b84 <Ssd1311::SendData(unsigned char)>
40024d5c:	e1a00004 	mov	r0, r4
40024d60:	e3a0103c 	mov	r1, #60	; 0x3c
40024d64:	ebfffefe 	bl	40024964 <Ssd1311::SendCommand(unsigned char)>
40024d68:	e1a00004 	mov	r0, r4
40024d6c:	e3a0100c 	mov	r1, #12
40024d70:	ebfffefb 	bl	40024964 <Ssd1311::SendCommand(unsigned char)>
40024d74:	e1a00004 	mov	r0, r4
40024d78:	e3a01001 	mov	r1, #1
40024d7c:	ebfffef8 	bl	40024964 <Ssd1311::SendCommand(unsigned char)>
40024d80:	e3a02000 	mov	r2, #0
40024d84:	e1a00004 	mov	r0, r4
40024d88:	e1a01002 	mov	r1, r2
40024d8c:	ebffff3c 	bl	40024a84 <Ssd1311::SelectRamRom(unsigned long, unsigned long)>
40024d90:	eaffffc7 	b	40024cb4 <Ssd1311::Start()+0x20>
40024d94:	40062e9c 	mulmi	r6, ip, lr
40024d98:	40062e84 	andmi	r2, r6, r4, lsl #29

40024d9c <sleep_timer(long)>:
40024d9c:	e59f3034 	ldr	r3, [pc, #52]	; 40024dd8 <sleep_timer(long)+0x3c>
40024da0:	e5933000 	ldr	r3, [r3]
40024da4:	e5930014 	ldr	r0, [r3, #20]
40024da8:	e3500000 	cmp	r0, #0
40024dac:	059f0028 	ldreq	r0, [pc, #40]	; 40024ddc <sleep_timer(long)+0x40>
40024db0:	0a000007 	beq	40024dd4 <sleep_timer(long)+0x38>
40024db4:	e3a01001 	mov	r1, #1
40024db8:	e92d4010 	push	{r4, lr}
40024dbc:	e5c31011 	strb	r1, [r3, #17]
40024dc0:	e5903000 	ldr	r3, [r0]
40024dc4:	e5933028 	ldr	r3, [r3, #40]	; 0x28
40024dc8:	e12fff33 	blx	r3
40024dcc:	e8bd4010 	pop	{r4, lr}
40024dd0:	e59f0004 	ldr	r0, [pc, #4]	; 40024ddc <sleep_timer(long)+0x40>
40024dd4:	ea000b6c 	b	40027b8c <SoftwareTimerDelete(long&)>
40024dd8:	4003407c 	andmi	r4, r3, ip, ror r0
40024ddc:	400336e0 	andmi	r3, r3, r0, ror #13

40024de0 <Display::SetSleepTimer(bool)>:
40024de0:	e3510000 	cmp	r1, #0
40024de4:	1a000001 	bne	40024df0 <Display::SetSleepTimer(bool)+0x10>
40024de8:	e59f0038 	ldr	r0, [pc, #56]	; 40024e28 <Display::SetSleepTimer(bool)+0x48>
40024dec:	ea000b66 	b	40027b8c <SoftwareTimerDelete(long&)>
40024df0:	e92d4010 	push	{r4, lr}
40024df4:	e59f402c 	ldr	r4, [pc, #44]	; 40024e28 <Display::SetSleepTimer(bool)+0x48>
40024df8:	e590000c 	ldr	r0, [r0, #12]
40024dfc:	e5942000 	ldr	r2, [r4]
40024e00:	e3720001 	cmn	r2, #1
40024e04:	1a000003 	bne	40024e18 <Display::SetSleepTimer(bool)+0x38>
40024e08:	e59f101c 	ldr	r1, [pc, #28]	; 40024e2c <Display::SetSleepTimer(bool)+0x4c>
40024e0c:	eb000b43 	bl	40027b20 <SoftwareTimerAdd(unsigned long, void (*)(long))>
40024e10:	e5840000 	str	r0, [r4]
40024e14:	e8bd8010 	pop	{r4, pc}
40024e18:	e1a01000 	mov	r1, r0
40024e1c:	e1a00002 	mov	r0, r2
40024e20:	e8bd4010 	pop	{r4, lr}
40024e24:	ea000b78 	b	40027c0c <SoftwareTimerChange(long, unsigned long)>
40024e28:	400336e0 	andmi	r3, r3, r0, ror #13
40024e2c:	40024d9c 	mulmi	r2, ip, sp

40024e30 <display::timeout::irq_init()>:
40024e30:	e12fff1e 	bx	lr

40024e34 <PropertiesBuilder::AddHex(char const*, unsigned long, bool, int)>:
40024e34:	e92d4037 	push	{r0, r1, r2, r4, r5, lr}
40024e38:	e1d0e0b6 	ldrh	lr, [r0, #6]
40024e3c:	e1d050b4 	ldrh	r5, [r0, #4]
40024e40:	e59dc018 	ldr	ip, [sp, #24]
40024e44:	e15e0005 	cmp	lr, r5
40024e48:	3a000002 	bcc	40024e58 <PropertiesBuilder::AddHex(char const*, unsigned long, bool, int)+0x24>
40024e4c:	e3a00000 	mov	r0, #0
40024e50:	e28dd00c 	add	sp, sp, #12
40024e54:	e8bd8030 	pop	{r4, r5, pc}
40024e58:	e045500e 	sub	r5, r5, lr
40024e5c:	e1a04000 	mov	r4, r0
40024e60:	e5900000 	ldr	r0, [r0]
40024e64:	e3530000 	cmp	r3, #0
40024e68:	e080000e 	add	r0, r0, lr
40024e6c:	e5d4e008 	ldrb	lr, [r4, #8]
40024e70:	1a000006 	bne	40024e90 <PropertiesBuilder::AddHex(char const*, unsigned long, bool, int)+0x5c>
40024e74:	e35e0000 	cmp	lr, #0
40024e78:	1a000006 	bne	40024e98 <PropertiesBuilder::AddHex(char const*, unsigned long, bool, int)+0x64>
40024e7c:	e58d2004 	str	r2, [sp, #4]
40024e80:	e1a03001 	mov	r3, r1
40024e84:	e59f2054 	ldr	r2, [pc, #84]	; 40024ee0 <PropertiesBuilder::AddHex(char const*, unsigned long, bool, int)+0xac>
40024e88:	e58dc000 	str	ip, [sp]
40024e8c:	ea000005 	b	40024ea8 <PropertiesBuilder::AddHex(char const*, unsigned long, bool, int)+0x74>
40024e90:	e35e0000 	cmp	lr, #0
40024e94:	0a00000c 	beq	40024ecc <PropertiesBuilder::AddHex(char const*, unsigned long, bool, int)+0x98>
40024e98:	e58d2004 	str	r2, [sp, #4]
40024e9c:	e1a03001 	mov	r3, r1
40024ea0:	e59f203c 	ldr	r2, [pc, #60]	; 40024ee4 <PropertiesBuilder::AddHex(char const*, unsigned long, bool, int)+0xb0>
40024ea4:	e58dc000 	str	ip, [sp]
40024ea8:	e1a01005 	mov	r1, r5
40024eac:	eb001f54 	bl	4002cc04 <snprintf>
40024eb0:	e1550000 	cmp	r5, r0
40024eb4:	baffffe4 	blt	40024e4c <PropertiesBuilder::AddHex(char const*, unsigned long, bool, int)+0x18>
40024eb8:	e1d430b6 	ldrh	r3, [r4, #6]
40024ebc:	e0830000 	add	r0, r3, r0
40024ec0:	e1c400b6 	strh	r0, [r4, #6]
40024ec4:	e3a00001 	mov	r0, #1
40024ec8:	eaffffe0 	b	40024e50 <PropertiesBuilder::AddHex(char const*, unsigned long, bool, int)+0x1c>
40024ecc:	e58d2004 	str	r2, [sp, #4]
40024ed0:	e1a03001 	mov	r3, r1
40024ed4:	e59f200c 	ldr	r2, [pc, #12]	; 40024ee8 <PropertiesBuilder::AddHex(char const*, unsigned long, bool, int)+0xb4>
40024ed8:	e58dc000 	str	ip, [sp]
40024edc:	eafffff1 	b	40024ea8 <PropertiesBuilder::AddHex(char const*, unsigned long, bool, int)+0x74>
40024ee0:	40032dca 	andmi	r2, r3, sl, asr #27
40024ee4:	40032dbd 			; <UNDEFINED> instruction: 0x40032dbd
40024ee8:	40032dcb 	andmi	r2, r3, fp, asr #27

40024eec <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)>:
40024eec:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
40024ef0:	e1a04002 	mov	r4, r2
40024ef4:	e5802000 	str	r2, [r0]
40024ef8:	e3a02000 	mov	r2, #0
40024efc:	e1c020b6 	strh	r2, [r0, #6]
40024f00:	e1a06000 	mov	r6, r0
40024f04:	e59f20b4 	ldr	r2, [pc, #180]	; 40024fc0 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)+0xd4>
40024f08:	e1a0c001 	mov	ip, r1
40024f0c:	e1c030b4 	strh	r3, [r0, #4]
40024f10:	e5d20000 	ldrb	r0, [r2]
40024f14:	e2000001 	and	r0, r0, #1
40024f18:	e5c60008 	strb	r0, [r6, #8]
40024f1c:	e1a0500c 	mov	r5, ip
40024f20:	e28cc001 	add	ip, ip, #1
40024f24:	e5d52000 	ldrb	r2, [r5]
40024f28:	e3520000 	cmp	r2, #0
40024f2c:	1afffffa 	bne	40024f1c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)+0x30>
40024f30:	e0455001 	sub	r5, r5, r1
40024f34:	e3500000 	cmp	r0, #0
40024f38:	e6ff3073 	uxth	r3, r3
40024f3c:	0a000012 	beq	40024f8c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)+0xa0>
40024f40:	e2857004 	add	r7, r5, #4
40024f44:	e1570003 	cmp	r7, r3
40024f48:	8a00000d 	bhi	40024f84 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)+0x98>
40024f4c:	e3a0807b 	mov	r8, #123	; 0x7b
40024f50:	e3a09022 	mov	r9, #34	; 0x22
40024f54:	e5c48000 	strb	r8, [r4]
40024f58:	e1a02005 	mov	r2, r5
40024f5c:	e5c49001 	strb	r9, [r4, #1]
40024f60:	e2840002 	add	r0, r4, #2
40024f64:	ebffc136 	bl	40015444 <memcpy>
40024f68:	e0843005 	add	r3, r4, r5
40024f6c:	e3a0203a 	mov	r2, #58	; 0x3a
40024f70:	e2855005 	add	r5, r5, #5
40024f74:	e5c39002 	strb	r9, [r3, #2]
40024f78:	e5c32003 	strb	r2, [r3, #3]
40024f7c:	e1c650b6 	strh	r5, [r6, #6]
40024f80:	e7c48007 	strb	r8, [r4, r7]
40024f84:	e1a00006 	mov	r0, r6
40024f88:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
40024f8c:	e2857002 	add	r7, r5, #2
40024f90:	e1570003 	cmp	r7, r3
40024f94:	8afffffa 	bhi	40024f84 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)+0x98>
40024f98:	e1a00004 	mov	r0, r4
40024f9c:	e3a03023 	mov	r3, #35	; 0x23
40024fa0:	e0844005 	add	r4, r4, r5
40024fa4:	e1a02005 	mov	r2, r5
40024fa8:	e4c03001 	strb	r3, [r0], #1
40024fac:	ebffc124 	bl	40015444 <memcpy>
40024fb0:	e1c670b6 	strh	r7, [r6, #6]
40024fb4:	e3a0300a 	mov	r3, #10
40024fb8:	e5c43001 	strb	r3, [r4, #1]
40024fbc:	eafffff0 	b	40024f84 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)+0x98>
40024fc0:	40062eb1 			; <UNDEFINED> instruction: 0x40062eb1

40024fc4 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)>:
40024fc4:	e92d40f0 	push	{r4, r5, r6, r7, lr}
40024fc8:	e24dd014 	sub	sp, sp, #20
40024fcc:	e1d0c0b6 	ldrh	ip, [r0, #6]
40024fd0:	e1d050b4 	ldrh	r5, [r0, #4]
40024fd4:	e15c0005 	cmp	ip, r5
40024fd8:	3a000002 	bcc	40024fe8 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)+0x24>
40024fdc:	e3a00000 	mov	r0, #0
40024fe0:	e28dd014 	add	sp, sp, #20
40024fe4:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
40024fe8:	e045500c 	sub	r5, r5, ip
40024fec:	e1a04000 	mov	r4, r0
40024ff0:	e5900000 	ldr	r0, [r0]
40024ff4:	e3530000 	cmp	r3, #0
40024ff8:	e7e7e452 	ubfx	lr, r2, #8, #8
40024ffc:	e080000c 	add	r0, r0, ip
40025000:	e6efc072 	uxtb	ip, r2
40025004:	e7e76852 	ubfx	r6, r2, #16, #8
40025008:	e5d47008 	ldrb	r7, [r4, #8]
4002500c:	e1a02c22 	lsr	r2, r2, #24
40025010:	1a000007 	bne	40025034 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)+0x70>
40025014:	e3570000 	cmp	r7, #0
40025018:	1a000007 	bne	4002503c <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)+0x78>
4002501c:	e58d200c 	str	r2, [sp, #12]
40025020:	e1a03001 	mov	r3, r1
40025024:	e59f2060 	ldr	r2, [pc, #96]	; 4002508c <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)+0xc8>
40025028:	e58d6008 	str	r6, [sp, #8]
4002502c:	e88d5000 	stm	sp, {ip, lr}
40025030:	ea000006 	b	40025050 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)+0x8c>
40025034:	e3570000 	cmp	r7, #0
40025038:	0a00000d 	beq	40025074 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)+0xb0>
4002503c:	e58d200c 	str	r2, [sp, #12]
40025040:	e1a03001 	mov	r3, r1
40025044:	e59f2044 	ldr	r2, [pc, #68]	; 40025090 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)+0xcc>
40025048:	e58d6008 	str	r6, [sp, #8]
4002504c:	e88d5000 	stm	sp, {ip, lr}
40025050:	e1a01005 	mov	r1, r5
40025054:	eb001eea 	bl	4002cc04 <snprintf>
40025058:	e1550000 	cmp	r5, r0
4002505c:	baffffde 	blt	40024fdc <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)+0x18>
40025060:	e1d430b6 	ldrh	r3, [r4, #6]
40025064:	e0830000 	add	r0, r3, r0
40025068:	e1c400b6 	strh	r0, [r4, #6]
4002506c:	e3a00001 	mov	r0, #1
40025070:	eaffffda 	b	40024fe0 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)+0x1c>
40025074:	e58d200c 	str	r2, [sp, #12]
40025078:	e1a03001 	mov	r3, r1
4002507c:	e59f2010 	ldr	r2, [pc, #16]	; 40025094 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)+0xd0>
40025080:	e58d6008 	str	r6, [sp, #8]
40025084:	e88d5000 	stm	sp, {ip, lr}
40025088:	eafffff0 	b	40025050 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)+0x8c>
4002508c:	40032de8 	andmi	r2, r3, r8, ror #27
40025090:	40032dd4 	ldrdmi	r2, [r3], -r4
40025094:	40032de9 	andmi	r2, r3, r9, ror #27

40025098 <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)>:
40025098:	e92d4030 	push	{r4, r5, lr}
4002509c:	e24dd014 	sub	sp, sp, #20
400250a0:	e1d0c0b6 	ldrh	ip, [r0, #6]
400250a4:	e1d050b4 	ldrh	r5, [r0, #4]
400250a8:	e15c0005 	cmp	ip, r5
400250ac:	3a000002 	bcc	400250bc <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)+0x24>
400250b0:	e3a00000 	mov	r0, #0
400250b4:	e28dd014 	add	sp, sp, #20
400250b8:	e8bd8030 	pop	{r4, r5, pc}
400250bc:	e045500c 	sub	r5, r5, ip
400250c0:	e1a04000 	mov	r4, r0
400250c4:	e5900000 	ldr	r0, [r0]
400250c8:	e59fe068 	ldr	lr, [pc, #104]	; 40025138 <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)+0xa0>
400250cc:	e080000c 	add	r0, r0, ip
400250d0:	e5d4c008 	ldrb	ip, [r4, #8]
400250d4:	e35c0000 	cmp	ip, #0
400250d8:	e59fc05c 	ldr	ip, [pc, #92]	; 4002513c <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)+0xa4>
400250dc:	0a00000e 	beq	4002511c <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)+0x84>
400250e0:	e3520000 	cmp	r2, #0
400250e4:	e1cd20f4 	strd	r2, [sp, #4]
400250e8:	e59f2050 	ldr	r2, [pc, #80]	; 40025140 <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)+0xa8>
400250ec:	e1a03001 	mov	r3, r1
400250f0:	d1a0c00e 	movle	ip, lr
400250f4:	e58dc000 	str	ip, [sp]
400250f8:	e1a01005 	mov	r1, r5
400250fc:	eb001ec0 	bl	4002cc04 <snprintf>
40025100:	e1550000 	cmp	r5, r0
40025104:	baffffe9 	blt	400250b0 <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)+0x18>
40025108:	e1d430b6 	ldrh	r3, [r4, #6]
4002510c:	e0830000 	add	r0, r3, r0
40025110:	e1c400b6 	strh	r0, [r4, #6]
40025114:	e3a00001 	mov	r0, #1
40025118:	eaffffe5 	b	400250b4 <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)+0x1c>
4002511c:	e3520000 	cmp	r2, #0
40025120:	d1a0c00e 	movle	ip, lr
40025124:	e1cd20f4 	strd	r2, [sp, #4]
40025128:	e58dc000 	str	ip, [sp]
4002512c:	e1a03001 	mov	r3, r1
40025130:	e59f200c 	ldr	r2, [pc, #12]	; 40025144 <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)+0xac>
40025134:	eaffffef 	b	400250f8 <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)+0x60>
40025138:	4002ded2 	ldrdmi	sp, [r2], -r2
4002513c:	40032df9 	strdmi	r2, [r3], -r9
40025140:	40032dfb 	strdmi	r2, [r3], -fp
40025144:	40032e0f 	andmi	r2, r3, pc, lsl #28

40025148 <PropertiesBuilder::AddComment(char const*)>:
40025148:	e92d4070 	push	{r4, r5, r6, lr}
4002514c:	e5d06008 	ldrb	r6, [r0, #8]
40025150:	e3560000 	cmp	r6, #0
40025154:	1a000010 	bne	4002519c <PropertiesBuilder::AddComment(char const*)+0x54>
40025158:	e1a04000 	mov	r4, r0
4002515c:	e1d000b6 	ldrh	r0, [r0, #6]
40025160:	e1d450b4 	ldrh	r5, [r4, #4]
40025164:	e1500005 	cmp	r0, r5
40025168:	2a00000b 	bcs	4002519c <PropertiesBuilder::AddComment(char const*)+0x54>
4002516c:	e594c000 	ldr	ip, [r4]
40025170:	e1a03001 	mov	r3, r1
40025174:	e0455000 	sub	r5, r5, r0
40025178:	e59f2024 	ldr	r2, [pc, #36]	; 400251a4 <PropertiesBuilder::AddComment(char const*)+0x5c>
4002517c:	e1a01005 	mov	r1, r5
40025180:	e08c0000 	add	r0, ip, r0
40025184:	eb001e9e 	bl	4002cc04 <snprintf>
40025188:	e1550000 	cmp	r5, r0
4002518c:	a3a06001 	movge	r6, #1
40025190:	a1d430b6 	ldrhge	r3, [r4, #6]
40025194:	a0830000 	addge	r0, r3, r0
40025198:	a1c400b6 	strhge	r0, [r4, #6]
4002519c:	e1a00006 	mov	r0, r6
400251a0:	e8bd8070 	pop	{r4, r5, r6, pc}
400251a4:	40032e1f 	andmi	r2, r3, pc, lsl lr

400251a8 <properties::convert_json_file(char*, unsigned long, bool)>:
400251a8:	e5d03000 	ldrb	r3, [r0]
400251ac:	e353007b 	cmp	r3, #123	; 0x7b
400251b0:	1a00005d 	bne	4002532c <properties::convert_json_file(char*, unsigned long, bool)+0x184>
400251b4:	e3520000 	cmp	r2, #0
400251b8:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
400251bc:	0a000018 	beq	40025224 <properties::convert_json_file(char*, unsigned long, bool)+0x7c>
400251c0:	e3a03001 	mov	r3, #1
400251c4:	e1a05000 	mov	r5, r0
400251c8:	e1a0c003 	mov	ip, r3
400251cc:	e3a0603d 	mov	r6, #61	; 0x3d
400251d0:	e3a0700a 	mov	r7, #10
400251d4:	e1530001 	cmp	r3, r1
400251d8:	2a00004f 	bcs	4002531c <properties::convert_json_file(char*, unsigned long, bool)+0x174>
400251dc:	e1530001 	cmp	r3, r1
400251e0:	e1a0e000 	mov	lr, r0
400251e4:	e5d08000 	ldrb	r8, [r0]
400251e8:	e2833001 	add	r3, r3, #1
400251ec:	e2800001 	add	r0, r0, #1
400251f0:	3a000037 	bcc	400252d4 <properties::convert_json_file(char*, unsigned long, bool)+0x12c>
400251f4:	e04c000e 	sub	r0, ip, lr
400251f8:	e080c00e 	add	ip, r0, lr
400251fc:	e1a0900e 	mov	r9, lr
40025200:	e4de4001 	ldrb	r4, [lr], #1
40025204:	e2838001 	add	r8, r3, #1
40025208:	e3540022 	cmp	r4, #34	; 0x22
4002520c:	0a000048 	beq	40025334 <properties::convert_json_file(char*, unsigned long, bool)+0x18c>
40025210:	e1530001 	cmp	r3, r1
40025214:	2a00004b 	bcs	40025348 <properties::convert_json_file(char*, unsigned long, bool)+0x1a0>
40025218:	e4c54001 	strb	r4, [r5], #1
4002521c:	e1a03008 	mov	r3, r8
40025220:	eafffff4 	b	400251f8 <properties::convert_json_file(char*, unsigned long, bool)+0x50>
40025224:	e3a03023 	mov	r3, #35	; 0x23
40025228:	e4c03001 	strb	r3, [r0], #1
4002522c:	e3a03001 	mov	r3, #1
40025230:	e1a0e000 	mov	lr, r0
40025234:	e1530001 	cmp	r3, r1
40025238:	2a000023 	bcs	400252cc <properties::convert_json_file(char*, unsigned long, bool)+0x124>
4002523c:	e4dec001 	ldrb	ip, [lr], #1
40025240:	e35c0022 	cmp	ip, #34	; 0x22
40025244:	12833001 	addne	r3, r3, #1
40025248:	1afffff9 	bne	40025234 <properties::convert_json_file(char*, unsigned long, bool)+0x8c>
4002524c:	e1a0600e 	mov	r6, lr
40025250:	e1a04000 	mov	r4, r0
40025254:	e3a05001 	mov	r5, #1
40025258:	e5d67000 	ldrb	r7, [r6]
4002525c:	e1a0e006 	mov	lr, r6
40025260:	e1a00004 	mov	r0, r4
40025264:	e1a0c005 	mov	ip, r5
40025268:	e3570022 	cmp	r7, #34	; 0x22
4002526c:	e2866001 	add	r6, r6, #1
40025270:	e2844001 	add	r4, r4, #1
40025274:	e2855001 	add	r5, r5, #1
40025278:	0a000006 	beq	40025298 <properties::convert_json_file(char*, unsigned long, bool)+0xf0>
4002527c:	e5447001 	strb	r7, [r4, #-1]
40025280:	e2833001 	add	r3, r3, #1
40025284:	e1510003 	cmp	r1, r3
40025288:	e1a0e006 	mov	lr, r6
4002528c:	8afffff1 	bhi	40025258 <properties::convert_json_file(char*, unsigned long, bool)+0xb0>
40025290:	e1a0c005 	mov	ip, r5
40025294:	e1a00004 	mov	r0, r4
40025298:	e1a05000 	mov	r5, r0
4002529c:	e28cc001 	add	ip, ip, #1
400252a0:	e3a0000a 	mov	r0, #10
400252a4:	e4c50001 	strb	r0, [r5], #1
400252a8:	e1a0000e 	mov	r0, lr
400252ac:	e4de4001 	ldrb	r4, [lr], #1
400252b0:	e354007b 	cmp	r4, #123	; 0x7b
400252b4:	0affffc4 	beq	400251cc <properties::convert_json_file(char*, unsigned long, bool)+0x24>
400252b8:	e1530001 	cmp	r3, r1
400252bc:	e2834001 	add	r4, r3, #1
400252c0:	e1a03004 	mov	r3, r4
400252c4:	3afffff7 	bcc	400252a8 <properties::convert_json_file(char*, unsigned long, bool)+0x100>
400252c8:	eaffffbf 	b	400251cc <properties::convert_json_file(char*, unsigned long, bool)+0x24>
400252cc:	e3a0c001 	mov	ip, #1
400252d0:	eafffff0 	b	40025298 <properties::convert_json_file(char*, unsigned long, bool)+0xf0>
400252d4:	e3580022 	cmp	r8, #34	; 0x22
400252d8:	1affffbf 	bne	400251dc <properties::convert_json_file(char*, unsigned long, bool)+0x34>
400252dc:	e1a0e000 	mov	lr, r0
400252e0:	eaffffc3 	b	400251f4 <properties::convert_json_file(char*, unsigned long, bool)+0x4c>
400252e4:	e350003a 	cmp	r0, #58	; 0x3a
400252e8:	1a000016 	bne	40025348 <properties::convert_json_file(char*, unsigned long, bool)+0x1a0>
400252ec:	e1a04009 	mov	r4, r9
400252f0:	ea00001a 	b	40025360 <properties::convert_json_file(char*, unsigned long, bool)+0x1b8>
400252f4:	e3500022 	cmp	r0, #34	; 0x22
400252f8:	01a0e004 	moveq	lr, r4
400252fc:	ea000021 	b	40025388 <properties::convert_json_file(char*, unsigned long, bool)+0x1e0>
40025300:	e2443020 	sub	r3, r4, #32
40025304:	e353005a 	cmp	r3, #90	; 0x5a
40025308:	e1a03008 	mov	r3, r8
4002530c:	94c54001 	strbls	r4, [r5], #1
40025310:	928cc001 	addls	ip, ip, #1
40025314:	91a0e000 	movls	lr, r0
40025318:	ea00001d 	b	40025394 <properties::convert_json_file(char*, unsigned long, bool)+0x1ec>
4002531c:	e3520000 	cmp	r2, #0
40025320:	124cc001 	subne	ip, ip, #1
40025324:	e1a0000c 	mov	r0, ip
40025328:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
4002532c:	e3e00000 	mvn	r0, #0
40025330:	e12fff1e 	bx	lr
40025334:	e1a00005 	mov	r0, r5
40025338:	e28cc001 	add	ip, ip, #1
4002533c:	e1a08003 	mov	r8, r3
40025340:	e4c06001 	strb	r6, [r0], #1
40025344:	e1a05000 	mov	r5, r0
40025348:	e1580001 	cmp	r8, r1
4002534c:	e1a04009 	mov	r4, r9
40025350:	e5d90000 	ldrb	r0, [r9]
40025354:	e2888001 	add	r8, r8, #1
40025358:	e2899001 	add	r9, r9, #1
4002535c:	3affffe0 	bcc	400252e4 <properties::convert_json_file(char*, unsigned long, bool)+0x13c>
40025360:	e5d40000 	ldrb	r0, [r4]
40025364:	e1a0e004 	mov	lr, r4
40025368:	e1a03008 	mov	r3, r8
4002536c:	e2844001 	add	r4, r4, #1
40025370:	e3500020 	cmp	r0, #32
40025374:	e2888001 	add	r8, r8, #1
40025378:	1affffdd 	bne	400252f4 <properties::convert_json_file(char*, unsigned long, bool)+0x14c>
4002537c:	e1530001 	cmp	r3, r1
40025380:	3afffff6 	bcc	40025360 <properties::convert_json_file(char*, unsigned long, bool)+0x1b8>
40025384:	e1a03008 	mov	r3, r8
40025388:	e5de0000 	ldrb	r0, [lr]
4002538c:	e3500022 	cmp	r0, #34	; 0x22
40025390:	028ee001 	addeq	lr, lr, #1
40025394:	e1a0000e 	mov	r0, lr
40025398:	e2838001 	add	r8, r3, #1
4002539c:	e4d04001 	ldrb	r4, [r0], #1
400253a0:	e3540022 	cmp	r4, #34	; 0x22
400253a4:	1354002c 	cmpne	r4, #44	; 0x2c
400253a8:	0a000004 	beq	400253c0 <properties::convert_json_file(char*, unsigned long, bool)+0x218>
400253ac:	e354007d 	cmp	r4, #125	; 0x7d
400253b0:	0a000002 	beq	400253c0 <properties::convert_json_file(char*, unsigned long, bool)+0x218>
400253b4:	e1530001 	cmp	r3, r1
400253b8:	3affffd0 	bcc	40025300 <properties::convert_json_file(char*, unsigned long, bool)+0x158>
400253bc:	e1a03008 	mov	r3, r8
400253c0:	e354002c 	cmp	r4, #44	; 0x2c
400253c4:	13540022 	cmpne	r4, #34	; 0x22
400253c8:	e2833001 	add	r3, r3, #1
400253cc:	03a0e001 	moveq	lr, #1
400253d0:	13a0e000 	movne	lr, #0
400253d4:	e354007d 	cmp	r4, #125	; 0x7d
400253d8:	038ee001 	orreq	lr, lr, #1
400253dc:	e35e0000 	cmp	lr, #0
400253e0:	14c57001 	strbne	r7, [r5], #1
400253e4:	128cc001 	addne	ip, ip, #1
400253e8:	eaffff79 	b	400251d4 <properties::convert_json_file(char*, unsigned long, bool)+0x2c>

400253ec <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>:
400253ec:	e8800006 	stm	r0, {r1, r2}
400253f0:	e12fff1e 	bx	lr

400253f4 <ReadConfigFile::~ReadConfigFile()>:
400253f4:	e12fff1e 	bx	lr

400253f8 <ReadConfigFile::Read(char const*)>:
400253f8:	e92d40f0 	push	{r4, r5, r6, r7, lr}
400253fc:	e1a05000 	mov	r5, r0
40025400:	e24dd084 	sub	sp, sp, #132	; 0x84
40025404:	e1a00001 	mov	r0, r1
40025408:	e59f108c 	ldr	r1, [pc, #140]	; 4002549c <ReadConfigFile::Read(char const*)+0xa4>
4002540c:	eb0004ba 	bl	400266fc <fopen>
40025410:	e2504000 	subs	r4, r0, #0
40025414:	01a00004 	moveq	r0, r4
40025418:	0a00001d 	beq	40025494 <ReadConfigFile::Read(char const*)+0x9c>
4002541c:	e1a0600d 	mov	r6, sp
40025420:	e3a07000 	mov	r7, #0
40025424:	e1a02004 	mov	r2, r4
40025428:	e3a0107f 	mov	r1, #127	; 0x7f
4002542c:	e1a00006 	mov	r0, r6
40025430:	eb000545 	bl	4002694c <fgets>
40025434:	e1560000 	cmp	r6, r0
40025438:	1a000012 	bne	40025488 <ReadConfigFile::Read(char const*)+0x90>
4002543c:	e5dd3000 	ldrb	r3, [sp]
40025440:	e3530060 	cmp	r3, #96	; 0x60
40025444:	9afffff6 	bls	40025424 <ReadConfigFile::Read(char const*)+0x2c>
40025448:	e1a02006 	mov	r2, r6
4002544c:	e3a03000 	mov	r3, #0
40025450:	e4d21001 	ldrb	r1, [r2], #1
40025454:	e3510000 	cmp	r1, #0
40025458:	0a000005 	beq	40025474 <ReadConfigFile::Read(char const*)+0x7c>
4002545c:	e351000a 	cmp	r1, #10
40025460:	1351000d 	cmpne	r1, #13
40025464:	e2833001 	add	r3, r3, #1
40025468:	05427001 	strbeq	r7, [r2, #-1]
4002546c:	e353007f 	cmp	r3, #127	; 0x7f
40025470:	1afffff6 	bne	40025450 <ReadConfigFile::Read(char const*)+0x58>
40025474:	e5953000 	ldr	r3, [r5]
40025478:	e1a01006 	mov	r1, r6
4002547c:	e5950004 	ldr	r0, [r5, #4]
40025480:	e12fff33 	blx	r3
40025484:	eaffffe6 	b	40025424 <ReadConfigFile::Read(char const*)+0x2c>
40025488:	e1a00004 	mov	r0, r4
4002548c:	eb0004dd 	bl	40026808 <fclose>
40025490:	e3a00001 	mov	r0, #1
40025494:	e28dd084 	add	sp, sp, #132	; 0x84
40025498:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
4002549c:	4003104b 	andmi	r1, r3, fp, asr #32

400254a0 <ReadConfigFile::Read(char const*, unsigned int)>:
400254a0:	e92d40f0 	push	{r4, r5, r6, r7, lr}
400254a4:	e1a06000 	mov	r6, r0
400254a8:	e24dd084 	sub	sp, sp, #132	; 0x84
400254ac:	e1a05001 	mov	r5, r1
400254b0:	e1a04002 	mov	r4, r2
400254b4:	e3a07000 	mov	r7, #0
400254b8:	e3a0300a 	mov	r3, #10
400254bc:	e5cd3000 	strb	r3, [sp]
400254c0:	e3540000 	cmp	r4, #0
400254c4:	0a000020 	beq	4002554c <ReadConfigFile::Read(char const*, unsigned int)+0xac>
400254c8:	e1a0300d 	mov	r3, sp
400254cc:	e1a02005 	mov	r2, r5
400254d0:	e1a01003 	mov	r1, r3
400254d4:	e5d2c000 	ldrb	ip, [r2]
400254d8:	e1a00002 	mov	r0, r2
400254dc:	e2822001 	add	r2, r2, #1
400254e0:	e35c000d 	cmp	ip, #13
400254e4:	135c000a 	cmpne	ip, #10
400254e8:	0a00000e 	beq	40025528 <ReadConfigFile::Read(char const*, unsigned int)+0x88>
400254ec:	e4c3c001 	strb	ip, [r3], #1
400254f0:	e1a05002 	mov	r5, r2
400254f4:	e0430001 	sub	r0, r3, r1
400254f8:	e350007f 	cmp	r0, #127	; 0x7f
400254fc:	ca000012 	bgt	4002554c <ReadConfigFile::Read(char const*, unsigned int)+0xac>
40025500:	e2544001 	subs	r4, r4, #1
40025504:	1afffff2 	bne	400254d4 <ReadConfigFile::Read(char const*, unsigned int)+0x34>
40025508:	e5dd2000 	ldrb	r2, [sp]
4002550c:	e352002f 	cmp	r2, #47	; 0x2f
40025510:	9affffea 	bls	400254c0 <ReadConfigFile::Read(char const*, unsigned int)+0x20>
40025514:	e5c37000 	strb	r7, [r3]
40025518:	e5960004 	ldr	r0, [r6, #4]
4002551c:	e5963000 	ldr	r3, [r6]
40025520:	e12fff33 	blx	r3
40025524:	eaffffe5 	b	400254c0 <ReadConfigFile::Read(char const*, unsigned int)+0x20>
40025528:	e3540000 	cmp	r4, #0
4002552c:	e1a05000 	mov	r5, r0
40025530:	0afffff4 	beq	40025508 <ReadConfigFile::Read(char const*, unsigned int)+0x68>
40025534:	e4d02001 	ldrb	r2, [r0], #1
40025538:	e352000d 	cmp	r2, #13
4002553c:	1352000a 	cmpne	r2, #10
40025540:	1afffff0 	bne	40025508 <ReadConfigFile::Read(char const*, unsigned int)+0x68>
40025544:	e2444001 	sub	r4, r4, #1
40025548:	eafffff6 	b	40025528 <ReadConfigFile::Read(char const*, unsigned int)+0x88>
4002554c:	e28dd084 	add	sp, sp, #132	; 0x84
40025550:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}

40025554 <Sscan::Char(char const*, char const*, char*, unsigned long&)>:
40025554:	e92d4070 	push	{r4, r5, r6, lr}
40025558:	e1a05002 	mov	r5, r2
4002555c:	e1a04003 	mov	r4, r3
40025560:	eb000014 	bl	400255b8 <Sscan::checkName(char const*, char const*)>
40025564:	e3500000 	cmp	r0, #0
40025568:	0a00000e 	beq	400255a8 <Sscan::Char(char const*, char const*, char*, unsigned long&)+0x54>
4002556c:	e3a01000 	mov	r1, #0
40025570:	e7d03001 	ldrb	r3, [r0, r1]
40025574:	e6ff2071 	uxth	r2, r1
40025578:	e594c000 	ldr	ip, [r4]
4002557c:	e3530000 	cmp	r3, #0
40025580:	0a000005 	beq	4002559c <Sscan::Char(char const*, char const*, char*, unsigned long&)+0x48>
40025584:	e15c0002 	cmp	ip, r2
40025588:	87c53001 	strbhi	r3, [r5, r1]
4002558c:	82811001 	addhi	r1, r1, #1
40025590:	8afffff6 	bhi	40025570 <Sscan::Char(char const*, char const*, char*, unsigned long&)+0x1c>
40025594:	e353000a 	cmp	r3, #10
40025598:	1a000004 	bne	400255b0 <Sscan::Char(char const*, char const*, char*, unsigned long&)+0x5c>
4002559c:	e5842000 	str	r2, [r4]
400255a0:	e3a00000 	mov	r0, #0
400255a4:	e8bd8070 	pop	{r4, r5, r6, pc}
400255a8:	e3a00001 	mov	r0, #1
400255ac:	e8bd8070 	pop	{r4, r5, r6, pc}
400255b0:	e3a00002 	mov	r0, #2
400255b4:	e8bd8070 	pop	{r4, r5, r6, pc}

400255b8 <Sscan::checkName(char const*, char const*)>:
400255b8:	e2411001 	sub	r1, r1, #1
400255bc:	e1a03000 	mov	r3, r0
400255c0:	e5f10001 	ldrb	r0, [r1, #1]!
400255c4:	e1a0c003 	mov	ip, r3
400255c8:	e4d32001 	ldrb	r2, [r3], #1
400255cc:	e3500000 	cmp	r0, #0
400255d0:	0a000005 	beq	400255ec <Sscan::checkName(char const*, char const*)+0x34>
400255d4:	e3520000 	cmp	r2, #0
400255d8:	0a000001 	beq	400255e4 <Sscan::checkName(char const*, char const*)+0x2c>
400255dc:	e1500002 	cmp	r0, r2
400255e0:	0afffff6 	beq	400255c0 <Sscan::checkName(char const*, char const*)+0x8>
400255e4:	e3a00000 	mov	r0, #0
400255e8:	e12fff1e 	bx	lr
400255ec:	e352003d 	cmp	r2, #61	; 0x3d
400255f0:	112fff1e 	bxne	lr
400255f4:	e5dc0001 	ldrb	r0, [ip, #1]
400255f8:	e21000df 	ands	r0, r0, #223	; 0xdf
400255fc:	128c0001 	addne	r0, ip, #1
40025600:	e12fff1e 	bx	lr

40025604 <Sscan::Float(char const*, char const*, float&)>:
40025604:	e92d4070 	push	{r4, r5, r6, lr}
40025608:	e1a04002 	mov	r4, r2
4002560c:	ebffffe9 	bl	400255b8 <Sscan::checkName(char const*, char const*)>
40025610:	e3500000 	cmp	r0, #0
40025614:	0a00003b 	beq	40025708 <Sscan::Float(char const*, char const*, float&)+0x104>
40025618:	e5d03000 	ldrb	r3, [r0]
4002561c:	e353002d 	cmp	r3, #45	; 0x2d
40025620:	02800001 	addeq	r0, r0, #1
40025624:	03a0e001 	moveq	lr, #1
40025628:	13a0e000 	movne	lr, #0
4002562c:	e5d03000 	ldrb	r3, [r0]
40025630:	e31300df 	tst	r3, #223	; 0xdf
40025634:	13a03000 	movne	r3, #0
40025638:	13a0c00a 	movne	ip, #10
4002563c:	1a000001 	bne	40025648 <Sscan::Float(char const*, char const*, float&)+0x44>
40025640:	e3a00002 	mov	r0, #2
40025644:	e8bd8070 	pop	{r4, r5, r6, pc}
40025648:	e5d02000 	ldrb	r2, [r0]
4002564c:	e2421030 	sub	r1, r2, #48	; 0x30
40025650:	e3510009 	cmp	r1, #9
40025654:	8afffff9 	bhi	40025640 <Sscan::Float(char const*, char const*, float&)+0x3c>
40025658:	e023239c 	mla	r3, ip, r3, r2
4002565c:	e5f02001 	ldrb	r2, [r0, #1]!
40025660:	e2433030 	sub	r3, r3, #48	; 0x30
40025664:	e20210df 	and	r1, r2, #223	; 0xdf
40025668:	e3510000 	cmp	r1, #0
4002566c:	1352002e 	cmpne	r2, #46	; 0x2e
40025670:	1afffff4 	bne	40025648 <Sscan::Float(char const*, char const*, float&)+0x44>
40025674:	ee073a90 	vmov	s15, r3
40025678:	eef87a67 	vcvt.f32.u32	s15, s15
4002567c:	edc47a00 	vstr	s15, [r4]
40025680:	e5d03000 	ldrb	r3, [r0]
40025684:	e353002e 	cmp	r3, #46	; 0x2e
40025688:	0a000006 	beq	400256a8 <Sscan::Float(char const*, char const*, float&)+0xa4>
4002568c:	e35e0000 	cmp	lr, #0
40025690:	1a000001 	bne	4002569c <Sscan::Float(char const*, char const*, float&)+0x98>
40025694:	e3a00000 	mov	r0, #0
40025698:	e8bd8070 	pop	{r4, r5, r6, pc}
4002569c:	eef17a67 	vneg.f32	s15, s15
400256a0:	edc47a00 	vstr	s15, [r4]
400256a4:	eafffffa 	b	40025694 <Sscan::Float(char const*, char const*, float&)+0x90>
400256a8:	e1a03000 	mov	r3, r0
400256ac:	e3a01001 	mov	r1, #1
400256b0:	e3a0c000 	mov	ip, #0
400256b4:	e3a0500a 	mov	r5, #10
400256b8:	e5f32001 	ldrb	r2, [r3, #1]!
400256bc:	e21200df 	ands	r0, r2, #223	; 0xdf
400256c0:	0a000005 	beq	400256dc <Sscan::Float(char const*, char const*, float&)+0xd8>
400256c4:	e2422030 	sub	r2, r2, #48	; 0x30
400256c8:	e3520009 	cmp	r2, #9
400256cc:	8affffdb 	bhi	40025640 <Sscan::Float(char const*, char const*, float&)+0x3c>
400256d0:	e02c2c95 	mla	ip, r5, ip, r2
400256d4:	e0010195 	mul	r1, r5, r1
400256d8:	eafffff6 	b	400256b8 <Sscan::Float(char const*, char const*, float&)+0xb4>
400256dc:	ee07ca10 	vmov	s14, ip
400256e0:	e35e0000 	cmp	lr, #0
400256e4:	eeb86a47 	vcvt.f32.u32	s12, s14
400256e8:	ee071a10 	vmov	s14, r1
400256ec:	eef86a47 	vcvt.f32.u32	s13, s14
400256f0:	ee867a26 	vdiv.f32	s14, s12, s13
400256f4:	ee777a27 	vadd.f32	s15, s14, s15
400256f8:	0affffe8 	beq	400256a0 <Sscan::Float(char const*, char const*, float&)+0x9c>
400256fc:	eef17a67 	vneg.f32	s15, s15
40025700:	edc47a00 	vstr	s15, [r4]
40025704:	e8bd8070 	pop	{r4, r5, r6, pc}
40025708:	e3a00001 	mov	r0, #1
4002570c:	e8bd8070 	pop	{r4, r5, r6, pc}

40025710 <Sscan::Hex24Uint32(char const*, char const*, unsigned long&)>:
40025710:	e92d4010 	push	{r4, lr}
40025714:	e1a04002 	mov	r4, r2
40025718:	ebffffa6 	bl	400255b8 <Sscan::checkName(char const*, char const*)>
4002571c:	e2502000 	subs	r2, r0, #0
40025720:	13a03000 	movne	r3, #0
40025724:	15843000 	strne	r3, [r4]
40025728:	1a000001 	bne	40025734 <Sscan::Hex24Uint32(char const*, char const*, unsigned long&)+0x24>
4002572c:	e3a00001 	mov	r0, #1
40025730:	e8bd8010 	pop	{r4, pc}
40025734:	e7d20003 	ldrb	r0, [r2, r3]
40025738:	e3500000 	cmp	r0, #0
4002573c:	0a000015 	beq	40025798 <Sscan::Hex24Uint32(char const*, char const*, unsigned long&)+0x88>
40025740:	e3530006 	cmp	r3, #6
40025744:	0a000010 	beq	4002578c <Sscan::Hex24Uint32(char const*, char const*, unsigned long&)+0x7c>
40025748:	e2401030 	sub	r1, r0, #48	; 0x30
4002574c:	e3510009 	cmp	r1, #9
40025750:	9a000003 	bls	40025764 <Sscan::Hex24Uint32(char const*, char const*, unsigned long&)+0x54>
40025754:	e380c020 	orr	ip, r0, #32
40025758:	e24cc061 	sub	ip, ip, #97	; 0x61
4002575c:	e35c0005 	cmp	ip, #5
40025760:	8afffff1 	bhi	4002572c <Sscan::Hex24Uint32(char const*, char const*, unsigned long&)+0x1c>
40025764:	e3500039 	cmp	r0, #57	; 0x39
40025768:	e2833001 	add	r3, r3, #1
4002576c:	83800020 	orrhi	r0, r0, #32
40025770:	96ef0071 	uxtbls	r0, r1
40025774:	e5941000 	ldr	r1, [r4]
40025778:	82400057 	subhi	r0, r0, #87	; 0x57
4002577c:	86ef0070 	uxtbhi	r0, r0
40025780:	e1800201 	orr	r0, r0, r1, lsl #4
40025784:	e5840000 	str	r0, [r4]
40025788:	eaffffe9 	b	40025734 <Sscan::Hex24Uint32(char const*, char const*, unsigned long&)+0x24>
4002578c:	e2500020 	subs	r0, r0, #32
40025790:	13a00001 	movne	r0, #1
40025794:	e8bd8010 	pop	{r4, pc}
40025798:	e3530006 	cmp	r3, #6
4002579c:	13a00002 	movne	r0, #2
400257a0:	e8bd8010 	pop	{r4, pc}

400257a4 <Sscan::IpAddress(char const*, char const*, unsigned long&)>:
400257a4:	e92d4073 	push	{r0, r1, r4, r5, r6, lr}
400257a8:	e1a04002 	mov	r4, r2
400257ac:	ebffff81 	bl	400255b8 <Sscan::checkName(char const*, char const*)>
400257b0:	e3500000 	cmp	r0, #0
400257b4:	03a00001 	moveq	r0, #1
400257b8:	0a00000d 	beq	400257f4 <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x50>
400257bc:	e28de004 	add	lr, sp, #4
400257c0:	e3a0c000 	mov	ip, #0
400257c4:	e3a0500a 	mov	r5, #10
400257c8:	e1a03000 	mov	r3, r0
400257cc:	e2806004 	add	r6, r0, #4
400257d0:	e3a01000 	mov	r1, #0
400257d4:	e1a00003 	mov	r0, r3
400257d8:	e4d02001 	ldrb	r2, [r0], #1
400257dc:	e3520000 	cmp	r2, #0
400257e0:	1352002e 	cmpne	r2, #46	; 0x2e
400257e4:	0a00000b 	beq	40025818 <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x74>
400257e8:	e1560000 	cmp	r6, r0
400257ec:	1a000002 	bne	400257fc <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x58>
400257f0:	e3a00002 	mov	r0, #2
400257f4:	e28dd008 	add	sp, sp, #8
400257f8:	e8bd8070 	pop	{r4, r5, r6, pc}
400257fc:	e2423030 	sub	r3, r2, #48	; 0x30
40025800:	e3530009 	cmp	r3, #9
40025804:	8afffff9 	bhi	400257f0 <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x4c>
40025808:	e0212195 	mla	r1, r5, r1, r2
4002580c:	e1a03000 	mov	r3, r0
40025810:	e2411030 	sub	r1, r1, #48	; 0x30
40025814:	eaffffee 	b	400257d4 <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x30>
40025818:	e35100ff 	cmp	r1, #255	; 0xff
4002581c:	8afffff3 	bhi	400257f0 <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x4c>
40025820:	e4ce1001 	strb	r1, [lr], #1
40025824:	e28cc001 	add	ip, ip, #1
40025828:	e35c0003 	cmp	ip, #3
4002582c:	1affffe5 	bne	400257c8 <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x24>
40025830:	e283e004 	add	lr, r3, #4
40025834:	e3a0c000 	mov	ip, #0
40025838:	e3a0200a 	mov	r2, #10
4002583c:	e5f31001 	ldrb	r1, [r3, #1]!
40025840:	e21100df 	ands	r0, r1, #223	; 0xdf
40025844:	0a000006 	beq	40025864 <Sscan::IpAddress(char const*, char const*, unsigned long&)+0xc0>
40025848:	e153000e 	cmp	r3, lr
4002584c:	0affffe7 	beq	400257f0 <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x4c>
40025850:	e2411030 	sub	r1, r1, #48	; 0x30
40025854:	e3510009 	cmp	r1, #9
40025858:	8affffe4 	bhi	400257f0 <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x4c>
4002585c:	e02c1c92 	mla	ip, r2, ip, r1
40025860:	eafffff5 	b	4002583c <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x98>
40025864:	e35c00ff 	cmp	ip, #255	; 0xff
40025868:	95cdc007 	strbls	ip, [sp, #7]
4002586c:	959d3004 	ldrls	r3, [sp, #4]
40025870:	95843000 	strls	r3, [r4]
40025874:	9affffde 	bls	400257f4 <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x50>
40025878:	eaffffdc 	b	400257f0 <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x4c>

4002587c <Sscan::Uint16(char const*, char const*, unsigned short&)>:
4002587c:	e92d4010 	push	{r4, lr}
40025880:	e1a04002 	mov	r4, r2
40025884:	ebffff4b 	bl	400255b8 <Sscan::checkName(char const*, char const*)>
40025888:	e2501000 	subs	r1, r0, #0
4002588c:	0a00000e 	beq	400258cc <Sscan::Uint16(char const*, char const*, unsigned short&)+0x50>
40025890:	e3a03000 	mov	r3, #0
40025894:	e3a0c00a 	mov	ip, #10
40025898:	e5d12000 	ldrb	r2, [r1]
4002589c:	e2420030 	sub	r0, r2, #48	; 0x30
400258a0:	e3500009 	cmp	r0, #9
400258a4:	8a00000a 	bhi	400258d4 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x58>
400258a8:	e5f10001 	ldrb	r0, [r1, #1]!
400258ac:	e023239c 	mla	r3, ip, r3, r2
400258b0:	e21000df 	ands	r0, r0, #223	; 0xdf
400258b4:	e2433030 	sub	r3, r3, #48	; 0x30
400258b8:	1afffff6 	bne	40025898 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x1c>
400258bc:	e3530801 	cmp	r3, #65536	; 0x10000
400258c0:	2a000003 	bcs	400258d4 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x58>
400258c4:	e1c430b0 	strh	r3, [r4]
400258c8:	e8bd8010 	pop	{r4, pc}
400258cc:	e3a00001 	mov	r0, #1
400258d0:	e8bd8010 	pop	{r4, pc}
400258d4:	e3a00002 	mov	r0, #2
400258d8:	e8bd8010 	pop	{r4, pc}

400258dc <Sscan::Uint8(char const*, char const*, unsigned char&)>:
400258dc:	e92d4010 	push	{r4, lr}
400258e0:	e1a04002 	mov	r4, r2
400258e4:	ebffff33 	bl	400255b8 <Sscan::checkName(char const*, char const*)>
400258e8:	e2501000 	subs	r1, r0, #0
400258ec:	0a00000e 	beq	4002592c <Sscan::Uint8(char const*, char const*, unsigned char&)+0x50>
400258f0:	e3a03000 	mov	r3, #0
400258f4:	e3a0c00a 	mov	ip, #10
400258f8:	e5d12000 	ldrb	r2, [r1]
400258fc:	e2420030 	sub	r0, r2, #48	; 0x30
40025900:	e3500009 	cmp	r0, #9
40025904:	8a00000a 	bhi	40025934 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x58>
40025908:	e5f10001 	ldrb	r0, [r1, #1]!
4002590c:	e023239c 	mla	r3, ip, r3, r2
40025910:	e21000df 	ands	r0, r0, #223	; 0xdf
40025914:	e2433030 	sub	r3, r3, #48	; 0x30
40025918:	1afffff6 	bne	400258f8 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x1c>
4002591c:	e35300ff 	cmp	r3, #255	; 0xff
40025920:	8a000003 	bhi	40025934 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x58>
40025924:	e5c43000 	strb	r3, [r4]
40025928:	e8bd8010 	pop	{r4, pc}
4002592c:	e3a00001 	mov	r0, #1
40025930:	e8bd8010 	pop	{r4, pc}
40025934:	e3a00002 	mov	r0, #2
40025938:	e8bd8010 	pop	{r4, pc}

4002593c <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)>:
4002593c:	e92d4070 	push	{r4, r5, r6, lr}
40025940:	e1a04002 	mov	r4, r2
40025944:	e1a05003 	mov	r5, r3
40025948:	ebffff1a 	bl	400255b8 <Sscan::checkName(char const*, char const*)>
4002594c:	e2501000 	subs	r1, r0, #0
40025950:	0a000037 	beq	40025a34 <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0xf8>
40025954:	e5d13000 	ldrb	r3, [r1]
40025958:	e353002d 	cmp	r3, #45	; 0x2d
4002595c:	02811001 	addeq	r1, r1, #1
40025960:	03a02001 	moveq	r2, #1
40025964:	0a000002 	beq	40025974 <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x38>
40025968:	e353002b 	cmp	r3, #43	; 0x2b
4002596c:	e3a02000 	mov	r2, #0
40025970:	02811001 	addeq	r1, r1, #1
40025974:	e5d13000 	ldrb	r3, [r1]
40025978:	e31300df 	tst	r3, #223	; 0xdf
4002597c:	1a000001 	bne	40025988 <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x4c>
40025980:	e3a00002 	mov	r0, #2
40025984:	e8bd8070 	pop	{r4, r5, r6, pc}
40025988:	e3a03000 	mov	r3, #0
4002598c:	e5c43000 	strb	r3, [r4]
40025990:	e5d13000 	ldrb	r3, [r1]
40025994:	e2430030 	sub	r0, r3, #48	; 0x30
40025998:	e3500001 	cmp	r0, #1
4002599c:	8afffff7 	bhi	40025980 <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x44>
400259a0:	e3530031 	cmp	r3, #49	; 0x31
400259a4:	03a0300a 	moveq	r3, #10
400259a8:	13a03000 	movne	r3, #0
400259ac:	e5c43000 	strb	r3, [r4]
400259b0:	e5d10001 	ldrb	r0, [r1, #1]
400259b4:	e2400030 	sub	r0, r0, #48	; 0x30
400259b8:	e3500009 	cmp	r0, #9
400259bc:	8affffef 	bhi	40025980 <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x44>
400259c0:	e0833000 	add	r3, r3, r0
400259c4:	e5c43000 	strb	r3, [r4]
400259c8:	e5d13002 	ldrb	r3, [r1, #2]
400259cc:	e353003a 	cmp	r3, #58	; 0x3a
400259d0:	1affffea 	bne	40025980 <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x44>
400259d4:	e5d1c003 	ldrb	ip, [r1, #3]
400259d8:	e24cc030 	sub	ip, ip, #48	; 0x30
400259dc:	e35c0009 	cmp	ip, #9
400259e0:	8affffe6 	bhi	40025980 <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x44>
400259e4:	e5d13004 	ldrb	r3, [r1, #4]
400259e8:	e2433030 	sub	r3, r3, #48	; 0x30
400259ec:	e3530009 	cmp	r3, #9
400259f0:	8affffe2 	bhi	40025980 <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x44>
400259f4:	e5d10005 	ldrb	r0, [r1, #5]
400259f8:	e21000df 	ands	r0, r0, #223	; 0xdf
400259fc:	1affffdf 	bne	40025980 <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x44>
40025a00:	e08cc10c 	add	ip, ip, ip, lsl #2
40025a04:	e3520000 	cmp	r2, #0
40025a08:	e1a0c08c 	lsl	ip, ip, #1
40025a0c:	e6efc07c 	uxtb	ip, ip
40025a10:	e5c5c000 	strb	ip, [r5]
40025a14:	e5d13004 	ldrb	r3, [r1, #4]
40025a18:	e2433030 	sub	r3, r3, #48	; 0x30
40025a1c:	e08cc003 	add	ip, ip, r3
40025a20:	e5c5c000 	strb	ip, [r5]
40025a24:	15d43000 	ldrbne	r3, [r4]
40025a28:	12633000 	rsbne	r3, r3, #0
40025a2c:	15c43000 	strbne	r3, [r4]
40025a30:	e8bd8070 	pop	{r4, r5, r6, pc}
40025a34:	e3a00001 	mov	r0, #1
40025a38:	e8bd8070 	pop	{r4, r5, r6, pc}

40025a3c <cp437_font_size()>:
40025a3c:	e3a0007f 	mov	r0, #127	; 0x7f
40025a40:	e12fff1e 	bx	lr

40025a44 <Max7219Matrix::~Max7219Matrix()>:
40025a44:	e92d4010 	push	{r4, lr}
40025a48:	e1a04000 	mov	r4, r0
40025a4c:	e590000c 	ldr	r0, [r0, #12]
40025a50:	e3500000 	cmp	r0, #0
40025a54:	0a000000 	beq	40025a5c <Max7219Matrix::~Max7219Matrix()+0x18>
40025a58:	eb001e5c 	bl	4002d3d0 <operator delete[](void*)>
40025a5c:	e1a00004 	mov	r0, r4
40025a60:	e8bd8010 	pop	{r4, pc}

40025a64 <Max7219Matrix::Write(char const*, unsigned short)>:
40025a64:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
40025a68:	e1a05000 	mov	r5, r0
40025a6c:	e1d061b0 	ldrh	r6, [r0, #16]
40025a70:	e1a0a001 	mov	sl, r1
40025a74:	e59f80b4 	ldr	r8, [pc, #180]	; 40025b30 <Max7219Matrix::Write(char const*, unsigned short)+0xcc>
40025a78:	e3a07001 	mov	r7, #1
40025a7c:	e1560002 	cmp	r6, r2
40025a80:	e3a0b000 	mov	fp, #0
40025a84:	21a06002 	movcs	r6, r2
40025a88:	e1a09086 	lsl	r9, r6, #1
40025a8c:	e6ff9079 	uxth	r9, r9
40025a90:	e1a00006 	mov	r0, r6
40025a94:	e3a04000 	mov	r4, #0
40025a98:	e1d531b0 	ldrh	r3, [r5, #16]
40025a9c:	e0433006 	sub	r3, r3, r6
40025aa0:	e1540083 	cmp	r4, r3, lsl #1
40025aa4:	2a000005 	bcs	40025ac0 <Max7219Matrix::Write(char const*, unsigned short)+0x5c>
40025aa8:	e1a03008 	mov	r3, r8
40025aac:	e7e3b004 	strb	fp, [r3, r4]!
40025ab0:	e2844002 	add	r4, r4, #2
40025ab4:	e5c3b001 	strb	fp, [r3, #1]
40025ab8:	e6ff4074 	uxth	r4, r4
40025abc:	eafffff5 	b	40025a98 <Max7219Matrix::Write(char const*, unsigned short)+0x34>
40025ac0:	e1a03004 	mov	r3, r4
40025ac4:	e2500001 	subs	r0, r0, #1
40025ac8:	3a00000e 	bcc	40025b08 <Max7219Matrix::Write(char const*, unsigned short)+0xa4>
40025acc:	e7dac000 	ldrb	ip, [sl, r0]
40025ad0:	e2831001 	add	r1, r3, #1
40025ad4:	e5952008 	ldr	r2, [r5, #8]
40025ad8:	e6ff1071 	uxth	r1, r1
40025adc:	e152000c 	cmp	r2, ip
40025ae0:	e595200c 	ldr	r2, [r5, #12]
40025ae4:	93a0c020 	movls	ip, #32
40025ae8:	e7c87003 	strb	r7, [r8, r3]
40025aec:	e2833002 	add	r3, r3, #2
40025af0:	e082218c 	add	r2, r2, ip, lsl #3
40025af4:	e6ff3073 	uxth	r3, r3
40025af8:	e0822007 	add	r2, r2, r7
40025afc:	e5522001 	ldrb	r2, [r2, #-1]
40025b00:	e7c82001 	strb	r2, [r8, r1]
40025b04:	eaffffee 	b	40025ac4 <Max7219Matrix::Write(char const*, unsigned short)+0x60>
40025b08:	e0844009 	add	r4, r4, r9
40025b0c:	e1a00005 	mov	r0, r5
40025b10:	e2877001 	add	r7, r7, #1
40025b14:	ebff9ba1 	bl	4000c9a0 <HAL_SPI::Setup()>
40025b18:	e6ff1074 	uxth	r1, r4
40025b1c:	e1a00008 	mov	r0, r8
40025b20:	eb00175c 	bl	4002b898 <h3_spi_writenb(char const*, unsigned long)>
40025b24:	e3570009 	cmp	r7, #9
40025b28:	1affffd8 	bne	40025a90 <Max7219Matrix::Write(char const*, unsigned short)+0x2c>
40025b2c:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
40025b30:	40062eb4 			; <UNDEFINED> instruction: 0x40062eb4

40025b34 <Max7219Matrix::UpdateCharacter(unsigned long, unsigned char const*)>:
40025b34:	e5903008 	ldr	r3, [r0, #8]
40025b38:	e1530001 	cmp	r3, r1
40025b3c:	312fff1e 	bxcc	lr
40025b40:	e590c00c 	ldr	ip, [r0, #12]
40025b44:	e3a00007 	mov	r0, #7
40025b48:	e92d4030 	push	{r4, r5, lr}
40025b4c:	e3a04001 	mov	r4, #1
40025b50:	e08cc181 	add	ip, ip, r1, lsl #3
40025b54:	e1a05014 	lsl	r5, r4, r0
40025b58:	e3a01000 	mov	r1, #0
40025b5c:	e1a0e001 	mov	lr, r1
40025b60:	e7d23001 	ldrb	r3, [r2, r1]
40025b64:	e0133005 	ands	r3, r3, r5
40025b68:	11a03114 	lslne	r3, r4, r1
40025b6c:	e2811001 	add	r1, r1, #1
40025b70:	16ef3073 	uxtbne	r3, r3
40025b74:	e3510008 	cmp	r1, #8
40025b78:	e183e00e 	orr	lr, r3, lr
40025b7c:	1afffff7 	bne	40025b60 <Max7219Matrix::UpdateCharacter(unsigned long, unsigned char const*)+0x2c>
40025b80:	e2500001 	subs	r0, r0, #1
40025b84:	e4cce001 	strb	lr, [ip], #1
40025b88:	38bd8030 	popcc	{r4, r5, pc}
40025b8c:	eafffff0 	b	40025b54 <Max7219Matrix::UpdateCharacter(unsigned long, unsigned char const*)+0x20>

40025b90 <Max7219Matrix::WriteAll(unsigned char, unsigned char)>:
40025b90:	e92d4070 	push	{r4, r5, r6, lr}
40025b94:	e3a0c000 	mov	ip, #0
40025b98:	e59f3038 	ldr	r3, [pc, #56]	; 40025bd8 <Max7219Matrix::WriteAll(unsigned char, unsigned char)+0x48>
40025b9c:	e1a0e001 	mov	lr, r1
40025ba0:	e1d041b0 	ldrh	r4, [r0, #16]
40025ba4:	e2833002 	add	r3, r3, #2
40025ba8:	e15c0084 	cmp	ip, r4, lsl #1
40025bac:	e1a05084 	lsl	r5, r4, #1
40025bb0:	2a000003 	bcs	40025bc4 <Max7219Matrix::WriteAll(unsigned char, unsigned char)+0x34>
40025bb4:	e543e002 	strb	lr, [r3, #-2]
40025bb8:	e28cc002 	add	ip, ip, #2
40025bbc:	e5432001 	strb	r2, [r3, #-1]
40025bc0:	eafffff6 	b	40025ba0 <Max7219Matrix::WriteAll(unsigned char, unsigned char)+0x10>
40025bc4:	ebff9b75 	bl	4000c9a0 <HAL_SPI::Setup()>
40025bc8:	e59f0008 	ldr	r0, [pc, #8]	; 40025bd8 <Max7219Matrix::WriteAll(unsigned char, unsigned char)+0x48>
40025bcc:	e1a01005 	mov	r1, r5
40025bd0:	e8bd4070 	pop	{r4, r5, r6, lr}
40025bd4:	ea00172f 	b	4002b898 <h3_spi_writenb(char const*, unsigned long)>
40025bd8:	40062eb4 			; <UNDEFINED> instruction: 0x40062eb4

40025bdc <Max7219Matrix::Cls()>:
40025bdc:	e92d4010 	push	{r4, lr}
40025be0:	e3a02000 	mov	r2, #0
40025be4:	e1a04000 	mov	r4, r0
40025be8:	e3a01001 	mov	r1, #1
40025bec:	ebffffe7 	bl	40025b90 <Max7219Matrix::WriteAll(unsigned char, unsigned char)>
40025bf0:	e1a00004 	mov	r0, r4
40025bf4:	e3a02000 	mov	r2, #0
40025bf8:	e3a01002 	mov	r1, #2
40025bfc:	ebffffe3 	bl	40025b90 <Max7219Matrix::WriteAll(unsigned char, unsigned char)>
40025c00:	e1a00004 	mov	r0, r4
40025c04:	e3a02000 	mov	r2, #0
40025c08:	e3a01003 	mov	r1, #3
40025c0c:	ebffffdf 	bl	40025b90 <Max7219Matrix::WriteAll(unsigned char, unsigned char)>
40025c10:	e1a00004 	mov	r0, r4
40025c14:	e3a02000 	mov	r2, #0
40025c18:	e3a01004 	mov	r1, #4
40025c1c:	ebffffdb 	bl	40025b90 <Max7219Matrix::WriteAll(unsigned char, unsigned char)>
40025c20:	e1a00004 	mov	r0, r4
40025c24:	e3a02000 	mov	r2, #0
40025c28:	e3a01005 	mov	r1, #5
40025c2c:	ebffffd7 	bl	40025b90 <Max7219Matrix::WriteAll(unsigned char, unsigned char)>
40025c30:	e1a00004 	mov	r0, r4
40025c34:	e3a02000 	mov	r2, #0
40025c38:	e3a01006 	mov	r1, #6
40025c3c:	ebffffd3 	bl	40025b90 <Max7219Matrix::WriteAll(unsigned char, unsigned char)>
40025c40:	e1a00004 	mov	r0, r4
40025c44:	e3a02000 	mov	r2, #0
40025c48:	e3a01007 	mov	r1, #7
40025c4c:	ebffffcf 	bl	40025b90 <Max7219Matrix::WriteAll(unsigned char, unsigned char)>
40025c50:	e1a00004 	mov	r0, r4
40025c54:	e3a02000 	mov	r2, #0
40025c58:	e8bd4010 	pop	{r4, lr}
40025c5c:	e3a01008 	mov	r1, #8
40025c60:	eaffffca 	b	40025b90 <Max7219Matrix::WriteAll(unsigned char, unsigned char)>

40025c64 <Max7219Matrix::Init(unsigned short, unsigned char)>:
40025c64:	e3510020 	cmp	r1, #32
40025c68:	23a01020 	movcs	r1, #32
40025c6c:	e92d4070 	push	{r4, r5, r6, lr}
40025c70:	e1a04000 	mov	r4, r0
40025c74:	e1c011b0 	strh	r1, [r0, #16]
40025c78:	e1a05002 	mov	r5, r2
40025c7c:	e3a0100c 	mov	r1, #12
40025c80:	e3a02001 	mov	r2, #1
40025c84:	ebffffc1 	bl	40025b90 <Max7219Matrix::WriteAll(unsigned char, unsigned char)>
40025c88:	e1a00004 	mov	r0, r4
40025c8c:	e3a02000 	mov	r2, #0
40025c90:	e3a0100f 	mov	r1, #15
40025c94:	ebffffbd 	bl	40025b90 <Max7219Matrix::WriteAll(unsigned char, unsigned char)>
40025c98:	e1a00004 	mov	r0, r4
40025c9c:	e3a02000 	mov	r2, #0
40025ca0:	e3a01009 	mov	r1, #9
40025ca4:	ebffffb9 	bl	40025b90 <Max7219Matrix::WriteAll(unsigned char, unsigned char)>
40025ca8:	e1a00004 	mov	r0, r4
40025cac:	e3a02007 	mov	r2, #7
40025cb0:	e3a0100b 	mov	r1, #11
40025cb4:	ebffffb5 	bl	40025b90 <Max7219Matrix::WriteAll(unsigned char, unsigned char)>
40025cb8:	e1a00004 	mov	r0, r4
40025cbc:	e205200f 	and	r2, r5, #15
40025cc0:	e3a0100a 	mov	r1, #10
40025cc4:	ebffffb1 	bl	40025b90 <Max7219Matrix::WriteAll(unsigned char, unsigned char)>
40025cc8:	e1a00004 	mov	r0, r4
40025ccc:	e8bd4070 	pop	{r4, r5, r6, lr}
40025cd0:	eaffffc1 	b	40025bdc <Max7219Matrix::Cls()>

40025cd4 <Max7219Matrix::Rotate(unsigned long, unsigned long)>:
40025cd4:	e59f3038 	ldr	r3, [pc, #56]	; 40025d14 <Max7219Matrix::Rotate(unsigned long, unsigned long)+0x40>
40025cd8:	e3a0c000 	mov	ip, #0
40025cdc:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40025ce0:	e3a0e001 	mov	lr, #1
40025ce4:	e0831181 	add	r1, r3, r1, lsl #3
40025ce8:	e1a0000c 	mov	r0, ip
40025cec:	e1a0221e 	lsl	r2, lr, r2
40025cf0:	e4d13001 	ldrb	r3, [r1], #1
40025cf4:	e0133002 	ands	r3, r3, r2
40025cf8:	11a03c1e 	lslne	r3, lr, ip
40025cfc:	e28cc001 	add	ip, ip, #1
40025d00:	16ef3073 	uxtbne	r3, r3
40025d04:	e35c0008 	cmp	ip, #8
40025d08:	e1830000 	orr	r0, r3, r0
40025d0c:	1afffff7 	bne	40025cf0 <Max7219Matrix::Rotate(unsigned long, unsigned long)+0x1c>
40025d10:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40025d14:	400336e4 	andmi	r3, r3, r4, ror #13

40025d18 <Max7219Matrix::Max7219Matrix()>:
40025d18:	e59f3074 	ldr	r3, [pc, #116]	; 40025d94 <Max7219Matrix::Max7219Matrix()+0x7c>
40025d1c:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
40025d20:	e3a05000 	mov	r5, #0
40025d24:	e5803000 	str	r3, [r0]
40025d28:	e1a04000 	mov	r4, r0
40025d2c:	e1c050b4 	strh	r5, [r0, #4]
40025d30:	ebff6c79 	bl	40000f1c <h3_spi_begin()>
40025d34:	ebffff40 	bl	40025a3c <cp437_font_size()>
40025d38:	e5840008 	str	r0, [r4, #8]
40025d3c:	e3a03004 	mov	r3, #4
40025d40:	e1a00180 	lsl	r0, r0, #3
40025d44:	e1c431b0 	strh	r3, [r4, #16]
40025d48:	eb001da3 	bl	4002d3dc <operator new[](unsigned int)>
40025d4c:	e5949008 	ldr	r9, [r4, #8]
40025d50:	e1a06000 	mov	r6, r0
40025d54:	e584000c 	str	r0, [r4, #12]
40025d58:	e1590005 	cmp	r9, r5
40025d5c:	e0868185 	add	r8, r6, r5, lsl #3
40025d60:	0a000009 	beq	40025d8c <Max7219Matrix::Max7219Matrix()+0x74>
40025d64:	e3a07007 	mov	r7, #7
40025d68:	e1a02007 	mov	r2, r7
40025d6c:	e1a01005 	mov	r1, r5
40025d70:	e1a00004 	mov	r0, r4
40025d74:	ebffffd6 	bl	40025cd4 <Max7219Matrix::Rotate(unsigned long, unsigned long)>
40025d78:	e2577001 	subs	r7, r7, #1
40025d7c:	e4c80001 	strb	r0, [r8], #1
40025d80:	2afffff8 	bcs	40025d68 <Max7219Matrix::Max7219Matrix()+0x50>
40025d84:	e2855001 	add	r5, r5, #1
40025d88:	eafffff2 	b	40025d58 <Max7219Matrix::Max7219Matrix()+0x40>
40025d8c:	e1a00004 	mov	r0, r4
40025d90:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
40025d94:	001e8480 	andseq	r8, lr, r0, lsl #9

40025d98 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*, unsigned long)>:
40025d98:	e92d40f0 	push	{r4, r5, r6, r7, lr}
40025d9c:	e24dd024 	sub	sp, sp, #36	; 0x24
40025da0:	e59f50b4 	ldr	r5, [pc, #180]	; 40025e5c <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*, unsigned long)+0xc4>
40025da4:	e1a04000 	mov	r4, r0
40025da8:	e59d0038 	ldr	r0, [sp, #56]	; 0x38
40025dac:	e282c00b 	add	ip, r2, #11
40025db0:	e5840000 	str	r0, [r4]
40025db4:	e59f00a4 	ldr	r0, [pc, #164]	; 40025e60 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*, unsigned long)+0xc8>
40025db8:	e5804000 	str	r4, [r0]
40025dbc:	e5d10000 	ldrb	r0, [r1]
40025dc0:	e5c50000 	strb	r0, [r5]
40025dc4:	e5d10001 	ldrb	r0, [r1, #1]
40025dc8:	e5d11002 	ldrb	r1, [r1, #2]
40025dcc:	e5c50001 	strb	r0, [r5, #1]
40025dd0:	e5c51002 	strb	r1, [r5, #2]
40025dd4:	e2851003 	add	r1, r5, #3
40025dd8:	e1a06001 	mov	r6, r1
40025ddc:	e152000c 	cmp	r2, ip
40025de0:	1a000007 	bne	40025e04 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*, unsigned long)+0x6c>
40025de4:	e59f2078 	ldr	r2, [pc, #120]	; 40025e64 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*, unsigned long)+0xcc>
40025de8:	e2830008 	add	r0, r3, #8
40025dec:	e1a07002 	mov	r7, r2
40025df0:	e1530000 	cmp	r3, r0
40025df4:	0a000005 	beq	40025e10 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*, unsigned long)+0x78>
40025df8:	e4d31001 	ldrb	r1, [r3], #1
40025dfc:	e4c21001 	strb	r1, [r2], #1
40025e00:	eafffffa 	b	40025df0 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*, unsigned long)+0x58>
40025e04:	e4d20001 	ldrb	r0, [r2], #1
40025e08:	e4c10001 	strb	r0, [r1], #1
40025e0c:	eafffff2 	b	40025ddc <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*, unsigned long)+0x44>
40025e10:	e59f3050 	ldr	r3, [pc, #80]	; 40025e68 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*, unsigned long)+0xd0>
40025e14:	e28d101f 	add	r1, sp, #31
40025e18:	e5930000 	ldr	r0, [r3]
40025e1c:	eb0001a7 	bl	400264c0 <Hardware::GetBoardName(unsigned char&)>
40025e20:	e59f2044 	ldr	r2, [pc, #68]	; 40025e6c <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*, unsigned long)+0xd4>
40025e24:	e3a03008 	mov	r3, #8
40025e28:	e58d3010 	str	r3, [sp, #16]
40025e2c:	e3a0300b 	mov	r3, #11
40025e30:	e98d0009 	stmib	sp, {r0, r3}
40025e34:	e58d7014 	str	r7, [sp, #20]
40025e38:	e3a03003 	mov	r3, #3
40025e3c:	e58d600c 	str	r6, [sp, #12]
40025e40:	e3a0103f 	mov	r1, #63	; 0x3f
40025e44:	e58d5000 	str	r5, [sp]
40025e48:	e59f0020 	ldr	r0, [pc, #32]	; 40025e70 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*, unsigned long)+0xd8>
40025e4c:	eb001b6c 	bl	4002cc04 <snprintf>
40025e50:	e1a00004 	mov	r0, r4
40025e54:	e28dd024 	add	sp, sp, #36	; 0x24
40025e58:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
40025e5c:	400570c0 	andmi	r7, r5, r0, asr #1
40025e60:	40058ee4 	andmi	r8, r5, r4, ror #29
40025e64:	400570ce 	andmi	r7, r5, lr, asr #1
40025e68:	40034088 	andmi	r4, r3, r8, lsl #1
40025e6c:	40032e27 	andmi	r2, r3, r7, lsr #28
40025e70:	40034010 	andmi	r4, r3, r0, lsl r0

40025e74 <Hardware::ledblink(long)>:
40025e74:	e59f300c 	ldr	r3, [pc, #12]	; 40025e88 <Hardware::ledblink(long)+0x14>
40025e78:	e5930000 	ldr	r0, [r3]
40025e7c:	e2200001 	eor	r0, r0, #1
40025e80:	e5830000 	str	r0, [r3]
40025e84:	ea0001c8 	b	400265ac <hardware_led_set(int)>
40025e88:	40062ef4 	strdmi	r2, [r6], -r4

40025e8c <Hardware::SetFrequency(unsigned long)>:
40025e8c:	e92d4070 	push	{r4, r5, r6, lr}
40025e90:	e2515000 	subs	r5, r1, #0
40025e94:	e1a04000 	mov	r4, r0
40025e98:	1a000004 	bne	40025eb0 <Hardware::SetFrequency(unsigned long)+0x24>
40025e9c:	e280002c 	add	r0, r0, #44	; 0x2c
40025ea0:	eb000739 	bl	40027b8c <SoftwareTimerDelete(long&)>
40025ea4:	e1a00005 	mov	r0, r5
40025ea8:	e8bd4070 	pop	{r4, r5, r6, lr}
40025eac:	ea0001be 	b	400265ac <hardware_led_set(int)>
40025eb0:	e35500ff 	cmp	r5, #255	; 0xff
40025eb4:	1a000003 	bne	40025ec8 <Hardware::SetFrequency(unsigned long)+0x3c>
40025eb8:	e280002c 	add	r0, r0, #44	; 0x2c
40025ebc:	eb000732 	bl	40027b8c <SoftwareTimerDelete(long&)>
40025ec0:	e3a00001 	mov	r0, #1
40025ec4:	eafffff7 	b	40025ea8 <Hardware::SetFrequency(unsigned long)+0x1c>
40025ec8:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
40025ecc:	e3a01ffa 	mov	r1, #1000	; 0x3e8
40025ed0:	e3500000 	cmp	r0, #0
40025ed4:	e735f511 	udiv	r5, r1, r5
40025ed8:	aa000004 	bge	40025ef0 <Hardware::SetFrequency(unsigned long)+0x64>
40025edc:	e59f1018 	ldr	r1, [pc, #24]	; 40025efc <Hardware::SetFrequency(unsigned long)+0x70>
40025ee0:	e1a00005 	mov	r0, r5
40025ee4:	eb00070d 	bl	40027b20 <SoftwareTimerAdd(unsigned long, void (*)(long))>
40025ee8:	e584002c 	str	r0, [r4, #44]	; 0x2c
40025eec:	e8bd8070 	pop	{r4, r5, r6, pc}
40025ef0:	e1a01005 	mov	r1, r5
40025ef4:	e8bd4070 	pop	{r4, r5, r6, lr}
40025ef8:	ea000743 	b	40027c0c <SoftwareTimerChange(long, unsigned long)>
40025efc:	40025e74 	andmi	r5, r2, r4, ror lr

40025f00 <hardware::ledblink::display(unsigned long)>:
40025f00:	e12fff1e 	bx	lr

40025f04 <Hardware::SetMode(hardware::ledblink::Mode)>:
40025f04:	e5d03028 	ldrb	r3, [r0, #40]	; 0x28
40025f08:	e3530000 	cmp	r3, #0
40025f0c:	112fff1e 	bxne	lr
40025f10:	e5903024 	ldr	r3, [r0, #36]	; 0x24
40025f14:	e92d4010 	push	{r4, lr}
40025f18:	e1a04000 	mov	r4, r0
40025f1c:	e1530001 	cmp	r3, r1
40025f20:	08bd8010 	popeq	{r4, pc}
40025f24:	e5801024 	str	r1, [r0, #36]	; 0x24
40025f28:	e2411001 	sub	r1, r1, #1
40025f2c:	e3510004 	cmp	r1, #4
40025f30:	979ff101 	ldrls	pc, [pc, r1, lsl #2]
40025f34:	ea000004 	b	40025f4c <Hardware::SetMode(hardware::ledblink::Mode)+0x48>
40025f38:	40025f5c 	andmi	r5, r2, ip, asr pc
40025f3c:	40025f78 	andmi	r5, r2, r8, ror pc
40025f40:	40025f80 	andmi	r5, r2, r0, lsl #31
40025f44:	40025f88 	andmi	r5, r2, r8, lsl #31
40025f48:	40025f90 	mulmi	r2, r0, pc	; <UNPREDICTABLE>
40025f4c:	e3a01000 	mov	r1, #0
40025f50:	e1a00004 	mov	r0, r4
40025f54:	ebffffcc 	bl	40025e8c <Hardware::SetFrequency(unsigned long)>
40025f58:	ea000003 	b	40025f6c <Hardware::SetMode(hardware::ledblink::Mode)+0x68>
40025f5c:	e280002c 	add	r0, r0, #44	; 0x2c
40025f60:	eb000709 	bl	40027b8c <SoftwareTimerDelete(long&)>
40025f64:	e3a00001 	mov	r0, #1
40025f68:	eb00018f 	bl	400265ac <hardware_led_set(int)>
40025f6c:	e5940024 	ldr	r0, [r4, #36]	; 0x24
40025f70:	ebffffe2 	bl	40025f00 <hardware::ledblink::display(unsigned long)>
40025f74:	e8bd8010 	pop	{r4, pc}
40025f78:	e3a01001 	mov	r1, #1
40025f7c:	eafffff3 	b	40025f50 <Hardware::SetMode(hardware::ledblink::Mode)+0x4c>
40025f80:	e3a01003 	mov	r1, #3
40025f84:	eafffff1 	b	40025f50 <Hardware::SetMode(hardware::ledblink::Mode)+0x4c>
40025f88:	e3a01005 	mov	r1, #5
40025f8c:	eaffffef 	b	40025f50 <Hardware::SetMode(hardware::ledblink::Mode)+0x4c>
40025f90:	e3a01008 	mov	r1, #8
40025f94:	eaffffed 	b	40025f50 <Hardware::SetMode(hardware::ledblink::Mode)+0x4c>

40025f98 <Hardware::SetModeWithLock(hardware::ledblink::Mode, bool)>:
40025f98:	e92d4070 	push	{r4, r5, r6, lr}
40025f9c:	e3a03000 	mov	r3, #0
40025fa0:	e5c03028 	strb	r3, [r0, #40]	; 0x28
40025fa4:	e1a04000 	mov	r4, r0
40025fa8:	e1a05002 	mov	r5, r2
40025fac:	ebffffd4 	bl	40025f04 <Hardware::SetMode(hardware::ledblink::Mode)>
40025fb0:	e5c45028 	strb	r5, [r4, #40]	; 0x28
40025fb4:	e8bd8070 	pop	{r4, r5, r6, pc}

40025fb8 <remoteconfig::timedate::atoi(char const*, unsigned long)>:
40025fb8:	e0801001 	add	r1, r0, r1
40025fbc:	e1a03000 	mov	r3, r0
40025fc0:	e3a0c00a 	mov	ip, #10
40025fc4:	e3a00000 	mov	r0, #0
40025fc8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40025fcc:	e4d32001 	ldrb	r2, [r3], #1
40025fd0:	e242e030 	sub	lr, r2, #48	; 0x30
40025fd4:	e35e0009 	cmp	lr, #9
40025fd8:	849df004 	pophi	{pc}		; (ldrhi pc, [sp], #4)
40025fdc:	e020209c 	mla	r0, ip, r0, r2
40025fe0:	e1510003 	cmp	r1, r3
40025fe4:	e2400030 	sub	r0, r0, #48	; 0x30
40025fe8:	1afffff7 	bne	40025fcc <remoteconfig::timedate::atoi(char const*, unsigned long)+0x14>
40025fec:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

40025ff0 <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)>:
40025ff0:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
40025ff4:	e24dd02c 	sub	sp, sp, #44	; 0x2c
40025ff8:	e1a04000 	mov	r4, r0
40025ffc:	e1a05001 	mov	r5, r1
40026000:	e28d0020 	add	r0, sp, #32
40026004:	e3a01000 	mov	r1, #0
40026008:	eb001c4c 	bl	4002d140 <gettimeofday>
4002600c:	e3500000 	cmp	r0, #0
40026010:	b3a00000 	movlt	r0, #0
40026014:	ba00003e 	blt	40026114 <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)+0x124>
40026018:	e28d0020 	add	r0, sp, #32
4002601c:	e3a0803c 	mov	r8, #60	; 0x3c
40026020:	eb001be3 	bl	4002cfb4 <localtime>
40026024:	e59f30f0 	ldr	r3, [pc, #240]	; 4002611c <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)+0x12c>
40026028:	e3a0cee1 	mov	ip, #3600	; 0xe10
4002602c:	e5906000 	ldr	r6, [r0]
40026030:	e5931010 	ldr	r1, [r3, #16]
40026034:	e5903014 	ldr	r3, [r0, #20]
40026038:	e717fc11 	sdiv	r7, r1, ip
4002603c:	e6afe077 	sxtb	lr, r7
40026040:	e35e0000 	cmp	lr, #0
40026044:	da00001a 	ble	400260b4 <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)+0xc4>
40026048:	e59f20d0 	ldr	r2, [pc, #208]	; 40026120 <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)+0x130>
4002604c:	e0221e92 	mla	r2, r2, lr, r1
40026050:	e732f812 	udiv	r2, r2, r8
40026054:	e6ef2072 	uxtb	r2, r2
40026058:	e5901010 	ldr	r1, [r0, #16]
4002605c:	e35e0000 	cmp	lr, #0
40026060:	e59f90bc 	ldr	r9, [pc, #188]	; 40026124 <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)+0x134>
40026064:	e2833e76 	add	r3, r3, #1888	; 0x760
40026068:	e590c00c 	ldr	ip, [r0, #12]
4002606c:	e2811001 	add	r1, r1, #1
40026070:	e5907008 	ldr	r7, [r0, #8]
40026074:	e283300c 	add	r3, r3, #12
40026078:	e5908004 	ldr	r8, [r0, #4]
4002607c:	e59f00a4 	ldr	r0, [pc, #164]	; 40026128 <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)+0x138>
40026080:	d1a00009 	movle	r0, r9
40026084:	e58d201c 	str	r2, [sp, #28]
40026088:	e58d0014 	str	r0, [sp, #20]
4002608c:	e1a00004 	mov	r0, r4
40026090:	e88d1002 	stm	sp, {r1, ip}
40026094:	e59f2090 	ldr	r2, [pc, #144]	; 4002612c <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)+0x13c>
40026098:	e1a01005 	mov	r1, r5
4002609c:	e58de018 	str	lr, [sp, #24]
400260a0:	e58d6010 	str	r6, [sp, #16]
400260a4:	e58d800c 	str	r8, [sp, #12]
400260a8:	e58d7008 	str	r7, [sp, #8]
400260ac:	eb001ad4 	bl	4002cc04 <snprintf>
400260b0:	ea000017 	b	40026114 <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)+0x124>
400260b4:	e0020e9c 	mul	r2, ip, lr
400260b8:	e0422001 	sub	r2, r2, r1
400260bc:	e732f812 	udiv	r2, r2, r8
400260c0:	e6ef2072 	uxtb	r2, r2
400260c4:	e1827007 	orr	r7, r2, r7
400260c8:	e6ef7077 	uxtb	r7, r7
400260cc:	e3570000 	cmp	r7, #0
400260d0:	1affffe0 	bne	40026058 <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)+0x68>
400260d4:	e58d6010 	str	r6, [sp, #16]
400260d8:	e2833e76 	add	r3, r3, #1888	; 0x760
400260dc:	e5902004 	ldr	r2, [r0, #4]
400260e0:	e283300c 	add	r3, r3, #12
400260e4:	e1a01005 	mov	r1, r5
400260e8:	e58d200c 	str	r2, [sp, #12]
400260ec:	e5902008 	ldr	r2, [r0, #8]
400260f0:	e58d2008 	str	r2, [sp, #8]
400260f4:	e590200c 	ldr	r2, [r0, #12]
400260f8:	e58d2004 	str	r2, [sp, #4]
400260fc:	e5902010 	ldr	r2, [r0, #16]
40026100:	e1a00004 	mov	r0, r4
40026104:	e2822001 	add	r2, r2, #1
40026108:	e58d2000 	str	r2, [sp]
4002610c:	e59f201c 	ldr	r2, [pc, #28]	; 40026130 <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)+0x140>
40026110:	eb001abb 	bl	4002cc04 <snprintf>
40026114:	e28dd02c 	add	sp, sp, #44	; 0x2c
40026118:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
4002611c:	4005901c 	andmi	r9, r5, ip, lsl r0
40026120:	fffff1f0 			; <UNDEFINED> instruction: 0xfffff1f0
40026124:	4002ded2 	ldrdmi	sp, [r2], -r2
40026128:	40032df9 	strdmi	r2, [r3], -r9
4002612c:	40032e74 	andmi	r2, r3, r4, ror lr
40026130:	40032e4b 	andmi	r2, r3, fp, asr #28

40026134 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)>:
40026134:	e351001f 	cmp	r1, #31
40026138:	1351001a 	cmpne	r1, #26
4002613c:	112fff1e 	bxne	lr
40026140:	e92d4070 	push	{r4, r5, r6, lr}
40026144:	e1a06000 	mov	r6, r0
40026148:	e24dd030 	sub	sp, sp, #48	; 0x30
4002614c:	e1a04001 	mov	r4, r1
40026150:	e2800005 	add	r0, r0, #5
40026154:	e3a01004 	mov	r1, #4
40026158:	ebffff96 	bl	40025fb8 <remoteconfig::timedate::atoi(char const*, unsigned long)>
4002615c:	e2400e76 	sub	r0, r0, #1888	; 0x760
40026160:	e3a01002 	mov	r1, #2
40026164:	e240000c 	sub	r0, r0, #12
40026168:	e58d0020 	str	r0, [sp, #32]
4002616c:	e286000a 	add	r0, r6, #10
40026170:	ebffff90 	bl	40025fb8 <remoteconfig::timedate::atoi(char const*, unsigned long)>
40026174:	e2400001 	sub	r0, r0, #1
40026178:	e3a01002 	mov	r1, #2
4002617c:	e58d001c 	str	r0, [sp, #28]
40026180:	e286000d 	add	r0, r6, #13
40026184:	ebffff8b 	bl	40025fb8 <remoteconfig::timedate::atoi(char const*, unsigned long)>
40026188:	e58d0018 	str	r0, [sp, #24]
4002618c:	e3a01002 	mov	r1, #2
40026190:	e2860010 	add	r0, r6, #16
40026194:	ebffff87 	bl	40025fb8 <remoteconfig::timedate::atoi(char const*, unsigned long)>
40026198:	e58d0014 	str	r0, [sp, #20]
4002619c:	e3a01002 	mov	r1, #2
400261a0:	e2860013 	add	r0, r6, #19
400261a4:	ebffff83 	bl	40025fb8 <remoteconfig::timedate::atoi(char const*, unsigned long)>
400261a8:	e58d0010 	str	r0, [sp, #16]
400261ac:	e3a01002 	mov	r1, #2
400261b0:	e2860016 	add	r0, r6, #22
400261b4:	ebffff7f 	bl	40025fb8 <remoteconfig::timedate::atoi(char const*, unsigned long)>
400261b8:	e58d000c 	str	r0, [sp, #12]
400261bc:	e28d000c 	add	r0, sp, #12
400261c0:	eb001b89 	bl	4002cfec <mktime>
400261c4:	e58d0004 	str	r0, [sp, #4]
400261c8:	e354001a 	cmp	r4, #26
400261cc:	e3a03000 	mov	r3, #0
400261d0:	e1a05000 	mov	r5, r0
400261d4:	e58d3008 	str	r3, [sp, #8]
400261d8:	0a000031 	beq	400262a4 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0x170>
400261dc:	e5d63018 	ldrb	r3, [r6, #24]
400261e0:	e3a01002 	mov	r1, #2
400261e4:	e2860019 	add	r0, r6, #25
400261e8:	e353002d 	cmp	r3, #45	; 0x2d
400261ec:	03e04000 	mvneq	r4, #0
400261f0:	13a04001 	movne	r4, #1
400261f4:	ebffff6f 	bl	40025fb8 <remoteconfig::timedate::atoi(char const*, unsigned long)>
400261f8:	e0040490 	mul	r4, r0, r4
400261fc:	e20430ff 	and	r3, r4, #255	; 0xff
40026200:	e283200c 	add	r2, r3, #12
40026204:	e6ef2072 	uxtb	r2, r2
40026208:	e352001a 	cmp	r2, #26
4002620c:	8a000020 	bhi	40026294 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0x160>
40026210:	e3a01002 	mov	r1, #2
40026214:	e286001c 	add	r0, r6, #28
40026218:	e6af4073 	sxtb	r4, r3
4002621c:	ebffff65 	bl	40025fb8 <remoteconfig::timedate::atoi(char const*, unsigned long)>
40026220:	e21000ff 	ands	r0, r0, #255	; 0xff
40026224:	03a03ee1 	moveq	r3, #3600	; 0xe10
40026228:	00030493 	muleq	r3, r3, r4
4002622c:	0a00000d 	beq	40026268 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0x134>
40026230:	e59f3080 	ldr	r3, [pc, #128]	; 400262b8 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0x184>
40026234:	e3a0200b 	mov	r2, #11
40026238:	e1d310d0 	ldrsb	r1, [r3]
4002623c:	e1510004 	cmp	r1, r4
40026240:	1a000010 	bne	40026288 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0x154>
40026244:	e5d31001 	ldrb	r1, [r3, #1]
40026248:	e1510000 	cmp	r1, r0
4002624c:	1a00000d 	bne	40026288 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0x154>
40026250:	e3540000 	cmp	r4, #0
40026254:	e3a03ee1 	mov	r3, #3600	; 0xe10
40026258:	e0030493 	mul	r3, r3, r4
4002625c:	c3a0203c 	movgt	r2, #60	; 0x3c
40026260:	d3e0203b 	mvnle	r2, #59	; 0x3b
40026264:	e0233092 	mla	r3, r2, r0, r3
40026268:	e59f204c 	ldr	r2, [pc, #76]	; 400262bc <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0x188>
4002626c:	e5921010 	ldr	r1, [r2, #16]
40026270:	e1510003 	cmp	r1, r3
40026274:	15823010 	strne	r3, [r2, #16]
40026278:	13a02001 	movne	r2, #1
4002627c:	159f303c 	ldrne	r3, [pc, #60]	; 400262c0 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0x18c>
40026280:	15832000 	strne	r2, [r3]
40026284:	ea000002 	b	40026294 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0x160>
40026288:	e2522001 	subs	r2, r2, #1
4002628c:	e2833002 	add	r3, r3, #2
40026290:	1affffe8 	bne	40026238 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0x104>
40026294:	e59f3020 	ldr	r3, [pc, #32]	; 400262bc <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0x188>
40026298:	e5930010 	ldr	r0, [r3, #16]
4002629c:	e0455000 	sub	r5, r5, r0
400262a0:	e58d5004 	str	r5, [sp, #4]
400262a4:	e3a01000 	mov	r1, #0
400262a8:	e28d0004 	add	r0, sp, #4
400262ac:	eb001be9 	bl	4002d258 <settimeofday>
400262b0:	e28dd030 	add	sp, sp, #48	; 0x30
400262b4:	e8bd8070 	pop	{r4, r5, r6, pc}
400262b8:	4002dc1c 	andmi	sp, r2, ip, lsl ip
400262bc:	4005901c 	andmi	r9, r5, ip, lsl r0
400262c0:	4005a028 	andmi	sl, r5, r8, lsr #32

400262c4 <remoteconfig::storage::json_get_directory(char*, unsigned long)>:
400262c4:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
400262c8:	e1a05000 	mov	r5, r0
400262cc:	e59f00b8 	ldr	r0, [pc, #184]	; 4002638c <remoteconfig::storage::json_get_directory(char*, unsigned long)+0xc8>
400262d0:	e2417002 	sub	r7, r1, #2
400262d4:	eb0001b8 	bl	400269bc <opendir>
400262d8:	e59f20b0 	ldr	r2, [pc, #176]	; 40026390 <remoteconfig::storage::json_get_directory(char*, unsigned long)+0xcc>
400262dc:	e2506000 	subs	r6, r0, #0
400262e0:	e59f30ac 	ldr	r3, [pc, #172]	; 40026394 <remoteconfig::storage::json_get_directory(char*, unsigned long)+0xd0>
400262e4:	e1a01007 	mov	r1, r7
400262e8:	11a03002 	movne	r3, r2
400262ec:	e1a00005 	mov	r0, r5
400262f0:	e59f20a0 	ldr	r2, [pc, #160]	; 40026398 <remoteconfig::storage::json_get_directory(char*, unsigned long)+0xd4>
400262f4:	eb001a42 	bl	4002cc04 <snprintf>
400262f8:	e3560000 	cmp	r6, #0
400262fc:	e1a04000 	mov	r4, r0
40026300:	0a00001b 	beq	40026374 <remoteconfig::storage::json_get_directory(char*, unsigned long)+0xb0>
40026304:	e59f8090 	ldr	r8, [pc, #144]	; 4002639c <remoteconfig::storage::json_get_directory(char*, unsigned long)+0xd8>
40026308:	e1a00006 	mov	r0, r6
4002630c:	eb0001b0 	bl	400269d4 <readdir>
40026310:	e2503000 	subs	r3, r0, #0
40026314:	0a000010 	beq	4002635c <remoteconfig::storage::json_get_directory(char*, unsigned long)+0x98>
40026318:	e5d32000 	ldrb	r2, [r3]
4002631c:	e3520004 	cmp	r2, #4
40026320:	0afffff8 	beq	40026308 <remoteconfig::storage::json_get_directory(char*, unsigned long)+0x44>
40026324:	e5d32001 	ldrb	r2, [r3, #1]
40026328:	e352002e 	cmp	r2, #46	; 0x2e
4002632c:	0afffff5 	beq	40026308 <remoteconfig::storage::json_get_directory(char*, unsigned long)+0x44>
40026330:	e0479004 	sub	r9, r7, r4
40026334:	e2833001 	add	r3, r3, #1
40026338:	e0850004 	add	r0, r5, r4
4002633c:	e1a02008 	mov	r2, r8
40026340:	e1a01009 	mov	r1, r9
40026344:	eb001a2e 	bl	4002cc04 <snprintf>
40026348:	e1590000 	cmp	r9, r0
4002634c:	3a000002 	bcc	4002635c <remoteconfig::storage::json_get_directory(char*, unsigned long)+0x98>
40026350:	e0844000 	add	r4, r4, r0
40026354:	e1570004 	cmp	r7, r4
40026358:	8affffea 	bhi	40026308 <remoteconfig::storage::json_get_directory(char*, unsigned long)+0x44>
4002635c:	e1a00006 	mov	r0, r6
40026360:	eb0001a1 	bl	400269ec <closedir>
40026364:	e2443001 	sub	r3, r4, #1
40026368:	e7d52003 	ldrb	r2, [r5, r3]
4002636c:	e352002c 	cmp	r2, #44	; 0x2c
40026370:	01a04003 	moveq	r4, r3
40026374:	e3a0305d 	mov	r3, #93	; 0x5d
40026378:	e2840002 	add	r0, r4, #2
4002637c:	e7e53004 	strb	r3, [r5, r4]!
40026380:	e3a0307d 	mov	r3, #125	; 0x7d
40026384:	e5c53001 	strb	r3, [r5, #1]
40026388:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4002638c:	4002e1e4 	andmi	lr, r2, r4, ror #3
40026390:	40032eaa 	andmi	r2, r3, sl, lsr #29
40026394:	40032ea7 	andmi	r2, r3, r7, lsr #29
40026398:	40032eb2 			; <UNDEFINED> instruction: 0x40032eb2
4002639c:	4002e148 	andmi	lr, r2, r8, asr #2

400263a0 <EXTIA_IRQHandler()>:
400263a0:	e3a03c0a 	mov	r3, #2560	; 0xa00
400263a4:	e3e02000 	mvn	r2, #0
400263a8:	e34031c2 	movt	r3, #450	; 0x1c2
400263ac:	e5832014 	str	r2, [r3, #20]
400263b0:	e12fff1e 	bx	lr

400263b4 <EXTIG_IRQHandler()>:
400263b4:	e3a03c0a 	mov	r3, #2560	; 0xa00
400263b8:	e3e02000 	mvn	r2, #0
400263bc:	e34031c2 	movt	r3, #450	; 0x1c2
400263c0:	e5832034 	str	r2, [r3, #52]	; 0x34
400263c4:	e12fff1e 	bx	lr

400263c8 <IRQ_Handler()>:
400263c8:	e24ee004 	sub	lr, lr, #4
400263cc:	e92d503f 	push	{r0, r1, r2, r3, r4, r5, ip, lr}
400263d0:	f57ff05f 	dmb	sy
400263d4:	e3a03a02 	mov	r3, #8192	; 0x2000
400263d8:	e34031c8 	movt	r3, #456	; 0x1c8
400263dc:	e5934020 	ldr	r4, [r3, #32]
400263e0:	e1a00004 	mov	r0, r4
400263e4:	eb000cb7 	bl	400296c8 <IRQ_GetHandler>
400263e8:	e3500000 	cmp	r0, #0
400263ec:	0a000000 	beq	400263f4 <IRQ_Handler()+0x2c>
400263f0:	e12fff30 	blx	r0
400263f4:	e204101f 	and	r1, r4, #31
400263f8:	e3a02001 	mov	r2, #1
400263fc:	e1a032a4 	lsr	r3, r4, #5
40026400:	e3a00a02 	mov	r0, #8192	; 0x2000
40026404:	e1a02112 	lsl	r2, r2, r1
40026408:	e3a01a01 	mov	r1, #4096	; 0x1000
4002640c:	e34001c8 	movt	r0, #456	; 0x1c8
40026410:	e28330a0 	add	r3, r3, #160	; 0xa0
40026414:	e34011c8 	movt	r1, #456	; 0x1c8
40026418:	e5804024 	str	r4, [r0, #36]	; 0x24
4002641c:	e7812103 	str	r2, [r1, r3, lsl #2]
40026420:	f57ff05f 	dmb	sy
40026424:	e8fd903f 	ldm	sp!, {r0, r1, r2, r3, r4, r5, ip, pc}^

40026428 <Hardware::Hardware()>:
40026428:	e92d4010 	push	{r4, lr}
4002642c:	e1a04000 	mov	r4, r0
40026430:	eb000173 	bl	40026a04 <HwClock::HwClock()>
40026434:	e3a03000 	mov	r3, #0
40026438:	e3a02006 	mov	r2, #6
4002643c:	e5c43020 	strb	r3, [r4, #32]
40026440:	e5c43028 	strb	r3, [r4, #40]	; 0x28
40026444:	e3e03000 	mvn	r3, #0
40026448:	e584302c 	str	r3, [r4, #44]	; 0x2c
4002644c:	e59f305c 	ldr	r3, [pc, #92]	; 400264b0 <Hardware::Hardware()+0x88>
40026450:	e5842024 	str	r2, [r4, #36]	; 0x24
40026454:	e5834000 	str	r4, [r3]
40026458:	ebff68c3 	bl	4000076c <hardware_init()>
4002645c:	e2840010 	add	r0, r4, #16
40026460:	eb001b20 	bl	4002d0e8 <hal::uuid_init(unsigned char*)>
40026464:	e1a00004 	mov	r0, r4
40026468:	eb0003d2 	bl	400273b8 <HwClock::RtcProbe()>
4002646c:	e1a00004 	mov	r0, r4
40026470:	eb00016d 	bl	40026a2c <HwClock::Print()>
40026474:	e1a00004 	mov	r0, r4
40026478:	eb00018f 	bl	40026abc <HwClock::HcToSys()>
4002647c:	e3a00001 	mov	r0, #1
40026480:	eb000049 	bl	400265ac <hardware_led_set(int)>
40026484:	e59f1028 	ldr	r1, [pc, #40]	; 400264b4 <Hardware::Hardware()+0x8c>
40026488:	e3a0002b 	mov	r0, #43	; 0x2b
4002648c:	eb000c86 	bl	400296ac <IRQ_SetHandler>
40026490:	e59f1020 	ldr	r1, [pc, #32]	; 400264b8 <Hardware::Hardware()+0x90>
40026494:	e3a00031 	mov	r0, #49	; 0x31
40026498:	eb000c83 	bl	400296ac <IRQ_SetHandler>
4002649c:	e59f0018 	ldr	r0, [pc, #24]	; 400264bc <Hardware::Hardware()+0x94>
400264a0:	e3a01018 	mov	r1, #24
400264a4:	eb000c8e 	bl	400296e4 <arm_install_handler>
400264a8:	e1a00004 	mov	r0, r4
400264ac:	e8bd8010 	pop	{r4, pc}
400264b0:	40034088 	andmi	r4, r3, r8, lsl #1
400264b4:	400263a0 	andmi	r6, r2, r0, lsr #7
400264b8:	400263b4 			; <UNDEFINED> instruction: 0x400263b4
400264bc:	400263c8 	andmi	r6, r2, r8, asr #7

400264c0 <Hardware::GetBoardName(unsigned char&)>:
400264c0:	e59f0008 	ldr	r0, [pc, #8]	; 400264d0 <Hardware::GetBoardName(unsigned char&)+0x10>
400264c4:	e3a0300e 	mov	r3, #14
400264c8:	e5c13000 	strb	r3, [r1]
400264cc:	e12fff1e 	bx	lr
400264d0:	40032eca 	andmi	r2, r3, sl, asr #29

400264d4 <Hardware::Reboot()>:
400264d4:	e92d4010 	push	{r4, lr}
400264d8:	e1a04000 	mov	r4, r0
400264dc:	e59f007c 	ldr	r0, [pc, #124]	; 40026560 <Hardware::Reboot()+0x8c>
400264e0:	eb0019ec 	bl	4002cc98 <puts>
400264e4:	eb0015e5 	bl	4002bc80 <h3_watchdog_disable()>
400264e8:	e1a00004 	mov	r0, r4
400264ec:	eb0001b7 	bl	40026bd0 <HwClock::SysToHc()>
400264f0:	ebff7336 	bl	400031d0 <hal::reboot_handler()>
400264f4:	ebffec37 	bl	400215d8 <net::net_shutdown()>
400264f8:	eb001c61 	bl	4002d684 <clean_data_cache>
400264fc:	eb001c36 	bl	4002d5dc <invalidate_data_cache>
40026500:	e3a01000 	mov	r1, #0
40026504:	e3a0000f 	mov	r0, #15
40026508:	eb000b9b 	bl	4002937c <h3_gpio_fsel>
4002650c:	e3a01002 	mov	r1, #2
40026510:	e3a0000f 	mov	r0, #15
40026514:	eb000bcd 	bl	40029450 <h3_gpio_set_pud>
40026518:	e3a01000 	mov	r1, #0
4002651c:	e3a0000e 	mov	r0, #14
40026520:	eb000b95 	bl	4002937c <h3_gpio_fsel>
40026524:	e3a01002 	mov	r1, #2
40026528:	e3a0000e 	mov	r0, #14
4002652c:	eb000bc7 	bl	40029450 <h3_gpio_set_pud>
40026530:	e3a01000 	mov	r1, #0
40026534:	e3a0000d 	mov	r0, #13
40026538:	eb000b8f 	bl	4002937c <h3_gpio_fsel>
4002653c:	e3a01002 	mov	r1, #2
40026540:	e3a0000d 	mov	r0, #13
40026544:	eb000bc1 	bl	40029450 <h3_gpio_set_pud>
40026548:	e3a01005 	mov	r1, #5
4002654c:	e1a00004 	mov	r0, r4
40026550:	ebfffe6b 	bl	40025f04 <Hardware::SetMode(hardware::ledblink::Mode)>
40026554:	eb0015ba 	bl	4002bc44 <h3_watchdog_enable()>
40026558:	eb0005c6 	bl	40027c78 <SoftwareTimerRun()>
4002655c:	eafffffd 	b	40026558 <Hardware::Reboot()+0x84>
40026560:	4002e1d8 	ldrdmi	lr, [r2], -r8

40026564 <hardware_uptime_seconds()>:
40026564:	e59f3018 	ldr	r3, [pc, #24]	; 40026584 <hardware_uptime_seconds()+0x20>
40026568:	e3a00ffa 	mov	r0, #1000	; 0x3e8
4002656c:	e59f2014 	ldr	r2, [pc, #20]	; 40026588 <hardware_uptime_seconds()+0x24>
40026570:	e5933084 	ldr	r3, [r3, #132]	; 0x84
40026574:	e733f013 	udiv	r3, r3, r0
40026578:	e5920000 	ldr	r0, [r2]
4002657c:	e0430000 	sub	r0, r3, r0
40026580:	e12fff1e 	bx	lr
40026584:	01c20c00 	biceq	r0, r2, r0, lsl #24
40026588:	40062ef8 	strdmi	r2, [r6], -r8

4002658c <hardware_led_init()>:
4002658c:	e3a01001 	mov	r1, #1
40026590:	e3a00011 	mov	r0, #17
40026594:	e92d4010 	push	{r4, lr}
40026598:	eb000b77 	bl	4002937c <h3_gpio_fsel>
4002659c:	e8bd4010 	pop	{r4, lr}
400265a0:	e3a01001 	mov	r1, #1
400265a4:	e3a00013 	mov	r0, #19
400265a8:	ea000b73 	b	4002937c <h3_gpio_fsel>

400265ac <hardware_led_set(int)>:
400265ac:	e59f2014 	ldr	r2, [pc, #20]	; 400265c8 <hardware_led_set(int)+0x1c>
400265b0:	e3500000 	cmp	r0, #0
400265b4:	e5923010 	ldr	r3, [r2, #16]
400265b8:	03c3380a 	biceq	r3, r3, #655360	; 0xa0000
400265bc:	1383380a 	orrne	r3, r3, #655360	; 0xa0000
400265c0:	e5823010 	str	r3, [r2, #16]
400265c4:	e12fff1e 	bx	lr
400265c8:	01c20800 	biceq	r0, r2, r0, lsl #16

400265cc <console_putc>:
400265cc:	ea001669 	b	4002bf78 <uart0_putc>

400265d0 <console_puts>:
400265d0:	ea001676 	b	4002bfb0 <uart0_puts>

400265d4 <console_error>:
400265d4:	e92d4010 	push	{r4, lr}
400265d8:	e1a04000 	mov	r4, r0
400265dc:	e59f0014 	ldr	r0, [pc, #20]	; 400265f8 <console_error+0x24>
400265e0:	eb001672 	bl	4002bfb0 <uart0_puts>
400265e4:	e1a00004 	mov	r0, r4
400265e8:	eb001670 	bl	4002bfb0 <uart0_puts>
400265ec:	e8bd4010 	pop	{r4, lr}
400265f0:	e59f0004 	ldr	r0, [pc, #4]	; 400265fc <console_error+0x28>
400265f4:	ea00166d 	b	4002bfb0 <uart0_puts>
400265f8:	40032efb 	strdmi	r2, [r3], -fp
400265fc:	40032f01 	andmi	r2, r3, r1, lsl #30

40026600 <console_set_fg_color>:
40026600:	e3500007 	cmp	r0, #7
40026604:	979ff100 	ldrls	pc, [pc, r0, lsl #2]
40026608:	ea000011 	b	40026654 <console_set_fg_color+0x54>
4002660c:	4002662c 	andmi	r6, r2, ip, lsr #12
40026610:	40026634 	andmi	r6, r2, r4, lsr r6
40026614:	4002663c 	andmi	r6, r2, ip, lsr r6
40026618:	40026644 	andmi	r6, r2, r4, asr #12
4002661c:	40026654 	andmi	r6, r2, r4, asr r6
40026620:	40026654 	andmi	r6, r2, r4, asr r6
40026624:	40026654 	andmi	r6, r2, r4, asr r6
40026628:	4002664c 	andmi	r6, r2, ip, asr #12
4002662c:	e59f0028 	ldr	r0, [pc, #40]	; 4002665c <console_set_fg_color+0x5c>
40026630:	ea00165e 	b	4002bfb0 <uart0_puts>
40026634:	e59f0024 	ldr	r0, [pc, #36]	; 40026660 <console_set_fg_color+0x60>
40026638:	eafffffc 	b	40026630 <console_set_fg_color+0x30>
4002663c:	e59f0020 	ldr	r0, [pc, #32]	; 40026664 <console_set_fg_color+0x64>
40026640:	eafffffa 	b	40026630 <console_set_fg_color+0x30>
40026644:	e59f001c 	ldr	r0, [pc, #28]	; 40026668 <console_set_fg_color+0x68>
40026648:	eafffff8 	b	40026630 <console_set_fg_color+0x30>
4002664c:	e59f0018 	ldr	r0, [pc, #24]	; 4002666c <console_set_fg_color+0x6c>
40026650:	eafffff6 	b	40026630 <console_set_fg_color+0x30>
40026654:	e59f0014 	ldr	r0, [pc, #20]	; 40026670 <console_set_fg_color+0x70>
40026658:	eafffff4 	b	40026630 <console_set_fg_color+0x30>
4002665c:	40032f07 	andmi	r2, r3, r7, lsl #30
40026660:	40032efb 	strdmi	r2, [r3], -fp
40026664:	40032f0d 	andmi	r2, r3, sp, lsl #30
40026668:	40032f13 	andmi	r2, r3, r3, lsl pc
4002666c:	40032f01 	andmi	r2, r3, r1, lsl #30
40026670:	40032f19 	andmi	r2, r3, r9, lsl pc

40026674 <console_status>:
40026674:	e92d4010 	push	{r4, lr}
40026678:	e6ff0070 	uxth	r0, r0
4002667c:	e1a04001 	mov	r4, r1
40026680:	ebffffde 	bl	40026600 <console_set_fg_color>
40026684:	e59f001c 	ldr	r0, [pc, #28]	; 400266a8 <console_status+0x34>
40026688:	eb001648 	bl	4002bfb0 <uart0_puts>
4002668c:	e1a00004 	mov	r0, r4
40026690:	eb001646 	bl	4002bfb0 <uart0_puts>
40026694:	e3a0000a 	mov	r0, #10
40026698:	eb001636 	bl	4002bf78 <uart0_putc>
4002669c:	e8bd4010 	pop	{r4, lr}
400266a0:	e59f0004 	ldr	r0, [pc, #4]	; 400266ac <console_status+0x38>
400266a4:	ea001641 	b	4002bfb0 <uart0_puts>
400266a8:	40032f1f 	andmi	r2, r3, pc, lsl pc
400266ac:	40032f01 	andmi	r2, r3, r1, lsl #30

400266b0 <fileno>:
400266b0:	e3500000 	cmp	r0, #0
400266b4:	1a000004 	bne	400266cc <fileno+0x1c>
400266b8:	e59f3034 	ldr	r3, [pc, #52]	; 400266f4 <fileno+0x44>
400266bc:	e3a02009 	mov	r2, #9
400266c0:	e3e00000 	mvn	r0, #0
400266c4:	e5832000 	str	r2, [r3]
400266c8:	e12fff1e 	bx	lr
400266cc:	e59f3024 	ldr	r3, [pc, #36]	; 400266f8 <fileno+0x48>
400266d0:	e1500003 	cmp	r0, r3
400266d4:	0a000004 	beq	400266ec <fileno+0x3c>
400266d8:	e2833008 	add	r3, r3, #8
400266dc:	e1500003 	cmp	r0, r3
400266e0:	03a00001 	moveq	r0, #1
400266e4:	13e00000 	mvnne	r0, #0
400266e8:	e12fff1e 	bx	lr
400266ec:	e3a00000 	mov	r0, #0
400266f0:	e12fff1e 	bx	lr
400266f4:	4006c134 	andmi	ip, r6, r4, lsr r1
400266f8:	40063128 	andmi	r3, r6, r8, lsr #2

400266fc <fopen>:
400266fc:	e92d4070 	push	{r4, r5, r6, lr}
40026700:	e1a0e000 	mov	lr, r0
40026704:	e59f60e8 	ldr	r6, [pc, #232]	; 400267f4 <fopen+0xf8>
40026708:	e3a00000 	mov	r0, #0
4002670c:	e5860000 	str	r0, [r6]
40026710:	e5d13000 	ldrb	r3, [r1]
40026714:	e3530072 	cmp	r3, #114	; 0x72
40026718:	0a000006 	beq	40026738 <fopen+0x3c>
4002671c:	e3530077 	cmp	r3, #119	; 0x77
40026720:	0a00000f 	beq	40026764 <fopen+0x68>
40026724:	e3530061 	cmp	r3, #97	; 0x61
40026728:	03a02030 	moveq	r2, #48	; 0x30
4002672c:	18bd8070 	popne	{r4, r5, r6, pc}
40026730:	e3a0c002 	mov	ip, #2
40026734:	ea000001 	b	40026740 <fopen+0x44>
40026738:	e1a02000 	mov	r2, r0
4002673c:	e3a0c001 	mov	ip, #1
40026740:	e5f10001 	ldrb	r0, [r1, #1]!
40026744:	e3500000 	cmp	r0, #0
40026748:	0a00000b 	beq	4002677c <fopen+0x80>
4002674c:	e350002b 	cmp	r0, #43	; 0x2b
40026750:	0a000005 	beq	4002676c <fopen+0x70>
40026754:	e3500078 	cmp	r0, #120	; 0x78
40026758:	0a000005 	beq	40026774 <fopen+0x78>
4002675c:	e3a00000 	mov	r0, #0
40026760:	e8bd8070 	pop	{r4, r5, r6, pc}
40026764:	e3a02008 	mov	r2, #8
40026768:	eafffff0 	b	40026730 <fopen+0x34>
4002676c:	e3a0c003 	mov	ip, #3
40026770:	eafffff2 	b	40026740 <fopen+0x44>
40026774:	e3a02004 	mov	r2, #4
40026778:	eafffff0 	b	40026740 <fopen+0x44>
4002677c:	e59f5074 	ldr	r5, [pc, #116]	; 400267f8 <fopen+0xfc>
40026780:	e5954000 	ldr	r4, [r5]
40026784:	e3540000 	cmp	r4, #0
40026788:	0a000006 	beq	400267a8 <fopen+0xac>
4002678c:	e5953008 	ldr	r3, [r5, #8]
40026790:	e3530000 	cmp	r3, #0
40026794:	0a000002 	beq	400267a4 <fopen+0xa8>
40026798:	e3a03009 	mov	r3, #9
4002679c:	e5863000 	str	r3, [r6]
400267a0:	e8bd8070 	pop	{r4, r5, r6, pc}
400267a4:	e3a04001 	mov	r4, #1
400267a8:	e59f304c 	ldr	r3, [pc, #76]	; 400267fc <fopen+0x100>
400267ac:	e3a00e22 	mov	r0, #544	; 0x220
400267b0:	e18c2002 	orr	r2, ip, r2
400267b4:	e1a0100e 	mov	r1, lr
400267b8:	e0203490 	mla	r0, r0, r4, r3
400267bc:	e7850184 	str	r0, [r5, r4, lsl #3]
400267c0:	eb0008d7 	bl	40028b24 <f_open>
400267c4:	e59f3034 	ldr	r3, [pc, #52]	; 40026800 <fopen+0x104>
400267c8:	e3500013 	cmp	r0, #19
400267cc:	e5c30000 	strb	r0, [r3]
400267d0:	83a03028 	movhi	r3, #40	; 0x28
400267d4:	959f3028 	ldrls	r3, [pc, #40]	; 40026804 <fopen+0x108>
400267d8:	919330d0 	ldrsbls	r3, [r3, r0]
400267dc:	e3500000 	cmp	r0, #0
400267e0:	00850184 	addeq	r0, r5, r4, lsl #3
400267e4:	13a00000 	movne	r0, #0
400267e8:	e5863000 	str	r3, [r6]
400267ec:	17850184 	strne	r0, [r5, r4, lsl #3]
400267f0:	e8bd8070 	pop	{r4, r5, r6, pc}
400267f4:	4006c134 	andmi	ip, r6, r4, lsr r1
400267f8:	40063128 	andmi	r3, r6, r8, lsr #2
400267fc:	40063138 	andmi	r3, r6, r8, lsr r1
40026800:	40063578 	andmi	r3, r6, r8, ror r5
40026804:	40032f37 	andmi	r2, r3, r7, lsr pc

40026808 <fclose>:
40026808:	e92d4070 	push	{r4, r5, r6, lr}
4002680c:	e2504000 	subs	r4, r0, #0
40026810:	e59f5068 	ldr	r5, [pc, #104]	; 40026880 <fclose+0x78>
40026814:	e3a03000 	mov	r3, #0
40026818:	e5853000 	str	r3, [r5]
4002681c:	0a000015 	beq	40026878 <fclose+0x70>
40026820:	ebffffa2 	bl	400266b0 <fileno>
40026824:	e3500000 	cmp	r0, #0
40026828:	aa000003 	bge	4002683c <fclose+0x34>
4002682c:	e3a03009 	mov	r3, #9
40026830:	e3e00000 	mvn	r0, #0
40026834:	e5853000 	str	r3, [r5]
40026838:	e8bd8070 	pop	{r4, r5, r6, pc}
4002683c:	e5940000 	ldr	r0, [r4]
40026840:	eb000958 	bl	40028da8 <f_close>
40026844:	e59f3038 	ldr	r3, [pc, #56]	; 40026884 <fclose+0x7c>
40026848:	e3500013 	cmp	r0, #19
4002684c:	e5c30000 	strb	r0, [r3]
40026850:	83a03028 	movhi	r3, #40	; 0x28
40026854:	959f302c 	ldrls	r3, [pc, #44]	; 40026888 <fclose+0x80>
40026858:	919330d0 	ldrsbls	r3, [r3, r0]
4002685c:	e5853000 	str	r3, [r5]
40026860:	e3a03000 	mov	r3, #0
40026864:	e0500003 	subs	r0, r0, r3
40026868:	e5843000 	str	r3, [r4]
4002686c:	13a00001 	movne	r0, #1
40026870:	e2600000 	rsb	r0, r0, #0
40026874:	e8bd8070 	pop	{r4, r5, r6, pc}
40026878:	e1a00004 	mov	r0, r4
4002687c:	e8bd8070 	pop	{r4, r5, r6, pc}
40026880:	4006c134 	andmi	ip, r6, r4, lsr r1
40026884:	40063578 	andmi	r3, r6, r8, ror r5
40026888:	40032f37 	andmi	r2, r3, r7, lsr pc

4002688c <fread>:
4002688c:	e1a0c003 	mov	ip, r3
40026890:	e92d4007 	push	{r0, r1, r2, lr}
40026894:	e28d3004 	add	r3, sp, #4
40026898:	e0020192 	mul	r2, r2, r1
4002689c:	e1a01000 	mov	r1, r0
400268a0:	e59c0000 	ldr	r0, [ip]
400268a4:	eb0008d0 	bl	40028bec <f_read>
400268a8:	e59f302c 	ldr	r3, [pc, #44]	; 400268dc <fread+0x50>
400268ac:	e3500013 	cmp	r0, #19
400268b0:	e59f2028 	ldr	r2, [pc, #40]	; 400268e0 <fread+0x54>
400268b4:	e5c30000 	strb	r0, [r3]
400268b8:	83a03028 	movhi	r3, #40	; 0x28
400268bc:	959f3020 	ldrls	r3, [pc, #32]	; 400268e4 <fread+0x58>
400268c0:	919330d0 	ldrsbls	r3, [r3, r0]
400268c4:	e3500000 	cmp	r0, #0
400268c8:	13a00000 	movne	r0, #0
400268cc:	059d0004 	ldreq	r0, [sp, #4]
400268d0:	e5823000 	str	r3, [r2]
400268d4:	e28dd00c 	add	sp, sp, #12
400268d8:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
400268dc:	40063578 	andmi	r3, r6, r8, ror r5
400268e0:	4006c134 	andmi	ip, r6, r4, lsr r1
400268e4:	40032f37 	andmi	r2, r3, r7, lsr pc

400268e8 <fseek>:
400268e8:	e3520000 	cmp	r2, #0
400268ec:	e92d4010 	push	{r4, lr}
400268f0:	05900000 	ldreq	r0, [r0]
400268f4:	e59f4044 	ldr	r4, [pc, #68]	; 40026940 <fseek+0x58>
400268f8:	0a000003 	beq	4002690c <fseek+0x24>
400268fc:	e3520002 	cmp	r2, #2
40026900:	1a000003 	bne	40026914 <fseek+0x2c>
40026904:	e5900000 	ldr	r0, [r0]
40026908:	e590100c 	ldr	r1, [r0, #12]
4002690c:	eb00092d 	bl	40028dc8 <f_lseek>
40026910:	e5c40000 	strb	r0, [r4]
40026914:	e5d40000 	ldrb	r0, [r4]
40026918:	e59f2024 	ldr	r2, [pc, #36]	; 40026944 <fseek+0x5c>
4002691c:	e3500013 	cmp	r0, #19
40026920:	83a03028 	movhi	r3, #40	; 0x28
40026924:	959f301c 	ldrls	r3, [pc, #28]	; 40026948 <fseek+0x60>
40026928:	919330d0 	ldrsbls	r3, [r3, r0]
4002692c:	e2500000 	subs	r0, r0, #0
40026930:	e5823000 	str	r3, [r2]
40026934:	13a00001 	movne	r0, #1
40026938:	e2600000 	rsb	r0, r0, #0
4002693c:	e8bd8010 	pop	{r4, pc}
40026940:	40063578 	andmi	r3, r6, r8, ror r5
40026944:	4006c134 	andmi	ip, r6, r4, lsr r1
40026948:	40032f37 	andmi	r2, r3, r7, lsr pc

4002694c <fgets>:
4002694c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40026950:	e2525000 	subs	r5, r2, #0
40026954:	e59f604c 	ldr	r6, [pc, #76]	; 400269a8 <fgets+0x5c>
40026958:	e3a07000 	mov	r7, #0
4002695c:	e1a04000 	mov	r4, r0
40026960:	e5867000 	str	r7, [r6]
40026964:	05c05000 	strbeq	r5, [r0]
40026968:	0a00000b 	beq	4002699c <fgets+0x50>
4002696c:	e5952000 	ldr	r2, [r5]
40026970:	eb000971 	bl	40028f3c <f_gets>
40026974:	e1540000 	cmp	r4, r0
40026978:	0a000008 	beq	400269a0 <fgets+0x54>
4002697c:	e5c47000 	strb	r7, [r4]
40026980:	e5953000 	ldr	r3, [r5]
40026984:	e5d33011 	ldrb	r3, [r3, #17]
40026988:	e3530013 	cmp	r3, #19
4002698c:	83a03028 	movhi	r3, #40	; 0x28
40026990:	959f2014 	ldrls	r2, [pc, #20]	; 400269ac <fgets+0x60>
40026994:	919230d3 	ldrsbls	r3, [r2, r3]
40026998:	e5863000 	str	r3, [r6]
4002699c:	e3a04000 	mov	r4, #0
400269a0:	e1a00004 	mov	r0, r4
400269a4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400269a8:	4006c134 	andmi	ip, r6, r4, lsr r1
400269ac:	40032f37 	andmi	r2, r3, r7, lsr pc

400269b0 <ferror>:
400269b0:	e5d00004 	ldrb	r0, [r0, #4]
400269b4:	e7e00350 	ubfx	r0, r0, #6, #1
400269b8:	e12fff1e 	bx	lr

400269bc <opendir>:
400269bc:	e59f300c 	ldr	r3, [pc, #12]	; 400269d0 <opendir+0x14>
400269c0:	e3a02026 	mov	r2, #38	; 0x26
400269c4:	e3a00000 	mov	r0, #0
400269c8:	e5832000 	str	r2, [r3]
400269cc:	e12fff1e 	bx	lr
400269d0:	4006c134 	andmi	ip, r6, r4, lsr r1

400269d4 <readdir>:
400269d4:	e59f300c 	ldr	r3, [pc, #12]	; 400269e8 <readdir+0x14>
400269d8:	e3a02026 	mov	r2, #38	; 0x26
400269dc:	e3a00000 	mov	r0, #0
400269e0:	e5832000 	str	r2, [r3]
400269e4:	e12fff1e 	bx	lr
400269e8:	4006c134 	andmi	ip, r6, r4, lsr r1

400269ec <closedir>:
400269ec:	e59f300c 	ldr	r3, [pc, #12]	; 40026a00 <closedir+0x14>
400269f0:	e3a02026 	mov	r2, #38	; 0x26
400269f4:	e3e00000 	mvn	r0, #0
400269f8:	e5832000 	str	r2, [r3]
400269fc:	e12fff1e 	bx	lr
40026a00:	4006c134 	andmi	ip, r6, r4, lsr r1

40026a04 <HwClock::HwClock()>:
40026a04:	e3a02000 	mov	r2, #0
40026a08:	e3a01b01 	mov	r1, #1024	; 0x400
40026a0c:	e5802000 	str	r2, [r0]
40026a10:	e5802004 	str	r2, [r0, #4]
40026a14:	e5c0200c 	strb	r2, [r0, #12]
40026a18:	e59f2008 	ldr	r2, [pc, #8]	; 40026a28 <HwClock::HwClock()+0x24>
40026a1c:	e5801008 	str	r1, [r0, #8]
40026a20:	e5820000 	str	r0, [r2]
40026a24:	e12fff1e 	bx	lr
40026a28:	4006357c 	andmi	r3, r6, ip, ror r5

40026a2c <HwClock::Print()>:
40026a2c:	e5d0300a 	ldrb	r3, [r0, #10]
40026a30:	e3530000 	cmp	r3, #0
40026a34:	1a000001 	bne	40026a40 <HwClock::Print()+0x14>
40026a38:	e59f006c 	ldr	r0, [pc, #108]	; 40026aac <HwClock::Print()+0x80>
40026a3c:	ea001895 	b	4002cc98 <puts>
40026a40:	e5d03009 	ldrb	r3, [r0, #9]
40026a44:	e92d4010 	push	{r4, lr}
40026a48:	e3530003 	cmp	r3, #3
40026a4c:	e24dd038 	sub	sp, sp, #56	; 0x38
40026a50:	959f2058 	ldrls	r2, [pc, #88]	; 40026ab0 <HwClock::Print()+0x84>
40026a54:	e28d1014 	add	r1, sp, #20
40026a58:	859f4054 	ldrhi	r4, [pc, #84]	; 40026ab4 <HwClock::Print()+0x88>
40026a5c:	97924103 	ldrls	r4, [r2, r3, lsl #2]
40026a60:	eb00020d 	bl	4002729c <HwClock::RtcGet(tm*)>
40026a64:	e59d3014 	ldr	r3, [sp, #20]
40026a68:	e59d2028 	ldr	r2, [sp, #40]	; 0x28
40026a6c:	e1a01004 	mov	r1, r4
40026a70:	e58d300c 	str	r3, [sp, #12]
40026a74:	e59d3018 	ldr	r3, [sp, #24]
40026a78:	e2822e76 	add	r2, r2, #1888	; 0x760
40026a7c:	e59f0034 	ldr	r0, [pc, #52]	; 40026ab8 <HwClock::Print()+0x8c>
40026a80:	e282200c 	add	r2, r2, #12
40026a84:	e58d3008 	str	r3, [sp, #8]
40026a88:	e59d301c 	ldr	r3, [sp, #28]
40026a8c:	e58d3004 	str	r3, [sp, #4]
40026a90:	e59d3020 	ldr	r3, [sp, #32]
40026a94:	e58d3000 	str	r3, [sp]
40026a98:	e59d3024 	ldr	r3, [sp, #36]	; 0x24
40026a9c:	e2833001 	add	r3, r3, #1
40026aa0:	eb00183a 	bl	4002cb90 <printf>
40026aa4:	e28dd038 	add	sp, sp, #56	; 0x38
40026aa8:	e8bd8010 	pop	{r4, pc}
40026aac:	40032f4b 	andmi	r2, r3, fp, asr #30
40026ab0:	40032fa4 	andmi	r2, r3, r4, lsr #31
40026ab4:	40031b84 	andmi	r1, r3, r4, lsl #23
40026ab8:	40032f5c 	andmi	r2, r3, ip, asr pc

40026abc <HwClock::HcToSys()>:
40026abc:	e5d0300a 	ldrb	r3, [r0, #10]
40026ac0:	e3530000 	cmp	r3, #0
40026ac4:	012fff1e 	bxeq	lr
40026ac8:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
40026acc:	e1a04000 	mov	r4, r0
40026ad0:	e59f60f0 	ldr	r6, [pc, #240]	; 40026bc8 <HwClock::HcToSys()+0x10c>
40026ad4:	e24dd064 	sub	sp, sp, #100	; 0x64
40026ad8:	e5963000 	ldr	r3, [r6]
40026adc:	e5d35020 	ldrb	r5, [r3, #32]
40026ae0:	e3550000 	cmp	r5, #0
40026ae4:	0a000002 	beq	40026af4 <HwClock::HcToSys()+0x38>
40026ae8:	e3a02000 	mov	r2, #0
40026aec:	e5c32020 	strb	r2, [r3, #32]
40026af0:	eb001462 	bl	4002bc80 <h3_watchdog_disable()>
40026af4:	e28d1018 	add	r1, sp, #24
40026af8:	e1a00004 	mov	r0, r4
40026afc:	e3a0903c 	mov	r9, #60	; 0x3c
40026b00:	eb0001e5 	bl	4002729c <HwClock::RtcGet(tm*)>
40026b04:	e3a01000 	mov	r1, #0
40026b08:	e1a0000d 	mov	r0, sp
40026b0c:	eb00198b 	bl	4002d140 <gettimeofday>
40026b10:	e59d301c 	ldr	r3, [sp, #28]
40026b14:	e28d0018 	add	r0, sp, #24
40026b18:	e59d8018 	ldr	r8, [sp, #24]
40026b1c:	e0288399 	mla	r8, r9, r3, r8
40026b20:	eb001931 	bl	4002cfec <mktime>
40026b24:	e1a07000 	mov	r7, r0
40026b28:	e28d103c 	add	r1, sp, #60	; 0x3c
40026b2c:	e1a00004 	mov	r0, r4
40026b30:	eb0001d9 	bl	4002729c <HwClock::RtcGet(tm*)>
40026b34:	e59d2040 	ldr	r2, [sp, #64]	; 0x40
40026b38:	e59d303c 	ldr	r3, [sp, #60]	; 0x3c
40026b3c:	e0233299 	mla	r3, r9, r2, r3
40026b40:	e1580003 	cmp	r8, r3
40026b44:	0afffff7 	beq	40026b28 <HwClock::HcToSys()+0x6c>
40026b48:	e3a01000 	mov	r1, #0
40026b4c:	e28d0008 	add	r0, sp, #8
40026b50:	eb00197a 	bl	4002d140 <gettimeofday>
40026b54:	e59d2008 	ldr	r2, [sp, #8]
40026b58:	e59d3000 	ldr	r3, [sp]
40026b5c:	e58d7010 	str	r7, [sp, #16]
40026b60:	e1520003 	cmp	r2, r3
40026b64:	e59d300c 	ldr	r3, [sp, #12]
40026b68:	e59d2004 	ldr	r2, [sp, #4]
40026b6c:	00433002 	subeq	r3, r3, r2
40026b70:	0263393d 	rsbeq	r3, r3, #999424	; 0xf4000
40026b74:	02833d09 	addeq	r3, r3, #576	; 0x240
40026b78:	0a000003 	beq	40026b8c <HwClock::HcToSys()+0xd0>
40026b7c:	e0531002 	subs	r1, r3, r2
40026b80:	558d1014 	strpl	r1, [sp, #20]
40026b84:	5a000001 	bpl	40026b90 <HwClock::HcToSys()+0xd4>
40026b88:	e0423003 	sub	r3, r2, r3
40026b8c:	e58d3014 	str	r3, [sp, #20]
40026b90:	e3a01000 	mov	r1, #0
40026b94:	e28d0010 	add	r0, sp, #16
40026b98:	eb0019ae 	bl	4002d258 <settimeofday>
40026b9c:	e59f2028 	ldr	r2, [pc, #40]	; 40026bcc <HwClock::HcToSys()+0x110>
40026ba0:	e3550000 	cmp	r5, #0
40026ba4:	e5963000 	ldr	r3, [r6]
40026ba8:	e5922084 	ldr	r2, [r2, #132]	; 0x84
40026bac:	e5842004 	str	r2, [r4, #4]
40026bb0:	0a000002 	beq	40026bc0 <HwClock::HcToSys()+0x104>
40026bb4:	e3a02001 	mov	r2, #1
40026bb8:	e5c32020 	strb	r2, [r3, #32]
40026bbc:	eb001420 	bl	4002bc44 <h3_watchdog_enable()>
40026bc0:	e28dd064 	add	sp, sp, #100	; 0x64
40026bc4:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
40026bc8:	40034088 	andmi	r4, r3, r8, lsl #1
40026bcc:	01c20c00 	biceq	r0, r2, r0, lsl #24

40026bd0 <HwClock::SysToHc()>:
40026bd0:	e92d407f 	push	{r0, r1, r2, r3, r4, r5, r6, lr}
40026bd4:	e5d0300a 	ldrb	r3, [r0, #10]
40026bd8:	e3530000 	cmp	r3, #0
40026bdc:	0a00001d 	beq	40026c58 <HwClock::SysToHc()+0x88>
40026be0:	e59f5078 	ldr	r5, [pc, #120]	; 40026c60 <HwClock::SysToHc()+0x90>
40026be4:	e1a04000 	mov	r4, r0
40026be8:	e5953000 	ldr	r3, [r5]
40026bec:	e5d36020 	ldrb	r6, [r3, #32]
40026bf0:	e3560000 	cmp	r6, #0
40026bf4:	0a000002 	beq	40026c04 <HwClock::SysToHc()+0x34>
40026bf8:	e3a02000 	mov	r2, #0
40026bfc:	e5c32020 	strb	r2, [r3, #32]
40026c00:	eb00141e 	bl	4002bc80 <h3_watchdog_disable()>
40026c04:	e3a01000 	mov	r1, #0
40026c08:	e1a0000d 	mov	r0, sp
40026c0c:	eb00194b 	bl	4002d140 <gettimeofday>
40026c10:	e3a01000 	mov	r1, #0
40026c14:	e28d0008 	add	r0, sp, #8
40026c18:	eb001948 	bl	4002d140 <gettimeofday>
40026c1c:	e59d2000 	ldr	r2, [sp]
40026c20:	e59d3008 	ldr	r3, [sp, #8]
40026c24:	e1520003 	cmp	r2, r3
40026c28:	aafffff8 	bge	40026c10 <HwClock::SysToHc()+0x40>
40026c2c:	e28d0008 	add	r0, sp, #8
40026c30:	eb0018ac 	bl	4002cee8 <gmtime>
40026c34:	e1a01000 	mov	r1, r0
40026c38:	e1a00004 	mov	r0, r4
40026c3c:	eb000149 	bl	40027168 <HwClock::RtcSet(tm const*)>
40026c40:	e3560000 	cmp	r6, #0
40026c44:	0a000003 	beq	40026c58 <HwClock::SysToHc()+0x88>
40026c48:	e5953000 	ldr	r3, [r5]
40026c4c:	e3a02001 	mov	r2, #1
40026c50:	e5c32020 	strb	r2, [r3, #32]
40026c54:	eb0013fa 	bl	4002bc44 <h3_watchdog_enable()>
40026c58:	e28dd010 	add	sp, sp, #16
40026c5c:	e8bd8070 	pop	{r4, r5, r6, pc}
40026c60:	40034088 	andmi	r4, r3, r8, lsl #1

40026c64 <HwClock::Process()>:
40026c64:	e92d4073 	push	{r0, r1, r4, r5, r6, lr}
40026c68:	e1a04000 	mov	r4, r0
40026c6c:	e59f6130 	ldr	r6, [pc, #304]	; 40026da4 <HwClock::Process()+0x140>
40026c70:	e5965000 	ldr	r5, [r6]
40026c74:	e3550000 	cmp	r5, #0
40026c78:	1a00001a 	bne	40026ce8 <HwClock::Process()+0x84>
40026c7c:	e59f3124 	ldr	r3, [pc, #292]	; 40026da8 <HwClock::Process()+0x144>
40026c80:	e5902004 	ldr	r2, [r0, #4]
40026c84:	e5933084 	ldr	r3, [r3, #132]	; 0x84
40026c88:	e0433002 	sub	r3, r3, r2
40026c8c:	e59f2118 	ldr	r2, [pc, #280]	; 40026dac <HwClock::Process()+0x148>
40026c90:	e1530002 	cmp	r3, r2
40026c94:	9a000011 	bls	40026ce0 <HwClock::Process()+0x7c>
40026c98:	e59f4110 	ldr	r4, [pc, #272]	; 40026db0 <HwClock::Process()+0x14c>
40026c9c:	e3a03001 	mov	r3, #1
40026ca0:	e5863000 	str	r3, [r6]
40026ca4:	e1a01004 	mov	r1, r4
40026ca8:	eb00017b 	bl	4002729c <HwClock::RtcGet(tm*)>
40026cac:	e59f0100 	ldr	r0, [pc, #256]	; 40026db4 <HwClock::Process()+0x150>
40026cb0:	e1a01005 	mov	r1, r5
40026cb4:	eb001921 	bl	4002d140 <gettimeofday>
40026cb8:	e5942004 	ldr	r2, [r4, #4]
40026cbc:	e3a0103c 	mov	r1, #60	; 0x3c
40026cc0:	e5943000 	ldr	r3, [r4]
40026cc4:	e1a00004 	mov	r0, r4
40026cc8:	e0233291 	mla	r3, r1, r2, r3
40026ccc:	e59f20e4 	ldr	r2, [pc, #228]	; 40026db8 <HwClock::Process()+0x154>
40026cd0:	e5823000 	str	r3, [r2]
40026cd4:	eb0018c4 	bl	4002cfec <mktime>
40026cd8:	e59f30dc 	ldr	r3, [pc, #220]	; 40026dbc <HwClock::Process()+0x158>
40026cdc:	e5830000 	str	r0, [r3]
40026ce0:	e28dd008 	add	sp, sp, #8
40026ce4:	e8bd8070 	pop	{r4, r5, r6, pc}
40026ce8:	e3550001 	cmp	r5, #1
40026cec:	1afffffb 	bne	40026ce0 <HwClock::Process()+0x7c>
40026cf0:	e59f50c8 	ldr	r5, [pc, #200]	; 40026dc0 <HwClock::Process()+0x15c>
40026cf4:	e1a01005 	mov	r1, r5
40026cf8:	eb000167 	bl	4002729c <HwClock::RtcGet(tm*)>
40026cfc:	e5952004 	ldr	r2, [r5, #4]
40026d00:	e3a0103c 	mov	r1, #60	; 0x3c
40026d04:	e5953000 	ldr	r3, [r5]
40026d08:	e0233291 	mla	r3, r1, r2, r3
40026d0c:	e59f20a4 	ldr	r2, [pc, #164]	; 40026db8 <HwClock::Process()+0x154>
40026d10:	e5922000 	ldr	r2, [r2]
40026d14:	e1520003 	cmp	r2, r3
40026d18:	0afffff0 	beq	40026ce0 <HwClock::Process()+0x7c>
40026d1c:	e59f50a0 	ldr	r5, [pc, #160]	; 40026dc4 <HwClock::Process()+0x160>
40026d20:	e3a01000 	mov	r1, #0
40026d24:	e1a00005 	mov	r0, r5
40026d28:	eb001904 	bl	4002d140 <gettimeofday>
40026d2c:	e59f3088 	ldr	r3, [pc, #136]	; 40026dbc <HwClock::Process()+0x158>
40026d30:	e59f107c 	ldr	r1, [pc, #124]	; 40026db4 <HwClock::Process()+0x150>
40026d34:	e5933000 	ldr	r3, [r3]
40026d38:	e5952000 	ldr	r2, [r5]
40026d3c:	e58d3000 	str	r3, [sp]
40026d40:	e5913000 	ldr	r3, [r1]
40026d44:	e1520003 	cmp	r2, r3
40026d48:	1a00000e 	bne	40026d88 <HwClock::Process()+0x124>
40026d4c:	e5953004 	ldr	r3, [r5, #4]
40026d50:	e5912004 	ldr	r2, [r1, #4]
40026d54:	e0433002 	sub	r3, r3, r2
40026d58:	e263393d 	rsb	r3, r3, #999424	; 0xf4000
40026d5c:	e2833d09 	add	r3, r3, #576	; 0x240
40026d60:	e58d3004 	str	r3, [sp, #4]
40026d64:	e3a01000 	mov	r1, #0
40026d68:	e1a0000d 	mov	r0, sp
40026d6c:	eb001939 	bl	4002d258 <settimeofday>
40026d70:	e59f3030 	ldr	r3, [pc, #48]	; 40026da8 <HwClock::Process()+0x144>
40026d74:	e5933084 	ldr	r3, [r3, #132]	; 0x84
40026d78:	e5843004 	str	r3, [r4, #4]
40026d7c:	e3a03000 	mov	r3, #0
40026d80:	e5863000 	str	r3, [r6]
40026d84:	eaffffd5 	b	40026ce0 <HwClock::Process()+0x7c>
40026d88:	e5952004 	ldr	r2, [r5, #4]
40026d8c:	e5913004 	ldr	r3, [r1, #4]
40026d90:	e0521003 	subs	r1, r2, r3
40026d94:	558d1004 	strpl	r1, [sp, #4]
40026d98:	5afffff1 	bpl	40026d64 <HwClock::Process()+0x100>
40026d9c:	e0433002 	sub	r3, r3, r2
40026da0:	eaffffee 	b	40026d60 <HwClock::Process()+0xfc>
40026da4:	400635dc 	ldrdmi	r3, [r6], -ip
40026da8:	01c20c00 	biceq	r0, r2, r0, lsl #24
40026dac:	006ddd00 	rsbeq	sp, sp, r0, lsl #26
40026db0:	40063594 	mulmi	r6, r4, r5
40026db4:	40063584 	andmi	r3, r6, r4, lsl #11
40026db8:	40063580 	andmi	r3, r6, r0, lsl #11
40026dbc:	400635e0 	andmi	r3, r6, r0, ror #11
40026dc0:	400635b8 			; <UNDEFINED> instruction: 0x400635b8
40026dc4:	4006358c 	andmi	r3, r6, ip, lsl #11

40026dc8 <HwClock::Set(tm const*)>:
40026dc8:	e92d4070 	push	{r4, r5, r6, lr}
40026dcc:	e24dd018 	sub	sp, sp, #24
40026dd0:	e5d0600a 	ldrb	r6, [r0, #10]
40026dd4:	e3560000 	cmp	r6, #0
40026dd8:	0a000017 	beq	40026e3c <HwClock::Set(tm const*)+0x74>
40026ddc:	e1a04001 	mov	r4, r1
40026de0:	e1a05000 	mov	r5, r0
40026de4:	e3a01000 	mov	r1, #0
40026de8:	e1a0000d 	mov	r0, sp
40026dec:	eb0018d3 	bl	4002d140 <gettimeofday>
40026df0:	e1a01004 	mov	r1, r4
40026df4:	e1a00005 	mov	r0, r5
40026df8:	eb0000da 	bl	40027168 <HwClock::RtcSet(tm const*)>
40026dfc:	e1a00004 	mov	r0, r4
40026e00:	eb001879 	bl	4002cfec <mktime>
40026e04:	e58d0008 	str	r0, [sp, #8]
40026e08:	e3a01000 	mov	r1, #0
40026e0c:	e28d0010 	add	r0, sp, #16
40026e10:	eb0018ca 	bl	4002d140 <gettimeofday>
40026e14:	e59d1014 	ldr	r1, [sp, #20]
40026e18:	e28d0008 	add	r0, sp, #8
40026e1c:	e59d3004 	ldr	r3, [sp, #4]
40026e20:	e0512003 	subs	r2, r1, r3
40026e24:	40433001 	submi	r3, r3, r1
40026e28:	e3a01000 	mov	r1, #0
40026e2c:	4263293d 	rsbmi	r2, r3, #999424	; 0xf4000
40026e30:	42822d09 	addmi	r2, r2, #576	; 0x240
40026e34:	e58d200c 	str	r2, [sp, #12]
40026e38:	eb001906 	bl	4002d258 <settimeofday>
40026e3c:	e1a00006 	mov	r0, r6
40026e40:	e28dd018 	add	sp, sp, #24
40026e44:	e8bd8070 	pop	{r4, r5, r6, pc}

40026e48 <remoteconfig::rtc::atoi(char const*, unsigned long)>:
40026e48:	e0801001 	add	r1, r0, r1
40026e4c:	e1a03000 	mov	r3, r0
40026e50:	e3a0c00a 	mov	ip, #10
40026e54:	e3a00000 	mov	r0, #0
40026e58:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40026e5c:	e4d32001 	ldrb	r2, [r3], #1
40026e60:	e242e030 	sub	lr, r2, #48	; 0x30
40026e64:	e35e0009 	cmp	lr, #9
40026e68:	849df004 	pophi	{pc}		; (ldrhi pc, [sp], #4)
40026e6c:	e020209c 	mla	r0, ip, r0, r2
40026e70:	e1510003 	cmp	r1, r3
40026e74:	e2400030 	sub	r0, r0, #48	; 0x30
40026e78:	1afffff7 	bne	40026e5c <remoteconfig::rtc::atoi(char const*, unsigned long)+0x14>
40026e7c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

40026e80 <staticCallbackFunction(void*, char const*)>:
40026e80:	e92d401f 	push	{r0, r1, r2, r3, r4, lr}
40026e84:	e1a04001 	mov	r4, r1
40026e88:	e59f20cc 	ldr	r2, [pc, #204]	; 40026f5c <staticCallbackFunction(void*, char const*)+0xdc>
40026e8c:	e3a03014 	mov	r3, #20
40026e90:	e58d3004 	str	r3, [sp, #4]
40026e94:	e1a00004 	mov	r0, r4
40026e98:	e59f10c0 	ldr	r1, [pc, #192]	; 40026f60 <staticCallbackFunction(void*, char const*)+0xe0>
40026e9c:	e28d3004 	add	r3, sp, #4
40026ea0:	ebfff9ab 	bl	40025554 <Sscan::Char(char const*, char const*, char*, unsigned long&)>
40026ea4:	e3500000 	cmp	r0, #0
40026ea8:	0a000012 	beq	40026ef8 <staticCallbackFunction(void*, char const*)+0x78>
40026eac:	e59f10b0 	ldr	r1, [pc, #176]	; 40026f64 <staticCallbackFunction(void*, char const*)+0xe4>
40026eb0:	e3a03007 	mov	r3, #7
40026eb4:	e58d3004 	str	r3, [sp, #4]
40026eb8:	e28d2008 	add	r2, sp, #8
40026ebc:	e28d3004 	add	r3, sp, #4
40026ec0:	e1a00004 	mov	r0, r4
40026ec4:	ebfff9a2 	bl	40025554 <Sscan::Char(char const*, char const*, char*, unsigned long&)>
40026ec8:	e3500000 	cmp	r0, #0
40026ecc:	1a000015 	bne	40026f28 <staticCallbackFunction(void*, char const*)+0xa8>
40026ed0:	e59d4004 	ldr	r4, [sp, #4]
40026ed4:	e28d0008 	add	r0, sp, #8
40026ed8:	e59f1088 	ldr	r1, [pc, #136]	; 40026f68 <staticCallbackFunction(void*, char const*)+0xe8>
40026edc:	e1a02004 	mov	r2, r4
40026ee0:	ebffe266 	bl	4001f880 <strncmp>
40026ee4:	e3500000 	cmp	r0, #0
40026ee8:	1a000004 	bne	40026f00 <staticCallbackFunction(void*, char const*)+0x80>
40026eec:	e59f3078 	ldr	r3, [pc, #120]	; 40026f6c <staticCallbackFunction(void*, char const*)+0xec>
40026ef0:	e5930000 	ldr	r0, [r3]
40026ef4:	ebfffef0 	bl	40026abc <HwClock::HcToSys()>
40026ef8:	e28dd010 	add	sp, sp, #16
40026efc:	e8bd8010 	pop	{r4, pc}
40026f00:	e59f1068 	ldr	r1, [pc, #104]	; 40026f70 <staticCallbackFunction(void*, char const*)+0xf0>
40026f04:	e1a02004 	mov	r2, r4
40026f08:	e28d0008 	add	r0, sp, #8
40026f0c:	ebffe25b 	bl	4001f880 <strncmp>
40026f10:	e3500000 	cmp	r0, #0
40026f14:	1afffff7 	bne	40026ef8 <staticCallbackFunction(void*, char const*)+0x78>
40026f18:	e59f304c 	ldr	r3, [pc, #76]	; 40026f6c <staticCallbackFunction(void*, char const*)+0xec>
40026f1c:	e5930000 	ldr	r0, [r3]
40026f20:	ebffff2a 	bl	40026bd0 <HwClock::SysToHc()>
40026f24:	eafffff3 	b	40026ef8 <staticCallbackFunction(void*, char const*)+0x78>
40026f28:	e59f1044 	ldr	r1, [pc, #68]	; 40026f74 <staticCallbackFunction(void*, char const*)+0xf4>
40026f2c:	e28d2003 	add	r2, sp, #3
40026f30:	e1a00004 	mov	r0, r4
40026f34:	ebfffa68 	bl	400258dc <Sscan::Uint8(char const*, char const*, unsigned char&)>
40026f38:	e3500000 	cmp	r0, #0
40026f3c:	1affffed 	bne	40026ef8 <staticCallbackFunction(void*, char const*)+0x78>
40026f40:	e59f3024 	ldr	r3, [pc, #36]	; 40026f6c <staticCallbackFunction(void*, char const*)+0xec>
40026f44:	e5932000 	ldr	r2, [r3]
40026f48:	e5dd3003 	ldrb	r3, [sp, #3]
40026f4c:	e2533000 	subs	r3, r3, #0
40026f50:	13a03001 	movne	r3, #1
40026f54:	e5c2300b 	strb	r3, [r2, #11]
40026f58:	eaffffe6 	b	40026ef8 <staticCallbackFunction(void*, char const*)+0x78>
40026f5c:	400635e4 	andmi	r3, r6, r4, ror #11
40026f60:	40032fb4 			; <UNDEFINED> instruction: 0x40032fb4
40026f64:	40032fba 			; <UNDEFINED> instruction: 0x40032fba
40026f68:	40032fc1 	andmi	r2, r3, r1, asr #31
40026f6c:	4006357c 	andmi	r3, r6, ip, ror r5
40026f70:	40032fc9 	andmi	r2, r3, r9, asr #31
40026f74:	40032fd1 	ldrdmi	r2, [r3], -r1

40026f78 <remoteconfig::rtc::json_get_rtc(char*, unsigned long)>:
40026f78:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40026f7c:	e24dd040 	sub	sp, sp, #64	; 0x40
40026f80:	e59f70f4 	ldr	r7, [pc, #244]	; 4002707c <remoteconfig::rtc::json_get_rtc(char*, unsigned long)+0x104>
40026f84:	e1a04000 	mov	r4, r0
40026f88:	e1a06001 	mov	r6, r1
40026f8c:	e28d101c 	add	r1, sp, #28
40026f90:	e5970000 	ldr	r0, [r7]
40026f94:	eb0000c0 	bl	4002729c <HwClock::RtcGet(tm*)>
40026f98:	e3500000 	cmp	r0, #0
40026f9c:	0a000034 	beq	40027074 <remoteconfig::rtc::json_get_rtc(char*, unsigned long)+0xfc>
40026fa0:	e59d301c 	ldr	r3, [sp, #28]
40026fa4:	e300876c 	movw	r8, #1900	; 0x76c
40026fa8:	e59f20d0 	ldr	r2, [pc, #208]	; 40027080 <remoteconfig::rtc::json_get_rtc(char*, unsigned long)+0x108>
40026fac:	e1a01006 	mov	r1, r6
40026fb0:	e58d3010 	str	r3, [sp, #16]
40026fb4:	e1a00004 	mov	r0, r4
40026fb8:	e59d3020 	ldr	r3, [sp, #32]
40026fbc:	e58d300c 	str	r3, [sp, #12]
40026fc0:	e59d3024 	ldr	r3, [sp, #36]	; 0x24
40026fc4:	e58d3008 	str	r3, [sp, #8]
40026fc8:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
40026fcc:	e58d3004 	str	r3, [sp, #4]
40026fd0:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
40026fd4:	e2833001 	add	r3, r3, #1
40026fd8:	e58d3000 	str	r3, [sp]
40026fdc:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40026fe0:	e0883003 	add	r3, r8, r3
40026fe4:	eb001706 	bl	4002cc04 <snprintf>
40026fe8:	e1a05000 	mov	r5, r0
40026fec:	e28d101c 	add	r1, sp, #28
40026ff0:	e5970000 	ldr	r0, [r7]
40026ff4:	eb000187 	bl	40027618 <HwClock::RtcGetAlarm(tm*)>
40026ff8:	e1a03000 	mov	r3, r0
40026ffc:	e0840005 	add	r0, r4, r5
40027000:	e3530000 	cmp	r3, #0
40027004:	03a0207d 	moveq	r2, #125	; 0x7d
40027008:	01a00003 	moveq	r0, r3
4002700c:	07c42005 	strbeq	r2, [r4, r5]
40027010:	0a000017 	beq	40027074 <remoteconfig::rtc::json_get_rtc(char*, unsigned long)+0xfc>
40027014:	e59d301c 	ldr	r3, [sp, #28]
40027018:	e1a01006 	mov	r1, r6
4002701c:	e59f2060 	ldr	r2, [pc, #96]	; 40027084 <remoteconfig::rtc::json_get_rtc(char*, unsigned long)+0x10c>
40027020:	e58d3010 	str	r3, [sp, #16]
40027024:	e59d3020 	ldr	r3, [sp, #32]
40027028:	e58d300c 	str	r3, [sp, #12]
4002702c:	e59d3024 	ldr	r3, [sp, #36]	; 0x24
40027030:	e58d3008 	str	r3, [sp, #8]
40027034:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
40027038:	e58d3004 	str	r3, [sp, #4]
4002703c:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
40027040:	e2833001 	add	r3, r3, #1
40027044:	e58d3000 	str	r3, [sp]
40027048:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
4002704c:	e0883003 	add	r3, r8, r3
40027050:	eb0016eb 	bl	4002cc04 <snprintf>
40027054:	e5973000 	ldr	r3, [r7]
40027058:	e1a01006 	mov	r1, r6
4002705c:	e0805005 	add	r5, r0, r5
40027060:	e5d3300b 	ldrb	r3, [r3, #11]
40027064:	e59f201c 	ldr	r2, [pc, #28]	; 40027088 <remoteconfig::rtc::json_get_rtc(char*, unsigned long)+0x110>
40027068:	e0840005 	add	r0, r4, r5
4002706c:	eb0016e4 	bl	4002cc04 <snprintf>
40027070:	e0800005 	add	r0, r0, r5
40027074:	e28dd040 	add	sp, sp, #64	; 0x40
40027078:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4002707c:	4006357c 	andmi	r3, r6, ip, ror r5
40027080:	40032fd8 	ldrdmi	r2, [r3], -r8
40027084:	40032ffe 	strdmi	r2, [r3], -lr
40027088:	40033025 	andmi	r3, r3, r5, lsr #32

4002708c <remoteconfig::rtc::json_set_rtc(char const*, unsigned long)>:
4002708c:	e92d4070 	push	{r4, r5, r6, lr}
40027090:	e24dd030 	sub	sp, sp, #48	; 0x30
40027094:	e59f40c0 	ldr	r4, [pc, #192]	; 4002715c <remoteconfig::rtc::json_set_rtc(char const*, unsigned long)+0xd0>
40027098:	e3a02000 	mov	r2, #0
4002709c:	e1a05000 	mov	r5, r0
400270a0:	e1a06001 	mov	r6, r1
400270a4:	e59f10b4 	ldr	r1, [pc, #180]	; 40027160 <remoteconfig::rtc::json_set_rtc(char const*, unsigned long)+0xd4>
400270a8:	e28d0004 	add	r0, sp, #4
400270ac:	e5c42000 	strb	r2, [r4]
400270b0:	ebfff8cd 	bl	400253ec <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
400270b4:	e1a02006 	mov	r2, r6
400270b8:	e1a01005 	mov	r1, r5
400270bc:	e28d0004 	add	r0, sp, #4
400270c0:	ebfff8f6 	bl	400254a0 <ReadConfigFile::Read(char const*, unsigned int)>
400270c4:	e5d43000 	ldrb	r3, [r4]
400270c8:	e3530000 	cmp	r3, #0
400270cc:	0a00001e 	beq	4002714c <remoteconfig::rtc::json_set_rtc(char const*, unsigned long)+0xc0>
400270d0:	e3a01004 	mov	r1, #4
400270d4:	e1a00004 	mov	r0, r4
400270d8:	ebffff5a 	bl	40026e48 <remoteconfig::rtc::atoi(char const*, unsigned long)>
400270dc:	e2400e76 	sub	r0, r0, #1888	; 0x760
400270e0:	e3a01002 	mov	r1, #2
400270e4:	e240000c 	sub	r0, r0, #12
400270e8:	e58d0020 	str	r0, [sp, #32]
400270ec:	e2840005 	add	r0, r4, #5
400270f0:	ebffff54 	bl	40026e48 <remoteconfig::rtc::atoi(char const*, unsigned long)>
400270f4:	e2400001 	sub	r0, r0, #1
400270f8:	e3a01002 	mov	r1, #2
400270fc:	e58d001c 	str	r0, [sp, #28]
40027100:	e2840008 	add	r0, r4, #8
40027104:	ebffff4f 	bl	40026e48 <remoteconfig::rtc::atoi(char const*, unsigned long)>
40027108:	e58d0018 	str	r0, [sp, #24]
4002710c:	e3a01002 	mov	r1, #2
40027110:	e284000b 	add	r0, r4, #11
40027114:	ebffff4b 	bl	40026e48 <remoteconfig::rtc::atoi(char const*, unsigned long)>
40027118:	e58d0014 	str	r0, [sp, #20]
4002711c:	e3a01002 	mov	r1, #2
40027120:	e284000e 	add	r0, r4, #14
40027124:	ebffff47 	bl	40026e48 <remoteconfig::rtc::atoi(char const*, unsigned long)>
40027128:	e58d0010 	str	r0, [sp, #16]
4002712c:	e3a01002 	mov	r1, #2
40027130:	e2840011 	add	r0, r4, #17
40027134:	ebffff43 	bl	40026e48 <remoteconfig::rtc::atoi(char const*, unsigned long)>
40027138:	e59f3024 	ldr	r3, [pc, #36]	; 40027164 <remoteconfig::rtc::json_set_rtc(char const*, unsigned long)+0xd8>
4002713c:	e28d100c 	add	r1, sp, #12
40027140:	e58d000c 	str	r0, [sp, #12]
40027144:	e5930000 	ldr	r0, [r3]
40027148:	eb0001d6 	bl	400278a8 <HwClock::RtcSetAlarm(tm const*)>
4002714c:	e28d0004 	add	r0, sp, #4
40027150:	ebfff8a7 	bl	400253f4 <ReadConfigFile::~ReadConfigFile()>
40027154:	e28dd030 	add	sp, sp, #48	; 0x30
40027158:	e8bd8070 	pop	{r4, r5, r6, pc}
4002715c:	400635e4 	andmi	r3, r6, r4, ror #11
40027160:	40026e80 	andmi	r6, r2, r0, lsl #29
40027164:	4006357c 	andmi	r3, r6, ip, ror r5

40027168 <HwClock::RtcSet(tm const*)>:
40027168:	e92d4073 	push	{r0, r1, r4, r5, r6, lr}
4002716c:	e5d0400a 	ldrb	r4, [r0, #10]
40027170:	e3540000 	cmp	r4, #0
40027174:	0a000041 	beq	40027280 <HwClock::RtcSet(tm const*)+0x118>
40027178:	e591c000 	ldr	ip, [r1]
4002717c:	e3a0200a 	mov	r2, #10
40027180:	e1a03000 	mov	r3, r0
40027184:	e5d00008 	ldrb	r0, [r0, #8]
40027188:	e20cc07f 	and	ip, ip, #127	; 0x7f
4002718c:	e5d3e009 	ldrb	lr, [r3, #9]
40027190:	e735f21c 	udiv	r5, ip, r2
40027194:	e063c592 	mls	r3, r2, r5, ip
40027198:	e591c004 	ldr	ip, [r1, #4]
4002719c:	e35e0002 	cmp	lr, #2
400271a0:	e0833205 	add	r3, r3, r5, lsl #4
400271a4:	e20cc07f 	and	ip, ip, #127	; 0x7f
400271a8:	e6ef3073 	uxtb	r3, r3
400271ac:	e5cd3001 	strb	r3, [sp, #1]
400271b0:	e735f21c 	udiv	r5, ip, r2
400271b4:	e06cc592 	mls	ip, r2, r5, ip
400271b8:	e08cc205 	add	ip, ip, r5, lsl #4
400271bc:	e5cdc002 	strb	ip, [sp, #2]
400271c0:	e591c008 	ldr	ip, [r1, #8]
400271c4:	e20cc01f 	and	ip, ip, #31
400271c8:	e735f21c 	udiv	r5, ip, r2
400271cc:	e06cc592 	mls	ip, r2, r5, ip
400271d0:	e08cc205 	add	ip, ip, r5, lsl #4
400271d4:	e5cdc003 	strb	ip, [sp, #3]
400271d8:	e591c00c 	ldr	ip, [r1, #12]
400271dc:	e5915018 	ldr	r5, [r1, #24]
400271e0:	e20cc03f 	and	ip, ip, #63	; 0x3f
400271e4:	e2055007 	and	r5, r5, #7
400271e8:	e736f21c 	udiv	r6, ip, r2
400271ec:	e062c692 	mls	r2, r2, r6, ip
400271f0:	e591c010 	ldr	ip, [r1, #16]
400271f4:	05cd5005 	strbeq	r5, [sp, #5]
400271f8:	15cd5004 	strbne	r5, [sp, #4]
400271fc:	e28cc001 	add	ip, ip, #1
40027200:	e3a0500a 	mov	r5, #10
40027204:	e20cc01f 	and	ip, ip, #31
40027208:	e0822206 	add	r2, r2, r6, lsl #4
4002720c:	e6ef2072 	uxtb	r2, r2
40027210:	05cd2004 	strbeq	r2, [sp, #4]
40027214:	15cd2005 	strbne	r2, [sp, #5]
40027218:	e35e0000 	cmp	lr, #0
4002721c:	e732f51c 	udiv	r2, ip, r5
40027220:	e06cc295 	mls	ip, r5, r2, ip
40027224:	e08cc202 	add	ip, ip, r2, lsl #4
40027228:	e5912014 	ldr	r2, [r1, #20]
4002722c:	e5cdc006 	strb	ip, [sp, #6]
40027230:	e2422064 	sub	r2, r2, #100	; 0x64
40027234:	e6ef2072 	uxtb	r2, r2
40027238:	e731f512 	udiv	r1, r2, r5
4002723c:	e0622195 	mls	r2, r5, r1, r2
40027240:	e0822201 	add	r2, r2, r1, lsl #4
40027244:	e5cd2007 	strb	r2, [sp, #7]
40027248:	1a00000f 	bne	4002728c <HwClock::RtcSet(tm const*)+0x124>
4002724c:	e1e03c83 	mvn	r3, r3, lsl #25
40027250:	e1e03ca3 	mvn	r3, r3, lsr #25
40027254:	e5cd3001 	strb	r3, [sp, #1]
40027258:	e5dd3004 	ldrb	r3, [sp, #4]
4002725c:	e3833008 	orr	r3, r3, #8
40027260:	e5cd3004 	strb	r3, [sp, #4]
40027264:	e5cde000 	strb	lr, [sp]
40027268:	eb0010f0 	bl	4002b630 <h3_i2c_set_slave_address(unsigned char)>
4002726c:	e59f0024 	ldr	r0, [pc, #36]	; 40027298 <HwClock::RtcSet(tm const*)+0x130>
40027270:	eb0010e7 	bl	4002b614 <h3_i2c_set_baudrate(unsigned long)>
40027274:	e3a01008 	mov	r1, #8
40027278:	e1a0000d 	mov	r0, sp
4002727c:	eb001061 	bl	4002b408 <h3_i2c_write(char const*, unsigned long)>
40027280:	e1a00004 	mov	r0, r4
40027284:	e28dd008 	add	sp, sp, #8
40027288:	e8bd8070 	pop	{r4, r5, r6, pc}
4002728c:	e35e0002 	cmp	lr, #2
40027290:	13a0e000 	movne	lr, #0
40027294:	eafffff2 	b	40027264 <HwClock::RtcSet(tm const*)+0xfc>
40027298:	00061a80 	andeq	r1, r6, r0, lsl #21

4002729c <HwClock::RtcGet(tm*)>:
4002729c:	e92d4073 	push	{r0, r1, r4, r5, r6, lr}
400272a0:	e5d0500a 	ldrb	r5, [r0, #10]
400272a4:	e3550000 	cmp	r5, #0
400272a8:	0a000037 	beq	4002738c <HwClock::RtcGet(tm*)+0xf0>
400272ac:	e5d03009 	ldrb	r3, [r0, #9]
400272b0:	e1a06000 	mov	r6, r0
400272b4:	e5d00008 	ldrb	r0, [r0, #8]
400272b8:	e1a04001 	mov	r4, r1
400272bc:	e3530002 	cmp	r3, #2
400272c0:	13a03000 	movne	r3, #0
400272c4:	e5cd3000 	strb	r3, [sp]
400272c8:	eb0010d8 	bl	4002b630 <h3_i2c_set_slave_address(unsigned char)>
400272cc:	e59f00e0 	ldr	r0, [pc, #224]	; 400273b4 <HwClock::RtcGet(tm*)+0x118>
400272d0:	eb0010cf 	bl	4002b614 <h3_i2c_set_baudrate(unsigned long)>
400272d4:	e3a01001 	mov	r1, #1
400272d8:	e1a0000d 	mov	r0, sp
400272dc:	eb001049 	bl	4002b408 <h3_i2c_write(char const*, unsigned long)>
400272e0:	e3a01007 	mov	r1, #7
400272e4:	e1a0000d 	mov	r0, sp
400272e8:	eb00106f 	bl	4002b4ac <h3_i2c_read(char*, unsigned long)>
400272ec:	e5dd3000 	ldrb	r3, [sp]
400272f0:	e7e21253 	ubfx	r1, r3, #4, #3
400272f4:	e203200f 	and	r2, r3, #15
400272f8:	e3a0300a 	mov	r3, #10
400272fc:	e1022183 	smlabb	r2, r3, r1, r2
40027300:	e5842000 	str	r2, [r4]
40027304:	e5dd2001 	ldrb	r2, [sp, #1]
40027308:	e7e21252 	ubfx	r1, r2, #4, #3
4002730c:	e202200f 	and	r2, r2, #15
40027310:	e1022183 	smlabb	r2, r3, r1, r2
40027314:	e5842004 	str	r2, [r4, #4]
40027318:	e5dd2002 	ldrb	r2, [sp, #2]
4002731c:	e7e11252 	ubfx	r1, r2, #4, #2
40027320:	e202200f 	and	r2, r2, #15
40027324:	e1022183 	smlabb	r2, r3, r1, r2
40027328:	e5dd1003 	ldrb	r1, [sp, #3]
4002732c:	e5842008 	str	r2, [r4, #8]
40027330:	e5d62009 	ldrb	r2, [r6, #9]
40027334:	e3520002 	cmp	r2, #2
40027338:	e5dd2004 	ldrb	r2, [sp, #4]
4002733c:	1a000015 	bne	40027398 <HwClock::RtcGet(tm*)+0xfc>
40027340:	e2022007 	and	r2, r2, #7
40027344:	e5842018 	str	r2, [r4, #24]
40027348:	e7e12251 	ubfx	r2, r1, #4, #2
4002734c:	e201100f 	and	r1, r1, #15
40027350:	e1011283 	smlabb	r1, r3, r2, r1
40027354:	e584100c 	str	r1, [r4, #12]
40027358:	e5dd3005 	ldrb	r3, [sp, #5]
4002735c:	e7e02253 	ubfx	r2, r3, #4, #1
40027360:	e203100f 	and	r1, r3, #15
40027364:	e3a0300a 	mov	r3, #10
40027368:	e1021283 	smlabb	r2, r3, r2, r1
4002736c:	e2422001 	sub	r2, r2, #1
40027370:	e5842010 	str	r2, [r4, #16]
40027374:	e5dd2006 	ldrb	r2, [sp, #6]
40027378:	e1a01222 	lsr	r1, r2, #4
4002737c:	e202200f 	and	r2, r2, #15
40027380:	e1032183 	smlabb	r3, r3, r1, r2
40027384:	e2833064 	add	r3, r3, #100	; 0x64
40027388:	e5843014 	str	r3, [r4, #20]
4002738c:	e1a00005 	mov	r0, r5
40027390:	e28dd008 	add	sp, sp, #8
40027394:	e8bd8070 	pop	{r4, r5, r6, pc}
40027398:	e2011007 	and	r1, r1, #7
4002739c:	e5841018 	str	r1, [r4, #24]
400273a0:	e7e11252 	ubfx	r1, r2, #4, #2
400273a4:	e202200f 	and	r2, r2, #15
400273a8:	e1032183 	smlabb	r3, r3, r1, r2
400273ac:	e584300c 	str	r3, [r4, #12]
400273b0:	eaffffe8 	b	40027358 <HwClock::RtcGet(tm*)+0xbc>
400273b4:	00061a80 	andeq	r1, r6, r0, lsl #21

400273b8 <HwClock::RtcProbe()>:
400273b8:	e59f31c0 	ldr	r3, [pc, #448]	; 40027580 <HwClock::RtcProbe()+0x1c8>
400273bc:	e92d4070 	push	{r4, r5, r6, lr}
400273c0:	e1a04000 	mov	r4, r0
400273c4:	e5933084 	ldr	r3, [r3, #132]	; 0x84
400273c8:	e24dd028 	sub	sp, sp, #40	; 0x28
400273cc:	e5803004 	str	r3, [r0, #4]
400273d0:	e59f01ac 	ldr	r0, [pc, #428]	; 40027584 <HwClock::RtcProbe()+0x1cc>
400273d4:	eb00108e 	bl	4002b614 <h3_i2c_set_baudrate(unsigned long)>
400273d8:	e3a0006f 	mov	r0, #111	; 0x6f
400273dc:	eb001093 	bl	4002b630 <h3_i2c_set_slave_address(unsigned char)>
400273e0:	e28d1003 	add	r1, sp, #3
400273e4:	e3a00006 	mov	r0, #6
400273e8:	eb0010b4 	bl	4002b6c0 <h3_i2c_read_register(unsigned char, unsigned char&)>
400273ec:	e3a01000 	mov	r1, #0
400273f0:	e1a00001 	mov	r0, r1
400273f4:	eb001003 	bl	4002b408 <h3_i2c_write(char const*, unsigned long)>
400273f8:	e2505000 	subs	r5, r0, #0
400273fc:	1a000015 	bne	40027458 <HwClock::RtcProbe()+0xa0>
40027400:	e3a0306f 	mov	r3, #111	; 0x6f
40027404:	e28d1003 	add	r1, sp, #3
40027408:	e1c430b8 	strh	r3, [r4, #8]
4002740c:	e3a03001 	mov	r3, #1
40027410:	e5c4300a 	strb	r3, [r4, #10]
40027414:	eb0010a9 	bl	4002b6c0 <h3_i2c_read_register(unsigned char, unsigned char&)>
40027418:	e1dd30d3 	ldrsb	r3, [sp, #3]
4002741c:	e3530000 	cmp	r3, #0
40027420:	ba00000a 	blt	40027450 <HwClock::RtcProbe()+0x98>
40027424:	e58d500c 	str	r5, [sp, #12]
40027428:	e3a03002 	mov	r3, #2
4002742c:	e58d5008 	str	r5, [sp, #8]
40027430:	e58d5004 	str	r5, [sp, #4]
40027434:	e58d3010 	str	r3, [sp, #16]
40027438:	e58d5014 	str	r5, [sp, #20]
4002743c:	e3a0307d 	mov	r3, #125	; 0x7d
40027440:	e28d1004 	add	r1, sp, #4
40027444:	e58d3018 	str	r3, [sp, #24]
40027448:	e1a00004 	mov	r0, r4
4002744c:	ebffff45 	bl	40027168 <HwClock::RtcSet(tm const*)>
40027450:	e28dd028 	add	sp, sp, #40	; 0x28
40027454:	e8bd8070 	pop	{r4, r5, r6, pc}
40027458:	e3a00068 	mov	r0, #104	; 0x68
4002745c:	eb001073 	bl	4002b630 <h3_i2c_set_slave_address(unsigned char)>
40027460:	e28d1003 	add	r1, sp, #3
40027464:	e3a00006 	mov	r0, #6
40027468:	eb001094 	bl	4002b6c0 <h3_i2c_read_register(unsigned char, unsigned char&)>
4002746c:	e3a01000 	mov	r1, #0
40027470:	e1a00001 	mov	r0, r1
40027474:	eb000fe3 	bl	4002b408 <h3_i2c_write(char const*, unsigned long)>
40027478:	e3500000 	cmp	r0, #0
4002747c:	1a000013 	bne	400274d0 <HwClock::RtcProbe()+0x118>
40027480:	e3a03f5a 	mov	r3, #360	; 0x168
40027484:	e28d1004 	add	r1, sp, #4
40027488:	e1c430b8 	strh	r3, [r4, #8]
4002748c:	e3a03001 	mov	r3, #1
40027490:	e5c4300a 	strb	r3, [r4, #10]
40027494:	e1a00004 	mov	r0, r4
40027498:	ebffff7f 	bl	4002729c <HwClock::RtcGet(tm*)>
4002749c:	e59d300c 	ldr	r3, [sp, #12]
400274a0:	e3530018 	cmp	r3, #24
400274a4:	ca000002 	bgt	400274b4 <HwClock::RtcProbe()+0xfc>
400274a8:	e59d3018 	ldr	r3, [sp, #24]
400274ac:	e353007d 	cmp	r3, #125	; 0x7d
400274b0:	daffffe6 	ble	40027450 <HwClock::RtcProbe()+0x98>
400274b4:	e3a03000 	mov	r3, #0
400274b8:	e3a02002 	mov	r2, #2
400274bc:	e58d300c 	str	r3, [sp, #12]
400274c0:	e58d3008 	str	r3, [sp, #8]
400274c4:	e58d3004 	str	r3, [sp, #4]
400274c8:	e1cd21f0 	strd	r2, [sp, #16]
400274cc:	eaffffda 	b	4002743c <HwClock::RtcProbe()+0x84>
400274d0:	e3a00051 	mov	r0, #81	; 0x51
400274d4:	eb001055 	bl	4002b630 <h3_i2c_set_slave_address(unsigned char)>
400274d8:	e28d1003 	add	r1, sp, #3
400274dc:	e3a00008 	mov	r0, #8
400274e0:	eb001076 	bl	4002b6c0 <h3_i2c_read_register(unsigned char, unsigned char&)>
400274e4:	e3a01000 	mov	r1, #0
400274e8:	e1a00001 	mov	r0, r1
400274ec:	eb000fc5 	bl	4002b408 <h3_i2c_write(char const*, unsigned long)>
400274f0:	e2505000 	subs	r5, r0, #0
400274f4:	1affffd5 	bne	40027450 <HwClock::RtcProbe()+0x98>
400274f8:	e3003251 	movw	r3, #593	; 0x251
400274fc:	e3a06001 	mov	r6, #1
40027500:	e1c430b8 	strh	r3, [r4, #8]
40027504:	e1a01005 	mov	r1, r5
40027508:	e5c4600a 	strb	r6, [r4, #10]
4002750c:	eb001063 	bl	4002b6a0 <h3_i2c_write_register(unsigned char, unsigned char)>
40027510:	e1a01005 	mov	r1, r5
40027514:	e1a00006 	mov	r0, r6
40027518:	eb001060 	bl	4002b6a0 <h3_i2c_write_register(unsigned char, unsigned char)>
4002751c:	e28d1003 	add	r1, sp, #3
40027520:	e3a00002 	mov	r0, #2
40027524:	eb001065 	bl	4002b6c0 <h3_i2c_read_register(unsigned char, unsigned char&)>
40027528:	e1dd30d3 	ldrsb	r3, [sp, #3]
4002752c:	e3530000 	cmp	r3, #0
40027530:	aa00000a 	bge	40027560 <HwClock::RtcProbe()+0x1a8>
40027534:	e58d500c 	str	r5, [sp, #12]
40027538:	e3a03002 	mov	r3, #2
4002753c:	e58d3010 	str	r3, [sp, #16]
40027540:	e28d1004 	add	r1, sp, #4
40027544:	e58d5008 	str	r5, [sp, #8]
40027548:	e3a0307d 	mov	r3, #125	; 0x7d
4002754c:	e58d5004 	str	r5, [sp, #4]
40027550:	e1a00004 	mov	r0, r4
40027554:	e58d5014 	str	r5, [sp, #20]
40027558:	e58d3018 	str	r3, [sp, #24]
4002755c:	ebffff01 	bl	40027168 <HwClock::RtcSet(tm const*)>
40027560:	e28d1003 	add	r1, sp, #3
40027564:	e3a00002 	mov	r0, #2
40027568:	eb001054 	bl	4002b6c0 <h3_i2c_read_register(unsigned char, unsigned char&)>
4002756c:	e1dd30d3 	ldrsb	r3, [sp, #3]
40027570:	e3530000 	cmp	r3, #0
40027574:	b3a03000 	movlt	r3, #0
40027578:	b5c4300a 	strblt	r3, [r4, #10]
4002757c:	eaffffb3 	b	40027450 <HwClock::RtcProbe()+0x98>
40027580:	01c20c00 	biceq	r0, r2, r0, lsl #24
40027584:	000186a0 	andeq	r8, r1, r0, lsr #13

40027588 <HwClock::MCP794xxAlarmWeekday(tm*)>:
40027588:	e92d4030 	push	{r4, r5, lr}
4002758c:	e24dd02c 	sub	sp, sp, #44	; 0x2c
40027590:	e1a05001 	mov	r5, r1
40027594:	e28d1004 	add	r1, sp, #4
40027598:	ebffff3f 	bl	4002729c <HwClock::RtcGet(tm*)>
4002759c:	e28d0004 	add	r0, sp, #4
400275a0:	eb001691 	bl	4002cfec <mktime>
400275a4:	e1a04000 	mov	r4, r0
400275a8:	e1a00005 	mov	r0, r5
400275ac:	eb00168e 	bl	4002cfec <mktime>
400275b0:	e59f202c 	ldr	r2, [pc, #44]	; 400275e4 <HwClock::MCP794xxAlarmWeekday(tm*)+0x5c>
400275b4:	e713f210 	sdiv	r3, r0, r2
400275b8:	e59d001c 	ldr	r0, [sp, #28]
400275bc:	e0833000 	add	r3, r3, r0
400275c0:	e710f214 	sdiv	r0, r4, r2
400275c4:	e0430000 	sub	r0, r3, r0
400275c8:	e3a03007 	mov	r3, #7
400275cc:	e713f310 	sdiv	r3, r0, r3
400275d0:	e0633183 	rsb	r3, r3, r3, lsl #3
400275d4:	e0400003 	sub	r0, r0, r3
400275d8:	e2800001 	add	r0, r0, #1
400275dc:	e28dd02c 	add	sp, sp, #44	; 0x2c
400275e0:	e8bd8030 	pop	{r4, r5, pc}
400275e4:	00015180 	andeq	r5, r1, r0, lsl #3

400275e8 <HwClock::PCF8563GetAlarmMode()>:
400275e8:	e92d4013 	push	{r0, r1, r4, lr}
400275ec:	e1a04000 	mov	r4, r0
400275f0:	e28d1007 	add	r1, sp, #7
400275f4:	e3a00001 	mov	r0, #1
400275f8:	eb001030 	bl	4002b6c0 <h3_i2c_read_register(unsigned char, unsigned char&)>
400275fc:	e5dd3007 	ldrb	r3, [sp, #7]
40027600:	e7e020d3 	ubfx	r2, r3, #1, #1
40027604:	e7e031d3 	ubfx	r3, r3, #3, #1
40027608:	e5c4200b 	strb	r2, [r4, #11]
4002760c:	e5c4300c 	strb	r3, [r4, #12]
40027610:	e28dd008 	add	sp, sp, #8
40027614:	e8bd8010 	pop	{r4, pc}

40027618 <HwClock::RtcGetAlarm(tm*)>:
40027618:	e92d40f0 	push	{r4, r5, r6, r7, lr}
4002761c:	e24dd014 	sub	sp, sp, #20
40027620:	e1a05000 	mov	r5, r0
40027624:	e1a04001 	mov	r4, r1
40027628:	ebffff1b 	bl	4002729c <HwClock::RtcGet(tm*)>
4002762c:	e2506000 	subs	r6, r0, #0
40027630:	0a000035 	beq	4002770c <HwClock::RtcGetAlarm(tm*)+0xf4>
40027634:	e5d57009 	ldrb	r7, [r5, #9]
40027638:	e3570001 	cmp	r7, #1
4002763c:	0a000035 	beq	40027718 <HwClock::RtcGetAlarm(tm*)+0x100>
40027640:	e3570002 	cmp	r7, #2
40027644:	0a00005b 	beq	400277b8 <HwClock::RtcGetAlarm(tm*)+0x1a0>
40027648:	e3570000 	cmp	r7, #0
4002764c:	13a06000 	movne	r6, #0
40027650:	1a00002d 	bne	4002770c <HwClock::RtcGetAlarm(tm*)+0xf4>
40027654:	e5d50008 	ldrb	r0, [r5, #8]
40027658:	e3a03007 	mov	r3, #7
4002765c:	e5cd3004 	strb	r3, [sp, #4]
40027660:	eb000ff2 	bl	4002b630 <h3_i2c_set_slave_address(unsigned char)>
40027664:	e59f01dc 	ldr	r0, [pc, #476]	; 40027848 <HwClock::RtcGetAlarm(tm*)+0x230>
40027668:	eb000fe9 	bl	4002b614 <h3_i2c_set_baudrate(unsigned long)>
4002766c:	e3a01001 	mov	r1, #1
40027670:	e28d0004 	add	r0, sp, #4
40027674:	eb000f63 	bl	4002b408 <h3_i2c_write(char const*, unsigned long)>
40027678:	e3a0100a 	mov	r1, #10
4002767c:	e28d0004 	add	r0, sp, #4
40027680:	eb000f89 	bl	4002b4ac <h3_i2c_read(char*, unsigned long)>
40027684:	e5dd3007 	ldrb	r3, [sp, #7]
40027688:	e7e21253 	ubfx	r1, r3, #4, #3
4002768c:	e203200f 	and	r2, r3, #15
40027690:	e3a0300a 	mov	r3, #10
40027694:	e1022183 	smlabb	r2, r3, r1, r2
40027698:	e5842000 	str	r2, [r4]
4002769c:	e5dd2008 	ldrb	r2, [sp, #8]
400276a0:	e7e21252 	ubfx	r1, r2, #4, #3
400276a4:	e202200f 	and	r2, r2, #15
400276a8:	e1022183 	smlabb	r2, r3, r1, r2
400276ac:	e5842004 	str	r2, [r4, #4]
400276b0:	e5dd2009 	ldrb	r2, [sp, #9]
400276b4:	e7e11252 	ubfx	r1, r2, #4, #2
400276b8:	e202200f 	and	r2, r2, #15
400276bc:	e1022183 	smlabb	r2, r3, r1, r2
400276c0:	e5842008 	str	r2, [r4, #8]
400276c4:	e5dd200a 	ldrb	r2, [sp, #10]
400276c8:	e2022007 	and	r2, r2, #7
400276cc:	e2422001 	sub	r2, r2, #1
400276d0:	e5842018 	str	r2, [r4, #24]
400276d4:	e5dd200b 	ldrb	r2, [sp, #11]
400276d8:	e7e11252 	ubfx	r1, r2, #4, #2
400276dc:	e202200f 	and	r2, r2, #15
400276e0:	e1022183 	smlabb	r2, r3, r1, r2
400276e4:	e584200c 	str	r2, [r4, #12]
400276e8:	e5dd200c 	ldrb	r2, [sp, #12]
400276ec:	e7e01252 	ubfx	r1, r2, #4, #1
400276f0:	e202200f 	and	r2, r2, #15
400276f4:	e1032183 	smlabb	r3, r3, r1, r2
400276f8:	e2433001 	sub	r3, r3, #1
400276fc:	e5843010 	str	r3, [r4, #16]
40027700:	e5dd3004 	ldrb	r3, [sp, #4]
40027704:	e7e03253 	ubfx	r3, r3, #4, #1
40027708:	e5c5300b 	strb	r3, [r5, #11]
4002770c:	e1a00006 	mov	r0, r6
40027710:	e28dd014 	add	sp, sp, #20
40027714:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
40027718:	e5d50008 	ldrb	r0, [r5, #8]
4002771c:	e3a03007 	mov	r3, #7
40027720:	e5cd3004 	strb	r3, [sp, #4]
40027724:	eb000fc1 	bl	4002b630 <h3_i2c_set_slave_address(unsigned char)>
40027728:	e59f0118 	ldr	r0, [pc, #280]	; 40027848 <HwClock::RtcGetAlarm(tm*)+0x230>
4002772c:	eb000fb8 	bl	4002b614 <h3_i2c_set_baudrate(unsigned long)>
40027730:	e1a01007 	mov	r1, r7
40027734:	e28d0004 	add	r0, sp, #4
40027738:	eb000f32 	bl	4002b408 <h3_i2c_write(char const*, unsigned long)>
4002773c:	e3a0100a 	mov	r1, #10
40027740:	e28d0004 	add	r0, sp, #4
40027744:	eb000f58 	bl	4002b4ac <h3_i2c_read(char*, unsigned long)>
40027748:	e5dd3004 	ldrb	r3, [sp, #4]
4002774c:	e7e21253 	ubfx	r1, r3, #4, #3
40027750:	e203200f 	and	r2, r3, #15
40027754:	e3a0300a 	mov	r3, #10
40027758:	e1022183 	smlabb	r2, r3, r1, r2
4002775c:	e5842000 	str	r2, [r4]
40027760:	e5dd2005 	ldrb	r2, [sp, #5]
40027764:	e7e21252 	ubfx	r1, r2, #4, #3
40027768:	e202200f 	and	r2, r2, #15
4002776c:	e1022183 	smlabb	r2, r3, r1, r2
40027770:	e5842004 	str	r2, [r4, #4]
40027774:	e5dd2006 	ldrb	r2, [sp, #6]
40027778:	e7e11252 	ubfx	r1, r2, #4, #2
4002777c:	e202200f 	and	r2, r2, #15
40027780:	e1022183 	smlabb	r2, r3, r1, r2
40027784:	e5842008 	str	r2, [r4, #8]
40027788:	e5dd2007 	ldrb	r2, [sp, #7]
4002778c:	e7e11252 	ubfx	r1, r2, #4, #2
40027790:	e202200f 	and	r2, r2, #15
40027794:	e1032183 	smlabb	r3, r3, r1, r2
40027798:	e584300c 	str	r3, [r4, #12]
4002779c:	e5dd300b 	ldrb	r3, [sp, #11]
400277a0:	e2033001 	and	r3, r3, #1
400277a4:	e5c5300b 	strb	r3, [r5, #11]
400277a8:	e5dd300c 	ldrb	r3, [sp, #12]
400277ac:	e2033001 	and	r3, r3, #1
400277b0:	e5c5300c 	strb	r3, [r5, #12]
400277b4:	eaffffd4 	b	4002770c <HwClock::RtcGetAlarm(tm*)+0xf4>
400277b8:	e5d50008 	ldrb	r0, [r5, #8]
400277bc:	e3a03009 	mov	r3, #9
400277c0:	e5cd3004 	strb	r3, [sp, #4]
400277c4:	eb000f99 	bl	4002b630 <h3_i2c_set_slave_address(unsigned char)>
400277c8:	e59f0078 	ldr	r0, [pc, #120]	; 40027848 <HwClock::RtcGetAlarm(tm*)+0x230>
400277cc:	eb000f90 	bl	4002b614 <h3_i2c_set_baudrate(unsigned long)>
400277d0:	e3a01001 	mov	r1, #1
400277d4:	e28d0004 	add	r0, sp, #4
400277d8:	eb000f0a 	bl	4002b408 <h3_i2c_write(char const*, unsigned long)>
400277dc:	e3a01004 	mov	r1, #4
400277e0:	e08d0001 	add	r0, sp, r1
400277e4:	eb000f30 	bl	4002b4ac <h3_i2c_read(char*, unsigned long)>
400277e8:	e3a03000 	mov	r3, #0
400277ec:	e1a00005 	mov	r0, r5
400277f0:	e5843000 	str	r3, [r4]
400277f4:	e5dd3004 	ldrb	r3, [sp, #4]
400277f8:	e7e21253 	ubfx	r1, r3, #4, #3
400277fc:	e203200f 	and	r2, r3, #15
40027800:	e3a0300a 	mov	r3, #10
40027804:	e1022183 	smlabb	r2, r3, r1, r2
40027808:	e5842004 	str	r2, [r4, #4]
4002780c:	e5dd2005 	ldrb	r2, [sp, #5]
40027810:	e7e11252 	ubfx	r1, r2, #4, #2
40027814:	e202200f 	and	r2, r2, #15
40027818:	e1022183 	smlabb	r2, r3, r1, r2
4002781c:	e5842008 	str	r2, [r4, #8]
40027820:	e5dd2006 	ldrb	r2, [sp, #6]
40027824:	e7e11252 	ubfx	r1, r2, #4, #2
40027828:	e202200f 	and	r2, r2, #15
4002782c:	e1032183 	smlabb	r3, r3, r1, r2
40027830:	e584300c 	str	r3, [r4, #12]
40027834:	e5dd3007 	ldrb	r3, [sp, #7]
40027838:	e2033007 	and	r3, r3, #7
4002783c:	e5843018 	str	r3, [r4, #24]
40027840:	ebffff68 	bl	400275e8 <HwClock::PCF8563GetAlarmMode()>
40027844:	eaffffb0 	b	4002770c <HwClock::RtcGetAlarm(tm*)+0xf4>
40027848:	00061a80 	andeq	r1, r6, r0, lsl #21

4002784c <HwClock::PCF8563SetAlarmMode()>:
4002784c:	e92d4037 	push	{r0, r1, r2, r4, r5, lr}
40027850:	e3a04001 	mov	r4, #1
40027854:	e5cd4005 	strb	r4, [sp, #5]
40027858:	e1a05000 	mov	r5, r0
4002785c:	e1a01004 	mov	r1, r4
40027860:	e28d0005 	add	r0, sp, #5
40027864:	eb000ee7 	bl	4002b408 <h3_i2c_write(char const*, unsigned long)>
40027868:	e1a01004 	mov	r1, r4
4002786c:	e28d0005 	add	r0, sp, #5
40027870:	eb000f0d 	bl	4002b4ac <h3_i2c_read(char*, unsigned long)>
40027874:	e5d5300b 	ldrb	r3, [r5, #11]
40027878:	e3a01002 	mov	r1, #2
4002787c:	e5cd4004 	strb	r4, [sp, #4]
40027880:	e28d0004 	add	r0, sp, #4
40027884:	e3530000 	cmp	r3, #0
40027888:	e5dd3005 	ldrb	r3, [sp, #5]
4002788c:	13833002 	orrne	r3, r3, #2
40027890:	020330fd 	andeq	r3, r3, #253	; 0xfd
40027894:	e3c33008 	bic	r3, r3, #8
40027898:	e5cd3005 	strb	r3, [sp, #5]
4002789c:	eb000ed9 	bl	4002b408 <h3_i2c_write(char const*, unsigned long)>
400278a0:	e28dd00c 	add	sp, sp, #12
400278a4:	e8bd8030 	pop	{r4, r5, pc}

400278a8 <HwClock::RtcSetAlarm(tm const*)>:
400278a8:	e92d40f0 	push	{r4, r5, r6, r7, lr}
400278ac:	e1a05000 	mov	r5, r0
400278b0:	e5d07009 	ldrb	r7, [r0, #9]
400278b4:	e24dd014 	sub	sp, sp, #20
400278b8:	e1a04001 	mov	r4, r1
400278bc:	e3570001 	cmp	r7, #1
400278c0:	0a00003c 	beq	400279b8 <HwClock::RtcSetAlarm(tm const*)+0x110>
400278c4:	e3570002 	cmp	r7, #2
400278c8:	0a000074 	beq	40027aa0 <HwClock::RtcSetAlarm(tm const*)+0x1f8>
400278cc:	e3570000 	cmp	r7, #0
400278d0:	13a00000 	movne	r0, #0
400278d4:	1a000035 	bne	400279b0 <HwClock::RtcSetAlarm(tm const*)+0x108>
400278d8:	e3a07007 	mov	r7, #7
400278dc:	ebffff29 	bl	40027588 <HwClock::MCP794xxAlarmWeekday(tm*)>
400278e0:	e5cd7005 	strb	r7, [sp, #5]
400278e4:	e1a06000 	mov	r6, r0
400278e8:	e3c66008 	bic	r6, r6, #8
400278ec:	e3a01001 	mov	r1, #1
400278f0:	e28d0005 	add	r0, sp, #5
400278f4:	e3866070 	orr	r6, r6, #112	; 0x70
400278f8:	eb000ec2 	bl	4002b408 <h3_i2c_write(char const*, unsigned long)>
400278fc:	e3a0100a 	mov	r1, #10
40027900:	e28d0005 	add	r0, sp, #5
40027904:	eb000ee8 	bl	4002b4ac <h3_i2c_read(char*, unsigned long)>
40027908:	e5942000 	ldr	r2, [r4]
4002790c:	e3a0300a 	mov	r3, #10
40027910:	e5cd600b 	strb	r6, [sp, #11]
40027914:	e28d0004 	add	r0, sp, #4
40027918:	e711f312 	sdiv	r1, r2, r3
4002791c:	e0622193 	mls	r2, r3, r1, r2
40027920:	e5cd7004 	strb	r7, [sp, #4]
40027924:	e0822201 	add	r2, r2, r1, lsl #4
40027928:	e5cd2008 	strb	r2, [sp, #8]
4002792c:	e5942004 	ldr	r2, [r4, #4]
40027930:	e711f312 	sdiv	r1, r2, r3
40027934:	e0622193 	mls	r2, r3, r1, r2
40027938:	e0822201 	add	r2, r2, r1, lsl #4
4002793c:	e5cd2009 	strb	r2, [sp, #9]
40027940:	e5942008 	ldr	r2, [r4, #8]
40027944:	e711f312 	sdiv	r1, r2, r3
40027948:	e0622193 	mls	r2, r3, r1, r2
4002794c:	e0822201 	add	r2, r2, r1, lsl #4
40027950:	e5cd200a 	strb	r2, [sp, #10]
40027954:	e594200c 	ldr	r2, [r4, #12]
40027958:	e711f312 	sdiv	r1, r2, r3
4002795c:	e0622193 	mls	r2, r3, r1, r2
40027960:	e0822201 	add	r2, r2, r1, lsl #4
40027964:	e5cd200c 	strb	r2, [sp, #12]
40027968:	e5942010 	ldr	r2, [r4, #16]
4002796c:	e2822001 	add	r2, r2, #1
40027970:	e711f312 	sdiv	r1, r2, r3
40027974:	e0622193 	mls	r2, r3, r1, r2
40027978:	e5dd3005 	ldrb	r3, [sp, #5]
4002797c:	e0822201 	add	r2, r2, r1, lsl #4
40027980:	e3a0100b 	mov	r1, #11
40027984:	e3c33010 	bic	r3, r3, #16
40027988:	e5cd3005 	strb	r3, [sp, #5]
4002798c:	e5cd200d 	strb	r2, [sp, #13]
40027990:	eb000e9c 	bl	4002b408 <h3_i2c_write(char const*, unsigned long)>
40027994:	e5d5300b 	ldrb	r3, [r5, #11]
40027998:	e3530000 	cmp	r3, #0
4002799c:	15cd7004 	strbne	r7, [sp, #4]
400279a0:	15dd3005 	ldrbne	r3, [sp, #5]
400279a4:	13833010 	orrne	r3, r3, #16
400279a8:	1a000037 	bne	40027a8c <HwClock::RtcSetAlarm(tm const*)+0x1e4>
400279ac:	e3a00001 	mov	r0, #1
400279b0:	e28dd014 	add	sp, sp, #20
400279b4:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
400279b8:	e5d00008 	ldrb	r0, [r0, #8]
400279bc:	e3a06007 	mov	r6, #7
400279c0:	e5cd6005 	strb	r6, [sp, #5]
400279c4:	eb000f19 	bl	4002b630 <h3_i2c_set_slave_address(unsigned char)>
400279c8:	e59f014c 	ldr	r0, [pc, #332]	; 40027b1c <HwClock::RtcSetAlarm(tm const*)+0x274>
400279cc:	eb000f10 	bl	4002b614 <h3_i2c_set_baudrate(unsigned long)>
400279d0:	e1a01007 	mov	r1, r7
400279d4:	e28d0005 	add	r0, sp, #5
400279d8:	eb000e8a 	bl	4002b408 <h3_i2c_write(char const*, unsigned long)>
400279dc:	e3a01009 	mov	r1, #9
400279e0:	e28d0005 	add	r0, sp, #5
400279e4:	eb000eb0 	bl	4002b4ac <h3_i2c_read(char*, unsigned long)>
400279e8:	e5943000 	ldr	r3, [r4]
400279ec:	e3a0100a 	mov	r1, #10
400279f0:	e5dd000c 	ldrb	r0, [sp, #12]
400279f4:	e71cf113 	sdiv	ip, r3, r1
400279f8:	e0633c91 	mls	r3, r1, ip, r3
400279fc:	e5dd200d 	ldrb	r2, [sp, #13]
40027a00:	e083320c 	add	r3, r3, ip, lsl #4
40027a04:	e5cd3005 	strb	r3, [sp, #5]
40027a08:	e5943004 	ldr	r3, [r4, #4]
40027a0c:	e3c00003 	bic	r0, r0, #3
40027a10:	e71cf113 	sdiv	ip, r3, r1
40027a14:	e0633c91 	mls	r3, r1, ip, r3
40027a18:	e3c22003 	bic	r2, r2, #3
40027a1c:	e083320c 	add	r3, r3, ip, lsl #4
40027a20:	e5cd3006 	strb	r3, [sp, #6]
40027a24:	e5943008 	ldr	r3, [r4, #8]
40027a28:	e5cd000c 	strb	r0, [sp, #12]
40027a2c:	e28d0004 	add	r0, sp, #4
40027a30:	e71cf113 	sdiv	ip, r3, r1
40027a34:	e0633c91 	mls	r3, r1, ip, r3
40027a38:	e5cd200d 	strb	r2, [sp, #13]
40027a3c:	e083320c 	add	r3, r3, ip, lsl #4
40027a40:	e5cd3007 	strb	r3, [sp, #7]
40027a44:	e594300c 	ldr	r3, [r4, #12]
40027a48:	e5cd6004 	strb	r6, [sp, #4]
40027a4c:	e71cf113 	sdiv	ip, r3, r1
40027a50:	e0633c91 	mls	r3, r1, ip, r3
40027a54:	e083320c 	add	r3, r3, ip, lsl #4
40027a58:	e5cd3008 	strb	r3, [sp, #8]
40027a5c:	e3a03000 	mov	r3, #0
40027a60:	e5cd3009 	strb	r3, [sp, #9]
40027a64:	e5cd300a 	strb	r3, [sp, #10]
40027a68:	e5cd300b 	strb	r3, [sp, #11]
40027a6c:	eb000e65 	bl	4002b408 <h3_i2c_write(char const*, unsigned long)>
40027a70:	e5d5300b 	ldrb	r3, [r5, #11]
40027a74:	e3530000 	cmp	r3, #0
40027a78:	0affffcb 	beq	400279ac <HwClock::RtcSetAlarm(tm const*)+0x104>
40027a7c:	e3a0300e 	mov	r3, #14
40027a80:	e5cd3004 	strb	r3, [sp, #4]
40027a84:	e5dd3005 	ldrb	r3, [sp, #5]
40027a88:	e3833001 	orr	r3, r3, #1
40027a8c:	e5cd3005 	strb	r3, [sp, #5]
40027a90:	e3a01002 	mov	r1, #2
40027a94:	e28d0004 	add	r0, sp, #4
40027a98:	eb000e5a 	bl	4002b408 <h3_i2c_write(char const*, unsigned long)>
40027a9c:	eaffffc2 	b	400279ac <HwClock::RtcSetAlarm(tm const*)+0x104>
40027aa0:	e5d00008 	ldrb	r0, [r0, #8]
40027aa4:	e3a03009 	mov	r3, #9
40027aa8:	e5cd3004 	strb	r3, [sp, #4]
40027aac:	e3a0200a 	mov	r2, #10
40027ab0:	e5913004 	ldr	r3, [r1, #4]
40027ab4:	e711f213 	sdiv	r1, r3, r2
40027ab8:	e0633192 	mls	r3, r2, r1, r3
40027abc:	e0833201 	add	r3, r3, r1, lsl #4
40027ac0:	e5cd3005 	strb	r3, [sp, #5]
40027ac4:	e5943008 	ldr	r3, [r4, #8]
40027ac8:	e711f213 	sdiv	r1, r3, r2
40027acc:	e0633192 	mls	r3, r2, r1, r3
40027ad0:	e0833201 	add	r3, r3, r1, lsl #4
40027ad4:	e5cd3006 	strb	r3, [sp, #6]
40027ad8:	e594300c 	ldr	r3, [r4, #12]
40027adc:	e711f213 	sdiv	r1, r3, r2
40027ae0:	e0633192 	mls	r3, r2, r1, r3
40027ae4:	e0833201 	add	r3, r3, r1, lsl #4
40027ae8:	e5cd3007 	strb	r3, [sp, #7]
40027aec:	e5943018 	ldr	r3, [r4, #24]
40027af0:	e2033007 	and	r3, r3, #7
40027af4:	e5cd3008 	strb	r3, [sp, #8]
40027af8:	eb000ecc 	bl	4002b630 <h3_i2c_set_slave_address(unsigned char)>
40027afc:	e59f0018 	ldr	r0, [pc, #24]	; 40027b1c <HwClock::RtcSetAlarm(tm const*)+0x274>
40027b00:	eb000ec3 	bl	4002b614 <h3_i2c_set_baudrate(unsigned long)>
40027b04:	e3a01005 	mov	r1, #5
40027b08:	e28d0004 	add	r0, sp, #4
40027b0c:	eb000e3d 	bl	4002b408 <h3_i2c_write(char const*, unsigned long)>
40027b10:	e1a00005 	mov	r0, r5
40027b14:	ebffff4c 	bl	4002784c <HwClock::PCF8563SetAlarmMode()>
40027b18:	eaffffa3 	b	400279ac <HwClock::RtcSetAlarm(tm const*)+0x104>
40027b1c:	00061a80 	andeq	r1, r6, r0, lsl #21

40027b20 <SoftwareTimerAdd(unsigned long, void (*)(long))>:
40027b20:	e303c5f8 	movw	ip, #13816	; 0x35f8
40027b24:	e344c006 	movt	ip, #16390	; 0x4006
40027b28:	e59c2000 	ldr	r2, [ip]
40027b2c:	e352000b 	cmp	r2, #11
40027b30:	8a000013 	bhi	40027b84 <SoftwareTimerAdd(unsigned long, void (*)(long))+0x64>
40027b34:	e3a03b03 	mov	r3, #3072	; 0xc00
40027b38:	e34031c2 	movt	r3, #450	; 0x1c2
40027b3c:	e92d4010 	push	{r4, lr}
40027b40:	e303e6bc 	movw	lr, #14012	; 0x36bc
40027b44:	e5934084 	ldr	r4, [r3, #132]	; 0x84
40027b48:	e30335fc 	movw	r3, #13820	; 0x35fc
40027b4c:	e3443006 	movt	r3, #16390	; 0x4006
40027b50:	e0844000 	add	r4, r4, r0
40027b54:	e344e006 	movt	lr, #16390	; 0x4006
40027b58:	e7834202 	str	r4, [r3, r2, lsl #4]
40027b5c:	e0833202 	add	r3, r3, r2, lsl #4
40027b60:	e2822001 	add	r2, r2, #1
40027b64:	e58c2000 	str	r2, [ip]
40027b68:	e5830004 	str	r0, [r3, #4]
40027b6c:	e59e0000 	ldr	r0, [lr]
40027b70:	e583100c 	str	r1, [r3, #12]
40027b74:	e5830008 	str	r0, [r3, #8]
40027b78:	e2803001 	add	r3, r0, #1
40027b7c:	e58e3000 	str	r3, [lr]
40027b80:	e8bd8010 	pop	{r4, pc}
40027b84:	e3e00000 	mvn	r0, #0
40027b88:	e12fff1e 	bx	lr

40027b8c <SoftwareTimerDelete(long&)>:
40027b8c:	e92d4070 	push	{r4, r5, r6, lr}
40027b90:	e30365f8 	movw	r6, #13816	; 0x35f8
40027b94:	e3446006 	movt	r6, #16390	; 0x4006
40027b98:	e596e000 	ldr	lr, [r6]
40027b9c:	e35e0000 	cmp	lr, #0
40027ba0:	0a000014 	beq	40027bf8 <SoftwareTimerDelete(long&)+0x6c>
40027ba4:	e5904000 	ldr	r4, [r0]
40027ba8:	e30315fc 	movw	r1, #13820	; 0x35fc
40027bac:	e3441006 	movt	r1, #16390	; 0x4006
40027bb0:	e1a05000 	mov	r5, r0
40027bb4:	e3a03000 	mov	r3, #0
40027bb8:	ea000001 	b	40027bc4 <SoftwareTimerDelete(long&)+0x38>
40027bbc:	e15e0003 	cmp	lr, r3
40027bc0:	0a00000e 	beq	40027c00 <SoftwareTimerDelete(long&)+0x74>
40027bc4:	e081c203 	add	ip, r1, r3, lsl #4
40027bc8:	e2833001 	add	r3, r3, #1
40027bcc:	e59c2008 	ldr	r2, [ip, #8]
40027bd0:	e1520004 	cmp	r2, r4
40027bd4:	1afffff8 	bne	40027bbc <SoftwareTimerDelete(long&)+0x30>
40027bd8:	e24ee001 	sub	lr, lr, #1
40027bdc:	e3e04000 	mvn	r4, #0
40027be0:	e586e000 	str	lr, [r6]
40027be4:	e081120e 	add	r1, r1, lr, lsl #4
40027be8:	e3a0e001 	mov	lr, #1
40027bec:	e891000f 	ldm	r1, {r0, r1, r2, r3}
40027bf0:	e88c000f 	stm	ip, {r0, r1, r2, r3}
40027bf4:	e5854000 	str	r4, [r5]
40027bf8:	e1a0000e 	mov	r0, lr
40027bfc:	e8bd8070 	pop	{r4, r5, r6, pc}
40027c00:	e3a0e000 	mov	lr, #0
40027c04:	e1a0000e 	mov	r0, lr
40027c08:	e8bd8070 	pop	{r4, r5, r6, pc}

40027c0c <SoftwareTimerChange(long, unsigned long)>:
40027c0c:	e30335f8 	movw	r3, #13816	; 0x35f8
40027c10:	e3443006 	movt	r3, #16390	; 0x4006
40027c14:	e92d4010 	push	{r4, lr}
40027c18:	e593e000 	ldr	lr, [r3]
40027c1c:	e35e0000 	cmp	lr, #0
40027c20:	0a000012 	beq	40027c70 <SoftwareTimerChange(long, unsigned long)+0x64>
40027c24:	e30345fc 	movw	r4, #13820	; 0x35fc
40027c28:	e3a03000 	mov	r3, #0
40027c2c:	e3444006 	movt	r4, #16390	; 0x4006
40027c30:	ea000002 	b	40027c40 <SoftwareTimerChange(long, unsigned long)+0x34>
40027c34:	e2833001 	add	r3, r3, #1
40027c38:	e153000e 	cmp	r3, lr
40027c3c:	0a00000b 	beq	40027c70 <SoftwareTimerChange(long, unsigned long)+0x64>
40027c40:	e0842203 	add	r2, r4, r3, lsl #4
40027c44:	e592c008 	ldr	ip, [r2, #8]
40027c48:	e15c0000 	cmp	ip, r0
40027c4c:	1afffff8 	bne	40027c34 <SoftwareTimerChange(long, unsigned long)+0x28>
40027c50:	e3a00b03 	mov	r0, #3072	; 0xc00
40027c54:	e34001c2 	movt	r0, #450	; 0x1c2
40027c58:	e5900084 	ldr	r0, [r0, #132]	; 0x84
40027c5c:	e5821004 	str	r1, [r2, #4]
40027c60:	e0801001 	add	r1, r0, r1
40027c64:	e3a00001 	mov	r0, #1
40027c68:	e7841203 	str	r1, [r4, r3, lsl #4]
40027c6c:	e8bd8010 	pop	{r4, pc}
40027c70:	e3a00000 	mov	r0, #0
40027c74:	e8bd8010 	pop	{r4, pc}

40027c78 <SoftwareTimerRun()>:
40027c78:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40027c7c:	e30375f8 	movw	r7, #13816	; 0x35f8
40027c80:	e3447006 	movt	r7, #16390	; 0x4006
40027c84:	e3a03b03 	mov	r3, #3072	; 0xc00
40027c88:	e34031c2 	movt	r3, #450	; 0x1c2
40027c8c:	e5972000 	ldr	r2, [r7]
40027c90:	e5936084 	ldr	r6, [r3, #132]	; 0x84
40027c94:	e3520000 	cmp	r2, #0
40027c98:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
40027c9c:	e30345fc 	movw	r4, #13820	; 0x35fc
40027ca0:	e3a05000 	mov	r5, #0
40027ca4:	e3444006 	movt	r4, #16390	; 0x4006
40027ca8:	e5943000 	ldr	r3, [r4]
40027cac:	e2855001 	add	r5, r5, #1
40027cb0:	e1530006 	cmp	r3, r6
40027cb4:	8a000005 	bhi	40027cd0 <SoftwareTimerRun()+0x58>
40027cb8:	e594300c 	ldr	r3, [r4, #12]
40027cbc:	e5940008 	ldr	r0, [r4, #8]
40027cc0:	e12fff33 	blx	r3
40027cc4:	e5943004 	ldr	r3, [r4, #4]
40027cc8:	e0833006 	add	r3, r3, r6
40027ccc:	e5843000 	str	r3, [r4]
40027cd0:	e5973000 	ldr	r3, [r7]
40027cd4:	e2844010 	add	r4, r4, #16
40027cd8:	e1530005 	cmp	r3, r5
40027cdc:	8afffff1 	bhi	40027ca8 <SoftwareTimerRun()+0x30>
40027ce0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

40027ce4 <ld_dword>:
40027ce4:	e5900000 	ldr	r0, [r0]
40027ce8:	e12fff1e 	bx	lr

40027cec <clst2sect>:
40027cec:	e5903010 	ldr	r3, [r0, #16]
40027cf0:	e2411002 	sub	r1, r1, #2
40027cf4:	e2433002 	sub	r3, r3, #2
40027cf8:	e1530001 	cmp	r3, r1
40027cfc:	81d030ba 	ldrhhi	r3, [r0, #10]
40027d00:	85900024 	ldrhi	r0, [r0, #36]	; 0x24
40027d04:	80200391 	mlahi	r0, r1, r3, r0
40027d08:	93a00000 	movls	r0, #0
40027d0c:	e12fff1e 	bx	lr

40027d10 <get_ldnumber>:
40027d10:	e590c000 	ldr	ip, [r0]
40027d14:	e35c0000 	cmp	ip, #0
40027d18:	0a000011 	beq	40027d64 <get_ldnumber+0x54>
40027d1c:	e1a02000 	mov	r2, r0
40027d20:	e1a0100c 	mov	r1, ip
40027d24:	e4d13001 	ldrb	r3, [r1], #1
40027d28:	e353003a 	cmp	r3, #58	; 0x3a
40027d2c:	1353001f 	cmpne	r3, #31
40027d30:	83a00001 	movhi	r0, #1
40027d34:	93a00000 	movls	r0, #0
40027d38:	8afffff9 	bhi	40027d24 <get_ldnumber+0x14>
40027d3c:	e353003a 	cmp	r3, #58	; 0x3a
40027d40:	112fff1e 	bxne	lr
40027d44:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40027d48:	e28ce002 	add	lr, ip, #2
40027d4c:	e5dc3000 	ldrb	r3, [ip]
40027d50:	e151000e 	cmp	r1, lr
40027d54:	03530030 	cmpeq	r3, #48	; 0x30
40027d58:	1a000003 	bne	40027d6c <get_ldnumber+0x5c>
40027d5c:	e5821000 	str	r1, [r2]
40027d60:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40027d64:	e3e00000 	mvn	r0, #0
40027d68:	e12fff1e 	bx	lr
40027d6c:	e3e00000 	mvn	r0, #0
40027d70:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

40027d74 <validate>:
40027d74:	e92d4070 	push	{r4, r5, r6, lr}
40027d78:	e2504000 	subs	r4, r0, #0
40027d7c:	e1a05001 	mov	r5, r1
40027d80:	1a000003 	bne	40027d94 <validate+0x20>
40027d84:	e3a00009 	mov	r0, #9
40027d88:	e3a03000 	mov	r3, #0
40027d8c:	e5853000 	str	r3, [r5]
40027d90:	e8bd8070 	pop	{r4, r5, r6, pc}
40027d94:	e5943000 	ldr	r3, [r4]
40027d98:	e3530000 	cmp	r3, #0
40027d9c:	0afffff8 	beq	40027d84 <validate+0x10>
40027da0:	e5d32000 	ldrb	r2, [r3]
40027da4:	e3520000 	cmp	r2, #0
40027da8:	0afffff5 	beq	40027d84 <validate+0x10>
40027dac:	e1d410b4 	ldrh	r1, [r4, #4]
40027db0:	e1d320b6 	ldrh	r2, [r3, #6]
40027db4:	e1510002 	cmp	r1, r2
40027db8:	1afffff1 	bne	40027d84 <validate+0x10>
40027dbc:	e5d30001 	ldrb	r0, [r3, #1]
40027dc0:	eb00051d 	bl	4002923c <disk_status>
40027dc4:	e2100001 	ands	r0, r0, #1
40027dc8:	1affffed 	bne	40027d84 <validate+0x10>
40027dcc:	e5943000 	ldr	r3, [r4]
40027dd0:	eaffffed 	b	40027d8c <validate+0x18>

40027dd4 <move_window>:
40027dd4:	e5903028 	ldr	r3, [r0, #40]	; 0x28
40027dd8:	e1530001 	cmp	r3, r1
40027ddc:	0a00000d 	beq	40027e18 <move_window+0x44>
40027de0:	e92d4070 	push	{r4, r5, r6, lr}
40027de4:	e1a02001 	mov	r2, r1
40027de8:	e1a04001 	mov	r4, r1
40027dec:	e1a05000 	mov	r5, r0
40027df0:	e280102c 	add	r1, r0, #44	; 0x2c
40027df4:	e3a03001 	mov	r3, #1
40027df8:	e5d00001 	ldrb	r0, [r0, #1]
40027dfc:	eb0004d9 	bl	40029168 <disk_read>
40027e00:	e2503000 	subs	r3, r0, #0
40027e04:	13a03001 	movne	r3, #1
40027e08:	13e04000 	mvnne	r4, #0
40027e0c:	e5854028 	str	r4, [r5, #40]	; 0x28
40027e10:	e1a00003 	mov	r0, r3
40027e14:	e8bd8070 	pop	{r4, r5, r6, pc}
40027e18:	e3a03000 	mov	r3, #0
40027e1c:	e1a00003 	mov	r0, r3
40027e20:	e12fff1e 	bx	lr

40027e24 <check_fs>:
40027e24:	e3a03000 	mov	r3, #0
40027e28:	e92d4070 	push	{r4, r5, r6, lr}
40027e2c:	e1a04000 	mov	r4, r0
40027e30:	e5c03003 	strb	r3, [r0, #3]
40027e34:	e3e03000 	mvn	r3, #0
40027e38:	e5803028 	str	r3, [r0, #40]	; 0x28
40027e3c:	ebffffe4 	bl	40027dd4 <move_window>
40027e40:	e3500000 	cmp	r0, #0
40027e44:	1a000035 	bne	40027f20 <check_fs+0xfc>
40027e48:	e5d4202c 	ldrb	r2, [r4, #44]	; 0x2c
40027e4c:	e300322a 	movw	r3, #554	; 0x22a
40027e50:	e19450b3 	ldrh	r5, [r4, r3]
40027e54:	e2823018 	add	r3, r2, #24
40027e58:	e6ef3073 	uxtb	r3, r3
40027e5c:	e35200eb 	cmp	r2, #235	; 0xeb
40027e60:	13530001 	cmpne	r3, #1
40027e64:	8a000028 	bhi	40027f0c <check_fs+0xe8>
40027e68:	e30a3a55 	movw	r3, #43605	; 0xaa55
40027e6c:	e1550003 	cmp	r5, r3
40027e70:	1a000005 	bne	40027e8c <check_fs+0x68>
40027e74:	e59f10b4 	ldr	r1, [pc, #180]	; 40027f30 <check_fs+0x10c>
40027e78:	e3a02008 	mov	r2, #8
40027e7c:	e284007e 	add	r0, r4, #126	; 0x7e
40027e80:	ebff8c59 	bl	4000afec <memcmp>
40027e84:	e3500000 	cmp	r0, #0
40027e88:	08bd8070 	popeq	{r4, r5, r6, pc}
40027e8c:	e1d423b7 	ldrh	r2, [r4, #55]	; 0x37
40027e90:	e5d43039 	ldrb	r3, [r4, #57]	; 0x39
40027e94:	e2422c02 	sub	r2, r2, #512	; 0x200
40027e98:	e16f2f12 	clz	r2, r2
40027e9c:	e3530000 	cmp	r3, #0
40027ea0:	e1a022a2 	lsr	r2, r2, #5
40027ea4:	03a02000 	moveq	r2, #0
40027ea8:	e3520000 	cmp	r2, #0
40027eac:	0a000016 	beq	40027f0c <check_fs+0xe8>
40027eb0:	e2432001 	sub	r2, r3, #1
40027eb4:	e1120003 	tst	r2, r3
40027eb8:	1a000013 	bne	40027f0c <check_fs+0xe8>
40027ebc:	e1d433ba 	ldrh	r3, [r4, #58]	; 0x3a
40027ec0:	e3530000 	cmp	r3, #0
40027ec4:	0a000010 	beq	40027f0c <check_fs+0xe8>
40027ec8:	e5d4303c 	ldrb	r3, [r4, #60]	; 0x3c
40027ecc:	e2433001 	sub	r3, r3, #1
40027ed0:	e3530001 	cmp	r3, #1
40027ed4:	8a00000c 	bhi	40027f0c <check_fs+0xe8>
40027ed8:	e1d433bd 	ldrh	r3, [r4, #61]	; 0x3d
40027edc:	e3530000 	cmp	r3, #0
40027ee0:	0a000009 	beq	40027f0c <check_fs+0xe8>
40027ee4:	e1d433bf 	ldrh	r3, [r4, #63]	; 0x3f
40027ee8:	e353007f 	cmp	r3, #127	; 0x7f
40027eec:	8a000003 	bhi	40027f00 <check_fs+0xdc>
40027ef0:	e284004c 	add	r0, r4, #76	; 0x4c
40027ef4:	ebffff7a 	bl	40027ce4 <ld_dword>
40027ef8:	e3500801 	cmp	r0, #65536	; 0x10000
40027efc:	3a000002 	bcc	40027f0c <check_fs+0xe8>
40027f00:	e1d434b2 	ldrh	r3, [r4, #66]	; 0x42
40027f04:	e3530000 	cmp	r3, #0
40027f08:	1a000006 	bne	40027f28 <check_fs+0x104>
40027f0c:	e30a0a55 	movw	r0, #43605	; 0xaa55
40027f10:	e1550000 	cmp	r5, r0
40027f14:	03a00002 	moveq	r0, #2
40027f18:	13a00003 	movne	r0, #3
40027f1c:	e8bd8070 	pop	{r4, r5, r6, pc}
40027f20:	e3a00004 	mov	r0, #4
40027f24:	e8bd8070 	pop	{r4, r5, r6, pc}
40027f28:	e3a00000 	mov	r0, #0
40027f2c:	e8bd8070 	pop	{r4, r5, r6, pc}
40027f30:	40033035 	andmi	r3, r3, r5, lsr r0

40027f34 <mount_volume.constprop.0>:
40027f34:	e92d41ff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
40027f38:	e3a03000 	mov	r3, #0
40027f3c:	e5813000 	str	r3, [r1]
40027f40:	e1a05001 	mov	r5, r1
40027f44:	ebffff71 	bl	40027d10 <get_ldnumber>
40027f48:	e2506000 	subs	r6, r0, #0
40027f4c:	b3a0500b 	movlt	r5, #11
40027f50:	ba000015 	blt	40027fac <mount_volume.constprop.0+0x78>
40027f54:	e59f3278 	ldr	r3, [pc, #632]	; 400281d4 <mount_volume.constprop.0+0x2a0>
40027f58:	e7934106 	ldr	r4, [r3, r6, lsl #2]
40027f5c:	e3540000 	cmp	r4, #0
40027f60:	03a0500c 	moveq	r5, #12
40027f64:	0a000010 	beq	40027fac <mount_volume.constprop.0+0x78>
40027f68:	e5854000 	str	r4, [r5]
40027f6c:	e5d43000 	ldrb	r3, [r4]
40027f70:	e3530000 	cmp	r3, #0
40027f74:	1a000008 	bne	40027f9c <mount_volume.constprop.0+0x68>
40027f78:	e3a03000 	mov	r3, #0
40027f7c:	e6ef0076 	uxtb	r0, r6
40027f80:	e5c43000 	strb	r3, [r4]
40027f84:	e5c40001 	strb	r0, [r4, #1]
40027f88:	ebff6271 	bl	40000954 <disk_initialize>
40027f8c:	e2105001 	ands	r5, r0, #1
40027f90:	0a000008 	beq	40027fb8 <mount_volume.constprop.0+0x84>
40027f94:	e3a05003 	mov	r5, #3
40027f98:	ea000003 	b	40027fac <mount_volume.constprop.0+0x78>
40027f9c:	e5d40001 	ldrb	r0, [r4, #1]
40027fa0:	eb0004a5 	bl	4002923c <disk_status>
40027fa4:	e2105001 	ands	r5, r0, #1
40027fa8:	1afffff2 	bne	40027f78 <mount_volume.constprop.0+0x44>
40027fac:	e1a00005 	mov	r0, r5
40027fb0:	e28dd010 	add	sp, sp, #16
40027fb4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40027fb8:	e1a01005 	mov	r1, r5
40027fbc:	e1a00004 	mov	r0, r4
40027fc0:	ebffff97 	bl	40027e24 <check_fs>
40027fc4:	e3500002 	cmp	r0, #2
40027fc8:	1a00006b 	bne	4002817c <mount_volume.constprop.0+0x248>
40027fcc:	e2843e1f 	add	r3, r4, #496	; 0x1f0
40027fd0:	e1a0700d 	mov	r7, sp
40027fd4:	e2842e23 	add	r2, r4, #560	; 0x230
40027fd8:	e2833002 	add	r3, r3, #2
40027fdc:	e2822002 	add	r2, r2, #2
40027fe0:	e1a01007 	mov	r1, r7
40027fe4:	e1a00003 	mov	r0, r3
40027fe8:	e2833010 	add	r3, r3, #16
40027fec:	ebffff3c 	bl	40027ce4 <ld_dword>
40027ff0:	e1530002 	cmp	r3, r2
40027ff4:	e4810004 	str	r0, [r1], #4
40027ff8:	1afffff9 	bne	40027fe4 <mount_volume.constprop.0+0xb0>
40027ffc:	e3a06000 	mov	r6, #0
40028000:	e4971004 	ldr	r1, [r7], #4
40028004:	e3510000 	cmp	r1, #0
40028008:	03a00003 	moveq	r0, #3
4002800c:	0a000053 	beq	40028160 <mount_volume.constprop.0+0x22c>
40028010:	e1a00004 	mov	r0, r4
40028014:	ebffff82 	bl	40027e24 <check_fs>
40028018:	e3500001 	cmp	r0, #1
4002801c:	8a00004f 	bhi	40028160 <mount_volume.constprop.0+0x22c>
40028020:	e1d433b7 	ldrh	r3, [r4, #55]	; 0x37
40028024:	e3530c02 	cmp	r3, #512	; 0x200
40028028:	1a000057 	bne	4002818c <mount_volume.constprop.0+0x258>
4002802c:	e1d414b2 	ldrh	r1, [r4, #66]	; 0x42
40028030:	e3510000 	cmp	r1, #0
40028034:	1a000002 	bne	40028044 <mount_volume.constprop.0+0x110>
40028038:	e2840050 	add	r0, r4, #80	; 0x50
4002803c:	ebffff28 	bl	40027ce4 <ld_dword>
40028040:	e1a01000 	mov	r1, r0
40028044:	e5d4803c 	ldrb	r8, [r4, #60]	; 0x3c
40028048:	e5947028 	ldr	r7, [r4, #40]	; 0x28
4002804c:	e5841014 	str	r1, [r4, #20]
40028050:	e2483001 	sub	r3, r8, #1
40028054:	e5c48002 	strb	r8, [r4, #2]
40028058:	e3530001 	cmp	r3, #1
4002805c:	8a00004a 	bhi	4002818c <mount_volume.constprop.0+0x258>
40028060:	e5d46039 	ldrb	r6, [r4, #57]	; 0x39
40028064:	e1c460ba 	strh	r6, [r4, #10]
40028068:	e3560000 	cmp	r6, #0
4002806c:	0a000046 	beq	4002818c <mount_volume.constprop.0+0x258>
40028070:	e2463001 	sub	r3, r6, #1
40028074:	e1130006 	tst	r3, r6
40028078:	1a000043 	bne	4002818c <mount_volume.constprop.0+0x258>
4002807c:	e1d423bd 	ldrh	r2, [r4, #61]	; 0x3d
40028080:	e1c420b8 	strh	r2, [r4, #8]
40028084:	e312000f 	tst	r2, #15
40028088:	1a00003f 	bne	4002818c <mount_volume.constprop.0+0x258>
4002808c:	e1d403bf 	ldrh	r0, [r4, #63]	; 0x3f
40028090:	e3500000 	cmp	r0, #0
40028094:	1a000001 	bne	400280a0 <mount_volume.constprop.0+0x16c>
40028098:	e284004c 	add	r0, r4, #76	; 0x4c
4002809c:	ebffff10 	bl	40027ce4 <ld_dword>
400280a0:	e1d4c3ba 	ldrh	ip, [r4, #58]	; 0x3a
400280a4:	e35c0000 	cmp	ip, #0
400280a8:	0a000037 	beq	4002818c <mount_volume.constprop.0+0x258>
400280ac:	e0080891 	mul	r8, r1, r8
400280b0:	e08ce222 	add	lr, ip, r2, lsr #4
400280b4:	e08ee008 	add	lr, lr, r8
400280b8:	e15e0000 	cmp	lr, r0
400280bc:	8a000032 	bhi	4002818c <mount_volume.constprop.0+0x258>
400280c0:	e040000e 	sub	r0, r0, lr
400280c4:	e1500006 	cmp	r0, r6
400280c8:	e733f610 	udiv	r3, r0, r6
400280cc:	3a00002e 	bcc	4002818c <mount_volume.constprop.0+0x258>
400280d0:	e37302bf 	cmn	r3, #-268435445	; 0xf000000b
400280d4:	8a00002c 	bhi	4002818c <mount_volume.constprop.0+0x258>
400280d8:	e30f0ff5 	movw	r0, #65525	; 0xfff5
400280dc:	e1530000 	cmp	r3, r0
400280e0:	9a000036 	bls	400281c0 <mount_volume.constprop.0+0x28c>
400280e4:	e3a06003 	mov	r6, #3
400280e8:	e087c00c 	add	ip, r7, ip
400280ec:	e3560003 	cmp	r6, #3
400280f0:	e087e00e 	add	lr, r7, lr
400280f4:	e2833002 	add	r3, r3, #2
400280f8:	e5843010 	str	r3, [r4, #16]
400280fc:	e5847018 	str	r7, [r4, #24]
40028100:	e584c01c 	str	ip, [r4, #28]
40028104:	e584e024 	str	lr, [r4, #36]	; 0x24
40028108:	1a000021 	bne	40028194 <mount_volume.constprop.0+0x260>
4002810c:	e1d405b6 	ldrh	r0, [r4, #86]	; 0x56
40028110:	e1902002 	orrs	r2, r0, r2
40028114:	1a00001c 	bne	4002818c <mount_volume.constprop.0+0x258>
40028118:	e1a03103 	lsl	r3, r3, #2
4002811c:	e2840058 	add	r0, r4, #88	; 0x58
40028120:	ebfffeef 	bl	40027ce4 <ld_dword>
40028124:	e5840020 	str	r0, [r4, #32]
40028128:	e2833f7f 	add	r3, r3, #508	; 0x1fc
4002812c:	e2833003 	add	r3, r3, #3
40028130:	e15104a3 	cmp	r1, r3, lsr #9
40028134:	3a000014 	bcc	4002818c <mount_volume.constprop.0+0x258>
40028138:	e59f2098 	ldr	r2, [pc, #152]	; 400281d8 <mount_volume.constprop.0+0x2a4>
4002813c:	e5c46000 	strb	r6, [r4]
40028140:	e1d230b0 	ldrh	r3, [r2]
40028144:	e2833001 	add	r3, r3, #1
40028148:	e6ff3073 	uxth	r3, r3
4002814c:	e1c230b0 	strh	r3, [r2]
40028150:	e1c430b6 	strh	r3, [r4, #6]
40028154:	e59f3080 	ldr	r3, [pc, #128]	; 400281dc <mount_volume.constprop.0+0x2a8>
40028158:	e584300c 	str	r3, [r4, #12]
4002815c:	eaffff92 	b	40027fac <mount_volume.constprop.0+0x78>
40028160:	e2866001 	add	r6, r6, #1
40028164:	e3560004 	cmp	r6, #4
40028168:	1affffa4 	bne	40028000 <mount_volume.constprop.0+0xcc>
4002816c:	e3500004 	cmp	r0, #4
40028170:	1a000005 	bne	4002818c <mount_volume.constprop.0+0x258>
40028174:	e3a05001 	mov	r5, #1
40028178:	eaffff8b 	b	40027fac <mount_volume.constprop.0+0x78>
4002817c:	e3500004 	cmp	r0, #4
40028180:	0afffffb 	beq	40028174 <mount_volume.constprop.0+0x240>
40028184:	e3500001 	cmp	r0, #1
40028188:	9affffa4 	bls	40028020 <mount_volume.constprop.0+0xec>
4002818c:	e3a0500d 	mov	r5, #13
40028190:	eaffff85 	b	40027fac <mount_volume.constprop.0+0x78>
40028194:	e3520000 	cmp	r2, #0
40028198:	0afffffb 	beq	4002818c <mount_volume.constprop.0+0x258>
4002819c:	e088c00c 	add	ip, r8, ip
400281a0:	e3560002 	cmp	r6, #2
400281a4:	e1a02083 	lsl	r2, r3, #1
400281a8:	10822003 	addne	r2, r2, r3
400281ac:	12033001 	andne	r3, r3, #1
400281b0:	e584c020 	str	ip, [r4, #32]
400281b4:	01a03002 	moveq	r3, r2
400281b8:	108330a2 	addne	r3, r3, r2, lsr #1
400281bc:	eaffffd9 	b	40028128 <mount_volume.constprop.0+0x1f4>
400281c0:	e3006ff5 	movw	r6, #4085	; 0xff5
400281c4:	e1530006 	cmp	r3, r6
400281c8:	83a06002 	movhi	r6, #2
400281cc:	93a06001 	movls	r6, #1
400281d0:	eaffffc4 	b	400280e8 <mount_volume.constprop.0+0x1b4>
400281d4:	400636c0 	andmi	r3, r6, r0, asr #13
400281d8:	400636c4 	andmi	r3, r6, r4, asr #13
400281dc:	400636c6 	andmi	r3, r6, r6, asr #13

400281e0 <ld_clust.isra.0>:
400281e0:	e1d131ba 	ldrh	r3, [r1, #26]
400281e4:	e3500003 	cmp	r0, #3
400281e8:	01d121b4 	ldrheq	r2, [r1, #20]
400281ec:	01833802 	orreq	r3, r3, r2, lsl #16
400281f0:	e1a00003 	mov	r0, r3
400281f4:	e12fff1e 	bx	lr

400281f8 <get_fat.isra.0>:
400281f8:	e3510001 	cmp	r1, #1
400281fc:	9a00003c 	bls	400282f4 <get_fat.isra.0+0xfc>
40028200:	e5903010 	ldr	r3, [r0, #16]
40028204:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40028208:	e1a06000 	mov	r6, r0
4002820c:	e1510003 	cmp	r1, r3
40028210:	e1a05001 	mov	r5, r1
40028214:	2a000038 	bcs	400282fc <get_fat.isra.0+0x104>
40028218:	e5d03000 	ldrb	r3, [r0]
4002821c:	e3530002 	cmp	r3, #2
40028220:	0a00001d 	beq	4002829c <get_fat.isra.0+0xa4>
40028224:	e3530003 	cmp	r3, #3
40028228:	0a000025 	beq	400282c4 <get_fat.isra.0+0xcc>
4002822c:	e3530001 	cmp	r3, #1
40028230:	1a000031 	bne	400282fc <get_fat.isra.0+0x104>
40028234:	e08140a1 	add	r4, r1, r1, lsr #1
40028238:	e590101c 	ldr	r1, [r0, #28]
4002823c:	e08114a4 	add	r1, r1, r4, lsr #9
40028240:	ebfffee3 	bl	40027dd4 <move_window>
40028244:	e3500000 	cmp	r0, #0
40028248:	0a000001 	beq	40028254 <get_fat.isra.0+0x5c>
4002824c:	e3e00000 	mvn	r0, #0
40028250:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40028254:	e596101c 	ldr	r1, [r6, #28]
40028258:	e2847001 	add	r7, r4, #1
4002825c:	e7e84054 	ubfx	r4, r4, #0, #9
40028260:	e1a00006 	mov	r0, r6
40028264:	e0864004 	add	r4, r6, r4
40028268:	e08114a7 	add	r1, r1, r7, lsr #9
4002826c:	e5d4402c 	ldrb	r4, [r4, #44]	; 0x2c
40028270:	ebfffed7 	bl	40027dd4 <move_window>
40028274:	e3500000 	cmp	r0, #0
40028278:	1afffff3 	bne	4002824c <get_fat.isra.0+0x54>
4002827c:	e7e87057 	ubfx	r7, r7, #0, #9
40028280:	e3150001 	tst	r5, #1
40028284:	e0866007 	add	r6, r6, r7
40028288:	e5d6002c 	ldrb	r0, [r6, #44]	; 0x2c
4002828c:	e1840400 	orr	r0, r4, r0, lsl #8
40028290:	11a00220 	lsrne	r0, r0, #4
40028294:	07eb0050 	ubfxeq	r0, r0, #0, #12
40028298:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4002829c:	e590101c 	ldr	r1, [r0, #28]
400282a0:	e0811425 	add	r1, r1, r5, lsr #8
400282a4:	ebfffeca 	bl	40027dd4 <move_window>
400282a8:	e3500000 	cmp	r0, #0
400282ac:	1affffe6 	bne	4002824c <get_fat.isra.0+0x54>
400282b0:	e30011fe 	movw	r1, #510	; 0x1fe
400282b4:	e0015085 	and	r5, r1, r5, lsl #1
400282b8:	e0866005 	add	r6, r6, r5
400282bc:	e1d602bc 	ldrh	r0, [r6, #44]	; 0x2c
400282c0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400282c4:	e590101c 	ldr	r1, [r0, #28]
400282c8:	e08113a5 	add	r1, r1, r5, lsr #7
400282cc:	ebfffec0 	bl	40027dd4 <move_window>
400282d0:	e3500000 	cmp	r0, #0
400282d4:	1affffdc 	bne	4002824c <get_fat.isra.0+0x54>
400282d8:	e1a05105 	lsl	r5, r5, #2
400282dc:	e286002c 	add	r0, r6, #44	; 0x2c
400282e0:	e2055f7f 	and	r5, r5, #508	; 0x1fc
400282e4:	e0800005 	add	r0, r0, r5
400282e8:	ebfffe7d 	bl	40027ce4 <ld_dword>
400282ec:	e3c0020f 	bic	r0, r0, #-268435456	; 0xf0000000
400282f0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400282f4:	e3a00001 	mov	r0, #1
400282f8:	e12fff1e 	bx	lr
400282fc:	e3a00001 	mov	r0, #1
40028300:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

40028304 <dir_sdi.constprop.0>:
40028304:	e5902008 	ldr	r2, [r0, #8]
40028308:	e3a03000 	mov	r3, #0
4002830c:	e92d4070 	push	{r4, r5, r6, lr}
40028310:	e1a04000 	mov	r4, r0
40028314:	e1520003 	cmp	r2, r3
40028318:	e5905000 	ldr	r5, [r0]
4002831c:	e5803010 	str	r3, [r0, #16]
40028320:	1a00000d 	bne	4002835c <dir_sdi.constprop.0+0x58>
40028324:	e5d53000 	ldrb	r3, [r5]
40028328:	e3530002 	cmp	r3, #2
4002832c:	9a000002 	bls	4002833c <dir_sdi.constprop.0+0x38>
40028330:	e5953020 	ldr	r3, [r5, #32]
40028334:	e3530000 	cmp	r3, #0
40028338:	1a000006 	bne	40028358 <dir_sdi.constprop.0+0x54>
4002833c:	e1d530b8 	ldrh	r3, [r5, #8]
40028340:	e3530000 	cmp	r3, #0
40028344:	15953020 	ldrne	r3, [r5, #32]
40028348:	15843018 	strne	r3, [r4, #24]
4002834c:	1a000015 	bne	400283a8 <dir_sdi.constprop.0+0xa4>
40028350:	e3a00002 	mov	r0, #2
40028354:	e8bd8070 	pop	{r4, r5, r6, pc}
40028358:	e1a02003 	mov	r2, r3
4002835c:	e1d530ba 	ldrh	r3, [r5, #10]
40028360:	e3530000 	cmp	r3, #0
40028364:	1a00000b 	bne	40028398 <dir_sdi.constprop.0+0x94>
40028368:	e5940000 	ldr	r0, [r4]
4002836c:	e1a01002 	mov	r1, r2
40028370:	ebffffa0 	bl	400281f8 <get_fat.isra.0>
40028374:	e3700001 	cmn	r0, #1
40028378:	e1a02000 	mov	r2, r0
4002837c:	0a000011 	beq	400283c8 <dir_sdi.constprop.0+0xc4>
40028380:	e3500001 	cmp	r0, #1
40028384:	9afffff1 	bls	40028350 <dir_sdi.constprop.0+0x4c>
40028388:	e5953010 	ldr	r3, [r5, #16]
4002838c:	e1500003 	cmp	r0, r3
40028390:	3afffff4 	bcc	40028368 <dir_sdi.constprop.0+0x64>
40028394:	eaffffed 	b	40028350 <dir_sdi.constprop.0+0x4c>
40028398:	e1a01002 	mov	r1, r2
4002839c:	e1a00005 	mov	r0, r5
400283a0:	ebfffe51 	bl	40027cec <clst2sect>
400283a4:	e5840018 	str	r0, [r4, #24]
400283a8:	e5943018 	ldr	r3, [r4, #24]
400283ac:	e5842014 	str	r2, [r4, #20]
400283b0:	e3530000 	cmp	r3, #0
400283b4:	0affffe5 	beq	40028350 <dir_sdi.constprop.0+0x4c>
400283b8:	e285502c 	add	r5, r5, #44	; 0x2c
400283bc:	e3a00000 	mov	r0, #0
400283c0:	e584501c 	str	r5, [r4, #28]
400283c4:	e8bd8070 	pop	{r4, r5, r6, pc}
400283c8:	e3a00001 	mov	r0, #1
400283cc:	e8bd8070 	pop	{r4, r5, r6, pc}

400283d0 <dir_next.constprop.0>:
400283d0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400283d4:	e1a04000 	mov	r4, r0
400283d8:	e5906010 	ldr	r6, [r0, #16]
400283dc:	e5905000 	ldr	r5, [r0]
400283e0:	e2866020 	add	r6, r6, #32
400283e4:	e3560602 	cmp	r6, #2097152	; 0x200000
400283e8:	23a03000 	movcs	r3, #0
400283ec:	25803018 	strcs	r3, [r0, #24]
400283f0:	e5903018 	ldr	r3, [r0, #24]
400283f4:	e3530000 	cmp	r3, #0
400283f8:	0a00000c 	beq	40028430 <dir_next.constprop.0+0x60>
400283fc:	e7e87056 	ubfx	r7, r6, #0, #9
40028400:	e3570000 	cmp	r7, #0
40028404:	1a00001d 	bne	40028480 <dir_next.constprop.0+0xb0>
40028408:	e5901014 	ldr	r1, [r0, #20]
4002840c:	e2833001 	add	r3, r3, #1
40028410:	e5803018 	str	r3, [r0, #24]
40028414:	e3510000 	cmp	r1, #0
40028418:	1a000006 	bne	40028438 <dir_next.constprop.0+0x68>
4002841c:	e1d530b8 	ldrh	r3, [r5, #8]
40028420:	e15302a6 	cmp	r3, r6, lsr #5
40028424:	8a000015 	bhi	40028480 <dir_next.constprop.0+0xb0>
40028428:	e3a03000 	mov	r3, #0
4002842c:	e5843018 	str	r3, [r4, #24]
40028430:	e3a00004 	mov	r0, #4
40028434:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40028438:	e1d530ba 	ldrh	r3, [r5, #10]
4002843c:	e2433001 	sub	r3, r3, #1
40028440:	e01334a6 	ands	r3, r3, r6, lsr #9
40028444:	1a00000d 	bne	40028480 <dir_next.constprop.0+0xb0>
40028448:	e1a00005 	mov	r0, r5
4002844c:	ebffff69 	bl	400281f8 <get_fat.isra.0>
40028450:	e3500001 	cmp	r0, #1
40028454:	e1a01000 	mov	r1, r0
40028458:	9a00000e 	bls	40028498 <dir_next.constprop.0+0xc8>
4002845c:	e3700001 	cmn	r0, #1
40028460:	0a00000e 	beq	400284a0 <dir_next.constprop.0+0xd0>
40028464:	e5953010 	ldr	r3, [r5, #16]
40028468:	e1500003 	cmp	r0, r3
4002846c:	2affffed 	bcs	40028428 <dir_next.constprop.0+0x58>
40028470:	e5840014 	str	r0, [r4, #20]
40028474:	e1a00005 	mov	r0, r5
40028478:	ebfffe1b 	bl	40027cec <clst2sect>
4002847c:	e5840018 	str	r0, [r4, #24]
40028480:	e5846010 	str	r6, [r4, #16]
40028484:	e285502c 	add	r5, r5, #44	; 0x2c
40028488:	e0855007 	add	r5, r5, r7
4002848c:	e3a00000 	mov	r0, #0
40028490:	e584501c 	str	r5, [r4, #28]
40028494:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40028498:	e3a00002 	mov	r0, #2
4002849c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400284a0:	e3a00001 	mov	r0, #1
400284a4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

400284a8 <follow_path>:
400284a8:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
400284ac:	e1a04000 	mov	r4, r0
400284b0:	e5903000 	ldr	r3, [r0]
400284b4:	e24dd024 	sub	sp, sp, #36	; 0x24
400284b8:	e58d3008 	str	r3, [sp, #8]
400284bc:	e58d1004 	str	r1, [sp, #4]
400284c0:	e4d13001 	ldrb	r3, [r1], #1
400284c4:	e353005c 	cmp	r3, #92	; 0x5c
400284c8:	1353002f 	cmpne	r3, #47	; 0x2f
400284cc:	03a03001 	moveq	r3, #1
400284d0:	13a03000 	movne	r3, #0
400284d4:	0afffff8 	beq	400284bc <follow_path+0x14>
400284d8:	e5843008 	str	r3, [r4, #8]
400284dc:	e59d3004 	ldr	r3, [sp, #4]
400284e0:	e5d33000 	ldrb	r3, [r3]
400284e4:	e353001f 	cmp	r3, #31
400284e8:	8a000113 	bhi	4002893c <follow_path+0x494>
400284ec:	e3e0307f 	mvn	r3, #127	; 0x7f
400284f0:	e1a00004 	mov	r0, r4
400284f4:	e5c4302b 	strb	r3, [r4, #43]	; 0x2b
400284f8:	e28dd024 	add	sp, sp, #36	; 0x24
400284fc:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
40028500:	eaffff7f 	b	40028304 <dir_sdi.constprop.0>
40028504:	e358007f 	cmp	r8, #127	; 0x7f
40028508:	8a000004 	bhi	40028520 <follow_path+0x78>
4002850c:	e59f0584 	ldr	r0, [pc, #1412]	; 40028a98 <follow_path+0x5f0>
40028510:	e1a01008 	mov	r1, r8
40028514:	eb0011f1 	bl	4002cce0 <strchr>
40028518:	e3500000 	cmp	r0, #0
4002851c:	1a000159 	bne	40028a88 <follow_path+0x5e0>
40028520:	e35700ff 	cmp	r7, #255	; 0xff
40028524:	0a000157 	beq	40028a88 <follow_path+0x5e0>
40028528:	e1e580b2 	strh	r8, [r5, #2]!
4002852c:	e2877001 	add	r7, r7, #1
40028530:	ea000106 	b	40028950 <follow_path+0x4a8>
40028534:	e3a05004 	mov	r5, #4
40028538:	ea00011c 	b	400289b0 <follow_path+0x508>
4002853c:	e17320b2 	ldrh	r2, [r3, #-2]!
40028540:	e3520020 	cmp	r2, #32
40028544:	1352002e 	cmpne	r2, #46	; 0x2e
40028548:	1a00011b 	bne	400289bc <follow_path+0x514>
4002854c:	e2477001 	sub	r7, r7, #1
40028550:	ea000117 	b	400289b4 <follow_path+0x50c>
40028554:	e1570003 	cmp	r7, r3
40028558:	1159000a 	cmpne	r9, sl
4002855c:	3a00003e 	bcc	4002865c <follow_path+0x1b4>
40028560:	e35a000b 	cmp	sl, #11
40028564:	1a000032 	bne	40028634 <follow_path+0x18c>
40028568:	e3855003 	orr	r5, r5, #3
4002856c:	e5d43020 	ldrb	r3, [r4, #32]
40028570:	e35300e5 	cmp	r3, #229	; 0xe5
40028574:	03a03005 	moveq	r3, #5
40028578:	05c43020 	strbeq	r3, [r4, #32]
4002857c:	e35a0008 	cmp	sl, #8
40028580:	01a08108 	lsleq	r8, r8, #2
40028584:	06ef8078 	uxtbeq	r8, r8
40028588:	e208300c 	and	r3, r8, #12
4002858c:	e353000c 	cmp	r3, #12
40028590:	0a000002 	beq	400285a0 <follow_path+0xf8>
40028594:	e2083003 	and	r3, r8, #3
40028598:	e3530003 	cmp	r3, #3
4002859c:	1a000000 	bne	400285a4 <follow_path+0xfc>
400285a0:	e3855002 	orr	r5, r5, #2
400285a4:	e3150002 	tst	r5, #2
400285a8:	1a000003 	bne	400285bc <follow_path+0x114>
400285ac:	e3180001 	tst	r8, #1
400285b0:	13855010 	orrne	r5, r5, #16
400285b4:	e3180004 	tst	r8, #4
400285b8:	13855008 	orrne	r5, r5, #8
400285bc:	e5c4502b 	strb	r5, [r4, #43]	; 0x2b
400285c0:	e1a00004 	mov	r0, r4
400285c4:	e594b000 	ldr	fp, [r4]
400285c8:	ebffff4d 	bl	40028304 <dir_sdi.constprop.0>
400285cc:	e2506000 	subs	r6, r0, #0
400285d0:	1a0000bd 	bne	400288cc <follow_path+0x424>
400285d4:	e3a080ff 	mov	r8, #255	; 0xff
400285d8:	e3e0a000 	mvn	sl, #0
400285dc:	e584a02c 	str	sl, [r4, #44]	; 0x2c
400285e0:	e1a05008 	mov	r5, r8
400285e4:	e5941018 	ldr	r1, [r4, #24]
400285e8:	e1a0000b 	mov	r0, fp
400285ec:	ebfffdf8 	bl	40027dd4 <move_window>
400285f0:	e2506000 	subs	r6, r0, #0
400285f4:	1a0000b4 	bne	400288cc <follow_path+0x424>
400285f8:	e594701c 	ldr	r7, [r4, #28]
400285fc:	e5d73000 	ldrb	r3, [r7]
40028600:	e3530000 	cmp	r3, #0
40028604:	0a0000ba 	beq	400288f4 <follow_path+0x44c>
40028608:	e5d7100b 	ldrb	r1, [r7, #11]
4002860c:	e35300e5 	cmp	r3, #229	; 0xe5
40028610:	e201203f 	and	r2, r1, #63	; 0x3f
40028614:	e5c42006 	strb	r2, [r4, #6]
40028618:	0a000003 	beq	4002862c <follow_path+0x184>
4002861c:	e3110008 	tst	r1, #8
40028620:	0a000046 	beq	40028740 <follow_path+0x298>
40028624:	e352000f 	cmp	r2, #15
40028628:	0a000046 	beq	40028748 <follow_path+0x2a0>
4002862c:	e584a02c 	str	sl, [r4, #44]	; 0x2c
40028630:	ea000089 	b	4002885c <follow_path+0x3b4>
40028634:	e1570003 	cmp	r7, r3
40028638:	0a000001 	beq	40028644 <follow_path+0x19c>
4002863c:	e3855003 	orr	r5, r5, #3
40028640:	3affffc9 	bcc	4002856c <follow_path+0xc4>
40028644:	e1a08108 	lsl	r8, r8, #2
40028648:	e1a03007 	mov	r3, r7
4002864c:	e6ef8078 	uxtb	r8, r8
40028650:	e3a0a00b 	mov	sl, #11
40028654:	e3a09008 	mov	r9, #8
40028658:	ea000108 	b	40028a80 <follow_path+0x5d8>
4002865c:	e356007f 	cmp	r6, #127	; 0x7f
40028660:	9a000010 	bls	400286a8 <follow_path+0x200>
40028664:	e58d3014 	str	r3, [sp, #20]
40028668:	e3852002 	orr	r2, r5, #2
4002866c:	e58d200c 	str	r2, [sp, #12]
40028670:	e1a00006 	mov	r0, r6
40028674:	e3001352 	movw	r1, #850	; 0x352
40028678:	eb00024d 	bl	40028fb4 <ff_uni2oem>
4002867c:	e59d200c 	ldr	r2, [sp, #12]
40028680:	e3100080 	tst	r0, #128	; 0x80
40028684:	e59d3014 	ldr	r3, [sp, #20]
40028688:	e1a06000 	mov	r6, r0
4002868c:	0a000018 	beq	400286f4 <follow_path+0x24c>
40028690:	e59f1404 	ldr	r1, [pc, #1028]	; 40028a9c <follow_path+0x5f4>
40028694:	e200607f 	and	r6, r0, #127	; 0x7f
40028698:	e7d16006 	ldrb	r6, [r1, r6]
4002869c:	e3560000 	cmp	r6, #0
400286a0:	e1a05002 	mov	r5, r2
400286a4:	0a000022 	beq	40028734 <follow_path+0x28c>
400286a8:	e59f03f0 	ldr	r0, [pc, #1008]	; 40028aa0 <follow_path+0x5f8>
400286ac:	e1a01006 	mov	r1, r6
400286b0:	e58d300c 	str	r3, [sp, #12]
400286b4:	eb001189 	bl	4002cce0 <strchr>
400286b8:	e59d300c 	ldr	r3, [sp, #12]
400286bc:	e3500000 	cmp	r0, #0
400286c0:	1a00001b 	bne	40028734 <follow_path+0x28c>
400286c4:	e2462041 	sub	r2, r6, #65	; 0x41
400286c8:	e6ff2072 	uxth	r2, r2
400286cc:	e3520019 	cmp	r2, #25
400286d0:	93888002 	orrls	r8, r8, #2
400286d4:	9a000012 	bls	40028724 <follow_path+0x27c>
400286d8:	e2462061 	sub	r2, r6, #97	; 0x61
400286dc:	e6ff2072 	uxth	r2, r2
400286e0:	e3520019 	cmp	r2, #25
400286e4:	92466020 	subls	r6, r6, #32
400286e8:	93888001 	orrls	r8, r8, #1
400286ec:	96ff6076 	uxthls	r6, r6
400286f0:	ea00000b 	b	40028724 <follow_path+0x27c>
400286f4:	e35000ff 	cmp	r0, #255	; 0xff
400286f8:	9affffe7 	bls	4002869c <follow_path+0x1f4>
400286fc:	e24a1001 	sub	r1, sl, #1
40028700:	e1590001 	cmp	r9, r1
40028704:	23855003 	orrcs	r5, r5, #3
40028708:	21a0900a 	movcs	r9, sl
4002870c:	2a0000db 	bcs	40028a80 <follow_path+0x5d8>
40028710:	e0841009 	add	r1, r4, r9
40028714:	e1a05002 	mov	r5, r2
40028718:	e1a00420 	lsr	r0, r0, #8
4002871c:	e2899001 	add	r9, r9, #1
40028720:	e5c10020 	strb	r0, [r1, #32]
40028724:	e0842009 	add	r2, r4, r9
40028728:	e2899001 	add	r9, r9, #1
4002872c:	e5c26020 	strb	r6, [r2, #32]
40028730:	ea0000d2 	b	40028a80 <follow_path+0x5d8>
40028734:	e3855003 	orr	r5, r5, #3
40028738:	e3a0605f 	mov	r6, #95	; 0x5f
4002873c:	eafffff8 	b	40028724 <follow_path+0x27c>
40028740:	e352000f 	cmp	r2, #15
40028744:	1a00004a 	bne	40028874 <follow_path+0x3cc>
40028748:	e5d4202b 	ldrb	r2, [r4, #43]	; 0x2b
4002874c:	e3120040 	tst	r2, #64	; 0x40
40028750:	1a00003a 	bne	40028840 <follow_path+0x398>
40028754:	e3130040 	tst	r3, #64	; 0x40
40028758:	0a00003d 	beq	40028854 <follow_path+0x3ac>
4002875c:	e5d7800d 	ldrb	r8, [r7, #13]
40028760:	e20350bf 	and	r5, r3, #191	; 0xbf
40028764:	e5943010 	ldr	r3, [r4, #16]
40028768:	e584302c 	str	r3, [r4, #44]	; 0x2c
4002876c:	e5d7300d 	ldrb	r3, [r7, #13]
40028770:	e1530008 	cmp	r3, r8
40028774:	1a000038 	bne	4002885c <follow_path+0x3b4>
40028778:	e1d731ba 	ldrh	r3, [r7, #26]
4002877c:	e3530000 	cmp	r3, #0
40028780:	1a000035 	bne	4002885c <follow_path+0x3b4>
40028784:	e5d76000 	ldrb	r6, [r7]
40028788:	e3a02001 	mov	r2, #1
4002878c:	e59b300c 	ldr	r3, [fp, #12]
40028790:	e59f930c 	ldr	r9, [pc, #780]	; 40028aa4 <follow_path+0x5fc>
40028794:	e206603f 	and	r6, r6, #63	; 0x3f
40028798:	e58d300c 	str	r3, [sp, #12]
4002879c:	e2466001 	sub	r6, r6, #1
400287a0:	e3a0300d 	mov	r3, #13
400287a4:	e0060693 	mul	r6, r3, r6
400287a8:	e4d93001 	ldrb	r3, [r9], #1
400287ac:	e3520000 	cmp	r2, #0
400287b0:	e19730b3 	ldrh	r3, [r7, r3]
400287b4:	0a00002a 	beq	40028864 <follow_path+0x3bc>
400287b8:	e35600ff 	cmp	r6, #255	; 0xff
400287bc:	8a000026 	bhi	4002885c <follow_path+0x3b4>
400287c0:	e58d301c 	str	r3, [sp, #28]
400287c4:	e1a00003 	mov	r0, r3
400287c8:	eb000224 	bl	40029060 <ff_wtoupper>
400287cc:	e59d300c 	ldr	r3, [sp, #12]
400287d0:	e2861001 	add	r1, r6, #1
400287d4:	e1a06086 	lsl	r6, r6, #1
400287d8:	e58d0018 	str	r0, [sp, #24]
400287dc:	e19300b6 	ldrh	r0, [r3, r6]
400287e0:	e58d1014 	str	r1, [sp, #20]
400287e4:	eb00021d 	bl	40029060 <ff_wtoupper>
400287e8:	e59d2018 	ldr	r2, [sp, #24]
400287ec:	e1520000 	cmp	r2, r0
400287f0:	1a000019 	bne	4002885c <follow_path+0x3b4>
400287f4:	e59d301c 	ldr	r3, [sp, #28]
400287f8:	e59d1014 	ldr	r1, [sp, #20]
400287fc:	e1a02003 	mov	r2, r3
40028800:	e1a06001 	mov	r6, r1
40028804:	e59f329c 	ldr	r3, [pc, #668]	; 40028aa8 <follow_path+0x600>
40028808:	e1590003 	cmp	r9, r3
4002880c:	1affffe5 	bne	400287a8 <follow_path+0x300>
40028810:	e2522000 	subs	r2, r2, #0
40028814:	e5d73000 	ldrb	r3, [r7]
40028818:	13a02001 	movne	r2, #1
4002881c:	e0123323 	ands	r3, r2, r3, lsr #6
40028820:	0a000004 	beq	40028838 <follow_path+0x390>
40028824:	e1a06086 	lsl	r6, r6, #1
40028828:	e59d300c 	ldr	r3, [sp, #12]
4002882c:	e19330b6 	ldrh	r3, [r3, r6]
40028830:	e3530000 	cmp	r3, #0
40028834:	1a000008 	bne	4002885c <follow_path+0x3b4>
40028838:	e2455001 	sub	r5, r5, #1
4002883c:	e6ef5075 	uxtb	r5, r5
40028840:	e1a00004 	mov	r0, r4
40028844:	ebfffee1 	bl	400283d0 <dir_next.constprop.0>
40028848:	e2506000 	subs	r6, r0, #0
4002884c:	0affff64 	beq	400285e4 <follow_path+0x13c>
40028850:	ea00001d 	b	400288cc <follow_path+0x424>
40028854:	e1530005 	cmp	r3, r5
40028858:	0affffc3 	beq	4002876c <follow_path+0x2c4>
4002885c:	e3a050ff 	mov	r5, #255	; 0xff
40028860:	eafffff6 	b	40028840 <follow_path+0x398>
40028864:	e30f1fff 	movw	r1, #65535	; 0xffff
40028868:	e1530001 	cmp	r3, r1
4002886c:	0affffe4 	beq	40028804 <follow_path+0x35c>
40028870:	eafffff9 	b	4002885c <follow_path+0x3b4>
40028874:	e3550000 	cmp	r5, #0
40028878:	1a00000a 	bne	400288a8 <follow_path+0x400>
4002887c:	e287200b 	add	r2, r7, #11
40028880:	e1a01007 	mov	r1, r7
40028884:	e1a03385 	lsl	r3, r5, #7
40028888:	e18350a5 	orr	r5, r3, r5, lsr #1
4002888c:	e4d13001 	ldrb	r3, [r1], #1
40028890:	e1520001 	cmp	r2, r1
40028894:	e6e35075 	uxtab	r5, r3, r5
40028898:	e6ef5075 	uxtb	r5, r5
4002889c:	1afffff8 	bne	40028884 <follow_path+0x3dc>
400288a0:	e1580005 	cmp	r8, r5
400288a4:	0a000014 	beq	400288fc <follow_path+0x454>
400288a8:	e5d4602b 	ldrb	r6, [r4, #43]	; 0x2b
400288ac:	e2166001 	ands	r6, r6, #1
400288b0:	1affff5d 	bne	4002862c <follow_path+0x184>
400288b4:	e59d1010 	ldr	r1, [sp, #16]
400288b8:	e3a0200b 	mov	r2, #11
400288bc:	e1a00007 	mov	r0, r7
400288c0:	ebff89c9 	bl	4000afec <memcmp>
400288c4:	e3500000 	cmp	r0, #0
400288c8:	1affff57 	bne	4002862c <follow_path+0x184>
400288cc:	e5d4302b 	ldrb	r3, [r4, #43]	; 0x2b
400288d0:	e3560000 	cmp	r6, #0
400288d4:	0a00000a 	beq	40028904 <follow_path+0x45c>
400288d8:	e3560004 	cmp	r6, #4
400288dc:	1a000001 	bne	400288e8 <follow_path+0x440>
400288e0:	e3130004 	tst	r3, #4
400288e4:	03a06005 	moveq	r6, #5
400288e8:	e1a00006 	mov	r0, r6
400288ec:	e28dd024 	add	sp, sp, #36	; 0x24
400288f0:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
400288f4:	e3a06004 	mov	r6, #4
400288f8:	eafffff3 	b	400288cc <follow_path+0x424>
400288fc:	e3a06000 	mov	r6, #0
40028900:	eafffff1 	b	400288cc <follow_path+0x424>
40028904:	e3130004 	tst	r3, #4
40028908:	1afffff6 	bne	400288e8 <follow_path+0x440>
4002890c:	e5d43006 	ldrb	r3, [r4, #6]
40028910:	e3130010 	tst	r3, #16
40028914:	0a00005d 	beq	40028a90 <follow_path+0x5e8>
40028918:	e59d3008 	ldr	r3, [sp, #8]
4002891c:	e283102c 	add	r1, r3, #44	; 0x2c
40028920:	e5943010 	ldr	r3, [r4, #16]
40028924:	e7e83053 	ubfx	r3, r3, #0, #9
40028928:	e0811003 	add	r1, r1, r3
4002892c:	e59d3008 	ldr	r3, [sp, #8]
40028930:	e5d30000 	ldrb	r0, [r3]
40028934:	ebfffe29 	bl	400281e0 <ld_clust.isra.0>
40028938:	e5840008 	str	r0, [r4, #8]
4002893c:	e5943000 	ldr	r3, [r4]
40028940:	e3a07000 	mov	r7, #0
40028944:	e593b00c 	ldr	fp, [r3, #12]
40028948:	e24b6002 	sub	r6, fp, #2
4002894c:	e1a05006 	mov	r5, r6
40028950:	e59d3004 	ldr	r3, [sp, #4]
40028954:	e4d30001 	ldrb	r0, [r3], #1
40028958:	e58d3004 	str	r3, [sp, #4]
4002895c:	e3500000 	cmp	r0, #0
40028960:	0afffef3 	beq	40028534 <follow_path+0x8c>
40028964:	e3001352 	movw	r1, #850	; 0x352
40028968:	eb0001ad 	bl	40029024 <ff_oem2uni>
4002896c:	e2508000 	subs	r8, r0, #0
40028970:	0a000044 	beq	40028a88 <follow_path+0x5e0>
40028974:	e358001f 	cmp	r8, #31
40028978:	9afffeed 	bls	40028534 <follow_path+0x8c>
4002897c:	e358005c 	cmp	r8, #92	; 0x5c
40028980:	1358002f 	cmpne	r8, #47	; 0x2f
40028984:	1afffede 	bne	40028504 <follow_path+0x5c>
40028988:	e59d2004 	ldr	r2, [sp, #4]
4002898c:	e5d23000 	ldrb	r3, [r2]
40028990:	e58d2004 	str	r2, [sp, #4]
40028994:	e2822001 	add	r2, r2, #1
40028998:	e353005c 	cmp	r3, #92	; 0x5c
4002899c:	1353002f 	cmpne	r3, #47	; 0x2f
400289a0:	0afffff9 	beq	4002898c <follow_path+0x4e4>
400289a4:	e353001f 	cmp	r3, #31
400289a8:	83a05000 	movhi	r5, #0
400289ac:	93a05004 	movls	r5, #4
400289b0:	e08b3087 	add	r3, fp, r7, lsl #1
400289b4:	e3570000 	cmp	r7, #0
400289b8:	1afffedf 	bne	4002853c <follow_path+0x94>
400289bc:	e1a03087 	lsl	r3, r7, #1
400289c0:	e3a00000 	mov	r0, #0
400289c4:	e1570000 	cmp	r7, r0
400289c8:	e08b1087 	add	r1, fp, r7, lsl #1
400289cc:	e18b00b3 	strh	r0, [fp, r3]
400289d0:	0a00002c 	beq	40028a88 <follow_path+0x5e0>
400289d4:	e1f630b2 	ldrh	r3, [r6, #2]!
400289d8:	e1a02000 	mov	r2, r0
400289dc:	e2800001 	add	r0, r0, #1
400289e0:	e3530020 	cmp	r3, #32
400289e4:	0afffffa 	beq	400289d4 <follow_path+0x52c>
400289e8:	e243302e 	sub	r3, r3, #46	; 0x2e
400289ec:	e16f3f13 	clz	r3, r3
400289f0:	e1a032a3 	lsr	r3, r3, #5
400289f4:	e3520000 	cmp	r2, #0
400289f8:	13833001 	orrne	r3, r3, #1
400289fc:	e3530000 	cmp	r3, #0
40028a00:	e1a03001 	mov	r3, r1
40028a04:	13855003 	orrne	r5, r5, #3
40028a08:	e15310b2 	ldrh	r1, [r3, #-2]
40028a0c:	e351002e 	cmp	r1, #46	; 0x2e
40028a10:	0a000002 	beq	40028a20 <follow_path+0x578>
40028a14:	e2577001 	subs	r7, r7, #1
40028a18:	e2433002 	sub	r3, r3, #2
40028a1c:	1afffff9 	bne	40028a08 <follow_path+0x560>
40028a20:	f2c20e10 	vmov.i8	d16, #32	; 0x20
40028a24:	e2843020 	add	r3, r4, #32
40028a28:	e3a09000 	mov	r9, #0
40028a2c:	e58d3010 	str	r3, [sp, #16]
40028a30:	e3a0a008 	mov	sl, #8
40028a34:	f443070f 	vst1.8	{d16}, [r3]
40028a38:	e2843023 	add	r3, r4, #35	; 0x23
40028a3c:	e1a08009 	mov	r8, r9
40028a40:	f443070f 	vst1.8	{d16}, [r3]
40028a44:	e2823001 	add	r3, r2, #1
40028a48:	e1a02082 	lsl	r2, r2, #1
40028a4c:	e19b60b2 	ldrh	r6, [fp, r2]
40028a50:	e3560000 	cmp	r6, #0
40028a54:	0afffec4 	beq	4002856c <follow_path+0xc4>
40028a58:	e3560020 	cmp	r6, #32
40028a5c:	0a000006 	beq	40028a7c <follow_path+0x5d4>
40028a60:	e1570003 	cmp	r7, r3
40028a64:	e246202e 	sub	r2, r6, #46	; 0x2e
40028a68:	e16f2f12 	clz	r2, r2
40028a6c:	e1a022a2 	lsr	r2, r2, #5
40028a70:	03a02000 	moveq	r2, #0
40028a74:	e3520000 	cmp	r2, #0
40028a78:	0afffeb5 	beq	40028554 <follow_path+0xac>
40028a7c:	e3855003 	orr	r5, r5, #3
40028a80:	e1a02003 	mov	r2, r3
40028a84:	eaffffee 	b	40028a44 <follow_path+0x59c>
40028a88:	e3a06006 	mov	r6, #6
40028a8c:	eaffff95 	b	400288e8 <follow_path+0x440>
40028a90:	e3a06005 	mov	r6, #5
40028a94:	eaffff93 	b	400288e8 <follow_path+0x440>
40028a98:	4003303e 	andmi	r3, r3, lr, lsr r0
40028a9c:	4003304e 	andmi	r3, r3, lr, asr #32
40028aa0:	40033047 	andmi	r3, r3, r7, asr #32
40028aa4:	400330ce 	andmi	r3, r3, lr, asr #1
40028aa8:	400330db 	ldrdmi	r3, [r3], -fp

40028aac <f_mount>:
40028aac:	e92d401f 	push	{r0, r1, r2, r3, r4, lr}
40028ab0:	e1a04002 	mov	r4, r2
40028ab4:	e58d0004 	str	r0, [sp, #4]
40028ab8:	e28d000c 	add	r0, sp, #12
40028abc:	e58d1000 	str	r1, [sp]
40028ac0:	e58d100c 	str	r1, [sp, #12]
40028ac4:	ebfffc91 	bl	40027d10 <get_ldnumber>
40028ac8:	e3500000 	cmp	r0, #0
40028acc:	b3a0400b 	movlt	r4, #11
40028ad0:	ba00000f 	blt	40028b14 <f_mount+0x68>
40028ad4:	e59f2044 	ldr	r2, [pc, #68]	; 40028b20 <f_mount+0x74>
40028ad8:	e7923100 	ldr	r3, [r2, r0, lsl #2]
40028adc:	e3530000 	cmp	r3, #0
40028ae0:	13a01000 	movne	r1, #0
40028ae4:	15c31000 	strbne	r1, [r3]
40028ae8:	e59d3004 	ldr	r3, [sp, #4]
40028aec:	e3530000 	cmp	r3, #0
40028af0:	13a01000 	movne	r1, #0
40028af4:	15c31000 	strbne	r1, [r3]
40028af8:	e3540000 	cmp	r4, #0
40028afc:	e7823100 	str	r3, [r2, r0, lsl #2]
40028b00:	0a000003 	beq	40028b14 <f_mount+0x68>
40028b04:	e28d1004 	add	r1, sp, #4
40028b08:	e1a0000d 	mov	r0, sp
40028b0c:	ebfffd08 	bl	40027f34 <mount_volume.constprop.0>
40028b10:	e1a04000 	mov	r4, r0
40028b14:	e1a00004 	mov	r0, r4
40028b18:	e28dd010 	add	sp, sp, #16
40028b1c:	e8bd8010 	pop	{r4, pc}
40028b20:	400636c0 	andmi	r3, r6, r0, asr #13

40028b24 <f_open>:
40028b24:	e92d40f0 	push	{r4, r5, r6, r7, lr}
40028b28:	e2505000 	subs	r5, r0, #0
40028b2c:	e24dd044 	sub	sp, sp, #68	; 0x44
40028b30:	03a04009 	moveq	r4, #9
40028b34:	e58d1004 	str	r1, [sp, #4]
40028b38:	0a000022 	beq	40028bc8 <f_open+0xa4>
40028b3c:	e28d100c 	add	r1, sp, #12
40028b40:	e28d0004 	add	r0, sp, #4
40028b44:	e1a07002 	mov	r7, r2
40028b48:	ebfffcf9 	bl	40027f34 <mount_volume.constprop.0>
40028b4c:	e2504000 	subs	r4, r0, #0
40028b50:	1a000020 	bne	40028bd8 <f_open+0xb4>
40028b54:	e59d300c 	ldr	r3, [sp, #12]
40028b58:	e28d0010 	add	r0, sp, #16
40028b5c:	e59d1004 	ldr	r1, [sp, #4]
40028b60:	e58d3010 	str	r3, [sp, #16]
40028b64:	ebfffe4f 	bl	400284a8 <follow_path>
40028b68:	e2504000 	subs	r4, r0, #0
40028b6c:	1a000019 	bne	40028bd8 <f_open+0xb4>
40028b70:	e1dd33db 	ldrsb	r3, [sp, #59]	; 0x3b
40028b74:	e3530000 	cmp	r3, #0
40028b78:	ba000015 	blt	40028bd4 <f_open+0xb0>
40028b7c:	e5dd4016 	ldrb	r4, [sp, #22]
40028b80:	e2144010 	ands	r4, r4, #16
40028b84:	1a000016 	bne	40028be4 <f_open+0xc0>
40028b88:	e59d600c 	ldr	r6, [sp, #12]
40028b8c:	e59d102c 	ldr	r1, [sp, #44]	; 0x2c
40028b90:	e5d60000 	ldrb	r0, [r6]
40028b94:	ebfffd91 	bl	400281e0 <ld_clust.isra.0>
40028b98:	e5850008 	str	r0, [r5, #8]
40028b9c:	e281001c 	add	r0, r1, #28
40028ba0:	e2072001 	and	r2, r7, #1
40028ba4:	ebfffc4e 	bl	40027ce4 <ld_dword>
40028ba8:	e1d630b6 	ldrh	r3, [r6, #6]
40028bac:	e585000c 	str	r0, [r5, #12]
40028bb0:	e5856000 	str	r6, [r5]
40028bb4:	e1c530b4 	strh	r3, [r5, #4]
40028bb8:	e5c52010 	strb	r2, [r5, #16]
40028bbc:	e5c54011 	strb	r4, [r5, #17]
40028bc0:	e585401c 	str	r4, [r5, #28]
40028bc4:	e5854014 	str	r4, [r5, #20]
40028bc8:	e1a00004 	mov	r0, r4
40028bcc:	e28dd044 	add	sp, sp, #68	; 0x44
40028bd0:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
40028bd4:	e3a04006 	mov	r4, #6
40028bd8:	e3a03000 	mov	r3, #0
40028bdc:	e5853000 	str	r3, [r5]
40028be0:	eafffff8 	b	40028bc8 <f_open+0xa4>
40028be4:	e3a04004 	mov	r4, #4
40028be8:	eafffffa 	b	40028bd8 <f_open+0xb4>

40028bec <f_read>:
40028bec:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
40028bf0:	e1a09003 	mov	r9, r3
40028bf4:	e24dd01c 	sub	sp, sp, #28
40028bf8:	e3a03000 	mov	r3, #0
40028bfc:	e5893000 	str	r3, [r9]
40028c00:	e1a08001 	mov	r8, r1
40028c04:	e28d1014 	add	r1, sp, #20
40028c08:	e1a04000 	mov	r4, r0
40028c0c:	e1a06002 	mov	r6, r2
40028c10:	ebfffc57 	bl	40027d74 <validate>
40028c14:	e2507000 	subs	r7, r0, #0
40028c18:	1a000023 	bne	40028cac <f_read+0xc0>
40028c1c:	e5d47011 	ldrb	r7, [r4, #17]
40028c20:	e3570000 	cmp	r7, #0
40028c24:	1a000020 	bne	40028cac <f_read+0xc0>
40028c28:	e5d43010 	ldrb	r3, [r4, #16]
40028c2c:	e2133001 	ands	r3, r3, #1
40028c30:	e58d3008 	str	r3, [sp, #8]
40028c34:	03a07007 	moveq	r7, #7
40028c38:	0a00001b 	beq	40028cac <f_read+0xc0>
40028c3c:	e594500c 	ldr	r5, [r4, #12]
40028c40:	e2843020 	add	r3, r4, #32
40028c44:	e5942014 	ldr	r2, [r4, #20]
40028c48:	e58d3004 	str	r3, [sp, #4]
40028c4c:	e0455002 	sub	r5, r5, r2
40028c50:	e1550006 	cmp	r5, r6
40028c54:	21a05006 	movcs	r5, r6
40028c58:	e3550000 	cmp	r5, #0
40028c5c:	0a000012 	beq	40028cac <f_read+0xc0>
40028c60:	e5942014 	ldr	r2, [r4, #20]
40028c64:	e7e83052 	ubfx	r3, r2, #0, #9
40028c68:	e3530000 	cmp	r3, #0
40028c6c:	1a000042 	bne	40028d7c <f_read+0x190>
40028c70:	e59d3014 	ldr	r3, [sp, #20]
40028c74:	e1d330ba 	ldrh	r3, [r3, #10]
40028c78:	e2433001 	sub	r3, r3, #1
40028c7c:	e013b4a2 	ands	fp, r3, r2, lsr #9
40028c80:	1a000013 	bne	40028cd4 <f_read+0xe8>
40028c84:	e3520000 	cmp	r2, #0
40028c88:	05940008 	ldreq	r0, [r4, #8]
40028c8c:	0a000002 	beq	40028c9c <f_read+0xb0>
40028c90:	e5941018 	ldr	r1, [r4, #24]
40028c94:	e5940000 	ldr	r0, [r4]
40028c98:	ebfffd56 	bl	400281f8 <get_fat.isra.0>
40028c9c:	e3500001 	cmp	r0, #1
40028ca0:	8a000004 	bhi	40028cb8 <f_read+0xcc>
40028ca4:	e3a07002 	mov	r7, #2
40028ca8:	e5c47011 	strb	r7, [r4, #17]
40028cac:	e1a00007 	mov	r0, r7
40028cb0:	e28dd01c 	add	sp, sp, #28
40028cb4:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
40028cb8:	e3700001 	cmn	r0, #1
40028cbc:	1a000003 	bne	40028cd0 <f_read+0xe4>
40028cc0:	e59d7008 	ldr	r7, [sp, #8]
40028cc4:	e3a03001 	mov	r3, #1
40028cc8:	e5c43011 	strb	r3, [r4, #17]
40028ccc:	eafffff6 	b	40028cac <f_read+0xc0>
40028cd0:	e5840018 	str	r0, [r4, #24]
40028cd4:	e59da014 	ldr	sl, [sp, #20]
40028cd8:	e5941018 	ldr	r1, [r4, #24]
40028cdc:	e1a0000a 	mov	r0, sl
40028ce0:	ebfffc01 	bl	40027cec <clst2sect>
40028ce4:	e2502000 	subs	r2, r0, #0
40028ce8:	0affffed 	beq	40028ca4 <f_read+0xb8>
40028cec:	e08b2002 	add	r2, fp, r2
40028cf0:	e3550c02 	cmp	r5, #512	; 0x200
40028cf4:	3a000014 	bcc	40028d4c <f_read+0x160>
40028cf8:	e1da10ba 	ldrh	r1, [sl, #10]
40028cfc:	e08b04a5 	add	r0, fp, r5, lsr #9
40028d00:	e1500001 	cmp	r0, r1
40028d04:	e1a064a5 	lsr	r6, r5, #9
40028d08:	8041600b 	subhi	r6, r1, fp
40028d0c:	e1a01008 	mov	r1, r8
40028d10:	e5da0001 	ldrb	r0, [sl, #1]
40028d14:	e1a03006 	mov	r3, r6
40028d18:	eb000112 	bl	40029168 <disk_read>
40028d1c:	e3500000 	cmp	r0, #0
40028d20:	1affffe6 	bne	40028cc0 <f_read+0xd4>
40028d24:	e1a06486 	lsl	r6, r6, #9
40028d28:	e5993000 	ldr	r3, [r9]
40028d2c:	e0455006 	sub	r5, r5, r6
40028d30:	e0833006 	add	r3, r3, r6
40028d34:	e5893000 	str	r3, [r9]
40028d38:	e5943014 	ldr	r3, [r4, #20]
40028d3c:	e0888006 	add	r8, r8, r6
40028d40:	e0836006 	add	r6, r3, r6
40028d44:	e5846014 	str	r6, [r4, #20]
40028d48:	eaffffc2 	b	40028c58 <f_read+0x6c>
40028d4c:	e594301c 	ldr	r3, [r4, #28]
40028d50:	e1530002 	cmp	r3, r2
40028d54:	0a000007 	beq	40028d78 <f_read+0x18c>
40028d58:	e59d1004 	ldr	r1, [sp, #4]
40028d5c:	e3a03001 	mov	r3, #1
40028d60:	e5da0001 	ldrb	r0, [sl, #1]
40028d64:	e58d200c 	str	r2, [sp, #12]
40028d68:	eb0000fe 	bl	40029168 <disk_read>
40028d6c:	e59d200c 	ldr	r2, [sp, #12]
40028d70:	e3500000 	cmp	r0, #0
40028d74:	1affffd1 	bne	40028cc0 <f_read+0xd4>
40028d78:	e584201c 	str	r2, [r4, #28]
40028d7c:	e5941014 	ldr	r1, [r4, #20]
40028d80:	e1a00008 	mov	r0, r8
40028d84:	e59d3004 	ldr	r3, [sp, #4]
40028d88:	e7e81051 	ubfx	r1, r1, #0, #9
40028d8c:	e2616c02 	rsb	r6, r1, #512	; 0x200
40028d90:	e1550006 	cmp	r5, r6
40028d94:	e0831001 	add	r1, r3, r1
40028d98:	31a06005 	movcc	r6, r5
40028d9c:	e1a02006 	mov	r2, r6
40028da0:	ebffb1a7 	bl	40015444 <memcpy>
40028da4:	eaffffdf 	b	40028d28 <f_read+0x13c>

40028da8 <f_close>:
40028da8:	e92d4013 	push	{r0, r1, r4, lr}
40028dac:	e28d1004 	add	r1, sp, #4
40028db0:	e1a04000 	mov	r4, r0
40028db4:	ebfffbee 	bl	40027d74 <validate>
40028db8:	e3500000 	cmp	r0, #0
40028dbc:	05840000 	streq	r0, [r4]
40028dc0:	e28dd008 	add	sp, sp, #8
40028dc4:	e8bd8010 	pop	{r4, pc}

40028dc8 <f_lseek>:
40028dc8:	e92d40f7 	push	{r0, r1, r2, r4, r5, r6, r7, lr}
40028dcc:	e1a06001 	mov	r6, r1
40028dd0:	e28d1004 	add	r1, sp, #4
40028dd4:	e1a04000 	mov	r4, r0
40028dd8:	ebfffbe5 	bl	40027d74 <validate>
40028ddc:	e2505000 	subs	r5, r0, #0
40028de0:	1a000009 	bne	40028e0c <f_lseek+0x44>
40028de4:	e5d45011 	ldrb	r5, [r4, #17]
40028de8:	e3550000 	cmp	r5, #0
40028dec:	1a000006 	bne	40028e0c <f_lseek+0x44>
40028df0:	e594200c 	ldr	r2, [r4, #12]
40028df4:	e5943014 	ldr	r3, [r4, #20]
40028df8:	e1560002 	cmp	r6, r2
40028dfc:	e5845014 	str	r5, [r4, #20]
40028e00:	21a06002 	movcs	r6, r2
40028e04:	e3560000 	cmp	r6, #0
40028e08:	1a000002 	bne	40028e18 <f_lseek+0x50>
40028e0c:	e1a00005 	mov	r0, r5
40028e10:	e28dd00c 	add	sp, sp, #12
40028e14:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
40028e18:	e59d2004 	ldr	r2, [sp, #4]
40028e1c:	e3530000 	cmp	r3, #0
40028e20:	e1d270ba 	ldrh	r7, [r2, #10]
40028e24:	e1a07487 	lsl	r7, r7, #9
40028e28:	0a00001e 	beq	40028ea8 <f_lseek+0xe0>
40028e2c:	e2433001 	sub	r3, r3, #1
40028e30:	e2462001 	sub	r2, r6, #1
40028e34:	e731f713 	udiv	r1, r3, r7
40028e38:	e732f712 	udiv	r2, r2, r7
40028e3c:	e1520001 	cmp	r2, r1
40028e40:	3a000018 	bcc	40028ea8 <f_lseek+0xe0>
40028e44:	e5941018 	ldr	r1, [r4, #24]
40028e48:	e2672000 	rsb	r2, r7, #0
40028e4c:	e0033002 	and	r3, r3, r2
40028e50:	e0466003 	sub	r6, r6, r3
40028e54:	e5843014 	str	r3, [r4, #20]
40028e58:	e3510000 	cmp	r1, #0
40028e5c:	1a000028 	bne	40028f04 <f_lseek+0x13c>
40028e60:	e3a06000 	mov	r6, #0
40028e64:	e5943014 	ldr	r3, [r4, #20]
40028e68:	e7e83053 	ubfx	r3, r3, #0, #9
40028e6c:	e3530000 	cmp	r3, #0
40028e70:	0affffe5 	beq	40028e0c <f_lseek+0x44>
40028e74:	e594301c 	ldr	r3, [r4, #28]
40028e78:	e1530006 	cmp	r3, r6
40028e7c:	0affffe2 	beq	40028e0c <f_lseek+0x44>
40028e80:	e59d0004 	ldr	r0, [sp, #4]
40028e84:	e3a03001 	mov	r3, #1
40028e88:	e1a02006 	mov	r2, r6
40028e8c:	e2841020 	add	r1, r4, #32
40028e90:	e5d00001 	ldrb	r0, [r0, #1]
40028e94:	eb0000b3 	bl	40029168 <disk_read>
40028e98:	e2505000 	subs	r5, r0, #0
40028e9c:	1a00000c 	bne	40028ed4 <f_lseek+0x10c>
40028ea0:	e584601c 	str	r6, [r4, #28]
40028ea4:	eaffffd8 	b	40028e0c <f_lseek+0x44>
40028ea8:	e5941008 	ldr	r1, [r4, #8]
40028eac:	e5841018 	str	r1, [r4, #24]
40028eb0:	eaffffe8 	b	40028e58 <f_lseek+0x90>
40028eb4:	e0833007 	add	r3, r3, r7
40028eb8:	e5940000 	ldr	r0, [r4]
40028ebc:	e5843014 	str	r3, [r4, #20]
40028ec0:	e0466007 	sub	r6, r6, r7
40028ec4:	ebfffccb 	bl	400281f8 <get_fat.isra.0>
40028ec8:	e3700001 	cmn	r0, #1
40028ecc:	e1a01000 	mov	r1, r0
40028ed0:	1a000002 	bne	40028ee0 <f_lseek+0x118>
40028ed4:	e3a05001 	mov	r5, #1
40028ed8:	e5c45011 	strb	r5, [r4, #17]
40028edc:	eaffffca 	b	40028e0c <f_lseek+0x44>
40028ee0:	e3500001 	cmp	r0, #1
40028ee4:	9a000003 	bls	40028ef8 <f_lseek+0x130>
40028ee8:	e59d3004 	ldr	r3, [sp, #4]
40028eec:	e5933010 	ldr	r3, [r3, #16]
40028ef0:	e1530000 	cmp	r3, r0
40028ef4:	8a000001 	bhi	40028f00 <f_lseek+0x138>
40028ef8:	e3a05002 	mov	r5, #2
40028efc:	eafffff5 	b	40028ed8 <f_lseek+0x110>
40028f00:	e5840018 	str	r0, [r4, #24]
40028f04:	e1560007 	cmp	r6, r7
40028f08:	e5943014 	ldr	r3, [r4, #20]
40028f0c:	8affffe8 	bhi	40028eb4 <f_lseek+0xec>
40028f10:	e0863003 	add	r3, r6, r3
40028f14:	e5843014 	str	r3, [r4, #20]
40028f18:	e7e83056 	ubfx	r3, r6, #0, #9
40028f1c:	e3530000 	cmp	r3, #0
40028f20:	0affffce 	beq	40028e60 <f_lseek+0x98>
40028f24:	e59d0004 	ldr	r0, [sp, #4]
40028f28:	ebfffb6f 	bl	40027cec <clst2sect>
40028f2c:	e3500000 	cmp	r0, #0
40028f30:	0afffff0 	beq	40028ef8 <f_lseek+0x130>
40028f34:	e08064a6 	add	r6, r0, r6, lsr #9
40028f38:	eaffffc9 	b	40028e64 <f_lseek+0x9c>

40028f3c <f_gets>:
40028f3c:	e92d41f3 	push	{r0, r1, r4, r5, r6, r7, r8, lr}
40028f40:	e1a04000 	mov	r4, r0
40028f44:	e1a08002 	mov	r8, r2
40028f48:	e2417001 	sub	r7, r1, #1
40028f4c:	e1a06000 	mov	r6, r0
40028f50:	e3a05000 	mov	r5, #0
40028f54:	e1550007 	cmp	r5, r7
40028f58:	aa00000e 	bge	40028f98 <f_gets+0x5c>
40028f5c:	e28d3004 	add	r3, sp, #4
40028f60:	e3a02001 	mov	r2, #1
40028f64:	e1a0100d 	mov	r1, sp
40028f68:	e1a00008 	mov	r0, r8
40028f6c:	ebffff1e 	bl	40028bec <f_read>
40028f70:	e59d3004 	ldr	r3, [sp, #4]
40028f74:	e3530001 	cmp	r3, #1
40028f78:	1a000006 	bne	40028f98 <f_gets+0x5c>
40028f7c:	e5dd3000 	ldrb	r3, [sp]
40028f80:	e353000d 	cmp	r3, #13
40028f84:	0afffff2 	beq	40028f54 <f_gets+0x18>
40028f88:	e4c63001 	strb	r3, [r6], #1
40028f8c:	e353000a 	cmp	r3, #10
40028f90:	e2855001 	add	r5, r5, #1
40028f94:	1affffee 	bne	40028f54 <f_gets+0x18>
40028f98:	e3a03000 	mov	r3, #0
40028f9c:	e1550003 	cmp	r5, r3
40028fa0:	e5c63000 	strb	r3, [r6]
40028fa4:	11a00004 	movne	r0, r4
40028fa8:	01a00003 	moveq	r0, r3
40028fac:	e28dd008 	add	sp, sp, #8
40028fb0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

40028fb4 <ff_uni2oem>:
40028fb4:	e350007f 	cmp	r0, #127	; 0x7f
40028fb8:	e1a02000 	mov	r2, r0
40028fbc:	8a000001 	bhi	40028fc8 <ff_uni2oem+0x14>
40028fc0:	e6ff0070 	uxth	r0, r0
40028fc4:	e12fff1e 	bx	lr
40028fc8:	e3500801 	cmp	r0, #65536	; 0x10000
40028fcc:	e3003352 	movw	r3, #850	; 0x352
40028fd0:	23a00000 	movcs	r0, #0
40028fd4:	33a00001 	movcc	r0, #1
40028fd8:	e1510003 	cmp	r1, r3
40028fdc:	13a00000 	movne	r0, #0
40028fe0:	e3500000 	cmp	r0, #0
40028fe4:	13a01000 	movne	r1, #0
40028fe8:	159f0030 	ldrne	r0, [pc, #48]	; 40029020 <ff_uni2oem+0x6c>
40028fec:	012fff1e 	bxeq	lr
40028ff0:	e0d0c0b2 	ldrh	ip, [r0], #2
40028ff4:	e6ff3071 	uxth	r3, r1
40028ff8:	e15c0002 	cmp	ip, r2
40028ffc:	1a000002 	bne	4002900c <ff_uni2oem+0x58>
40029000:	e2830080 	add	r0, r3, #128	; 0x80
40029004:	e6ef0070 	uxtb	r0, r0
40029008:	e12fff1e 	bx	lr
4002900c:	e2811001 	add	r1, r1, #1
40029010:	e3510080 	cmp	r1, #128	; 0x80
40029014:	1afffff5 	bne	40028ff0 <ff_uni2oem+0x3c>
40029018:	e1a03001 	mov	r3, r1
4002901c:	eafffff7 	b	40029000 <ff_uni2oem+0x4c>
40029020:	4003338a 	andmi	r3, r3, sl, lsl #7

40029024 <ff_oem2uni>:
40029024:	e350007f 	cmp	r0, #127	; 0x7f
40029028:	912fff1e 	bxls	lr
4002902c:	e3003352 	movw	r3, #850	; 0x352
40029030:	e35000ff 	cmp	r0, #255	; 0xff
40029034:	91510003 	cmpls	r1, r3
40029038:	02800102 	addeq	r0, r0, #-2147483648	; 0x80000000
4002903c:	13a01000 	movne	r1, #0
40029040:	059f3014 	ldreq	r3, [pc, #20]	; 4002905c <ff_oem2uni+0x38>
40029044:	02400080 	subeq	r0, r0, #128	; 0x80
40029048:	03a01001 	moveq	r1, #1
4002904c:	01a00080 	lsleq	r0, r0, #1
40029050:	019300b0 	ldrheq	r0, [r3, r0]
40029054:	11a00001 	movne	r0, r1
40029058:	e12fff1e 	bx	lr
4002905c:	4003338a 	andmi	r3, r3, sl, lsl #7

40029060 <ff_wtoupper>:
40029060:	e3500801 	cmp	r0, #65536	; 0x10000
40029064:	212fff1e 	bxcs	lr
40029068:	e59f10f0 	ldr	r1, [pc, #240]	; 40029160 <ff_wtoupper+0x100>
4002906c:	e3500a01 	cmp	r0, #4096	; 0x1000
40029070:	e59f20ec 	ldr	r2, [pc, #236]	; 40029164 <ff_wtoupper+0x104>
40029074:	e6ff3070 	uxth	r3, r0
40029078:	21a02001 	movcs	r2, r1
4002907c:	e92d4030 	push	{r4, r5, lr}
40029080:	e282c004 	add	ip, r2, #4
40029084:	e15c20b4 	ldrh	r2, [ip, #-4]
40029088:	e1a0100c 	mov	r1, ip
4002908c:	e1530002 	cmp	r3, r2
40029090:	23a0e000 	movcs	lr, #0
40029094:	33a0e001 	movcc	lr, #1
40029098:	e3520000 	cmp	r2, #0
4002909c:	038ee001 	orreq	lr, lr, #1
400290a0:	e35e0000 	cmp	lr, #0
400290a4:	1a000014 	bne	400290fc <ff_wtoupper+0x9c>
400290a8:	e15ce0b2 	ldrh	lr, [ip, #-2]
400290ac:	e1a0442e 	lsr	r4, lr, #8
400290b0:	e6ef507e 	uxtb	r5, lr
400290b4:	e6e2e07e 	uxtab	lr, r2, lr
400290b8:	e150000e 	cmp	r0, lr
400290bc:	aa000022 	bge	4002914c <ff_wtoupper+0xec>
400290c0:	e3540008 	cmp	r4, #8
400290c4:	979ff104 	ldrls	pc, [pc, r4, lsl #2]
400290c8:	ea00000b 	b	400290fc <ff_wtoupper+0x9c>
400290cc:	400290f0 	strdmi	r9, [r2], -r0
400290d0:	40029104 	andmi	r9, r2, r4, lsl #2
400290d4:	40029118 	andmi	r9, r2, r8, lsl r1
400290d8:	40029144 	andmi	r9, r2, r4, asr #2
400290dc:	40029120 	andmi	r9, r2, r0, lsr #2
400290e0:	40029128 	andmi	r9, r2, r8, lsr #2
400290e4:	40029130 	andmi	r9, r2, r0, lsr r1
400290e8:	40029138 	andmi	r9, r2, r8, lsr r1
400290ec:	40029140 	andmi	r9, r2, r0, asr #2
400290f0:	e0400002 	sub	r0, r0, r2
400290f4:	e1a00080 	lsl	r0, r0, #1
400290f8:	e19c30b0 	ldrh	r3, [ip, r0]
400290fc:	e1a00003 	mov	r0, r3
40029100:	e8bd8030 	pop	{r4, r5, pc}
40029104:	e0430002 	sub	r0, r3, r2
40029108:	e2000001 	and	r0, r0, #1
4002910c:	e0433000 	sub	r3, r3, r0
40029110:	e6ff3073 	uxth	r3, r3
40029114:	eafffff8 	b	400290fc <ff_wtoupper+0x9c>
40029118:	e2433010 	sub	r3, r3, #16
4002911c:	eafffffb 	b	40029110 <ff_wtoupper+0xb0>
40029120:	e2433030 	sub	r3, r3, #48	; 0x30
40029124:	eafffff9 	b	40029110 <ff_wtoupper+0xb0>
40029128:	e243301a 	sub	r3, r3, #26
4002912c:	eafffff7 	b	40029110 <ff_wtoupper+0xb0>
40029130:	e2833008 	add	r3, r3, #8
40029134:	eafffff5 	b	40029110 <ff_wtoupper+0xb0>
40029138:	e2433050 	sub	r3, r3, #80	; 0x50
4002913c:	eafffff3 	b	40029110 <ff_wtoupper+0xb0>
40029140:	e2433d71 	sub	r3, r3, #7232	; 0x1c40
40029144:	e2433020 	sub	r3, r3, #32
40029148:	eafffff0 	b	40029110 <ff_wtoupper+0xb0>
4002914c:	e3540000 	cmp	r4, #0
40029150:	e28cc004 	add	ip, ip, #4
40029154:	1affffca 	bne	40029084 <ff_wtoupper+0x24>
40029158:	e0812085 	add	r2, r1, r5, lsl #1
4002915c:	eaffffc7 	b	40029080 <ff_wtoupper+0x20>
40029160:	400332ce 	andmi	r3, r3, lr, asr #5
40029164:	400330dc 	ldrdmi	r3, [r3], -ip

40029168 <disk_read>:
40029168:	e16fcf13 	clz	ip, r3
4002916c:	e1a0c2ac 	lsr	ip, ip, #5
40029170:	e3500000 	cmp	r0, #0
40029174:	138cc001 	orrne	ip, ip, #1
40029178:	e35c0000 	cmp	ip, #0
4002917c:	1a000027 	bne	40029220 <disk_read+0xb8>
40029180:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
40029184:	e1a08003 	mov	r8, r3
40029188:	e59f30a0 	ldr	r3, [pc, #160]	; 40029230 <disk_read+0xc8>
4002918c:	e5d30000 	ldrb	r0, [r3]
40029190:	e2100001 	ands	r0, r0, #1
40029194:	1a000023 	bne	40029228 <disk_read+0xc0>
40029198:	e1a06001 	mov	r6, r1
4002919c:	e1a05002 	mov	r5, r2
400291a0:	e1a04008 	mov	r4, r8
400291a4:	eb00027f 	bl	40029ba8 <find_mmc_device>
400291a8:	e3580001 	cmp	r8, #1
400291ac:	1a000014 	bne	40029204 <disk_read+0x9c>
400291b0:	e59fa07c 	ldr	sl, [pc, #124]	; 40029234 <disk_read+0xcc>
400291b4:	e205900f 	and	r9, r5, #15
400291b8:	e59f7078 	ldr	r7, [pc, #120]	; 40029238 <disk_read+0xd0>
400291bc:	e79a3109 	ldr	r3, [sl, r9, lsl #2]
400291c0:	e0877489 	add	r7, r7, r9, lsl #9
400291c4:	e1550003 	cmp	r5, r3
400291c8:	0a000006 	beq	400291e8 <disk_read+0x80>
400291cc:	e1a03008 	mov	r3, r8
400291d0:	e1a02005 	mov	r2, r5
400291d4:	e1a01007 	mov	r1, r7
400291d8:	eb000276 	bl	40029bb8 <mmc_read_blocks>
400291dc:	e3500001 	cmp	r0, #1
400291e0:	1a000005 	bne	400291fc <disk_read+0x94>
400291e4:	e78a5109 	str	r5, [sl, r9, lsl #2]
400291e8:	e3a02010 	mov	r2, #16
400291ec:	e1a01007 	mov	r1, r7
400291f0:	e1a00006 	mov	r0, r6
400291f4:	e3a04000 	mov	r4, #0
400291f8:	eb001159 	bl	4002d764 <memcpy_blk>
400291fc:	e6ef0074 	uxtb	r0, r4
40029200:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
40029204:	e1a03008 	mov	r3, r8
40029208:	e1a02005 	mov	r2, r5
4002920c:	e1a01006 	mov	r1, r6
40029210:	eb000268 	bl	40029bb8 <mmc_read_blocks>
40029214:	e0584000 	subs	r4, r8, r0
40029218:	13a04001 	movne	r4, #1
4002921c:	eafffff6 	b	400291fc <disk_read+0x94>
40029220:	e3a00004 	mov	r0, #4
40029224:	e12fff1e 	bx	lr
40029228:	e3a00003 	mov	r0, #3
4002922c:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
40029230:	40033adc 	ldrdmi	r3, [r3], -ip
40029234:	40065a00 	andmi	r5, r6, r0, lsl #20
40029238:	40063a00 	andmi	r3, r6, r0, lsl #20

4002923c <disk_status>:
4002923c:	e3500000 	cmp	r0, #0
40029240:	059f300c 	ldreq	r3, [pc, #12]	; 40029254 <disk_status+0x18>
40029244:	05d30000 	ldrbeq	r0, [r3]
40029248:	06ef0070 	uxtbeq	r0, r0
4002924c:	13a00001 	movne	r0, #1
40029250:	e12fff1e 	bx	lr
40029254:	40033adc 	ldrdmi	r3, [r3], -ip

40029258 <debug_exception>:
40029258:	e92d4007 	push	{r0, r1, r2, lr}
4002925c:	f57ff05b 	dmb	ish
40029260:	e1a04000 	mov	r4, r0
40029264:	e3a00001 	mov	r0, #1
40029268:	e1a05001 	mov	r5, r1
4002926c:	ebfff4e3 	bl	40026600 <console_set_fg_color>
40029270:	e3540000 	cmp	r4, #0
40029274:	01a01005 	moveq	r1, r5
40029278:	059f0058 	ldreq	r0, [pc, #88]	; 400292d8 <debug_exception+0x80>
4002927c:	0a000013 	beq	400292d0 <debug_exception+0x78>
40029280:	e3540001 	cmp	r4, #1
40029284:	01a01005 	moveq	r1, r5
40029288:	059f004c 	ldreq	r0, [pc, #76]	; 400292dc <debug_exception+0x84>
4002928c:	0a00000f 	beq	400292d0 <debug_exception+0x78>
40029290:	e3540002 	cmp	r4, #2
40029294:	11a01004 	movne	r1, r4
40029298:	159f0040 	ldrne	r0, [pc, #64]	; 400292e0 <debug_exception+0x88>
4002929c:	1a00000b 	bne	400292d0 <debug_exception+0x78>
400292a0:	ee163f10 	mrc	15, 0, r3, cr6, cr0, {0}
400292a4:	e58d3004 	str	r3, [sp, #4]
400292a8:	e1a01005 	mov	r1, r5
400292ac:	e59d2004 	ldr	r2, [sp, #4]
400292b0:	e59f002c 	ldr	r0, [pc, #44]	; 400292e4 <debug_exception+0x8c>
400292b4:	eb000e35 	bl	4002cb90 <printf>
400292b8:	e3a00007 	mov	r0, #7
400292bc:	ebfff4cf 	bl	40026600 <console_set_fg_color>
400292c0:	e59f3020 	ldr	r3, [pc, #32]	; 400292e8 <debug_exception+0x90>
400292c4:	e3a02000 	mov	r2, #0
400292c8:	e58320b8 	str	r2, [r3, #184]	; 0xb8
400292cc:	eafffffe 	b	400292cc <debug_exception+0x74>
400292d0:	eb000e2e 	bl	4002cb90 <printf>
400292d4:	eafffff7 	b	400292b8 <debug_exception+0x60>
400292d8:	4003348a 	andmi	r3, r3, sl, lsl #9
400292dc:	400334af 	andmi	r3, r3, pc, lsr #9
400292e0:	400334f1 	strdmi	r3, [r3], -r1
400292e4:	400334cf 	andmi	r3, r3, pc, asr #9
400292e8:	01c20c00 	biceq	r0, r2, r0, lsl #24

400292ec <h3_get_dram_size>:
400292ec:	e59f302c 	ldr	r3, [pc, #44]	; 40029320 <h3_get_dram_size+0x34>
400292f0:	e5932000 	ldr	r2, [r3]
400292f4:	e7e33452 	ubfx	r3, r2, #8, #4
400292f8:	e2020003 	and	r0, r2, #3
400292fc:	e240000e 	sub	r0, r0, #14
40029300:	e0833000 	add	r3, r3, r0
40029304:	e7e30252 	ubfx	r0, r2, #4, #4
40029308:	e0833000 	add	r3, r3, r0
4002930c:	e3a00001 	mov	r0, #1
40029310:	e7e12152 	ubfx	r2, r2, #2, #2
40029314:	e0833002 	add	r3, r3, r2
40029318:	e1a00310 	lsl	r0, r0, r3
4002931c:	e12fff1e 	bx	lr
40029320:	01c62000 	biceq	r2, r6, r0

40029324 <h3_get_boot_device>:
40029324:	e59f2048 	ldr	r2, [pc, #72]	; 40029374 <h3_get_boot_device+0x50>
40029328:	e3a03000 	mov	r3, #0
4002932c:	e5931004 	ldr	r1, [r3, #4]
40029330:	e1510002 	cmp	r1, r2
40029334:	1a00000a 	bne	40029364 <h3_get_boot_device+0x40>
40029338:	e5931008 	ldr	r1, [r3, #8]
4002933c:	e59f2034 	ldr	r2, [pc, #52]	; 40029378 <h3_get_boot_device+0x54>
40029340:	e1510002 	cmp	r1, r2
40029344:	1a000006 	bne	40029364 <h3_get_boot_device+0x40>
40029348:	e5933028 	ldr	r3, [r3, #40]	; 0x28
4002934c:	e21330ff 	ands	r3, r3, #255	; 0xff
40029350:	0a000005 	beq	4002936c <h3_get_boot_device+0x48>
40029354:	e3530003 	cmp	r3, #3
40029358:	13a00000 	movne	r0, #0
4002935c:	03a00003 	moveq	r0, #3
40029360:	e12fff1e 	bx	lr
40029364:	e3a00001 	mov	r0, #1
40029368:	e12fff1e 	bx	lr
4002936c:	e3a00002 	mov	r0, #2
40029370:	e12fff1e 	bx	lr
40029374:	4e4f4765 	cdpmi	7, 4, cr4, cr15, cr5, {3}
40029378:	3054422e 	subscc	r4, r4, lr, lsr #4

4002937c <h3_gpio_fsel>:
4002937c:	e7e1c1d0 	ubfx	ip, r0, #3, #2
40029380:	e2002007 	and	r2, r0, #7
40029384:	e1a032a0 	lsr	r3, r0, #5
40029388:	e3a00024 	mov	r0, #36	; 0x24
4002938c:	e0030390 	mul	r3, r0, r3
40029390:	e1a02102 	lsl	r2, r2, #2
40029394:	e35c0001 	cmp	ip, #1
40029398:	e2833507 	add	r3, r3, #29360128	; 0x1c00000
4002939c:	e2833b82 	add	r3, r3, #133120	; 0x20800
400293a0:	0a000009 	beq	400293cc <h3_gpio_fsel+0x50>
400293a4:	e35c0002 	cmp	ip, #2
400293a8:	0a00000d 	beq	400293e4 <h3_gpio_fsel+0x68>
400293ac:	e35c0000 	cmp	ip, #0
400293b0:	112fff1e 	bxne	lr
400293b4:	e5930000 	ldr	r0, [r3]
400293b8:	e3a0c007 	mov	ip, #7
400293bc:	e1c0021c 	bic	r0, r0, ip, lsl r2
400293c0:	e1802211 	orr	r2, r0, r1, lsl r2
400293c4:	e5832000 	str	r2, [r3]
400293c8:	e12fff1e 	bx	lr
400293cc:	e5930004 	ldr	r0, [r3, #4]
400293d0:	e3a0c007 	mov	ip, #7
400293d4:	e1c0021c 	bic	r0, r0, ip, lsl r2
400293d8:	e1802211 	orr	r2, r0, r1, lsl r2
400293dc:	e5832004 	str	r2, [r3, #4]
400293e0:	e12fff1e 	bx	lr
400293e4:	e5930008 	ldr	r0, [r3, #8]
400293e8:	e3a0c007 	mov	ip, #7
400293ec:	e1c0021c 	bic	r0, r0, ip, lsl r2
400293f0:	e1802211 	orr	r2, r0, r1, lsl r2
400293f4:	e5832008 	str	r2, [r3, #8]
400293f8:	e12fff1e 	bx	lr

400293fc <h3_gpio_int_cfg>:
400293fc:	e2003007 	and	r3, r0, #7
40029400:	e1b002a0 	lsrs	r0, r0, #5
40029404:	e1a03103 	lsl	r3, r3, #2
40029408:	0a000008 	beq	40029430 <h3_gpio_int_cfg+0x34>
4002940c:	e3500006 	cmp	r0, #6
40029410:	112fff1e 	bxne	lr
40029414:	e59f0030 	ldr	r0, [pc, #48]	; 4002944c <h3_gpio_int_cfg+0x50>
40029418:	e3a0c00f 	mov	ip, #15
4002941c:	e5902020 	ldr	r2, [r0, #32]
40029420:	e1c2231c 	bic	r2, r2, ip, lsl r3
40029424:	e1823311 	orr	r3, r2, r1, lsl r3
40029428:	e5803020 	str	r3, [r0, #32]
4002942c:	e12fff1e 	bx	lr
40029430:	e59f0014 	ldr	r0, [pc, #20]	; 4002944c <h3_gpio_int_cfg+0x50>
40029434:	e3a0c00f 	mov	ip, #15
40029438:	e5902000 	ldr	r2, [r0]
4002943c:	e1c2231c 	bic	r2, r2, ip, lsl r3
40029440:	e1823311 	orr	r3, r2, r1, lsl r3
40029444:	e5803000 	str	r3, [r0]
40029448:	e12fff1e 	bx	lr
4002944c:	01c20a00 	biceq	r0, r2, r0, lsl #20

40029450 <h3_gpio_set_pud>:
40029450:	e3a0c024 	mov	ip, #36	; 0x24
40029454:	e200200f 	and	r2, r0, #15
40029458:	e1a032a0 	lsr	r3, r0, #5
4002945c:	e3100010 	tst	r0, #16
40029460:	e003039c 	mul	r3, ip, r3
40029464:	e1a02082 	lsl	r2, r2, #1
40029468:	e3a0c003 	mov	ip, #3
4002946c:	e2833507 	add	r3, r3, #29360128	; 0x1c00000
40029470:	e1e0c21c 	mvn	ip, ip, lsl r2
40029474:	e2833b82 	add	r3, r3, #133120	; 0x20800
40029478:	e1a02211 	lsl	r2, r1, r2
4002947c:	0593101c 	ldreq	r1, [r3, #28]
40029480:	15931020 	ldrne	r1, [r3, #32]
40029484:	0001100c 	andeq	r1, r1, ip
40029488:	01811002 	orreq	r1, r1, r2
4002948c:	1001100c 	andne	r1, r1, ip
40029490:	11811002 	orrne	r1, r1, r2
40029494:	0583101c 	streq	r1, [r3, #28]
40029498:	15831020 	strne	r1, [r3, #32]
4002949c:	e12fff1e 	bx	lr

400294a0 <h3_memcpy>:
400294a0:	e1813000 	orr	r3, r1, r0
400294a4:	e3130003 	tst	r3, #3
400294a8:	10812002 	addne	r2, r1, r2
400294ac:	11a03000 	movne	r3, r0
400294b0:	12433001 	subne	r3, r3, #1
400294b4:	1a000015 	bne	40029510 <h3_memcpy+0x70>
400294b8:	e3c23003 	bic	r3, r2, #3
400294bc:	e240c004 	sub	ip, r0, #4
400294c0:	e92d4030 	push	{r4, r5, lr}
400294c4:	e1a0e122 	lsr	lr, r2, #2
400294c8:	e0814003 	add	r4, r1, r3
400294cc:	e1510004 	cmp	r1, r4
400294d0:	1a000009 	bne	400294fc <h3_memcpy+0x5c>
400294d4:	e0803003 	add	r3, r0, r3
400294d8:	e3e0c003 	mvn	ip, #3
400294dc:	e0222e9c 	mla	r2, ip, lr, r2
400294e0:	e2433001 	sub	r3, r3, #1
400294e4:	e0812002 	add	r2, r1, r2
400294e8:	e1510002 	cmp	r1, r2
400294ec:	08bd8030 	popeq	{r4, r5, pc}
400294f0:	e4d1c001 	ldrb	ip, [r1], #1
400294f4:	e5e3c001 	strb	ip, [r3, #1]!
400294f8:	eafffffa 	b	400294e8 <h3_memcpy+0x48>
400294fc:	e4915004 	ldr	r5, [r1], #4
40029500:	e5ac5004 	str	r5, [ip, #4]!
40029504:	eafffff0 	b	400294cc <h3_memcpy+0x2c>
40029508:	e4d1c001 	ldrb	ip, [r1], #1
4002950c:	e5e3c001 	strb	ip, [r3, #1]!
40029510:	e1510002 	cmp	r1, r2
40029514:	1afffffb 	bne	40029508 <h3_memcpy+0x68>
40029518:	e12fff1e 	bx	lr

4002951c <smp_core_main>:
4002951c:	e59f301c 	ldr	r3, [pc, #28]	; 40029540 <smp_core_main+0x24>
40029520:	e92d4010 	push	{r4, lr}
40029524:	e5933000 	ldr	r3, [r3]
40029528:	f57ff05f 	dmb	sy
4002952c:	e59f2010 	ldr	r2, [pc, #16]	; 40029544 <smp_core_main+0x28>
40029530:	e3a01001 	mov	r1, #1
40029534:	e5c21000 	strb	r1, [r2]
40029538:	e12fff33 	blx	r3
4002953c:	eafffffe 	b	4002953c <smp_core_main+0x20>
40029540:	40065a44 	andmi	r5, r6, r4, asr #20
40029544:	40065a40 	andmi	r5, r6, r0, asr #20

40029548 <smp_start_core>:
40029548:	e2403001 	sub	r3, r0, #1
4002954c:	e3530002 	cmp	r3, #2
40029550:	812fff1e 	bxhi	lr
40029554:	e92d4070 	push	{r4, r5, r6, lr}
40029558:	e1a04000 	mov	r4, r0
4002955c:	e3a00000 	mov	r0, #0
40029560:	e1a05001 	mov	r5, r1
40029564:	eb000015 	bl	400295c0 <h3_spinlock_lock>
40029568:	e59f3040 	ldr	r3, [pc, #64]	; 400295b0 <smp_start_core+0x68>
4002956c:	e6ef0074 	uxtb	r0, r4
40029570:	e59f203c 	ldr	r2, [pc, #60]	; 400295b4 <smp_start_core+0x6c>
40029574:	e5835000 	str	r5, [r3]
40029578:	e59f3038 	ldr	r3, [pc, #56]	; 400295b8 <smp_start_core+0x70>
4002957c:	e58321a4 	str	r2, [r3, #420]	; 0x1a4
40029580:	eb0006ac 	bl	4002b038 <h3_cpu_on>
40029584:	e59f3030 	ldr	r3, [pc, #48]	; 400295bc <smp_start_core+0x74>
40029588:	e3a02000 	mov	r2, #0
4002958c:	e5c32000 	strb	r2, [r3]
40029590:	e5d32000 	ldrb	r2, [r3]
40029594:	e3520000 	cmp	r2, #0
40029598:	0a000002 	beq	400295a8 <smp_start_core+0x60>
4002959c:	e8bd4070 	pop	{r4, r5, r6, lr}
400295a0:	e3a00000 	mov	r0, #0
400295a4:	ea00000c 	b	400295dc <h3_spinlock_unlock>
400295a8:	f57ff05f 	dmb	sy
400295ac:	eafffff7 	b	40029590 <smp_start_core+0x48>
400295b0:	40065a44 	andmi	r5, r6, r4, asr #20
400295b4:	4000277c 	andmi	r2, r0, ip, ror r7
400295b8:	01f01c00 	mvnseq	r1, r0, lsl #24
400295bc:	40065a40 	andmi	r5, r6, r0, asr #20

400295c0 <h3_spinlock_lock>:
400295c0:	e59f2010 	ldr	r2, [pc, #16]	; 400295d8 <h3_spinlock_lock+0x18>
400295c4:	e2800040 	add	r0, r0, #64	; 0x40
400295c8:	e7923100 	ldr	r3, [r2, r0, lsl #2]
400295cc:	e3530000 	cmp	r3, #0
400295d0:	1afffffc 	bne	400295c8 <h3_spinlock_lock+0x8>
400295d4:	e12fff1e 	bx	lr
400295d8:	01c18000 	biceq	r8, r1, r0

400295dc <h3_spinlock_unlock>:
400295dc:	e59f300c 	ldr	r3, [pc, #12]	; 400295f0 <h3_spinlock_unlock+0x14>
400295e0:	e2800040 	add	r0, r0, #64	; 0x40
400295e4:	e3a02000 	mov	r2, #0
400295e8:	e7832100 	str	r2, [r3, r0, lsl #2]
400295ec:	e12fff1e 	bx	lr
400295f0:	01c18000 	biceq	r8, r1, r0

400295f4 <h3_uart_set_baudrate>:
400295f4:	e59f3044 	ldr	r3, [pc, #68]	; 40029640 <h3_uart_set_baudrate+0x4c>
400295f8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
400295fc:	e73ef113 	udiv	lr, r3, r1
40029600:	e1510003 	cmp	r1, r3
40029604:	935e0801 	cmpls	lr, #65536	; 0x10000
40029608:	e59f2034 	ldr	r2, [pc, #52]	; 40029644 <h3_uart_set_baudrate+0x50>
4002960c:	31a02001 	movcc	r2, r1
40029610:	e590c00c 	ldr	ip, [r0, #12]
40029614:	e733f213 	udiv	r3, r3, r2
40029618:	f57ff05f 	dmb	sy
4002961c:	e3a02080 	mov	r2, #128	; 0x80
40029620:	e580200c 	str	r2, [r0, #12]
40029624:	e6ef2073 	uxtb	r2, r3
40029628:	e1a03423 	lsr	r3, r3, #8
4002962c:	e5802000 	str	r2, [r0]
40029630:	e5803004 	str	r3, [r0, #4]
40029634:	e580c00c 	str	ip, [r0, #12]
40029638:	f57ff06f 	isb	sy
4002963c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40029640:	0016e360 	andseq	lr, r6, r0, ror #6
40029644:	0001c200 	andeq	ip, r1, r0, lsl #4

40029648 <h3_uart_transmit>:
40029648:	e3520000 	cmp	r2, #0
4002964c:	012fff1e 	bxeq	lr
40029650:	e5903080 	ldr	r3, [r0, #128]	; 0x80
40029654:	e2633040 	rsb	r3, r3, #64	; 0x40
40029658:	e0813003 	add	r3, r1, r3
4002965c:	e1510003 	cmp	r1, r3
40029660:	13520000 	cmpne	r2, #0
40029664:	0afffff7 	beq	40029648 <h3_uart_transmit>
40029668:	e4d1c001 	ldrb	ip, [r1], #1
4002966c:	e2422001 	sub	r2, r2, #1
40029670:	e580c000 	str	ip, [r0]
40029674:	eafffff8 	b	4002965c <h3_uart_transmit+0x14>

40029678 <h3_uart_transmit_string>:
40029678:	e5d13000 	ldrb	r3, [r1]
4002967c:	e3530000 	cmp	r3, #0
40029680:	012fff1e 	bxeq	lr
40029684:	e5903080 	ldr	r3, [r0, #128]	; 0x80
40029688:	e2633040 	rsb	r3, r3, #64	; 0x40
4002968c:	e0813003 	add	r3, r1, r3
40029690:	e5d12000 	ldrb	r2, [r1]
40029694:	e1510003 	cmp	r1, r3
40029698:	13520000 	cmpne	r2, #0
4002969c:	0afffff5 	beq	40029678 <h3_uart_transmit_string>
400296a0:	e5802000 	str	r2, [r0]
400296a4:	e2811001 	add	r1, r1, #1
400296a8:	eafffff8 	b	40029690 <h3_uart_transmit_string+0x18>

400296ac <IRQ_SetHandler>:
400296ac:	e3500fff 	cmp	r0, #1020	; 0x3fc
400296b0:	359f300c 	ldrcc	r3, [pc, #12]	; 400296c4 <IRQ_SetHandler+0x18>
400296b4:	37831100 	strcc	r1, [r3, r0, lsl #2]
400296b8:	33a00000 	movcc	r0, #0
400296bc:	23e00000 	mvncs	r0, #0
400296c0:	e12fff1e 	bx	lr
400296c4:	40065a48 	andmi	r5, r6, r8, asr #20

400296c8 <IRQ_GetHandler>:
400296c8:	e7e90050 	ubfx	r0, r0, #0, #10
400296cc:	e3500fff 	cmp	r0, #1020	; 0x3fc
400296d0:	b59f3008 	ldrlt	r3, [pc, #8]	; 400296e0 <IRQ_GetHandler+0x18>
400296d4:	b7930100 	ldrlt	r0, [r3, r0, lsl #2]
400296d8:	a3a00000 	movge	r0, #0
400296dc:	e12fff1e 	bx	lr
400296e0:	40065a48 	andmi	r5, r6, r8, asr #20

400296e4 <arm_install_handler>:
400296e4:	ee1c2f10 	mrc	15, 0, r2, cr12, cr0, {0}
400296e8:	e2403008 	sub	r3, r0, #8
400296ec:	e0433001 	sub	r3, r3, r1
400296f0:	e0433002 	sub	r3, r3, r2
400296f4:	e1a03123 	lsr	r3, r3, #2
400296f8:	e21304ff 	ands	r0, r3, #-16777216	; 0xff000000
400296fc:	1a000005 	bne	40029718 <arm_install_handler+0x34>
40029700:	e38334ea 	orr	r3, r3, #-369098752	; 0xea000000
40029704:	e7813002 	str	r3, [r1, r2]
40029708:	ee070f15 	mcr	15, 0, r0, cr7, cr5, {0}
4002970c:	f57ff06f 	isb	sy
40029710:	e3a00001 	mov	r0, #1
40029714:	e12fff1e 	bx	lr
40029718:	e3a00000 	mov	r0, #0
4002971c:	e12fff1e 	bx	lr

40029720 <mmc_update_clk>:
40029720:	e59f2034 	ldr	r2, [pc, #52]	; 4002975c <mmc_update_clk+0x3c>
40029724:	e59f3034 	ldr	r3, [pc, #52]	; 40029760 <mmc_update_clk+0x40>
40029728:	e5832018 	str	r2, [r3, #24]
4002972c:	e3a02601 	mov	r2, #1048576	; 0x100000
40029730:	e5931018 	ldr	r1, [r3, #24]
40029734:	e3510000 	cmp	r1, #0
40029738:	aa000003 	bge	4002974c <mmc_update_clk+0x2c>
4002973c:	e2522001 	subs	r2, r2, #1
40029740:	1afffffa 	bne	40029730 <mmc_update_clk+0x10>
40029744:	e3e00000 	mvn	r0, #0
40029748:	e12fff1e 	bx	lr
4002974c:	e5932038 	ldr	r2, [r3, #56]	; 0x38
40029750:	e3a00000 	mov	r0, #0
40029754:	e5832038 	str	r2, [r3, #56]	; 0x38
40029758:	e12fff1e 	bx	lr
4002975c:	80202000 	eorhi	r2, r0, r0
40029760:	01c0f000 	biceq	pc, r0, r0

40029764 <mmc_set_ios>:
40029764:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40029768:	e1a05000 	mov	r5, r0
4002976c:	e5907044 	ldr	r7, [r0, #68]	; 0x44
40029770:	e3570000 	cmp	r7, #0
40029774:	0a000024 	beq	4002980c <mmc_set_ios+0xa8>
40029778:	e59f30b4 	ldr	r3, [pc, #180]	; 40029834 <mmc_set_ios+0xd0>
4002977c:	e59f60b4 	ldr	r6, [pc, #180]	; 40029838 <mmc_set_ios+0xd4>
40029780:	e5934004 	ldr	r4, [r3, #4]
40029784:	e3c42801 	bic	r2, r4, #65536	; 0x10000
40029788:	e5832004 	str	r2, [r3, #4]
4002978c:	ebffffe3 	bl	40029720 <mmc_update_clk>
40029790:	e3500000 	cmp	r0, #0
40029794:	0a000002 	beq	400297a4 <mmc_set_ios+0x40>
40029798:	e3a03001 	mov	r3, #1
4002979c:	e5863004 	str	r3, [r6, #4]
400297a0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400297a4:	e59f2090 	ldr	r2, [pc, #144]	; 4002983c <mmc_set_ios+0xd8>
400297a8:	e59f3090 	ldr	r3, [pc, #144]	; 40029840 <mmc_set_ios+0xdc>
400297ac:	e1570002 	cmp	r7, r2
400297b0:	e5830088 	str	r0, [r3, #136]	; 0x88
400297b4:	859f2088 	ldrhi	r2, [pc, #136]	; 40029844 <mmc_set_ios+0xe0>
400297b8:	95862000 	strls	r2, [r6]
400297bc:	959f2084 	ldrls	r2, [pc, #132]	; 40029848 <mmc_set_ios+0xe4>
400297c0:	85862000 	strhi	r2, [r6]
400297c4:	83a02001 	movhi	r2, #1
400297c8:	e5832088 	str	r2, [r3, #136]	; 0x88
400297cc:	e5932088 	ldr	r2, [r3, #136]	; 0x88
400297d0:	e3822102 	orr	r2, r2, #-2147483648	; 0x80000000
400297d4:	e5832088 	str	r2, [r3, #136]	; 0x88
400297d8:	e3c43801 	bic	r3, r4, #65536	; 0x10000
400297dc:	e59f4050 	ldr	r4, [pc, #80]	; 40029834 <mmc_set_ios+0xd0>
400297e0:	e3c330ff 	bic	r3, r3, #255	; 0xff
400297e4:	e5843004 	str	r3, [r4, #4]
400297e8:	ebffffcc 	bl	40029720 <mmc_update_clk>
400297ec:	e3500000 	cmp	r0, #0
400297f0:	1affffe8 	bne	40029798 <mmc_set_ios+0x34>
400297f4:	e5943004 	ldr	r3, [r4, #4]
400297f8:	e3833803 	orr	r3, r3, #196608	; 0x30000
400297fc:	e5843004 	str	r3, [r4, #4]
40029800:	ebffffc6 	bl	40029720 <mmc_update_clk>
40029804:	e3500000 	cmp	r0, #0
40029808:	1affffe2 	bne	40029798 <mmc_set_ios+0x34>
4002980c:	e5952040 	ldr	r2, [r5, #64]	; 0x40
40029810:	e59f301c 	ldr	r3, [pc, #28]	; 40029834 <mmc_set_ios+0xd0>
40029814:	e3520008 	cmp	r2, #8
40029818:	03a02002 	moveq	r2, #2
4002981c:	0a000002 	beq	4002982c <mmc_set_ios+0xc8>
40029820:	e3520004 	cmp	r2, #4
40029824:	03a02001 	moveq	r2, #1
40029828:	13a02000 	movne	r2, #0
4002982c:	e583200c 	str	r2, [r3, #12]
40029830:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40029834:	01c0f000 	biceq	pc, r0, r0
40029838:	4006c000 	andmi	ip, r6, r0
4002983c:	00061a80 	andeq	r1, r6, r0, lsl #21
40029840:	01c20000 	biceq	r0, r2, r0
40029844:	00b71b00 	adcseq	r1, r7, r0, lsl #22
40029848:	0002000f 	andeq	r0, r2, pc

4002984c <mmc_core_init>:
4002984c:	e92d4070 	push	{r4, r5, r6, lr}
40029850:	e3a03007 	mov	r3, #7
40029854:	e59f502c 	ldr	r5, [pc, #44]	; 40029888 <mmc_core_init+0x3c>
40029858:	e5853000 	str	r3, [r5]
4002985c:	e5954000 	ldr	r4, [r5]
40029860:	e2144007 	ands	r4, r4, #7
40029864:	1afffffc 	bne	4002985c <mmc_core_init+0x10>
40029868:	e3a06001 	mov	r6, #1
4002986c:	e5856078 	str	r6, [r5, #120]	; 0x78
40029870:	e1a00006 	mov	r0, r6
40029874:	e5854078 	str	r4, [r5, #120]	; 0x78
40029878:	eb000456 	bl	4002a9d8 <__msdelay>
4002987c:	e5856078 	str	r6, [r5, #120]	; 0x78
40029880:	e1a00004 	mov	r0, r4
40029884:	e8bd8070 	pop	{r4, r5, r6, pc}
40029888:	01c0f000 	biceq	pc, r0, r0

4002988c <mmc_send_cmd>:
4002988c:	e59f3268 	ldr	r3, [pc, #616]	; 40029afc <mmc_send_cmd+0x270>
40029890:	e5930004 	ldr	r0, [r3, #4]
40029894:	e3500000 	cmp	r0, #0
40029898:	1a00008f 	bne	40029adc <mmc_send_cmd+0x250>
4002989c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400298a0:	e591e000 	ldr	lr, [r1]
400298a4:	e35e000c 	cmp	lr, #12
400298a8:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
400298ac:	e5915004 	ldr	r5, [r1, #4]
400298b0:	e35e0000 	cmp	lr, #0
400298b4:	e59f3244 	ldr	r3, [pc, #580]	; 40029b00 <mmc_send_cmd+0x274>
400298b8:	13a03102 	movne	r3, #-2147483648	; 0x80000000
400298bc:	e3150001 	tst	r5, #1
400298c0:	13833040 	orrne	r3, r3, #64	; 0x40
400298c4:	e2154002 	ands	r4, r5, #2
400298c8:	13833080 	orrne	r3, r3, #128	; 0x80
400298cc:	e3150004 	tst	r5, #4
400298d0:	13833c01 	orrne	r3, r3, #256	; 0x100
400298d4:	e3520000 	cmp	r2, #0
400298d8:	0a00000e 	beq	40029918 <mmc_send_cmd+0x8c>
400298dc:	e592c000 	ldr	ip, [r2]
400298e0:	e31c0003 	tst	ip, #3
400298e4:	1a000041 	bne	400299f0 <mmc_send_cmd+0x164>
400298e8:	e592c004 	ldr	ip, [r2, #4]
400298ec:	e592700c 	ldr	r7, [r2, #12]
400298f0:	e59f620c 	ldr	r6, [pc, #524]	; 40029b04 <mmc_send_cmd+0x278>
400298f4:	e31c0002 	tst	ip, #2
400298f8:	e592c008 	ldr	ip, [r2, #8]
400298fc:	03833c22 	orreq	r3, r3, #8704	; 0x2200
40029900:	e5867010 	str	r7, [r6, #16]
40029904:	13833c26 	orrne	r3, r3, #9728	; 0x2600
40029908:	e35c0001 	cmp	ip, #1
4002990c:	83833a01 	orrhi	r3, r3, #4096	; 0x1000
40029910:	e00c0c97 	mul	ip, r7, ip
40029914:	e586c014 	str	ip, [r6, #20]
40029918:	e5916008 	ldr	r6, [r1, #8]
4002991c:	e20ee03f 	and	lr, lr, #63	; 0x3f
40029920:	e59fc1dc 	ldr	ip, [pc, #476]	; 40029b04 <mmc_send_cmd+0x278>
40029924:	e3520000 	cmp	r2, #0
40029928:	e18e3003 	orr	r3, lr, r3
4002992c:	e58c601c 	str	r6, [ip, #28]
40029930:	058c3018 	streq	r3, [ip, #24]
40029934:	0a000022 	beq	400299c4 <mmc_send_cmd+0x138>
40029938:	e59ce000 	ldr	lr, [ip]
4002993c:	e5927008 	ldr	r7, [r2, #8]
40029940:	e5926000 	ldr	r6, [r2]
40029944:	e38ee102 	orr	lr, lr, #-2147483648	; 0x80000000
40029948:	e58ce000 	str	lr, [ip]
4002994c:	e592e00c 	ldr	lr, [r2, #12]
40029950:	e58c3018 	str	r3, [ip, #24]
40029954:	e5923004 	ldr	r3, [r2, #4]
40029958:	e00e0e97 	mul	lr, r7, lr
4002995c:	e2133001 	ands	r3, r3, #1
40029960:	e1a0e12e 	lsr	lr, lr, #2
40029964:	1a000014 	bne	400299bc <mmc_send_cmd+0x130>
40029968:	e153000e 	cmp	r3, lr
4002996c:	0a000014 	beq	400299c4 <mmc_send_cmd+0x138>
40029970:	e3e004ff 	mvn	r0, #-16777216	; 0xff000000
40029974:	e2500001 	subs	r0, r0, #1
40029978:	0a000059 	beq	40029ae4 <mmc_send_cmd+0x258>
4002997c:	e59c703c 	ldr	r7, [ip, #60]	; 0x3c
40029980:	e3170008 	tst	r7, #8
40029984:	1afffffa 	bne	40029974 <mmc_send_cmd+0xe8>
40029988:	e7960103 	ldr	r0, [r6, r3, lsl #2]
4002998c:	e2833001 	add	r3, r3, #1
40029990:	e58c0200 	str	r0, [ip, #512]	; 0x200
40029994:	eafffff3 	b	40029968 <mmc_send_cmd+0xdc>
40029998:	e3e034ff 	mvn	r3, #-16777216	; 0xff000000
4002999c:	e2533001 	subs	r3, r3, #1
400299a0:	0a00004f 	beq	40029ae4 <mmc_send_cmd+0x258>
400299a4:	e59c703c 	ldr	r7, [ip, #60]	; 0x3c
400299a8:	e3170004 	tst	r7, #4
400299ac:	1afffffa 	bne	4002999c <mmc_send_cmd+0x110>
400299b0:	e59c3200 	ldr	r3, [ip, #512]	; 0x200
400299b4:	e7863100 	str	r3, [r6, r0, lsl #2]
400299b8:	e2800001 	add	r0, r0, #1
400299bc:	e150000e 	cmp	r0, lr
400299c0:	1afffff4 	bne	40029998 <mmc_send_cmd+0x10c>
400299c4:	e59fe138 	ldr	lr, [pc, #312]	; 40029b04 <mmc_send_cmd+0x278>
400299c8:	e3a00401 	mov	r0, #16777216	; 0x1000000
400299cc:	e59ec038 	ldr	ip, [lr, #56]	; 0x38
400299d0:	e2500001 	subs	r0, r0, #1
400299d4:	e30b3bc2 	movw	r3, #48066	; 0xbbc2
400299d8:	e003300c 	and	r3, r3, ip
400299dc:	0a000001 	beq	400299e8 <mmc_send_cmd+0x15c>
400299e0:	e3530000 	cmp	r3, #0
400299e4:	0a00000f 	beq	40029a28 <mmc_send_cmd+0x19c>
400299e8:	e2534000 	subs	r4, r3, #0
400299ec:	1a000000 	bne	400299f4 <mmc_send_cmd+0x168>
400299f0:	e3e04000 	mvn	r4, #0
400299f4:	e59f5108 	ldr	r5, [pc, #264]	; 40029b04 <mmc_send_cmd+0x278>
400299f8:	e3a03007 	mov	r3, #7
400299fc:	e5853000 	str	r3, [r5]
40029a00:	e5953000 	ldr	r3, [r5]
40029a04:	e3130007 	tst	r3, #7
40029a08:	1afffffc 	bne	40029a00 <mmc_send_cmd+0x174>
40029a0c:	ebffff43 	bl	40029720 <mmc_update_clk>
40029a10:	e2540000 	subs	r0, r4, #0
40029a14:	e3e03000 	mvn	r3, #0
40029a18:	e5853038 	str	r3, [r5, #56]	; 0x38
40029a1c:	13a00001 	movne	r0, #1
40029a20:	e2600000 	rsb	r0, r0, #0
40029a24:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40029a28:	e31c0004 	tst	ip, #4
40029a2c:	0affffe6 	beq	400299cc <mmc_send_cmd+0x140>
40029a30:	e3520000 	cmp	r2, #0
40029a34:	0a00000e 	beq	40029a74 <mmc_send_cmd+0x1e8>
40029a38:	e59fe0c4 	ldr	lr, [pc, #196]	; 40029b04 <mmc_send_cmd+0x278>
40029a3c:	e3a0c801 	mov	ip, #65536	; 0x10000
40029a40:	e59e0038 	ldr	r0, [lr, #56]	; 0x38
40029a44:	e25cc001 	subs	ip, ip, #1
40029a48:	e30b3bc2 	movw	r3, #48066	; 0xbbc2
40029a4c:	e0033000 	and	r3, r3, r0
40029a50:	0affffe4 	beq	400299e8 <mmc_send_cmd+0x15c>
40029a54:	e3530000 	cmp	r3, #0
40029a58:	1affffe2 	bne	400299e8 <mmc_send_cmd+0x15c>
40029a5c:	e5923008 	ldr	r3, [r2, #8]
40029a60:	e3530001 	cmp	r3, #1
40029a64:	82000901 	andhi	r0, r0, #16384	; 0x4000
40029a68:	92000008 	andls	r0, r0, #8
40029a6c:	e3500000 	cmp	r0, #0
40029a70:	0afffff2 	beq	40029a40 <mmc_send_cmd+0x1b4>
40029a74:	e3150008 	tst	r5, #8
40029a78:	0a000006 	beq	40029a98 <mmc_send_cmd+0x20c>
40029a7c:	e59f0080 	ldr	r0, [pc, #128]	; 40029b04 <mmc_send_cmd+0x278>
40029a80:	e3a03405 	mov	r3, #83886080	; 0x5000000
40029a84:	e590203c 	ldr	r2, [r0, #60]	; 0x3c
40029a88:	e2533001 	subs	r3, r3, #1
40029a8c:	0affffd7 	beq	400299f0 <mmc_send_cmd+0x164>
40029a90:	e3120c02 	tst	r2, #512	; 0x200
40029a94:	1afffffa 	bne	40029a84 <mmc_send_cmd+0x1f8>
40029a98:	e59f3064 	ldr	r3, [pc, #100]	; 40029b04 <mmc_send_cmd+0x278>
40029a9c:	e3540000 	cmp	r4, #0
40029aa0:	05932020 	ldreq	r2, [r3, #32]
40029aa4:	0581200c 	streq	r2, [r1, #12]
40029aa8:	0a000007 	beq	40029acc <mmc_send_cmd+0x240>
40029aac:	e593202c 	ldr	r2, [r3, #44]	; 0x2c
40029ab0:	e581200c 	str	r2, [r1, #12]
40029ab4:	e5932028 	ldr	r2, [r3, #40]	; 0x28
40029ab8:	e5812010 	str	r2, [r1, #16]
40029abc:	e5932024 	ldr	r2, [r3, #36]	; 0x24
40029ac0:	e5812014 	str	r2, [r1, #20]
40029ac4:	e5932020 	ldr	r2, [r3, #32]
40029ac8:	e5812018 	str	r2, [r1, #24]
40029acc:	e3e02000 	mvn	r2, #0
40029ad0:	e3a00000 	mov	r0, #0
40029ad4:	e5832038 	str	r2, [r3, #56]	; 0x38
40029ad8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40029adc:	e3e00000 	mvn	r0, #0
40029ae0:	e12fff1e 	bx	lr
40029ae4:	e59f3018 	ldr	r3, [pc, #24]	; 40029b04 <mmc_send_cmd+0x278>
40029ae8:	e30b4bc2 	movw	r4, #48066	; 0xbbc2
40029aec:	e5933038 	ldr	r3, [r3, #56]	; 0x38
40029af0:	e0134004 	ands	r4, r3, r4
40029af4:	0affffbd 	beq	400299f0 <mmc_send_cmd+0x164>
40029af8:	eaffffbd 	b	400299f4 <mmc_send_cmd+0x168>
40029afc:	4006c000 	andmi	ip, r6, r0
40029b00:	80008000 	andhi	r8, r0, r0
40029b04:	01c0f000 	biceq	pc, r0, r0

40029b08 <mmc_send_cmd>:
40029b08:	e5903098 	ldr	r3, [r0, #152]	; 0x98
40029b0c:	e12fff13 	bx	r3

40029b10 <mmc_send_status>:
40029b10:	e92d40f0 	push	{r4, r5, r6, r7, lr}
40029b14:	e1a06000 	mov	r6, r0
40029b18:	e59f7084 	ldr	r7, [pc, #132]	; 40029ba4 <mmc_send_status+0x94>
40029b1c:	e24dd024 	sub	sp, sp, #36	; 0x24
40029b20:	e1d637bc 	ldrh	r3, [r6, #124]	; 0x7c
40029b24:	e1a05001 	mov	r5, r1
40029b28:	e3a0000d 	mov	r0, #13
40029b2c:	e3a01015 	mov	r1, #21
40029b30:	e1a03803 	lsl	r3, r3, #16
40029b34:	e58d3008 	str	r3, [sp, #8]
40029b38:	e3a03000 	mov	r3, #0
40029b3c:	e1cd00f0 	strd	r0, [sp]
40029b40:	e58d301c 	str	r3, [sp, #28]
40029b44:	e3a02000 	mov	r2, #0
40029b48:	e1a0100d 	mov	r1, sp
40029b4c:	e1a00006 	mov	r0, r6
40029b50:	ebffffec 	bl	40029b08 <mmc_send_cmd>
40029b54:	e2504000 	subs	r4, r0, #0
40029b58:	1a000009 	bne	40029b84 <mmc_send_status+0x74>
40029b5c:	e59d300c 	ldr	r3, [sp, #12]
40029b60:	e3130c01 	tst	r3, #256	; 0x100
40029b64:	1a000009 	bne	40029b90 <mmc_send_status+0x80>
40029b68:	e3a00001 	mov	r0, #1
40029b6c:	eb000399 	bl	4002a9d8 <__msdelay>
40029b70:	e59d300c 	ldr	r3, [sp, #12]
40029b74:	e1130007 	tst	r3, r7
40029b78:	1a000007 	bne	40029b9c <mmc_send_status+0x8c>
40029b7c:	e2555001 	subs	r5, r5, #1
40029b80:	2affffef 	bcs	40029b44 <mmc_send_status+0x34>
40029b84:	e1a00004 	mov	r0, r4
40029b88:	e28dd024 	add	sp, sp, #36	; 0x24
40029b8c:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
40029b90:	e3550000 	cmp	r5, #0
40029b94:	03e04012 	mvneq	r4, #18
40029b98:	eafffff9 	b	40029b84 <mmc_send_status+0x74>
40029b9c:	e3e04011 	mvn	r4, #17
40029ba0:	eafffff7 	b	40029b84 <mmc_send_status+0x74>
40029ba4:	fdf94080 	ldc2l	0, cr4, [r9, #512]!	; 0x200

40029ba8 <find_mmc_device>:
40029ba8:	e59f3004 	ldr	r3, [pc, #4]	; 40029bb4 <find_mmc_device+0xc>
40029bac:	e7930100 	ldr	r0, [r3, r0, lsl #2]
40029bb0:	e12fff1e 	bx	lr
40029bb4:	4006c0c0 	andmi	ip, r6, r0, asr #1

40029bb8 <mmc_read_blocks>:
40029bb8:	e92d4030 	push	{r4, r5, lr}
40029bbc:	e3530002 	cmp	r3, #2
40029bc0:	e24dd034 	sub	sp, sp, #52	; 0x34
40029bc4:	e1a04003 	mov	r4, r3
40029bc8:	33a03011 	movcc	r3, #17
40029bcc:	23a03012 	movcs	r3, #18
40029bd0:	e58d3010 	str	r3, [sp, #16]
40029bd4:	e1a05000 	mov	r5, r0
40029bd8:	e5903084 	ldr	r3, [r0, #132]	; 0x84
40029bdc:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
40029be0:	e58d1000 	str	r1, [sp]
40029be4:	e28d1010 	add	r1, sp, #16
40029be8:	e58d300c 	str	r3, [sp, #12]
40029bec:	e3500000 	cmp	r0, #0
40029bf0:	00020293 	muleq	r2, r3, r2
40029bf4:	e58d4008 	str	r4, [sp, #8]
40029bf8:	e3a03001 	mov	r3, #1
40029bfc:	e58d2018 	str	r2, [sp, #24]
40029c00:	e3a02015 	mov	r2, #21
40029c04:	e58d2014 	str	r2, [sp, #20]
40029c08:	e3a02000 	mov	r2, #0
40029c0c:	e58d202c 	str	r2, [sp, #44]	; 0x2c
40029c10:	e1a00005 	mov	r0, r5
40029c14:	e58d3004 	str	r3, [sp, #4]
40029c18:	e1a0200d 	mov	r2, sp
40029c1c:	ebffffb9 	bl	40029b08 <mmc_send_cmd>
40029c20:	e2502000 	subs	r2, r0, #0
40029c24:	0a000002 	beq	40029c34 <mmc_read_blocks+0x7c>
40029c28:	e3a00000 	mov	r0, #0
40029c2c:	e28dd034 	add	sp, sp, #52	; 0x34
40029c30:	e8bd8030 	pop	{r4, r5, pc}
40029c34:	e3540001 	cmp	r4, #1
40029c38:	9a00000d 	bls	40029c74 <mmc_read_blocks+0xbc>
40029c3c:	e58d2018 	str	r2, [sp, #24]
40029c40:	e3a0300c 	mov	r3, #12
40029c44:	e58d3010 	str	r3, [sp, #16]
40029c48:	e28d1010 	add	r1, sp, #16
40029c4c:	e58d202c 	str	r2, [sp, #44]	; 0x2c
40029c50:	e3a0301d 	mov	r3, #29
40029c54:	e58d3014 	str	r3, [sp, #20]
40029c58:	e1a00005 	mov	r0, r5
40029c5c:	ebffffa9 	bl	40029b08 <mmc_send_cmd>
40029c60:	e3500000 	cmp	r0, #0
40029c64:	1affffef 	bne	40029c28 <mmc_read_blocks+0x70>
40029c68:	e3a01ffa 	mov	r1, #1000	; 0x3e8
40029c6c:	e1a00005 	mov	r0, r5
40029c70:	ebffffa6 	bl	40029b10 <mmc_send_status>
40029c74:	e1a00004 	mov	r0, r4
40029c78:	eaffffeb 	b	40029c2c <mmc_read_blocks+0x74>

40029c7c <mmc_go_idle>:
40029c7c:	e92d4010 	push	{r4, lr}
40029c80:	e1a04000 	mov	r4, r0
40029c84:	e24dd020 	sub	sp, sp, #32
40029c88:	e3a00001 	mov	r0, #1
40029c8c:	eb000351 	bl	4002a9d8 <__msdelay>
40029c90:	e3a02000 	mov	r2, #0
40029c94:	e1a00004 	mov	r0, r4
40029c98:	e58d2000 	str	r2, [sp]
40029c9c:	e1a0100d 	mov	r1, sp
40029ca0:	e58d2008 	str	r2, [sp, #8]
40029ca4:	e58d2004 	str	r2, [sp, #4]
40029ca8:	e58d201c 	str	r2, [sp, #28]
40029cac:	ebffff95 	bl	40029b08 <mmc_send_cmd>
40029cb0:	e2504000 	subs	r4, r0, #0
40029cb4:	1a000001 	bne	40029cc0 <mmc_go_idle+0x44>
40029cb8:	e3a00002 	mov	r0, #2
40029cbc:	eb000345 	bl	4002a9d8 <__msdelay>
40029cc0:	e1a00004 	mov	r0, r4
40029cc4:	e28dd020 	add	sp, sp, #32
40029cc8:	e8bd8010 	pop	{r4, pc}

40029ccc <sd_send_op_cond>:
40029ccc:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
40029cd0:	e1a09000 	mov	r9, r0
40029cd4:	e59f7124 	ldr	r7, [pc, #292]	; 40029e00 <sd_send_op_cond+0x134>
40029cd8:	e24dd024 	sub	sp, sp, #36	; 0x24
40029cdc:	e59f8120 	ldr	r8, [pc, #288]	; 40029e04 <sd_send_op_cond+0x138>
40029ce0:	e3a05ffa 	mov	r5, #1000	; 0x3e8
40029ce4:	e3a06037 	mov	r6, #55	; 0x37
40029ce8:	e58d6000 	str	r6, [sp]
40029cec:	e3a02000 	mov	r2, #0
40029cf0:	e58d2008 	str	r2, [sp, #8]
40029cf4:	e3a03015 	mov	r3, #21
40029cf8:	e58d3004 	str	r3, [sp, #4]
40029cfc:	e1a0100d 	mov	r1, sp
40029d00:	e58d201c 	str	r2, [sp, #28]
40029d04:	e1a00009 	mov	r0, r9
40029d08:	ebffff7e 	bl	40029b08 <mmc_send_cmd>
40029d0c:	e2504000 	subs	r4, r0, #0
40029d10:	1a00002a 	bne	40029dc0 <sd_send_op_cond+0xf4>
40029d14:	e599304c 	ldr	r3, [r9, #76]	; 0x4c
40029d18:	e3a00029 	mov	r0, #41	; 0x29
40029d1c:	e3a01001 	mov	r1, #1
40029d20:	e3a02000 	mov	r2, #0
40029d24:	e3130b01 	tst	r3, #1024	; 0x400
40029d28:	e5993028 	ldr	r3, [r9, #40]	; 0x28
40029d2c:	05994024 	ldreq	r4, [r9, #36]	; 0x24
40029d30:	e1cd00f0 	strd	r0, [sp]
40029d34:	00044007 	andeq	r4, r4, r7
40029d38:	e1a0100d 	mov	r1, sp
40029d3c:	e1530008 	cmp	r3, r8
40029d40:	e1a00009 	mov	r0, r9
40029d44:	e58d4008 	str	r4, [sp, #8]
40029d48:	03844101 	orreq	r4, r4, #1073741824	; 0x40000000
40029d4c:	058d4008 	streq	r4, [sp, #8]
40029d50:	ebffff6c 	bl	40029b08 <mmc_send_cmd>
40029d54:	e2504000 	subs	r4, r0, #0
40029d58:	1a000018 	bne	40029dc0 <sd_send_op_cond+0xf4>
40029d5c:	e3a00001 	mov	r0, #1
40029d60:	eb00031c 	bl	4002a9d8 <__msdelay>
40029d64:	e59d300c 	ldr	r3, [sp, #12]
40029d68:	e3530000 	cmp	r3, #0
40029d6c:	ba000003 	blt	40029d80 <sd_send_op_cond+0xb4>
40029d70:	e2555001 	subs	r5, r5, #1
40029d74:	2affffdb 	bcs	40029ce8 <sd_send_op_cond+0x1c>
40029d78:	e3e04010 	mvn	r4, #16
40029d7c:	ea00000f 	b	40029dc0 <sd_send_op_cond+0xf4>
40029d80:	e3550000 	cmp	r5, #0
40029d84:	0afffffb 	beq	40029d78 <sd_send_op_cond+0xac>
40029d88:	e59f3074 	ldr	r3, [pc, #116]	; 40029e04 <sd_send_op_cond+0x138>
40029d8c:	e5992028 	ldr	r2, [r9, #40]	; 0x28
40029d90:	e1520003 	cmp	r2, r3
40029d94:	12433010 	subne	r3, r3, #16
40029d98:	15893028 	strne	r3, [r9, #40]	; 0x28
40029d9c:	e599304c 	ldr	r3, [r9, #76]	; 0x4c
40029da0:	e3130b01 	tst	r3, #1024	; 0x400
40029da4:	1a000008 	bne	40029dcc <sd_send_op_cond+0x100>
40029da8:	e59d300c 	ldr	r3, [sp, #12]
40029dac:	e5893050 	str	r3, [r9, #80]	; 0x50
40029db0:	e7e03f53 	ubfx	r3, r3, #30, #1
40029db4:	e589303c 	str	r3, [r9, #60]	; 0x3c
40029db8:	e3a03000 	mov	r3, #0
40029dbc:	e1c937bc 	strh	r3, [r9, #124]	; 0x7c
40029dc0:	e1a00004 	mov	r0, r4
40029dc4:	e28dd024 	add	sp, sp, #36	; 0x24
40029dc8:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
40029dcc:	e3a0003a 	mov	r0, #58	; 0x3a
40029dd0:	e3a01001 	mov	r1, #1
40029dd4:	e3a02000 	mov	r2, #0
40029dd8:	e1cd00f0 	strd	r0, [sp]
40029ddc:	e58d2008 	str	r2, [sp, #8]
40029de0:	e1a0100d 	mov	r1, sp
40029de4:	e58d201c 	str	r2, [sp, #28]
40029de8:	e1a00009 	mov	r0, r9
40029dec:	ebffff45 	bl	40029b08 <mmc_send_cmd>
40029df0:	e3500000 	cmp	r0, #0
40029df4:	11a04000 	movne	r4, r0
40029df8:	0affffea 	beq	40029da8 <sd_send_op_cond+0xdc>
40029dfc:	eaffffef 	b	40029dc0 <sd_send_op_cond+0xf4>
40029e00:	00ff8000 	rscseq	r8, pc, r0
40029e04:	00020020 	andeq	r0, r2, r0, lsr #32

40029e08 <mmc_send_op_cond>:
40029e08:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
40029e0c:	e24dd024 	sub	sp, sp, #36	; 0x24
40029e10:	e1a05000 	mov	r5, r0
40029e14:	ebffff98 	bl	40029c7c <mmc_go_idle>
40029e18:	e59f3128 	ldr	r3, [pc, #296]	; 40029f48 <mmc_send_op_cond+0x140>
40029e1c:	e3a06001 	mov	r6, #1
40029e20:	e58d6000 	str	r6, [sp]
40029e24:	e3a02000 	mov	r2, #0
40029e28:	e58d6004 	str	r6, [sp, #4]
40029e2c:	e1a0100d 	mov	r1, sp
40029e30:	e58d3008 	str	r3, [sp, #8]
40029e34:	e1a00005 	mov	r0, r5
40029e38:	e58d201c 	str	r2, [sp, #28]
40029e3c:	ebffff31 	bl	40029b08 <mmc_send_cmd>
40029e40:	e2504000 	subs	r4, r0, #0
40029e44:	1a00002f 	bne	40029f08 <mmc_send_op_cond+0x100>
40029e48:	e59f80fc 	ldr	r8, [pc, #252]	; 40029f4c <mmc_send_op_cond+0x144>
40029e4c:	e1a00006 	mov	r0, r6
40029e50:	e3029710 	movw	r9, #10000	; 0x2710
40029e54:	e1a07004 	mov	r7, r4
40029e58:	eb0002de 	bl	4002a9d8 <__msdelay>
40029e5c:	e595104c 	ldr	r1, [r5, #76]	; 0x4c
40029e60:	e1a00005 	mov	r0, r5
40029e64:	e58d6000 	str	r6, [sp]
40029e68:	e58d6004 	str	r6, [sp, #4]
40029e6c:	e3110b01 	tst	r1, #1024	; 0x400
40029e70:	e58d701c 	str	r7, [sp, #28]
40029e74:	13a03000 	movne	r3, #0
40029e78:	059d200c 	ldreq	r2, [sp, #12]
40029e7c:	05953024 	ldreq	r3, [r5, #36]	; 0x24
40029e80:	00033002 	andeq	r3, r3, r2
40029e84:	02022206 	andeq	r2, r2, #1610612736	; 0x60000000
40029e88:	00033008 	andeq	r3, r3, r8
40029e8c:	01833002 	orreq	r3, r3, r2
40029e90:	e3110b02 	tst	r1, #2048	; 0x800
40029e94:	13833101 	orrne	r3, r3, #1073741824	; 0x40000000
40029e98:	e3a02000 	mov	r2, #0
40029e9c:	e58d3008 	str	r3, [sp, #8]
40029ea0:	e1a0100d 	mov	r1, sp
40029ea4:	ebffff17 	bl	40029b08 <mmc_send_cmd>
40029ea8:	e2504000 	subs	r4, r0, #0
40029eac:	1a000015 	bne	40029f08 <mmc_send_op_cond+0x100>
40029eb0:	e3a00001 	mov	r0, #1
40029eb4:	eb0002c7 	bl	4002a9d8 <__msdelay>
40029eb8:	e59d300c 	ldr	r3, [sp, #12]
40029ebc:	e3530000 	cmp	r3, #0
40029ec0:	ba000003 	blt	40029ed4 <mmc_send_op_cond+0xcc>
40029ec4:	e2599001 	subs	r9, r9, #1
40029ec8:	2affffe3 	bcs	40029e5c <mmc_send_op_cond+0x54>
40029ecc:	e3e04010 	mvn	r4, #16
40029ed0:	ea00000c 	b	40029f08 <mmc_send_op_cond+0x100>
40029ed4:	e3590000 	cmp	r9, #0
40029ed8:	0afffffb 	beq	40029ecc <mmc_send_op_cond+0xc4>
40029edc:	e595304c 	ldr	r3, [r5, #76]	; 0x4c
40029ee0:	e3130b01 	tst	r3, #1024	; 0x400
40029ee4:	1a00000a 	bne	40029f14 <mmc_send_op_cond+0x10c>
40029ee8:	e3a03801 	mov	r3, #65536	; 0x10000
40029eec:	e5853028 	str	r3, [r5, #40]	; 0x28
40029ef0:	e59d300c 	ldr	r3, [sp, #12]
40029ef4:	e5853050 	str	r3, [r5, #80]	; 0x50
40029ef8:	e7e03f53 	ubfx	r3, r3, #30, #1
40029efc:	e585303c 	str	r3, [r5, #60]	; 0x3c
40029f00:	e3a03001 	mov	r3, #1
40029f04:	e1c537bc 	strh	r3, [r5, #124]	; 0x7c
40029f08:	e1a00004 	mov	r0, r4
40029f0c:	e28dd024 	add	sp, sp, #36	; 0x24
40029f10:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
40029f14:	e58d4008 	str	r4, [sp, #8]
40029f18:	e3a0003a 	mov	r0, #58	; 0x3a
40029f1c:	e58d401c 	str	r4, [sp, #28]
40029f20:	e3a01001 	mov	r1, #1
40029f24:	e1cd00f0 	strd	r0, [sp]
40029f28:	e1a02004 	mov	r2, r4
40029f2c:	e1a0100d 	mov	r1, sp
40029f30:	e1a00005 	mov	r0, r5
40029f34:	ebfffef3 	bl	40029b08 <mmc_send_cmd>
40029f38:	e3500000 	cmp	r0, #0
40029f3c:	11a04000 	movne	r4, r0
40029f40:	0affffe8 	beq	40029ee8 <mmc_send_op_cond+0xe0>
40029f44:	eaffffef 	b	40029f08 <mmc_send_op_cond+0x100>
40029f48:	40ff8000 	rscsmi	r8, pc, r0
40029f4c:	007fff80 	rsbseq	pc, pc, r0, lsl #31

40029f50 <mmc_send_ext_csd>:
40029f50:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40029f54:	e24dd034 	sub	sp, sp, #52	; 0x34
40029f58:	e3a02008 	mov	r2, #8
40029f5c:	e3a03015 	mov	r3, #21
40029f60:	e1cd21f0 	strd	r2, [sp, #16]
40029f64:	e58d1000 	str	r1, [sp]
40029f68:	e3a03000 	mov	r3, #0
40029f6c:	e58d3018 	str	r3, [sp, #24]
40029f70:	e3a02c02 	mov	r2, #512	; 0x200
40029f74:	e58d302c 	str	r3, [sp, #44]	; 0x2c
40029f78:	e28d1010 	add	r1, sp, #16
40029f7c:	e58d200c 	str	r2, [sp, #12]
40029f80:	e3a03001 	mov	r3, #1
40029f84:	e58d3008 	str	r3, [sp, #8]
40029f88:	e1a0200d 	mov	r2, sp
40029f8c:	e58d3004 	str	r3, [sp, #4]
40029f90:	ebfffedc 	bl	40029b08 <mmc_send_cmd>
40029f94:	e28dd034 	add	sp, sp, #52	; 0x34
40029f98:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

40029f9c <mmc_switch>:
40029f9c:	e92d4030 	push	{r4, r5, lr}
40029fa0:	e24dd024 	sub	sp, sp, #36	; 0x24
40029fa4:	e1a03403 	lsl	r3, r3, #8
40029fa8:	e3a0c01d 	mov	ip, #29
40029fac:	e3a01006 	mov	r1, #6
40029fb0:	e1a05000 	mov	r5, r0
40029fb4:	e1833802 	orr	r3, r3, r2, lsl #16
40029fb8:	e3a02000 	mov	r2, #0
40029fbc:	e58d201c 	str	r2, [sp, #28]
40029fc0:	e3833403 	orr	r3, r3, #50331648	; 0x3000000
40029fc4:	e88d1002 	stm	sp, {r1, ip}
40029fc8:	e58d3008 	str	r3, [sp, #8]
40029fcc:	e1a0100d 	mov	r1, sp
40029fd0:	ebfffecc 	bl	40029b08 <mmc_send_cmd>
40029fd4:	e1a04000 	mov	r4, r0
40029fd8:	e3a01ffa 	mov	r1, #1000	; 0x3e8
40029fdc:	e1a00005 	mov	r0, r5
40029fe0:	ebfffeca 	bl	40029b10 <mmc_send_status>
40029fe4:	e1a00004 	mov	r0, r4
40029fe8:	e28dd024 	add	sp, sp, #36	; 0x24
40029fec:	e8bd8030 	pop	{r4, r5, pc}

40029ff0 <mmc_change_freq.part.0>:
40029ff0:	e92d4070 	push	{r4, r5, r6, lr}
40029ff4:	e3a03c01 	mov	r3, #256	; 0x100
40029ff8:	e5803048 	str	r3, [r0, #72]	; 0x48
40029ffc:	e24ddc02 	sub	sp, sp, #512	; 0x200
4002a000:	e1a0100d 	mov	r1, sp
4002a004:	e1a04000 	mov	r4, r0
4002a008:	ebffffd0 	bl	40029f50 <mmc_send_ext_csd>
4002a00c:	e3500000 	cmp	r0, #0
4002a010:	1a00000a 	bne	4002a040 <mmc_change_freq.part.0+0x50>
4002a014:	e5dd60c4 	ldrb	r6, [sp, #196]	; 0xc4
4002a018:	e3a05006 	mov	r5, #6
4002a01c:	e3a03001 	mov	r3, #1
4002a020:	e3a020b9 	mov	r2, #185	; 0xb9
4002a024:	e1a01003 	mov	r1, r3
4002a028:	e1a00004 	mov	r0, r4
4002a02c:	ebffffda 	bl	40029f9c <mmc_switch>
4002a030:	e3500000 	cmp	r0, #0
4002a034:	0a000003 	beq	4002a048 <mmc_change_freq.part.0+0x58>
4002a038:	e2555001 	subs	r5, r5, #1
4002a03c:	1afffff6 	bne	4002a01c <mmc_change_freq.part.0+0x2c>
4002a040:	e28ddc02 	add	sp, sp, #512	; 0x200
4002a044:	e8bd8070 	pop	{r4, r5, r6, pc}
4002a048:	e1a0100d 	mov	r1, sp
4002a04c:	e1a00004 	mov	r0, r4
4002a050:	ebffffbe 	bl	40029f50 <mmc_send_ext_csd>
4002a054:	e3500000 	cmp	r0, #0
4002a058:	1afffff8 	bne	4002a040 <mmc_change_freq.part.0+0x50>
4002a05c:	e5dd30b9 	ldrb	r3, [sp, #185]	; 0xb9
4002a060:	e3530000 	cmp	r3, #0
4002a064:	0afffff5 	beq	4002a040 <mmc_change_freq.part.0+0x50>
4002a068:	e5943048 	ldr	r3, [r4, #72]	; 0x48
4002a06c:	e3160002 	tst	r6, #2
4002a070:	13833011 	orrne	r3, r3, #17
4002a074:	03833001 	orreq	r3, r3, #1
4002a078:	e5843048 	str	r3, [r4, #72]	; 0x48
4002a07c:	eaffffef 	b	4002a040 <mmc_change_freq.part.0+0x50>

4002a080 <mmc_change_freq>:
4002a080:	e3a02000 	mov	r2, #0
4002a084:	e5802048 	str	r2, [r0, #72]	; 0x48
4002a088:	e590204c 	ldr	r2, [r0, #76]	; 0x4c
4002a08c:	e3120b01 	tst	r2, #1024	; 0x400
4002a090:	1a000004 	bne	4002a0a8 <mmc_change_freq+0x28>
4002a094:	e5902028 	ldr	r2, [r0, #40]	; 0x28
4002a098:	e59f3010 	ldr	r3, [pc, #16]	; 4002a0b0 <mmc_change_freq+0x30>
4002a09c:	e1520003 	cmp	r2, r3
4002a0a0:	9a000000 	bls	4002a0a8 <mmc_change_freq+0x28>
4002a0a4:	eaffffd1 	b	40029ff0 <mmc_change_freq.part.0>
4002a0a8:	e3a00000 	mov	r0, #0
4002a0ac:	e12fff1e 	bx	lr
4002a0b0:	0001003f 	andeq	r0, r1, pc, lsr r0

4002a0b4 <sd_switch>:
4002a0b4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4002a0b8:	e24dd034 	sub	sp, sp, #52	; 0x34
4002a0bc:	e1a02102 	lsl	r2, r2, #2
4002a0c0:	e3a0c006 	mov	ip, #6
4002a0c4:	e58dc010 	str	ip, [sp, #16]
4002a0c8:	e3a0c015 	mov	ip, #21
4002a0cc:	e58dc014 	str	ip, [sp, #20]
4002a0d0:	e3e0c4ff 	mvn	ip, #-16777216	; 0xff000000
4002a0d4:	e18ccf81 	orr	ip, ip, r1, lsl #31
4002a0d8:	e3a0100f 	mov	r1, #15
4002a0dc:	e1ccc211 	bic	ip, ip, r1, lsl r2
4002a0e0:	e28d1010 	add	r1, sp, #16
4002a0e4:	e18cc213 	orr	ip, ip, r3, lsl r2
4002a0e8:	e3a03000 	mov	r3, #0
4002a0ec:	e58d302c 	str	r3, [sp, #44]	; 0x2c
4002a0f0:	e1a0200d 	mov	r2, sp
4002a0f4:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
4002a0f8:	e58dc018 	str	ip, [sp, #24]
4002a0fc:	e58d3000 	str	r3, [sp]
4002a100:	e3a03040 	mov	r3, #64	; 0x40
4002a104:	e58d300c 	str	r3, [sp, #12]
4002a108:	e3a03001 	mov	r3, #1
4002a10c:	e58d3008 	str	r3, [sp, #8]
4002a110:	e58d3004 	str	r3, [sp, #4]
4002a114:	ebfffe7b 	bl	40029b08 <mmc_send_cmd>
4002a118:	e28dd034 	add	sp, sp, #52	; 0x34
4002a11c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

4002a120 <sd_change_freq>:
4002a120:	e590204c 	ldr	r2, [r0, #76]	; 0x4c
4002a124:	e3a03000 	mov	r3, #0
4002a128:	e5803048 	str	r3, [r0, #72]	; 0x48
4002a12c:	e2122b01 	ands	r2, r2, #1024	; 0x400
4002a130:	1a000062 	bne	4002a2c0 <sd_change_freq+0x1a0>
4002a134:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4002a138:	e24dd080 	sub	sp, sp, #128	; 0x80
4002a13c:	e3a03037 	mov	r3, #55	; 0x37
4002a140:	e3a05015 	mov	r5, #21
4002a144:	e58d3020 	str	r3, [sp, #32]
4002a148:	e28d1020 	add	r1, sp, #32
4002a14c:	e1d037bc 	ldrh	r3, [r0, #124]	; 0x7c
4002a150:	e1a04000 	mov	r4, r0
4002a154:	e58d5024 	str	r5, [sp, #36]	; 0x24
4002a158:	e1a03803 	lsl	r3, r3, #16
4002a15c:	e58d3028 	str	r3, [sp, #40]	; 0x28
4002a160:	e58d203c 	str	r2, [sp, #60]	; 0x3c
4002a164:	ebfffe67 	bl	40029b08 <mmc_send_cmd>
4002a168:	e3500000 	cmp	r0, #0
4002a16c:	1a000014 	bne	4002a1c4 <sd_change_freq+0xa4>
4002a170:	e58d5024 	str	r5, [sp, #36]	; 0x24
4002a174:	e28d7008 	add	r7, sp, #8
4002a178:	e58d0028 	str	r0, [sp, #40]	; 0x28
4002a17c:	e3a05004 	mov	r5, #4
4002a180:	e58d003c 	str	r0, [sp, #60]	; 0x3c
4002a184:	e3a08008 	mov	r8, #8
4002a188:	e3a06001 	mov	r6, #1
4002a18c:	e3a03033 	mov	r3, #51	; 0x33
4002a190:	e58d3020 	str	r3, [sp, #32]
4002a194:	e58d7010 	str	r7, [sp, #16]
4002a198:	e28d2010 	add	r2, sp, #16
4002a19c:	e58d801c 	str	r8, [sp, #28]
4002a1a0:	e28d1020 	add	r1, sp, #32
4002a1a4:	e58d6018 	str	r6, [sp, #24]
4002a1a8:	e1a00004 	mov	r0, r4
4002a1ac:	e58d6014 	str	r6, [sp, #20]
4002a1b0:	ebfffe54 	bl	40029b08 <mmc_send_cmd>
4002a1b4:	e3500000 	cmp	r0, #0
4002a1b8:	0a000003 	beq	4002a1cc <sd_change_freq+0xac>
4002a1bc:	e2555001 	subs	r5, r5, #1
4002a1c0:	1afffff3 	bne	4002a194 <sd_change_freq+0x74>
4002a1c4:	e28dd080 	add	sp, sp, #128	; 0x80
4002a1c8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4002a1cc:	e59d3008 	ldr	r3, [sp, #8]
4002a1d0:	e59d200c 	ldr	r2, [sp, #12]
4002a1d4:	e6bf3f33 	rev	r3, r3
4002a1d8:	e6bf2f32 	rev	r2, r2
4002a1dc:	e5842058 	str	r2, [r4, #88]	; 0x58
4002a1e0:	e7e32c53 	ubfx	r2, r3, #24, #4
4002a1e4:	e5843054 	str	r3, [r4, #84]	; 0x54
4002a1e8:	e3520001 	cmp	r2, #1
4002a1ec:	059f20d4 	ldreq	r2, [pc, #212]	; 4002a2c8 <sd_change_freq+0x1a8>
4002a1f0:	0a000002 	beq	4002a200 <sd_change_freq+0xe0>
4002a1f4:	e3520002 	cmp	r2, #2
4002a1f8:	159f20cc 	ldrne	r2, [pc, #204]	; 4002a2cc <sd_change_freq+0x1ac>
4002a1fc:	059f20cc 	ldreq	r2, [pc, #204]	; 4002a2d0 <sd_change_freq+0x1b0>
4002a200:	e5842028 	str	r2, [r4, #40]	; 0x28
4002a204:	e3130701 	tst	r3, #262144	; 0x40000
4002a208:	e5942028 	ldr	r2, [r4, #40]	; 0x28
4002a20c:	15943048 	ldrne	r3, [r4, #72]	; 0x48
4002a210:	13833c01 	orrne	r3, r3, #256	; 0x100
4002a214:	15843048 	strne	r3, [r4, #72]	; 0x48
4002a218:	e59f30ac 	ldr	r3, [pc, #172]	; 4002a2cc <sd_change_freq+0x1ac>
4002a21c:	e1520003 	cmp	r2, r3
4002a220:	13a05005 	movne	r5, #5
4002a224:	128d6040 	addne	r6, sp, #64	; 0x40
4002a228:	1a000001 	bne	4002a234 <sd_change_freq+0x114>
4002a22c:	e3a00000 	mov	r0, #0
4002a230:	eaffffe3 	b	4002a1c4 <sd_change_freq+0xa4>
4002a234:	e2555001 	subs	r5, r5, #1
4002a238:	0a00000b 	beq	4002a26c <sd_change_freq+0x14c>
4002a23c:	e58d6000 	str	r6, [sp]
4002a240:	e3a02000 	mov	r2, #0
4002a244:	e3a03001 	mov	r3, #1
4002a248:	e1a01002 	mov	r1, r2
4002a24c:	e1a00004 	mov	r0, r4
4002a250:	ebffff97 	bl	4002a0b4 <sd_switch>
4002a254:	e3500000 	cmp	r0, #0
4002a258:	1affffd9 	bne	4002a1c4 <sd_change_freq+0xa4>
4002a25c:	e59d305c 	ldr	r3, [sp, #92]	; 0x5c
4002a260:	e6bf3f33 	rev	r3, r3
4002a264:	e3130802 	tst	r3, #131072	; 0x20000
4002a268:	1afffff1 	bne	4002a234 <sd_change_freq+0x114>
4002a26c:	e59d304c 	ldr	r3, [sp, #76]	; 0x4c
4002a270:	e6bf3f33 	rev	r3, r3
4002a274:	e3130802 	tst	r3, #131072	; 0x20000
4002a278:	0affffeb 	beq	4002a22c <sd_change_freq+0x10c>
4002a27c:	e28d3040 	add	r3, sp, #64	; 0x40
4002a280:	e3a02000 	mov	r2, #0
4002a284:	e58d3000 	str	r3, [sp]
4002a288:	e3a03001 	mov	r3, #1
4002a28c:	e1a01003 	mov	r1, r3
4002a290:	e1a00004 	mov	r0, r4
4002a294:	ebffff86 	bl	4002a0b4 <sd_switch>
4002a298:	e3500000 	cmp	r0, #0
4002a29c:	1affffc8 	bne	4002a1c4 <sd_change_freq+0xa4>
4002a2a0:	e59d3050 	ldr	r3, [sp, #80]	; 0x50
4002a2a4:	e203300f 	and	r3, r3, #15
4002a2a8:	e3530001 	cmp	r3, #1
4002a2ac:	05943048 	ldreq	r3, [r4, #72]	; 0x48
4002a2b0:	03833001 	orreq	r3, r3, #1
4002a2b4:	05843048 	streq	r3, [r4, #72]	; 0x48
4002a2b8:	1affffdb 	bne	4002a22c <sd_change_freq+0x10c>
4002a2bc:	eaffffc0 	b	4002a1c4 <sd_change_freq+0xa4>
4002a2c0:	e1a00003 	mov	r0, r3
4002a2c4:	e12fff1e 	bx	lr
4002a2c8:	0002001a 	andeq	r0, r2, sl, lsl r0
4002a2cc:	00020010 	andeq	r0, r2, r0, lsl r0
4002a2d0:	00020020 	andeq	r0, r2, r0, lsr #32

4002a2d4 <mmc_set_ios>:
4002a2d4:	e590309c 	ldr	r3, [r0, #156]	; 0x9c
4002a2d8:	e12fff13 	bx	r3

4002a2dc <mmc_set_clock>:
4002a2dc:	e5902038 	ldr	r2, [r0, #56]	; 0x38
4002a2e0:	e1510002 	cmp	r1, r2
4002a2e4:	21a01002 	movcs	r1, r2
4002a2e8:	e5902034 	ldr	r2, [r0, #52]	; 0x34
4002a2ec:	e1520001 	cmp	r2, r1
4002a2f0:	25802044 	strcs	r2, [r0, #68]	; 0x44
4002a2f4:	35801044 	strcc	r1, [r0, #68]	; 0x44
4002a2f8:	eafffff5 	b	4002a2d4 <mmc_set_ios>

4002a2fc <mmc_startup>:
4002a2fc:	e590304c 	ldr	r3, [r0, #76]	; 0x4c
4002a300:	e3a02000 	mov	r2, #0
4002a304:	e92d4070 	push	{r4, r5, r6, lr}
4002a308:	e3130b01 	tst	r3, #1024	; 0x400
4002a30c:	e24dde22 	sub	sp, sp, #544	; 0x220
4002a310:	13a0300a 	movne	r3, #10
4002a314:	03a03002 	moveq	r3, #2
4002a318:	e1a0100d 	mov	r1, sp
4002a31c:	e58d3000 	str	r3, [sp]
4002a320:	e3a03007 	mov	r3, #7
4002a324:	e58d3004 	str	r3, [sp, #4]
4002a328:	e1a04000 	mov	r4, r0
4002a32c:	e58d2008 	str	r2, [sp, #8]
4002a330:	e58d201c 	str	r2, [sp, #28]
4002a334:	ebfffdf3 	bl	40029b08 <mmc_send_cmd>
4002a338:	e2505000 	subs	r5, r0, #0
4002a33c:	0284306c 	addeq	r3, r4, #108	; 0x6c
4002a340:	0284107c 	addeq	r1, r4, #124	; 0x7c
4002a344:	028d200c 	addeq	r2, sp, #12
4002a348:	0a000004 	beq	4002a360 <mmc_startup+0x64>
4002a34c:	e1a00005 	mov	r0, r5
4002a350:	e28dde22 	add	sp, sp, #544	; 0x220
4002a354:	e8bd8070 	pop	{r4, r5, r6, pc}
4002a358:	e4d20001 	ldrb	r0, [r2], #1
4002a35c:	e4c30001 	strb	r0, [r3], #1
4002a360:	e1530001 	cmp	r3, r1
4002a364:	1afffffb 	bne	4002a358 <mmc_startup+0x5c>
4002a368:	e594204c 	ldr	r2, [r4, #76]	; 0x4c
4002a36c:	e2122b01 	ands	r2, r2, #1024	; 0x400
4002a370:	1a000011 	bne	4002a3bc <mmc_startup+0xc0>
4002a374:	e1d437bc 	ldrh	r3, [r4, #124]	; 0x7c
4002a378:	e3a01003 	mov	r1, #3
4002a37c:	e58d1000 	str	r1, [sp]
4002a380:	e1a00004 	mov	r0, r4
4002a384:	e1a03803 	lsl	r3, r3, #16
4002a388:	e1a0100d 	mov	r1, sp
4002a38c:	e58d3008 	str	r3, [sp, #8]
4002a390:	e3a03015 	mov	r3, #21
4002a394:	e58d3004 	str	r3, [sp, #4]
4002a398:	e58d201c 	str	r2, [sp, #28]
4002a39c:	ebfffdd9 	bl	40029b08 <mmc_send_cmd>
4002a3a0:	e2505000 	subs	r5, r0, #0
4002a3a4:	1affffe8 	bne	4002a34c <mmc_startup+0x50>
4002a3a8:	e5943028 	ldr	r3, [r4, #40]	; 0x28
4002a3ac:	e3130802 	tst	r3, #131072	; 0x20000
4002a3b0:	159d300c 	ldrne	r3, [sp, #12]
4002a3b4:	11a03823 	lsrne	r3, r3, #16
4002a3b8:	11c437bc 	strhne	r3, [r4, #124]	; 0x7c
4002a3bc:	e1d437bc 	ldrh	r3, [r4, #124]	; 0x7c
4002a3c0:	e3a00009 	mov	r0, #9
4002a3c4:	e3a01007 	mov	r1, #7
4002a3c8:	e3a02000 	mov	r2, #0
4002a3cc:	e1a03803 	lsl	r3, r3, #16
4002a3d0:	e1cd00f0 	strd	r0, [sp]
4002a3d4:	e58d3008 	str	r3, [sp, #8]
4002a3d8:	e1a0100d 	mov	r1, sp
4002a3dc:	e58d201c 	str	r2, [sp, #28]
4002a3e0:	e1a00004 	mov	r0, r4
4002a3e4:	ebfffdc7 	bl	40029b08 <mmc_send_cmd>
4002a3e8:	e1a05000 	mov	r5, r0
4002a3ec:	e3a01ffa 	mov	r1, #1000	; 0x3e8
4002a3f0:	e1a00004 	mov	r0, r4
4002a3f4:	ebfffdc5 	bl	40029b10 <mmc_send_status>
4002a3f8:	e3550000 	cmp	r5, #0
4002a3fc:	1affffd2 	bne	4002a34c <mmc_startup+0x50>
4002a400:	e5941028 	ldr	r1, [r4, #40]	; 0x28
4002a404:	e59d200c 	ldr	r2, [sp, #12]
4002a408:	e59d5010 	ldr	r5, [sp, #16]
4002a40c:	e3510801 	cmp	r1, #65536	; 0x10000
4002a410:	e59de014 	ldr	lr, [sp, #20]
4002a414:	e59d3018 	ldr	r3, [sp, #24]
4002a418:	e584205c 	str	r2, [r4, #92]	; 0x5c
4002a41c:	e5845060 	str	r5, [r4, #96]	; 0x60
4002a420:	e584e064 	str	lr, [r4, #100]	; 0x64
4002a424:	e5843068 	str	r3, [r4, #104]	; 0x68
4002a428:	1a00000a 	bne	4002a458 <mmc_startup+0x15c>
4002a42c:	e7e31d52 	ubfx	r1, r2, #26, #4
4002a430:	e2411001 	sub	r1, r1, #1
4002a434:	e3510003 	cmp	r1, #3
4002a438:	979ff101 	ldrls	pc, [pc, r1, lsl #2]
4002a43c:	ea000003 	b	4002a450 <mmc_startup+0x154>
4002a440:	4002a5a8 	andmi	sl, r2, r8, lsr #11
4002a444:	4002a5b0 			; <UNDEFINED> instruction: 0x4002a5b0
4002a448:	4002a5b8 			; <UNDEFINED> instruction: 0x4002a5b8
4002a44c:	4002a5c0 	andmi	sl, r2, r0, asr #11
4002a450:	e59f13f4 	ldr	r1, [pc, #1012]	; 4002a84c <mmc_startup+0x550>
4002a454:	e5841028 	str	r1, [r4, #40]	; 0x28
4002a458:	e7e301d2 	ubfx	r0, r2, #3, #4
4002a45c:	e2022007 	and	r2, r2, #7
4002a460:	e59f13e8 	ldr	r1, [pc, #1000]	; 4002a850 <mmc_startup+0x554>
4002a464:	e7911100 	ldr	r1, [r1, r0, lsl #2]
4002a468:	e59f03e4 	ldr	r0, [pc, #996]	; 4002a854 <mmc_startup+0x558>
4002a46c:	e7902102 	ldr	r2, [r0, r2, lsl #2]
4002a470:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4002a474:	e0020192 	mul	r2, r2, r1
4002a478:	e7e31855 	ubfx	r1, r5, #16, #4
4002a47c:	e2100802 	ands	r0, r0, #131072	; 0x20000
4002a480:	e5842080 	str	r2, [r4, #128]	; 0x80
4002a484:	e3a02001 	mov	r2, #1
4002a488:	07e33b53 	ubfxeq	r3, r3, #22, #4
4002a48c:	e1a01112 	lsl	r1, r2, r1
4002a490:	e5841084 	str	r1, [r4, #132]	; 0x84
4002a494:	e1a0c001 	mov	ip, r1
4002a498:	01a0c312 	lsleq	ip, r2, r3
4002a49c:	e594203c 	ldr	r2, [r4, #60]	; 0x3c
4002a4a0:	e584c088 	str	ip, [r4, #136]	; 0x88
4002a4a4:	e3520000 	cmp	r2, #0
4002a4a8:	0a000046 	beq	4002a5c8 <mmc_startup+0x2cc>
4002a4ac:	e1a03805 	lsl	r3, r5, #16
4002a4b0:	e3a02000 	mov	r2, #0
4002a4b4:	e203383f 	and	r3, r3, #4128768	; 0x3f0000
4002a4b8:	e183382e 	orr	r3, r3, lr, lsr #16
4002a4bc:	e3a0e008 	mov	lr, #8
4002a4c0:	e28e5002 	add	r5, lr, #2
4002a4c4:	e2833001 	add	r3, r3, #1
4002a4c8:	e24e601e 	sub	r6, lr, #30
4002a4cc:	e26ee01e 	rsb	lr, lr, #30
4002a4d0:	e1a02512 	lsl	r2, r2, r5
4002a4d4:	e3510c02 	cmp	r1, #512	; 0x200
4002a4d8:	e1822613 	orr	r2, r2, r3, lsl r6
4002a4dc:	e1822e33 	orr	r2, r2, r3, lsr lr
4002a4e0:	e1a03513 	lsl	r3, r3, r5
4002a4e4:	e1a0efc1 	asr	lr, r1, #31
4002a4e8:	e00e0e93 	mul	lr, r3, lr
4002a4ec:	e022e291 	mla	r2, r1, r2, lr
4002a4f0:	e08e3193 	umull	r3, lr, r3, r1
4002a4f4:	e5843090 	str	r3, [r4, #144]	; 0x90
4002a4f8:	c3a03c02 	movgt	r3, #512	; 0x200
4002a4fc:	c5843084 	strgt	r3, [r4, #132]	; 0x84
4002a500:	e35c0c02 	cmp	ip, #512	; 0x200
4002a504:	e082200e 	add	r2, r2, lr
4002a508:	83a03c02 	movhi	r3, #512	; 0x200
4002a50c:	85843088 	strhi	r3, [r4, #136]	; 0x88
4002a510:	e3500000 	cmp	r0, #0
4002a514:	e5842094 	str	r2, [r4, #148]	; 0x94
4002a518:	0a000002 	beq	4002a528 <mmc_startup+0x22c>
4002a51c:	e59f1334 	ldr	r1, [pc, #820]	; 4002a858 <mmc_startup+0x55c>
4002a520:	e1a00004 	mov	r0, r4
4002a524:	ebffff6c 	bl	4002a2dc <mmc_set_clock>
4002a528:	e594204c 	ldr	r2, [r4, #76]	; 0x4c
4002a52c:	e2122b01 	ands	r2, r2, #1024	; 0x400
4002a530:	0a000029 	beq	4002a5dc <mmc_startup+0x2e0>
4002a534:	e59f1320 	ldr	r1, [pc, #800]	; 4002a85c <mmc_startup+0x560>
4002a538:	e3a03001 	mov	r3, #1
4002a53c:	e584308c 	str	r3, [r4, #140]	; 0x8c
4002a540:	e3e03000 	mvn	r3, #0
4002a544:	e5c4307e 	strb	r3, [r4, #126]	; 0x7e
4002a548:	e5943028 	ldr	r3, [r4, #40]	; 0x28
4002a54c:	e1530001 	cmp	r3, r1
4002a550:	e2232802 	eor	r2, r3, #131072	; 0x20000
4002a554:	93a03000 	movls	r3, #0
4002a558:	83a03001 	movhi	r3, #1
4002a55c:	e01338a2 	ands	r3, r3, r2, lsr #17
4002a560:	0a00004d 	beq	4002a69c <mmc_startup+0x3a0>
4002a564:	e28d1020 	add	r1, sp, #32
4002a568:	e1a00004 	mov	r0, r4
4002a56c:	ebfffe77 	bl	40029f50 <mmc_send_ext_csd>
4002a570:	e5dd30e0 	ldrb	r3, [sp, #224]	; 0xe0
4002a574:	e3500000 	cmp	r0, #0
4002a578:	1a000026 	bne	4002a618 <mmc_startup+0x31c>
4002a57c:	e3530007 	cmp	r3, #7
4002a580:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
4002a584:	ea000023 	b	4002a618 <mmc_startup+0x31c>
4002a588:	4002a610 	andmi	sl, r2, r0, lsl r6
4002a58c:	4002a790 	mulmi	r2, r0, r7
4002a590:	4002a798 	mulmi	r2, r8, r7
4002a594:	4002a7a0 	andmi	sl, r2, r0, lsr #15
4002a598:	4002a618 	andmi	sl, r2, r8, lsl r6
4002a59c:	4002a7a8 	andmi	sl, r2, r8, lsr #15
4002a5a0:	4002a7b0 			; <UNDEFINED> instruction: 0x4002a7b0
4002a5a4:	4002a7b8 			; <UNDEFINED> instruction: 0x4002a7b8
4002a5a8:	e59f12b0 	ldr	r1, [pc, #688]	; 4002a860 <mmc_startup+0x564>
4002a5ac:	eaffffa8 	b	4002a454 <mmc_startup+0x158>
4002a5b0:	e59f12ac 	ldr	r1, [pc, #684]	; 4002a864 <mmc_startup+0x568>
4002a5b4:	eaffffa6 	b	4002a454 <mmc_startup+0x158>
4002a5b8:	e59f12a8 	ldr	r1, [pc, #680]	; 4002a868 <mmc_startup+0x56c>
4002a5bc:	eaffffa4 	b	4002a454 <mmc_startup+0x158>
4002a5c0:	e59f12a4 	ldr	r1, [pc, #676]	; 4002a86c <mmc_startup+0x570>
4002a5c4:	eaffffa2 	b	4002a454 <mmc_startup+0x158>
4002a5c8:	e3003ffc 	movw	r3, #4092	; 0xffc
4002a5cc:	e0033105 	and	r3, r3, r5, lsl #2
4002a5d0:	e1833f2e 	orr	r3, r3, lr, lsr #30
4002a5d4:	e7e2e7de 	ubfx	lr, lr, #15, #3
4002a5d8:	eaffffb8 	b	4002a4c0 <mmc_startup+0x1c4>
4002a5dc:	e1d437bc 	ldrh	r3, [r4, #124]	; 0x7c
4002a5e0:	e3a00007 	mov	r0, #7
4002a5e4:	e58d201c 	str	r2, [sp, #28]
4002a5e8:	e3a0101d 	mov	r1, #29
4002a5ec:	e1cd00f0 	strd	r0, [sp]
4002a5f0:	e1a03803 	lsl	r3, r3, #16
4002a5f4:	e1a0100d 	mov	r1, sp
4002a5f8:	e58d3008 	str	r3, [sp, #8]
4002a5fc:	e1a00004 	mov	r0, r4
4002a600:	ebfffd40 	bl	40029b08 <mmc_send_cmd>
4002a604:	e2505000 	subs	r5, r0, #0
4002a608:	0affffc9 	beq	4002a534 <mmc_startup+0x238>
4002a60c:	eaffff4e 	b	4002a34c <mmc_startup+0x50>
4002a610:	e59f2254 	ldr	r2, [pc, #596]	; 4002a86c <mmc_startup+0x570>
4002a614:	e5842028 	str	r2, [r4, #40]	; 0x28
4002a618:	e3530001 	cmp	r3, #1
4002a61c:	93a03000 	movls	r3, #0
4002a620:	83a03001 	movhi	r3, #1
4002a624:	e3500000 	cmp	r0, #0
4002a628:	13a03000 	movne	r3, #0
4002a62c:	e3530000 	cmp	r3, #0
4002a630:	0a00000b 	beq	4002a664 <mmc_startup+0x368>
4002a634:	e59d30f4 	ldr	r3, [sp, #244]	; 0xf4
4002a638:	e1a02fc3 	asr	r2, r3, #31
4002a63c:	e1a01483 	lsl	r1, r3, #9
4002a640:	e1a02482 	lsl	r2, r2, #9
4002a644:	e1822ba3 	orr	r2, r2, r3, lsr #23
4002a648:	e7eb35d3 	ubfx	r3, r3, #11, #12
4002a64c:	e1833602 	orr	r3, r3, r2, lsl #12
4002a650:	e1a00a22 	lsr	r0, r2, #20
4002a654:	e2733b02 	rsbs	r3, r3, #2048	; 0x800
4002a658:	e2f03000 	rscs	r3, r0, #0
4002a65c:	35841090 	strcc	r1, [r4, #144]	; 0x90
4002a660:	35842094 	strcc	r2, [r4, #148]	; 0x94
4002a664:	e5dd30cf 	ldrb	r3, [sp, #207]	; 0xcf
4002a668:	e3530000 	cmp	r3, #0
4002a66c:	05943064 	ldreq	r3, [r4, #100]	; 0x64
4002a670:	15dd3100 	ldrbne	r3, [sp, #256]	; 0x100
4002a674:	07e42553 	ubfxeq	r2, r3, #10, #5
4002a678:	07e432d3 	ubfxeq	r3, r3, #5, #5
4002a67c:	11a03983 	lslne	r3, r3, #19
4002a680:	02833001 	addeq	r3, r3, #1
4002a684:	00233392 	mlaeq	r3, r2, r3, r3
4002a688:	e584308c 	str	r3, [r4, #140]	; 0x8c
4002a68c:	e5dd30c0 	ldrb	r3, [sp, #192]	; 0xc0
4002a690:	e3130001 	tst	r3, #1
4002a694:	15dd30d3 	ldrbne	r3, [sp, #211]	; 0xd3
4002a698:	15c4307e 	strbne	r3, [r4, #126]	; 0x7e
4002a69c:	e59f11b4 	ldr	r1, [pc, #436]	; 4002a858 <mmc_startup+0x55c>
4002a6a0:	e1a00004 	mov	r0, r4
4002a6a4:	ebffff0c 	bl	4002a2dc <mmc_set_clock>
4002a6a8:	e5943028 	ldr	r3, [r4, #40]	; 0x28
4002a6ac:	e1a00004 	mov	r0, r4
4002a6b0:	e3130802 	tst	r3, #131072	; 0x20000
4002a6b4:	0a000041 	beq	4002a7c0 <mmc_startup+0x4c4>
4002a6b8:	ebfffe98 	bl	4002a120 <sd_change_freq>
4002a6bc:	e3500000 	cmp	r0, #0
4002a6c0:	e1a05000 	mov	r5, r0
4002a6c4:	1affff20 	bne	4002a34c <mmc_startup+0x50>
4002a6c8:	e5941028 	ldr	r1, [r4, #40]	; 0x28
4002a6cc:	e1c424d8 	ldrd	r2, [r4, #72]	; 0x48
4002a6d0:	e3110802 	tst	r1, #131072	; 0x20000
4002a6d4:	e0033002 	and	r3, r3, r2
4002a6d8:	e5843048 	str	r3, [r4, #72]	; 0x48
4002a6dc:	e2032c01 	and	r2, r3, #256	; 0x100
4002a6e0:	0a000038 	beq	4002a7c8 <mmc_startup+0x4cc>
4002a6e4:	e3520000 	cmp	r2, #0
4002a6e8:	0a00001b 	beq	4002a75c <mmc_startup+0x460>
4002a6ec:	e58d001c 	str	r0, [sp, #28]
4002a6f0:	e3a03037 	mov	r3, #55	; 0x37
4002a6f4:	e3a06015 	mov	r6, #21
4002a6f8:	e1a02000 	mov	r2, r0
4002a6fc:	e88d0048 	stm	sp, {r3, r6}
4002a700:	e1d437bc 	ldrh	r3, [r4, #124]	; 0x7c
4002a704:	e1a0100d 	mov	r1, sp
4002a708:	e1a00004 	mov	r0, r4
4002a70c:	e1a03803 	lsl	r3, r3, #16
4002a710:	e58d3008 	str	r3, [sp, #8]
4002a714:	ebfffcfb 	bl	40029b08 <mmc_send_cmd>
4002a718:	e3500000 	cmp	r0, #0
4002a71c:	1a000033 	bne	4002a7f0 <mmc_startup+0x4f4>
4002a720:	e58d501c 	str	r5, [sp, #28]
4002a724:	e3a03006 	mov	r3, #6
4002a728:	e88d0048 	stm	sp, {r3, r6}
4002a72c:	e1a02005 	mov	r2, r5
4002a730:	e3a03002 	mov	r3, #2
4002a734:	e58d3008 	str	r3, [sp, #8]
4002a738:	e1a0100d 	mov	r1, sp
4002a73c:	e1a00004 	mov	r0, r4
4002a740:	ebfffcf0 	bl	40029b08 <mmc_send_cmd>
4002a744:	e3500000 	cmp	r0, #0
4002a748:	1a000028 	bne	4002a7f0 <mmc_startup+0x4f4>
4002a74c:	e3a03004 	mov	r3, #4
4002a750:	e1a00004 	mov	r0, r4
4002a754:	e5843040 	str	r3, [r4, #64]	; 0x40
4002a758:	ebfffedd 	bl	4002a2d4 <mmc_set_ios>
4002a75c:	e5943048 	ldr	r3, [r4, #72]	; 0x48
4002a760:	e3130001 	tst	r3, #1
4002a764:	159f1104 	ldrne	r1, [pc, #260]	; 4002a870 <mmc_startup+0x574>
4002a768:	059f10e8 	ldreq	r1, [pc, #232]	; 4002a858 <mmc_startup+0x55c>
4002a76c:	e1a00004 	mov	r0, r4
4002a770:	ebfffed9 	bl	4002a2dc <mmc_set_clock>
4002a774:	e5942084 	ldr	r2, [r4, #132]	; 0x84
4002a778:	e3a03000 	mov	r3, #0
4002a77c:	e1c409d0 	ldrd	r0, [r4, #144]	; 0x90
4002a780:	e58420b0 	str	r2, [r4, #176]	; 0xb0
4002a784:	eb000c07 	bl	4002d7a8 <__aeabi_uldivmod>
4002a788:	e58400ac 	str	r0, [r4, #172]	; 0xac
4002a78c:	eafffeee 	b	4002a34c <mmc_startup+0x50>
4002a790:	e59f20dc 	ldr	r2, [pc, #220]	; 4002a874 <mmc_startup+0x578>
4002a794:	eaffff9e 	b	4002a614 <mmc_startup+0x318>
4002a798:	e59f20d8 	ldr	r2, [pc, #216]	; 4002a878 <mmc_startup+0x57c>
4002a79c:	eaffff9c 	b	4002a614 <mmc_startup+0x318>
4002a7a0:	e59f20d4 	ldr	r2, [pc, #212]	; 4002a87c <mmc_startup+0x580>
4002a7a4:	eaffff9a 	b	4002a614 <mmc_startup+0x318>
4002a7a8:	e59f20d0 	ldr	r2, [pc, #208]	; 4002a880 <mmc_startup+0x584>
4002a7ac:	eaffff98 	b	4002a614 <mmc_startup+0x318>
4002a7b0:	e59f20cc 	ldr	r2, [pc, #204]	; 4002a884 <mmc_startup+0x588>
4002a7b4:	eaffff96 	b	4002a614 <mmc_startup+0x318>
4002a7b8:	e59f20c8 	ldr	r2, [pc, #200]	; 4002a888 <mmc_startup+0x58c>
4002a7bc:	eaffff94 	b	4002a614 <mmc_startup+0x318>
4002a7c0:	ebfffe2e 	bl	4002a080 <mmc_change_freq>
4002a7c4:	eaffffbc 	b	4002a6bc <mmc_startup+0x3c0>
4002a7c8:	e3520000 	cmp	r2, #0
4002a7cc:	0a000009 	beq	4002a7f8 <mmc_startup+0x4fc>
4002a7d0:	e3a03001 	mov	r3, #1
4002a7d4:	e3a020b7 	mov	r2, #183	; 0xb7
4002a7d8:	e1a01003 	mov	r1, r3
4002a7dc:	e1a00004 	mov	r0, r4
4002a7e0:	ebfffded 	bl	40029f9c <mmc_switch>
4002a7e4:	e3500000 	cmp	r0, #0
4002a7e8:	03a03004 	moveq	r3, #4
4002a7ec:	0a00000b 	beq	4002a820 <mmc_startup+0x524>
4002a7f0:	e1a05000 	mov	r5, r0
4002a7f4:	eafffed4 	b	4002a34c <mmc_startup+0x50>
4002a7f8:	e3130c02 	tst	r3, #512	; 0x200
4002a7fc:	0a00000a 	beq	4002a82c <mmc_startup+0x530>
4002a800:	e3a03002 	mov	r3, #2
4002a804:	e3a020b7 	mov	r2, #183	; 0xb7
4002a808:	e3a01001 	mov	r1, #1
4002a80c:	e1a00004 	mov	r0, r4
4002a810:	ebfffde1 	bl	40029f9c <mmc_switch>
4002a814:	e3500000 	cmp	r0, #0
4002a818:	1afffff4 	bne	4002a7f0 <mmc_startup+0x4f4>
4002a81c:	e3a03008 	mov	r3, #8
4002a820:	e5843040 	str	r3, [r4, #64]	; 0x40
4002a824:	e1a00004 	mov	r0, r4
4002a828:	ebfffea9 	bl	4002a2d4 <mmc_set_ios>
4002a82c:	e5943048 	ldr	r3, [r4, #72]	; 0x48
4002a830:	e3130001 	tst	r3, #1
4002a834:	059f1050 	ldreq	r1, [pc, #80]	; 4002a88c <mmc_startup+0x590>
4002a838:	0affffcb 	beq	4002a76c <mmc_startup+0x470>
4002a83c:	e3130010 	tst	r3, #16
4002a840:	159f1048 	ldrne	r1, [pc, #72]	; 4002a890 <mmc_startup+0x594>
4002a844:	059f1048 	ldreq	r1, [pc, #72]	; 4002a894 <mmc_startup+0x598>
4002a848:	eaffffc7 	b	4002a76c <mmc_startup+0x470>
4002a84c:	00010012 	andeq	r0, r1, r2, lsl r0
4002a850:	40033528 	andmi	r3, r3, r8, lsr #10
4002a854:	40033518 	andmi	r3, r3, r8, lsl r5
4002a858:	017d7840 	cmneq	sp, r0, asr #16
4002a85c:	0001003f 	andeq	r0, r1, pc, lsr r0
4002a860:	00010014 	andeq	r0, r1, r4, lsl r0
4002a864:	00010022 	andeq	r0, r1, r2, lsr #32
4002a868:	00010030 	andeq	r0, r1, r0, lsr r0
4002a86c:	00010040 	andeq	r0, r1, r0, asr #32
4002a870:	02faf080 	rscseq	pc, sl, #128	; 0x80
4002a874:	00010041 	andeq	r0, r1, r1, asr #32
4002a878:	00010042 	andeq	r0, r1, r2, asr #32
4002a87c:	00010043 	andeq	r0, r1, r3, asr #32
4002a880:	00010044 	andeq	r0, r1, r4, asr #32
4002a884:	00010045 	andeq	r0, r1, r5, asr #32
4002a888:	00010050 	andeq	r0, r1, r0, asr r0
4002a88c:	01312d00 	teqeq	r1, r0, lsl #26
4002a890:	03197500 	tsteq	r9, #0, 10
4002a894:	018cba80 	orreq	fp, ip, r0, lsl #21

4002a898 <mmc_send_if_cond>:
4002a898:	e92d4010 	push	{r4, lr}
4002a89c:	e24dd020 	sub	sp, sp, #32
4002a8a0:	e5902024 	ldr	r2, [r0, #36]	; 0x24
4002a8a4:	e3a03008 	mov	r3, #8
4002a8a8:	e58d3000 	str	r3, [sp]
4002a8ac:	e1a0100d 	mov	r1, sp
4002a8b0:	e59f304c 	ldr	r3, [pc, #76]	; 4002a904 <mmc_send_if_cond+0x6c>
4002a8b4:	e1a04000 	mov	r4, r0
4002a8b8:	e0033002 	and	r3, r3, r2
4002a8bc:	e3a02000 	mov	r2, #0
4002a8c0:	e58d201c 	str	r2, [sp, #28]
4002a8c4:	e3530000 	cmp	r3, #0
4002a8c8:	e30031aa 	movw	r3, #426	; 0x1aa
4002a8cc:	03a030aa 	moveq	r3, #170	; 0xaa
4002a8d0:	e58d3008 	str	r3, [sp, #8]
4002a8d4:	e3a03015 	mov	r3, #21
4002a8d8:	e58d3004 	str	r3, [sp, #4]
4002a8dc:	ebfffc89 	bl	40029b08 <mmc_send_cmd>
4002a8e0:	e3500000 	cmp	r0, #0
4002a8e4:	1a000004 	bne	4002a8fc <mmc_send_if_cond+0x64>
4002a8e8:	e5dd300c 	ldrb	r3, [sp, #12]
4002a8ec:	e35300aa 	cmp	r3, #170	; 0xaa
4002a8f0:	13e00010 	mvnne	r0, #16
4002a8f4:	059f300c 	ldreq	r3, [pc, #12]	; 4002a908 <mmc_send_if_cond+0x70>
4002a8f8:	05843028 	streq	r3, [r4, #40]	; 0x28
4002a8fc:	e28dd020 	add	sp, sp, #32
4002a900:	e8bd8010 	pop	{r4, pc}
4002a904:	00ff8000 	rscseq	r8, pc, r0
4002a908:	00020020 	andeq	r0, r2, r0, lsr #32

4002a90c <mmc_init>:
4002a90c:	e590302c 	ldr	r3, [r0, #44]	; 0x2c
4002a910:	e3530000 	cmp	r3, #0
4002a914:	1a000024 	bne	4002a9ac <mmc_init+0xa0>
4002a918:	e92d4070 	push	{r4, r5, r6, lr}
4002a91c:	e1a04000 	mov	r4, r0
4002a920:	e59030a0 	ldr	r3, [r0, #160]	; 0xa0
4002a924:	e12fff33 	blx	r3
4002a928:	e3500000 	cmp	r0, #0
4002a92c:	18bd8070 	popne	{r4, r5, r6, pc}
4002a930:	e3a05001 	mov	r5, #1
4002a934:	e1a00004 	mov	r0, r4
4002a938:	e5845040 	str	r5, [r4, #64]	; 0x40
4002a93c:	ebfffe64 	bl	4002a2d4 <mmc_set_ios>
4002a940:	e1a01005 	mov	r1, r5
4002a944:	e1a00004 	mov	r0, r4
4002a948:	ebfffe63 	bl	4002a2dc <mmc_set_clock>
4002a94c:	e1a00004 	mov	r0, r4
4002a950:	ebfffcc9 	bl	40029c7c <mmc_go_idle>
4002a954:	e3500000 	cmp	r0, #0
4002a958:	18bd8070 	popne	{r4, r5, r6, pc}
4002a95c:	e5c4007f 	strb	r0, [r4, #127]	; 0x7f
4002a960:	e1a00004 	mov	r0, r4
4002a964:	ebffffcb 	bl	4002a898 <mmc_send_if_cond>
4002a968:	e1a00004 	mov	r0, r4
4002a96c:	ebfffcd6 	bl	40029ccc <sd_send_op_cond>
4002a970:	e3500000 	cmp	r0, #0
4002a974:	1a000006 	bne	4002a994 <mmc_init+0x88>
4002a978:	e1a00004 	mov	r0, r4
4002a97c:	ebfffe5e 	bl	4002a2fc <mmc_startup>
4002a980:	e3500000 	cmp	r0, #0
4002a984:	13a03000 	movne	r3, #0
4002a988:	03a03001 	moveq	r3, #1
4002a98c:	e584302c 	str	r3, [r4, #44]	; 0x2c
4002a990:	e8bd8070 	pop	{r4, r5, r6, pc}
4002a994:	e1a00004 	mov	r0, r4
4002a998:	ebfffd1a 	bl	40029e08 <mmc_send_op_cond>
4002a99c:	e3500000 	cmp	r0, #0
4002a9a0:	0afffff4 	beq	4002a978 <mmc_init+0x6c>
4002a9a4:	e3e00010 	mvn	r0, #16
4002a9a8:	e8bd8070 	pop	{r4, r5, r6, pc}
4002a9ac:	e3a00000 	mov	r0, #0
4002a9b0:	e12fff1e 	bx	lr

4002a9b4 <mmc_register>:
4002a9b4:	e59f3018 	ldr	r3, [pc, #24]	; 4002a9d4 <mmc_register+0x20>
4002a9b8:	e7831100 	str	r1, [r3, r0, lsl #2]
4002a9bc:	e1a00001 	mov	r0, r1
4002a9c0:	e59130a8 	ldr	r3, [r1, #168]	; 0xa8
4002a9c4:	e3530000 	cmp	r3, #0
4002a9c8:	030f3fff 	movweq	r3, #65535	; 0xffff
4002a9cc:	058130a8 	streq	r3, [r1, #168]	; 0xa8
4002a9d0:	eaffffcd 	b	4002a90c <mmc_init>
4002a9d4:	4006c0c0 	andmi	ip, r6, r0, asr #1

4002a9d8 <__msdelay>:
4002a9d8:	e59f2018 	ldr	r2, [pc, #24]	; 4002a9f8 <__msdelay+0x20>
4002a9dc:	e5921084 	ldr	r1, [r2, #132]	; 0x84
4002a9e0:	f57ff05f 	dmb	sy
4002a9e4:	e5923084 	ldr	r3, [r2, #132]	; 0x84
4002a9e8:	e0433001 	sub	r3, r3, r1
4002a9ec:	e1530000 	cmp	r3, r0
4002a9f0:	3afffffa 	bcc	4002a9e0 <__msdelay+0x8>
4002a9f4:	e12fff1e 	bx	lr
4002a9f8:	01c20c00 	biceq	r0, r2, r0, lsl #24

4002a9fc <codec_wrreg_prcm_bits(unsigned long, unsigned long, unsigned long)>:
4002a9fc:	e59f3080 	ldr	r3, [pc, #128]	; 4002aa84 <codec_wrreg_prcm_bits(unsigned long, unsigned long, unsigned long)+0x88>
4002aa00:	e92d4010 	push	{r4, lr}
4002aa04:	e593c1c0 	ldr	ip, [r3, #448]	; 0x1c0
4002aa08:	e38cc201 	orr	ip, ip, #268435456	; 0x10000000
4002aa0c:	e583c1c0 	str	ip, [r3, #448]	; 0x1c0
4002aa10:	e593c1c0 	ldr	ip, [r3, #448]	; 0x1c0
4002aa14:	e3ccc401 	bic	ip, ip, #16777216	; 0x1000000
4002aa18:	e583c1c0 	str	ip, [r3, #448]	; 0x1c0
4002aa1c:	e59341c0 	ldr	r4, [r3, #448]	; 0x1c0
4002aa20:	e3c4481f 	bic	r4, r4, #2031616	; 0x1f0000
4002aa24:	e1844800 	orr	r4, r4, r0, lsl #16
4002aa28:	e58341c0 	str	r4, [r3, #448]	; 0x1c0
4002aa2c:	e593c1c0 	ldr	ip, [r3, #448]	; 0x1c0
4002aa30:	e59341c0 	ldr	r4, [r3, #448]	; 0x1c0
4002aa34:	e1ccc001 	bic	ip, ip, r1
4002aa38:	e3844201 	orr	r4, r4, #268435456	; 0x10000000
4002aa3c:	e6efc07c 	uxtb	ip, ip
4002aa40:	e58341c0 	str	r4, [r3, #448]	; 0x1c0
4002aa44:	e593e1c0 	ldr	lr, [r3, #448]	; 0x1c0
4002aa48:	e18cc002 	orr	ip, ip, r2
4002aa4c:	e3cee81f 	bic	lr, lr, #2031616	; 0x1f0000
4002aa50:	e18ee800 	orr	lr, lr, r0, lsl #16
4002aa54:	e583e1c0 	str	lr, [r3, #448]	; 0x1c0
4002aa58:	e59301c0 	ldr	r0, [r3, #448]	; 0x1c0
4002aa5c:	e3c00cff 	bic	r0, r0, #65280	; 0xff00
4002aa60:	e180c40c 	orr	ip, r0, ip, lsl #8
4002aa64:	e583c1c0 	str	ip, [r3, #448]	; 0x1c0
4002aa68:	e59321c0 	ldr	r2, [r3, #448]	; 0x1c0
4002aa6c:	e3822401 	orr	r2, r2, #16777216	; 0x1000000
4002aa70:	e58321c0 	str	r2, [r3, #448]	; 0x1c0
4002aa74:	e59321c0 	ldr	r2, [r3, #448]	; 0x1c0
4002aa78:	e3c22401 	bic	r2, r2, #16777216	; 0x1000000
4002aa7c:	e58321c0 	str	r2, [r3, #448]	; 0x1c0
4002aa80:	e8bd8010 	pop	{r4, pc}
4002aa84:	01f01400 	mvnseq	r1, r0, lsl #8

4002aa88 <codec_fiq_handler()>:
4002aa88:	e24ee004 	sub	lr, lr, #4
4002aa8c:	e92d400f 	push	{r0, r1, r2, r3, lr}
4002aa90:	f57ff05f 	dmb	sy
4002aa94:	e59f1094 	ldr	r1, [pc, #148]	; 4002ab30 <codec_fiq_handler()+0xa8>
4002aa98:	e5913000 	ldr	r3, [r1]
4002aa9c:	e3530002 	cmp	r3, #2
4002aaa0:	1a000012 	bne	4002aaf0 <codec_fiq_handler()+0x68>
4002aaa4:	e59f3088 	ldr	r3, [pc, #136]	; 4002ab34 <codec_fiq_handler()+0xac>
4002aaa8:	e59f0088 	ldr	r0, [pc, #136]	; 4002ab38 <codec_fiq_handler()+0xb0>
4002aaac:	e5932000 	ldr	r2, [r3]
4002aab0:	e5933000 	ldr	r3, [r3]
4002aab4:	e1a02702 	lsl	r2, r2, #14
4002aab8:	e590e000 	ldr	lr, [r0]
4002aabc:	e2633001 	rsb	r3, r3, #1
4002aac0:	e28221d9 	add	r2, r2, #1073741878	; 0x40000036
4002aac4:	e3a00000 	mov	r0, #0
4002aac8:	e1a03703 	lsl	r3, r3, #14
4002aacc:	e2822712 	add	r2, r2, #4718592	; 0x480000
4002aad0:	e28331e1 	add	r3, r3, #1073741880	; 0x40000038
4002aad4:	e2833712 	add	r3, r3, #4718592	; 0x480000
4002aad8:	e15e0000 	cmp	lr, r0
4002aadc:	0a000003 	beq	4002aaf0 <codec_fiq_handler()+0x68>
4002aae0:	e1f2c0f2 	ldrsh	ip, [r2, #2]!
4002aae4:	e2800001 	add	r0, r0, #1
4002aae8:	e0c3c0b2 	strh	ip, [r3], #2
4002aaec:	eafffff9 	b	4002aad8 <codec_fiq_handler()+0x50>
4002aaf0:	e5913000 	ldr	r3, [r1]
4002aaf4:	e2833001 	add	r3, r3, #1
4002aaf8:	e5813000 	str	r3, [r1]
4002aafc:	e59f3038 	ldr	r3, [pc, #56]	; 4002ab3c <codec_fiq_handler()+0xb4>
4002ab00:	e5931010 	ldr	r1, [r3, #16]
4002ab04:	e5932010 	ldr	r2, [r3, #16]
4002ab08:	e1822001 	orr	r2, r2, r1
4002ab0c:	e5832010 	str	r2, [r3, #16]
4002ab10:	e2833702 	add	r3, r3, #524288	; 0x80000
4002ab14:	e3a02052 	mov	r2, #82	; 0x52
4002ab18:	e5832010 	str	r2, [r3, #16]
4002ab1c:	e3a02701 	mov	r2, #262144	; 0x40000
4002ab20:	e5032d78 	str	r2, [r3, #-3448]	; 0xfffff288
4002ab24:	f57ff06f 	isb	sy
4002ab28:	f57ff05f 	dmb	sy
4002ab2c:	e8fd800f 	ldm	sp!, {r0, r1, r2, r3, pc}^
4002ab30:	4006c0d0 	ldrdmi	ip, [r6], -r0
4002ab34:	4006c0d4 	ldrdmi	ip, [r6], -r4
4002ab38:	4006c0cc 	andmi	ip, r6, ip, asr #1
4002ab3c:	01c02000 	biceq	r2, r0, r0

4002ab40 <h3_codec_set_volume(unsigned char)>:
4002ab40:	e59f3004 	ldr	r3, [pc, #4]	; 4002ab4c <h3_codec_set_volume(unsigned char)+0xc>
4002ab44:	e5830000 	str	r0, [r3]
4002ab48:	e12fff1e 	bx	lr
4002ab4c:	4006c0d8 	ldrdmi	ip, [r6], -r8

4002ab50 <h3_codec_begin()>:
4002ab50:	e92d4070 	push	{r4, r5, r6, lr}
4002ab54:	f10c0040 	cpsid	f
4002ab58:	e59f12c4 	ldr	r1, [pc, #708]	; 4002ae24 <h3_codec_begin()+0x2d4>
4002ab5c:	e3a03000 	mov	r3, #0
4002ab60:	e1a00003 	mov	r0, r3
4002ab64:	e283201c 	add	r2, r3, #28
4002ab68:	e2833001 	add	r3, r3, #1
4002ab6c:	e3530a02 	cmp	r3, #8192	; 0x2000
4002ab70:	e1a02082 	lsl	r2, r2, #1
4002ab74:	e18100b2 	strh	r0, [r1, r2]
4002ab78:	1afffff9 	bne	4002ab64 <h3_codec_begin()+0x14>
4002ab7c:	e59f42a0 	ldr	r4, [pc, #672]	; 4002ae24 <h3_codec_begin()+0x2d4>
4002ab80:	e3a03000 	mov	r3, #0
4002ab84:	e302001c 	movw	r0, #8220	; 0x201c
4002ab88:	e1a01003 	mov	r1, r3
4002ab8c:	e0832000 	add	r2, r3, r0
4002ab90:	e2833001 	add	r3, r3, #1
4002ab94:	e3530a02 	cmp	r3, #8192	; 0x2000
4002ab98:	e1a02082 	lsl	r2, r2, #1
4002ab9c:	e18410b2 	strh	r1, [r4, r2]
4002aba0:	1afffff9 	bne	4002ab8c <h3_codec_begin()+0x3c>
4002aba4:	e59f027c 	ldr	r0, [pc, #636]	; 4002ae28 <h3_codec_begin()+0x2d8>
4002aba8:	e59f227c 	ldr	r2, [pc, #636]	; 4002ae2c <h3_codec_begin()+0x2dc>
4002abac:	e59f127c 	ldr	r1, [pc, #636]	; 4002ae30 <h3_codec_begin()+0x2e0>
4002abb0:	e8840005 	stm	r4, {r0, r2}
4002abb4:	e584300c 	str	r3, [r4, #12]
4002abb8:	e3a02008 	mov	r2, #8
4002abbc:	e584001c 	str	r0, [r4, #28]
4002abc0:	e5843028 	str	r3, [r4, #40]	; 0x28
4002abc4:	e59f0268 	ldr	r0, [pc, #616]	; 4002ae34 <h3_codec_begin()+0x2e4>
4002abc8:	e59f3268 	ldr	r3, [pc, #616]	; 4002ae38 <h3_codec_begin()+0x2e8>
4002abcc:	e5842010 	str	r2, [r4, #16]
4002abd0:	e1c402f0 	strd	r0, [r4, #32]
4002abd4:	e584202c 	str	r2, [r4, #44]	; 0x2c
4002abd8:	e5843014 	str	r3, [r4, #20]
4002abdc:	e5841008 	str	r1, [r4, #8]
4002abe0:	e3a0101c 	mov	r1, #28
4002abe4:	e5844030 	str	r4, [r4, #48]	; 0x30
4002abe8:	e59f024c 	ldr	r0, [pc, #588]	; 4002ae3c <h3_codec_begin()+0x2ec>
4002abec:	ebfffabc 	bl	400296e4 <arm_install_handler>
4002abf0:	e3a01001 	mov	r1, #1
4002abf4:	e3a00052 	mov	r0, #82	; 0x52
4002abf8:	eb000511 	bl	4002c044 <gic_fiq_config(T_H3_IRQn, GIC_CORE_TypeDef)>
4002abfc:	e59f323c 	ldr	r3, [pc, #572]	; 4002ae40 <h3_codec_begin()+0x2f0>
4002ac00:	e59322c0 	ldr	r2, [r3, #704]	; 0x2c0
4002ac04:	e3822040 	orr	r2, r2, #64	; 0x40
4002ac08:	e58322c0 	str	r2, [r3, #704]	; 0x2c0
4002ac0c:	e5932060 	ldr	r2, [r3, #96]	; 0x60
4002ac10:	e3822040 	orr	r2, r2, #64	; 0x40
4002ac14:	e5832060 	str	r2, [r3, #96]	; 0x60
4002ac18:	e2433a1e 	sub	r3, r3, #122880	; 0x1e000
4002ac1c:	e5931010 	ldr	r1, [r3, #16]
4002ac20:	e5932010 	ldr	r2, [r3, #16]
4002ac24:	e1822001 	orr	r2, r2, r1
4002ac28:	e5832010 	str	r2, [r3, #16]
4002ac2c:	e5931014 	ldr	r1, [r3, #20]
4002ac30:	e5932014 	ldr	r2, [r3, #20]
4002ac34:	e1822001 	orr	r2, r2, r1
4002ac38:	e5832014 	str	r2, [r3, #20]
4002ac3c:	e3a02002 	mov	r2, #2
4002ac40:	e5832000 	str	r2, [r3]
4002ac44:	e5834108 	str	r4, [r3, #264]	; 0x108
4002ac48:	f57ff06f 	isb	sy
4002ac4c:	f1080040 	cpsie	f
4002ac50:	e59f31ec 	ldr	r3, [pc, #492]	; 4002ae44 <h3_codec_begin()+0x2f4>
4002ac54:	e3a00007 	mov	r0, #7
4002ac58:	e59f41e8 	ldr	r4, [pc, #488]	; 4002ae48 <h3_codec_begin()+0x2f8>
4002ac5c:	e5932000 	ldr	r2, [r3]
4002ac60:	e3520000 	cmp	r2, #0
4002ac64:	03a0201c 	moveq	r2, #28
4002ac68:	05832000 	streq	r2, [r3]
4002ac6c:	e3a02080 	mov	r2, #128	; 0x80
4002ac70:	e5935000 	ldr	r5, [r3]
4002ac74:	e1a01002 	mov	r1, r2
4002ac78:	e5943004 	ldr	r3, [r4, #4]
4002ac7c:	e3833001 	orr	r3, r3, #1
4002ac80:	e5843004 	str	r3, [r4, #4]
4002ac84:	ebffff5c 	bl	4002a9fc <codec_wrreg_prcm_bits(unsigned long, unsigned long, unsigned long)>
4002ac88:	e1a02185 	lsl	r2, r5, #3
4002ac8c:	e3a010f8 	mov	r1, #248	; 0xf8
4002ac90:	e59f51a8 	ldr	r5, [pc, #424]	; 4002ae40 <h3_codec_begin()+0x2f0>
4002ac94:	e3a00009 	mov	r0, #9
4002ac98:	ebffff57 	bl	4002a9fc <codec_wrreg_prcm_bits(unsigned long, unsigned long, unsigned long)>
4002ac9c:	e3a02080 	mov	r2, #128	; 0x80
4002aca0:	e3a00003 	mov	r0, #3
4002aca4:	e1a01002 	mov	r1, r2
4002aca8:	ebffff53 	bl	4002a9fc <codec_wrreg_prcm_bits(unsigned long, unsigned long, unsigned long)>
4002acac:	e3a02040 	mov	r2, #64	; 0x40
4002acb0:	e3a00003 	mov	r0, #3
4002acb4:	e1a01002 	mov	r1, r2
4002acb8:	ebffff4f 	bl	4002a9fc <codec_wrreg_prcm_bits(unsigned long, unsigned long, unsigned long)>
4002acbc:	e3a02020 	mov	r2, #32
4002acc0:	e3a00003 	mov	r0, #3
4002acc4:	e1a01002 	mov	r1, r2
4002acc8:	ebffff4b 	bl	4002a9fc <codec_wrreg_prcm_bits(unsigned long, unsigned long, unsigned long)>
4002accc:	e3a02010 	mov	r2, #16
4002acd0:	e3a00003 	mov	r0, #3
4002acd4:	e1a01002 	mov	r1, r2
4002acd8:	ebffff47 	bl	4002a9fc <codec_wrreg_prcm_bits(unsigned long, unsigned long, unsigned long)>
4002acdc:	e3a02008 	mov	r2, #8
4002ace0:	e3a0000a 	mov	r0, #10
4002ace4:	e1a01002 	mov	r1, r2
4002ace8:	ebffff43 	bl	4002a9fc <codec_wrreg_prcm_bits(unsigned long, unsigned long, unsigned long)>
4002acec:	e3a02004 	mov	r2, #4
4002acf0:	e3a0000a 	mov	r0, #10
4002acf4:	e1a01002 	mov	r1, r2
4002acf8:	ebffff3f 	bl	4002a9fc <codec_wrreg_prcm_bits(unsigned long, unsigned long, unsigned long)>
4002acfc:	e3a02001 	mov	r2, #1
4002ad00:	e3a0000a 	mov	r0, #10
4002ad04:	e1a01002 	mov	r1, r2
4002ad08:	ebffff3b 	bl	4002a9fc <codec_wrreg_prcm_bits(unsigned long, unsigned long, unsigned long)>
4002ad0c:	e3a02002 	mov	r2, #2
4002ad10:	e3a00001 	mov	r0, #1
4002ad14:	e1a01002 	mov	r1, r2
4002ad18:	ebffff37 	bl	4002a9fc <codec_wrreg_prcm_bits(unsigned long, unsigned long, unsigned long)>
4002ad1c:	e1a02001 	mov	r2, r1
4002ad20:	e1a00001 	mov	r0, r1
4002ad24:	ebffff34 	bl	4002a9fc <codec_wrreg_prcm_bits(unsigned long, unsigned long, unsigned long)>
4002ad28:	e3a03102 	mov	r3, #-2147483648	; 0x80000000
4002ad2c:	e3a01000 	mov	r1, #0
4002ad30:	e5853140 	str	r3, [r5, #320]	; 0x140
4002ad34:	e3a00ffa 	mov	r0, #1000	; 0x3e8
4002ad38:	e59532d0 	ldr	r3, [r5, #720]	; 0x2d0
4002ad3c:	e3833001 	orr	r3, r3, #1
4002ad40:	e58532d0 	str	r3, [r5, #720]	; 0x2d0
4002ad44:	eb0003ac 	bl	4002bbfc <udelay(unsigned long, unsigned long)>
4002ad48:	e5953068 	ldr	r3, [r5, #104]	; 0x68
4002ad4c:	e3a01000 	mov	r1, #0
4002ad50:	e3a00ffa 	mov	r0, #1000	; 0x3e8
4002ad54:	e3c33001 	bic	r3, r3, #1
4002ad58:	e5853068 	str	r3, [r5, #104]	; 0x68
4002ad5c:	eb0003a6 	bl	4002bbfc <udelay(unsigned long, unsigned long)>
4002ad60:	e5953068 	ldr	r3, [r5, #104]	; 0x68
4002ad64:	e3833001 	orr	r3, r3, #1
4002ad68:	e5853068 	str	r3, [r5, #104]	; 0x68
4002ad6c:	e5943004 	ldr	r3, [r4, #4]
4002ad70:	e3c3320e 	bic	r3, r3, #-536870912	; 0xe0000000
4002ad74:	e5843004 	str	r3, [r4, #4]
4002ad78:	e59f30cc 	ldr	r3, [pc, #204]	; 4002ae4c <h3_codec_begin()+0x2fc>
4002ad7c:	e5853008 	str	r3, [r5, #8]
4002ad80:	e59f30c8 	ldr	r3, [pc, #200]	; 4002ae50 <h3_codec_begin()+0x300>
4002ad84:	e5853284 	str	r3, [r5, #644]	; 0x284
4002ad88:	e5953008 	ldr	r3, [r5, #8]
4002ad8c:	e3130201 	tst	r3, #268435456	; 0x10000000
4002ad90:	0afffffc 	beq	4002ad88 <h3_codec_begin()+0x238>
4002ad94:	e5943004 	ldr	r3, [r4, #4]
4002ad98:	e3a02000 	mov	r2, #0
4002ad9c:	e3a01080 	mov	r1, #128	; 0x80
4002ada0:	e1a00002 	mov	r0, r2
4002ada4:	e3833040 	orr	r3, r3, #64	; 0x40
4002ada8:	e5843004 	str	r3, [r4, #4]
4002adac:	e5943004 	ldr	r3, [r4, #4]
4002adb0:	e3c33020 	bic	r3, r3, #32
4002adb4:	e5843004 	str	r3, [r4, #4]
4002adb8:	e5943004 	ldr	r3, [r4, #4]
4002adbc:	e3833401 	orr	r3, r3, #16777216	; 0x1000000
4002adc0:	e5843004 	str	r3, [r4, #4]
4002adc4:	e5943000 	ldr	r3, [r4]
4002adc8:	e3833102 	orr	r3, r3, #-2147483648	; 0x80000000
4002adcc:	e5843000 	str	r3, [r4]
4002add0:	ebffff09 	bl	4002a9fc <codec_wrreg_prcm_bits(unsigned long, unsigned long, unsigned long)>
4002add4:	e5943004 	ldr	r3, [r4, #4]
4002add8:	e3833010 	orr	r3, r3, #16
4002addc:	e5843004 	str	r3, [r4, #4]
4002ade0:	e5943004 	ldr	r3, [r4, #4]
4002ade4:	e3833001 	orr	r3, r3, #1
4002ade8:	e5843004 	str	r3, [r4, #4]
4002adec:	e5943004 	ldr	r3, [r4, #4]
4002adf0:	e3c33c3f 	bic	r3, r3, #16128	; 0x3f00
4002adf4:	e3833c0f 	orr	r3, r3, #3840	; 0xf00
4002adf8:	e5843004 	str	r3, [r4, #4]
4002adfc:	e5943004 	ldr	r3, [r4, #4]
4002ae00:	e3c33201 	bic	r3, r3, #268435456	; 0x10000000
4002ae04:	e5843004 	str	r3, [r4, #4]
4002ae08:	e5943004 	ldr	r3, [r4, #4]
4002ae0c:	e3833301 	orr	r3, r3, #67108864	; 0x4000000
4002ae10:	e5843004 	str	r3, [r4, #4]
4002ae14:	e5943004 	ldr	r3, [r4, #4]
4002ae18:	e3833606 	orr	r3, r3, #6291456	; 0x600000
4002ae1c:	e5843004 	str	r3, [r4, #4]
4002ae20:	e8bd8070 	pop	{r4, r5, r6, pc}
4002ae24:	40480000 	submi	r0, r8, r0
4002ae28:	026f0241 	rsbeq	r0, pc, #268435460	; 0x10000004
4002ae2c:	40480038 	submi	r0, r8, r8, lsr r0
4002ae30:	01c22c20 	biceq	r2, r2, r0, lsr #24
4002ae34:	40484038 	submi	r4, r8, r8, lsr r0
4002ae38:	4048001c 	submi	r0, r8, ip, lsl r0
4002ae3c:	4002aa88 	andmi	sl, r2, r8, lsl #21
4002ae40:	01c20000 	biceq	r0, r2, r0
4002ae44:	4006c0d8 	ldrdmi	ip, [r6], -r8
4002ae48:	01c22c00 	biceq	r2, r2, r0, lsl #24
4002ae4c:	810d0d00 	tsthi	sp, r0, lsl #26
4002ae50:	c000ac02 	andgt	sl, r0, r2, lsl #24

4002ae54 <h3_codec_set_buffer_length(unsigned long)>:
4002ae54:	f10c0040 	cpsid	f
4002ae58:	e59f3024 	ldr	r3, [pc, #36]	; 4002ae84 <h3_codec_set_buffer_length(unsigned long)+0x30>
4002ae5c:	e3a02000 	mov	r2, #0
4002ae60:	e5832000 	str	r2, [r3]
4002ae64:	e59f301c 	ldr	r3, [pc, #28]	; 4002ae88 <h3_codec_set_buffer_length(unsigned long)+0x34>
4002ae68:	e5830000 	str	r0, [r3]
4002ae6c:	e59f3018 	ldr	r3, [pc, #24]	; 4002ae8c <h3_codec_set_buffer_length(unsigned long)+0x38>
4002ae70:	e1a00080 	lsl	r0, r0, #1
4002ae74:	e583000c 	str	r0, [r3, #12]
4002ae78:	e5830028 	str	r0, [r3, #40]	; 0x28
4002ae7c:	f1080040 	cpsie	f
4002ae80:	e12fff1e 	bx	lr
4002ae84:	01c02100 	biceq	r2, r0, r0, lsl #2
4002ae88:	4006c0cc 	andmi	ip, r6, ip, asr #1
4002ae8c:	40480000 	submi	r0, r8, r0

4002ae90 <h3_codec_push_data(short const*)>:
4002ae90:	e92d4030 	push	{r4, r5, lr}
4002ae94:	f10c0040 	cpsid	f
4002ae98:	e3a02c21 	mov	r2, #8448	; 0x2100
4002ae9c:	e3043038 	movw	r3, #16440	; 0x4038
4002aea0:	e34021c0 	movt	r2, #448	; 0x1c0
4002aea4:	e3443048 	movt	r3, #16456	; 0x4048
4002aea8:	e5922010 	ldr	r2, [r2, #16]
4002aeac:	e0222003 	eor	r2, r2, r3
4002aeb0:	e2122901 	ands	r2, r2, #16384	; 0x4000
4002aeb4:	1a000025 	bne	4002af50 <h3_codec_push_data(short const*)+0xc0>
4002aeb8:	e3a03038 	mov	r3, #56	; 0x38
4002aebc:	e30c10d4 	movw	r1, #49364	; 0xc0d4
4002aec0:	e3441006 	movt	r1, #16390	; 0x4006
4002aec4:	e3443048 	movt	r3, #16456	; 0x4048
4002aec8:	e5812000 	str	r2, [r1]
4002aecc:	e30c20cc 	movw	r2, #49356	; 0xc0cc
4002aed0:	e3442006 	movt	r2, #16390	; 0x4006
4002aed4:	e5924000 	ldr	r4, [r2]
4002aed8:	e3540000 	cmp	r4, #0
4002aedc:	0a000014 	beq	4002af34 <h3_codec_push_data(short const*)+0xa4>
4002aee0:	e2442001 	sub	r2, r4, #1
4002aee4:	e2801002 	add	r1, r0, #2
4002aee8:	e1530001 	cmp	r3, r1
4002aeec:	13520009 	cmpne	r2, #9
4002aef0:	83a02001 	movhi	r2, #1
4002aef4:	93a02000 	movls	r2, #0
4002aef8:	9a000019 	bls	4002af64 <h3_codec_push_data(short const*)+0xd4>
4002aefc:	e1a050a4 	lsr	r5, r4, #1
4002af00:	e1a0c000 	mov	ip, r0
4002af04:	e1a01003 	mov	r1, r3
4002af08:	e3a02000 	mov	r2, #0
4002af0c:	e49ce004 	ldr	lr, [ip], #4
4002af10:	e2822001 	add	r2, r2, #1
4002af14:	e1520005 	cmp	r2, r5
4002af18:	e481e004 	str	lr, [r1], #4
4002af1c:	1afffffa 	bne	4002af0c <h3_codec_push_data(short const*)+0x7c>
4002af20:	e3c42001 	bic	r2, r4, #1
4002af24:	e1540002 	cmp	r4, r2
4002af28:	e1a02082 	lsl	r2, r2, #1
4002af2c:	119010f2 	ldrshne	r1, [r0, r2]
4002af30:	118310b2 	strhne	r1, [r3, r2]
4002af34:	e30c30d0 	movw	r3, #49360	; 0xc0d0
4002af38:	e3a02000 	mov	r2, #0
4002af3c:	e3443006 	movt	r3, #16390	; 0x4006
4002af40:	e5832000 	str	r2, [r3]
4002af44:	f57ff05f 	dmb	sy
4002af48:	f1080040 	cpsie	f
4002af4c:	e8bd8030 	pop	{r4, r5, pc}
4002af50:	e30c20d4 	movw	r2, #49364	; 0xc0d4
4002af54:	e3a01001 	mov	r1, #1
4002af58:	e3442006 	movt	r2, #16390	; 0x4006
4002af5c:	e5821000 	str	r1, [r2]
4002af60:	eaffffd9 	b	4002aecc <h3_codec_push_data(short const*)+0x3c>
4002af64:	e2400002 	sub	r0, r0, #2
4002af68:	e1f010f2 	ldrsh	r1, [r0, #2]!
4002af6c:	e2822001 	add	r2, r2, #1
4002af70:	e1540002 	cmp	r4, r2
4002af74:	e0c310b2 	strh	r1, [r3], #2
4002af78:	1afffffa 	bne	4002af68 <h3_codec_push_data(short const*)+0xd8>
4002af7c:	eaffffec 	b	4002af34 <h3_codec_push_data(short const*)+0xa4>

4002af80 <h3_cpu_off>:
4002af80:	e92d4070 	push	{r4, r5, r6, lr}
4002af84:	e3a02001 	mov	r2, #1
4002af88:	e59f50a4 	ldr	r5, [pc, #164]	; 4002b034 <h3_cpu_off+0xb4>
4002af8c:	e2004003 	and	r4, r0, #3
4002af90:	e3a01000 	mov	r1, #0
4002af94:	e3a00014 	mov	r0, #20
4002af98:	e5953100 	ldr	r3, [r5, #256]	; 0x100
4002af9c:	e1833412 	orr	r3, r3, r2, lsl r4
4002afa0:	e5853100 	str	r3, [r5, #256]	; 0x100
4002afa4:	eb000314 	bl	4002bbfc <udelay(unsigned long, unsigned long)>
4002afa8:	e3540002 	cmp	r4, #2
4002afac:	03a030ff 	moveq	r3, #255	; 0xff
4002afb0:	05853148 	streq	r3, [r5, #328]	; 0x148
4002afb4:	0a000006 	beq	4002afd4 <h3_cpu_off+0x54>
4002afb8:	e3540003 	cmp	r4, #3
4002afbc:	03a030ff 	moveq	r3, #255	; 0xff
4002afc0:	0585314c 	streq	r3, [r5, #332]	; 0x14c
4002afc4:	0a000002 	beq	4002afd4 <h3_cpu_off+0x54>
4002afc8:	e3540001 	cmp	r4, #1
4002afcc:	03a030ff 	moveq	r3, #255	; 0xff
4002afd0:	05853144 	streq	r3, [r5, #324]	; 0x144
4002afd4:	e3a01000 	mov	r1, #0
4002afd8:	e3a0001e 	mov	r0, #30
4002afdc:	eb000306 	bl	4002bbfc <udelay(unsigned long, unsigned long)>
4002afe0:	e3540002 	cmp	r4, #2
4002afe4:	059f2048 	ldreq	r2, [pc, #72]	; 4002b034 <h3_cpu_off+0xb4>
4002afe8:	0a000009 	beq	4002b014 <h3_cpu_off+0x94>
4002afec:	e3540003 	cmp	r4, #3
4002aff0:	059f203c 	ldreq	r2, [pc, #60]	; 4002b034 <h3_cpu_off+0xb4>
4002aff4:	0a00000a 	beq	4002b024 <h3_cpu_off+0xa4>
4002aff8:	e3540001 	cmp	r4, #1
4002affc:	18bd8070 	popne	{r4, r5, r6, pc}
4002b000:	e59f202c 	ldr	r2, [pc, #44]	; 4002b034 <h3_cpu_off+0xb4>
4002b004:	e5923144 	ldr	r3, [r2, #324]	; 0x144
4002b008:	e35300ff 	cmp	r3, #255	; 0xff
4002b00c:	1afffffc 	bne	4002b004 <h3_cpu_off+0x84>
4002b010:	e8bd8070 	pop	{r4, r5, r6, pc}
4002b014:	e5923148 	ldr	r3, [r2, #328]	; 0x148
4002b018:	e35300ff 	cmp	r3, #255	; 0xff
4002b01c:	1afffffc 	bne	4002b014 <h3_cpu_off+0x94>
4002b020:	e8bd8070 	pop	{r4, r5, r6, pc}
4002b024:	e592314c 	ldr	r3, [r2, #332]	; 0x14c
4002b028:	e35300ff 	cmp	r3, #255	; 0xff
4002b02c:	1afffffc 	bne	4002b024 <h3_cpu_off+0xa4>
4002b030:	e8bd8070 	pop	{r4, r5, r6, pc}
4002b034:	01f01400 	mvnseq	r1, r0, lsl #8

4002b038 <h3_cpu_on>:
4002b038:	e92d4070 	push	{r4, r5, r6, lr}
4002b03c:	e2004003 	and	r4, r0, #3
4002b040:	e59f20ec 	ldr	r2, [pc, #236]	; 4002b134 <h3_cpu_on+0xfc>
4002b044:	e3a01000 	mov	r1, #0
4002b048:	e1a05304 	lsl	r5, r4, #6
4002b04c:	e3a00001 	mov	r0, #1
4002b050:	e285561f 	add	r5, r5, #32505856	; 0x1f00000
4002b054:	e1e06410 	mvn	r6, r0, lsl r4
4002b058:	e2855b07 	add	r5, r5, #7168	; 0x1c00
4002b05c:	e5851040 	str	r1, [r5, #64]	; 0x40
4002b060:	e5923184 	ldr	r3, [r2, #388]	; 0x184
4002b064:	e1c33410 	bic	r3, r3, r0, lsl r4
4002b068:	e3a0000a 	mov	r0, #10
4002b06c:	e5823184 	str	r3, [r2, #388]	; 0x184
4002b070:	eb0002e1 	bl	4002bbfc <udelay(unsigned long, unsigned long)>
4002b074:	e3540002 	cmp	r4, #2
4002b078:	0a000027 	beq	4002b11c <h3_cpu_on+0xe4>
4002b07c:	e3540003 	cmp	r4, #3
4002b080:	0a000028 	beq	4002b128 <h3_cpu_on+0xf0>
4002b084:	e3540001 	cmp	r4, #1
4002b088:	059f30a8 	ldreq	r3, [pc, #168]	; 4002b138 <h3_cpu_on+0x100>
4002b08c:	05934144 	ldreq	r4, [r3, #324]	; 0x144
4002b090:	18bd8070 	popne	{r4, r5, r6, pc}
4002b094:	e3a030fe 	mov	r3, #254	; 0xfe
4002b098:	e3a01000 	mov	r1, #0
4002b09c:	e5843000 	str	r3, [r4]
4002b0a0:	e3a00014 	mov	r0, #20
4002b0a4:	eb0002d4 	bl	4002bbfc <udelay(unsigned long, unsigned long)>
4002b0a8:	e3a030f8 	mov	r3, #248	; 0xf8
4002b0ac:	e3a01000 	mov	r1, #0
4002b0b0:	e5843000 	str	r3, [r4]
4002b0b4:	e3a0000a 	mov	r0, #10
4002b0b8:	eb0002cf 	bl	4002bbfc <udelay(unsigned long, unsigned long)>
4002b0bc:	e3a030e0 	mov	r3, #224	; 0xe0
4002b0c0:	e3a01000 	mov	r1, #0
4002b0c4:	e5843000 	str	r3, [r4]
4002b0c8:	e3a0000a 	mov	r0, #10
4002b0cc:	eb0002ca 	bl	4002bbfc <udelay(unsigned long, unsigned long)>
4002b0d0:	e3a03080 	mov	r3, #128	; 0x80
4002b0d4:	e3a01000 	mov	r1, #0
4002b0d8:	e5843000 	str	r3, [r4]
4002b0dc:	e3a0000a 	mov	r0, #10
4002b0e0:	eb0002c5 	bl	4002bbfc <udelay(unsigned long, unsigned long)>
4002b0e4:	e3a01000 	mov	r1, #0
4002b0e8:	e3a0000a 	mov	r0, #10
4002b0ec:	e5841000 	str	r1, [r4]
4002b0f0:	eb0002c1 	bl	4002bbfc <udelay(unsigned long, unsigned long)>
4002b0f4:	e5943000 	ldr	r3, [r4]
4002b0f8:	e3530000 	cmp	r3, #0
4002b0fc:	1afffffc 	bne	4002b0f4 <h3_cpu_on+0xbc>
4002b100:	e59f3030 	ldr	r3, [pc, #48]	; 4002b138 <h3_cpu_on+0x100>
4002b104:	e5932100 	ldr	r2, [r3, #256]	; 0x100
4002b108:	e0066002 	and	r6, r6, r2
4002b10c:	e5836100 	str	r6, [r3, #256]	; 0x100
4002b110:	e3a03003 	mov	r3, #3
4002b114:	e5853040 	str	r3, [r5, #64]	; 0x40
4002b118:	e8bd8070 	pop	{r4, r5, r6, pc}
4002b11c:	e59f3014 	ldr	r3, [pc, #20]	; 4002b138 <h3_cpu_on+0x100>
4002b120:	e5934148 	ldr	r4, [r3, #328]	; 0x148
4002b124:	eaffffda 	b	4002b094 <h3_cpu_on+0x5c>
4002b128:	e59f3008 	ldr	r3, [pc, #8]	; 4002b138 <h3_cpu_on+0x100>
4002b12c:	e593414c 	ldr	r4, [r3, #332]	; 0x14c
4002b130:	eaffffd7 	b	4002b094 <h3_cpu_on+0x5c>
4002b134:	01f01c00 	mvnseq	r1, r0, lsl #24
4002b138:	01f01400 	mvnseq	r1, r0, lsl #8

4002b13c <h3_cpu_set_clock>:
4002b13c:	e59f20e4 	ldr	r2, [pc, #228]	; 4002b228 <h3_cpu_set_clock+0xec>
4002b140:	e3a0c000 	mov	ip, #0
4002b144:	e92d4070 	push	{r4, r5, r6, lr}
4002b148:	e5923050 	ldr	r3, [r2, #80]	; 0x50
4002b14c:	e59f40d8 	ldr	r4, [pc, #216]	; 4002b22c <h3_cpu_set_clock+0xf0>
4002b150:	e3c33803 	bic	r3, r3, #196608	; 0x30000
4002b154:	e3833801 	orr	r3, r3, #65536	; 0x10000
4002b158:	e5823050 	str	r3, [r2, #80]	; 0x50
4002b15c:	e59f30cc 	ldr	r3, [pc, #204]	; 4002b230 <h3_cpu_set_clock+0xf4>
4002b160:	e0903003 	adds	r3, r0, r3
4002b164:	e2c1e000 	sbc	lr, r1, #0
4002b168:	e1540003 	cmp	r4, r3
4002b16c:	e0dc300e 	sbcs	r3, ip, lr
4002b170:	e59fe0bc 	ldr	lr, [pc, #188]	; 4002b234 <h3_cpu_set_clock+0xf8>
4002b174:	2a00000c 	bcs	4002b1ac <h3_cpu_set_clock+0x70>
4002b178:	e5923000 	ldr	r3, [r2]
4002b17c:	e003300e 	and	r3, r3, lr
4002b180:	e3833a01 	orr	r3, r3, #4096	; 0x1000
4002b184:	e5823000 	str	r3, [r2]
4002b188:	e59f2098 	ldr	r2, [pc, #152]	; 4002b228 <h3_cpu_set_clock+0xec>
4002b18c:	e5923000 	ldr	r3, [r2]
4002b190:	e3130201 	tst	r3, #268435456	; 0x10000000
4002b194:	0afffffc 	beq	4002b18c <h3_cpu_set_clock+0x50>
4002b198:	e5923050 	ldr	r3, [r2, #80]	; 0x50
4002b19c:	e3c33803 	bic	r3, r3, #196608	; 0x30000
4002b1a0:	e3833802 	orr	r3, r3, #131072	; 0x20000
4002b1a4:	e5823050 	str	r3, [r2, #80]	; 0x50
4002b1a8:	e8bd8070 	pop	{r4, r5, r6, pc}
4002b1ac:	e59f3084 	ldr	r3, [pc, #132]	; 4002b238 <h3_cpu_set_clock+0xfc>
4002b1b0:	e1530000 	cmp	r3, r0
4002b1b4:	e0dc3001 	sbcs	r3, ip, r1
4002b1b8:	33a02001 	movcc	r2, #1
4002b1bc:	33a0c002 	movcc	ip, #2
4002b1c0:	3a000006 	bcc	4002b1e0 <h3_cpu_set_clock+0xa4>
4002b1c4:	e59f3070 	ldr	r3, [pc, #112]	; 4002b23c <h3_cpu_set_clock+0x100>
4002b1c8:	e1530000 	cmp	r3, r0
4002b1cc:	e0dc3001 	sbcs	r3, ip, r1
4002b1d0:	23a02001 	movcs	r2, #1
4002b1d4:	33a02002 	movcc	r2, #2
4002b1d8:	33a0c004 	movcc	ip, #4
4002b1dc:	21a0c002 	movcs	ip, r2
4002b1e0:	e59f4040 	ldr	r4, [pc, #64]	; 4002b228 <h3_cpu_set_clock+0xec>
4002b1e4:	e2425001 	sub	r5, r2, #1
4002b1e8:	e5943000 	ldr	r3, [r4]
4002b1ec:	e003300e 	and	r3, r3, lr
4002b1f0:	e1853003 	orr	r3, r5, r3
4002b1f4:	e24c5001 	sub	r5, ip, #1
4002b1f8:	e1835205 	orr	r5, r3, r5, lsl #4
4002b1fc:	e59f303c 	ldr	r3, [pc, #60]	; 4002b240 <h3_cpu_set_clock+0x104>
4002b200:	e00c0c93 	mul	ip, r3, ip
4002b204:	e3a03000 	mov	r3, #0
4002b208:	e732f21c 	udiv	r2, ip, r2
4002b20c:	eb000965 	bl	4002d7a8 <__aeabi_uldivmod>
4002b210:	e2403001 	sub	r3, r0, #1
4002b214:	e1a03403 	lsl	r3, r3, #8
4002b218:	e2033c1f 	and	r3, r3, #7936	; 0x1f00
4002b21c:	e1833005 	orr	r3, r3, r5
4002b220:	e5843000 	str	r3, [r4]
4002b224:	eaffffd7 	b	4002b188 <h3_cpu_set_clock+0x4c>
4002b228:	01c20000 	biceq	r0, r2, r0
4002b22c:	8f0d1800 	svchi	0x000d1800
4002b230:	f4143e00 			; <UNDEFINED> instruction: 0xf4143e00
4002b234:	fffce0cc 			; <UNDEFINED> instruction: 0xfffce0cc
4002b238:	44aa2000 	strtmi	r2, [sl], #0
4002b23c:	2dc6c000 	stclcs	0, cr12, [r6]
4002b240:	016e3600 	cmneq	lr, r0, lsl #12

4002b244 <_sendstart()>:
4002b244:	e59f3054 	ldr	r3, [pc, #84]	; 4002b2a0 <_sendstart()+0x5c>
4002b248:	e3a02000 	mov	r2, #0
4002b24c:	e583201c 	str	r2, [r3, #28]
4002b250:	e3a02001 	mov	r2, #1
4002b254:	e5832018 	str	r2, [r3, #24]
4002b258:	e593200c 	ldr	r2, [r3, #12]
4002b25c:	e3822020 	orr	r2, r2, #32
4002b260:	e583200c 	str	r2, [r3, #12]
4002b264:	e59f2038 	ldr	r2, [pc, #56]	; 4002b2a4 <_sendstart()+0x60>
4002b268:	e2522001 	subs	r2, r2, #1
4002b26c:	3a000009 	bcc	4002b298 <_sendstart()+0x54>
4002b270:	e593100c 	ldr	r1, [r3, #12]
4002b274:	e3110008 	tst	r1, #8
4002b278:	0afffffa 	beq	4002b268 <_sendstart()+0x24>
4002b27c:	e3520000 	cmp	r2, #0
4002b280:	0a000004 	beq	4002b298 <_sendstart()+0x54>
4002b284:	e5933010 	ldr	r3, [r3, #16]
4002b288:	e3530008 	cmp	r3, #8
4002b28c:	03a00000 	moveq	r0, #0
4002b290:	13e00007 	mvnne	r0, #7
4002b294:	e12fff1e 	bx	lr
4002b298:	e3e00003 	mvn	r0, #3
4002b29c:	e12fff1e 	bx	lr
4002b2a0:	01c2ac00 	biceq	sl, r2, r0, lsl #24
4002b2a4:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

4002b2a8 <_sendslaveaddr(unsigned long)>:
4002b2a8:	e59f306c 	ldr	r3, [pc, #108]	; 4002b31c <_sendslaveaddr(unsigned long)+0x74>
4002b2ac:	e5d32000 	ldrb	r2, [r3]
4002b2b0:	e59f3068 	ldr	r3, [pc, #104]	; 4002b320 <_sendslaveaddr(unsigned long)+0x78>
4002b2b4:	e1802082 	orr	r2, r0, r2, lsl #1
4002b2b8:	e5832008 	str	r2, [r3, #8]
4002b2bc:	e593200c 	ldr	r2, [r3, #12]
4002b2c0:	e3822008 	orr	r2, r2, #8
4002b2c4:	e583200c 	str	r2, [r3, #12]
4002b2c8:	e30f2fff 	movw	r2, #65535	; 0xffff
4002b2cc:	e2522001 	subs	r2, r2, #1
4002b2d0:	3a00000f 	bcc	4002b314 <_sendslaveaddr(unsigned long)+0x6c>
4002b2d4:	e593100c 	ldr	r1, [r3, #12]
4002b2d8:	e3110008 	tst	r1, #8
4002b2dc:	0afffffa 	beq	4002b2cc <_sendslaveaddr(unsigned long)+0x24>
4002b2e0:	e3520000 	cmp	r2, #0
4002b2e4:	0a00000a 	beq	4002b314 <_sendslaveaddr(unsigned long)+0x6c>
4002b2e8:	e5933010 	ldr	r3, [r3, #16]
4002b2ec:	e3500000 	cmp	r0, #0
4002b2f0:	1a000003 	bne	4002b304 <_sendslaveaddr(unsigned long)+0x5c>
4002b2f4:	e3530018 	cmp	r3, #24
4002b2f8:	03a00000 	moveq	r0, #0
4002b2fc:	13e00017 	mvnne	r0, #23
4002b300:	e12fff1e 	bx	lr
4002b304:	e3530040 	cmp	r3, #64	; 0x40
4002b308:	03a00000 	moveq	r0, #0
4002b30c:	13e0003f 	mvnne	r0, #63	; 0x3f
4002b310:	e12fff1e 	bx	lr
4002b314:	e3e00003 	mvn	r0, #3
4002b318:	e12fff1e 	bx	lr
4002b31c:	4006c0dc 	ldrdmi	ip, [r6], -ip	; <UNPREDICTABLE>
4002b320:	01c2ac00 	biceq	sl, r2, r0, lsl #24

4002b324 <_stop() [clone .isra.0]>:
4002b324:	e59f3048 	ldr	r3, [pc, #72]	; 4002b374 <_stop() [clone .isra.0]+0x50>
4002b328:	e593200c 	ldr	r2, [r3, #12]
4002b32c:	e3822010 	orr	r2, r2, #16
4002b330:	e583200c 	str	r2, [r3, #12]
4002b334:	e30f2fff 	movw	r2, #65535	; 0xffff
4002b338:	e2522001 	subs	r2, r2, #1
4002b33c:	312fff1e 	bxcc	lr
4002b340:	e593100c 	ldr	r1, [r3, #12]
4002b344:	e3110010 	tst	r1, #16
4002b348:	1afffffa 	bne	4002b338 <_stop() [clone .isra.0]+0x14>
4002b34c:	e3520000 	cmp	r2, #0
4002b350:	012fff1e 	bxeq	lr
4002b354:	e3a02801 	mov	r2, #65536	; 0x10000
4002b358:	e2522001 	subs	r2, r2, #1
4002b35c:	0a000002 	beq	4002b36c <_stop() [clone .isra.0]+0x48>
4002b360:	e5931010 	ldr	r1, [r3, #16]
4002b364:	e35100f8 	cmp	r1, #248	; 0xf8
4002b368:	1afffffa 	bne	4002b358 <_stop() [clone .isra.0]+0x34>
4002b36c:	e5933010 	ldr	r3, [r3, #16]
4002b370:	e12fff1e 	bx	lr
4002b374:	01c2ac00 	biceq	sl, r2, r0, lsl #24

4002b378 <_set_clock(unsigned long, unsigned long) [clone .constprop.0]>:
4002b378:	e92d4030 	push	{r4, r5, lr}
4002b37c:	e3a0c001 	mov	ip, #1
4002b380:	e59fe078 	ldr	lr, [pc, #120]	; 4002b400 <_set_clock(unsigned long, unsigned long) [clone .constprop.0]+0x88>
4002b384:	e3a01000 	mov	r1, #0
4002b388:	e735f01e 	udiv	r5, lr, r0
4002b38c:	e733fc15 	udiv	r3, r5, ip
4002b390:	e2432001 	sub	r2, r3, #1
4002b394:	e352000f 	cmp	r2, #15
4002b398:	8a00000d 	bhi	4002b3d4 <_set_clock(unsigned long, unsigned long) [clone .constprop.0]+0x5c>
4002b39c:	e2824001 	add	r4, r2, #1
4002b3a0:	e733f41e 	udiv	r3, lr, r4
4002b3a4:	e733fc13 	udiv	r3, r3, ip
4002b3a8:	e1500003 	cmp	r0, r3
4002b3ac:	3a000006 	bcc	4002b3cc <_set_clock(unsigned long, unsigned long) [clone .constprop.0]+0x54>
4002b3b0:	e59f004c 	ldr	r0, [pc, #76]	; 4002b404 <_set_clock(unsigned long, unsigned long) [clone .constprop.0]+0x8c>
4002b3b4:	e5903014 	ldr	r3, [r0, #20]
4002b3b8:	e3c3307f 	bic	r3, r3, #127	; 0x7f
4002b3bc:	e1833001 	orr	r3, r3, r1
4002b3c0:	e1833182 	orr	r3, r3, r2, lsl #3
4002b3c4:	e5803014 	str	r3, [r0, #20]
4002b3c8:	e8bd8030 	pop	{r4, r5, pc}
4002b3cc:	e1a02004 	mov	r2, r4
4002b3d0:	eaffffef 	b	4002b394 <_set_clock(unsigned long, unsigned long) [clone .constprop.0]+0x1c>
4002b3d4:	e1a0c08c 	lsl	ip, ip, #1
4002b3d8:	e2811001 	add	r1, r1, #1
4002b3dc:	e3510008 	cmp	r1, #8
4002b3e0:	1affffe9 	bne	4002b38c <_set_clock(unsigned long, unsigned long) [clone .constprop.0]+0x14>
4002b3e4:	e59f1018 	ldr	r1, [pc, #24]	; 4002b404 <_set_clock(unsigned long, unsigned long) [clone .constprop.0]+0x8c>
4002b3e8:	e5913014 	ldr	r3, [r1, #20]
4002b3ec:	e3c3307f 	bic	r3, r3, #127	; 0x7f
4002b3f0:	e1833182 	orr	r3, r3, r2, lsl #3
4002b3f4:	e3833008 	orr	r3, r3, #8
4002b3f8:	e5813014 	str	r3, [r1, #20]
4002b3fc:	e8bd8030 	pop	{r4, r5, pc}
4002b400:	00249f00 	eoreq	r9, r4, r0, lsl #30
4002b404:	01c2ac00 	biceq	sl, r2, r0, lsl #24

4002b408 <h3_i2c_write(char const*, unsigned long)>:
4002b408:	e92d4070 	push	{r4, r5, r6, lr}
4002b40c:	e1a04000 	mov	r4, r0
4002b410:	e1a06001 	mov	r6, r1
4002b414:	ebffff8a 	bl	4002b244 <_sendstart()>
4002b418:	e3500000 	cmp	r0, #0
4002b41c:	1a00001c 	bne	4002b494 <h3_i2c_write(char const*, unsigned long)+0x8c>
4002b420:	ebffffa0 	bl	4002b2a8 <_sendslaveaddr(unsigned long)>
4002b424:	e2505000 	subs	r5, r0, #0
4002b428:	1a000019 	bne	4002b494 <h3_i2c_write(char const*, unsigned long)+0x8c>
4002b42c:	e0846006 	add	r6, r4, r6
4002b430:	e1a00004 	mov	r0, r4
4002b434:	e59f306c 	ldr	r3, [pc, #108]	; 4002b4a8 <h3_i2c_write(char const*, unsigned long)+0xa0>
4002b438:	e1560000 	cmp	r6, r0
4002b43c:	0a000015 	beq	4002b498 <h3_i2c_write(char const*, unsigned long)+0x90>
4002b440:	e4d02001 	ldrb	r2, [r0], #1
4002b444:	e5832008 	str	r2, [r3, #8]
4002b448:	e593200c 	ldr	r2, [r3, #12]
4002b44c:	e3822008 	orr	r2, r2, #8
4002b450:	e583200c 	str	r2, [r3, #12]
4002b454:	e30f2fff 	movw	r2, #65535	; 0xffff
4002b458:	e2522001 	subs	r2, r2, #1
4002b45c:	3a00000c 	bcc	4002b494 <h3_i2c_write(char const*, unsigned long)+0x8c>
4002b460:	e593100c 	ldr	r1, [r3, #12]
4002b464:	e3110008 	tst	r1, #8
4002b468:	0afffffa 	beq	4002b458 <h3_i2c_write(char const*, unsigned long)+0x50>
4002b46c:	e3520000 	cmp	r2, #0
4002b470:	0a000007 	beq	4002b494 <h3_i2c_write(char const*, unsigned long)+0x8c>
4002b474:	e30f2fff 	movw	r2, #65535	; 0xffff
4002b478:	e2522001 	subs	r2, r2, #1
4002b47c:	3a000004 	bcc	4002b494 <h3_i2c_write(char const*, unsigned long)+0x8c>
4002b480:	e5931010 	ldr	r1, [r3, #16]
4002b484:	e3510028 	cmp	r1, #40	; 0x28
4002b488:	1afffffa 	bne	4002b478 <h3_i2c_write(char const*, unsigned long)+0x70>
4002b48c:	e3520000 	cmp	r2, #0
4002b490:	1affffe8 	bne	4002b438 <h3_i2c_write(char const*, unsigned long)+0x30>
4002b494:	e3e05000 	mvn	r5, #0
4002b498:	e2650000 	rsb	r0, r5, #0
4002b49c:	ebffffa0 	bl	4002b324 <_stop() [clone .isra.0]>
4002b4a0:	e6ef0070 	uxtb	r0, r0
4002b4a4:	e8bd8070 	pop	{r4, r5, r6, pc}
4002b4a8:	01c2ac00 	biceq	sl, r2, r0, lsl #24

4002b4ac <h3_i2c_read(char*, unsigned long)>:
4002b4ac:	e92d4070 	push	{r4, r5, r6, lr}
4002b4b0:	e1a05000 	mov	r5, r0
4002b4b4:	e1a04001 	mov	r4, r1
4002b4b8:	ebffff61 	bl	4002b244 <_sendstart()>
4002b4bc:	e3500000 	cmp	r0, #0
4002b4c0:	0a000003 	beq	4002b4d4 <h3_i2c_read(char*, unsigned long)+0x28>
4002b4c4:	e3e00000 	mvn	r0, #0
4002b4c8:	e2600000 	rsb	r0, r0, #0
4002b4cc:	ebffff94 	bl	4002b324 <_stop() [clone .isra.0]>
4002b4d0:	e8bd8070 	pop	{r4, r5, r6, pc}
4002b4d4:	e3a00001 	mov	r0, #1
4002b4d8:	ebffff72 	bl	4002b2a8 <_sendslaveaddr(unsigned long)>
4002b4dc:	e2502000 	subs	r2, r0, #0
4002b4e0:	1afffff7 	bne	4002b4c4 <h3_i2c_read(char*, unsigned long)+0x18>
4002b4e4:	e3540001 	cmp	r4, #1
4002b4e8:	12444001 	subne	r4, r4, #1
4002b4ec:	159f311c 	ldrne	r3, [pc, #284]	; 4002b610 <h3_i2c_read(char*, unsigned long)+0x164>
4002b4f0:	1a000011 	bne	4002b53c <h3_i2c_read(char*, unsigned long)+0x90>
4002b4f4:	e59f3114 	ldr	r3, [pc, #276]	; 4002b610 <h3_i2c_read(char*, unsigned long)+0x164>
4002b4f8:	e593200c 	ldr	r2, [r3, #12]
4002b4fc:	e3822008 	orr	r2, r2, #8
4002b500:	e583200c 	str	r2, [r3, #12]
4002b504:	e30f2fff 	movw	r2, #65535	; 0xffff
4002b508:	e2522001 	subs	r2, r2, #1
4002b50c:	3affffec 	bcc	4002b4c4 <h3_i2c_read(char*, unsigned long)+0x18>
4002b510:	e593100c 	ldr	r1, [r3, #12]
4002b514:	e3110008 	tst	r1, #8
4002b518:	0afffffa 	beq	4002b508 <h3_i2c_read(char*, unsigned long)+0x5c>
4002b51c:	e3520000 	cmp	r2, #0
4002b520:	0affffe7 	beq	4002b4c4 <h3_i2c_read(char*, unsigned long)+0x18>
4002b524:	e5932008 	ldr	r2, [r3, #8]
4002b528:	e5c52000 	strb	r2, [r5]
4002b52c:	e5930010 	ldr	r0, [r3, #16]
4002b530:	e2500058 	subs	r0, r0, #88	; 0x58
4002b534:	13e00000 	mvnne	r0, #0
4002b538:	eaffffe2 	b	4002b4c8 <h3_i2c_read(char*, unsigned long)+0x1c>
4002b53c:	e1540002 	cmp	r4, r2
4002b540:	9a000017 	bls	4002b5a4 <h3_i2c_read(char*, unsigned long)+0xf8>
4002b544:	e593100c 	ldr	r1, [r3, #12]
4002b548:	e593100c 	ldr	r1, [r3, #12]
4002b54c:	e381100c 	orr	r1, r1, #12
4002b550:	e583100c 	str	r1, [r3, #12]
4002b554:	e30f1fff 	movw	r1, #65535	; 0xffff
4002b558:	e2511001 	subs	r1, r1, #1
4002b55c:	3affffd8 	bcc	4002b4c4 <h3_i2c_read(char*, unsigned long)+0x18>
4002b560:	e593000c 	ldr	r0, [r3, #12]
4002b564:	e3100008 	tst	r0, #8
4002b568:	0afffffa 	beq	4002b558 <h3_i2c_read(char*, unsigned long)+0xac>
4002b56c:	e3510000 	cmp	r1, #0
4002b570:	0affffd3 	beq	4002b4c4 <h3_i2c_read(char*, unsigned long)+0x18>
4002b574:	e5931008 	ldr	r1, [r3, #8]
4002b578:	e7c51002 	strb	r1, [r5, r2]
4002b57c:	e30f1fff 	movw	r1, #65535	; 0xffff
4002b580:	e2511001 	subs	r1, r1, #1
4002b584:	3affffce 	bcc	4002b4c4 <h3_i2c_read(char*, unsigned long)+0x18>
4002b588:	e5930010 	ldr	r0, [r3, #16]
4002b58c:	e3500050 	cmp	r0, #80	; 0x50
4002b590:	1afffffa 	bne	4002b580 <h3_i2c_read(char*, unsigned long)+0xd4>
4002b594:	e3510000 	cmp	r1, #0
4002b598:	0affffc9 	beq	4002b4c4 <h3_i2c_read(char*, unsigned long)+0x18>
4002b59c:	e2822001 	add	r2, r2, #1
4002b5a0:	eaffffe5 	b	4002b53c <h3_i2c_read(char*, unsigned long)+0x90>
4002b5a4:	e593200c 	ldr	r2, [r3, #12]
4002b5a8:	e20220fb 	and	r2, r2, #251	; 0xfb
4002b5ac:	e583200c 	str	r2, [r3, #12]
4002b5b0:	e593200c 	ldr	r2, [r3, #12]
4002b5b4:	e3822008 	orr	r2, r2, #8
4002b5b8:	e583200c 	str	r2, [r3, #12]
4002b5bc:	e30f3fff 	movw	r3, #65535	; 0xffff
4002b5c0:	e59f2048 	ldr	r2, [pc, #72]	; 4002b610 <h3_i2c_read(char*, unsigned long)+0x164>
4002b5c4:	e2533001 	subs	r3, r3, #1
4002b5c8:	3affffbd 	bcc	4002b4c4 <h3_i2c_read(char*, unsigned long)+0x18>
4002b5cc:	e592100c 	ldr	r1, [r2, #12]
4002b5d0:	e3110008 	tst	r1, #8
4002b5d4:	0afffffa 	beq	4002b5c4 <h3_i2c_read(char*, unsigned long)+0x118>
4002b5d8:	e3530000 	cmp	r3, #0
4002b5dc:	0affffb8 	beq	4002b4c4 <h3_i2c_read(char*, unsigned long)+0x18>
4002b5e0:	e5921008 	ldr	r1, [r2, #8]
4002b5e4:	e7c51004 	strb	r1, [r5, r4]
4002b5e8:	e2533001 	subs	r3, r3, #1
4002b5ec:	3affffb4 	bcc	4002b4c4 <h3_i2c_read(char*, unsigned long)+0x18>
4002b5f0:	e5921010 	ldr	r1, [r2, #16]
4002b5f4:	e3510058 	cmp	r1, #88	; 0x58
4002b5f8:	1afffffa 	bne	4002b5e8 <h3_i2c_read(char*, unsigned long)+0x13c>
4002b5fc:	e3530000 	cmp	r3, #0
4002b600:	c3a00000 	movgt	r0, #0
4002b604:	d3a00001 	movle	r0, #1
4002b608:	e2600000 	rsb	r0, r0, #0
4002b60c:	eaffffad 	b	4002b4c8 <h3_i2c_read(char*, unsigned long)+0x1c>
4002b610:	01c2ac00 	biceq	sl, r2, r0, lsl #24

4002b614 <h3_i2c_set_baudrate(unsigned long)>:
4002b614:	e59f2010 	ldr	r2, [pc, #16]	; 4002b62c <h3_i2c_set_baudrate(unsigned long)+0x18>
4002b618:	e5921000 	ldr	r1, [r2]
4002b61c:	e1510000 	cmp	r1, r0
4002b620:	012fff1e 	bxeq	lr
4002b624:	e5820000 	str	r0, [r2]
4002b628:	eaffff52 	b	4002b378 <_set_clock(unsigned long, unsigned long) [clone .constprop.0]>
4002b62c:	4006c0e0 	andmi	ip, r6, r0, ror #1

4002b630 <h3_i2c_set_slave_address(unsigned char)>:
4002b630:	e59f3004 	ldr	r3, [pc, #4]	; 4002b63c <h3_i2c_set_slave_address(unsigned char)+0xc>
4002b634:	e5c30000 	strb	r0, [r3]
4002b638:	e12fff1e 	bx	lr
4002b63c:	4006c0dc 	ldrdmi	ip, [r6], -ip	; <UNPREDICTABLE>

4002b640 <h3_i2c_is_connected(unsigned char, unsigned long)>:
4002b640:	e59f3054 	ldr	r3, [pc, #84]	; 4002b69c <h3_i2c_is_connected(unsigned char, unsigned long)+0x5c>
4002b644:	e92d4013 	push	{r0, r1, r4, lr}
4002b648:	e1a04000 	mov	r4, r0
4002b64c:	e5c30000 	strb	r0, [r3]
4002b650:	e1a00001 	mov	r0, r1
4002b654:	ebffffee 	bl	4002b614 <h3_i2c_set_baudrate(unsigned long)>
4002b658:	e2441030 	sub	r1, r4, #48	; 0x30
4002b65c:	e2444050 	sub	r4, r4, #80	; 0x50
4002b660:	e354000f 	cmp	r4, #15
4002b664:	83510007 	cmphi	r1, #7
4002b668:	93a01001 	movls	r1, #1
4002b66c:	83a01000 	movhi	r1, #0
4002b670:	8a000006 	bhi	4002b690 <h3_i2c_is_connected(unsigned char, unsigned long)+0x50>
4002b674:	e3a01001 	mov	r1, #1
4002b678:	e28d0007 	add	r0, sp, #7
4002b67c:	ebffff8a 	bl	4002b4ac <h3_i2c_read(char*, unsigned long)>
4002b680:	e16f0f10 	clz	r0, r0
4002b684:	e1a002a0 	lsr	r0, r0, #5
4002b688:	e28dd008 	add	sp, sp, #8
4002b68c:	e8bd8010 	pop	{r4, pc}
4002b690:	e1a00001 	mov	r0, r1
4002b694:	ebffff5b 	bl	4002b408 <h3_i2c_write(char const*, unsigned long)>
4002b698:	eafffff8 	b	4002b680 <h3_i2c_is_connected(unsigned char, unsigned long)+0x40>
4002b69c:	4006c0dc 	ldrdmi	ip, [r6], -ip	; <UNPREDICTABLE>

4002b6a0 <h3_i2c_write_register(unsigned char, unsigned char)>:
4002b6a0:	e92d4007 	push	{r0, r1, r2, lr}
4002b6a4:	e5cd0004 	strb	r0, [sp, #4]
4002b6a8:	e28d0004 	add	r0, sp, #4
4002b6ac:	e5cd1005 	strb	r1, [sp, #5]
4002b6b0:	e3a01002 	mov	r1, #2
4002b6b4:	ebffff53 	bl	4002b408 <h3_i2c_write(char const*, unsigned long)>
4002b6b8:	e28dd00c 	add	sp, sp, #12
4002b6bc:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

4002b6c0 <h3_i2c_read_register(unsigned char, unsigned char&)>:
4002b6c0:	e92d4013 	push	{r0, r1, r4, lr}
4002b6c4:	e1a04001 	mov	r4, r1
4002b6c8:	e5cd0004 	strb	r0, [sp, #4]
4002b6cc:	e3a01001 	mov	r1, #1
4002b6d0:	e28d0004 	add	r0, sp, #4
4002b6d4:	ebffff4b 	bl	4002b408 <h3_i2c_write(char const*, unsigned long)>
4002b6d8:	e3a01001 	mov	r1, #1
4002b6dc:	e28d0004 	add	r0, sp, #4
4002b6e0:	ebffff71 	bl	4002b4ac <h3_i2c_read(char*, unsigned long)>
4002b6e4:	e5dd3004 	ldrb	r3, [sp, #4]
4002b6e8:	e5c43000 	strb	r3, [r4]
4002b6ec:	e28dd008 	add	sp, sp, #8
4002b6f0:	e8bd8010 	pop	{r4, pc}

4002b6f4 <_clear_fifos()>:
4002b6f4:	e59f3020 	ldr	r3, [pc, #32]	; 4002b71c <_clear_fifos()+0x28>
4002b6f8:	e59f2020 	ldr	r2, [pc, #32]	; 4002b720 <_clear_fifos()+0x2c>
4002b6fc:	e5823018 	str	r3, [r2, #24]
4002b700:	e3a03ffa 	mov	r3, #1000	; 0x3e8
4002b704:	e5921018 	ldr	r1, [r2, #24]
4002b708:	e3510000 	cmp	r1, #0
4002b70c:	012fff1e 	bxeq	lr
4002b710:	e2533001 	subs	r3, r3, #1
4002b714:	1afffffa 	bne	4002b704 <_clear_fifos()+0x10>
4002b718:	e12fff1e 	bx	lr
4002b71c:	80008000 	andhi	r8, r0, r0
4002b720:	01c69000 	biceq	r9, r6, r0

4002b724 <_setup_clock(unsigned long, unsigned long)>:
4002b724:	e3a0c000 	mov	ip, #0
4002b728:	e1a0200c 	mov	r2, ip
4002b72c:	e1a0300c 	mov	r3, ip
4002b730:	e92d40f0 	push	{r4, r5, r6, r7, lr}
4002b734:	e1a0e330 	lsr	lr, r0, r3
4002b738:	e1510330 	cmp	r1, r0, lsr r3
4002b73c:	8041500e 	subhi	r5, r1, lr
4002b740:	904e5001 	subls	r5, lr, r1
4002b744:	e1510002 	cmp	r1, r2
4002b748:	80414002 	subhi	r4, r1, r2
4002b74c:	90424001 	subls	r4, r2, r1
4002b750:	e1550004 	cmp	r5, r4
4002b754:	31a0c003 	movcc	ip, r3
4002b758:	e2833001 	add	r3, r3, #1
4002b75c:	31a0200e 	movcc	r2, lr
4002b760:	e353000f 	cmp	r3, #15
4002b764:	1afffff2 	bne	4002b734 <_setup_clock(unsigned long, unsigned long)+0x10>
4002b768:	e1a0540c 	lsl	r5, ip, #8
4002b76c:	e3a0c000 	mov	ip, #0
4002b770:	e1a0300c 	mov	r3, ip
4002b774:	e1a0400c 	mov	r4, ip
4002b778:	e1a0e084 	lsl	lr, r4, #1
4002b77c:	e28ee001 	add	lr, lr, #1
4002b780:	e73efe10 	udiv	lr, r0, lr
4002b784:	e151000e 	cmp	r1, lr
4002b788:	8041700e 	subhi	r7, r1, lr
4002b78c:	904e7001 	subls	r7, lr, r1
4002b790:	e1510003 	cmp	r1, r3
4002b794:	80416003 	subhi	r6, r1, r3
4002b798:	90436001 	subls	r6, r3, r1
4002b79c:	e1570006 	cmp	r7, r6
4002b7a0:	31a0c004 	movcc	ip, r4
4002b7a4:	e2844001 	add	r4, r4, #1
4002b7a8:	31a0300e 	movcc	r3, lr
4002b7ac:	e35400ff 	cmp	r4, #255	; 0xff
4002b7b0:	1afffff0 	bne	4002b778 <_setup_clock(unsigned long, unsigned long)+0x54>
4002b7b4:	e3530000 	cmp	r3, #0
4002b7b8:	030031ff 	movweq	r3, #511	; 0x1ff
4002b7bc:	01a0c004 	moveq	ip, r4
4002b7c0:	e38cca01 	orr	ip, ip, #4096	; 0x1000
4002b7c4:	0733f310 	udiveq	r3, r0, r3
4002b7c8:	e1510002 	cmp	r1, r2
4002b7cc:	0a00000a 	beq	4002b7fc <_setup_clock(unsigned long, unsigned long)+0xd8>
4002b7d0:	e1510003 	cmp	r1, r3
4002b7d4:	01a0500c 	moveq	r5, ip
4002b7d8:	0a000007 	beq	4002b7fc <_setup_clock(unsigned long, unsigned long)+0xd8>
4002b7dc:	e1510002 	cmp	r1, r2
4002b7e0:	80412002 	subhi	r2, r1, r2
4002b7e4:	90422001 	subls	r2, r2, r1
4002b7e8:	e1510003 	cmp	r1, r3
4002b7ec:	80411003 	subhi	r1, r1, r3
4002b7f0:	90431001 	subls	r1, r3, r1
4002b7f4:	e1520001 	cmp	r2, r1
4002b7f8:	21a0500c 	movcs	r5, ip
4002b7fc:	e59f3004 	ldr	r3, [pc, #4]	; 4002b808 <_setup_clock(unsigned long, unsigned long)+0xe4>
4002b800:	e5835024 	str	r5, [r3, #36]	; 0x24
4002b804:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
4002b808:	01c69000 	biceq	r9, r6, r0

4002b80c <h3_spi_set_speed_hz(unsigned long)>:
4002b80c:	e59f3018 	ldr	r3, [pc, #24]	; 4002b82c <h3_spi_set_speed_hz(unsigned long)+0x20>
4002b810:	e1a01000 	mov	r1, r0
4002b814:	e5932000 	ldr	r2, [r3]
4002b818:	e1520000 	cmp	r2, r0
4002b81c:	012fff1e 	bxeq	lr
4002b820:	e5830000 	str	r0, [r3]
4002b824:	e59f0004 	ldr	r0, [pc, #4]	; 4002b830 <h3_spi_set_speed_hz(unsigned long)+0x24>
4002b828:	eaffffbd 	b	4002b724 <_setup_clock(unsigned long, unsigned long)>
4002b82c:	4006c0e8 	andmi	ip, r6, r8, ror #1
4002b830:	23c34600 	biccs	r4, r3, #0, 12

4002b834 <h3_spi_setBitOrder(H3_SPI_BIT_ORDER)>:
4002b834:	e59f2014 	ldr	r2, [pc, #20]	; 4002b850 <h3_spi_setBitOrder(H3_SPI_BIT_ORDER)+0x1c>
4002b838:	e3500000 	cmp	r0, #0
4002b83c:	e5923008 	ldr	r3, [r2, #8]
4002b840:	13c33a01 	bicne	r3, r3, #4096	; 0x1000
4002b844:	03833a01 	orreq	r3, r3, #4096	; 0x1000
4002b848:	e5823008 	str	r3, [r2, #8]
4002b84c:	e12fff1e 	bx	lr
4002b850:	01c69000 	biceq	r9, r6, r0

4002b854 <h3_spi_setDataMode(unsigned char)>:
4002b854:	e59f2014 	ldr	r2, [pc, #20]	; 4002b870 <h3_spi_setDataMode(unsigned char)+0x1c>
4002b858:	e2000003 	and	r0, r0, #3
4002b85c:	e5923008 	ldr	r3, [r2, #8]
4002b860:	e3c33003 	bic	r3, r3, #3
4002b864:	e1800003 	orr	r0, r0, r3
4002b868:	e5820008 	str	r0, [r2, #8]
4002b86c:	e12fff1e 	bx	lr
4002b870:	01c69000 	biceq	r9, r6, r0

4002b874 <h3_spi_chipSelect(unsigned char)>:
4002b874:	e59f2018 	ldr	r2, [pc, #24]	; 4002b894 <h3_spi_chipSelect(unsigned char)+0x20>
4002b878:	e3500003 	cmp	r0, #3
4002b87c:	e5923008 	ldr	r3, [r2, #8]
4002b880:	93c33070 	bicls	r3, r3, #112	; 0x70
4002b884:	83830040 	orrhi	r0, r3, #64	; 0x40
4002b888:	91830200 	orrls	r0, r3, r0, lsl #4
4002b88c:	e5820008 	str	r0, [r2, #8]
4002b890:	e12fff1e 	bx	lr
4002b894:	01c69000 	biceq	r9, r6, r0

4002b898 <h3_spi_writenb(char const*, unsigned long)>:
4002b898:	e92d4070 	push	{r4, r5, r6, lr}
4002b89c:	e1a04001 	mov	r4, r1
4002b8a0:	e59f5114 	ldr	r5, [pc, #276]	; 4002b9bc <h3_spi_writenb(char const*, unsigned long)+0x124>
4002b8a4:	e5953004 	ldr	r3, [r5, #4]
4002b8a8:	e3c33080 	bic	r3, r3, #128	; 0x80
4002b8ac:	e5853004 	str	r3, [r5, #4]
4002b8b0:	ebffff8f 	bl	4002b6f4 <_clear_fifos()>
4002b8b4:	e59f3104 	ldr	r3, [pc, #260]	; 4002b9c0 <h3_spi_writenb(char const*, unsigned long)+0x128>
4002b8b8:	e5d33000 	ldrb	r3, [r3]
4002b8bc:	e3530000 	cmp	r3, #0
4002b8c0:	05854030 	streq	r4, [r5, #48]	; 0x30
4002b8c4:	05854034 	streq	r4, [r5, #52]	; 0x34
4002b8c8:	05854038 	streq	r4, [r5, #56]	; 0x38
4002b8cc:	0a000005 	beq	4002b8e8 <h3_spi_writenb(char const*, unsigned long)+0x50>
4002b8d0:	e2843001 	add	r3, r4, #1
4002b8d4:	e5853030 	str	r3, [r5, #48]	; 0x30
4002b8d8:	e5853034 	str	r3, [r5, #52]	; 0x34
4002b8dc:	e5853038 	str	r3, [r5, #56]	; 0x38
4002b8e0:	e3a03000 	mov	r3, #0
4002b8e4:	e5c53200 	strb	r3, [r5, #512]	; 0x200
4002b8e8:	e595201c 	ldr	r2, [r5, #28]
4002b8ec:	e3a03000 	mov	r3, #0
4002b8f0:	e59f10c4 	ldr	r1, [pc, #196]	; 4002b9bc <h3_spi_writenb(char const*, unsigned long)+0x124>
4002b8f4:	e7e72852 	ubfx	r2, r2, #16, #8
4002b8f8:	e2622040 	rsb	r2, r2, #64	; 0x40
4002b8fc:	e1530004 	cmp	r3, r4
4002b900:	0a000005 	beq	4002b91c <h3_spi_writenb(char const*, unsigned long)+0x84>
4002b904:	e1530002 	cmp	r3, r2
4002b908:	0a000003 	beq	4002b91c <h3_spi_writenb(char const*, unsigned long)+0x84>
4002b90c:	e7d0c003 	ldrb	ip, [r0, r3]
4002b910:	e2833001 	add	r3, r3, #1
4002b914:	e5c1c200 	strb	ip, [r1, #512]	; 0x200
4002b918:	eafffff7 	b	4002b8fc <h3_spi_writenb(char const*, unsigned long)+0x64>
4002b91c:	e5912008 	ldr	r2, [r1, #8]
4002b920:	e3822102 	orr	r2, r2, #-2147483648	; 0x80000000
4002b924:	e5812008 	str	r2, [r1, #8]
4002b928:	e3012020 	movw	r2, #4128	; 0x1020
4002b92c:	e5812010 	str	r2, [r1, #16]
4002b930:	e59f2084 	ldr	r2, [pc, #132]	; 4002b9bc <h3_spi_writenb(char const*, unsigned long)+0x124>
4002b934:	e5921014 	ldr	r1, [r2, #20]
4002b938:	e3110020 	tst	r1, #32
4002b93c:	0afffffc 	beq	4002b934 <h3_spi_writenb(char const*, unsigned long)+0x9c>
4002b940:	e59f1074 	ldr	r1, [pc, #116]	; 4002b9bc <h3_spi_writenb(char const*, unsigned long)+0x124>
4002b944:	e3a0c020 	mov	ip, #32
4002b948:	e582c014 	str	ip, [r2, #20]
4002b94c:	e1530004 	cmp	r3, r4
4002b950:	2a000011 	bcs	4002b99c <h3_spi_writenb(char const*, unsigned long)+0x104>
4002b954:	e591201c 	ldr	r2, [r1, #28]
4002b958:	e7e72852 	ubfx	r2, r2, #16, #8
4002b95c:	e2622040 	rsb	r2, r2, #64	; 0x40
4002b960:	e0822003 	add	r2, r2, r3
4002b964:	e1520003 	cmp	r2, r3
4002b968:	0a000005 	beq	4002b984 <h3_spi_writenb(char const*, unsigned long)+0xec>
4002b96c:	e7d0e003 	ldrb	lr, [r0, r3]
4002b970:	e2833001 	add	r3, r3, #1
4002b974:	e1540003 	cmp	r4, r3
4002b978:	e5c1e200 	strb	lr, [r1, #512]	; 0x200
4002b97c:	1afffff8 	bne	4002b964 <h3_spi_writenb(char const*, unsigned long)+0xcc>
4002b980:	e1a02004 	mov	r2, r4
4002b984:	e5913014 	ldr	r3, [r1, #20]
4002b988:	e3130020 	tst	r3, #32
4002b98c:	0afffffc 	beq	4002b984 <h3_spi_writenb(char const*, unsigned long)+0xec>
4002b990:	e581c014 	str	ip, [r1, #20]
4002b994:	e1a03002 	mov	r3, r2
4002b998:	eaffffeb 	b	4002b94c <h3_spi_writenb(char const*, unsigned long)+0xb4>
4002b99c:	e5913014 	ldr	r3, [r1, #20]
4002b9a0:	e3130a01 	tst	r3, #4096	; 0x1000
4002b9a4:	0afffffc 	beq	4002b99c <h3_spi_writenb(char const*, unsigned long)+0x104>
4002b9a8:	e5913014 	ldr	r3, [r1, #20]
4002b9ac:	e5813014 	str	r3, [r1, #20]
4002b9b0:	e3a03000 	mov	r3, #0
4002b9b4:	e5813010 	str	r3, [r1, #16]
4002b9b8:	e8bd8070 	pop	{r4, r5, r6, pc}
4002b9bc:	01c69000 	biceq	r9, r6, r0
4002b9c0:	4006c0e5 	andmi	ip, r6, r5, ror #1

4002b9c4 <h3_spi_write(unsigned short)>:
4002b9c4:	e92d4010 	push	{r4, lr}
4002b9c8:	e59f406c 	ldr	r4, [pc, #108]	; 4002ba3c <h3_spi_write(unsigned short)+0x78>
4002b9cc:	e5943004 	ldr	r3, [r4, #4]
4002b9d0:	e3c33080 	bic	r3, r3, #128	; 0x80
4002b9d4:	e5843004 	str	r3, [r4, #4]
4002b9d8:	ebffff45 	bl	4002b6f4 <_clear_fifos()>
4002b9dc:	e3a03002 	mov	r3, #2
4002b9e0:	e5843030 	str	r3, [r4, #48]	; 0x30
4002b9e4:	e5843034 	str	r3, [r4, #52]	; 0x34
4002b9e8:	e5843038 	str	r3, [r4, #56]	; 0x38
4002b9ec:	e1a03420 	lsr	r3, r0, #8
4002b9f0:	e6ef0070 	uxtb	r0, r0
4002b9f4:	e5c43200 	strb	r3, [r4, #512]	; 0x200
4002b9f8:	e5c40200 	strb	r0, [r4, #512]	; 0x200
4002b9fc:	e5943008 	ldr	r3, [r4, #8]
4002ba00:	e3833102 	orr	r3, r3, #-2147483648	; 0x80000000
4002ba04:	e5843008 	str	r3, [r4, #8]
4002ba08:	e3013020 	movw	r3, #4128	; 0x1020
4002ba0c:	e5843010 	str	r3, [r4, #16]
4002ba10:	e5943014 	ldr	r3, [r4, #20]
4002ba14:	e3130020 	tst	r3, #32
4002ba18:	0afffffc 	beq	4002ba10 <h3_spi_write(unsigned short)+0x4c>
4002ba1c:	e5943014 	ldr	r3, [r4, #20]
4002ba20:	e3130a01 	tst	r3, #4096	; 0x1000
4002ba24:	0afffffc 	beq	4002ba1c <h3_spi_write(unsigned short)+0x58>
4002ba28:	e5943014 	ldr	r3, [r4, #20]
4002ba2c:	e5843014 	str	r3, [r4, #20]
4002ba30:	e3a03000 	mov	r3, #0
4002ba34:	e5843010 	str	r3, [r4, #16]
4002ba38:	e8bd8010 	pop	{r4, pc}
4002ba3c:	01c69000 	biceq	r9, r6, r0

4002ba40 <h3_spi_dma_tx_is_active()>:
4002ba40:	e59f2034 	ldr	r2, [pc, #52]	; 4002ba7c <h3_spi_dma_tx_is_active()+0x3c>
4002ba44:	e5d20000 	ldrb	r0, [r2]
4002ba48:	e3500000 	cmp	r0, #0
4002ba4c:	012fff1e 	bxeq	lr
4002ba50:	e59f3028 	ldr	r3, [pc, #40]	; 4002ba80 <h3_spi_dma_tx_is_active()+0x40>
4002ba54:	e5931014 	ldr	r1, [r3, #20]
4002ba58:	e3110a01 	tst	r1, #4096	; 0x1000
4002ba5c:	012fff1e 	bxeq	lr
4002ba60:	e3a00000 	mov	r0, #0
4002ba64:	e3e01000 	mvn	r1, #0
4002ba68:	e5831014 	str	r1, [r3, #20]
4002ba6c:	e5830010 	str	r0, [r3, #16]
4002ba70:	e5c20000 	strb	r0, [r2]
4002ba74:	f57ff05f 	dmb	sy
4002ba78:	e12fff1e 	bx	lr
4002ba7c:	4006c0e4 	andmi	ip, r6, r4, ror #1
4002ba80:	01c69000 	biceq	r9, r6, r0

4002ba84 <h3_spi_dma_tx_prepare(unsigned long*)>:
4002ba84:	e59f3050 	ldr	r3, [pc, #80]	; 4002badc <h3_spi_dma_tx_prepare(unsigned long*)+0x58>
4002ba88:	e59f1050 	ldr	r1, [pc, #80]	; 4002bae0 <h3_spi_dma_tx_prepare(unsigned long*)+0x5c>
4002ba8c:	e59322c0 	ldr	r2, [r3, #704]	; 0x2c0
4002ba90:	e3822040 	orr	r2, r2, #64	; 0x40
4002ba94:	e58322c0 	str	r2, [r3, #704]	; 0x2c0
4002ba98:	e5932060 	ldr	r2, [r3, #96]	; 0x60
4002ba9c:	e3822040 	orr	r2, r2, #64	; 0x40
4002baa0:	e5832060 	str	r2, [r3, #96]	; 0x60
4002baa4:	e59f3038 	ldr	r3, [pc, #56]	; 4002bae4 <h3_spi_dma_tx_prepare(unsigned long*)+0x60>
4002baa8:	e59f2038 	ldr	r2, [pc, #56]	; 4002bae8 <h3_spi_dma_tx_prepare(unsigned long*)+0x64>
4002baac:	e5831008 	str	r1, [r3, #8]
4002bab0:	e3a01008 	mov	r1, #8
4002bab4:	e5832000 	str	r2, [r3]
4002bab8:	e5831010 	str	r1, [r3, #16]
4002babc:	e59f2028 	ldr	r2, [pc, #40]	; 4002baec <h3_spi_dma_tx_prepare(unsigned long*)+0x68>
4002bac0:	e59f1028 	ldr	r1, [pc, #40]	; 4002baf0 <h3_spi_dma_tx_prepare(unsigned long*)+0x6c>
4002bac4:	e5832004 	str	r2, [r3, #4]
4002bac8:	e5831014 	str	r1, [r3, #20]
4002bacc:	e59f3020 	ldr	r3, [pc, #32]	; 4002baf4 <h3_spi_dma_tx_prepare(unsigned long*)+0x70>
4002bad0:	e5803000 	str	r3, [r0]
4002bad4:	e1a00002 	mov	r0, r2
4002bad8:	e12fff1e 	bx	lr
4002badc:	01c20000 	biceq	r0, r2, r0
4002bae0:	01c69200 	biceq	r9, r6, r0, lsl #4
4002bae4:	404c0000 	submi	r0, ip, r0
4002bae8:	00380001 	eorseq	r0, r8, r1
4002baec:	404c001c 	submi	r0, ip, ip, lsl r0
4002baf0:	fffff800 			; <UNDEFINED> instruction: 0xfffff800
4002baf4:	0001ffe4 	andeq	pc, r1, r4, ror #31

4002baf8 <h3_spi_dma_tx_start(unsigned char const*, unsigned long)>:
4002baf8:	e59f2070 	ldr	r2, [pc, #112]	; 4002bb70 <h3_spi_dma_tx_start(unsigned char const*, unsigned long)+0x78>
4002bafc:	e5820004 	str	r0, [r2, #4]
4002bb00:	e582100c 	str	r1, [r2, #12]
4002bb04:	f57ff05f 	dmb	sy
4002bb08:	e59f3064 	ldr	r3, [pc, #100]	; 4002bb74 <h3_spi_dma_tx_start(unsigned char const*, unsigned long)+0x7c>
4002bb0c:	e5930004 	ldr	r0, [r3, #4]
4002bb10:	e3c00080 	bic	r0, r0, #128	; 0x80
4002bb14:	e5830004 	str	r0, [r3, #4]
4002bb18:	e59f0058 	ldr	r0, [pc, #88]	; 4002bb78 <h3_spi_dma_tx_start(unsigned char const*, unsigned long)+0x80>
4002bb1c:	e5830018 	str	r0, [r3, #24]
4002bb20:	e3e00000 	mvn	r0, #0
4002bb24:	e5830014 	str	r0, [r3, #20]
4002bb28:	e3a00a01 	mov	r0, #4096	; 0x1000
4002bb2c:	e5830010 	str	r0, [r3, #16]
4002bb30:	e5831030 	str	r1, [r3, #48]	; 0x30
4002bb34:	e5831034 	str	r1, [r3, #52]	; 0x34
4002bb38:	e5831038 	str	r1, [r3, #56]	; 0x38
4002bb3c:	e5931008 	ldr	r1, [r3, #8]
4002bb40:	e3811102 	orr	r1, r1, #-2147483648	; 0x80000000
4002bb44:	e5831008 	str	r1, [r3, #8]
4002bb48:	e5931018 	ldr	r1, [r3, #24]
4002bb4c:	e3811401 	orr	r1, r1, #16777216	; 0x1000000
4002bb50:	e5831018 	str	r1, [r3, #24]
4002bb54:	e3a03001 	mov	r3, #1
4002bb58:	e59f101c 	ldr	r1, [pc, #28]	; 4002bb7c <h3_spi_dma_tx_start(unsigned char const*, unsigned long)+0x84>
4002bb5c:	e5812008 	str	r2, [r1, #8]
4002bb60:	e59f2018 	ldr	r2, [pc, #24]	; 4002bb80 <h3_spi_dma_tx_start(unsigned char const*, unsigned long)+0x88>
4002bb64:	e5813000 	str	r3, [r1]
4002bb68:	e5c23000 	strb	r3, [r2]
4002bb6c:	e12fff1e 	bx	lr
4002bb70:	404c0000 	submi	r0, ip, r0
4002bb74:	01c69000 	biceq	r9, r6, r0
4002bb78:	80008000 	andhi	r8, r0, r0
4002bb7c:	01c02200 	biceq	r2, r0, r0, lsl #4
4002bb80:	4006c0e4 	andmi	ip, r6, r4, ror #1

4002bb84 <h3_thermal_setshut(int)>:
4002bb84:	e59fc028 	ldr	ip, [pc, #40]	; 4002bbb4 <h3_thermal_setshut(int)+0x30>
4002bb88:	e59f2028 	ldr	r2, [pc, #40]	; 4002bbb8 <h3_thermal_setshut(int)+0x34>
4002bb8c:	e59f1028 	ldr	r1, [pc, #40]	; 4002bbbc <h3_thermal_setshut(int)+0x38>
4002bb90:	e022209c 	mla	r2, ip, r0, r2
4002bb94:	e5913060 	ldr	r3, [r1, #96]	; 0x60
4002bb98:	e3a00ffa 	mov	r0, #1000	; 0x3e8
4002bb9c:	e712f012 	sdiv	r2, r2, r0
4002bba0:	e3c336ff 	bic	r3, r3, #267386880	; 0xff00000
4002bba4:	e3c3380f 	bic	r3, r3, #983040	; 0xf0000
4002bba8:	e1833802 	orr	r3, r3, r2, lsl #16
4002bbac:	e5813060 	str	r3, [r1, #96]	; 0x60
4002bbb0:	e12fff1e 	bx	lr
4002bbb4:	ffffdfc3 			; <UNDEFINED> instruction: 0xffffdfc3
4002bbb8:	001b5fd0 			; <UNDEFINED> instruction: 0x001b5fd0
4002bbbc:	01c25000 	biceq	r5, r2, r0

4002bbc0 <h3_thermal_setalarm(int)>:
4002bbc0:	e59fc028 	ldr	ip, [pc, #40]	; 4002bbf0 <h3_thermal_setalarm(int)+0x30>
4002bbc4:	e59f2028 	ldr	r2, [pc, #40]	; 4002bbf4 <h3_thermal_setalarm(int)+0x34>
4002bbc8:	e59f1028 	ldr	r1, [pc, #40]	; 4002bbf8 <h3_thermal_setalarm(int)+0x38>
4002bbcc:	e022209c 	mla	r2, ip, r0, r2
4002bbd0:	e5913050 	ldr	r3, [r1, #80]	; 0x50
4002bbd4:	e3a00ffa 	mov	r0, #1000	; 0x3e8
4002bbd8:	e712f012 	sdiv	r2, r2, r0
4002bbdc:	e3c336ff 	bic	r3, r3, #267386880	; 0xff00000
4002bbe0:	e3c3380f 	bic	r3, r3, #983040	; 0xf0000
4002bbe4:	e1833802 	orr	r3, r3, r2, lsl #16
4002bbe8:	e5813050 	str	r3, [r1, #80]	; 0x50
4002bbec:	e12fff1e 	bx	lr
4002bbf0:	ffffdfc3 			; <UNDEFINED> instruction: 0xffffdfc3
4002bbf4:	001b5fd0 			; <UNDEFINED> instruction: 0x001b5fd0
4002bbf8:	01c25000 	biceq	r5, r2, r0

4002bbfc <udelay(unsigned long, unsigned long)>:
4002bbfc:	e59fc03c 	ldr	ip, [pc, #60]	; 4002bc40 <udelay(unsigned long, unsigned long)+0x44>
4002bc00:	e3510000 	cmp	r1, #0
4002bc04:	e3a03064 	mov	r3, #100	; 0x64
4002bc08:	e0000093 	mul	r0, r3, r0
4002bc0c:	059f302c 	ldreq	r3, [pc, #44]	; 4002bc40 <udelay(unsigned long, unsigned long)+0x44>
4002bc10:	0593101c 	ldreq	r1, [r3, #28]
4002bc14:	e3a03000 	mov	r3, #0
4002bc18:	e59c201c 	ldr	r2, [ip, #28]
4002bc1c:	e1510002 	cmp	r1, r2
4002bc20:	0afffffc 	beq	4002bc18 <udelay(unsigned long, unsigned long)+0x1c>
4002bc24:	e0813003 	add	r3, r1, r3
4002bc28:	32833001 	addcc	r3, r3, #1
4002bc2c:	e0433002 	sub	r3, r3, r2
4002bc30:	e1530000 	cmp	r3, r0
4002bc34:	812fff1e 	bxhi	lr
4002bc38:	e1a01002 	mov	r1, r2
4002bc3c:	eafffff5 	b	4002bc18 <udelay(unsigned long, unsigned long)+0x1c>
4002bc40:	01c60000 	biceq	r0, r6, r0

4002bc44 <h3_watchdog_enable()>:
4002bc44:	e59f301c 	ldr	r3, [pc, #28]	; 4002bc68 <h3_watchdog_enable()+0x24>
4002bc48:	e3a02001 	mov	r2, #1
4002bc4c:	e58320b4 	str	r2, [r3, #180]	; 0xb4
4002bc50:	e3a02010 	mov	r2, #16
4002bc54:	e58320b8 	str	r2, [r3, #184]	; 0xb8
4002bc58:	e59320b8 	ldr	r2, [r3, #184]	; 0xb8
4002bc5c:	e3822001 	orr	r2, r2, #1
4002bc60:	e58320b8 	str	r2, [r3, #184]	; 0xb8
4002bc64:	e12fff1e 	bx	lr
4002bc68:	01c20c00 	biceq	r0, r2, r0, lsl #24

4002bc6c <h3_watchdog_restart()>:
4002bc6c:	e59f3008 	ldr	r3, [pc, #8]	; 4002bc7c <h3_watchdog_restart()+0x10>
4002bc70:	e30124af 	movw	r2, #5295	; 0x14af
4002bc74:	e58320b0 	str	r2, [r3, #176]	; 0xb0
4002bc78:	e12fff1e 	bx	lr
4002bc7c:	01c20c00 	biceq	r0, r2, r0, lsl #24

4002bc80 <h3_watchdog_disable()>:
4002bc80:	e59f3008 	ldr	r3, [pc, #8]	; 4002bc90 <h3_watchdog_disable()+0x10>
4002bc84:	e3a02000 	mov	r2, #0
4002bc88:	e58320b8 	str	r2, [r3, #184]	; 0xb8
4002bc8c:	e12fff1e 	bx	lr
4002bc90:	01c20c00 	biceq	r0, r2, r0, lsl #24

4002bc94 <TIMER1_IRQHandler()>:
4002bc94:	e30c30f4 	movw	r3, #49396	; 0xc0f4
4002bc98:	e3a02b03 	mov	r2, #3072	; 0xc00
4002bc9c:	e3443006 	movt	r3, #16390	; 0x4006
4002bca0:	e3a01002 	mov	r1, #2
4002bca4:	e34021c2 	movt	r2, #450	; 0x1c2
4002bca8:	e5933000 	ldr	r3, [r3]
4002bcac:	e5821004 	str	r1, [r2, #4]
4002bcb0:	e3530000 	cmp	r3, #0
4002bcb4:	012fff1e 	bxeq	lr
4002bcb8:	e3a02000 	mov	r2, #0
4002bcbc:	e34021c6 	movt	r2, #454	; 0x1c6
4002bcc0:	e592001c 	ldr	r0, [r2, #28]
4002bcc4:	e12fff13 	bx	r3

4002bcc8 <TIMER0_IRQHandler()>:
4002bcc8:	e30c30f0 	movw	r3, #49392	; 0xc0f0
4002bccc:	e3a02b03 	mov	r2, #3072	; 0xc00
4002bcd0:	e3443006 	movt	r3, #16390	; 0x4006
4002bcd4:	e3a01001 	mov	r1, #1
4002bcd8:	e34021c2 	movt	r2, #450	; 0x1c2
4002bcdc:	e5933000 	ldr	r3, [r3]
4002bce0:	e5821004 	str	r1, [r2, #4]
4002bce4:	e3530000 	cmp	r3, #0
4002bce8:	012fff1e 	bxeq	lr
4002bcec:	e3a02000 	mov	r2, #0
4002bcf0:	e34021c6 	movt	r2, #454	; 0x1c6
4002bcf4:	e592001c 	ldr	r0, [r2, #28]
4002bcf8:	e12fff13 	bx	r3

4002bcfc <ARM_Physical_Timer_IRQHandler()>:
4002bcfc:	e3a03c36 	mov	r3, #13824	; 0x3600
4002bd00:	e340316e 	movt	r3, #366	; 0x16e
4002bd04:	ee0e3f12 	mcr	15, 0, r3, cr14, cr2, {0}
4002bd08:	e3a03001 	mov	r3, #1
4002bd0c:	ee0e3f32 	mcr	15, 0, r3, cr14, cr2, {1}
4002bd10:	e30c30fc 	movw	r3, #49404	; 0xc0fc
4002bd14:	e3443006 	movt	r3, #16390	; 0x4006
4002bd18:	e5932000 	ldr	r2, [r3]
4002bd1c:	e3520000 	cmp	r2, #0
4002bd20:	012fff1e 	bxeq	lr
4002bd24:	e5933000 	ldr	r3, [r3]
4002bd28:	e12fff13 	bx	r3

4002bd2c <ARM_Virtual_Timer_IRQHandler()>:
4002bd2c:	e30c30ec 	movw	r3, #49388	; 0xc0ec
4002bd30:	e3443006 	movt	r3, #16390	; 0x4006
4002bd34:	e5933000 	ldr	r3, [r3]
4002bd38:	ee0e3f13 	mcr	15, 0, r3, cr14, cr3, {0}
4002bd3c:	e3a03001 	mov	r3, #1
4002bd40:	ee0e3f33 	mcr	15, 0, r3, cr14, cr3, {1}
4002bd44:	e30c30f8 	movw	r3, #49400	; 0xc0f8
4002bd48:	e3443006 	movt	r3, #16390	; 0x4006
4002bd4c:	e5932000 	ldr	r2, [r3]
4002bd50:	e3520000 	cmp	r2, #0
4002bd54:	012fff1e 	bxeq	lr
4002bd58:	e5933000 	ldr	r3, [r3]
4002bd5c:	e12fff13 	bx	r3

4002bd60 <irq_timer_set(irq_timers, void (*)(unsigned long))>:
4002bd60:	e92d4010 	push	{r4, lr}
4002bd64:	e2504000 	subs	r4, r0, #0
4002bd68:	0a000014 	beq	4002bdc0 <irq_timer_set(irq_timers, void (*)(unsigned long))+0x60>
4002bd6c:	e3540001 	cmp	r4, #1
4002bd70:	18bd8010 	popne	{r4, pc}
4002bd74:	e30c20f4 	movw	r2, #49396	; 0xc0f4
4002bd78:	e3510000 	cmp	r1, #0
4002bd7c:	e3442006 	movt	r2, #16390	; 0x4006
4002bd80:	e3a03b03 	mov	r3, #3072	; 0xc00
4002bd84:	e5821000 	str	r1, [r2]
4002bd88:	0a000029 	beq	4002be34 <irq_timer_set(irq_timers, void (*)(unsigned long))+0xd4>
4002bd8c:	e34031c2 	movt	r3, #450	; 0x1c2
4002bd90:	e3a02014 	mov	r2, #20
4002bd94:	e30b1c94 	movw	r1, #48276	; 0xbc94
4002bd98:	e3a00033 	mov	r0, #51	; 0x33
4002bd9c:	e5832020 	str	r2, [r3, #32]
4002bda0:	e5932000 	ldr	r2, [r3]
4002bda4:	e3441002 	movt	r1, #16386	; 0x4002
4002bda8:	e3822002 	orr	r2, r2, #2
4002bdac:	e5832000 	str	r2, [r3]
4002bdb0:	ebfff63d 	bl	400296ac <IRQ_SetHandler>
4002bdb4:	e1a01004 	mov	r1, r4
4002bdb8:	e3a00033 	mov	r0, #51	; 0x33
4002bdbc:	ea000011 	b	4002be08 <irq_timer_set(irq_timers, void (*)(unsigned long))+0xa8>
4002bdc0:	e30c20f0 	movw	r2, #49392	; 0xc0f0
4002bdc4:	e3510000 	cmp	r1, #0
4002bdc8:	e3442006 	movt	r2, #16390	; 0x4006
4002bdcc:	e3a03b03 	mov	r3, #3072	; 0xc00
4002bdd0:	e5821000 	str	r1, [r2]
4002bdd4:	0a00000e 	beq	4002be14 <irq_timer_set(irq_timers, void (*)(unsigned long))+0xb4>
4002bdd8:	e34031c2 	movt	r3, #450	; 0x1c2
4002bddc:	e3a02014 	mov	r2, #20
4002bde0:	e30b1cc8 	movw	r1, #48328	; 0xbcc8
4002bde4:	e3a00032 	mov	r0, #50	; 0x32
4002bde8:	e5832010 	str	r2, [r3, #16]
4002bdec:	e5932000 	ldr	r2, [r3]
4002bdf0:	e3441002 	movt	r1, #16386	; 0x4002
4002bdf4:	e3822001 	orr	r2, r2, #1
4002bdf8:	e5832000 	str	r2, [r3]
4002bdfc:	ebfff62a 	bl	400296ac <IRQ_SetHandler>
4002be00:	e3a01001 	mov	r1, #1
4002be04:	e3a00032 	mov	r0, #50	; 0x32
4002be08:	eb00008b 	bl	4002c03c <gic_irq_config(T_H3_IRQn, GIC_CORE_TypeDef)>
4002be0c:	f57ff06f 	isb	sy
4002be10:	e8bd8010 	pop	{r4, pc}
4002be14:	e34031c2 	movt	r3, #450	; 0x1c2
4002be18:	e3a00032 	mov	r0, #50	; 0x32
4002be1c:	e5932000 	ldr	r2, [r3]
4002be20:	e3c22001 	bic	r2, r2, #1
4002be24:	e5832000 	str	r2, [r3]
4002be28:	ebfff61f 	bl	400296ac <IRQ_SetHandler>
4002be2c:	f57ff06f 	isb	sy
4002be30:	e8bd8010 	pop	{r4, pc}
4002be34:	e34031c2 	movt	r3, #450	; 0x1c2
4002be38:	e3a00033 	mov	r0, #51	; 0x33
4002be3c:	e5932000 	ldr	r2, [r3]
4002be40:	e3c22002 	bic	r2, r2, #2
4002be44:	eafffff6 	b	4002be24 <irq_timer_set(irq_timers, void (*)(unsigned long))+0xc4>

4002be48 <irq_timer_arm_physical_set(void (*)())>:
4002be48:	e30c30fc 	movw	r3, #49404	; 0xc0fc
4002be4c:	e3500000 	cmp	r0, #0
4002be50:	e3443006 	movt	r3, #16390	; 0x4006
4002be54:	e92d4010 	push	{r4, lr}
4002be58:	e5830000 	str	r0, [r3]
4002be5c:	0a00000d 	beq	4002be98 <irq_timer_arm_physical_set(void (*)())+0x50>
4002be60:	e3a03c36 	mov	r3, #13824	; 0x3600
4002be64:	e340316e 	movt	r3, #366	; 0x16e
4002be68:	ee0e3f12 	mcr	15, 0, r3, cr14, cr2, {0}
4002be6c:	e3a04001 	mov	r4, #1
4002be70:	ee0e4f32 	mcr	15, 0, r4, cr14, cr2, {1}
4002be74:	e30b1cfc 	movw	r1, #48380	; 0xbcfc
4002be78:	e3a0001d 	mov	r0, #29
4002be7c:	e3441002 	movt	r1, #16386	; 0x4002
4002be80:	ebfff609 	bl	400296ac <IRQ_SetHandler>
4002be84:	e1a01004 	mov	r1, r4
4002be88:	e3a0001d 	mov	r0, #29
4002be8c:	eb00006a 	bl	4002c03c <gic_irq_config(T_H3_IRQn, GIC_CORE_TypeDef)>
4002be90:	f57ff06f 	isb	sy
4002be94:	e8bd8010 	pop	{r4, pc}
4002be98:	e1a01000 	mov	r1, r0
4002be9c:	ee0e0f32 	mcr	15, 0, r0, cr14, cr2, {1}
4002bea0:	e3a0001d 	mov	r0, #29
4002bea4:	ebfff600 	bl	400296ac <IRQ_SetHandler>
4002bea8:	f57ff06f 	isb	sy
4002beac:	e8bd8010 	pop	{r4, pc}

4002beb0 <irq_timer_arm_virtual_set(void (*)(), unsigned long)>:
4002beb0:	e30c20f8 	movw	r2, #49400	; 0xc0f8
4002beb4:	e3500000 	cmp	r0, #0
4002beb8:	e3442006 	movt	r2, #16390	; 0x4006
4002bebc:	e92d4010 	push	{r4, lr}
4002bec0:	e5820000 	str	r0, [r2]
4002bec4:	e30c20ec 	movw	r2, #49388	; 0xc0ec
4002bec8:	e3442006 	movt	r2, #16390	; 0x4006
4002becc:	e5821000 	str	r1, [r2]
4002bed0:	0a000012 	beq	4002bf20 <irq_timer_arm_virtual_set(void (*)(), unsigned long)+0x70>
4002bed4:	e5923000 	ldr	r3, [r2]
4002bed8:	ee0e3f13 	mcr	15, 0, r3, cr14, cr3, {0}
4002bedc:	e3a04001 	mov	r4, #1
4002bee0:	ee0e4f33 	mcr	15, 0, r4, cr14, cr3, {1}
4002bee4:	e30b1d2c 	movw	r1, #48428	; 0xbd2c
4002bee8:	e3a0001b 	mov	r0, #27
4002beec:	e3441002 	movt	r1, #16386	; 0x4002
4002bef0:	ebfff5ed 	bl	400296ac <IRQ_SetHandler>
4002bef4:	e1a01004 	mov	r1, r4
4002bef8:	e3a0001b 	mov	r0, #27
4002befc:	eb00004e 	bl	4002c03c <gic_irq_config(T_H3_IRQn, GIC_CORE_TypeDef)>
4002bf00:	e1a01004 	mov	r1, r4
4002bf04:	e3a0001a 	mov	r0, #26
4002bf08:	eb00004b 	bl	4002c03c <gic_irq_config(T_H3_IRQn, GIC_CORE_TypeDef)>
4002bf0c:	e1a01004 	mov	r1, r4
4002bf10:	e3a0001c 	mov	r0, #28
4002bf14:	eb000048 	bl	4002c03c <gic_irq_config(T_H3_IRQn, GIC_CORE_TypeDef)>
4002bf18:	f57ff06f 	isb	sy
4002bf1c:	e8bd8010 	pop	{r4, pc}
4002bf20:	e1a03000 	mov	r3, r0
4002bf24:	ee0e0f33 	mcr	15, 0, r0, cr14, cr3, {1}
4002bf28:	e3a0001b 	mov	r0, #27
4002bf2c:	e1a01003 	mov	r1, r3
4002bf30:	ebfff5dd 	bl	400296ac <IRQ_SetHandler>
4002bf34:	f57ff06f 	isb	sy
4002bf38:	e8bd8010 	pop	{r4, pc}

4002bf3c <mac_address_get(unsigned char*)>:
4002bf3c:	e59f2030 	ldr	r2, [pc, #48]	; 4002bf74 <mac_address_get(unsigned char*)+0x38>
4002bf40:	e5923054 	ldr	r3, [r2, #84]	; 0x54
4002bf44:	e5922050 	ldr	r2, [r2, #80]	; 0x50
4002bf48:	e1a01423 	lsr	r1, r3, #8
4002bf4c:	e5c03000 	strb	r3, [r0]
4002bf50:	e5c01001 	strb	r1, [r0, #1]
4002bf54:	e5c02004 	strb	r2, [r0, #4]
4002bf58:	e1a01823 	lsr	r1, r3, #16
4002bf5c:	e1a02422 	lsr	r2, r2, #8
4002bf60:	e1a03c23 	lsr	r3, r3, #24
4002bf64:	e5c01002 	strb	r1, [r0, #2]
4002bf68:	e5c03003 	strb	r3, [r0, #3]
4002bf6c:	e5c02005 	strb	r2, [r0, #5]
4002bf70:	e12fff1e 	bx	lr
4002bf74:	01c30000 	biceq	r0, r3, r0

4002bf78 <uart0_putc>:
4002bf78:	e59f302c 	ldr	r3, [pc, #44]	; 4002bfac <uart0_putc+0x34>
4002bf7c:	e350000a 	cmp	r0, #10
4002bf80:	1a000004 	bne	4002bf98 <uart0_putc+0x20>
4002bf84:	e5932014 	ldr	r2, [r3, #20]
4002bf88:	e3120020 	tst	r2, #32
4002bf8c:	0afffffc 	beq	4002bf84 <uart0_putc+0xc>
4002bf90:	e3a0200d 	mov	r2, #13
4002bf94:	e5832000 	str	r2, [r3]
4002bf98:	e5932014 	ldr	r2, [r3, #20]
4002bf9c:	e3120020 	tst	r2, #32
4002bfa0:	0afffffc 	beq	4002bf98 <uart0_putc+0x20>
4002bfa4:	e5830000 	str	r0, [r3]
4002bfa8:	e12fff1e 	bx	lr
4002bfac:	01c28000 	biceq	r8, r2, r0

4002bfb0 <uart0_puts>:
4002bfb0:	e2401001 	sub	r1, r0, #1
4002bfb4:	e5f13001 	ldrb	r3, [r1, #1]!
4002bfb8:	e3530000 	cmp	r3, #0
4002bfbc:	012fff1e 	bxeq	lr
4002bfc0:	e92d4010 	push	{r4, lr}
4002bfc4:	ea000004 	b	4002bfdc <uart0_puts+0x2c>
4002bfc8:	e5d10000 	ldrb	r0, [r1]
4002bfcc:	ebffffe9 	bl	4002bf78 <uart0_putc>
4002bfd0:	e5f13001 	ldrb	r3, [r1, #1]!
4002bfd4:	e3530000 	cmp	r3, #0
4002bfd8:	08bd8010 	popeq	{r4, pc}
4002bfdc:	e353000a 	cmp	r3, #10
4002bfe0:	1afffff8 	bne	4002bfc8 <uart0_puts+0x18>
4002bfe4:	e3a0000d 	mov	r0, #13
4002bfe8:	ebffffe2 	bl	4002bf78 <uart0_putc>
4002bfec:	eafffff5 	b	4002bfc8 <uart0_puts+0x18>

4002bff0 <int_config(T_H3_IRQn, GIC_CORE_TypeDef, GIC_GROUP_TypeDef) [clone .constprop.0]>:
4002bff0:	e92d4070 	push	{r4, r5, r6, lr}
4002bff4:	e1a04000 	mov	r4, r0
4002bff8:	e1a05001 	mov	r5, r1
4002bffc:	eb0005a0 	bl	4002d684 <clean_data_cache>
4002c000:	f57ff05f 	dmb	sy
4002c004:	e1a032a4 	lsr	r3, r4, #5
4002c008:	e204101f 	and	r1, r4, #31
4002c00c:	e3a02001 	mov	r2, #1
4002c010:	e1a03103 	lsl	r3, r3, #2
4002c014:	e1a00112 	lsl	r0, r2, r1
4002c018:	e2833772 	add	r3, r3, #29884416	; 0x1c80000
4002c01c:	e2833a01 	add	r3, r3, #4096	; 0x1000
4002c020:	e5830100 	str	r0, [r3, #256]	; 0x100
4002c024:	e5932080 	ldr	r2, [r3, #128]	; 0x80
4002c028:	e1c22000 	bic	r2, r2, r0
4002c02c:	e1821115 	orr	r1, r2, r5, lsl r1
4002c030:	e5831080 	str	r1, [r3, #128]	; 0x80
4002c034:	f57ff06f 	isb	sy
4002c038:	e8bd8070 	pop	{r4, r5, r6, pc}

4002c03c <gic_irq_config(T_H3_IRQn, GIC_CORE_TypeDef)>:
4002c03c:	e3a01001 	mov	r1, #1
4002c040:	eaffffea 	b	4002bff0 <int_config(T_H3_IRQn, GIC_CORE_TypeDef, GIC_GROUP_TypeDef) [clone .constprop.0]>

4002c044 <gic_fiq_config(T_H3_IRQn, GIC_CORE_TypeDef)>:
4002c044:	e3a01000 	mov	r1, #0
4002c048:	eaffffe8 	b	4002bff0 <int_config(T_H3_IRQn, GIC_CORE_TypeDef, GIC_GROUP_TypeDef) [clone .constprop.0]>

4002c04c <_write_hwaddr(unsigned char const*)>:
4002c04c:	e5d03002 	ldrb	r3, [r0, #2]
4002c050:	e5d02001 	ldrb	r2, [r0, #1]
4002c054:	e1a03803 	lsl	r3, r3, #16
4002c058:	e0833402 	add	r3, r3, r2, lsl #8
4002c05c:	e5d02000 	ldrb	r2, [r0]
4002c060:	e5d01005 	ldrb	r1, [r0, #5]
4002c064:	e0833002 	add	r3, r3, r2
4002c068:	e5d02003 	ldrb	r2, [r0, #3]
4002c06c:	e0833c02 	add	r3, r3, r2, lsl #24
4002c070:	e5d02004 	ldrb	r2, [r0, #4]
4002c074:	e0822401 	add	r2, r2, r1, lsl #8
4002c078:	e59f1008 	ldr	r1, [pc, #8]	; 4002c088 <_write_hwaddr(unsigned char const*)+0x3c>
4002c07c:	e5812050 	str	r2, [r1, #80]	; 0x50
4002c080:	e5813054 	str	r3, [r1, #84]	; 0x54
4002c084:	e12fff1e 	bx	lr
4002c088:	01c30000 	biceq	r0, r3, r0

4002c08c <h3_sid_get_rootkey>:
4002c08c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4002c090:	e3a03000 	mov	r3, #0
4002c094:	e59f1048 	ldr	r1, [pc, #72]	; 4002c0e4 <h3_sid_get_rootkey+0x58>
4002c098:	e30aec02 	movw	lr, #44034	; 0xac02
4002c09c:	e183200e 	orr	r2, r3, lr
4002c0a0:	e5812040 	str	r2, [r1, #64]	; 0x40
4002c0a4:	e5912040 	ldr	r2, [r1, #64]	; 0x40
4002c0a8:	e3120002 	tst	r2, #2
4002c0ac:	1afffffc 	bne	4002c0a4 <h3_sid_get_rootkey+0x18>
4002c0b0:	e5912060 	ldr	r2, [r1, #96]	; 0x60
4002c0b4:	e2833701 	add	r3, r3, #262144	; 0x40000
4002c0b8:	e3530601 	cmp	r3, #1048576	; 0x100000
4002c0bc:	e2800004 	add	r0, r0, #4
4002c0c0:	e1a0cc22 	lsr	ip, r2, #24
4002c0c4:	e540c004 	strb	ip, [r0, #-4]
4002c0c8:	e1a0c822 	lsr	ip, r2, #16
4002c0cc:	e540c003 	strb	ip, [r0, #-3]
4002c0d0:	e1a0c422 	lsr	ip, r2, #8
4002c0d4:	e540c002 	strb	ip, [r0, #-2]
4002c0d8:	e5402001 	strb	r2, [r0, #-1]
4002c0dc:	1affffee 	bne	4002c09c <h3_sid_get_rootkey+0x10>
4002c0e0:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4002c0e4:	01c14000 	biceq	r4, r1, r0

4002c0e8 <h3_sid_read_tscalib>:
4002c0e8:	e59f301c 	ldr	r3, [pc, #28]	; 4002c10c <h3_sid_read_tscalib+0x24>
4002c0ec:	e59f201c 	ldr	r2, [pc, #28]	; 4002c110 <h3_sid_read_tscalib+0x28>
4002c0f0:	e5832040 	str	r2, [r3, #64]	; 0x40
4002c0f4:	e5932040 	ldr	r2, [r3, #64]	; 0x40
4002c0f8:	e3120002 	tst	r2, #2
4002c0fc:	1afffffc 	bne	4002c0f4 <h3_sid_read_tscalib+0xc>
4002c100:	e5933060 	ldr	r3, [r3, #96]	; 0x60
4002c104:	e5803000 	str	r3, [r0]
4002c108:	e12fff1e 	bx	lr
4002c10c:	01c14000 	biceq	r4, r1, r0
4002c110:	0034ac02 	eorseq	sl, r4, r2, lsl #24

4002c114 <asctime>:
4002c114:	e92d407f 	push	{r0, r1, r2, r3, r4, r5, r6, lr}
4002c118:	e3500000 	cmp	r0, #0
4002c11c:	0a00001a 	beq	4002c18c <asctime+0x78>
4002c120:	e5902018 	ldr	r2, [r0, #24]
4002c124:	e3520006 	cmp	r2, #6
4002c128:	959f3064 	ldrls	r3, [pc, #100]	; 4002c194 <asctime+0x80>
4002c12c:	859f3064 	ldrhi	r3, [pc, #100]	; 4002c198 <asctime+0x84>
4002c130:	90833102 	addls	r3, r3, r2, lsl #2
4002c134:	e5902010 	ldr	r2, [r0, #16]
4002c138:	e352000b 	cmp	r2, #11
4002c13c:	959f1058 	ldrls	r1, [pc, #88]	; 4002c19c <asctime+0x88>
4002c140:	859f1050 	ldrhi	r1, [pc, #80]	; 4002c198 <asctime+0x84>
4002c144:	90811102 	addls	r1, r1, r2, lsl #2
4002c148:	e5902014 	ldr	r2, [r0, #20]
4002c14c:	e2822e76 	add	r2, r2, #1888	; 0x760
4002c150:	e282200c 	add	r2, r2, #12
4002c154:	e58d2014 	str	r2, [sp, #20]
4002c158:	e5902000 	ldr	r2, [r0]
4002c15c:	e58d2010 	str	r2, [sp, #16]
4002c160:	e5902004 	ldr	r2, [r0, #4]
4002c164:	e58d200c 	str	r2, [sp, #12]
4002c168:	e5902008 	ldr	r2, [r0, #8]
4002c16c:	e58d2008 	str	r2, [sp, #8]
4002c170:	e590200c 	ldr	r2, [r0, #12]
4002c174:	e59f0024 	ldr	r0, [pc, #36]	; 4002c1a0 <asctime+0x8c>
4002c178:	e88d0006 	stm	sp, {r1, r2}
4002c17c:	e59f2020 	ldr	r2, [pc, #32]	; 4002c1a4 <asctime+0x90>
4002c180:	e3a01031 	mov	r1, #49	; 0x31
4002c184:	eb00029e 	bl	4002cc04 <snprintf>
4002c188:	e59f0010 	ldr	r0, [pc, #16]	; 4002c1a0 <asctime+0x8c>
4002c18c:	e28dd01c 	add	sp, sp, #28
4002c190:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4002c194:	400335bb 			; <UNDEFINED> instruction: 0x400335bb
4002c198:	40033568 	andmi	r3, r3, r8, ror #10
4002c19c:	4003358b 	andmi	r3, r3, fp, lsl #11
4002c1a0:	4006c100 	andmi	ip, r6, r0, lsl #2
4002c1a4:	4003356c 	andmi	r3, r3, ip, ror #10

4002c1a8 <__libc_init_array>:
4002c1a8:	e92d4070 	push	{r4, r5, r6, lr}
4002c1ac:	e3a06000 	mov	r6, #0
4002c1b0:	e59f504c 	ldr	r5, [pc, #76]	; 4002c204 <__libc_init_array+0x5c>
4002c1b4:	e59f404c 	ldr	r4, [pc, #76]	; 4002c208 <__libc_init_array+0x60>
4002c1b8:	e0444005 	sub	r4, r4, r5
4002c1bc:	e1a04144 	asr	r4, r4, #2
4002c1c0:	e1560004 	cmp	r6, r4
4002c1c4:	1a00000a 	bne	4002c1f4 <__libc_init_array+0x4c>
4002c1c8:	e59f503c 	ldr	r5, [pc, #60]	; 4002c20c <__libc_init_array+0x64>
4002c1cc:	e3a06000 	mov	r6, #0
4002c1d0:	e59f4038 	ldr	r4, [pc, #56]	; 4002c210 <__libc_init_array+0x68>
4002c1d4:	e0444005 	sub	r4, r4, r5
4002c1d8:	e1a04144 	asr	r4, r4, #2
4002c1dc:	e1560004 	cmp	r6, r4
4002c1e0:	08bd8070 	popeq	{r4, r5, r6, pc}
4002c1e4:	e4953004 	ldr	r3, [r5], #4
4002c1e8:	e2866001 	add	r6, r6, #1
4002c1ec:	e12fff33 	blx	r3
4002c1f0:	eafffff9 	b	4002c1dc <__libc_init_array+0x34>
4002c1f4:	e4953004 	ldr	r3, [r5], #4
4002c1f8:	e2866001 	add	r6, r6, #1
4002c1fc:	e12fff33 	blx	r3
4002c200:	eaffffee 	b	4002c1c0 <__libc_init_array+0x18>
4002c204:	400336bc 			; <UNDEFINED> instruction: 0x400336bc
4002c208:	400336bc 			; <UNDEFINED> instruction: 0x400336bc
4002c20c:	400336bc 			; <UNDEFINED> instruction: 0x400336bc
4002c210:	400336c4 	andmi	r3, r3, r4, asr #13

4002c214 <memset>:
4002c214:	e3520000 	cmp	r2, #0
4002c218:	16ef1071 	uxtbne	r1, r1
4002c21c:	11a03000 	movne	r3, r0
4002c220:	012fff1e 	bxeq	lr
4002c224:	e3130007 	tst	r3, #7
4002c228:	1a00000f 	bne	4002c26c <memset+0x58>
4002c22c:	e181c401 	orr	ip, r1, r1, lsl #8
4002c230:	e92d4030 	push	{r4, r5, lr}
4002c234:	e18c580c 	orr	r5, ip, ip, lsl #16
4002c238:	e3c2c007 	bic	ip, r2, #7
4002c23c:	e1a0e005 	mov	lr, r5
4002c240:	e1a041a2 	lsr	r4, r2, #3
4002c244:	e083c00c 	add	ip, r3, ip
4002c248:	e153000c 	cmp	r3, ip
4002c24c:	1a00000a 	bne	4002c27c <memset+0x68>
4002c250:	e3e03007 	mvn	r3, #7
4002c254:	e0222493 	mla	r2, r3, r4, r2
4002c258:	e08c2002 	add	r2, ip, r2
4002c25c:	e15c0002 	cmp	ip, r2
4002c260:	08bd8030 	popeq	{r4, r5, pc}
4002c264:	e4cc1001 	strb	r1, [ip], #1
4002c268:	eafffffb 	b	4002c25c <memset+0x48>
4002c26c:	e4c31001 	strb	r1, [r3], #1
4002c270:	e2522001 	subs	r2, r2, #1
4002c274:	1affffea 	bne	4002c224 <memset+0x10>
4002c278:	e12fff1e 	bx	lr
4002c27c:	e4835008 	str	r5, [r3], #8
4002c280:	e503e004 	str	lr, [r3, #-4]
4002c284:	eaffffef 	b	4002c248 <memset+0x34>

4002c288 <_itostr>:
4002c288:	e92d4070 	push	{r4, r5, r6, lr}
4002c28c:	e24dd040 	sub	sp, sp, #64	; 0x40
4002c290:	e1b05fa0 	lsrs	r5, r0, #31
4002c294:	e28dc03f 	add	ip, sp, #63	; 0x3f
4002c298:	12600000 	rsbne	r0, r0, #0
4002c29c:	e3500000 	cmp	r0, #0
4002c2a0:	03a03030 	moveq	r3, #48	; 0x30
4002c2a4:	05cd303f 	strbeq	r3, [sp, #63]	; 0x3f
4002c2a8:	028d303e 	addeq	r3, sp, #62	; 0x3e
4002c2ac:	0a00000a 	beq	4002c2dc <_itostr+0x54>
4002c2b0:	e1a0300c 	mov	r3, ip
4002c2b4:	e3a0400a 	mov	r4, #10
4002c2b8:	e1a0600d 	mov	r6, sp
4002c2bc:	e71ef410 	sdiv	lr, r0, r4
4002c2c0:	e0600e94 	mls	r0, r4, lr, r0
4002c2c4:	e2800030 	add	r0, r0, #48	; 0x30
4002c2c8:	e4430001 	strb	r0, [r3], #-1
4002c2cc:	e1a0000e 	mov	r0, lr
4002c2d0:	e35e0000 	cmp	lr, #0
4002c2d4:	11530006 	cmpne	r3, r6
4002c2d8:	8afffff7 	bhi	4002c2bc <_itostr+0x34>
4002c2dc:	e3520000 	cmp	r2, #0
4002c2e0:	11a0e00d 	movne	lr, sp
4002c2e4:	13a04030 	movne	r4, #48	; 0x30
4002c2e8:	1a00000c 	bne	4002c320 <_itostr+0x98>
4002c2ec:	e3550000 	cmp	r5, #0
4002c2f0:	e2411001 	sub	r1, r1, #1
4002c2f4:	13a0202d 	movne	r2, #45	; 0x2d
4002c2f8:	14432001 	strbne	r2, [r3], #-1
4002c2fc:	e2833001 	add	r3, r3, #1
4002c300:	e04c0003 	sub	r0, ip, r3
4002c304:	e28d2040 	add	r2, sp, #64	; 0x40
4002c308:	e1530002 	cmp	r3, r2
4002c30c:	3a00000c 	bcc	4002c344 <_itostr+0xbc>
4002c310:	e2800001 	add	r0, r0, #1
4002c314:	e28dd040 	add	sp, sp, #64	; 0x40
4002c318:	e8bd8070 	pop	{r4, r5, r6, pc}
4002c31c:	e4434001 	strb	r4, [r3], #-1
4002c320:	e04c0003 	sub	r0, ip, r3
4002c324:	e1500002 	cmp	r0, r2
4002c328:	a3a00000 	movge	r0, #0
4002c32c:	b3a00001 	movlt	r0, #1
4002c330:	e153000e 	cmp	r3, lr
4002c334:	93a00000 	movls	r0, #0
4002c338:	e3500000 	cmp	r0, #0
4002c33c:	1afffff6 	bne	4002c31c <_itostr+0x94>
4002c340:	eaffffe9 	b	4002c2ec <_itostr+0x64>
4002c344:	e4d32001 	ldrb	r2, [r3], #1
4002c348:	e5e12001 	strb	r2, [r1, #1]!
4002c34c:	eaffffec 	b	4002c304 <_itostr+0x7c>

4002c350 <_xputch>:
4002c350:	e59fc038 	ldr	ip, [pc, #56]	; 4002c390 <_xputch+0x40>
4002c354:	e1a03000 	mov	r3, r0
4002c358:	e1a00001 	mov	r0, r1
4002c35c:	e59c1000 	ldr	r1, [ip]
4002c360:	e593200c 	ldr	r2, [r3, #12]
4002c364:	e3510000 	cmp	r1, #0
4002c368:	e2822001 	add	r2, r2, #1
4002c36c:	e583200c 	str	r2, [r3, #12]
4002c370:	0a000005 	beq	4002c38c <_xputch+0x3c>
4002c374:	e5933010 	ldr	r3, [r3, #16]
4002c378:	e1520003 	cmp	r2, r3
4002c37c:	b5c10000 	strblt	r0, [r1]
4002c380:	b2813001 	addlt	r3, r1, #1
4002c384:	b58c3000 	strlt	r3, [ip]
4002c388:	e12fff1e 	bx	lr
4002c38c:	eaffe88e 	b	400265cc <console_putc>
4002c390:	4006c138 	andmi	ip, r6, r8, lsr r1

4002c394 <_format_int>:
4002c394:	e92d4070 	push	{r4, r5, r6, lr}
4002c398:	e3510000 	cmp	r1, #0
4002c39c:	e24dd040 	sub	sp, sp, #64	; 0x40
4002c3a0:	03a03030 	moveq	r3, #48	; 0x30
4002c3a4:	e1a06000 	mov	r6, r0
4002c3a8:	e28d403f 	add	r4, sp, #63	; 0x3f
4002c3ac:	05cd303f 	strbeq	r3, [sp, #63]	; 0x3f
4002c3b0:	028d303e 	addeq	r3, sp, #62	; 0x3e
4002c3b4:	0a00000b 	beq	4002c3e8 <_format_int+0x54>
4002c3b8:	e1a03004 	mov	r3, r4
4002c3bc:	e3a0c00a 	mov	ip, #10
4002c3c0:	e1a0e00d 	mov	lr, sp
4002c3c4:	e730fc11 	udiv	r0, r1, ip
4002c3c8:	e062109c 	mls	r2, ip, r0, r1
4002c3cc:	e2822030 	add	r2, r2, #48	; 0x30
4002c3d0:	e4432001 	strb	r2, [r3], #-1
4002c3d4:	e1a02001 	mov	r2, r1
4002c3d8:	e1a01000 	mov	r1, r0
4002c3dc:	e3520009 	cmp	r2, #9
4002c3e0:	8153000e 	cmphi	r3, lr
4002c3e4:	8afffff6 	bhi	4002c3c4 <_format_int+0x30>
4002c3e8:	e5962000 	ldr	r2, [r6]
4002c3ec:	e3120001 	tst	r2, #1
4002c3f0:	11a0000d 	movne	r0, sp
4002c3f4:	13a0e030 	movne	lr, #48	; 0x30
4002c3f8:	1596c004 	ldrne	ip, [r6, #4]
4002c3fc:	1a000017 	bne	4002c460 <_format_int+0xcc>
4002c400:	e3120020 	tst	r2, #32
4002c404:	11a0000d 	movne	r0, sp
4002c408:	13a0e030 	movne	lr, #48	; 0x30
4002c40c:	1596c008 	ldrne	ip, [r6, #8]
4002c410:	1a00001c 	bne	4002c488 <_format_int+0xf4>
4002c414:	e3120008 	tst	r2, #8
4002c418:	13a0102d 	movne	r1, #45	; 0x2d
4002c41c:	14431001 	strbne	r1, [r3], #-1
4002c420:	e3120040 	tst	r2, #64	; 0x40
4002c424:	01a0100d 	moveq	r1, sp
4002c428:	03a0c020 	moveq	ip, #32
4002c42c:	05960008 	ldreq	r0, [r6, #8]
4002c430:	0a00001e 	beq	4002c4b0 <_format_int+0x11c>
4002c434:	e0445003 	sub	r5, r4, r3
4002c438:	e2834001 	add	r4, r3, #1
4002c43c:	e28d3040 	add	r3, sp, #64	; 0x40
4002c440:	e1540003 	cmp	r4, r3
4002c444:	3a000022 	bcc	4002c4d4 <_format_int+0x140>
4002c448:	e5963008 	ldr	r3, [r6, #8]
4002c44c:	e1530005 	cmp	r3, r5
4002c450:	ca000023 	bgt	4002c4e4 <_format_int+0x150>
4002c454:	e28dd040 	add	sp, sp, #64	; 0x40
4002c458:	e8bd8070 	pop	{r4, r5, r6, pc}
4002c45c:	e443e001 	strb	lr, [r3], #-1
4002c460:	e0441003 	sub	r1, r4, r3
4002c464:	e151000c 	cmp	r1, ip
4002c468:	a3a01000 	movge	r1, #0
4002c46c:	b3a01001 	movlt	r1, #1
4002c470:	e1530000 	cmp	r3, r0
4002c474:	93a01000 	movls	r1, #0
4002c478:	e3510000 	cmp	r1, #0
4002c47c:	1afffff6 	bne	4002c45c <_format_int+0xc8>
4002c480:	eaffffde 	b	4002c400 <_format_int+0x6c>
4002c484:	e443e001 	strb	lr, [r3], #-1
4002c488:	e0441003 	sub	r1, r4, r3
4002c48c:	e151000c 	cmp	r1, ip
4002c490:	a3a01000 	movge	r1, #0
4002c494:	b3a01001 	movlt	r1, #1
4002c498:	e1530000 	cmp	r3, r0
4002c49c:	93a01000 	movls	r1, #0
4002c4a0:	e3510000 	cmp	r1, #0
4002c4a4:	1afffff6 	bne	4002c484 <_format_int+0xf0>
4002c4a8:	eaffffd9 	b	4002c414 <_format_int+0x80>
4002c4ac:	e443c001 	strb	ip, [r3], #-1
4002c4b0:	e0442003 	sub	r2, r4, r3
4002c4b4:	e1520000 	cmp	r2, r0
4002c4b8:	a3a02000 	movge	r2, #0
4002c4bc:	b3a02001 	movlt	r2, #1
4002c4c0:	e1530001 	cmp	r3, r1
4002c4c4:	93a02000 	movls	r2, #0
4002c4c8:	e3520000 	cmp	r2, #0
4002c4cc:	1afffff6 	bne	4002c4ac <_format_int+0x118>
4002c4d0:	eaffffd7 	b	4002c434 <_format_int+0xa0>
4002c4d4:	e4d41001 	ldrb	r1, [r4], #1
4002c4d8:	e1a00006 	mov	r0, r6
4002c4dc:	ebffff9b 	bl	4002c350 <_xputch>
4002c4e0:	eaffffd5 	b	4002c43c <_format_int+0xa8>
4002c4e4:	e3a01020 	mov	r1, #32
4002c4e8:	e1a00006 	mov	r0, r6
4002c4ec:	e2855001 	add	r5, r5, #1
4002c4f0:	ebffff96 	bl	4002c350 <_xputch>
4002c4f4:	eaffffd3 	b	4002c448 <_format_int+0xb4>

4002c4f8 <_format_hex>:
4002c4f8:	e590c000 	ldr	ip, [r0]
4002c4fc:	e3510000 	cmp	r1, #0
4002c500:	e92d4070 	push	{r4, r5, r6, lr}
4002c504:	e24dd040 	sub	sp, sp, #64	; 0x40
4002c508:	03a03030 	moveq	r3, #48	; 0x30
4002c50c:	e1a06000 	mov	r6, r0
4002c510:	05cd303f 	strbeq	r3, [sp, #63]	; 0x3f
4002c514:	e28d203f 	add	r2, sp, #63	; 0x3f
4002c518:	028d303e 	addeq	r3, sp, #62	; 0x3e
4002c51c:	0a000011 	beq	4002c568 <_format_hex+0x70>
4002c520:	e31c0002 	tst	ip, #2
4002c524:	e1a03002 	mov	r3, r2
4002c528:	03a04057 	moveq	r4, #87	; 0x57
4002c52c:	13a04037 	movne	r4, #55	; 0x37
4002c530:	e1a0e00d 	mov	lr, sp
4002c534:	e201000f 	and	r0, r1, #15
4002c538:	e3500009 	cmp	r0, #9
4002c53c:	80840000 	addhi	r0, r4, r0
4002c540:	92800030 	addls	r0, r0, #48	; 0x30
4002c544:	e1b01221 	lsrs	r1, r1, #4
4002c548:	e4430001 	strb	r0, [r3], #-1
4002c54c:	13a00001 	movne	r0, #1
4002c550:	03a00000 	moveq	r0, #0
4002c554:	e153000e 	cmp	r3, lr
4002c558:	93a00000 	movls	r0, #0
4002c55c:	82000001 	andhi	r0, r0, #1
4002c560:	e3500000 	cmp	r0, #0
4002c564:	1afffff2 	bne	4002c534 <_format_hex+0x3c>
4002c568:	e31c0001 	tst	ip, #1
4002c56c:	11a0000d 	movne	r0, sp
4002c570:	13a04030 	movne	r4, #48	; 0x30
4002c574:	1596e004 	ldrne	lr, [r6, #4]
4002c578:	1a000014 	bne	4002c5d0 <_format_hex+0xd8>
4002c57c:	e31c0020 	tst	ip, #32
4002c580:	11a0000d 	movne	r0, sp
4002c584:	13a04030 	movne	r4, #48	; 0x30
4002c588:	1596e008 	ldrne	lr, [r6, #8]
4002c58c:	1a000019 	bne	4002c5f8 <_format_hex+0x100>
4002c590:	e31c0040 	tst	ip, #64	; 0x40
4002c594:	01a0000d 	moveq	r0, sp
4002c598:	03a0e020 	moveq	lr, #32
4002c59c:	0596c008 	ldreq	ip, [r6, #8]
4002c5a0:	0a00001e 	beq	4002c620 <_format_hex+0x128>
4002c5a4:	e0425003 	sub	r5, r2, r3
4002c5a8:	e2834001 	add	r4, r3, #1
4002c5ac:	e28d3040 	add	r3, sp, #64	; 0x40
4002c5b0:	e1540003 	cmp	r4, r3
4002c5b4:	3a000022 	bcc	4002c644 <_format_hex+0x14c>
4002c5b8:	e5963008 	ldr	r3, [r6, #8]
4002c5bc:	e1530005 	cmp	r3, r5
4002c5c0:	ca000023 	bgt	4002c654 <_format_hex+0x15c>
4002c5c4:	e28dd040 	add	sp, sp, #64	; 0x40
4002c5c8:	e8bd8070 	pop	{r4, r5, r6, pc}
4002c5cc:	e4434001 	strb	r4, [r3], #-1
4002c5d0:	e0421003 	sub	r1, r2, r3
4002c5d4:	e151000e 	cmp	r1, lr
4002c5d8:	a3a01000 	movge	r1, #0
4002c5dc:	b3a01001 	movlt	r1, #1
4002c5e0:	e1530000 	cmp	r3, r0
4002c5e4:	93a01000 	movls	r1, #0
4002c5e8:	e3510000 	cmp	r1, #0
4002c5ec:	1afffff6 	bne	4002c5cc <_format_hex+0xd4>
4002c5f0:	eaffffe1 	b	4002c57c <_format_hex+0x84>
4002c5f4:	e4434001 	strb	r4, [r3], #-1
4002c5f8:	e0421003 	sub	r1, r2, r3
4002c5fc:	e151000e 	cmp	r1, lr
4002c600:	a3a01000 	movge	r1, #0
4002c604:	b3a01001 	movlt	r1, #1
4002c608:	e1530000 	cmp	r3, r0
4002c60c:	93a01000 	movls	r1, #0
4002c610:	e3510000 	cmp	r1, #0
4002c614:	1afffff6 	bne	4002c5f4 <_format_hex+0xfc>
4002c618:	eaffffdc 	b	4002c590 <_format_hex+0x98>
4002c61c:	e443e001 	strb	lr, [r3], #-1
4002c620:	e0421003 	sub	r1, r2, r3
4002c624:	e151000c 	cmp	r1, ip
4002c628:	a3a01000 	movge	r1, #0
4002c62c:	b3a01001 	movlt	r1, #1
4002c630:	e1530000 	cmp	r3, r0
4002c634:	93a01000 	movls	r1, #0
4002c638:	e3510000 	cmp	r1, #0
4002c63c:	1afffff6 	bne	4002c61c <_format_hex+0x124>
4002c640:	eaffffd7 	b	4002c5a4 <_format_hex+0xac>
4002c644:	e4d41001 	ldrb	r1, [r4], #1
4002c648:	e1a00006 	mov	r0, r6
4002c64c:	ebffff3f 	bl	4002c350 <_xputch>
4002c650:	eaffffd5 	b	4002c5ac <_format_hex+0xb4>
4002c654:	e3a01020 	mov	r1, #32
4002c658:	e1a00006 	mov	r0, r6
4002c65c:	e2855001 	add	r5, r5, #1
4002c660:	ebffff3a 	bl	4002c350 <_xputch>
4002c664:	eaffffd3 	b	4002c5b8 <_format_hex+0xc0>

4002c668 <_vprintf>:
4002c668:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4002c66c:	e24dd058 	sub	sp, sp, #88	; 0x58
4002c670:	e1a03001 	mov	r3, r1
4002c674:	e1a04002 	mov	r4, r2
4002c678:	e58d0014 	str	r0, [sp, #20]
4002c67c:	e28d7018 	add	r7, sp, #24
4002c680:	e3a08000 	mov	r8, #0
4002c684:	e58d8010 	str	r8, [sp, #16]
4002c688:	e5d31000 	ldrb	r1, [r3]
4002c68c:	e3510000 	cmp	r1, #0
4002c690:	1a000002 	bne	4002c6a0 <_vprintf+0x38>
4002c694:	e59d0010 	ldr	r0, [sp, #16]
4002c698:	e28dd058 	add	sp, sp, #88	; 0x58
4002c69c:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4002c6a0:	e3510025 	cmp	r1, #37	; 0x25
4002c6a4:	e2835001 	add	r5, r3, #1
4002c6a8:	0a000003 	beq	4002c6bc <_vprintf+0x54>
4002c6ac:	e28d0004 	add	r0, sp, #4
4002c6b0:	ebffff26 	bl	4002c350 <_xputch>
4002c6b4:	e1a03005 	mov	r3, r5
4002c6b8:	eafffff2 	b	4002c688 <_vprintf+0x20>
4002c6bc:	e5d32001 	ldrb	r2, [r3, #1]
4002c6c0:	e58d8004 	str	r8, [sp, #4]
4002c6c4:	e58d8008 	str	r8, [sp, #8]
4002c6c8:	e3520030 	cmp	r2, #48	; 0x30
4002c6cc:	e58d800c 	str	r8, [sp, #12]
4002c6d0:	03a02020 	moveq	r2, #32
4002c6d4:	0a000002 	beq	4002c6e4 <_vprintf+0x7c>
4002c6d8:	e352002d 	cmp	r2, #45	; 0x2d
4002c6dc:	1a000002 	bne	4002c6ec <_vprintf+0x84>
4002c6e0:	e3a02040 	mov	r2, #64	; 0x40
4002c6e4:	e58d2004 	str	r2, [sp, #4]
4002c6e8:	e2835002 	add	r5, r3, #2
4002c6ec:	e3a02000 	mov	r2, #0
4002c6f0:	e1a0c005 	mov	ip, r5
4002c6f4:	e1a03002 	mov	r3, r2
4002c6f8:	e3a0e00a 	mov	lr, #10
4002c6fc:	e5dc1000 	ldrb	r1, [ip]
4002c700:	e1a0500c 	mov	r5, ip
4002c704:	e28cc001 	add	ip, ip, #1
4002c708:	e2410030 	sub	r0, r1, #48	; 0x30
4002c70c:	e3500009 	cmp	r0, #9
4002c710:	9a000018 	bls	4002c778 <_vprintf+0x110>
4002c714:	e3520000 	cmp	r2, #0
4002c718:	0a000004 	beq	4002c730 <_vprintf+0xc8>
4002c71c:	e58d300c 	str	r3, [sp, #12]
4002c720:	e3530000 	cmp	r3, #0
4002c724:	159d3004 	ldrne	r3, [sp, #4]
4002c728:	13833010 	orrne	r3, r3, #16
4002c72c:	158d3004 	strne	r3, [sp, #4]
4002c730:	e351002e 	cmp	r1, #46	; 0x2e
4002c734:	1a00001a 	bne	4002c7a4 <_vprintf+0x13c>
4002c738:	e5d53001 	ldrb	r3, [r5, #1]
4002c73c:	e353002a 	cmp	r3, #42	; 0x2a
4002c740:	0a00000f 	beq	4002c784 <_vprintf+0x11c>
4002c744:	e3a01000 	mov	r1, #0
4002c748:	e2850001 	add	r0, r5, #1
4002c74c:	e1a02001 	mov	r2, r1
4002c750:	e3a0c00a 	mov	ip, #10
4002c754:	e5d03000 	ldrb	r3, [r0]
4002c758:	e1a05000 	mov	r5, r0
4002c75c:	e2800001 	add	r0, r0, #1
4002c760:	e2433030 	sub	r3, r3, #48	; 0x30
4002c764:	e3530009 	cmp	r3, #9
4002c768:	9a000033 	bls	4002c83c <_vprintf+0x1d4>
4002c76c:	e3510000 	cmp	r1, #0
4002c770:	158d2008 	strne	r2, [sp, #8]
4002c774:	ea000007 	b	4002c798 <_vprintf+0x130>
4002c778:	e023039e 	mla	r3, lr, r3, r0
4002c77c:	e3a02001 	mov	r2, #1
4002c780:	eaffffdd 	b	4002c6fc <_vprintf+0x94>
4002c784:	e4943004 	ldr	r3, [r4], #4
4002c788:	e2855002 	add	r5, r5, #2
4002c78c:	e3530000 	cmp	r3, #0
4002c790:	b2633000 	rsblt	r3, r3, #0
4002c794:	e58d3008 	str	r3, [sp, #8]
4002c798:	e59d3004 	ldr	r3, [sp, #4]
4002c79c:	e3833001 	orr	r3, r3, #1
4002c7a0:	e58d3004 	str	r3, [sp, #4]
4002c7a4:	e5d53000 	ldrb	r3, [r5]
4002c7a8:	e353006c 	cmp	r3, #108	; 0x6c
4002c7ac:	02855001 	addeq	r5, r5, #1
4002c7b0:	059d3004 	ldreq	r3, [sp, #4]
4002c7b4:	e5d51000 	ldrb	r1, [r5]
4002c7b8:	03833004 	orreq	r3, r3, #4
4002c7bc:	058d3004 	streq	r3, [sp, #4]
4002c7c0:	e3510058 	cmp	r1, #88	; 0x58
4002c7c4:	0a0000ec 	beq	4002cb7c <_vprintf+0x514>
4002c7c8:	e2413063 	sub	r3, r1, #99	; 0x63
4002c7cc:	e6ef2073 	uxtb	r2, r3
4002c7d0:	e3520015 	cmp	r2, #21
4002c7d4:	8affffb4 	bhi	4002c6ac <_vprintf+0x44>
4002c7d8:	e3530015 	cmp	r3, #21
4002c7dc:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
4002c7e0:	eaffffb1 	b	4002c6ac <_vprintf+0x44>
4002c7e4:	4002c848 	andmi	ip, r2, r8, asr #16
4002c7e8:	4002c85c 	andmi	ip, r2, ip, asr r8
4002c7ec:	4002c6ac 	andmi	ip, r2, ip, lsr #13
4002c7f0:	4002c880 	andmi	ip, r2, r0, lsl #17
4002c7f4:	4002c6ac 	andmi	ip, r2, ip, lsr #13
4002c7f8:	4002c6ac 	andmi	ip, r2, ip, lsr #13
4002c7fc:	4002c85c 	andmi	ip, r2, ip, asr r8
4002c800:	4002c6ac 	andmi	ip, r2, ip, lsr #13
4002c804:	4002c6ac 	andmi	ip, r2, ip, lsr #13
4002c808:	4002c6ac 	andmi	ip, r2, ip, lsr #13
4002c80c:	4002c6ac 	andmi	ip, r2, ip, lsr #13
4002c810:	4002c6ac 	andmi	ip, r2, ip, lsr #13
4002c814:	4002c6ac 	andmi	ip, r2, ip, lsr #13
4002c818:	4002ca70 	andmi	ip, r2, r0, ror sl
4002c81c:	4002c6ac 	andmi	ip, r2, ip, lsr #13
4002c820:	4002c6ac 	andmi	ip, r2, ip, lsr #13
4002c824:	4002caac 	andmi	ip, r2, ip, lsr #21
4002c828:	4002c6ac 	andmi	ip, r2, ip, lsr #13
4002c82c:	4002cb74 	andmi	ip, r2, r4, ror fp
4002c830:	4002c6ac 	andmi	ip, r2, ip, lsr #13
4002c834:	4002c6ac 	andmi	ip, r2, ip, lsr #13
4002c838:	4002cb88 	andmi	ip, r2, r8, lsl #23
4002c83c:	e022329c 	mla	r2, ip, r2, r3
4002c840:	e3a01001 	mov	r1, #1
4002c844:	eaffffc2 	b	4002c754 <_vprintf+0xec>
4002c848:	e4941004 	ldr	r1, [r4], #4
4002c84c:	e28d0004 	add	r0, sp, #4
4002c850:	ebfffebe 	bl	4002c350 <_xputch>
4002c854:	e2855001 	add	r5, r5, #1
4002c858:	eaffff95 	b	4002c6b4 <_vprintf+0x4c>
4002c85c:	e4941004 	ldr	r1, [r4], #4
4002c860:	e59d3004 	ldr	r3, [sp, #4]
4002c864:	e3510000 	cmp	r1, #0
4002c868:	b2611000 	rsblt	r1, r1, #0
4002c86c:	b3833008 	orrlt	r3, r3, #8
4002c870:	b58d3004 	strlt	r3, [sp, #4]
4002c874:	e28d0004 	add	r0, sp, #4
4002c878:	ebfffec5 	bl	4002c394 <_format_int>
4002c87c:	eafffff4 	b	4002c854 <_vprintf+0x1ec>
4002c880:	e59d3004 	ldr	r3, [sp, #4]
4002c884:	e2844007 	add	r4, r4, #7
4002c888:	e3c44007 	bic	r4, r4, #7
4002c88c:	e3a02000 	mov	r2, #0
4002c890:	e3130001 	tst	r3, #1
4002c894:	ecf40b02 	vldmia	r4!, {d16}
4002c898:	159d6008 	ldrne	r6, [sp, #8]
4002c89c:	03a06006 	moveq	r6, #6
4002c8a0:	eef77be0 	vcvt.f32.f64	s15, d16
4002c8a4:	eef57ac0 	vcmpe.f32	s15, #0.0
4002c8a8:	eef1fa10 	vmrs	APSR_nzcv, fpscr
4002c8ac:	4ef17a67 	vnegmi.f32	s15, s15
4002c8b0:	428da019 	addmi	sl, sp, #25
4002c8b4:	51a0a007 	movpl	sl, r7
4002c8b8:	43a0302d 	movmi	r3, #45	; 0x2d
4002c8bc:	45cd3018 	strbmi	r3, [sp, #24]
4002c8c0:	e1a0100a 	mov	r1, sl
4002c8c4:	eebd7ae7 	vcvt.s32.f32	s14, s15
4002c8c8:	ee170a10 	vmov	r0, s14
4002c8cc:	ebfffe6d 	bl	4002c288 <_itostr>
4002c8d0:	eeb87ac7 	vcvt.f32.s32	s14, s14
4002c8d4:	e3a0302e 	mov	r3, #46	; 0x2e
4002c8d8:	e08a9000 	add	r9, sl, r0
4002c8dc:	e2862001 	add	r2, r6, #1
4002c8e0:	e7ca3000 	strb	r3, [sl, r0]
4002c8e4:	e3a0300a 	mov	r3, #10
4002c8e8:	e2899001 	add	r9, r9, #1
4002c8ec:	e1a01003 	mov	r1, r3
4002c8f0:	ee777ac7 	vsub.f32	s15, s15, s14
4002c8f4:	e3560000 	cmp	r6, #0
4002c8f8:	ca000028 	bgt	4002c9a0 <_vprintf+0x338>
4002c8fc:	ee073a10 	vmov	s14, r3
4002c900:	e1a01009 	mov	r1, r9
4002c904:	eeb87ac7 	vcvt.f32.s32	s14, s14
4002c908:	ee677a27 	vmul.f32	s15, s14, s15
4002c90c:	eefd7ae7 	vcvt.s32.f32	s15, s15
4002c910:	ee170a90 	vmov	r0, s15
4002c914:	ebfffe5b 	bl	4002c288 <_itostr>
4002c918:	e0899000 	add	r9, r9, r0
4002c91c:	e0499007 	sub	r9, r9, r7
4002c920:	e2491001 	sub	r1, r9, #1
4002c924:	e0872001 	add	r2, r7, r1
4002c928:	e7d73001 	ldrb	r3, [r7, r1]
4002c92c:	e3530034 	cmp	r3, #52	; 0x34
4002c930:	9a000026 	bls	4002c9d0 <_vprintf+0x368>
4002c934:	e5520001 	ldrb	r0, [r2, #-1]
4002c938:	e2423001 	sub	r3, r2, #1
4002c93c:	e350002e 	cmp	r0, #46	; 0x2e
4002c940:	11a0c003 	movne	ip, r3
4002c944:	13a0e030 	movne	lr, #48	; 0x30
4002c948:	1a000018 	bne	4002c9b0 <_vprintf+0x348>
4002c94c:	e2433001 	sub	r3, r3, #1
4002c950:	e3a0c030 	mov	ip, #48	; 0x30
4002c954:	e5d30000 	ldrb	r0, [r3]
4002c958:	e3500039 	cmp	r0, #57	; 0x39
4002c95c:	1a00002f 	bne	4002ca20 <_vprintf+0x3b8>
4002c960:	e1530007 	cmp	r3, r7
4002c964:	2a00002b 	bcs	4002ca18 <_vprintf+0x3b0>
4002c968:	e0422003 	sub	r2, r2, r3
4002c96c:	e2830002 	add	r0, r3, #2
4002c970:	e2831001 	add	r1, r3, #1
4002c974:	e1510000 	cmp	r1, r0
4002c978:	82822001 	addhi	r2, r2, #1
4002c97c:	80832002 	addhi	r2, r3, r2
4002c980:	8a00002f 	bhi	4002ca44 <_vprintf+0x3dc>
4002c984:	e0811002 	add	r1, r1, r2
4002c988:	e0802002 	add	r2, r0, r2
4002c98c:	e1500002 	cmp	r0, r2
4002c990:	0a00002d 	beq	4002ca4c <_vprintf+0x3e4>
4002c994:	e571c001 	ldrb	ip, [r1, #-1]!
4002c998:	e562c001 	strb	ip, [r2, #-1]!
4002c99c:	eafffffa 	b	4002c98c <_vprintf+0x324>
4002c9a0:	e0030391 	mul	r3, r1, r3
4002c9a4:	e2466001 	sub	r6, r6, #1
4002c9a8:	eaffffd1 	b	4002c8f4 <_vprintf+0x28c>
4002c9ac:	e5cce001 	strb	lr, [ip, #1]
4002c9b0:	e1a0300c 	mov	r3, ip
4002c9b4:	e45c0001 	ldrb	r0, [ip], #-1
4002c9b8:	e3500039 	cmp	r0, #57	; 0x39
4002c9bc:	0afffffa 	beq	4002c9ac <_vprintf+0x344>
4002c9c0:	e350002e 	cmp	r0, #46	; 0x2e
4002c9c4:	0affffe0 	beq	4002c94c <_vprintf+0x2e4>
4002c9c8:	e2800001 	add	r0, r0, #1
4002c9cc:	e5c30000 	strb	r0, [r3]
4002c9d0:	e28d3058 	add	r3, sp, #88	; 0x58
4002c9d4:	e0833001 	add	r3, r3, r1
4002c9d8:	e5533041 	ldrb	r3, [r3, #-65]	; 0xffffffbf
4002c9dc:	e353002e 	cmp	r3, #46	; 0x2e
4002c9e0:	02411001 	subeq	r1, r1, #1
4002c9e4:	e1a06001 	mov	r6, r1
4002c9e8:	e1a09001 	mov	r9, r1
4002c9ec:	e59d300c 	ldr	r3, [sp, #12]
4002c9f0:	e1530009 	cmp	r3, r9
4002c9f4:	ca000018 	bgt	4002ca5c <_vprintf+0x3f4>
4002c9f8:	e1a09007 	mov	r9, r7
4002c9fc:	e3560000 	cmp	r6, #0
4002ca00:	daffff93 	ble	4002c854 <_vprintf+0x1ec>
4002ca04:	e4d91001 	ldrb	r1, [r9], #1
4002ca08:	e28d0004 	add	r0, sp, #4
4002ca0c:	e2466001 	sub	r6, r6, #1
4002ca10:	ebfffe4e 	bl	4002c350 <_xputch>
4002ca14:	eafffff8 	b	4002c9fc <_vprintf+0x394>
4002ca18:	e443c001 	strb	ip, [r3], #-1
4002ca1c:	eaffffcc 	b	4002c954 <_vprintf+0x2ec>
4002ca20:	e250c02d 	subs	ip, r0, #45	; 0x2d
4002ca24:	13a0c001 	movne	ip, #1
4002ca28:	e1530007 	cmp	r3, r7
4002ca2c:	33a0c000 	movcc	ip, #0
4002ca30:	e35c0000 	cmp	ip, #0
4002ca34:	0affffcb 	beq	4002c968 <_vprintf+0x300>
4002ca38:	eaffffe2 	b	4002c9c8 <_vprintf+0x360>
4002ca3c:	e4d10001 	ldrb	r0, [r1], #1
4002ca40:	e5c10000 	strb	r0, [r1]
4002ca44:	e1520001 	cmp	r2, r1
4002ca48:	1afffffb 	bne	4002ca3c <_vprintf+0x3d4>
4002ca4c:	e3a02031 	mov	r2, #49	; 0x31
4002ca50:	e1a01009 	mov	r1, r9
4002ca54:	e5c32001 	strb	r2, [r3, #1]
4002ca58:	eaffffdc 	b	4002c9d0 <_vprintf+0x368>
4002ca5c:	e3a01020 	mov	r1, #32
4002ca60:	e28d0004 	add	r0, sp, #4
4002ca64:	e2899001 	add	r9, r9, #1
4002ca68:	ebfffe38 	bl	4002c350 <_xputch>
4002ca6c:	eaffffde 	b	4002c9ec <_vprintf+0x384>
4002ca70:	e4946004 	ldr	r6, [r4], #4
4002ca74:	e3a03008 	mov	r3, #8
4002ca78:	e58d300c 	str	r3, [sp, #12]
4002ca7c:	e3a01030 	mov	r1, #48	; 0x30
4002ca80:	e3a03020 	mov	r3, #32
4002ca84:	e28d0004 	add	r0, sp, #4
4002ca88:	e58d3004 	str	r3, [sp, #4]
4002ca8c:	ebfffe2f 	bl	4002c350 <_xputch>
4002ca90:	e3a01078 	mov	r1, #120	; 0x78
4002ca94:	e28d0004 	add	r0, sp, #4
4002ca98:	ebfffe2c 	bl	4002c350 <_xputch>
4002ca9c:	e1a01006 	mov	r1, r6
4002caa0:	e28d0004 	add	r0, sp, #4
4002caa4:	ebfffe93 	bl	4002c4f8 <_format_hex>
4002caa8:	eaffff69 	b	4002c854 <_vprintf+0x1ec>
4002caac:	e4949004 	ldr	r9, [r4], #4
4002cab0:	e3a06000 	mov	r6, #0
4002cab4:	e7d93006 	ldrb	r3, [r9, r6]
4002cab8:	e3530000 	cmp	r3, #0
4002cabc:	1a00000f 	bne	4002cb00 <_vprintf+0x498>
4002cac0:	e59d3004 	ldr	r3, [sp, #4]
4002cac4:	e3130001 	tst	r3, #1
4002cac8:	0a000002 	beq	4002cad8 <_vprintf+0x470>
4002cacc:	e59d3008 	ldr	r3, [sp, #8]
4002cad0:	e1560003 	cmp	r6, r3
4002cad4:	a1a06003 	movge	r6, r3
4002cad8:	e59d3004 	ldr	r3, [sp, #4]
4002cadc:	e286a001 	add	sl, r6, #1
4002cae0:	e3130040 	tst	r3, #64	; 0x40
4002cae4:	1a000003 	bne	4002caf8 <_vprintf+0x490>
4002cae8:	e59d300c 	ldr	r3, [sp, #12]
4002caec:	e1560003 	cmp	r6, r3
4002caf0:	ba000004 	blt	4002cb08 <_vprintf+0x4a0>
4002caf4:	e1a0600a 	mov	r6, sl
4002caf8:	e2499001 	sub	r9, r9, #1
4002cafc:	ea00000b 	b	4002cb30 <_vprintf+0x4c8>
4002cb00:	e2866001 	add	r6, r6, #1
4002cb04:	eaffffea 	b	4002cab4 <_vprintf+0x44c>
4002cb08:	e3a01020 	mov	r1, #32
4002cb0c:	e28d0004 	add	r0, sp, #4
4002cb10:	e1a0600a 	mov	r6, sl
4002cb14:	ebfffe0d 	bl	4002c350 <_xputch>
4002cb18:	eaffffee 	b	4002cad8 <_vprintf+0x470>
4002cb1c:	e28d0004 	add	r0, sp, #4
4002cb20:	ebfffe0a 	bl	4002c350 <_xputch>
4002cb24:	e59d3008 	ldr	r3, [sp, #8]
4002cb28:	e2433001 	sub	r3, r3, #1
4002cb2c:	e58d3008 	str	r3, [sp, #8]
4002cb30:	e59d3004 	ldr	r3, [sp, #4]
4002cb34:	e3130001 	tst	r3, #1
4002cb38:	0a000002 	beq	4002cb48 <_vprintf+0x4e0>
4002cb3c:	e59d3008 	ldr	r3, [sp, #8]
4002cb40:	e3530000 	cmp	r3, #0
4002cb44:	0a000002 	beq	4002cb54 <_vprintf+0x4ec>
4002cb48:	e5f91001 	ldrb	r1, [r9, #1]!
4002cb4c:	e3510000 	cmp	r1, #0
4002cb50:	1afffff1 	bne	4002cb1c <_vprintf+0x4b4>
4002cb54:	e59d300c 	ldr	r3, [sp, #12]
4002cb58:	e1530006 	cmp	r3, r6
4002cb5c:	daffff3c 	ble	4002c854 <_vprintf+0x1ec>
4002cb60:	e3a01020 	mov	r1, #32
4002cb64:	e28d0004 	add	r0, sp, #4
4002cb68:	e2866001 	add	r6, r6, #1
4002cb6c:	ebfffdf7 	bl	4002c350 <_xputch>
4002cb70:	eafffff7 	b	4002cb54 <_vprintf+0x4ec>
4002cb74:	e4941004 	ldr	r1, [r4], #4
4002cb78:	eaffff3d 	b	4002c874 <_vprintf+0x20c>
4002cb7c:	e59d3004 	ldr	r3, [sp, #4]
4002cb80:	e3833002 	orr	r3, r3, #2
4002cb84:	e58d3004 	str	r3, [sp, #4]
4002cb88:	e4941004 	ldr	r1, [r4], #4
4002cb8c:	eaffffc3 	b	4002caa0 <_vprintf+0x438>

4002cb90 <printf>:
4002cb90:	e92d000f 	push	{r0, r1, r2, r3}
4002cb94:	e92d4007 	push	{r0, r1, r2, lr}
4002cb98:	e3e00102 	mvn	r0, #-2147483648	; 0x80000000
4002cb9c:	e59d1010 	ldr	r1, [sp, #16]
4002cba0:	e28d2014 	add	r2, sp, #20
4002cba4:	e58d2004 	str	r2, [sp, #4]
4002cba8:	ebfffeae 	bl	4002c668 <_vprintf>
4002cbac:	e28dd00c 	add	sp, sp, #12
4002cbb0:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
4002cbb4:	e28dd010 	add	sp, sp, #16
4002cbb8:	e12fff1e 	bx	lr

4002cbbc <sprintf>:
4002cbbc:	e92d000e 	push	{r1, r2, r3}
4002cbc0:	e92d4017 	push	{r0, r1, r2, r4, lr}
4002cbc4:	e28d2018 	add	r2, sp, #24
4002cbc8:	e59f4030 	ldr	r4, [pc, #48]	; 4002cc00 <sprintf+0x44>
4002cbcc:	e59d1014 	ldr	r1, [sp, #20]
4002cbd0:	e5840000 	str	r0, [r4]
4002cbd4:	e3e00102 	mvn	r0, #-2147483648	; 0x80000000
4002cbd8:	e58d2004 	str	r2, [sp, #4]
4002cbdc:	ebfffea1 	bl	4002c668 <_vprintf>
4002cbe0:	e5942000 	ldr	r2, [r4]
4002cbe4:	e3a03000 	mov	r3, #0
4002cbe8:	e5843000 	str	r3, [r4]
4002cbec:	e5c23000 	strb	r3, [r2]
4002cbf0:	e28dd00c 	add	sp, sp, #12
4002cbf4:	e8bd4010 	pop	{r4, lr}
4002cbf8:	e28dd00c 	add	sp, sp, #12
4002cbfc:	e12fff1e 	bx	lr
4002cc00:	4006c138 	andmi	ip, r6, r8, lsr r1

4002cc04 <snprintf>:
4002cc04:	e92d000c 	push	{r2, r3}
4002cc08:	e1a03001 	mov	r3, r1
4002cc0c:	e92d4013 	push	{r0, r1, r4, lr}
4002cc10:	e28d2014 	add	r2, sp, #20
4002cc14:	e59f4030 	ldr	r4, [pc, #48]	; 4002cc4c <snprintf+0x48>
4002cc18:	e59d1010 	ldr	r1, [sp, #16]
4002cc1c:	e5840000 	str	r0, [r4]
4002cc20:	e1a00003 	mov	r0, r3
4002cc24:	e58d2004 	str	r2, [sp, #4]
4002cc28:	ebfffe8e 	bl	4002c668 <_vprintf>
4002cc2c:	e5942000 	ldr	r2, [r4]
4002cc30:	e3a03000 	mov	r3, #0
4002cc34:	e5843000 	str	r3, [r4]
4002cc38:	e5c23000 	strb	r3, [r2]
4002cc3c:	e28dd008 	add	sp, sp, #8
4002cc40:	e8bd4010 	pop	{r4, lr}
4002cc44:	e28dd008 	add	sp, sp, #8
4002cc48:	e12fff1e 	bx	lr
4002cc4c:	4006c138 	andmi	ip, r6, r8, lsr r1

4002cc50 <vsnprintf>:
4002cc50:	e92d4010 	push	{r4, lr}
4002cc54:	e1a0c000 	mov	ip, r0
4002cc58:	e59f4024 	ldr	r4, [pc, #36]	; 4002cc84 <vsnprintf+0x34>
4002cc5c:	e1a00001 	mov	r0, r1
4002cc60:	e1a01002 	mov	r1, r2
4002cc64:	e1a02003 	mov	r2, r3
4002cc68:	e584c000 	str	ip, [r4]
4002cc6c:	ebfffe7d 	bl	4002c668 <_vprintf>
4002cc70:	e5942000 	ldr	r2, [r4]
4002cc74:	e3a03000 	mov	r3, #0
4002cc78:	e5843000 	str	r3, [r4]
4002cc7c:	e5c23000 	strb	r3, [r2]
4002cc80:	e8bd8010 	pop	{r4, pc}
4002cc84:	4006c138 	andmi	ip, r6, r8, lsr r1

4002cc88 <putchar>:
4002cc88:	e92d4010 	push	{r4, lr}
4002cc8c:	ebffe64e 	bl	400265cc <console_putc>
4002cc90:	e3a00001 	mov	r0, #1
4002cc94:	e8bd8010 	pop	{r4, pc}

4002cc98 <puts>:
4002cc98:	e92d4010 	push	{r4, lr}
4002cc9c:	ebffe64b 	bl	400265d0 <console_puts>
4002cca0:	e3a0000a 	mov	r0, #10
4002cca4:	ebffe648 	bl	400265cc <console_putc>
4002cca8:	e3a00001 	mov	r0, #1
4002ccac:	e8bd8010 	pop	{r4, pc}

4002ccb0 <random>:
4002ccb0:	e59f2024 	ldr	r2, [pc, #36]	; 4002ccdc <random+0x2c>
4002ccb4:	e5923000 	ldr	r3, [r2]
4002ccb8:	e1a001c3 	asr	r0, r3, #3
4002ccbc:	e0200143 	eor	r0, r0, r3, asr #2
4002ccc0:	e0200003 	eor	r0, r0, r3
4002ccc4:	e02002c3 	eor	r0, r0, r3, asr #5
4002ccc8:	e1a00780 	lsl	r0, r0, #15
4002cccc:	e6ff0070 	uxth	r0, r0
4002ccd0:	e18000c3 	orr	r0, r0, r3, asr #1
4002ccd4:	e5820000 	str	r0, [r2]
4002ccd8:	e12fff1e 	bx	lr
4002ccdc:	40033ae0 	andmi	r3, r3, r0, ror #21

4002cce0 <strchr>:
4002cce0:	e6ef1071 	uxtb	r1, r1
4002cce4:	e1a03000 	mov	r3, r0
4002cce8:	e5d32000 	ldrb	r2, [r3]
4002ccec:	e1a00003 	mov	r0, r3
4002ccf0:	e2833001 	add	r3, r3, #1
4002ccf4:	e1520001 	cmp	r2, r1
4002ccf8:	012fff1e 	bxeq	lr
4002ccfc:	e3520000 	cmp	r2, #0
4002cd00:	1afffff8 	bne	4002cce8 <strchr+0x8>
4002cd04:	e1a00002 	mov	r0, r2
4002cd08:	e12fff1e 	bx	lr

4002cd0c <strtok>:
4002cd0c:	e3500000 	cmp	r0, #0
4002cd10:	1a000003 	bne	4002cd24 <strtok+0x18>
4002cd14:	e59f3084 	ldr	r3, [pc, #132]	; 4002cda0 <strtok+0x94>
4002cd18:	e5930000 	ldr	r0, [r3]
4002cd1c:	e3500000 	cmp	r0, #0
4002cd20:	012fff1e 	bxeq	lr
4002cd24:	e1a03000 	mov	r3, r0
4002cd28:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4002cd2c:	e1a00003 	mov	r0, r3
4002cd30:	e4d32001 	ldrb	r2, [r3], #1
4002cd34:	e1a0e001 	mov	lr, r1
4002cd38:	e4dec001 	ldrb	ip, [lr], #1
4002cd3c:	e35c0000 	cmp	ip, #0
4002cd40:	1a000005 	bne	4002cd5c <strtok+0x50>
4002cd44:	e3520000 	cmp	r2, #0
4002cd48:	1a000008 	bne	4002cd70 <strtok+0x64>
4002cd4c:	e59f304c 	ldr	r3, [pc, #76]	; 4002cda0 <strtok+0x94>
4002cd50:	e1a00002 	mov	r0, r2
4002cd54:	e5832000 	str	r2, [r3]
4002cd58:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4002cd5c:	e152000c 	cmp	r2, ip
4002cd60:	1afffff4 	bne	4002cd38 <strtok+0x2c>
4002cd64:	eafffff0 	b	4002cd2c <strtok+0x20>
4002cd68:	e35c0000 	cmp	ip, #0
4002cd6c:	1a000001 	bne	4002cd78 <strtok+0x6c>
4002cd70:	e4d32001 	ldrb	r2, [r3], #1
4002cd74:	e1a0e001 	mov	lr, r1
4002cd78:	e4dec001 	ldrb	ip, [lr], #1
4002cd7c:	e152000c 	cmp	r2, ip
4002cd80:	1afffff8 	bne	4002cd68 <strtok+0x5c>
4002cd84:	e3520000 	cmp	r2, #0
4002cd88:	13a02000 	movne	r2, #0
4002cd8c:	01a03002 	moveq	r3, r2
4002cd90:	15432001 	strbne	r2, [r3, #-1]
4002cd94:	e59f2004 	ldr	r2, [pc, #4]	; 4002cda0 <strtok+0x94>
4002cd98:	e5823000 	str	r3, [r2]
4002cd9c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4002cda0:	4006c13c 	andmi	ip, r6, ip, lsr r1

4002cda4 <uuid_unparse_x>:
4002cda4:	e1a03000 	mov	r3, r0
4002cda8:	e1a00001 	mov	r0, r1
4002cdac:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4002cdb0:	e1a01002 	mov	r1, r2
4002cdb4:	e5932000 	ldr	r2, [r3]
4002cdb8:	e24dd03c 	sub	sp, sp, #60	; 0x3c
4002cdbc:	e1d3c0b8 	ldrh	ip, [r3, #8]
4002cdc0:	e6bf2f32 	rev	r2, r2
4002cdc4:	e58d2028 	str	r2, [sp, #40]	; 0x28
4002cdc8:	e1d320b4 	ldrh	r2, [r3, #4]
4002cdcc:	e6bfcfbc 	rev16	ip, ip
4002cdd0:	e6bf2fb2 	rev16	r2, r2
4002cdd4:	e1cd22bc 	strh	r2, [sp, #44]	; 0x2c
4002cdd8:	e1d320b6 	ldrh	r2, [r3, #6]
4002cddc:	e1cdc3b0 	strh	ip, [sp, #48]	; 0x30
4002cde0:	e28dc032 	add	ip, sp, #50	; 0x32
4002cde4:	e6bf2fb2 	rev16	r2, r2
4002cde8:	e1cd22be 	strh	r2, [sp, #46]	; 0x2e
4002cdec:	e283200a 	add	r2, r3, #10
4002cdf0:	e2833010 	add	r3, r3, #16
4002cdf4:	e1530002 	cmp	r3, r2
4002cdf8:	1a000017 	bne	4002ce5c <uuid_unparse_x+0xb8>
4002cdfc:	e5dd2037 	ldrb	r2, [sp, #55]	; 0x37
4002ce00:	e1dd33b0 	ldrh	r3, [sp, #48]	; 0x30
4002ce04:	e58d2020 	str	r2, [sp, #32]
4002ce08:	e5dd2036 	ldrb	r2, [sp, #54]	; 0x36
4002ce0c:	e1a03423 	lsr	r3, r3, #8
4002ce10:	e58d201c 	str	r2, [sp, #28]
4002ce14:	e5dd2035 	ldrb	r2, [sp, #53]	; 0x35
4002ce18:	e58d3004 	str	r3, [sp, #4]
4002ce1c:	e58d2018 	str	r2, [sp, #24]
4002ce20:	e5dd2034 	ldrb	r2, [sp, #52]	; 0x34
4002ce24:	e1dd32be 	ldrh	r3, [sp, #46]	; 0x2e
4002ce28:	e58d2014 	str	r2, [sp, #20]
4002ce2c:	e5dd2033 	ldrb	r2, [sp, #51]	; 0x33
4002ce30:	e58d3000 	str	r3, [sp]
4002ce34:	e58d2010 	str	r2, [sp, #16]
4002ce38:	e5dd2032 	ldrb	r2, [sp, #50]	; 0x32
4002ce3c:	e1dd32bc 	ldrh	r3, [sp, #44]	; 0x2c
4002ce40:	e58d200c 	str	r2, [sp, #12]
4002ce44:	e5dd2030 	ldrb	r2, [sp, #48]	; 0x30
4002ce48:	e58d2008 	str	r2, [sp, #8]
4002ce4c:	e59d2028 	ldr	r2, [sp, #40]	; 0x28
4002ce50:	ebffff59 	bl	4002cbbc <sprintf>
4002ce54:	e28dd03c 	add	sp, sp, #60	; 0x3c
4002ce58:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4002ce5c:	e4d2e001 	ldrb	lr, [r2], #1
4002ce60:	e4cce001 	strb	lr, [ip], #1
4002ce64:	eaffffe2 	b	4002cdf4 <uuid_unparse_x+0x50>

4002ce68 <uuid_unparse>:
4002ce68:	e59f2000 	ldr	r2, [pc]	; 4002ce70 <uuid_unparse+0x8>
4002ce6c:	eaffffcc 	b	4002cda4 <uuid_unparse_x>
4002ce70:	400335d7 	ldrdmi	r3, [r3], -r7

4002ce74 <isleapyear(int)>:
4002ce74:	e3a02064 	mov	r2, #100	; 0x64
4002ce78:	e713f210 	sdiv	r3, r0, r2
4002ce7c:	e0630392 	mls	r3, r2, r3, r0
4002ce80:	e3530000 	cmp	r3, #0
4002ce84:	1a000005 	bne	4002cea0 <isleapyear(int)+0x2c>
4002ce88:	e3a03e19 	mov	r3, #400	; 0x190
4002ce8c:	e712f310 	sdiv	r2, r0, r3
4002ce90:	e0600293 	mls	r0, r3, r2, r0
4002ce94:	e16f0f10 	clz	r0, r0
4002ce98:	e1a002a0 	lsr	r0, r0, #5
4002ce9c:	e12fff1e 	bx	lr
4002cea0:	e3100003 	tst	r0, #3
4002cea4:	03a00001 	moveq	r0, #1
4002cea8:	13a00000 	movne	r0, #0
4002ceac:	e12fff1e 	bx	lr

4002ceb0 <getdaysofmonth(int, int)>:
4002ceb0:	e3500001 	cmp	r0, #1
4002ceb4:	e92d4010 	push	{r4, lr}
4002ceb8:	e1a04000 	mov	r4, r0
4002cebc:	1a000003 	bne	4002ced0 <getdaysofmonth(int, int)+0x20>
4002cec0:	e1a00001 	mov	r0, r1
4002cec4:	ebffffea 	bl	4002ce74 <isleapyear(int)>
4002cec8:	e3500000 	cmp	r0, #0
4002cecc:	1a000002 	bne	4002cedc <getdaysofmonth(int, int)+0x2c>
4002ced0:	e59f300c 	ldr	r3, [pc, #12]	; 4002cee4 <getdaysofmonth(int, int)+0x34>
4002ced4:	e7930104 	ldr	r0, [r3, r4, lsl #2]
4002ced8:	e8bd8010 	pop	{r4, pc}
4002cedc:	e3a0001d 	mov	r0, #29
4002cee0:	e8bd8010 	pop	{r4, pc}
4002cee4:	40033608 	andmi	r3, r3, r8, lsl #12

4002cee8 <gmtime>:
4002cee8:	e3500000 	cmp	r0, #0
4002ceec:	012fff1e 	bxeq	lr
4002cef0:	e5903000 	ldr	r3, [r0]
4002cef4:	e3a0103c 	mov	r1, #60	; 0x3c
4002cef8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4002cefc:	e300616e 	movw	r6, #366	; 0x16e
4002cf00:	e712f113 	sdiv	r2, r3, r1
4002cf04:	e59f50a4 	ldr	r5, [pc, #164]	; 4002cfb0 <gmtime+0xc8>
4002cf08:	e300716d 	movw	r7, #365	; 0x16d
4002cf0c:	e0633291 	mls	r3, r1, r2, r3
4002cf10:	e5853000 	str	r3, [r5]
4002cf14:	e713f112 	sdiv	r3, r2, r1
4002cf18:	e0622391 	mls	r2, r1, r3, r2
4002cf1c:	e30017b2 	movw	r1, #1970	; 0x7b2
4002cf20:	e5852004 	str	r2, [r5, #4]
4002cf24:	e3a02018 	mov	r2, #24
4002cf28:	e714f213 	sdiv	r4, r3, r2
4002cf2c:	e0633492 	mls	r3, r2, r4, r3
4002cf30:	e2842004 	add	r2, r4, #4
4002cf34:	e5853008 	str	r3, [r5, #8]
4002cf38:	e3a03007 	mov	r3, #7
4002cf3c:	e713f312 	sdiv	r3, r2, r3
4002cf40:	e0633183 	rsb	r3, r3, r3, lsl #3
4002cf44:	e0423003 	sub	r3, r2, r3
4002cf48:	e5853018 	str	r3, [r5, #24]
4002cf4c:	e1a00001 	mov	r0, r1
4002cf50:	ebffffc7 	bl	4002ce74 <isleapyear(int)>
4002cf54:	e3500000 	cmp	r0, #0
4002cf58:	11a03006 	movne	r3, r6
4002cf5c:	01a03007 	moveq	r3, r7
4002cf60:	e1540003 	cmp	r4, r3
4002cf64:	a0444003 	subge	r4, r4, r3
4002cf68:	a2811001 	addge	r1, r1, #1
4002cf6c:	aafffff6 	bge	4002cf4c <gmtime+0x64>
4002cf70:	e585401c 	str	r4, [r5, #28]
4002cf74:	e2413e76 	sub	r3, r1, #1888	; 0x760
4002cf78:	e3a06000 	mov	r6, #0
4002cf7c:	e243300c 	sub	r3, r3, #12
4002cf80:	e5853014 	str	r3, [r5, #20]
4002cf84:	e1a00006 	mov	r0, r6
4002cf88:	ebffffc8 	bl	4002ceb0 <getdaysofmonth(int, int)>
4002cf8c:	e1540000 	cmp	r4, r0
4002cf90:	a0444000 	subge	r4, r4, r0
4002cf94:	a2866001 	addge	r6, r6, #1
4002cf98:	aafffff9 	bge	4002cf84 <gmtime+0x9c>
4002cf9c:	e59f000c 	ldr	r0, [pc, #12]	; 4002cfb0 <gmtime+0xc8>
4002cfa0:	e2844001 	add	r4, r4, #1
4002cfa4:	e5856010 	str	r6, [r5, #16]
4002cfa8:	e585400c 	str	r4, [r5, #12]
4002cfac:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4002cfb0:	4006c140 	andmi	ip, r6, r0, asr #2

4002cfb4 <localtime>:
4002cfb4:	e92d4007 	push	{r0, r1, r2, lr}
4002cfb8:	e3500000 	cmp	r0, #0
4002cfbc:	0a000007 	beq	4002cfe0 <localtime+0x2c>
4002cfc0:	e59f3020 	ldr	r3, [pc, #32]	; 4002cfe8 <localtime+0x34>
4002cfc4:	e5902000 	ldr	r2, [r0]
4002cfc8:	e28d0004 	add	r0, sp, #4
4002cfcc:	e5933000 	ldr	r3, [r3]
4002cfd0:	e5933000 	ldr	r3, [r3]
4002cfd4:	e0833002 	add	r3, r3, r2
4002cfd8:	e58d3004 	str	r3, [sp, #4]
4002cfdc:	ebffffc1 	bl	4002cee8 <gmtime>
4002cfe0:	e28dd00c 	add	sp, sp, #12
4002cfe4:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4002cfe8:	4006c164 	andmi	ip, r6, r4, ror #2

4002cfec <mktime>:
4002cfec:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4002cff0:	e2504000 	subs	r4, r0, #0
4002cff4:	0a000039 	beq	4002d0e0 <mktime+0xf4>
4002cff8:	e5941014 	ldr	r1, [r4, #20]
4002cffc:	e2413046 	sub	r3, r1, #70	; 0x46
4002d000:	e3530045 	cmp	r3, #69	; 0x45
4002d004:	8a000035 	bhi	4002d0e0 <mktime+0xf4>
4002d008:	e2817e76 	add	r7, r1, #1888	; 0x760
4002d00c:	e30057b2 	movw	r5, #1970	; 0x7b2
4002d010:	e3a06000 	mov	r6, #0
4002d014:	e287700b 	add	r7, r7, #11
4002d018:	e300916e 	movw	r9, #366	; 0x16e
4002d01c:	e300816d 	movw	r8, #365	; 0x16d
4002d020:	e1570005 	cmp	r7, r5
4002d024:	ba000007 	blt	4002d048 <mktime+0x5c>
4002d028:	e1a00005 	mov	r0, r5
4002d02c:	e2855001 	add	r5, r5, #1
4002d030:	ebffff8f 	bl	4002ce74 <isleapyear(int)>
4002d034:	e3500000 	cmp	r0, #0
4002d038:	11a03009 	movne	r3, r9
4002d03c:	01a03008 	moveq	r3, r8
4002d040:	e0866003 	add	r6, r6, r3
4002d044:	eafffff5 	b	4002d020 <mktime+0x34>
4002d048:	e5947010 	ldr	r7, [r4, #16]
4002d04c:	e357000b 	cmp	r7, #11
4002d050:	8a000022 	bhi	4002d0e0 <mktime+0xf4>
4002d054:	e3a05000 	mov	r5, #0
4002d058:	e1570005 	cmp	r7, r5
4002d05c:	0a000004 	beq	4002d074 <mktime+0x88>
4002d060:	e1a00005 	mov	r0, r5
4002d064:	e2855001 	add	r5, r5, #1
4002d068:	ebffff90 	bl	4002ceb0 <getdaysofmonth(int, int)>
4002d06c:	e0866000 	add	r6, r6, r0
4002d070:	eafffff8 	b	4002d058 <mktime+0x6c>
4002d074:	e594500c 	ldr	r5, [r4, #12]
4002d078:	e3550000 	cmp	r5, #0
4002d07c:	da000017 	ble	4002d0e0 <mktime+0xf4>
4002d080:	e1a00007 	mov	r0, r7
4002d084:	ebffff89 	bl	4002ceb0 <getdaysofmonth(int, int)>
4002d088:	e1550000 	cmp	r5, r0
4002d08c:	ca000013 	bgt	4002d0e0 <mktime+0xf4>
4002d090:	e2455001 	sub	r5, r5, #1
4002d094:	e3a03018 	mov	r3, #24
4002d098:	e0855006 	add	r5, r5, r6
4002d09c:	e0050593 	mul	r5, r3, r5
4002d0a0:	e5943008 	ldr	r3, [r4, #8]
4002d0a4:	e3530017 	cmp	r3, #23
4002d0a8:	8a00000c 	bhi	4002d0e0 <mktime+0xf4>
4002d0ac:	e0833005 	add	r3, r3, r5
4002d0b0:	e3a0003c 	mov	r0, #60	; 0x3c
4002d0b4:	e0050390 	mul	r5, r0, r3
4002d0b8:	e5943004 	ldr	r3, [r4, #4]
4002d0bc:	e353003b 	cmp	r3, #59	; 0x3b
4002d0c0:	8a000006 	bhi	4002d0e0 <mktime+0xf4>
4002d0c4:	e0833005 	add	r3, r3, r5
4002d0c8:	e0030390 	mul	r3, r0, r3
4002d0cc:	e5940000 	ldr	r0, [r4]
4002d0d0:	e350003b 	cmp	r0, #59	; 0x3b
4002d0d4:	8a000001 	bhi	4002d0e0 <mktime+0xf4>
4002d0d8:	e0800003 	add	r0, r0, r3
4002d0dc:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4002d0e0:	e3e00000 	mvn	r0, #0
4002d0e4:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

4002d0e8 <hal::uuid_init(unsigned char*)>:
4002d0e8:	e92d401f 	push	{r0, r1, r2, r3, r4, lr}
4002d0ec:	e1a04000 	mov	r4, r0
4002d0f0:	e1a0000d 	mov	r0, sp
4002d0f4:	ebfffbe4 	bl	4002c08c <h3_sid_get_rootkey>
4002d0f8:	e5dd3006 	ldrb	r3, [sp, #6]
4002d0fc:	e2841010 	add	r1, r4, #16
4002d100:	e203300f 	and	r3, r3, #15
4002d104:	e3833040 	orr	r3, r3, #64	; 0x40
4002d108:	e5cd3006 	strb	r3, [sp, #6]
4002d10c:	e5dd3008 	ldrb	r3, [sp, #8]
4002d110:	e203303f 	and	r3, r3, #63	; 0x3f
4002d114:	e1e03c83 	mvn	r3, r3, lsl #25
4002d118:	e1e03ca3 	mvn	r3, r3, lsr #25
4002d11c:	e5cd3008 	strb	r3, [sp, #8]
4002d120:	e1a0300d 	mov	r3, sp
4002d124:	e1540001 	cmp	r4, r1
4002d128:	14d32001 	ldrbne	r2, [r3], #1
4002d12c:	14c42001 	strbne	r2, [r4], #1
4002d130:	1afffffb 	bne	4002d124 <hal::uuid_init(unsigned char*)+0x3c>
4002d134:	e28dd010 	add	sp, sp, #16
4002d138:	e8bd8010 	pop	{r4, pc}
4002d13c:	00000000 	andeq	r0, r0, r0

4002d140 <gettimeofday>:
4002d140:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4002d144:	e1a05000 	mov	r5, r0
4002d148:	ec5b3f0e 	mrrc	15, 0, r3, fp, cr14
4002d14c:	e30c2170 	movw	r2, #49520	; 0xc170
4002d150:	e30c7178 	movw	r7, #49528	; 0xc178
4002d154:	e3442006 	movt	r2, #16390	; 0x4006
4002d158:	e3046240 	movw	r6, #16960	; 0x4240
4002d15c:	e3447006 	movt	r7, #16390	; 0x4006
4002d160:	e30c8168 	movw	r8, #49512	; 0xc168
4002d164:	e5921000 	ldr	r1, [r2]
4002d168:	e5922004 	ldr	r2, [r2, #4]
4002d16c:	e0533001 	subs	r3, r3, r1
4002d170:	e340600f 	movt	r6, #15
4002d174:	e0cb2002 	sbc	r2, fp, r2
4002d178:	e5974000 	ldr	r4, [r7]
4002d17c:	e08b3693 	umull	r3, fp, r3, r6
4002d180:	e3448006 	movt	r8, #16390	; 0x4006
4002d184:	e0934004 	adds	r4, r3, r4
4002d188:	e02bb296 	mla	fp, r6, r2, fp
4002d18c:	e5973004 	ldr	r3, [r7, #4]
4002d190:	e1a00004 	mov	r0, r4
4002d194:	e0abb003 	adc	fp, fp, r3
4002d198:	e1a0100b 	mov	r1, fp
4002d19c:	e28f30ac 	add	r3, pc, #172	; 0xac
4002d1a0:	e1c320d0 	ldrd	r2, [r3]
4002d1a4:	eb00017f 	bl	4002d7a8 <__aeabi_uldivmod>
4002d1a8:	e1a0a000 	mov	sl, r0
4002d1ac:	e1a09001 	mov	r9, r1
4002d1b0:	e1a00004 	mov	r0, r4
4002d1b4:	e1a0100b 	mov	r1, fp
4002d1b8:	e28f3090 	add	r3, pc, #144	; 0x90
4002d1bc:	e1c320d0 	ldrd	r2, [r3]
4002d1c0:	eb000178 	bl	4002d7a8 <__aeabi_uldivmod>
4002d1c4:	e1c720f0 	strd	r2, [r7]
4002d1c8:	e3042240 	movw	r2, #16960	; 0x4240
4002d1cc:	e3a03000 	mov	r3, #0
4002d1d0:	e340200f 	movt	r2, #15
4002d1d4:	e1a0000a 	mov	r0, sl
4002d1d8:	e1a01009 	mov	r1, r9
4002d1dc:	eb000171 	bl	4002d7a8 <__aeabi_uldivmod>
4002d1e0:	e5984000 	ldr	r4, [r8]
4002d1e4:	e3042240 	movw	r2, #16960	; 0x4240
4002d1e8:	e340200f 	movt	r2, #15
4002d1ec:	e1a01009 	mov	r1, r9
4002d1f0:	e0844000 	add	r4, r4, r0
4002d1f4:	e3a03000 	mov	r3, #0
4002d1f8:	e5854000 	str	r4, [r5]
4002d1fc:	e1a0000a 	mov	r0, sl
4002d200:	eb000168 	bl	4002d7a8 <__aeabi_uldivmod>
4002d204:	e5983004 	ldr	r3, [r8, #4]
4002d208:	e0832002 	add	r2, r3, r2
4002d20c:	e1520006 	cmp	r2, r6
4002d210:	e5852004 	str	r2, [r5, #4]
4002d214:	ba000006 	blt	4002d234 <gettimeofday+0xf4>
4002d218:	e242293d 	sub	r2, r2, #999424	; 0xf4000
4002d21c:	e2844001 	add	r4, r4, #1
4002d220:	e5854000 	str	r4, [r5]
4002d224:	e2422d09 	sub	r2, r2, #576	; 0x240
4002d228:	e5852004 	str	r2, [r5, #4]
4002d22c:	e3a00000 	mov	r0, #0
4002d230:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4002d234:	e3520000 	cmp	r2, #0
4002d238:	aafffffb 	bge	4002d22c <gettimeofday+0xec>
4002d23c:	e282293d 	add	r2, r2, #999424	; 0xf4000
4002d240:	e2444001 	sub	r4, r4, #1
4002d244:	e5854000 	str	r4, [r5]
4002d248:	e2822d09 	add	r2, r2, #576	; 0x240
4002d24c:	eafffff5 	b	4002d228 <gettimeofday+0xe8>
4002d250:	016e3600 	cmneq	lr, r0, lsl #12
4002d254:	00000000 	andeq	r0, r0, r0

4002d258 <settimeofday>:
4002d258:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4002d25c:	e1a07000 	mov	r7, r0
4002d260:	ec586f0e 	mrrc	15, 0, r6, r8, cr14
4002d264:	e30c4170 	movw	r4, #49520	; 0xc170
4002d268:	e3041240 	movw	r1, #16960	; 0x4240
4002d26c:	e3444006 	movt	r4, #16390	; 0x4006
4002d270:	e30c5180 	movw	r5, #49536	; 0xc180
4002d274:	e340100f 	movt	r1, #15
4002d278:	e5943000 	ldr	r3, [r4]
4002d27c:	e5942004 	ldr	r2, [r4, #4]
4002d280:	e0563003 	subs	r3, r6, r3
4002d284:	e3445006 	movt	r5, #16390	; 0x4006
4002d288:	e0803193 	umull	r3, r0, r3, r1
4002d28c:	e0c82002 	sbc	r2, r8, r2
4002d290:	e0210291 	mla	r1, r1, r2, r0
4002d294:	e5950000 	ldr	r0, [r5]
4002d298:	e0930000 	adds	r0, r3, r0
4002d29c:	e5953004 	ldr	r3, [r5, #4]
4002d2a0:	e0a11003 	adc	r1, r1, r3
4002d2a4:	e28f3024 	add	r3, pc, #36	; 0x24
4002d2a8:	e1c320d0 	ldrd	r2, [r3]
4002d2ac:	eb00013d 	bl	4002d7a8 <__aeabi_uldivmod>
4002d2b0:	f467078f 	vld1.32	{d16}, [r7]
4002d2b4:	e1c520f0 	strd	r2, [r5]
4002d2b8:	e30c3168 	movw	r3, #49512	; 0xc168
4002d2bc:	e3a00000 	mov	r0, #0
4002d2c0:	e3443006 	movt	r3, #16390	; 0x4006
4002d2c4:	e8840140 	stm	r4, {r6, r8}
4002d2c8:	f443078f 	vst1.32	{d16}, [r3]
4002d2cc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4002d2d0:	016e3600 	cmneq	lr, r0, lsl #12
4002d2d4:	00000000 	andeq	r0, r0, r0

4002d2d8 <time>:
4002d2d8:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4002d2dc:	e1a07000 	mov	r7, r0
4002d2e0:	ec553f0e 	mrrc	15, 0, r3, r5, cr14
4002d2e4:	e30c2170 	movw	r2, #49520	; 0xc170
4002d2e8:	e30c8178 	movw	r8, #49528	; 0xc178
4002d2ec:	e3442006 	movt	r2, #16390	; 0x4006
4002d2f0:	e3046240 	movw	r6, #16960	; 0x4240
4002d2f4:	e3448006 	movt	r8, #16390	; 0x4006
4002d2f8:	e30c9168 	movw	r9, #49512	; 0xc168
4002d2fc:	e5921000 	ldr	r1, [r2]
4002d300:	e5922004 	ldr	r2, [r2, #4]
4002d304:	e0533001 	subs	r3, r3, r1
4002d308:	e340600f 	movt	r6, #15
4002d30c:	e0c52002 	sbc	r2, r5, r2
4002d310:	e5984000 	ldr	r4, [r8]
4002d314:	e0853693 	umull	r3, r5, r3, r6
4002d318:	e3449006 	movt	r9, #16390	; 0x4006
4002d31c:	e0934004 	adds	r4, r3, r4
4002d320:	e0255296 	mla	r5, r6, r2, r5
4002d324:	e5983004 	ldr	r3, [r8, #4]
4002d328:	e1a00004 	mov	r0, r4
4002d32c:	e0a55003 	adc	r5, r5, r3
4002d330:	e1a01005 	mov	r1, r5
4002d334:	e28f308c 	add	r3, pc, #140	; 0x8c
4002d338:	e1c320d0 	ldrd	r2, [r3]
4002d33c:	eb000119 	bl	4002d7a8 <__aeabi_uldivmod>
4002d340:	e1a0b000 	mov	fp, r0
4002d344:	e1a0a001 	mov	sl, r1
4002d348:	e1a00004 	mov	r0, r4
4002d34c:	e1a01005 	mov	r1, r5
4002d350:	e28f3070 	add	r3, pc, #112	; 0x70
4002d354:	e1c320d0 	ldrd	r2, [r3]
4002d358:	eb000112 	bl	4002d7a8 <__aeabi_uldivmod>
4002d35c:	e1c820f0 	strd	r2, [r8]
4002d360:	e3042240 	movw	r2, #16960	; 0x4240
4002d364:	e3a03000 	mov	r3, #0
4002d368:	e340200f 	movt	r2, #15
4002d36c:	e1a0000b 	mov	r0, fp
4002d370:	e1a0100a 	mov	r1, sl
4002d374:	eb00010b 	bl	4002d7a8 <__aeabi_uldivmod>
4002d378:	e5994000 	ldr	r4, [r9]
4002d37c:	e3042240 	movw	r2, #16960	; 0x4240
4002d380:	e340200f 	movt	r2, #15
4002d384:	e1a0100a 	mov	r1, sl
4002d388:	e0844000 	add	r4, r4, r0
4002d38c:	e3a03000 	mov	r3, #0
4002d390:	e1a0000b 	mov	r0, fp
4002d394:	eb000103 	bl	4002d7a8 <__aeabi_uldivmod>
4002d398:	e5993004 	ldr	r3, [r9, #4]
4002d39c:	e0832002 	add	r2, r3, r2
4002d3a0:	e1520006 	cmp	r2, r6
4002d3a4:	a2844001 	addge	r4, r4, #1
4002d3a8:	aa000001 	bge	4002d3b4 <time+0xdc>
4002d3ac:	e3520000 	cmp	r2, #0
4002d3b0:	b2444001 	sublt	r4, r4, #1
4002d3b4:	e3570000 	cmp	r7, #0
4002d3b8:	e1a00004 	mov	r0, r4
4002d3bc:	15874000 	strne	r4, [r7]
4002d3c0:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4002d3c4:	e320f000 	nop	{0}
4002d3c8:	016e3600 	cmneq	lr, r0, lsl #12
4002d3cc:	00000000 	andeq	r0, r0, r0

4002d3d0 <operator delete[](void*)>:
4002d3d0:	ea000050 	b	4002d518 <free>

4002d3d4 <operator delete(void*, unsigned int)>:
4002d3d4:	ea00004f 	b	4002d518 <free>

4002d3d8 <operator new(unsigned int)>:
4002d3d8:	ea000023 	b	4002d46c <malloc>

4002d3dc <operator new[](unsigned int)>:
4002d3dc:	ea000022 	b	4002d46c <malloc>

4002d3e0 <__cxa_pure_virtual>:
4002d3e0:	e59f300c 	ldr	r3, [pc, #12]	; 4002d3f4 <__cxa_pure_virtual+0x14>
4002d3e4:	e3a01021 	mov	r1, #33	; 0x21
4002d3e8:	e59f2008 	ldr	r2, [pc, #8]	; 4002d3f8 <__cxa_pure_virtual+0x18>
4002d3ec:	e59f0008 	ldr	r0, [pc, #8]	; 4002d3fc <__cxa_pure_virtual+0x1c>
4002d3f0:	ea000002 	b	4002d400 <__assert_func>
4002d3f4:	400324f9 	strdmi	r2, [r3], -r9
4002d3f8:	40033638 	andmi	r3, r3, r8, lsr r6
4002d3fc:	4003364b 	andmi	r3, r3, fp, asr #12

4002d400 <__assert_func>:
4002d400:	e92d4083 	push	{r0, r1, r7, lr}
4002d404:	e1a04002 	mov	r4, r2
4002d408:	e1a06000 	mov	r6, r0
4002d40c:	e3a00001 	mov	r0, #1
4002d410:	e1a05003 	mov	r5, r3
4002d414:	e1a07001 	mov	r7, r1
4002d418:	ebffe478 	bl	40026600 <console_set_fg_color>
4002d41c:	e59f0038 	ldr	r0, [pc, #56]	; 4002d45c <__assert_func+0x5c>
4002d420:	e3540000 	cmp	r4, #0
4002d424:	e1a02006 	mov	r2, r6
4002d428:	e1a01005 	mov	r1, r5
4002d42c:	059f302c 	ldreq	r3, [pc, #44]	; 4002d460 <__assert_func+0x60>
4002d430:	159f302c 	ldrne	r3, [pc, #44]	; 4002d464 <__assert_func+0x64>
4002d434:	01a04003 	moveq	r4, r3
4002d438:	e88d0018 	stm	sp, {r3, r4}
4002d43c:	e1a03007 	mov	r3, r7
4002d440:	ebfffdd2 	bl	4002cb90 <printf>
4002d444:	e3a00007 	mov	r0, #7
4002d448:	ebffe46c 	bl	40026600 <console_set_fg_color>
4002d44c:	e59f3014 	ldr	r3, [pc, #20]	; 4002d468 <__assert_func+0x68>
4002d450:	e3a02000 	mov	r2, #0
4002d454:	e58320b8 	str	r2, [r3, #184]	; 0xb8
4002d458:	eafffffe 	b	4002d458 <__assert_func+0x58>
4002d45c:	4003366d 	andmi	r3, r3, sp, ror #12
4002d460:	4002ded2 	ldrdmi	sp, [r2], -r2
4002d464:	40033660 	andmi	r3, r3, r0, ror #12
4002d468:	01c20c00 	biceq	r0, r2, r0, lsl #24

4002d46c <malloc>:
4002d46c:	e3500000 	cmp	r0, #0
4002d470:	012fff1e 	bxeq	lr
4002d474:	e59f2088 	ldr	r2, [pc, #136]	; 4002d504 <malloc+0x98>
4002d478:	e5921000 	ldr	r1, [r2]
4002d47c:	e3510000 	cmp	r1, #0
4002d480:	0a000003 	beq	4002d494 <malloc+0x28>
4002d484:	e1500001 	cmp	r0, r1
4002d488:	9a000013 	bls	4002d4dc <malloc+0x70>
4002d48c:	e2822008 	add	r2, r2, #8
4002d490:	eafffff8 	b	4002d478 <malloc+0xc>
4002d494:	e59f106c 	ldr	r1, [pc, #108]	; 4002d508 <malloc+0x9c>
4002d498:	e280201f 	add	r2, r0, #31
4002d49c:	e3c2200f 	bic	r2, r2, #15
4002d4a0:	e5913000 	ldr	r3, [r1]
4002d4a4:	e59fc060 	ldr	ip, [pc, #96]	; 4002d50c <malloc+0xa0>
4002d4a8:	e0832002 	add	r2, r3, r2
4002d4ac:	e152000c 	cmp	r2, ip
4002d4b0:	9a000004 	bls	4002d4c8 <malloc+0x5c>
4002d4b4:	e59f0054 	ldr	r0, [pc, #84]	; 4002d510 <malloc+0xa4>
4002d4b8:	e92d4010 	push	{r4, lr}
4002d4bc:	ebffe444 	bl	400265d4 <console_error>
4002d4c0:	e3a00000 	mov	r0, #0
4002d4c4:	e8bd8010 	pop	{r4, pc}
4002d4c8:	e5812000 	str	r2, [r1]
4002d4cc:	e59f2040 	ldr	r2, [pc, #64]	; 4002d514 <malloc+0xa8>
4002d4d0:	e5830004 	str	r0, [r3, #4]
4002d4d4:	e5832000 	str	r2, [r3]
4002d4d8:	ea000005 	b	4002d4f4 <malloc+0x88>
4002d4dc:	e5923004 	ldr	r3, [r2, #4]
4002d4e0:	e3530000 	cmp	r3, #0
4002d4e4:	01a00001 	moveq	r0, r1
4002d4e8:	0affffe9 	beq	4002d494 <malloc+0x28>
4002d4ec:	e5931008 	ldr	r1, [r3, #8]
4002d4f0:	e5821004 	str	r1, [r2, #4]
4002d4f4:	e3a02000 	mov	r2, #0
4002d4f8:	e283000c 	add	r0, r3, #12
4002d4fc:	e5832008 	str	r2, [r3, #8]
4002d500:	e12fff1e 	bx	lr
4002d504:	40033ae8 	andmi	r3, r3, r8, ror #21
4002d508:	40033ae4 	andmi	r3, r3, r4, ror #21
4002d50c:	41000000 	mrsmi	r0, (UNDEF: 0)
4002d510:	4003369c 	mulmi	r3, ip, r6
4002d514:	424c4d43 	submi	r4, ip, #4288	; 0x10c0

4002d518 <free>:
4002d518:	e3500000 	cmp	r0, #0
4002d51c:	012fff1e 	bxeq	lr
4002d520:	e510100c 	ldr	r1, [r0, #-12]
4002d524:	e240200c 	sub	r2, r0, #12
4002d528:	e59f3038 	ldr	r3, [pc, #56]	; 4002d568 <free+0x50>
4002d52c:	e1510003 	cmp	r1, r3
4002d530:	112fff1e 	bxne	lr
4002d534:	e59f3030 	ldr	r3, [pc, #48]	; 4002d56c <free+0x54>
4002d538:	e5931000 	ldr	r1, [r3]
4002d53c:	e3510000 	cmp	r1, #0
4002d540:	012fff1e 	bxeq	lr
4002d544:	e5920004 	ldr	r0, [r2, #4]
4002d548:	e1510000 	cmp	r1, r0
4002d54c:	1a000003 	bne	4002d560 <free+0x48>
4002d550:	e5931004 	ldr	r1, [r3, #4]
4002d554:	e5821008 	str	r1, [r2, #8]
4002d558:	e5832004 	str	r2, [r3, #4]
4002d55c:	e12fff1e 	bx	lr
4002d560:	e2833008 	add	r3, r3, #8
4002d564:	eafffff3 	b	4002d538 <free+0x20>
4002d568:	424c4d43 	submi	r4, ip, #4288	; 0x10c0
4002d56c:	40033ae8 	andmi	r3, r3, r8, ror #21

4002d570 <invalidate_data_cache_l1_only>:
4002d570:	e92d0070 	push	{r4, r5, r6}
4002d574:	e3a00000 	mov	r0, #0
4002d578:	ee400f10 	mcr	15, 2, r0, cr0, cr0, {0}
4002d57c:	ee300f10 	mrc	15, 1, r0, cr0, cr0, {0}
4002d580:	e3071fff 	movw	r1, #32767	; 0x7fff
4002d584:	e00126a0 	and	r2, r1, r0, lsr #13
4002d588:	e30013ff 	movw	r1, #1023	; 0x3ff
4002d58c:	e00131a0 	and	r3, r1, r0, lsr #3
4002d590:	e2822001 	add	r2, r2, #1
4002d594:	e2000007 	and	r0, r0, #7
4002d598:	e2800004 	add	r0, r0, #4
4002d59c:	e16f1f13 	clz	r1, r3
4002d5a0:	e2834001 	add	r4, r3, #1
4002d5a4:	e2422001 	sub	r2, r2, #1
4002d5a8:	e1a03004 	mov	r3, r4
4002d5ac:	e2533001 	subs	r3, r3, #1
4002d5b0:	e1a05113 	lsl	r5, r3, r1
4002d5b4:	e1a06012 	lsl	r6, r2, r0
4002d5b8:	e1855006 	orr	r5, r5, r6
4002d5bc:	ee075f56 	mcr	15, 0, r5, cr7, cr6, {2}
4002d5c0:	cafffff9 	bgt	4002d5ac <invalidate_data_cache_l1_only+0x3c>
4002d5c4:	e3520000 	cmp	r2, #0
4002d5c8:	cafffff5 	bgt	4002d5a4 <invalidate_data_cache_l1_only+0x34>
4002d5cc:	f57ff04e 	dsb	st
4002d5d0:	f57ff06f 	isb	sy
4002d5d4:	e8bd0070 	pop	{r4, r5, r6}
4002d5d8:	e12fff1e 	bx	lr

4002d5dc <invalidate_data_cache>:
4002d5dc:	e92d0eb0 	push	{r4, r5, r7, r9, sl, fp}
4002d5e0:	f57ff05f 	dmb	sy
4002d5e4:	ee300f30 	mrc	15, 1, r0, cr0, cr0, {1}
4002d5e8:	e1a03ba0 	lsr	r3, r0, #23
4002d5ec:	e213300e 	ands	r3, r3, #14
4002d5f0:	0a00001d 	beq	4002d66c <invalidate_data_cache+0x90>
4002d5f4:	e3a0a000 	mov	sl, #0
4002d5f8:	e08a20aa 	add	r2, sl, sl, lsr #1
4002d5fc:	e1a01230 	lsr	r1, r0, r2
4002d600:	e2011007 	and	r1, r1, #7
4002d604:	e3510002 	cmp	r1, #2
4002d608:	ba000014 	blt	4002d660 <invalidate_data_cache+0x84>
4002d60c:	e10f9000 	mrs	r9, CPSR
4002d610:	f10c0080 	cpsid	i
4002d614:	ee40af10 	mcr	15, 2, sl, cr0, cr0, {0}
4002d618:	f57ff06f 	isb	sy
4002d61c:	ee301f10 	mrc	15, 1, r1, cr0, cr0, {0}
4002d620:	e121f009 	msr	CPSR_c, r9
4002d624:	e2012007 	and	r2, r1, #7
4002d628:	e2822004 	add	r2, r2, #4
4002d62c:	e30043ff 	movw	r4, #1023	; 0x3ff
4002d630:	e01441a1 	ands	r4, r4, r1, lsr #3
4002d634:	e16f5f14 	clz	r5, r4
4002d638:	e3077fff 	movw	r7, #32767	; 0x7fff
4002d63c:	e01776a1 	ands	r7, r7, r1, lsr #13
4002d640:	e1a09007 	mov	r9, r7
4002d644:	e18ab514 	orr	fp, sl, r4, lsl r5
4002d648:	e18bb219 	orr	fp, fp, r9, lsl r2
4002d64c:	ee07bf56 	mcr	15, 0, fp, cr7, cr6, {2}
4002d650:	e2599001 	subs	r9, r9, #1
4002d654:	aafffffa 	bge	4002d644 <invalidate_data_cache+0x68>
4002d658:	e2544001 	subs	r4, r4, #1
4002d65c:	aafffff7 	bge	4002d640 <invalidate_data_cache+0x64>
4002d660:	e28aa002 	add	sl, sl, #2
4002d664:	e153000a 	cmp	r3, sl
4002d668:	caffffe2 	bgt	4002d5f8 <invalidate_data_cache+0x1c>
4002d66c:	e3a0a000 	mov	sl, #0
4002d670:	ee40af10 	mcr	15, 2, sl, cr0, cr0, {0}
4002d674:	f57ff04e 	dsb	st
4002d678:	f57ff06f 	isb	sy
4002d67c:	e8bd0eb0 	pop	{r4, r5, r7, r9, sl, fp}
4002d680:	e12fff1e 	bx	lr

4002d684 <clean_data_cache>:
4002d684:	e92d0eb0 	push	{r4, r5, r7, r9, sl, fp}
4002d688:	f57ff05f 	dmb	sy
4002d68c:	ee300f30 	mrc	15, 1, r0, cr0, cr0, {1}
4002d690:	e1a03ba0 	lsr	r3, r0, #23
4002d694:	e213300e 	ands	r3, r3, #14
4002d698:	0a00001d 	beq	4002d714 <clean_data_cache+0x90>
4002d69c:	e3a0a000 	mov	sl, #0
4002d6a0:	e08a20aa 	add	r2, sl, sl, lsr #1
4002d6a4:	e1a01230 	lsr	r1, r0, r2
4002d6a8:	e2011007 	and	r1, r1, #7
4002d6ac:	e3510002 	cmp	r1, #2
4002d6b0:	ba000014 	blt	4002d708 <clean_data_cache+0x84>
4002d6b4:	e10f9000 	mrs	r9, CPSR
4002d6b8:	f10c0080 	cpsid	i
4002d6bc:	ee40af10 	mcr	15, 2, sl, cr0, cr0, {0}
4002d6c0:	f57ff06f 	isb	sy
4002d6c4:	ee301f10 	mrc	15, 1, r1, cr0, cr0, {0}
4002d6c8:	e121f009 	msr	CPSR_c, r9
4002d6cc:	e2012007 	and	r2, r1, #7
4002d6d0:	e2822004 	add	r2, r2, #4
4002d6d4:	e30043ff 	movw	r4, #1023	; 0x3ff
4002d6d8:	e01441a1 	ands	r4, r4, r1, lsr #3
4002d6dc:	e16f5f14 	clz	r5, r4
4002d6e0:	e3077fff 	movw	r7, #32767	; 0x7fff
4002d6e4:	e01776a1 	ands	r7, r7, r1, lsr #13
4002d6e8:	e1a09007 	mov	r9, r7
4002d6ec:	e18ab514 	orr	fp, sl, r4, lsl r5
4002d6f0:	e18bb219 	orr	fp, fp, r9, lsl r2
4002d6f4:	ee07bf5a 	mcr	15, 0, fp, cr7, cr10, {2}
4002d6f8:	e2599001 	subs	r9, r9, #1
4002d6fc:	aafffffa 	bge	4002d6ec <clean_data_cache+0x68>
4002d700:	e2544001 	subs	r4, r4, #1
4002d704:	aafffff7 	bge	4002d6e8 <clean_data_cache+0x64>
4002d708:	e28aa002 	add	sl, sl, #2
4002d70c:	e153000a 	cmp	r3, sl
4002d710:	caffffe2 	bgt	4002d6a0 <clean_data_cache+0x1c>
4002d714:	e3a0a000 	mov	sl, #0
4002d718:	ee40af10 	mcr	15, 2, sl, cr0, cr0, {0}
4002d71c:	f57ff04e 	dsb	st
4002d720:	f57ff06f 	isb	sy
4002d724:	e8bd0eb0 	pop	{r4, r5, r7, r9, sl, fp}
4002d728:	e12fff1e 	bx	lr

4002d72c <CleanAndInvalidateDataCacheRange>:
4002d72c:	ee103f30 	mrc	15, 0, r3, cr0, cr0, {1}
4002d730:	e1a03823 	lsr	r3, r3, #16
4002d734:	e203300f 	and	r3, r3, #15
4002d738:	e3a02004 	mov	r2, #4
4002d73c:	e1a02312 	lsl	r2, r2, r3
4002d740:	e0801001 	add	r1, r0, r1
4002d744:	e2423001 	sub	r3, r2, #1
4002d748:	e1c00003 	bic	r0, r0, r3
4002d74c:	ee070f3e 	mcr	15, 0, r0, cr7, cr14, {1}
4002d750:	e0800002 	add	r0, r0, r2
4002d754:	e1500001 	cmp	r0, r1
4002d758:	3afffffb 	bcc	4002d74c <CleanAndInvalidateDataCacheRange+0x20>
4002d75c:	f57ff04e 	dsb	st
4002d760:	e12fff1e 	bx	lr

4002d764 <memcpy_blk>:
4002d764:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4002d768:	e8b107f8 	ldm	r1!, {r3, r4, r5, r6, r7, r8, r9, sl}
4002d76c:	e8a007f8 	stmia	r0!, {r3, r4, r5, r6, r7, r8, r9, sl}
4002d770:	e2522001 	subs	r2, r2, #1
4002d774:	1afffffb 	bne	4002d768 <memcpy_blk+0x4>
4002d778:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

4002d77c <c_fiq_handler>:
4002d77c:	e25ef004 	subs	pc, lr, #4

4002d780 <c_irq_handler>:
4002d780:	e25ef004 	subs	pc, lr, #4

4002d784 <vfp_init>:
4002d784:	ee113f50 	mrc	15, 0, r3, cr1, cr0, {2}
4002d788:	e383360f 	orr	r3, r3, #15728640	; 0xf00000
4002d78c:	ee013f50 	mcr	15, 0, r3, cr1, cr0, {2}
4002d790:	f57ff06f 	isb	sy
4002d794:	e3a03101 	mov	r3, #1073741824	; 0x40000000
4002d798:	eee83a10 	vmsr	fpexc, r3
4002d79c:	e3a03000 	mov	r3, #0
4002d7a0:	eee13a10 	vmsr	fpscr, r3
4002d7a4:	e12fff1e 	bx	lr

4002d7a8 <__aeabi_uldivmod>:
4002d7a8:	e3530000 	cmp	r3, #0
4002d7ac:	03520000 	cmpeq	r2, #0
4002d7b0:	1a000004 	bne	4002d7c8 <__aeabi_uldivmod+0x20>
4002d7b4:	e3510000 	cmp	r1, #0
4002d7b8:	03500000 	cmpeq	r0, #0
4002d7bc:	13e01000 	mvnne	r1, #0
4002d7c0:	13e00000 	mvnne	r0, #0
4002d7c4:	ea000060 	b	4002d94c <__aeabi_idiv0>
4002d7c8:	e24dd008 	sub	sp, sp, #8
4002d7cc:	e92d6000 	push	{sp, lr}
4002d7d0:	eb000015 	bl	4002d82c <__udivmoddi4>
4002d7d4:	e59de004 	ldr	lr, [sp, #4]
4002d7d8:	e28dd008 	add	sp, sp, #8
4002d7dc:	e8bd000c 	pop	{r2, r3}
4002d7e0:	e12fff1e 	bx	lr

4002d7e4 <__popcountsi2>:
4002d7e4:	e3052555 	movw	r2, #21845	; 0x5555
4002d7e8:	e3031333 	movw	r1, #13107	; 0x3333
4002d7ec:	e3452555 	movt	r2, #21845	; 0x5555
4002d7f0:	e300cf0f 	movw	ip, #3855	; 0xf0f
4002d7f4:	e00220a0 	and	r2, r2, r0, lsr #1
4002d7f8:	e0402002 	sub	r2, r0, r2
4002d7fc:	e3431333 	movt	r1, #13107	; 0x3333
4002d800:	e0023001 	and	r3, r2, r1
4002d804:	e0012122 	and	r2, r1, r2, lsr #2
4002d808:	e0830002 	add	r0, r3, r2
4002d80c:	e3003101 	movw	r3, #257	; 0x101
4002d810:	e340cf0f 	movt	ip, #3855	; 0xf0f
4002d814:	e0800220 	add	r0, r0, r0, lsr #4
4002d818:	e3403101 	movt	r3, #257	; 0x101
4002d81c:	e000000c 	and	r0, r0, ip
4002d820:	e0000093 	mul	r0, r3, r0
4002d824:	e1a00c20 	lsr	r0, r0, #24
4002d828:	e12fff1e 	bx	lr

4002d82c <__udivmoddi4>:
4002d82c:	e1500002 	cmp	r0, r2
4002d830:	e1a0c000 	mov	ip, r0
4002d834:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
4002d838:	e1a0e001 	mov	lr, r1
4002d83c:	e0de1003 	sbcs	r1, lr, r3
4002d840:	e59d501c 	ldr	r5, [sp, #28]
4002d844:	33a00000 	movcc	r0, #0
4002d848:	31a01000 	movcc	r1, r0
4002d84c:	3a00003b 	bcc	4002d940 <__udivmoddi4+0x114>
4002d850:	e3530000 	cmp	r3, #0
4002d854:	016f6f12 	clzeq	r6, r2
4002d858:	116f6f13 	clzne	r6, r3
4002d85c:	02866020 	addeq	r6, r6, #32
4002d860:	e35e0000 	cmp	lr, #0
4002d864:	016f1f1c 	clzeq	r1, ip
4002d868:	116f1f1e 	clzne	r1, lr
4002d86c:	02811020 	addeq	r1, r1, #32
4002d870:	e0466001 	sub	r6, r6, r1
4002d874:	e2468020 	sub	r8, r6, #32
4002d878:	e2667020 	rsb	r7, r6, #32
4002d87c:	e1a04613 	lsl	r4, r3, r6
4002d880:	e1844812 	orr	r4, r4, r2, lsl r8
4002d884:	e1844732 	orr	r4, r4, r2, lsr r7
4002d888:	e1a02612 	lsl	r2, r2, r6
4002d88c:	e15c0002 	cmp	ip, r2
4002d890:	e0de3004 	sbcs	r3, lr, r4
4002d894:	33a00000 	movcc	r0, #0
4002d898:	31a01000 	movcc	r1, r0
4002d89c:	3a000005 	bcc	4002d8b8 <__udivmoddi4+0x8c>
4002d8a0:	e05cc002 	subs	ip, ip, r2
4002d8a4:	e3a00001 	mov	r0, #1
4002d8a8:	e0cee004 	sbc	lr, lr, r4
4002d8ac:	e1a01810 	lsl	r1, r0, r8
4002d8b0:	e1811730 	orr	r1, r1, r0, lsr r7
4002d8b4:	e1a00610 	lsl	r0, r0, r6
4002d8b8:	e3560000 	cmp	r6, #0
4002d8bc:	0a00001f 	beq	4002d940 <__udivmoddi4+0x114>
4002d8c0:	e1a030a2 	lsr	r3, r2, #1
4002d8c4:	e1a02006 	mov	r2, r6
4002d8c8:	e1833f84 	orr	r3, r3, r4, lsl #31
4002d8cc:	e1a040a4 	lsr	r4, r4, #1
4002d8d0:	ea000007 	b	4002d8f4 <__udivmoddi4+0xc8>
4002d8d4:	e05cc003 	subs	ip, ip, r3
4002d8d8:	e0cee004 	sbc	lr, lr, r4
4002d8dc:	e09cc00c 	adds	ip, ip, ip
4002d8e0:	e0aee00e 	adc	lr, lr, lr
4002d8e4:	e29cc001 	adds	ip, ip, #1
4002d8e8:	e2aee000 	adc	lr, lr, #0
4002d8ec:	e2522001 	subs	r2, r2, #1
4002d8f0:	0a000006 	beq	4002d910 <__udivmoddi4+0xe4>
4002d8f4:	e15c0003 	cmp	ip, r3
4002d8f8:	e0de9004 	sbcs	r9, lr, r4
4002d8fc:	2afffff4 	bcs	4002d8d4 <__udivmoddi4+0xa8>
4002d900:	e09cc00c 	adds	ip, ip, ip
4002d904:	e0aee00e 	adc	lr, lr, lr
4002d908:	e2522001 	subs	r2, r2, #1
4002d90c:	1afffff8 	bne	4002d8f4 <__udivmoddi4+0xc8>
4002d910:	e090000c 	adds	r0, r0, ip
4002d914:	e1a0c63c 	lsr	ip, ip, r6
4002d918:	e18cc71e 	orr	ip, ip, lr, lsl r7
4002d91c:	e18cc83e 	orr	ip, ip, lr, lsr r8
4002d920:	e0a1100e 	adc	r1, r1, lr
4002d924:	e1a0e63e 	lsr	lr, lr, r6
4002d928:	e1a0361e 	lsl	r3, lr, r6
4002d92c:	e183381c 	orr	r3, r3, ip, lsl r8
4002d930:	e1a0661c 	lsl	r6, ip, r6
4002d934:	e183373c 	orr	r3, r3, ip, lsr r7
4002d938:	e0500006 	subs	r0, r0, r6
4002d93c:	e0c11003 	sbc	r1, r1, r3
4002d940:	e3550000 	cmp	r5, #0
4002d944:	18855000 	stmne	r5, {ip, lr}
4002d948:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}

4002d94c <__aeabi_idiv0>:
4002d94c:	e12fff1e 	bx	lr

Disassembly of section .rodata:

4002d950 <vtable for RDMNetDevice-0x2b4>:
4002d950:	654e4354 	strbvs	r4, [lr, #-852]	; 0xfffffcac
4002d954:	00000074 	andeq	r0, r0, r4, ror r0
4002d958:	646f4e20 	strbtvs	r4, [pc], #-3616	; 4002d960 <__aeabi_idiv0+0x14>
4002d95c:	203a2065 	eorscs	r2, sl, r5, rrx
4002d960:	73382e25 	teqvc	r8, #592	; 0x250
4002d964:	0000000a 	andeq	r0, r0, sl
4002d968:	63254c20 			; <UNDEFINED> instruction: 0x63254c20
4002d96c:	00000000 	andeq	r0, r0, r0
4002d970:	00435420 	subeq	r5, r3, r0, lsr #8
4002d974:	75255420 	strvc	r5, [r5, #-1056]!	; 0xfffffbe0
4002d978:	0000000a 	andeq	r0, r0, sl
4002d97c:	253a7525 	ldrcs	r7, [sl, #-1317]!	; 0xfffffadb
4002d980:	75253a75 	strvc	r3, [r5, #-2677]!	; 0xfffff58b
4002d984:	0000000a 	andeq	r0, r0, sl
4002d988:	4e4d4452 	mcrmi	4, 2, r4, cr13, cr2, {2}
4002d98c:	000a7465 	andeq	r7, sl, r5, ror #8
4002d990:	44494320 	strbmi	r4, [r9], #-800	; 0xfffffce0
4002d994:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
4002d998:	00000a73 	andeq	r0, r0, r3, ror sl
4002d99c:	50524c4c 	subspl	r4, r2, ip, asr #24
4002d9a0:	76654420 	strbtvc	r4, [r5], -r0, lsr #8
4002d9a4:	0a656369 	beq	41986750 <__ram_end+0x986750>
4002d9a8:	00000000 	andeq	r0, r0, r0
4002d9ac:	726f5020 	rsbvc	r5, pc, #32
4002d9b0:	44552074 	ldrbmi	r2, [r5], #-116	; 0xffffff8c
4002d9b4:	20202050 	eorcs	r2, r0, r0, asr r0
4002d9b8:	20202020 	eorcs	r2, r0, r0, lsr #32
4002d9bc:	20202020 	eorcs	r2, r0, r0, lsr #32
4002d9c0:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
4002d9c4:	0000000a 	andeq	r0, r0, sl
4002d9c8:	696f4a20 	stmdbvs	pc!, {r5, r9, fp, lr}^	; <UNPREDICTABLE>
4002d9cc:	6552206e 	ldrbvs	r2, [r2, #-110]	; 0xffffff92
4002d9d0:	73657571 	cmnvc	r5, #473956352	; 0x1c400000
4002d9d4:	20202074 	eorcs	r2, r0, r4, ror r0
4002d9d8:	20202020 	eorcs	r2, r0, r0, lsr #32
4002d9dc:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
4002d9e0:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
4002d9e4:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
4002d9e8:	00000a64 	andeq	r0, r0, r4, ror #20
4002d9ec:	6c754d20 	ldclvs	13, cr4, [r5], #-128	; 0xffffff80
4002d9f0:	61636974 	smcvs	13972	; 0x3694
4002d9f4:	52207473 	eorpl	r7, r0, #1929379840	; 0x73000000
4002d9f8:	6f707365 	svcvs	0x00707365
4002d9fc:	2065736e 	rsbcs	r7, r5, lr, ror #6
4002da00:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
4002da04:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
4002da08:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
4002da0c:	00000a64 	andeq	r0, r0, r4, ror #20
4002da10:	4e206f4e 	cdpmi	15, 2, cr6, cr0, cr14, {2}
4002da14:	43205054 			; <UNDEFINED> instruction: 0x43205054
4002da18:	6e65696c 	vnmulvs.f16	s13, s10, s25	; <UNPREDICTABLE>
4002da1c:	00000074 	andeq	r0, r0, r4, ror r0
4002da20:	2050544e 	subscs	r5, r0, lr, asr #8
4002da24:	65696c43 	strbvs	r6, [r9, #-3139]!	; 0xfffff3bd
4002da28:	0000746e 	andeq	r7, r0, lr, ror #8
4002da2c:	2050544e 	subscs	r5, r0, lr, asr #8
4002da30:	65696c43 	strbvs	r6, [r9, #-3139]!	; 0xfffff3bd
4002da34:	4c20746e 	cfstrsmi	mvf7, [r0], #-440	; 0xfffffe48
4002da38:	454b434f 	strbmi	r4, [fp, #-847]	; 0xfffffcb1
4002da3c:	00000044 	andeq	r0, r0, r4, asr #32
4002da40:	6f727245 	svcvs	0x00727245
4002da44:	4e203a72 			; <UNDEFINED> instruction: 0x4e203a72
4002da48:	00005054 	andeq	r5, r0, r4, asr r0
4002da4c:	6f626552 	svcvs	0x00626552
4002da50:	6e69746f 	cdpvs	4, 6, cr7, cr9, cr15, {3}
4002da54:	2e2e2067 	cdpcs	0, 2, cr2, cr14, cr7, {3}
4002da58:	0000002e 	andeq	r0, r0, lr, lsr #32
4002da5c:	65732d37 	ldrbvs	r2, [r3, #-3383]!	; 0xfffff2c9
4002da60:	6e656d67 	cdpvs	13, 6, cr6, cr5, cr7, {3}
4002da64:	00000074 	andeq	r0, r0, r4, ror r0
4002da68:	7274616d 	rsbsvc	r6, r4, #1073741851	; 0x4000001b
4002da6c:	00007869 	andeq	r7, r0, r9, ror #16
4002da70:	75706e49 	ldrbvc	r6, [r0, #-3657]!	; 0xfffff1b7
4002da74:	00000074 	andeq	r0, r0, r4, ror r0
4002da78:	7074754f 	rsbsvc	r7, r4, pc, asr #10
4002da7c:	00007475 	andeq	r7, r0, r5, ror r4
4002da80:	4e4d4f28 	cdpmi	15, 4, cr4, cr13, cr8, {1}
4002da84:	6f6d2049 	svcvs	0x006d2049
4002da88:	00296564 	eoreq	r6, r9, r4, ror #10
4002da8c:	62616e45 	rsbvs	r6, r1, #1104	; 0x450
4002da90:	0064656c 	rsbeq	r6, r4, ip, ror #10
4002da94:	61736944 	cmnvs	r3, r4, asr #18
4002da98:	64656c62 	strbtvs	r6, [r5], #-3170	; 0xfffff39e
4002da9c:	00000000 	andeq	r0, r0, r0
4002daa0:	66654428 	strbtvs	r4, [r5], -r8, lsr #8
4002daa4:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
4002daa8:	00000029 	andeq	r0, r0, r9, lsr #32
4002daac:	333a3631 	teqcc	sl, #51380224	; 0x3100000
4002dab0:	33313a32 	teqcc	r1, #204800	; 0x32000
4002dab4:	00000000 	andeq	r0, r0, r0
4002dab8:	206e614a 	rsbcs	r6, lr, sl, asr #2
4002dabc:	32203220 	eorcc	r3, r0, #32, 4
4002dac0:	00353230 	eorseq	r3, r5, r0, lsr r2
4002dac4:	2043544c 	subcs	r5, r3, ip, asr #8
4002dac8:	54504d53 	ldrbpl	r4, [r0], #-3411	; 0xfffff2ad
4002dacc:	00000045 	andeq	r0, r0, r5, asr #32
4002dad0:	32335b1b 	eorscc	r5, r3, #27648	; 0x6c00
4002dad4:	1b73256d 	blne	41cf7090 <__ram_end+0xcf7090>
4002dad8:	0a6d305b 	beq	41b79c4c <__ram_end+0xb79c4c>
4002dadc:	00000000 	andeq	r0, r0, r0
4002dae0:	3758414d 	ldrbcc	r4, [r8, -sp, asr #2]
4002dae4:	0a393132 	beq	40e79fb4 <__heap_start+0x979fb4>
4002dae8:	00000000 	andeq	r0, r0, r0
4002daec:	20732520 	rsbscs	r2, r3, r0, lsr #10
4002daf0:	5d64255b 	cfstr64pl	mvdx2, [r4, #-364]!	; 0xfffffe94
4002daf4:	0000000a 	andeq	r0, r0, sl
4002daf8:	2043544c 	subcs	r5, r3, ip, asr #8
4002dafc:	54504d53 	ldrbpl	r4, [r0], #-3411	; 0xfffff2ad
4002db00:	6f4e2045 	svcvs	0x004e2045
4002db04:	00006564 	andeq	r6, r0, r4, ror #10
4002db08:	6e61726f 	cdpvs	2, 6, cr7, cr1, cr15, {3}
4002db0c:	69706567 	ldmdbvs	r0!, {r0, r1, r2, r5, r6, r8, sl, sp, lr}^
4002db10:	786d642d 	stmdavc	sp!, {r0, r2, r3, r5, sl, sp, lr}^
4002db14:	67726f2e 	ldrbvs	r6, [r2, -lr, lsr #30]!
4002db18:	00000000 	andeq	r0, r0, r0
4002db1c:	2043544c 	subcs	r5, r3, ip, asr #8
4002db20:	54504d53 	ldrbpl	r4, [r0], #-3411	; 0xfffff2ad
4002db24:	6f4e2045 	svcvs	0x004e2045
4002db28:	20206564 	eorcs	r6, r0, r4, ror #10
4002db2c:	00000000 	andeq	r0, r0, r0
4002db30:	4944494d 	stmdbmi	r4, {r0, r2, r3, r6, r8, fp, lr}^
4002db34:	0000000a 	andeq	r0, r0, sl
4002db38:	72694420 	rsbvc	r4, r9, #32, 8	; 0x20000000
4002db3c:	69746365 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sp, lr}^
4002db40:	20206e6f 	eorcs	r6, r0, pc, ror #28
4002db44:	203a2020 	eorscs	r2, sl, r0, lsr #32
4002db48:	000a7325 	andeq	r7, sl, r5, lsr #6
4002db4c:	61684320 	cmnvs	r8, r0, lsr #6
4002db50:	6c656e6e 	stclvs	14, cr6, [r5], #-440	; 0xfffffe48
4002db54:	20202020 	eorcs	r2, r0, r0, lsr #32
4002db58:	203a2020 	eorscs	r2, sl, r0, lsr #32
4002db5c:	25206425 	strcs	r6, [r0, #-1061]!	; 0xfffffbdb
4002db60:	00000a73 	andeq	r0, r0, r3, ror sl
4002db64:	74634120 	strbtvc	r4, [r3], #-288	; 0xfffffee0
4002db68:	20657669 	rsbcs	r7, r5, r9, ror #12
4002db6c:	736e6573 	cmnvc	lr, #482344960	; 0x1cc00000
4002db70:	203a2065 	eorscs	r2, sl, r5, rrx
4002db74:	000a7325 	andeq	r7, sl, r5, lsr #6
4002db78:	75614220 	strbvc	r4, [r1, #-544]!	; 0xfffffde0
4002db7c:	74617264 	strbtvc	r7, [r1], #-612	; 0xfffffd9c
4002db80:	20202065 	eorcs	r2, r0, r5, rrx
4002db84:	203a2020 	eorscs	r2, sl, r0, lsr #32
4002db88:	25206425 	strcs	r6, [r0, #-1061]!	; 0xfffffbdb
4002db8c:	00000a73 	andeq	r0, r0, r3, ror sl
4002db90:	6c707041 	ldclvs	0, cr7, [r0], #-260	; 0xfffffefc
4002db94:	44494d65 	strbmi	r4, [r9], #-3429	; 0xfffff29b
4002db98:	00000049 	andeq	r0, r0, r9, asr #32
4002db9c:	73655320 	cmnvc	r5, #32, 6	; 0x80000000
4002dba0:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
4002dba4:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
4002dba8:	00000a73 	andeq	r0, r0, r3, ror sl
4002dbac:	2043534f 	subcs	r5, r3, pc, asr #6
4002dbb0:	76726553 			; <UNDEFINED> instruction: 0x76726553
4002dbb4:	00007265 	andeq	r7, r0, r5, ror #4
4002dbb8:	726f5020 	rsbvc	r5, pc, #32
4002dbbc:	203a2074 	eorscs	r2, sl, r4, ror r0
4002dbc0:	000a7525 	andeq	r7, sl, r5, lsr #10
4002dbc4:	74615020 	strbtvc	r5, [r1], #-32	; 0xffffffe0
4002dbc8:	203a2068 	eorscs	r2, sl, r8, rrx
4002dbcc:	5d73255b 	cfldr64pl	mvdx2, [r3, #-364]!	; 0xfffffe94
4002dbd0:	0000000a 	andeq	r0, r0, sl
4002dbd4:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
4002dbd8:	7265733d 	rsbvc	r7, r5, #-201326592	; 0xf4000000
4002dbdc:	00726576 	rsbseq	r6, r2, r6, ror r5
4002dbe0:	72756f53 	rsbsvc	r6, r5, #332	; 0x14c
4002dbe4:	3a206563 	bcc	40847178 <__heap_start+0x347178>
4002dbe8:	0a732520 	beq	41cf7070 <__ram_end+0xcf7070>
4002dbec:	00000000 	andeq	r0, r0, r0
4002dbf0:	0050544e 	subseq	r5, r0, lr, asr #8
4002dbf4:	00435452 	subeq	r5, r3, r2, asr r4
4002dbf8:	2f73252f 	svccs	0x0073252f
4002dbfc:	2a2f6374 	bcs	40c069d4 <__heap_start+0x7069d4>
4002dc00:	00000000 	andeq	r0, r0, r0

4002dc04 <vtable for RDMNetDevice>:
	...
4002dc0c:	40002920 	andmi	r2, r0, r0, lsr #18
4002dc10:	40002a24 	andmi	r2, r0, r4, lsr #20
4002dc14:	4001a918 	andmi	sl, r1, r8, lsl r9
4002dc18:	4001a91c 	andmi	sl, r1, ip, lsl r9

4002dc1c <hal::utc_validate(signed char, unsigned char, long&)::s_ValidOffsets>:
4002dc1c:	1efd1ef7 	mrcne	14, 7, r1, cr13, cr7, {7}
4002dc20:	1e041e03 	cdpne	14, 0, cr1, cr4, cr3, {0}
4002dc24:	2d051e05 	stccs	14, cr1, [r5, #-20]	; 0xffffffec
4002dc28:	2d081e06 	stccs	14, cr1, [r8, #-24]	; 0xffffffe8
4002dc2c:	1e0a1e09 	cdpne	14, 0, cr1, cr10, cr9, {0}
4002dc30:	00002d0c 	andeq	r2, r0, ip, lsl #26

4002dc34 <SOFTWARE_VERSION>:
4002dc34:	00302e35 	eorseq	r2, r0, r5, lsr lr

4002dc38 <rdmnetllrponly::LABEL>:
4002dc38:	4e4d4452 	mcrmi	4, 2, r4, cr13, cr2, {2}
4002dc3c:	4c207465 	cfstrsmi	mvf7, [r0], #-404	; 0xfffffe6c
4002dc40:	2050524c 	subscs	r5, r0, ip, asr #4
4002dc44:	796c6e4f 	stmdbvc	ip!, {r0, r1, r2, r3, r6, r9, sl, fp, sp, lr}^
4002dc48:	00000000 	andeq	r0, r0, r0

4002dc4c <tcnet::NODE_NAME_DEFAULT>:
4002dc4c:	00567641 	subseq	r7, r6, r1, asr #12

4002dc50 <TimeCodeConst::FPS>:
4002dc50:	1e1e1918 			; <UNDEFINED> instruction: 0x1e1e1918

4002dc54 <s_Index>:
4002dc54:	04030100 	streq	r0, [r3], #-256	; 0xffffff00
4002dc58:	0a090706 	beq	4026f878 <__bss_end+0x2036f0>
4002dc5c:	20535047 	subscs	r5, r3, r7, asr #32
4002dc60:	00000000 	andeq	r0, r0, r0

4002dc64 <cmd::SET>:
4002dc64:	7465732f 	strbtvc	r7, [r5], #-815	; 0xfffffcd1
4002dc68:	0000002f 	andeq	r0, r0, pc, lsr #32

4002dc6c <cmd::GOTO>:
4002dc6c:	6f746f67 	svcvs	0x00746f67
4002dc70:	00000000 	andeq	r0, r0, r0

4002dc74 <cmd::STOP>:
4002dc74:	706f7473 	rsbvc	r7, pc, r3, ror r4	; <UNPREDICTABLE>
4002dc78:	00000000 	andeq	r0, r0, r0

4002dc7c <cmd::PITCH>:
4002dc7c:	63746970 	cmnvs	r4, #112, 18	; 0x1c0000
4002dc80:	00000068 	andeq	r0, r0, r8, rrx

4002dc84 <cmd::START>:
4002dc84:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
4002dc88:	00000074 	andeq	r0, r0, r4, ror r0

4002dc8c <cmd::RESUME>:
4002dc8c:	75736572 	ldrbvc	r6, [r3, #-1394]!	; 0xfffffa8e
4002dc90:	0000656d 	andeq	r6, r0, sp, ror #10

4002dc94 <cmd::FORWARD>:
4002dc94:	77726f66 	ldrbvc	r6, [r2, -r6, ror #30]!
4002dc98:	00647261 	rsbeq	r7, r4, r1, ror #4

4002dc9c <cmd::BACKWARD>:
4002dc9c:	6b636162 	blvs	4190622c <__ram_end+0x90622c>
4002dca0:	64726177 	ldrbtvs	r6, [r2], #-375	; 0xfffffe89
4002dca4:	00000000 	andeq	r0, r0, r0

4002dca8 <cmd::DIRECTION>:
4002dca8:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
4002dcac:	6f697463 	svcvs	0x00697463
4002dcb0:	0000006e 	andeq	r0, r0, lr, rrx

4002dcb4 <midi::cmd::BPM>:
4002dcb4:	006d7062 	rsbeq	r7, sp, r2, rrx

4002dcb8 <midi::cmd::PATH>:
4002dcb8:	6964696d 	stmdbvs	r4!, {r0, r2, r3, r5, r6, r8, fp, sp, lr}^
4002dcbc:	0000002f 	andeq	r0, r0, pc, lsr #32

4002dcc0 <midi::cmd::STOP>:
4002dcc0:	706f7473 	rsbvc	r7, pc, r3, ror r4	; <UNPREDICTABLE>
4002dcc4:	00000000 	andeq	r0, r0, r0

4002dcc8 <midi::cmd::START>:
4002dcc8:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
4002dccc:	00000074 	andeq	r0, r0, r4, ror r0

4002dcd0 <midi::cmd::CONTINUE>:
4002dcd0:	746e6f63 	strbtvc	r6, [lr], #-3939	; 0xfffff09d
4002dcd4:	65756e69 	ldrbvs	r6, [r5, #-3689]!	; 0xfffff197
4002dcd8:	00000000 	andeq	r0, r0, r0

4002dcdc <tcnet::cmd::PATH>:
4002dcdc:	656e6374 	strbvs	r6, [lr, #-884]!	; 0xfffffc8c
4002dce0:	00002f74 	andeq	r2, r0, r4, ror pc

4002dce4 <tcnet::cmd::TYPE>:
4002dce4:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
4002dce8:	00000000 	andeq	r0, r0, r0

4002dcec <tcnet::cmd::LAYER>:
4002dcec:	6579616c 	ldrbvs	r6, [r9, #-364]!	; 0xfffffe94
4002dcf0:	00002f72 	andeq	r2, r0, r2, ror pc

4002dcf4 <ws28xx::cmd::INFO>:
4002dcf4:	6f666e69 	svcvs	0x00666e69
4002dcf8:	00000000 	andeq	r0, r0, r0

4002dcfc <ws28xx::cmd::PATH>:
4002dcfc:	38327377 	ldmdacc	r2!, {r0, r1, r2, r4, r5, r6, r8, r9, ip, sp, lr}
4002dd00:	002f7878 	eoreq	r7, pc, r8, ror r8	; <UNPREDICTABLE>

4002dd04 <ws28xx::cmd::MASTER>:
4002dd04:	7473616d 	ldrbtvc	r6, [r3], #-365	; 0xfffffe93
4002dd08:	00007265 	andeq	r7, r0, r5, ror #4

4002dd0c <ws28xx::cmd::MESSAGE>:
4002dd0c:	7373656d 	cmnvc	r3, #457179136	; 0x1b400000
4002dd10:	00656761 	rsbeq	r6, r5, r1, ror #14

4002dd14 <ws28xx::rgb::cmd::FPS>:
4002dd14:	00737066 	rsbseq	r7, r3, r6, rrx

4002dd18 <ws28xx::rgb::cmd::INFO>:
4002dd18:	6f666e69 	svcvs	0x00666e69
4002dd1c:	00000000 	andeq	r0, r0, r0

4002dd20 <ws28xx::rgb::cmd::PATH>:
4002dd20:	2f626772 	svccs	0x00626772
4002dd24:	00000000 	andeq	r0, r0, r0

4002dd28 <ws28xx::rgb::cmd::TIME>:
4002dd28:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
4002dd2c:	00000000 	andeq	r0, r0, r0

4002dd30 <ws28xx::rgb::cmd::COLON>:
4002dd30:	6f6c6f63 	svcvs	0x006c6f63
4002dd34:	0000006e 	andeq	r0, r0, lr, rrx

4002dd38 <ws28xx::rgb::cmd::MESSAGE>:
4002dd38:	7373656d 	cmnvc	r3, #457179136	; 0x1b400000
4002dd3c:	00656761 	rsbeq	r6, r5, r1, ror #14

4002dd40 <LtcSourceConst::NAME>:
4002dd40:	0043544c 	subeq	r5, r3, ip, asr #8
	...
4002dd4c:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
4002dd50:	0074654e 	rsbseq	r6, r4, lr, asr #10
4002dd54:	00000000 	andeq	r0, r0, r0
4002dd58:	4944494d 	stmdbmi	r4, {r0, r2, r3, r6, r8, fp, lr}^
	...
4002dd64:	654e4354 	strbvs	r4, [lr, #-852]	; 0xfffffcac
4002dd68:	00000074 	andeq	r0, r0, r4, ror r0
4002dd6c:	00000000 	andeq	r0, r0, r0
4002dd70:	65746e49 	ldrbvs	r6, [r4, #-3657]!	; 0xfffff1b7
4002dd74:	6c616e72 	stclvs	14, cr6, [r1], #-456	; 0xfffffe38
4002dd78:	00000000 	andeq	r0, r0, r0
4002dd7c:	4d707472 	cfldrdmi	mvd7, [r0, #-456]!	; 0xfffffe38
4002dd80:	00494449 	subeq	r4, r9, r9, asr #8
4002dd84:	00000000 	andeq	r0, r0, r0
4002dd88:	74737953 	ldrbtvc	r7, [r3], #-2387	; 0xfffff6ad
4002dd8c:	542d6d65 	strtpl	r6, [sp], #-3429	; 0xfffff29b
4002dd90:	00656d69 	rsbeq	r6, r5, r9, ror #26
4002dd94:	00435445 	subeq	r5, r3, r5, asr #8
	...
4002dda0:	6174535b 	cmnvs	r4, fp, asr r3
4002dda4:	005d7472 	subseq	r7, sp, r2, ror r4
4002dda8:	6f74535b 	svcvs	0x0074535b
4002ddac:	00205d70 	eoreq	r5, r0, r0, ror sp
4002ddb0:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
4002ddb4:	322e2520 	eorcc	r2, lr, #32, 10	; 0x8000000
4002ddb8:	00000d78 	andeq	r0, r0, r8, ror sp
4002ddbc:	4e4f433e 	mcrmi	3, 2, r4, cr15, cr14, {1}
4002ddc0:	554e4954 	strbpl	r4, [lr, #-2388]	; 0xfffff6ac
4002ddc4:	203c3f45 	eorscs	r3, ip, r5, asr #30
4002ddc8:	00000000 	andeq	r0, r0, r0
4002ddcc:	4245523e 	submi	r5, r5, #-536870909	; 0xe0000003
4002ddd0:	3f544f4f 	svccc	0x00544f4f
4002ddd4:	203c2020 	eorscs	r2, ip, r0, lsr #32
4002ddd8:	00000000 	andeq	r0, r0, r0
4002dddc:	5345523e 	movtpl	r5, #21054	; 0x523e
4002dde0:	54205445 	strtpl	r5, [r0], #-1093	; 0xfffffbbb
4002dde4:	203c3f43 	eorscs	r3, ip, r3, asr #30
4002dde8:	00000000 	andeq	r0, r0, r0
4002ddec:	6f626552 	svcvs	0x00626552
4002ddf0:	2e20746f 	cdpcs	4, 2, cr7, cr0, cr15, {3}
4002ddf4:	00002e2e 	andeq	r2, r0, lr, lsr #28
4002ddf8:	6f626552 	svcvs	0x00626552
4002ddfc:	2e20746f 	cdpcs	4, 2, cr7, cr0, cr15, {3}
4002de00:	000a2e2e 	andeq	r2, sl, lr, lsr #28
4002de04:	65687445 	strbvs	r7, [r8, #-1093]!	; 0xfffffbbb
4002de08:	74656e72 	strbtvc	r6, [r5], #-3698	; 0xfffff18e
4002de0c:	6e6f6320 	cdpvs	3, 6, cr6, cr15, cr0, {1}
4002de10:	00676966 	rsbeq	r6, r7, r6, ror #18
4002de14:	65687445 	strbvs	r7, [r8, #-1093]!	; 0xfffffbbb
4002de18:	74656e72 	strbtvc	r6, [r5], #-3698	; 0xfffff18e
4002de1c:	61747320 	cmnvs	r4, r0, lsr #6
4002de20:	00007472 	andeq	r7, r0, r2, ror r4
4002de24:	65687445 	strbvs	r7, [r8, #-1093]!	; 0xfffffbbb
4002de28:	74656e72 	strbtvc	r6, [r5], #-3698	; 0xfffff18e
4002de2c:	6e694c20 	cdpvs	12, 6, cr4, cr9, cr0, {1}
4002de30:	0000206b 	andeq	r2, r0, fp, rrx
4002de34:	00005055 	andeq	r5, r0, r5, asr r0
4002de38:	4e574f44 	cdpmi	15, 5, cr4, cr7, cr4, {2}
4002de3c:	00000000 	andeq	r0, r0, r0
4002de40:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
4002de44:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
4002de48:	2f64252e 	svccs	0x0064252e
4002de4c:	25206425 	strcs	r6, [r0, #-1061]!	; 0xfffffbdb
4002de50:	69640063 	stmdbvs	r4!, {r0, r1, r5, r6}^
4002de54:	616c7073 	smcvs	50947	; 0xc703
4002de58:	73253a79 			; <UNDEFINED> instruction: 0x73253a79
4002de5c:	7075000a 	rsbsvc	r0, r5, sl
4002de60:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
4002de64:	7525203a 	strvc	r2, [r5, #-58]!	; 0xffffffc6
4002de68:	76000a73 			; <UNDEFINED> instruction: 0x76000a73
4002de6c:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
4002de70:	253a6e6f 	ldrcs	r6, [sl, #-3695]!	; 0xfffff191
4002de74:	74000a73 	strvc	r0, [r0], #-2675	; 0xfffff58d
4002de78:	3a707466 	bcc	41c4b018 <__ram_end+0xc4b018>
4002de7c:	000a7325 	andeq	r7, sl, r5, lsr #6
4002de80:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
4002de84:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
4002de88:	2c64252e 	cfstr64cs	mvdx2, [r4], #-184	; 0xffffff48
4002de8c:	252c7325 	strcs	r7, [ip, #-805]!	; 0xfffffcdb
4002de90:	75252c73 	strvc	r2, [r5, #-3187]!	; 0xfffff38d
4002de94:	0a73252c 	beq	41cf734c <__ram_end+0xcf734c>
4002de98:	2e642500 	cdpcs	5, 6, cr2, cr4, cr0, {0}
4002de9c:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
4002dea0:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
4002dea4:	2c73252c 	cfldr64cs	mvdx2, [r3], #-176	; 0xffffff50
4002dea8:	252c7325 	strcs	r7, [ip, #-805]!	; 0xfffffcdb
4002deac:	45000a75 	strmi	r0, [r0, #-2677]	; 0xfffff58b
4002deb0:	524f5252 	subpl	r5, pc, #536870917	; 0x20000005
4002deb4:	65673f23 	strbvs	r3, [r7, #-3875]!	; 0xfffff0dd
4002deb8:	74000a74 	strvc	r0, [r0], #-2676	; 0xfffff58c
4002debc:	23707466 	cmncs	r0, #1711276032	; 0x66000000
4002dec0:	73696400 	cmnvc	r9, #0, 8
4002dec4:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
4002dec8:	52450023 	subpl	r0, r5, #35	; 0x23
4002decc:	23524f52 	cmpcs	r2, #328	; 0x148
4002ded0:	45000a21 	strmi	r0, [r0, #-2593]	; 0xfffff5df
4002ded4:	524f5252 	subpl	r5, pc, #536870917	; 0x20000005
4002ded8:	000a3f23 	andeq	r3, sl, r3, lsr #30

4002dedc <RemoteConfig::s_SET>:
4002dedc:	40007d08 	andmi	r7, r0, r8, lsl #26
4002dee0:	00000000 	andeq	r0, r0, r0
4002dee4:	4002debb 			; <UNDEFINED> instruction: 0x4002debb
4002dee8:	00010005 	andeq	r0, r1, r5
4002deec:	40007d58 	andmi	r7, r0, r8, asr sp
4002def0:	00000000 	andeq	r0, r0, r0
4002def4:	4002dec1 	andmi	sp, r2, r1, asr #29
4002def8:	00010008 	andeq	r0, r1, r8
4002defc:	6f626572 	svcvs	0x00626572
4002df00:	2323746f 			; <UNDEFINED> instruction: 0x2323746f
4002df04:	73696c00 	cmnvc	r9, #0, 24
4002df08:	76002374 			; <UNDEFINED> instruction: 0x76002374
4002df0c:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
4002df10:	00236e6f 	eoreq	r6, r3, pc, ror #28
4002df14:	69747075 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, ip, sp, lr}^
4002df18:	0023656d 	eoreq	r6, r3, sp, ror #10
4002df1c:	23746567 	cmncs	r4, #432013312	; 0x19c00000
4002df20:	63616600 	cmnvs	r1, #0, 12
4002df24:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
4002df28:	00002323 	andeq	r2, r0, r3, lsr #6

4002df2c <RemoteConfig::s_GET>:
4002df2c:	40008b5c 	andmi	r8, r0, ip, asr fp
4002df30:	00000000 	andeq	r0, r0, r0
4002df34:	4002defc 	strdmi	sp, [r2], -ip
4002df38:	00000008 	andeq	r0, r0, r8
4002df3c:	40007bb8 			; <UNDEFINED> instruction: 0x40007bb8
4002df40:	00000000 	andeq	r0, r0, r0
4002df44:	4002df05 	andmi	sp, r2, r5, lsl #30
4002df48:	00000005 	andeq	r0, r0, r5
4002df4c:	40007b10 	andmi	r7, r0, r0, lsl fp
4002df50:	00000000 	andeq	r0, r0, r0
4002df54:	4002df0b 	andmi	sp, r2, fp, lsl #30
4002df58:	00000008 	andeq	r0, r0, r8
4002df5c:	40007a54 	andmi	r7, r0, r4, asr sl
4002df60:	00000000 	andeq	r0, r0, r0
4002df64:	4002dec1 	andmi	sp, r2, r1, asr #29
4002df68:	00000008 	andeq	r0, r0, r8
4002df6c:	40007abc 			; <UNDEFINED> instruction: 0x40007abc
4002df70:	00000000 	andeq	r0, r0, r0
4002df74:	4002df14 	andmi	sp, r2, r4, lsl pc
4002df78:	00000007 	andeq	r0, r0, r7
4002df7c:	40008090 	mulmi	r0, r0, r0
4002df80:	00000000 	andeq	r0, r0, r0
4002df84:	4002df1c 	andmi	sp, r2, ip, lsl pc
4002df88:	00010004 	andeq	r0, r1, r4
4002df8c:	40007b58 	andmi	r7, r0, r8, asr fp
4002df90:	00000000 	andeq	r0, r0, r0
4002df94:	4002debb 			; <UNDEFINED> instruction: 0x4002debb
4002df98:	00000005 	andeq	r0, r0, r5
4002df9c:	400086e0 	andmi	r8, r0, r0, ror #13
4002dfa0:	00000000 	andeq	r0, r0, r0
4002dfa4:	4002df21 	andmi	sp, r2, r1, lsr #30
4002dfa8:	00000009 	andeq	r0, r0, r9

4002dfac <s_Node>:
4002dfac:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
4002dfb0:	0074654e 	rsbseq	r6, r4, lr, asr #10
	...
4002dfbc:	41730000 	cmnmi	r3, r0
4002dfc0:	45204e43 	strmi	r4, [r0, #-3651]!	; 0xfffff1bd
4002dfc4:	31332e31 	teqcc	r3, r1, lsr lr
	...
4002dfd0:	2043534f 	subcs	r5, r3, pc, asr #6
4002dfd4:	76726553 			; <UNDEFINED> instruction: 0x76726553
4002dfd8:	00007265 	andeq	r7, r0, r5, ror #4
4002dfdc:	00000000 	andeq	r0, r0, r0
4002dfe0:	544c0000 	strbpl	r0, [ip], #-0
4002dfe4:	00000043 	andeq	r0, r0, r3, asr #32
	...
4002dff4:	2043534f 	subcs	r5, r3, pc, asr #6
4002dff8:	65696c43 	strbvs	r6, [r9, #-3139]!	; 0xfffff3bd
4002dffc:	0000746e 	andeq	r7, r0, lr, ror #8
4002e000:	00000000 	andeq	r0, r0, r0
4002e004:	44520000 	ldrbmi	r0, [r2], #-0
4002e008:	74654e4d 	strbtvc	r4, [r5], #-3661	; 0xfffff1b3
4002e00c:	524c4c20 	subpl	r4, ip, #32, 24	; 0x2000
4002e010:	6e4f2050 	mcrvs	0, 2, r2, cr15, cr0, {2}
4002e014:	0000796c 	andeq	r7, r0, ip, ror #18
4002e018:	776f6853 			; <UNDEFINED> instruction: 0x776f6853
4002e01c:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
	...
4002e028:	494d0000 	stmdbmi	sp, {}^	; <UNPREDICTABLE>
4002e02c:	00004944 	andeq	r4, r0, r4, asr #18
	...
4002e03c:	00504444 	subseq	r4, r0, r4, asr #8
	...
4002e04c:	69500000 	ldmdbvs	r0, {}^	; <UNPREDICTABLE>
4002e050:	506c6578 	rsbpl	r6, ip, r8, ror r5
4002e054:	65687375 	strbvs	r7, [r8, #-885]!	; 0xfffffc8b
4002e058:	00000072 	andeq	r0, r0, r2, ror r0
4002e05c:	00000000 	andeq	r0, r0, r0
4002e060:	65646f4e 	strbvs	r6, [r4, #-3918]!	; 0xfffff0b2
	...
4002e070:	6f420000 	svcvs	0x00420000
4002e074:	6f6c746f 	svcvs	0x006c746f
4002e078:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
4002e07c:	54465420 	strbpl	r5, [r6], #-1056	; 0xfffffbe0
4002e080:	00000050 	andeq	r0, r0, r0, asr r0
4002e084:	204d4452 	subcs	r4, sp, r2, asr r4
4002e088:	70736552 	rsbsvc	r6, r3, r2, asr r5
4002e08c:	65646e6f 	strbvs	r6, [r4, #-3695]!	; 0xfffff191
4002e090:	00000072 	andeq	r0, r0, r2, ror r0
	...

4002e096 <s_Output>:
4002e096:	00584d44 	subseq	r4, r8, r4, asr #26
	...
4002e0a2:	004d4452 	subeq	r4, sp, r2, asr r4
	...
4002e0ae:	696e6f4d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
4002e0b2:	00726f74 	rsbseq	r6, r2, r4, ror pc
4002e0b6:	00000000 	andeq	r0, r0, r0
4002e0ba:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
4002e0be:	0000006c 	andeq	r0, r0, ip, rrx
4002e0c2:	00000000 	andeq	r0, r0, r0
4002e0c6:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
4002e0ca:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
4002e0ce:	00000000 	andeq	r0, r0, r0
4002e0d2:	0043534f 	subeq	r5, r3, pc, asr #6
	...
4002e0de:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
4002e0e2:	00006769 	andeq	r6, r0, r9, ror #14
4002e0e6:	00000000 	andeq	r0, r0, r0
4002e0ea:	70657453 	rsbvc	r7, r5, r3, asr r4
4002e0ee:	00726570 	rsbseq	r6, r2, r0, ror r5
4002e0f2:	00000000 	andeq	r0, r0, r0
4002e0f6:	79616c50 	stmdbvc	r1!, {r4, r6, sl, fp, sp, lr}^
4002e0fa:	00007265 	andeq	r7, r0, r5, ror #4
4002e0fe:	00000000 	andeq	r0, r0, r0
4002e102:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
4002e106:	0074654e 	rsbseq	r6, r4, lr, asr #10
4002e10a:	00000000 	andeq	r0, r0, r0
4002e10e:	69726553 	ldmdbvs	r2!, {r0, r1, r4, r6, r8, sl, sp, lr}^
4002e112:	00006c61 	andeq	r6, r0, r1, ror #24
4002e116:	00000000 	andeq	r0, r0, r0
4002e11a:	20424752 	subcs	r4, r2, r2, asr r7
4002e11e:	656e6150 	strbvs	r6, [lr, #-336]!	; 0xfffffeb0
4002e122:	0000006c 	andeq	r0, r0, ip, rrx
4002e126:	004d5750 	subeq	r5, sp, r0, asr r7
	...
4002e132:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
4002e136:	2c64253a 	cfstr64cs	mvdx2, [r4], #-232	; 0xffffff18
4002e13a:	73252300 			; <UNDEFINED> instruction: 0x73252300
4002e13e:	0a64253d 	beq	4193763a <__ram_end+0x93763a>
4002e142:	73252200 			; <UNDEFINED> instruction: 0x73252200
4002e146:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
4002e14a:	002c2273 	eoreq	r2, ip, r3, ror r2
4002e14e:	3d732523 	cfldr64cc	mvdx2, [r3, #-140]!	; 0xffffff74
4002e152:	000a7325 	andeq	r7, sl, r5, lsr #6

4002e156 <RemoteConfigConst::PARAMS_DISPLAY_NAME>:
4002e156:	70736964 	rsbsvc	r6, r3, r4, ror #18
4002e15a:	5f79616c 	svcpl	0x0079616c
4002e15e:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

4002e163 <RemoteConfigConst::PARAMS_ENABLE_FACTORY>:
4002e163:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
4002e167:	665f656c 	ldrbvs	r6, [pc], -ip, ror #10
4002e16b:	6f746361 	svcvs	0x00746361
4002e16f:	 	strvs	r7, [r0, #-2418]	; 0xfffff68e

4002e172 <RemoteConfigConst::PARAMS_ENABLE_UPTIME>:
4002e172:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
4002e176:	755f656c 	ldrbvc	r6, [pc, #-1388]	; 4002dc12 <vtable for RDMNetDevice+0xe>
4002e17a:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
4002e17e:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

4002e180 <RemoteConfigConst::PARAMS_ENABLE_REBOOT>:
4002e180:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
4002e184:	725f656c 	subsvc	r6, pc, #108, 10	; 0x1b000000
4002e188:	6f6f6265 	svcvs	0x006f6265
4002e18c:	 	stmdbvs	r4!, {r2, r4, r5, r6}^

4002e18e <RemoteConfigConst::PARAMS_DISABLE_WRITE>:
4002e18e:	61736964 	cmnvs	r3, r4, ror #18
4002e192:	5f656c62 	svcpl	0x00656c62
4002e196:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
4002e19a:	 	stmdbvs	r4!, {r0, r2, r5, r6}^

4002e19c <RemoteConfigConst::PARAMS_DISABLE>:
4002e19c:	61736964 	cmnvs	r3, r4, ror #18
4002e1a0:	00656c62 	rsbeq	r6, r5, r2, ror #24

4002e1a4 <RemoteConfigConst::PARAMS_FILE_NAME>:
4002e1a4:	6e6f6372 	mcrvs	3, 3, r6, cr15, cr2, {3}
4002e1a8:	2e676966 	vnmulcs.f16	s13, s14, s13	; <UNPREDICTABLE>
4002e1ac:	00747874 	rsbseq	r7, r4, r4, ror r8

4002e1b0 <paramMasks>:
4002e1b0:	4002e19c 	mulmi	r2, ip, r1
4002e1b4:	00000001 	andeq	r0, r0, r1
4002e1b8:	4002e18e 	andmi	lr, r2, lr, lsl #3
4002e1bc:	00000002 	andeq	r0, r0, r2
4002e1c0:	4002e180 	andmi	lr, r2, r0, lsl #3
4002e1c4:	00000004 	andeq	r0, r0, r4
4002e1c8:	4002e172 	andmi	lr, r2, r2, ror r1
4002e1cc:	00000008 	andeq	r0, r0, r8
4002e1d0:	4002e163 	andmi	lr, r2, r3, ror #2
4002e1d4:	00000020 	andeq	r0, r0, r0, lsr #32
4002e1d8:	6f626552 	svcvs	0x00626552
4002e1dc:	6e69746f 	cdpvs	4, 6, cr7, cr9, cr15, {3}
4002e1e0:	2e2e2067 	cdpcs	0, 2, cr2, cr14, cr7, {3}
4002e1e4:	6372002e 	cmnvs	r2, #46	; 0x2e
4002e1e8:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
4002e1ec:	78742e67 	ldmdavc	r4!, {r0, r1, r2, r5, r6, r9, sl, fp, sp}^
4002e1f0:	6e650074 	mcrvs	0, 3, r0, cr5, cr4, {3}
4002e1f4:	78742e76 	ldmdavc	r4!, {r1, r2, r4, r5, r6, r9, sl, fp, sp}^
4002e1f8:	656e0074 	strbvs	r0, [lr, #-116]!	; 0xffffff8c
4002e1fc:	726f7774 	rsbvc	r7, pc, #116, 14	; 0x1d00000
4002e200:	78742e6b 	ldmdavc	r4!, {r0, r1, r3, r5, r6, r9, sl, fp, sp}^
4002e204:	72610074 	rsbvc	r0, r1, #116	; 0x74
4002e208:	74656e74 	strbtvc	r6, [r5], #-3700	; 0xfffff18c
4002e20c:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
4002e210:	63746c00 	cmnvs	r4, #0, 24
4002e214:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
4002e218:	69646c00 	stmdbvs	r4!, {sl, fp, sp, lr}^
4002e21c:	616c7073 	smcvs	50947	; 0xc703
4002e220:	78742e79 	ldmdavc	r4!, {r0, r3, r4, r5, r6, r9, sl, fp, sp}^
4002e224:	63740074 	cmnvs	r4, #116	; 0x74
4002e228:	2e74656e 	cdpcs	5, 7, cr6, cr4, cr14, {3}
4002e22c:	00747874 	rsbseq	r7, r4, r4, ror r8
4002e230:	2e737067 	cdpcs	0, 7, cr7, cr3, cr7, {3}
4002e234:	00747874 	rsbseq	r7, r4, r4, ror r8
4002e238:	2e637465 	cdpcs	4, 6, cr7, cr3, cr5, {3}
4002e23c:	00747874 	rsbseq	r7, r4, r4, ror r8

4002e240 <RemoteConfig::s_TXT>:
4002e240:	4000809c 	mulmi	r0, ip, r0
4002e244:	00000000 	andeq	r0, r0, r0
4002e248:	4000853c 	andmi	r8, r0, ip, lsr r5
4002e24c:	00000000 	andeq	r0, r0, r0
4002e250:	4002e1e6 	andmi	lr, r2, r6, ror #3
4002e254:	0000000b 	andeq	r0, r0, fp
4002e258:	400080d4 	ldrdmi	r8, [r0], -r4
4002e25c:	00000000 	andeq	r0, r0, r0
4002e260:	40008574 	andmi	r8, r0, r4, ror r5
4002e264:	00000000 	andeq	r0, r0, r0
4002e268:	4002e1f2 	strdmi	lr, [r2], -r2
4002e26c:	00000007 	andeq	r0, r0, r7
4002e270:	40008104 	andmi	r8, r0, r4, lsl #2
4002e274:	00000000 	andeq	r0, r0, r0
4002e278:	4000859c 	mulmi	r0, ip, r5
4002e27c:	00000000 	andeq	r0, r0, r0
4002e280:	4002e1fa 	strdmi	lr, [r2], -sl
4002e284:	0000000b 	andeq	r0, r0, fp
4002e288:	4000813c 	andmi	r8, r0, ip, lsr r1
4002e28c:	00000000 	andeq	r0, r0, r0
4002e290:	400085c8 	andmi	r8, r0, r8, asr #11
4002e294:	00000000 	andeq	r0, r0, r0
4002e298:	4002e206 	andmi	lr, r2, r6, lsl #4
4002e29c:	0000000a 	andeq	r0, r0, sl
4002e2a0:	40008174 	andmi	r8, r0, r4, ror r1
4002e2a4:	00000000 	andeq	r0, r0, r0
4002e2a8:	400085f4 	strdmi	r8, [r0], -r4
4002e2ac:	00000000 	andeq	r0, r0, r0
4002e2b0:	4002e211 	andmi	lr, r2, r1, lsl r2
4002e2b4:	00000007 	andeq	r0, r0, r7
4002e2b8:	400081ac 	andmi	r8, r0, ip, lsr #3
4002e2bc:	00000000 	andeq	r0, r0, r0
4002e2c0:	40008620 	andmi	r8, r0, r0, lsr #12
4002e2c4:	00000000 	andeq	r0, r0, r0
4002e2c8:	4002e219 	andmi	lr, r2, r9, lsl r2
4002e2cc:	0000000c 	andeq	r0, r0, ip
4002e2d0:	400081e4 	andmi	r8, r0, r4, ror #3
4002e2d4:	00000000 	andeq	r0, r0, r0
4002e2d8:	4000864c 	andmi	r8, r0, ip, asr #12
4002e2dc:	00000000 	andeq	r0, r0, r0
4002e2e0:	4002e226 	andmi	lr, r2, r6, lsr #4
4002e2e4:	00000009 	andeq	r0, r0, r9
4002e2e8:	4000821c 	andmi	r8, r0, ip, lsl r2
4002e2ec:	00000000 	andeq	r0, r0, r0
4002e2f0:	40008674 	andmi	r8, r0, r4, ror r6
4002e2f4:	00000000 	andeq	r0, r0, r0
4002e2f8:	4002e230 	andmi	lr, r2, r0, lsr r2
4002e2fc:	00000007 	andeq	r0, r0, r7
4002e300:	40008254 	andmi	r8, r0, r4, asr r2
4002e304:	00000000 	andeq	r0, r0, r0
4002e308:	4000869c 	mulmi	r0, ip, r6
4002e30c:	00000000 	andeq	r0, r0, r0
4002e310:	4002e238 	andmi	lr, r2, r8, lsr r2
4002e314:	00000007 	andeq	r0, r0, r7
4002e318:	50544654 	subspl	r4, r4, r4, asr r6
4002e31c:	006e4f20 	rsbeq	r4, lr, r0, lsr #30
4002e320:	6f727245 	svcvs	0x00727245
4002e324:	54203a72 	strtpl	r3, [r0], #-2674	; 0xfffff58e
4002e328:	00505446 	subseq	r5, r0, r6, asr #8
4002e32c:	50544654 	subspl	r4, r4, r4, asr r6
4002e330:	66664f20 	strbtvs	r4, [r6], -r0, lsr #30
4002e334:	54465400 	strbpl	r5, [r6], #-1024	; 0xfffffc00
4002e338:	6e452050 	mcrvs	0, 2, r2, cr5, cr0, {2}
4002e33c:	00646564 	rsbeq	r6, r4, r4, ror #10
4002e340:	50544654 	subspl	r4, r4, r4, asr r6
4002e344:	61745320 	cmnvs	r4, r0, lsr #6
4002e348:	64657472 	strbtvs	r7, [r5], #-1138	; 0xfffffb8e
	...

4002e34d <Display::Progress()::SYMBOLS>:
4002e34d:	7c5c2d2f 	mrrcvc	13, 2, r2, ip, cr15

4002e351 <tftpfileserver::FILE_NAME>:
4002e351:	6e61726f 	cdpvs	2, 6, cr7, cr1, cr15, {3}
4002e355:	69706567 	ldmdbvs	r0!, {r0, r1, r2, r5, r6, r8, sl, sp, lr}^
4002e359:	72657a5f 	rsbvc	r7, r5, #389120	; 0x5f000
4002e35d:	49752e6f 	ldmdbmi	r5!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp}^
4002e361:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
4002e365:	 	andeq	r0, r0, r0

4002e368 <vtable for TFTPFileServer>:
	...
4002e370:	40008f24 	andmi	r8, r0, r4, lsr #30
4002e374:	40008f44 	andmi	r8, r0, r4, asr #30
4002e378:	40008f04 	andmi	r8, r0, r4, lsl #30
4002e37c:	40009068 	andmi	r9, r0, r8, rrx
4002e380:	40009028 	andmi	r9, r0, r8, lsr #32
4002e384:	40008f0c 	andmi	r8, r0, ip, lsl #30
4002e388:	4000915c 	andmi	r9, r0, ip, asr r1
4002e38c:	40008f14 	andmi	r8, r0, r4, lsl pc
4002e390:	00544547 	subseq	r4, r4, r7, asr #10
4002e394:	54534f50 	ldrbpl	r4, [r3], #-3920	; 0xfffff0b0
4002e398:	00000000 	andeq	r0, r0, r0
4002e39c:	0000002f 	andeq	r0, r0, pc, lsr #32
4002e3a0:	50545448 	subspl	r5, r4, r8, asr #8
4002e3a4:	00000000 	andeq	r0, r0, r0
4002e3a8:	00000a20 	andeq	r0, r0, r0, lsr #20
4002e3ac:	00312e31 	eorseq	r2, r1, r1, lsr lr
4002e3b0:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
4002e3b4:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	; 0xfffffe6c
4002e3b8:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
4002e3bc:	00000000 	andeq	r0, r0, r0
4002e3c0:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
4002e3c4:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	; 0xfffffe6c
4002e3c8:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
4002e3cc:	00006874 	andeq	r6, r0, r4, ror r8
4002e3d0:	0000003a 	andeq	r0, r0, sl, lsr r0
4002e3d4:	00003b20 	andeq	r3, r0, r0, lsr #22
4002e3d8:	6c707061 	ldclvs	0, cr7, [r0], #-388	; 0xfffffe7c
4002e3dc:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
4002e3e0:	2f6e6f69 	svccs	0x006e6f69
4002e3e4:	00000000 	andeq	r0, r0, r0
4002e3e8:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
4002e3ec:	00000000 	andeq	r0, r0, r0
4002e3f0:	6574636f 	ldrbvs	r6, [r4, #-879]!	; 0xfffffc91
4002e3f4:	74732d74 	ldrbtvc	r2, [r3], #-3444	; 0xfffff28c
4002e3f8:	6d616572 	cfstr64vs	mvdx6, [r1, #-456]!	; 0xfffffe38
4002e3fc:	00000000 	andeq	r0, r0, r0
4002e400:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
4002e404:	00000000 	andeq	r0, r0, r0
4002e408:	6f736a2f 	svcvs	0x00736a2f
4002e40c:	00002f6e 	andeq	r2, r0, lr, ror #30
4002e410:	726f7473 	rsbvc	r7, pc, #1929379840	; 0x73000000
4002e414:	2f656761 	svccs	0x00656761
4002e418:	00000000 	andeq	r0, r0, r0
4002e41c:	65646e69 	strbvs	r6, [r4, #-3689]!	; 0xfffff197
4002e420:	74682e78 	strbtvc	r2, [r8], #-3704	; 0xfffff188
4002e424:	00006c6d 	andeq	r6, r0, sp, ror #24
4002e428:	6374722f 	cmnvs	r4, #-268435454	; 0xf0000002
4002e42c:	00000000 	andeq	r0, r0, r0
4002e430:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
4002e434:	6d74682e 	ldclvs	8, cr6, [r4, #-184]!	; 0xffffff48
4002e438:	0000006c 	andeq	r0, r0, ip, rrx
4002e43c:	2e637472 	mcrcs	4, 3, r7, cr3, cr2, {3}
4002e440:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
4002e444:	00000000 	andeq	r0, r0, r0
4002e448:	6d69742f 	cfstrdvs	mvd7, [r9, #-188]!	; 0xffffff44
4002e44c:	00000065 	andeq	r0, r0, r5, rrx
4002e450:	6f736a2f 	svcvs	0x00736a2f
4002e454:	63612f6e 	cmnvs	r1, #440	; 0x1b8
4002e458:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
4002e45c:	00000000 	andeq	r0, r0, r0
4002e460:	6f736a2f 	svcvs	0x00736a2f
4002e464:	0000006e 	andeq	r0, r0, lr, rrx
4002e468:	6f626572 	svcvs	0x00626572
4002e46c:	0000746f 	andeq	r7, r0, pc, ror #8
4002e470:	70736964 	rsbsvc	r6, r3, r4, ror #18
4002e474:	0079616c 	rsbseq	r6, r9, ip, ror #2
4002e478:	6e656469 	cdpvs	4, 6, cr6, cr5, cr9, {3}
4002e47c:	79666974 	stmdbvc	r6!, {r2, r4, r5, r6, r8, fp, sp, lr}^
4002e480:	00000000 	andeq	r0, r0, r0
4002e484:	65746164 	ldrbvs	r6, [r4, #-356]!	; 0xfffffe9c
4002e488:	0000003d 	andeq	r0, r0, sp, lsr r0
4002e48c:	3d637472 	cfstrdcc	mvd7, [r3, #-456]!	; 0xfffffe38
4002e490:	00000000 	andeq	r0, r0, r0
4002e494:	4f44213c 	svcmi	0x0044213c
4002e498:	50595443 	subspl	r5, r9, r3, asr #8
4002e49c:	74682045 	strbtvc	r2, [r8], #-69	; 0xffffffbb
4002e4a0:	0a3e6c6d 	beq	40fc965c <__heap_start+0xac965c>
4002e4a4:	6d74683c 	ldclvs	8, cr6, [r4, #-240]!	; 0xffffff10
4002e4a8:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
4002e4ac:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
4002e4b0:	69743c3e 	ldmdbvs	r4!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}^
4002e4b4:	3e656c74 	mcrcc	12, 3, r6, cr5, cr4, {3}
4002e4b8:	6d627553 	cfstr64vs	mvdx7, [r2, #-332]!	; 0xfffffeb4
4002e4bc:	2f3c7469 	svccs	0x003c7469
4002e4c0:	6c746974 			; <UNDEFINED> instruction: 0x6c746974
4002e4c4:	2f3c3e65 	svccs	0x003c3e65
4002e4c8:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
4002e4cc:	623c0a3e 	eorsvs	r0, ip, #253952	; 0x3e000
4002e4d0:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
4002e4d4:	3e31683c 	mrccc	8, 1, r6, cr1, cr12, {1}
4002e4d8:	2f3c4b4f 	svccs	0x003c4b4f
4002e4dc:	3c3e3168 	ldfccs	f3, [lr], #-416	; 0xfffffe60
4002e4e0:	646f622f 	strbtvs	r6, [pc], #-559	; 4002e4e8 <vtable for TFTPFileServer+0x180>
4002e4e4:	3c0a3e79 	stccc	14, cr3, [sl], {121}	; 0x79
4002e4e8:	6d74682f 	ldclvs	8, cr6, [r4, #-188]!	; 0xffffff44
4002e4ec:	000a3e6c 	andeq	r3, sl, ip, ror #28
4002e4f0:	73726556 	cmnvc	r2, #360710144	; 0x15800000
4002e4f4:	206e6f69 	rsbcs	r6, lr, r9, ror #30
4002e4f8:	20746f4e 	rsbscs	r6, r4, lr, asr #30
4002e4fc:	70707553 	rsbsvc	r7, r0, r3, asr r5
4002e500:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
4002e504:	00000064 	andeq	r0, r0, r4, rrx
4002e508:	6e6b6e55 	mcrvs	14, 3, r6, cr11, cr5, {2}
4002e50c:	206e776f 	rsbcs	r7, lr, pc, ror #14
4002e510:	6f727245 	svcvs	0x00727245
4002e514:	00000072 	andeq	r0, r0, r2, ror r0
4002e518:	75716552 	ldrbvc	r6, [r1, #-1362]!	; 0xfffffaae
4002e51c:	20747365 	rsbscs	r7, r4, r5, ror #6
4002e520:	69746e45 	ldmdbvs	r4!, {r0, r2, r6, r9, sl, fp, sp, lr}^
4002e524:	54207974 	strtpl	r7, [r0], #-2420	; 0xfffff68c
4002e528:	4c206f6f 	stcmi	15, cr6, [r0], #-444	; 0xfffffe44
4002e52c:	65677261 	strbvs	r7, [r7, #-609]!	; 0xfffffd9f
4002e530:	00000000 	andeq	r0, r0, r0
4002e534:	75716552 	ldrbvc	r6, [r1, #-1362]!	; 0xfffffaae
4002e538:	2d747365 	ldclcs	3, cr7, [r4, #-404]!	; 0xfffffe6c
4002e53c:	20495255 	subcs	r5, r9, r5, asr r2
4002e540:	206f6f54 	rsbcs	r6, pc, r4, asr pc	; <UNPREDICTABLE>
4002e544:	676e6f4c 	strbvs	r6, [lr, -ip, asr #30]!
4002e548:	00000000 	andeq	r0, r0, r0
4002e54c:	6874654d 	ldmdavs	r4!, {r0, r2, r3, r6, r8, sl, sp, lr}^
4002e550:	4e20646f 	cdpmi	4, 2, cr6, cr0, cr15, {3}
4002e554:	4920746f 	stmdbmi	r0!, {r0, r1, r2, r3, r5, r6, sl, ip, sp, lr}
4002e558:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
4002e55c:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
4002e560:	00006465 	andeq	r6, r0, r5, ror #8
4002e564:	20646142 	rsbcs	r6, r4, r2, asr #2
4002e568:	75716552 	ldrbvc	r6, [r1, #-1362]!	; 0xfffffaae
4002e56c:	00747365 	rsbseq	r7, r4, r5, ror #6
4002e570:	20746f4e 	rsbscs	r6, r4, lr, asr #30
4002e574:	6e756f46 	cdpvs	15, 7, cr6, cr5, cr6, {2}
4002e578:	00000064 	andeq	r0, r0, r4, rrx
4002e57c:	65746e49 	ldrbvs	r6, [r4, #-3657]!	; 0xfffff1b7
4002e580:	6c616e72 	stclvs	14, cr6, [r1], #-456	; 0xfffffe38
4002e584:	72655320 	rsbvc	r5, r5, #32, 6	; 0x80000000
4002e588:	20726576 	rsbscs	r6, r2, r6, ror r5
4002e58c:	6f727245 	svcvs	0x00727245
4002e590:	00000072 	andeq	r0, r0, r2, ror r0
4002e594:	00004b4f 	andeq	r4, r0, pc, asr #22
4002e598:	4f44213c 	svcmi	0x0044213c
4002e59c:	50595443 	subspl	r5, r9, r3, asr #8
4002e5a0:	74682045 	strbtvc	r2, [r8], #-69	; 0xffffffbb
4002e5a4:	0a3e6c6d 	beq	40fc9760 <__heap_start+0xac9760>
4002e5a8:	6d74683c 	ldclvs	8, cr6, [r4, #-240]!	; 0xffffff10
4002e5ac:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
4002e5b0:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
4002e5b4:	69743c3e 	ldmdbvs	r4!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}^
4002e5b8:	3e656c74 	mcrcc	12, 3, r6, cr5, cr4, {3}
4002e5bc:	25207525 	strcs	r7, [r0, #-1317]!	; 0xfffffadb
4002e5c0:	742f3c73 	strtvc	r3, [pc], #-3187	; 4002e5c8 <vtable for TFTPFileServer+0x260>
4002e5c4:	656c7469 	strbvs	r7, [ip, #-1129]!	; 0xfffffb97
4002e5c8:	682f3c3e 	stmdavs	pc!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}	; <UNPREDICTABLE>
4002e5cc:	3e646165 	powccsz	f6, f4, f5
4002e5d0:	6f623c0a 	svcvs	0x00623c0a
4002e5d4:	3c3e7964 			; <UNDEFINED> instruction: 0x3c3e7964
4002e5d8:	253e3168 	ldrcs	r3, [lr, #-360]!	; 0xfffffe98
4002e5dc:	682f3c73 	stmdavs	pc!, {r0, r1, r4, r5, r6, sl, fp, ip, sp}	; <UNPREDICTABLE>
4002e5e0:	2f3c3e31 	svccs	0x003c3e31
4002e5e4:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
4002e5e8:	2f3c0a3e 	svccs	0x003c0a3e
4002e5ec:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
4002e5f0:	00000a3e 	andeq	r0, r0, lr, lsr sl
4002e5f4:	50545448 	subspl	r5, r4, r8, asr #8
4002e5f8:	312e312f 			; <UNDEFINED> instruction: 0x312e312f
4002e5fc:	20752520 	rsbscs	r2, r5, r0, lsr #10
4002e600:	0a0d7325 	beq	4038b29c <__irq_stack_top+0x6b29c>
4002e604:	76726553 			; <UNDEFINED> instruction: 0x76726553
4002e608:	203a7265 	eorscs	r7, sl, r5, ror #4
4002e60c:	0a0d7325 	beq	4038b2a8 <__irq_stack_top+0x6b2a8>
4002e610:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
4002e614:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	; 0xfffffe6c
4002e618:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
4002e61c:	7325203a 			; <UNDEFINED> instruction: 0x7325203a
4002e620:	6f430a0d 	svcvs	0x00430a0d
4002e624:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
4002e628:	654c2d74 	strbvs	r2, [ip, #-3444]	; 0xfffff28c
4002e62c:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
4002e630:	7525203a 	strvc	r2, [r5, #-58]!	; 0xffffffc6
4002e634:	6f430a0d 	svcvs	0x00430a0d
4002e638:	63656e6e 	cmnvs	r5, #1760	; 0x6e0
4002e63c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
4002e640:	6c63203a 	stclvs	0, cr2, [r3], #-232	; 0xffffff18
4002e644:	0d65736f 	stcleq	3, cr7, [r5, #-444]!	; 0xfffffe44
4002e648:	000a0d0a 	andeq	r0, sl, sl, lsl #26

4002e64c <s_contentType>:
4002e64c:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
4002e650:	6d74682f 	ldclvs	8, cr6, [r4, #-188]!	; 0xffffff44
4002e654:	0000006c 	andeq	r0, r0, ip, rrx
	...
4002e66c:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
4002e670:	7373632f 	cmnvc	r3, #-1140850688	; 0xbc000000
	...
4002e68c:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
4002e690:	76616a2f 	strbtvc	r6, [r1], -pc, lsr #20
4002e694:	72637361 	rsbvc	r7, r3, #-2080374783	; 0x84000001
4002e698:	00747069 	rsbseq	r7, r4, r9, rrx
	...
4002e6ac:	6c707061 	ldclvs	0, cr7, [r0], #-388	; 0xfffffe7c
4002e6b0:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
4002e6b4:	2f6e6f69 	svccs	0x006e6f69
4002e6b8:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
	...
4002e6cc:	6c707061 	ldclvs	0, cr7, [r0], #-388	; 0xfffffe7c
4002e6d0:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
4002e6d4:	2f6e6f69 	svccs	0x006e6f69
4002e6d8:	6574636f 	ldrbvs	r6, [r4, #-879]!	; 0xfffffc91
4002e6dc:	74732d74 	ldrbtvc	r2, [r3], #-3444	; 0xfffff28c
4002e6e0:	6d616572 	cfstr64vs	mvdx6, [r1, #-456]!	; 0xfffffe38
	...
4002e6ec:	696c227b 	stmdbvs	ip!, {r0, r1, r3, r4, r5, r6, r9, sp}^
4002e6f0:	3a227473 	bcc	408cb8c4 <__heap_start+0x3cb8c4>
4002e6f4:	7069227b 	rsbvc	r2, r9, fp, ror r2
4002e6f8:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
4002e6fc:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
4002e700:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
4002e704:	2c226425 	cfstrscs	mvf6, [r2], #-148	; 0xffffff6c
4002e708:	6d616e22 	stclvs	14, cr6, [r1, #-136]!	; 0xffffff78
4002e70c:	223a2265 	eorscs	r2, sl, #1342177286	; 0x50000006
4002e710:	2c227325 	stccs	3, cr7, [r2], #-148	; 0xffffff6c
4002e714:	646f6e22 	strbtvs	r6, [pc], #-3618	; 4002e71c <s_contentType+0xd0>
4002e718:	7b3a2265 	blvc	40eb70b4 <__heap_start+0x9b70b4>
4002e71c:	70797422 	rsbsvc	r7, r9, r2, lsr #8
4002e720:	223a2265 	eorscs	r2, sl, #1342177286	; 0x50000006
4002e724:	2c227325 	stccs	3, cr7, [r2], #-148	; 0xffffff6c
4002e728:	726f7022 	rsbvc	r7, pc, #34	; 0x22
4002e72c:	7b3a2274 	blvc	40eb7104 <__heap_start+0x9b7104>
4002e730:	70797422 	rsbsvc	r7, r9, r2, lsr #8
4002e734:	223a2265 	eorscs	r2, sl, #1342177286	; 0x50000006
4002e738:	2c227325 	stccs	3, cr7, [r2], #-148	; 0xffffff6c
4002e73c:	756f6322 	strbvc	r6, [pc, #-802]!	; 4002e422 <vtable for TFTPFileServer+0xba>
4002e740:	3a22746e 	bcc	408cb900 <__heap_start+0x3cb900>
4002e744:	7d7d6425 	cfldrdvc	mvd6, [sp, #-148]!	; 0xffffff6c
4002e748:	7b007d7d 	blvc	4004dd44 <s_TFTPBuffer+0x19c8b>
4002e74c:	72657622 	rsbvc	r7, r5, #35651584	; 0x2200000
4002e750:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
4002e754:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
4002e758:	22732a2e 	rsbscs	r2, r3, #188416	; 0x2e000
4002e75c:	6f62222c 	svcvs	0x0062222c
4002e760:	22647261 	rsbcs	r7, r4, #268435462	; 0x10000006
4002e764:	7325223a 			; <UNDEFINED> instruction: 0x7325223a
4002e768:	62222c22 	eorvs	r2, r2, #8704	; 0x2200
4002e76c:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
4002e770:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
4002e774:	65746164 	ldrbvs	r6, [r4, #-356]!	; 0xfffffe9c
4002e778:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
4002e77c:	22732a2e 	rsbscs	r2, r3, #188416	; 0x2e000
4002e780:	6974222c 	ldmdbvs	r4!, {r2, r3, r5, r9, sp}^
4002e784:	3a22656d 	bcc	408c7d40 <__heap_start+0x3c7d40>
4002e788:	2a2e2522 	bcs	40bb7c18 <__heap_start+0x6b7c18>
4002e78c:	7d7d2273 	lfmvc	f2, 2, [sp, #-460]!	; 0xfffffe34
4002e790:	75227b00 	strvc	r7, [r2, #-2816]!	; 0xfffff500
4002e794:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
4002e798:	253a2265 	ldrcs	r2, [sl, #-613]!	; 0xfffffd9b
4002e79c:	000a7d75 	andeq	r7, sl, r5, ror sp
4002e7a0:	6964227b 	stmdbvs	r4!, {r0, r1, r3, r4, r5, r6, r9, sp}^
4002e7a4:	616c7073 	smcvs	50947	; 0xc703
4002e7a8:	253a2279 	ldrcs	r2, [sl, #-633]!	; 0xfffffd87
4002e7ac:	7b007d64 	blvc	4004dd44 <s_TFTPBuffer+0x19c8b>
4002e7b0:	6c696622 	stclvs	6, cr6, [r9], #-136	; 0xffffff78
4002e7b4:	3a227365 	bcc	408cb550 <__heap_start+0x3cb550>
4002e7b8:	7261227b 	rsbvc	r2, r1, #-1342177273	; 0xb0000007
4002e7bc:	74656e74 	strbtvc	r6, [r5], #-3700	; 0xfffff18c
4002e7c0:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
4002e7c4:	41223a22 			; <UNDEFINED> instruction: 0x41223a22
4002e7c8:	4e2d7472 	mcrmi	4, 1, r7, cr13, cr2, {3}
4002e7cc:	2c227465 	cfstrscs	mvf7, [r2], #-404	; 0xfffffe6c
4002e7d0:	63746c22 	cmnvs	r4, #8704	; 0x2200
4002e7d4:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
4002e7d8:	4c223a22 			; <UNDEFINED> instruction: 0x4c223a22
4002e7dc:	53204354 			; <UNDEFINED> instruction: 0x53204354
4002e7e0:	4554504d 	ldrbmi	r5, [r4, #-77]	; 0xffffffb3
4002e7e4:	6c222c22 	stcvs	12, cr2, [r2], #-136	; 0xffffff78
4002e7e8:	70736964 	rsbsvc	r6, r3, r4, ror #18
4002e7ec:	2e79616c 	rpwcsez	f6, f1, #4.0
4002e7f0:	22747874 	rsbscs	r7, r4, #116, 16	; 0x740000
4002e7f4:	6944223a 	stmdbvs	r4, {r1, r3, r4, r5, r9, sp}^
4002e7f8:	616c7073 	smcvs	50947	; 0xc703
4002e7fc:	222c2279 	eorcs	r2, ip, #-1879048185	; 0x90000007
4002e800:	656e6374 	strbvs	r6, [lr, #-884]!	; 0xfffffc8c
4002e804:	78742e74 	ldmdavc	r4!, {r2, r4, r5, r6, r9, sl, fp, sp}^
4002e808:	223a2274 	eorscs	r2, sl, #116, 4	; 0x40000007
4002e80c:	654e4354 	strbvs	r4, [lr, #-852]	; 0xfffffcac
4002e810:	222c2274 	eorcs	r2, ip, #116, 4	; 0x40000007
4002e814:	2e737067 	cdpcs	0, 7, cr7, cr3, cr7, {3}
4002e818:	22747874 	rsbscs	r7, r4, #116, 16	; 0x740000
4002e81c:	5047223a 	subpl	r2, r7, sl, lsr r2
4002e820:	222c2253 	eorcs	r2, ip, #805306373	; 0x30000005
4002e824:	2e637465 	cdpcs	4, 6, cr7, cr3, cr5, {3}
4002e828:	22747874 	rsbscs	r7, r4, #116, 16	; 0x740000
4002e82c:	5445223a 	strbpl	r2, [r5], #-570	; 0xfffffdc6
4002e830:	61672043 	cmnvs	r7, r3, asr #32
4002e834:	61776574 	cmnvs	r7, r4, ror r5
4002e838:	222c2279 	eorcs	r2, ip, #-1879048185	; 0x90000007
4002e83c:	7774656e 	ldrbvc	r6, [r4, -lr, ror #10]!
4002e840:	2e6b726f 	cdpcs	2, 6, cr7, cr11, cr15, {3}
4002e844:	22747874 	rsbscs	r7, r4, #116, 16	; 0x740000
4002e848:	654e223a 	strbvs	r2, [lr, #-570]	; 0xfffffdc6
4002e84c:	726f7774 	rsbvc	r7, pc, #116, 14	; 0x1d00000
4002e850:	222c226b 	eorcs	r2, ip, #-1342177274	; 0xb0000006
4002e854:	2e766e65 	cdpcs	14, 7, cr6, cr6, cr5, {3}
4002e858:	22747874 	rsbscs	r7, r4, #116, 16	; 0x740000
4002e85c:	6e45223a 	mcrvs	2, 2, r2, cr5, cr10, {1}
4002e860:	6f726976 	svcvs	0x00726976
4002e864:	6e656d6e 	cdpvs	13, 6, cr6, cr5, cr14, {3}
4002e868:	222c2274 	eorcs	r2, ip, #116, 4	; 0x40000007
4002e86c:	6e6f6372 	mcrvs	3, 3, r6, cr15, cr2, {3}
4002e870:	2e676966 	vnmulcs.f16	s13, s14, s13	; <UNPREDICTABLE>
4002e874:	22747874 	rsbscs	r7, r4, #116, 16	; 0x740000
4002e878:	6552223a 	ldrbvs	r2, [r2, #-570]	; 0xfffffdc6
4002e87c:	65746f6d 	ldrbvs	r6, [r4, #-3949]!	; 0xfffff093
4002e880:	6e6f6320 	cdpvs	3, 6, cr6, cr15, cr0, {1}
4002e884:	75676966 	strbvc	r6, [r7, #-2406]!	; 0xfffff69a
4002e888:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
4002e88c:	7d226e6f 	stcvc	14, cr6, [r2, #-444]!	; 0xfffffe44
4002e890:	7472007d 	ldrbtvc	r0, [r2], #-125	; 0xffffff83
4002e894:	74682e63 	strbtvc	r2, [r8], #-3683	; 0xfffff19d
4002e898:	73006c6d 	movwvc	r6, #3181	; 0xc6d
4002e89c:	69746174 	ldmdbvs	r4!, {r2, r4, r5, r6, r8, sp, lr}^
4002e8a0:	736a2e63 	cmnvc	sl, #1584	; 0x630
4002e8a4:	79747300 	ldmdbvc	r4!, {r8, r9, ip, sp, lr}^
4002e8a8:	2e73656c 	cdpcs	5, 7, cr6, cr3, cr12, {3}
4002e8ac:	00737363 	rsbseq	r7, r3, r3, ror #6
4002e8b0:	65646e69 	strbvs	r6, [r4, #-3689]!	; 0xfffff197
4002e8b4:	736a2e78 	cmnvc	sl, #120, 28	; 0x780
4002e8b8:	74616400 	strbtvc	r6, [r1], #-1024	; 0xfffffc00
4002e8bc:	736a2e65 	cmnvc	sl, #1616	; 0x650
4002e8c0:	66656400 	strbtvs	r6, [r5], -r0, lsl #8
4002e8c4:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
4002e8c8:	00736a2e 	rsbseq	r6, r3, lr, lsr #20
4002e8cc:	2e637472 	mcrcs	4, 3, r7, cr3, cr2, {3}
4002e8d0:	7400736a 	strvc	r7, [r0], #-874	; 0xfffffc96
4002e8d4:	2e656d69 	cdpcs	13, 6, cr6, cr5, cr9, {3}
4002e8d8:	6900736a 	stmdbvs	r0, {r1, r3, r5, r6, r8, r9, ip, sp, lr}
4002e8dc:	7865646e 	stmdavc	r5!, {r1, r2, r3, r5, r6, sl, sp, lr}^
4002e8e0:	6d74682e 	ldclvs	8, cr6, [r4, #-184]!	; 0xffffff48
4002e8e4:	6974006c 	ldmdbvs	r4!, {r2, r3, r5, r6}^
4002e8e8:	682e656d 	stmdavs	lr!, {r0, r2, r3, r5, r6, r8, sl, sp, lr}
4002e8ec:	006c6d74 	rsbeq	r6, ip, r4, ror sp

4002e8f0 <default_js>:
4002e8f0:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
4002e8f4:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
4002e8f8:	73657220 	cmnvc	r5, #32, 4
4002e8fc:	73287465 			; <UNDEFINED> instruction: 0x73287465
4002e900:	20296c65 	eorcs	r6, r9, r5, ror #24
4002e904:	61760a7b 	cmnvs	r6, fp, ror sl
4002e908:	20642072 	rsbcs	r2, r4, r2, ror r0
4002e90c:	7d7b203d 	ldclvc	0, cr2, [fp, #-244]!	; 0xffffff0c
4002e910:	61760a3b 	cmnvs	r6, fp, lsr sl
4002e914:	756f2072 	strbvc	r2, [pc, #-114]!	; 4002e8aa <s_contentType+0x25e>
4002e918:	203d2074 	eorscs	r2, sp, r4, ror r0
4002e91c:	0a3b7d7b 	beq	40f0df10 <__heap_start+0xa0df10>
4002e920:	5b74756f 	blpl	41d4bee4 <__ram_end+0xd4bee4>
4002e924:	5d6c6573 	cfstr64pl	mvdx6, [ip, #-460]!	; 0xfffffe34
4002e928:	64203d20 	strtvs	r3, [r0], #-3360	; 0xfffff2e0
4002e92c:	61760a3b 	cmnvs	r6, fp, lsr sl
4002e930:	61702072 	cmnvs	r0, r2, ror r0
4002e934:	616f6c79 	smcvs	63177	; 0xf6c9
4002e938:	203d2064 	eorscs	r2, sp, r4, rrx
4002e93c:	4e4f534a 	cdpmi	3, 4, cr5, cr15, cr10, {2}
4002e940:	7274732e 	rsbsvc	r7, r4, #-1207959552	; 0xb8000000
4002e944:	69676e69 	stmdbvs	r7!, {r0, r3, r5, r6, r9, sl, fp, sp, lr}^
4002e948:	6f287966 	svcvs	0x00287966
4002e94c:	3b297475 	blcc	40a8bb28 <__heap_start+0x58bb28>
4002e950:	7465660a 	strbtvc	r6, [r5], #-1546	; 0xfffff9f6
4002e954:	27286863 	strcs	r6, [r8, -r3, ror #16]!
4002e958:	6f736a2f 	svcvs	0x00736a2f
4002e95c:	202c276e 	eorcs	r2, ip, lr, ror #14
4002e960:	656d0a7b 	strbvs	r0, [sp, #-2683]!	; 0xfffff585
4002e964:	646f6874 	strbtvs	r6, [pc], #-2164	; 4002e96c <default_js+0x7c>
4002e968:	5027203a 	eorpl	r2, r7, sl, lsr r0
4002e96c:	2754534f 	ldrbcs	r5, [r4, -pc, asr #6]
4002e970:	65680a2c 	strbvs	r0, [r8, #-2604]!	; 0xfffff5d4
4002e974:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
4002e978:	7b203a73 	blvc	4083d34c <__heap_start+0x33d34c>
4002e97c:	6f43270a 	svcvs	0x0043270a
4002e980:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
4002e984:	79542d74 	ldmdbvc	r4, {r2, r4, r5, r6, r8, sl, fp, sp}^
4002e988:	3a276570 	bcc	40a07f50 <__heap_start+0x507f50>
4002e98c:	70612720 	rsbvc	r2, r1, r0, lsr #14
4002e990:	63696c70 	cmnvs	r9, #112, 24	; 0x7000
4002e994:	6f697461 	svcvs	0x00697461
4002e998:	736a2f6e 	cmnvc	sl, #440	; 0x1b8
4002e99c:	0a276e6f 	beq	40a0a360 <__heap_start+0x50a360>
4002e9a0:	620a2c7d 	andvs	r2, sl, #32000	; 0x7d00
4002e9a4:	3a79646f 	bcc	41e87b68 <__ram_end+0xe87b68>
4002e9a8:	79617020 	stmdbvc	r1!, {r5, ip, sp, lr}^
4002e9ac:	64616f6c 	strbtvs	r6, [r1], #-3948	; 0xfffff094
4002e9b0:	20297d0a 	eorcs	r7, r9, sl, lsl #26
4002e9b4:	6568742e 	strbvs	r7, [r8, #-1070]!	; 0xfffffbd2
4002e9b8:	6572286e 	ldrbvs	r2, [r2, #-2158]!	; 0xfffff792
4002e9bc:	6e6f7073 	mcrvs	0, 3, r7, cr15, cr3, {3}
4002e9c0:	3d206573 	cfstr32cc	mvfx6, [r0, #-460]!	; 0xfffffe34
4002e9c4:	697b203e 	ldmdbvs	fp!, {r1, r2, r3, r4, r5, sp}^
4002e9c8:	72282066 	eorvc	r2, r8, #102	; 0x66
4002e9cc:	6f707365 	svcvs	0x00707365
4002e9d0:	2e65736e 	cdpcs	3, 6, cr7, cr5, cr14, {3}
4002e9d4:	20296b6f 	eorcs	r6, r9, pc, ror #22
4002e9d8:	6567207b 	strbvs	r2, [r7, #-123]!	; 0xffffff85
4002e9dc:	78745f74 	ldmdavc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
4002e9e0:	65732874 	ldrbvs	r2, [r3, #-2164]!	; 0xfffff78c
4002e9e4:	203b296c 	eorscs	r2, fp, ip, ror #18
4002e9e8:	3b297d7d 	blcc	40a8dfe4 <__heap_start+0x58dfe4>
4002e9ec:	 	stccc	13, cr7, [r0], {10}

4002e9ef <index_html>:
4002e9ef:	4f44213c 	svcmi	0x0044213c
4002e9f3:	50595443 	subspl	r5, r9, r3, asr #8
4002e9f7:	74682045 	strbtvc	r2, [r8], #-69	; 0xffffffbb
4002e9fb:	0a3e6c6d 	beq	40fc9bb7 <__heap_start+0xac9bb7>
4002e9ff:	6d74683c 	ldclvs	8, cr6, [r4, #-240]!	; 0xffffff10
4002ea03:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
4002ea07:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
4002ea0b:	6c3c0a3e 			; <UNDEFINED> instruction: 0x6c3c0a3e
4002ea0f:	206b6e69 	rsbcs	r6, fp, r9, ror #28
4002ea13:	3d6c6572 	cfstr64cc	mvdx6, [ip, #-456]!	; 0xfffffe38
4002ea17:	79747322 	ldmdbvc	r4!, {r1, r5, r8, r9, ip, sp, lr}^
4002ea1b:	6873656c 	ldmdavs	r3!, {r2, r3, r5, r6, r8, sl, sp, lr}^
4002ea1f:	22746565 	rsbscs	r6, r4, #423624704	; 0x19400000
4002ea23:	65726820 	ldrbvs	r6, [r2, #-2080]!	; 0xfffff7e0
4002ea27:	73223d66 			; <UNDEFINED> instruction: 0x73223d66
4002ea2b:	656c7974 	strbvs	r7, [ip, #-2420]!	; 0xfffff68c
4002ea2f:	73632e73 	cmnvc	r3, #1840	; 0x730
4002ea33:	2f202273 	svccs	0x00202273
4002ea37:	743c0a3e 	ldrtvc	r0, [ip], #-2622	; 0xfffff5c2
4002ea3b:	656c7469 	strbvs	r7, [ip, #-1129]!	; 0xfffffb97
4002ea3f:	742f3c3e 	strtvc	r3, [pc], #-3134	; 4002ea47 <index_html+0x58>
4002ea43:	656c7469 	strbvs	r7, [ip, #-1129]!	; 0xfffffb97
4002ea47:	2f3c0a3e 	svccs	0x003c0a3e
4002ea4b:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
4002ea4f:	623c0a3e 	eorsvs	r0, ip, #253952	; 0x3e000
4002ea53:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
4002ea57:	65683c0a 	strbvs	r3, [r8, #-3082]!	; 0xfffff3f6
4002ea5b:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
4002ea5f:	6c753c3e 	ldclvs	12, cr3, [r5], #-248	; 0xffffff08
4002ea63:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
4002ea67:	4c646922 			; <UNDEFINED> instruction: 0x4c646922
4002ea6b:	22747369 	rsbscs	r7, r4, #-1543503871	; 0xa4000001
4002ea6f:	752f3c3e 	strvc	r3, [pc, #-3134]!	; 4002de39 <LtcSourceConst::NAME+0xf9>
4002ea73:	2f3c3e6c 	svccs	0x003c3e6c
4002ea77:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
4002ea7b:	0a3e7265 	beq	40fcb417 <__heap_start+0xacb417>
4002ea7f:	3c3e703c 	ldccc	0, cr7, [lr], #-240	; 0xffffff10
4002ea83:	656c6573 	strbvs	r6, [ip, #-1395]!	; 0xfffffa8d
4002ea87:	69207463 	stmdbvs	r0!, {r0, r1, r5, r6, sl, ip, sp, lr}
4002ea8b:	69223d64 	stmdbvs	r2!, {r2, r5, r6, r8, sl, fp, ip, sp}
4002ea8f:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
4002ea93:	6f746365 	svcvs	0x00746365
4002ea97:	20227972 	eorcs	r7, r2, r2, ror r9
4002ea9b:	68636e6f 	stmdavs	r3!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
4002ea9f:	65676e61 	strbvs	r6, [r7, #-3681]!	; 0xfffff19f
4002eaa3:	6567223d 	strbvs	r2, [r7, #-573]!	; 0xfffffdc3
4002eaa7:	78745f74 	ldmdavc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
4002eaab:	68742874 	ldmdavs	r4!, {r2, r4, r5, r6, fp, sp}^
4002eaaf:	762e7369 	strtvc	r7, [lr], -r9, ror #6
4002eab3:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
4002eab7:	3c3e2229 	lfmcc	f2, 4, [lr], #-164	; 0xffffff5c
4002eabb:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
4002eabf:	3e746365 	cdpcc	3, 7, cr6, cr4, cr5, {3}
4002eac3:	3e702f3c 	mrccc	15, 3, r2, cr0, cr12, {1}
4002eac7:	61743c0a 	cmnvs	r4, sl, lsl #24
4002eacb:	20656c62 	rsbcs	r6, r5, r2, ror #24
4002eacf:	223d6469 	eorscs	r6, sp, #1761607680	; 0x69000000
4002ead3:	78546469 	ldmdavc	r4, {r0, r3, r5, r6, sl, sp, lr}^
4002ead7:	62202274 	eorvs	r2, r0, #116, 4	; 0x40000007
4002eadb:	6564726f 	strbvs	r7, [r4, #-623]!	; 0xfffffd91
4002eadf:	31273d72 			; <UNDEFINED> instruction: 0x31273d72
4002eae3:	2f3c3e27 	svccs	0x003c3e27
4002eae7:	6c626174 	stfvse	f6, [r2], #-464	; 0xfffffe30
4002eaeb:	3c0a3e65 	stccc	14, cr3, [sl], {101}	; 0x65
4002eaef:	746f6f66 	strbtvc	r6, [pc], #-3942	; 4002eaf7 <index_html+0x108>
4002eaf3:	3c3e7265 	lfmcc	f7, 4, [lr], #-404	; 0xfffffe6c
4002eaf7:	69206c75 	stmdbvs	r0!, {r0, r2, r4, r5, r6, sl, fp, sp, lr}
4002eafb:	69223d64 	stmdbvs	r2!, {r2, r5, r6, r8, sl, fp, ip, sp}
4002eaff:	72655664 	rsbvc	r5, r5, #100, 12	; 0x6400000
4002eb03:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
4002eb07:	2f3c3e22 	svccs	0x003c3e22
4002eb0b:	3c3e6c75 	ldccc	12, cr6, [lr], #-468	; 0xfffffe2c
4002eb0f:	6f6f662f 	svcvs	0x006f662f
4002eb13:	3e726574 	mrccc	5, 3, r6, cr2, cr4, {3}
4002eb17:	69643c0a 	stmdbvs	r4!, {r1, r3, sl, fp, ip, sp}^
4002eb1b:	3c0a3e76 	stccc	14, cr3, [sl], {118}	; 0x76
4002eb1f:	74747562 	ldrbtvc	r7, [r4], #-1378	; 0xfffffa9e
4002eb23:	69206e6f 	stmdbvs	r0!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
4002eb27:	6c223d64 	stcvs	13, cr3, [r2], #-400	; 0xfffffe70
4002eb2b:	7461636f 	strbtvc	r6, [r1], #-879	; 0xfffffc91
4002eb2f:	74754265 	ldrbtvc	r4, [r5], #-613	; 0xfffffd9b
4002eb33:	226e6f74 	rsbcs	r6, lr, #116, 30	; 0x1d0
4002eb37:	616c6320 	cmnvs	ip, r0, lsr #6
4002eb3b:	223d7373 	eorscs	r7, sp, #-872415231	; 0xcc000001
4002eb3f:	63616e69 	cmnvs	r1, #1680	; 0x690
4002eb43:	65766974 	ldrbvs	r6, [r6, #-2420]!	; 0xfffff68c
4002eb47:	6e6f2022 	cdpvs	0, 6, cr2, cr15, cr2, {1}
4002eb4b:	63696c63 	cmnvs	r9, #25344	; 0x6300
4002eb4f:	6c223d6b 	stcvs	13, cr3, [r2], #-428	; 0xfffffe54
4002eb53:	7461636f 	strbtvc	r6, [r1], #-879	; 0xfffffc91
4002eb57:	22292865 	eorcs	r2, r9, #6619136	; 0x650000
4002eb5b:	636f4c3e 	cmnvs	pc, #15872	; 0x3e00
4002eb5f:	20657461 	rsbcs	r7, r5, r1, ror #8
4002eb63:	3c66664f 	stclcc	6, cr6, [r6], #-316	; 0xfffffec4
4002eb67:	7475622f 	ldrbtvc	r6, [r5], #-559	; 0xfffffdd1
4002eb6b:	3e6e6f74 	mcrcc	15, 3, r6, cr14, cr4, {3}
4002eb6f:	75623c0a 	strbvc	r3, [r2, #-3082]!	; 0xfffff3f6
4002eb73:	6e6f7474 	mcrvs	4, 3, r7, cr15, cr4, {3}
4002eb77:	636e6f20 	cmnvs	lr, #32, 30	; 0x80
4002eb7b:	6b63696c 	blvs	41909133 <__ram_end+0x909133>
4002eb7f:	6572223d 	ldrbvs	r2, [r2, #-573]!	; 0xfffffdc3
4002eb83:	746f6f62 	strbtvc	r6, [pc], #-3938	; 4002eb8b <index_html+0x19c>
4002eb87:	3e222928 	vmulcc.f16	s4, s4, s17	; <UNPREDICTABLE>
4002eb8b:	6f626552 	svcvs	0x00626552
4002eb8f:	2f3c746f 	svccs	0x003c746f
4002eb93:	74747562 	ldrbtvc	r7, [r4], #-1378	; 0xfffffa9e
4002eb97:	0a3e6e6f 	beq	40fca55b <__heap_start+0xaca55b>
4002eb9b:	69642f3c 	stmdbvs	r4!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
4002eb9f:	3c0a3e76 	stccc	14, cr3, [sl], {118}	; 0x76
4002eba3:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
4002eba7:	73207470 			; <UNDEFINED> instruction: 0x73207470
4002ebab:	223d6372 	eorscs	r6, sp, #-939524095	; 0xc8000001
4002ebaf:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
4002ebb3:	6a2e6369 	bvs	40bc795f <__heap_start+0x6c795f>
4002ebb7:	74202273 	strtvc	r2, [r0], #-627	; 0xfffffd8d
4002ebbb:	3d657079 	stclcc	0, cr7, [r5, #-484]!	; 0xfffffe1c
4002ebbf:	78657422 	stmdavc	r5!, {r1, r5, sl, ip, sp, lr}^
4002ebc3:	616a2f74 	smcvs	41716	; 0xa2f4
4002ebc7:	63736176 	cmnvs	r3, #-2147483619	; 0x8000001d
4002ebcb:	74706972 	ldrbtvc	r6, [r0], #-2418	; 0xfffff68e
4002ebcf:	2f3c3e22 	svccs	0x003c3e22
4002ebd3:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
4002ebd7:	0a3e7470 	beq	40fcbd9f <__heap_start+0xacbd9f>
4002ebdb:	7263733c 	rsbvc	r7, r3, #60, 6	; 0xf0000000
4002ebdf:	20747069 	rsbscs	r7, r4, r9, rrx
4002ebe3:	3d637273 	sfmcc	f7, 2, [r3, #-460]!	; 0xfffffe34
4002ebe7:	646e6922 	strbtvs	r6, [lr], #-2338	; 0xfffff6de
4002ebeb:	6a2e7865 	bvs	40bccd87 <__heap_start+0x6ccd87>
4002ebef:	74202273 	strtvc	r2, [r0], #-627	; 0xfffffd8d
4002ebf3:	3d657079 	stclcc	0, cr7, [r5, #-484]!	; 0xfffffe1c
4002ebf7:	78657422 	stmdavc	r5!, {r1, r5, sl, ip, sp, lr}^
4002ebfb:	616a2f74 	smcvs	41716	; 0xa2f4
4002ebff:	63736176 	cmnvs	r3, #-2147483619	; 0x8000001d
4002ec03:	74706972 	ldrbtvc	r6, [r0], #-2418	; 0xfffff68e
4002ec07:	2f3c3e22 	svccs	0x003c3e22
4002ec0b:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
4002ec0f:	0a3e7470 	beq	40fcbdd7 <__heap_start+0xacbdd7>
4002ec13:	7263733c 	rsbvc	r7, r3, #60, 6	; 0xf0000000
4002ec17:	20747069 	rsbscs	r7, r4, r9, rrx
4002ec1b:	3d637273 	sfmcc	f7, 2, [r3, #-460]!	; 0xfffffe34
4002ec1f:	66656422 	strbtvs	r6, [r5], -r2, lsr #8
4002ec23:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
4002ec27:	22736a2e 	rsbscs	r6, r3, #188416	; 0x2e000
4002ec2b:	70797420 	rsbsvc	r7, r9, r0, lsr #8
4002ec2f:	74223d65 	strtvc	r3, [r2], #-3429	; 0xfffff29b
4002ec33:	2f747865 	svccs	0x00747865
4002ec37:	6176616a 	cmnvs	r6, sl, ror #2
4002ec3b:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
4002ec3f:	3e227470 	mcrcc	4, 1, r7, cr2, cr0, {3}
4002ec43:	63732f3c 	cmnvs	r3, #60, 30	; 0xf0
4002ec47:	74706972 	ldrbtvc	r6, [r0], #-2418	; 0xfffff68e
4002ec4b:	733c0a3e 	teqvc	ip, #253952	; 0x3e000
4002ec4f:	70697263 	rsbvc	r7, r9, r3, ror #4
4002ec53:	696c3e74 	stmdbvs	ip!, {r2, r4, r5, r6, r9, sl, fp, ip, sp}^
4002ec57:	29287473 	stmdbcs	r8!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}
4002ec5b:	7265763b 	rsbvc	r7, r5, #61865984	; 0x3b00000
4002ec5f:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
4002ec63:	643b2928 	ldrtvs	r2, [fp], #-2344	; 0xfffff6d8
4002ec67:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
4002ec6b:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
4002ec6f:	3c3b2928 			; <UNDEFINED> instruction: 0x3c3b2928
4002ec73:	7263732f 	rsbvc	r7, r3, #-1140850688	; 0xbc000000
4002ec77:	3e747069 	cdpcc	0, 7, cr7, cr4, cr9, {3}
4002ec7b:	622f3c0a 	eorvs	r3, pc, #2560	; 0xa00
4002ec7f:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
4002ec83:	682f3c0a 	stmdavs	pc!, {r1, r3, sl, fp, ip, sp}	; <UNPREDICTABLE>
4002ec87:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
4002ec8b:	 	svcvs	0x0062000a

4002ec8d <styles_css>:
4002ec8d:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
4002ec91:	620a7b20 	andvs	r7, sl, #32, 22	; 0x8000
4002ec95:	676b6361 	strbvs	r6, [fp, -r1, ror #6]!
4002ec99:	6e756f72 	mrcvs	15, 3, r6, cr5, cr2, {3}
4002ec9d:	6f632d64 	svcvs	0x00632d64
4002eca1:	3a726f6c 	bcc	41ccaa59 <__ram_end+0xccaa59>
4002eca5:	62677220 	rsbvs	r7, r7, #32, 4
4002eca9:	2c303228 	lfmcs	f3, 4, [r0], #-160	; 0xffffff60
4002ecad:	322c3032 	eorcc	r3, ip, #50	; 0x32
4002ecb1:	0a3b2930 	beq	40ef9179 <__heap_start+0x9f9179>
4002ecb5:	6f6c6f63 	svcvs	0x006c6f63
4002ecb9:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
4002ecbd:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
4002ecc1:	202c3535 	eorcs	r3, ip, r5, lsr r5
4002ecc5:	2c353532 	cfldr32cs	mvfx3, [r5], #-200	; 0xffffff38
4002ecc9:	35353220 	ldrcc	r3, [r5, #-544]!	; 0xfffffde0
4002eccd:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
4002ecd1:	206c750a 	rsbcs	r7, ip, sl, lsl #10
4002ecd5:	69640a7b 	stmdbvs	r4!, {r0, r1, r3, r4, r5, r6, r9, fp}^
4002ecd9:	616c7073 	smcvs	50947	; 0xc703
4002ecdd:	66203a79 			; <UNDEFINED> instruction: 0x66203a79
4002ece1:	3b78656c 	blcc	41e48299 <__ram_end+0xe48299>
4002ece5:	6c0a7d0a 	stcvs	13, cr7, [sl], {10}
4002ece9:	0a7b2069 	beq	41ef6e95 <__ram_end+0xef6e95>
4002eced:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
4002ecf1:	7974732d 	ldmdbvc	r4!, {r0, r2, r3, r5, r8, r9, ip, sp, lr}^
4002ecf5:	203a656c 	eorscs	r6, sl, ip, ror #10
4002ecf9:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
4002ecfd:	616d0a3b 	cmnvs	sp, fp, lsr sl
4002ed01:	6e696772 	mcrvs	7, 3, r6, cr9, cr2, {3}
4002ed05:	7031203a 	eorsvc	r2, r1, sl, lsr r0
4002ed09:	70352078 	eorsvc	r2, r5, r8, ror r0
4002ed0d:	7d0a3b78 	vstrvc	d3, [sl, #-480]	; 0xfffffe20
4002ed11:	6165680a 	cmnvs	r5, sl, lsl #16
4002ed15:	20726564 	rsbscs	r6, r2, r4, ror #10
4002ed19:	69640a7b 	stmdbvs	r4!, {r0, r1, r3, r4, r5, r6, r9, fp}^
4002ed1d:	616c7073 	smcvs	50947	; 0xc703
4002ed21:	66203a79 			; <UNDEFINED> instruction: 0x66203a79
4002ed25:	3b78656c 	blcc	41e482dd <__ram_end+0xe482dd>
4002ed29:	726f620a 	rsbvc	r6, pc, #-1610612736	; 0xa0000000
4002ed2d:	2d726564 	cfldr64cs	mvdx6, [r2, #-400]!	; 0xfffffe70
4002ed31:	69646172 	stmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
4002ed35:	203a7375 	eorscs	r7, sl, r5, ror r3
4002ed39:	3b787034 	blcc	41e4ae11 <__ram_end+0xe4ae11>
4002ed3d:	726f620a 	rsbvc	r6, pc, #-1610612736	; 0xa0000000
4002ed41:	3a726564 	bcc	41cc82d9 <__ram_end+0xcc82d9>
4002ed45:	6c6f7320 	stclvs	3, cr7, [pc], #-128	; 4002eccc <styles_css+0x3f>
4002ed49:	67206469 	strvs	r6, [r0, -r9, ror #8]!
4002ed4d:	20796572 	rsbscs	r6, r9, r2, ror r5
4002ed51:	3b787031 	blcc	41e4ae1d <__ram_end+0xe4ae1d>
4002ed55:	660a7d0a 	strvs	r7, [sl], -sl, lsl #26
4002ed59:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
4002ed5d:	0a7b2072 	beq	41ef6f2d <__ram_end+0xef6f2d>
4002ed61:	70736964 	rsbsvc	r6, r3, r4, ror #18
4002ed65:	3a79616c 	bcc	41e8731d <__ram_end+0xe8731d>
4002ed69:	656c6620 	strbvs	r6, [ip, #-1568]!	; 0xfffff9e0
4002ed6d:	6a0a3b78 	bvs	402bdb55 <__bss_end+0x2519cd>
4002ed71:	69747375 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r8, r9, ip, sp, lr}^
4002ed75:	632d7966 			; <UNDEFINED> instruction: 0x632d7966
4002ed79:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
4002ed7d:	203a746e 	eorscs	r7, sl, lr, ror #8
4002ed81:	746e6563 	strbtvc	r6, [lr], #-1379	; 0xfffffa9d
4002ed85:	0a3b7265 	beq	40f0b721 <__heap_start+0xa0b721>
4002ed89:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
4002ed8d:	722d7265 	eorvc	r7, sp, #1342177286	; 0x50000006
4002ed91:	75696461 	strbvc	r6, [r9, #-1121]!	; 0xfffffb9f
4002ed95:	34203a73 	strtcc	r3, [r0], #-2675	; 0xfffff58d
4002ed99:	0a3b7870 	beq	40f0cf61 <__heap_start+0xa0cf61>
4002ed9d:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
4002eda1:	203a7265 	eorscs	r7, sl, r5, ror #4
4002eda5:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
4002eda9:	72672064 	rsbvc	r2, r7, #100	; 0x64
4002edad:	31207965 			; <UNDEFINED> instruction: 0x31207965
4002edb1:	0a3b7870 	beq	40f0cf79 <__heap_start+0xa0cf79>
4002edb5:	75620a7d 	strbvc	r0, [r2, #-2685]!	; 0xfffff583
4002edb9:	6e6f7474 	mcrvs	4, 3, r7, cr15, cr4, {3}
4002edbd:	630a7b20 	movwvs	r7, #43808	; 0xab20
4002edc1:	6f737275 	svcvs	0x00737275
4002edc5:	70203a72 	eorvc	r3, r0, r2, ror sl
4002edc9:	746e696f 	strbtvc	r6, [lr], #-2415	; 0xfffff691
4002edcd:	0a3b7265 	beq	40f0b769 <__heap_start+0xa0b769>
4002edd1:	75620a7d 	strbvc	r0, [r2, #-2685]!	; 0xfffff583
4002edd5:	6e6f7474 	mcrvs	4, 3, r7, cr15, cr4, {3}
4002edd9:	7463613a 	strbtvc	r6, [r3], #-314	; 0xfffffec6
4002eddd:	20657669 	rsbcs	r7, r5, r9, ror #12
4002ede1:	61620a7b 	smcvs	8363	; 0x20ab
4002ede5:	72676b63 	rsbvc	r6, r7, #101376	; 0x18c00
4002ede9:	646e756f 	strbtvs	r7, [lr], #-1391	; 0xfffffa91
4002eded:	6c6f632d 	stclvs	3, cr6, [pc], #-180	; 4002ed40 <styles_css+0xb3>
4002edf1:	203a726f 	eorscs	r7, sl, pc, ror #4
4002edf5:	30303023 	eorscc	r3, r0, r3, lsr #32
4002edf9:	6f630a3b 	svcvs	0x00630a3b
4002edfd:	3a726f6c 	bcc	41ccabb5 <__ram_end+0xccabb5>
4002ee01:	66662320 	strbtvs	r2, [r6], -r0, lsr #6
4002ee05:	7d0a3b66 	vstrvc	d3, [sl, #-408]	; 0xfffffe68
4002ee09:	74622e0a 	strbtvc	r2, [r2], #-3594	; 0xfffff1f6
4002ee0d:	0a7b206e 	beq	41ef6fcd <__ram_end+0xef6fcd>
4002ee11:	6772616d 	ldrbvs	r6, [r2, -sp, ror #2]!
4002ee15:	6c2d6e69 	stcvs	14, cr6, [sp], #-420	; 0xfffffe5c
4002ee19:	3a746665 	bcc	41d487b5 <__ram_end+0xd487b5>
4002ee1d:	70303520 	eorsvc	r3, r0, r0, lsr #10
4002ee21:	7d0a3b78 	vstrvc	d3, [sl, #-480]	; 0xfffffe20
4002ee25:	 	andls	r0, r0, #10

4002ee28 <HttpContent>:
4002ee28:	4002e892 	mulmi	r2, r2, r8
4002ee2c:	4002fadd 	ldrdmi	pc, [r2], -sp
4002ee30:	000003f5 	strdeq	r0, [r0], -r5
4002ee34:	00000000 	andeq	r0, r0, r0
4002ee38:	4002e89b 	mulmi	r2, fp, r8
4002ee3c:	4002fed3 	ldrdmi	pc, [r2], -r3
4002ee40:	000004c3 	andeq	r0, r0, r3, asr #9
4002ee44:	00000002 	andeq	r0, r0, r2
4002ee48:	4002e8a5 	andmi	lr, r2, r5, lsr #17
4002ee4c:	4002ec8d 	andmi	lr, r2, sp, lsl #25
4002ee50:	00000199 	muleq	r0, r9, r1
4002ee54:	00000001 	andeq	r0, r0, r1
4002ee58:	4002e8b0 			; <UNDEFINED> instruction: 0x4002e8b0
4002ee5c:	4002f668 	andmi	pc, r2, r8, ror #12
4002ee60:	00000474 	andeq	r0, r0, r4, ror r4
4002ee64:	00000002 	andeq	r0, r0, r2
4002ee68:	4002e8b9 			; <UNDEFINED> instruction: 0x4002e8b9
4002ee6c:	4002f214 	andmi	pc, r2, r4, lsl r2	; <UNPREDICTABLE>
4002ee70:	000002cc 	andeq	r0, r0, ip, asr #5
4002ee74:	00000002 	andeq	r0, r0, r2
4002ee78:	4002e8c1 	andmi	lr, r2, r1, asr #17
4002ee7c:	4002e8f0 	strdmi	lr, [r2], -r0
4002ee80:	000000fe 	strdeq	r0, [r0], -lr
4002ee84:	00000002 	andeq	r0, r0, r2
4002ee88:	4002e8cc 	andmi	lr, r2, ip, asr #17
4002ee8c:	4002eec8 	andmi	lr, r2, r8, asr #29
4002ee90:	0000034b 	andeq	r0, r0, fp, asr #6
4002ee94:	00000002 	andeq	r0, r0, r2
4002ee98:	4002e8d3 	ldrdmi	lr, [r2], -r3
4002ee9c:	4002f4e1 	andmi	pc, r2, r1, ror #9
4002eea0:	00000186 	andeq	r0, r0, r6, lsl #3
4002eea4:	00000002 	andeq	r0, r0, r2
4002eea8:	4002e8db 	ldrdmi	lr, [r2], -fp
4002eeac:	4002e9ef 	andmi	lr, r2, pc, ror #19
4002eeb0:	0000029d 	muleq	r0, sp, r2
4002eeb4:	00000000 	andeq	r0, r0, r0
4002eeb8:	4002e8e6 	andmi	lr, r2, r6, ror #17
4002eebc:	40030397 	mulmi	r3, r7, r3
4002eec0:	00000257 	andeq	r0, r0, r7, asr r2
4002eec4:	00000000 	andeq	r0, r0, r0

4002eec8 <rtc_js>:
4002eec8:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
4002eecc:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
4002eed0:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
4002eed4:	72206e6f 	eorvc	r6, r0, #1776	; 0x6f0
4002eed8:	65726665 	ldrbvs	r6, [r2, #-1637]!	; 0xfffff99b
4002eedc:	29286873 	stmdbcs	r8!, {r0, r1, r4, r5, r6, fp, sp, lr}
4002eee0:	6c0a7b20 			; <UNDEFINED> instruction: 0x6c0a7b20
4002eee4:	64207465 	strtvs	r7, [r0], #-1125	; 0xfffffb9b
4002eee8:	77613d31 			; <UNDEFINED> instruction: 0x77613d31
4002eeec:	20746961 	rsbscs	r6, r4, r1, ror #18
4002eef0:	4a746567 	bmi	41d48494 <__ram_end+0xd48494>
4002eef4:	284e4f53 	stmdacs	lr, {r0, r1, r4, r6, r8, r9, sl, fp, lr}^
4002eef8:	6d697427 	cfstrdvs	mvd7, [r9, #-156]!	; 0xffffff64
4002eefc:	74616465 	strbtvc	r6, [r1], #-1125	; 0xfffffb9b
4002ef00:	0a292765 	beq	40a78c9c <__heap_start+0x578c9c>
4002ef04:	736e6f63 	cmnvc	lr, #396	; 0x18c
4002ef08:	6f6e2074 	svcvs	0x006e2074
4002ef0c:	3d206564 	cfstr32cc	mvfx6, [r0, #-400]!	; 0xfffffe70
4002ef10:	726f6620 	rsbvc	r6, pc, #32, 12	; 0x2000000
4002ef14:	4474616d 	ldrbtmi	r6, [r4], #-365	; 0xfffffe93
4002ef18:	54657461 	strbtpl	r7, [r5], #-1121	; 0xfffffb9f
4002ef1c:	28656d69 	stmdacs	r5!, {r0, r3, r5, r6, r8, sl, fp, sp, lr}^
4002ef20:	2077656e 	rsbscs	r6, r7, lr, ror #10
4002ef24:	65746144 	ldrbvs	r6, [r4, #-324]!	; 0xfffffebc
4002ef28:	2e316428 	cdpcs	4, 3, cr6, cr1, cr8, {1}
4002ef2c:	65746164 	ldrbvs	r6, [r4, #-356]!	; 0xfffffe9c
4002ef30:	640a2929 	strvs	r2, [sl], #-2345	; 0xfffff6d7
4002ef34:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
4002ef38:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
4002ef3c:	45746567 	ldrbmi	r6, [r4, #-1383]!	; 0xfffffa99
4002ef40:	656d656c 	strbvs	r6, [sp, #-1388]!	; 0xfffffa94
4002ef44:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
4002ef48:	27286449 	strcs	r6, [r8, -r9, asr #8]!
4002ef4c:	65646f6e 	strbvs	r6, [r4, #-3950]!	; 0xfffff092
4002ef50:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
4002ef54:	742e2927 	strtvc	r2, [lr], #-2343	; 0xfffff6d9
4002ef58:	43747865 	cmnmi	r4, #6619136	; 0x650000
4002ef5c:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
4002ef60:	3d20746e 	cfstrscc	mvf7, [r0, #-440]!	; 0xfffffe48
4002ef64:	6f4e6020 	svcvs	0x004e6020
4002ef68:	54206564 	strtpl	r6, [r0], #-1380	; 0xfffffa9c
4002ef6c:	3a656d69 	bcc	4198a518 <__ram_end+0x98a518>
4002ef70:	6e7b2420 	cdpvs	4, 7, cr2, cr11, cr0, {1}
4002ef74:	7d65646f 	cfstrdvc	mvd6, [r5, #-444]!	; 0xfffffe44
4002ef78:	656c0a60 	strbvs	r0, [ip, #-2656]!	; 0xfffff5a0
4002ef7c:	32642074 	rsbcc	r2, r4, #116	; 0x74
4002ef80:	6177613d 	cmnvs	r7, sp, lsr r1
4002ef84:	67207469 	strvs	r7, [r0, -r9, ror #8]!
4002ef88:	534a7465 	movtpl	r7, #42085	; 0xa465
4002ef8c:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
4002ef90:	61637472 	smcvs	14146	; 0x3742
4002ef94:	6d72616c 	ldfvse	f6, [r2, #-432]!	; 0xfffffe50
4002ef98:	630a2927 	movwvs	r2, #43303	; 0xa927
4002ef9c:	74736e6f 	ldrbtvc	r6, [r3], #-3695	; 0xfffff191
4002efa0:	63747220 	cmnvs	r4, #32, 4
4002efa4:	66203d20 	strtvs	r3, [r0], -r0, lsr #26
4002efa8:	616d726f 	cmnvs	sp, pc, ror #4
4002efac:	74614474 	strbtvc	r4, [r1], #-1140	; 0xfffffb8c
4002efb0:	6d695465 	cfstrdvs	mvd5, [r9, #-404]!	; 0xfffffe6c
4002efb4:	656e2865 	strbvs	r2, [lr, #-2149]!	; 0xfffff79b
4002efb8:	61442077 	hvcvs	16903	; 0x4207
4002efbc:	64286574 	strtvs	r6, [r8], #-1396	; 0xfffffa8c
4002efc0:	74722e32 	ldrbtvc	r2, [r2], #-3634	; 0xfffff1ce
4002efc4:	0a292963 	beq	40a79558 <__heap_start+0x579558>
4002efc8:	75636f64 	strbvc	r6, [r3, #-3940]!	; 0xfffff09c
4002efcc:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
4002efd0:	7465672e 	strbtvc	r6, [r5], #-1838	; 0xfffff8d2
4002efd4:	6d656c45 	stclvs	12, cr6, [r5, #-276]!	; 0xfffffeec
4002efd8:	42746e65 	rsbsmi	r6, r4, #1616	; 0x650
4002efdc:	28644979 	stmdacs	r4!, {r0, r3, r4, r5, r6, r8, fp, lr}^
4002efe0:	63747227 	cmnvs	r4, #1879048194	; 0x70000002
4002efe4:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
4002efe8:	742e2927 	strtvc	r2, [lr], #-2343	; 0xfffff6d9
4002efec:	43747865 	cmnmi	r4, #6619136	; 0x650000
4002eff0:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
4002eff4:	3d20746e 	cfstrscc	mvf7, [r0, #-440]!	; 0xfffffe48
4002eff8:	54526020 	ldrbpl	r6, [r2], #-32	; 0xffffffe0
4002effc:	69542043 	ldmdbvs	r4, {r0, r1, r6, sp}^
4002f000:	203a656d 	eorscs	r6, sl, sp, ror #10
4002f004:	74727b24 	ldrbtvc	r7, [r2], #-2852	; 0xfffff4dc
4002f008:	0a607d63 	beq	4184e59c <__ram_end+0x84e59c>
4002f00c:	75636f64 	strbvc	r6, [r3, #-3940]!	; 0xfffff09c
4002f010:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
4002f014:	7465672e 	strbtvc	r6, [r5], #-1838	; 0xfffff8d2
4002f018:	6d656c45 	stclvs	12, cr6, [r5, #-276]!	; 0xfffffeec
4002f01c:	42746e65 	rsbsmi	r6, r4, #1616	; 0x650
4002f020:	28644979 	stmdacs	r4!, {r0, r3, r4, r5, r6, r8, fp, lr}^
4002f024:	616c6127 	cmnvs	ip, r7, lsr #2
4002f028:	6e496d72 	mcrvs	13, 2, r6, cr9, cr2, {3}
4002f02c:	27747570 			; <UNDEFINED> instruction: 0x27747570
4002f030:	61762e29 	cmnvs	r6, r9, lsr #28
4002f034:	2065756c 	rsbcs	r7, r5, ip, ror #10
4002f038:	6f66203d 	svcvs	0x0066203d
4002f03c:	74616d72 	strbtvc	r6, [r1], #-3442	; 0xfffff28e
4002f040:	65746144 	ldrbvs	r6, [r4, #-324]!	; 0xfffffebc
4002f044:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
4002f048:	77656e28 	strbvc	r6, [r5, -r8, lsr #28]!
4002f04c:	74614420 	strbtvc	r4, [r1], #-1056	; 0xfffffbe0
4002f050:	32642865 	rsbcc	r2, r4, #6619136	; 0x650000
4002f054:	616c612e 	cmnvs	ip, lr, lsr #2
4002f058:	29296d72 	stmdbcs	r9!, {r1, r4, r5, r6, r8, sl, fp, sp, lr}
4002f05c:	636f640a 	cmnvs	pc, #167772160	; 0xa000000
4002f060:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
4002f064:	65672e74 	strbvs	r2, [r7, #-3700]!	; 0xfffff18c
4002f068:	656c4574 	strbvs	r4, [ip, #-1396]!	; 0xfffffa8c
4002f06c:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
4002f070:	64497942 	strbvs	r7, [r9], #-2370	; 0xfffff6be
4002f074:	68632728 	stmdavs	r3!, {r3, r5, r8, r9, sl, sp}^
4002f078:	786f626b 	stmdavc	pc!, {r0, r1, r3, r5, r6, r9, sp, lr}^	; <UNPREDICTABLE>
4002f07c:	632e2927 			; <UNDEFINED> instruction: 0x632e2927
4002f080:	6b636568 	blvs	41908628 <__ram_end+0x908628>
4002f084:	3d206465 	cfstrscc	mvf6, [r0, #-404]!	; 0xfffffe6c
4002f088:	32642820 	rsbcc	r2, r4, #32, 16	; 0x200000
4002f08c:	616e652e 	cmnvs	lr, lr, lsr #10
4002f090:	64656c62 	strbtvs	r6, [r5], #-3170	; 0xfffff39e
4002f094:	3d3d3d20 	ldccc	13, cr3, [sp, #-128]!	; 0xffffff80
4002f098:	22312220 	eorscs	r2, r1, #32, 4
4002f09c:	0a7d0a29 	beq	41f71948 <__ram_end+0xf71948>
4002f0a0:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
4002f0a4:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
4002f0a8:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
4002f0ac:	68206e6f 	stmdavs	r0!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
4002f0b0:	536f5463 	cmnpl	pc, #1660944384	; 0x63000000
4002f0b4:	29287379 	stmdbcs	r8!, {r0, r3, r4, r5, r6, r8, r9, ip, sp, lr}
4002f0b8:	610a7b20 	tstvs	sl, r0, lsr #22
4002f0bc:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
4002f0c0:	736f7020 	cmnvc	pc, #32
4002f0c4:	207b2874 	rsbscs	r2, fp, r4, ror r8
4002f0c8:	3a637472 	bcc	4190c298 <__ram_end+0x90c298>
4002f0cc:	2c222220 	sfmcs	f2, 4, [r2], #-128	; 0xffffff80
4002f0d0:	74636120 	strbtvc	r6, [r3], #-288	; 0xfffffee0
4002f0d4:	3a6e6f69 	bcc	41bcae80 <__ram_end+0xbcae80>
4002f0d8:	63682220 	cmnvs	r8, #32, 4
4002f0dc:	79736f74 	ldmdbvc	r3!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
4002f0e0:	7d202273 	sfmvc	f2, 4, [r0, #-460]!	; 0xfffffe34
4002f0e4:	720a3b29 	andvc	r3, sl, #41984	; 0xa400
4002f0e8:	65726665 	ldrbvs	r6, [r2, #-1637]!	; 0xfffff99b
4002f0ec:	29286873 	stmdbcs	r8!, {r0, r1, r4, r5, r6, fp, sp, lr}
4002f0f0:	0a7d0a3b 	beq	41f719e4 <__ram_end+0xf719e4>
4002f0f4:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
4002f0f8:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
4002f0fc:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
4002f100:	73206e6f 			; <UNDEFINED> instruction: 0x73206e6f
4002f104:	6f547379 	svcvs	0x00547379
4002f108:	29286348 	stmdbcs	r8!, {r3, r6, r8, r9, sp, lr}
4002f10c:	610a7b20 	tstvs	sl, r0, lsr #22
4002f110:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
4002f114:	736f7020 	cmnvc	pc, #32
4002f118:	207b2874 	rsbscs	r2, fp, r4, ror r8
4002f11c:	3a637472 	bcc	4190c2ec <__ram_end+0x90c2ec>
4002f120:	2c222220 	sfmcs	f2, 4, [r2], #-128	; 0xffffff80
4002f124:	74636120 	strbtvc	r6, [r3], #-288	; 0xfffffee0
4002f128:	3a6e6f69 	bcc	41bcaed4 <__ram_end+0xbcaed4>
4002f12c:	79732220 	ldmdbvc	r3!, {r5, r9, sp}^
4002f130:	686f7473 	stmdavs	pc!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
4002f134:	7d202263 	sfmvc	f2, 4, [r0, #-396]!	; 0xfffffe74
4002f138:	720a3b29 	andvc	r3, sl, #41984	; 0xa400
4002f13c:	65726665 	ldrbvs	r6, [r2, #-1637]!	; 0xfffff99b
4002f140:	29286873 	stmdbcs	r8!, {r0, r1, r4, r5, r6, fp, sp, lr}
4002f144:	0a7d0a3b 	beq	41f71a38 <__ram_end+0xf71a38>
4002f148:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
4002f14c:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
4002f150:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
4002f154:	61206e6f 			; <UNDEFINED> instruction: 0x61206e6f
4002f158:	6d72616c 	ldfvse	f6, [r2, #-432]!	; 0xfffffe50
4002f15c:	7b202928 	blvc	40839604 <__heap_start+0x339604>
4002f160:	6e6f630a 	cdpvs	3, 6, cr6, cr15, cr10, {0}
4002f164:	61207473 			; <UNDEFINED> instruction: 0x61207473
4002f168:	64203d20 	strtvs	r3, [r0], #-3360	; 0xfffff2e0
4002f16c:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
4002f170:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
4002f174:	45746567 	ldrbmi	r6, [r4, #-1383]!	; 0xfffffa99
4002f178:	656d656c 	strbvs	r6, [sp, #-1388]!	; 0xfffffa94
4002f17c:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
4002f180:	27286449 	strcs	r6, [r8, -r9, asr #8]!
4002f184:	72616c61 	rsbvc	r6, r1, #24832	; 0x6100
4002f188:	706e496d 	rsbvc	r4, lr, sp, ror #18
4002f18c:	29277475 	stmdbcs	r7!, {r0, r2, r4, r5, r6, sl, ip, sp, lr}
4002f190:	6c61762e 	stclvs	6, cr7, [r1], #-184	; 0xffffff48
4002f194:	0a3b6575 	beq	40f08770 <__heap_start+0xa08770>
4002f198:	736e6f63 	cmnvc	lr, #396	; 0x18c
4002f19c:	20622074 	rsbcs	r2, r2, r4, ror r0
4002f1a0:	6f64203d 	svcvs	0x0064203d
4002f1a4:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
4002f1a8:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
4002f1ac:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
4002f1b0:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
4002f1b4:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
4002f1b8:	63272864 			; <UNDEFINED> instruction: 0x63272864
4002f1bc:	6f626b68 	svcvs	0x00626b68
4002f1c0:	2e292778 	mcrcs	7, 1, r2, cr9, cr8, {3}
4002f1c4:	63656863 	cmnvs	r5, #6488064	; 0x630000
4002f1c8:	2064656b 	rsbcs	r6, r4, fp, ror #10
4002f1cc:	3122203f 			; <UNDEFINED> instruction: 0x3122203f
4002f1d0:	203a2022 	eorscs	r2, sl, r2, lsr #32
4002f1d4:	3b223022 	blcc	408bb264 <__heap_start+0x3bb264>
4002f1d8:	6177610a 	cmnvs	r7, sl, lsl #2
4002f1dc:	70207469 	eorvc	r7, r0, r9, ror #8
4002f1e0:	2874736f 	ldmdacs	r4!, {r0, r1, r2, r3, r5, r6, r8, r9, ip, sp, lr}^
4002f1e4:	7472207b 	ldrbtvc	r2, [r2], #-123	; 0xffffff85
4002f1e8:	22223a63 	eorcs	r3, r2, #405504	; 0x63000
4002f1ec:	6c61202c 	stclvs	0, cr2, [r1], #-176	; 0xffffff50
4002f1f0:	3a6d7261 	bcc	41b8bb7c <__ram_end+0xb8bb7c>
4002f1f4:	202c6120 	eorcs	r6, ip, r0, lsr #2
4002f1f8:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
4002f1fc:	203a656c 	eorscs	r6, sl, ip, ror #10
4002f200:	297d2062 	ldmdbcs	sp!, {r1, r5, r6, sp}^
4002f204:	65720a3b 	ldrbvs	r0, [r2, #-2619]!	; 0xfffff5c5
4002f208:	73657266 	cmnvc	r5, #1610612742	; 0x60000006
4002f20c:	3b292868 	blcc	40a793b4 <__heap_start+0x5793b4>
4002f210:	000a7d0a 	andeq	r7, sl, sl, lsl #26

4002f214 <date_js>:
4002f214:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
4002f218:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
4002f21c:	726f6620 	rsbvc	r6, pc, #32, 12	; 0x2000000
4002f220:	4474616d 	ldrbtmi	r6, [r4], #-365	; 0xfffffe93
4002f224:	54657461 	strbtpl	r7, [r5], #-1121	; 0xfffffb9f
4002f228:	28656d69 	stmdacs	r5!, {r0, r3, r5, r6, r8, sl, fp, sp, lr}^
4002f22c:	65746164 	ldrbvs	r6, [r4, #-356]!	; 0xfffffe9c
4002f230:	0a7b2029 	beq	41ef72dc <__ram_end+0xef72dc>
4002f234:	736e6f63 	cmnvc	lr, #396	; 0x18c
4002f238:	65792074 	ldrbvs	r2, [r9, #-116]!	; 0xffffff8c
4002f23c:	3d207261 	sfmcc	f7, 4, [r0, #-388]!	; 0xfffffe7c
4002f240:	74616420 	strbtvc	r6, [r1], #-1056	; 0xfffffbe0
4002f244:	65672e65 	strbvs	r2, [r7, #-3685]!	; 0xfffff19b
4002f248:	6c754674 	ldclvs	6, cr4, [r5], #-464	; 0xfffffe30
4002f24c:	6165596c 	cmnvs	r5, ip, ror #18
4002f250:	3b292872 	blcc	40a79420 <__heap_start+0x579420>
4002f254:	6e6f630a 	cdpvs	3, 6, cr6, cr15, cr10, {0}
4002f258:	6d207473 	cfstrsvs	mvf7, [r0, #-460]!	; 0xfffffe34
4002f25c:	3d206e6f 	stccc	14, cr6, [r0, #-444]!	; 0xfffffe44
4002f260:	30272820 	eorcc	r2, r7, r0, lsr #16
4002f264:	202b2027 	eorcs	r2, fp, r7, lsr #32
4002f268:	74616428 	strbtvc	r6, [r1], #-1064	; 0xfffffbd8
4002f26c:	65672e65 	strbvs	r2, [r7, #-3685]!	; 0xfffff19b
4002f270:	6e6f4d74 	mcrvs	13, 3, r4, cr15, cr4, {3}
4002f274:	29286874 	stmdbcs	r8!, {r2, r4, r5, r6, fp, sp, lr}
4002f278:	31202b20 			; <UNDEFINED> instruction: 0x31202b20
4002f27c:	732e2929 			; <UNDEFINED> instruction: 0x732e2929
4002f280:	6563696c 	strbvs	r6, [r3, #-2412]!	; 0xfffff694
4002f284:	29322d28 	ldmdbcs	r2!, {r3, r5, r8, sl, fp, sp}
4002f288:	6f630a3b 	svcvs	0x00630a3b
4002f28c:	2074736e 	rsbscs	r7, r4, lr, ror #6
4002f290:	20796164 	rsbscs	r6, r9, r4, ror #2
4002f294:	2728203d 			; <UNDEFINED> instruction: 0x2728203d
4002f298:	2b202730 	blcs	40838f60 <__heap_start+0x338f60>
4002f29c:	74616420 	strbtvc	r6, [r1], #-1056	; 0xfffffbe0
4002f2a0:	65672e65 	strbvs	r2, [r7, #-3685]!	; 0xfffff19b
4002f2a4:	74614474 	strbtvc	r4, [r1], #-1140	; 0xfffffb8c
4002f2a8:	29292865 	stmdbcs	r9!, {r0, r2, r5, r6, fp, sp}
4002f2ac:	696c732e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, ip, sp, lr}^
4002f2b0:	2d286563 	cfstr32cs	mvfx6, [r8, #-396]!	; 0xfffffe74
4002f2b4:	0a3b2932 	beq	40ef9784 <__heap_start+0x9f9784>
4002f2b8:	736e6f63 	cmnvc	lr, #396	; 0x18c
4002f2bc:	6f682074 	svcvs	0x00682074
4002f2c0:	3d207275 	sfmcc	f7, 4, [r0, #-468]!	; 0xfffffe2c
4002f2c4:	30272820 	eorcc	r2, r7, r0, lsr #16
4002f2c8:	202b2027 	eorcs	r2, fp, r7, lsr #32
4002f2cc:	65746164 	ldrbvs	r6, [r4, #-356]!	; 0xfffffe9c
4002f2d0:	7465672e 	strbtvc	r6, [r5], #-1838	; 0xfffff8d2
4002f2d4:	72756f48 	rsbsvc	r6, r5, #72, 30	; 0x120
4002f2d8:	29292873 	stmdbcs	r9!, {r0, r1, r4, r5, r6, fp, sp}
4002f2dc:	696c732e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, ip, sp, lr}^
4002f2e0:	2d286563 	cfstr32cs	mvfx6, [r8, #-396]!	; 0xfffffe74
4002f2e4:	0a3b2932 	beq	40ef97b4 <__heap_start+0x9f97b4>
4002f2e8:	736e6f63 	cmnvc	lr, #396	; 0x18c
4002f2ec:	696d2074 	stmdbvs	sp!, {r2, r4, r5, r6, sp}^
4002f2f0:	203d206e 	eorscs	r2, sp, lr, rrx
4002f2f4:	27302728 	ldrcs	r2, [r0, -r8, lsr #14]!
4002f2f8:	64202b20 	strtvs	r2, [r0], #-2848	; 0xfffff4e0
4002f2fc:	2e657461 	cdpcs	4, 6, cr7, cr5, cr1, {3}
4002f300:	4d746567 	cfldr64mi	mvdx6, [r4, #-412]!	; 0xfffffe64
4002f304:	74756e69 	ldrbtvc	r6, [r5], #-3689	; 0xfffff197
4002f308:	29287365 	stmdbcs	r8!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
4002f30c:	6c732e29 	ldclvs	14, cr2, [r3], #-164	; 0xffffff5c
4002f310:	28656369 	stmdacs	r5!, {r0, r3, r5, r6, r8, r9, sp, lr}^
4002f314:	3b29322d 	blcc	40a7bbd0 <__heap_start+0x57bbd0>
4002f318:	6e6f630a 	cdpvs	3, 6, cr6, cr15, cr10, {0}
4002f31c:	73207473 			; <UNDEFINED> instruction: 0x73207473
4002f320:	3d206365 	stccc	3, cr6, [r0, #-404]!	; 0xfffffe6c
4002f324:	30272820 	eorcc	r2, r7, r0, lsr #16
4002f328:	202b2027 	eorcs	r2, fp, r7, lsr #32
4002f32c:	65746164 	ldrbvs	r6, [r4, #-356]!	; 0xfffffe9c
4002f330:	7465672e 	strbtvc	r6, [r5], #-1838	; 0xfffff8d2
4002f334:	6f636553 	svcvs	0x00636553
4002f338:	2873646e 	ldmdacs	r3!, {r1, r2, r3, r5, r6, sl, sp, lr}^
4002f33c:	732e2929 			; <UNDEFINED> instruction: 0x732e2929
4002f340:	6563696c 	strbvs	r6, [r3, #-2412]!	; 0xfffff694
4002f344:	29322d28 	ldmdbcs	r2!, {r3, r5, r8, sl, fp, sp}
4002f348:	6f630a3b 	svcvs	0x00630a3b
4002f34c:	2074736e 	rsbscs	r7, r4, lr, ror #6
4002f350:	7366666f 	cmnvc	r6, #116391936	; 0x6f00000
4002f354:	3d207465 	cfstrscc	mvf7, [r0, #-404]!	; 0xfffffe6c
4002f358:	74616420 	strbtvc	r6, [r1], #-1056	; 0xfffffbe0
4002f35c:	65672e65 	strbvs	r2, [r7, #-3685]!	; 0xfffff19b
4002f360:	6d695474 	cfstrdvs	mvd5, [r9, #-464]!	; 0xfffffe30
4002f364:	6e6f7a65 	vnmulvs.f32	s15, s30, s11
4002f368:	66664f65 	strbtvs	r4, [r6], -r5, ror #30
4002f36c:	28746573 	ldmdacs	r4!, {r0, r1, r4, r5, r6, r8, sl, sp, lr}^
4002f370:	630a3b29 	movwvs	r3, #43817	; 0xab29
4002f374:	74736e6f 	ldrbtvc	r6, [r3], #-3695	; 0xfffff191
4002f378:	66666f20 	strbtvs	r6, [r6], -r0, lsr #30
4002f37c:	48746573 	ldmdami	r4!, {r0, r1, r4, r5, r6, r8, sl, sp, lr}^
4002f380:	2072756f 	rsbscs	r7, r2, pc, ror #10
4002f384:	2728203d 			; <UNDEFINED> instruction: 0x2728203d
4002f388:	2b202730 	blcs	40839050 <__heap_start+0x339050>
4002f38c:	74614d20 	strbtvc	r4, [r1], #-3360	; 0xfffff2e0
4002f390:	6c662e68 	stclvs	14, cr2, [r6], #-416	; 0xfffffe60
4002f394:	28726f6f 	ldmdacs	r2!, {r0, r1, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
4002f398:	6874614d 	ldmdavs	r4!, {r0, r2, r3, r6, r8, sp, lr}^
4002f39c:	7362612e 	cmnvc	r2, #-2147483637	; 0x8000000b
4002f3a0:	66666f28 	strbtvs	r6, [r6], -r8, lsr #30
4002f3a4:	29746573 	ldmdbcs	r4!, {r0, r1, r4, r5, r6, r8, sl, sp, lr}^
4002f3a8:	36202f20 	strtcc	r2, [r0], -r0, lsr #30
4002f3ac:	2e292930 			; <UNDEFINED> instruction: 0x2e292930
4002f3b0:	63696c73 	cmnvs	r9, #29440	; 0x7300
4002f3b4:	322d2865 	eorcc	r2, sp, #6619136	; 0x650000
4002f3b8:	630a3b29 	movwvs	r3, #43817	; 0xab29
4002f3bc:	74736e6f 	ldrbtvc	r6, [r3], #-3695	; 0xfffff191
4002f3c0:	66666f20 	strbtvs	r6, [r6], -r0, lsr #30
4002f3c4:	4d746573 	cfldr64mi	mvdx6, [r4, #-460]!	; 0xfffffe34
4002f3c8:	3d206e69 	stccc	14, cr6, [r0, #-420]!	; 0xfffffe5c
4002f3cc:	30272820 	eorcc	r2, r7, r0, lsr #16
4002f3d0:	202b2027 	eorcs	r2, fp, r7, lsr #32
4002f3d4:	6874614d 	ldmdavs	r4!, {r0, r2, r3, r6, r8, sp, lr}^
4002f3d8:	7362612e 	cmnvc	r2, #-2147483637	; 0x8000000b
4002f3dc:	66666f28 	strbtvs	r6, [r6], -r8, lsr #30
4002f3e0:	29746573 	ldmdbcs	r4!, {r0, r1, r4, r5, r6, r8, sl, sp, lr}^
4002f3e4:	36202520 	strtcc	r2, [r0], -r0, lsr #10
4002f3e8:	732e2930 			; <UNDEFINED> instruction: 0x732e2930
4002f3ec:	6563696c 	strbvs	r6, [r3, #-2412]!	; 0xfffff694
4002f3f0:	29322d28 	ldmdbcs	r2!, {r3, r5, r8, sl, fp, sp}
4002f3f4:	6f630a3b 	svcvs	0x00630a3b
4002f3f8:	2074736e 	rsbscs	r7, r4, lr, ror #6
4002f3fc:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
4002f400:	6f203d20 	svcvs	0x00203d20
4002f404:	65736666 	ldrbvs	r6, [r3, #-1638]!	; 0xfffff99a
4002f408:	3d3c2074 	ldccc	0, cr2, [ip, #-464]!	; 0xfffffe30
4002f40c:	3f203020 	svccc	0x00203020
4002f410:	272b2720 	strcs	r2, [fp, -r0, lsr #14]!
4002f414:	27203a20 	strcs	r3, [r0, -r0, lsr #20]!
4002f418:	0a3b272d 	beq	40ef90d4 <__heap_start+0x9f90d4>
4002f41c:	28206669 	stmdacs	r0!, {r0, r3, r5, r6, r9, sl, sp, lr}
4002f420:	66666f28 	strbtvs	r6, [r6], -r8, lsr #30
4002f424:	48746573 	ldmdami	r4!, {r0, r1, r4, r5, r6, r8, sl, sp, lr}^
4002f428:	2072756f 	rsbscs	r7, r2, pc, ror #10
4002f42c:	30203d3d 	eorcc	r3, r0, sp, lsr sp
4002f430:	26262029 	strtcs	r2, [r6], -r9, lsr #32
4002f434:	666f2820 	strbtvs	r2, [pc], -r0, lsr #16
4002f438:	74657366 	strbtvc	r7, [r5], #-870	; 0xfffffc9a
4002f43c:	206e694d 	rsbcs	r6, lr, sp, asr #18
4002f440:	30203d3d 	eorcc	r3, r0, sp, lsr sp
4002f444:	7b202929 	blvc	408398f0 <__heap_start+0x3398f0>
4002f448:	7465720a 	strbtvc	r7, [r5], #-522	; 0xfffffdf6
4002f44c:	206e7275 	rsbcs	r7, lr, r5, ror r2
4002f450:	797b2460 	ldmdbvc	fp!, {r5, r6, sl, sp}^
4002f454:	7d726165 	ldfvce	f6, [r2, #-404]!	; 0xfffffe6c
4002f458:	6d7b242d 	cfldrdvs	mvd2, [fp, #-180]!	; 0xffffff4c
4002f45c:	2d7d6e6f 	ldclcs	14, cr6, [sp, #-444]!	; 0xfffffe44
4002f460:	61647b24 	cmnvs	r4, r4, lsr #22
4002f464:	24547d79 	ldrbcs	r7, [r4], #-3449	; 0xfffff287
4002f468:	756f687b 	strbvc	r6, [pc, #-2171]!	; 4002ebf5 <index_html+0x206>
4002f46c:	243a7d72 	ldrtcs	r7, [sl], #-3442	; 0xfffff28e
4002f470:	6e696d7b 	mcrvs	13, 3, r6, cr9, cr11, {3}
4002f474:	7b243a7d 	blvc	4093de70 <__heap_start+0x43de70>
4002f478:	7d636573 	cfstr64vc	mvdx6, [r3, #-460]!	; 0xfffffe34
4002f47c:	203b605a 	eorscs	r6, fp, sl, asr r0
4002f480:	207d0a20 	rsbscs	r0, sp, r0, lsr #20
4002f484:	7465720a 	strbtvc	r7, [r5], #-522	; 0xfffffdf6
4002f488:	206e7275 	rsbcs	r7, lr, r5, ror r2
4002f48c:	797b2460 	ldmdbvc	fp!, {r5, r6, sl, sp}^
4002f490:	7d726165 	ldfvce	f6, [r2, #-404]!	; 0xfffffe6c
4002f494:	6d7b242d 	cfldrdvs	mvd2, [fp, #-180]!	; 0xffffff4c
4002f498:	2d7d6e6f 	ldclcs	14, cr6, [sp, #-444]!	; 0xfffffe44
4002f49c:	61647b24 	cmnvs	r4, r4, lsr #22
4002f4a0:	24547d79 	ldrbcs	r7, [r4], #-3449	; 0xfffff287
4002f4a4:	756f687b 	strbvc	r6, [pc, #-2171]!	; 4002ec31 <index_html+0x242>
4002f4a8:	243a7d72 	ldrtcs	r7, [sl], #-3442	; 0xfffff28e
4002f4ac:	6e696d7b 	mcrvs	13, 3, r6, cr9, cr11, {3}
4002f4b0:	7b243a7d 	blvc	4093deac <__heap_start+0x43deac>
4002f4b4:	7d636573 	cfstr64vc	mvdx6, [r3, #-460]!	; 0xfffffe34
4002f4b8:	69737b24 	ldmdbvs	r3!, {r2, r5, r8, r9, fp, ip, sp, lr}^
4002f4bc:	247d6e67 	ldrbtcs	r6, [sp], #-3687	; 0xfffff199
4002f4c0:	66666f7b 	uqsub16vs	r6, r6, fp
4002f4c4:	48746573 	ldmdami	r4!, {r0, r1, r4, r5, r6, r8, sl, sp, lr}^
4002f4c8:	7d72756f 	cfldr64vc	mvdx7, [r2, #-444]!	; 0xfffffe44
4002f4cc:	6f7b243a 	svcvs	0x007b243a
4002f4d0:	65736666 	ldrbvs	r6, [r3, #-1638]!	; 0xfffff99a
4002f4d4:	6e694d74 	mcrvs	13, 3, r4, cr9, cr4, {3}
4002f4d8:	203b607d 	eorscs	r6, fp, sp, ror r0
4002f4dc:	7d0a2020 	stcvc	0, cr2, [sl, #-128]	; 0xffffff80
	...

4002f4e1 <time_js>:
4002f4e1:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
4002f4e5:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
4002f4e9:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
4002f4ed:	72206e6f 	eorvc	r6, r0, #1776	; 0x6f0
4002f4f1:	65726665 	ldrbvs	r6, [r2, #-1637]!	; 0xfffff99b
4002f4f5:	29286873 	stmdbcs	r8!, {r0, r1, r4, r5, r6, fp, sp, lr}
4002f4f9:	6c0a7b20 			; <UNDEFINED> instruction: 0x6c0a7b20
4002f4fd:	64207465 	strtvs	r7, [r0], #-1125	; 0xfffffb9b
4002f501:	20617461 	rsbcs	r7, r1, r1, ror #8
4002f505:	7761203d 			; <UNDEFINED> instruction: 0x7761203d
4002f509:	20746961 	rsbscs	r6, r4, r1, ror #18
4002f50d:	4a746567 	bmi	41d48ab1 <__ram_end+0xd48ab1>
4002f511:	284e4f53 	stmdacs	lr, {r0, r1, r4, r6, r8, r9, sl, fp, lr}^
4002f515:	6d697427 	cfstrdvs	mvd7, [r9, #-156]!	; 0xffffff64
4002f519:	74616465 	strbtvc	r6, [r1], #-1125	; 0xfffffb9b
4002f51d:	0a292765 	beq	40a792b9 <__heap_start+0x5792b9>
4002f521:	736e6f63 	cmnvc	lr, #396	; 0x18c
4002f525:	6f6e2074 	svcvs	0x006e2074
4002f529:	3d206564 	cfstr32cc	mvfx6, [r0, #-400]!	; 0xfffffe70
4002f52d:	726f6620 	rsbvc	r6, pc, #32, 12	; 0x2000000
4002f531:	4474616d 	ldrbtmi	r6, [r4], #-365	; 0xfffffe93
4002f535:	54657461 	strbtpl	r7, [r5], #-1121	; 0xfffffb9f
4002f539:	28656d69 	stmdacs	r5!, {r0, r3, r5, r6, r8, sl, fp, sp, lr}^
4002f53d:	2077656e 	rsbscs	r6, r7, lr, ror #10
4002f541:	65746144 	ldrbvs	r6, [r4, #-324]!	; 0xfffffebc
4002f545:	74616428 	strbtvc	r6, [r1], #-1064	; 0xfffffbd8
4002f549:	61642e61 	cmnvs	r4, r1, ror #28
4002f54d:	29296574 	stmdbcs	r9!, {r2, r4, r5, r6, r8, sl, sp, lr}
4002f551:	636f640a 	cmnvs	pc, #167772160	; 0xa000000
4002f555:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
4002f559:	65672e74 	strbvs	r2, [r7, #-3700]!	; 0xfffff18c
4002f55d:	656c4574 	strbvs	r4, [ip, #-1396]!	; 0xfffffa8c
4002f561:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
4002f565:	64497942 	strbvs	r7, [r9], #-2370	; 0xfffff6be
4002f569:	6f6e2728 	svcvs	0x006e2728
4002f56d:	69546564 	ldmdbvs	r4, {r2, r5, r6, r8, sl, sp, lr}^
4002f571:	2927656d 	stmdbcs	r7!, {r0, r2, r3, r5, r6, r8, sl, sp, lr}
4002f575:	7865742e 	stmdavc	r5!, {r1, r2, r3, r5, sl, ip, sp, lr}^
4002f579:	6e6f4374 	mcrvs	3, 3, r4, cr15, cr4, {3}
4002f57d:	746e6574 	strbtvc	r6, [lr], #-1396	; 0xfffffa8c
4002f581:	60203d20 	eorvs	r3, r0, r0, lsr #26
4002f585:	65646f4e 	strbvs	r6, [r4, #-3918]!	; 0xfffff0b2
4002f589:	6d695420 	cfstrdvs	mvd5, [r9, #-128]!	; 0xffffff80
4002f58d:	24203a65 	strtcs	r3, [r0], #-2661	; 0xfffff59b
4002f591:	646f6e7b 	strbtvs	r6, [pc], #-3707	; 4002f599 <time_js+0xb8>
4002f595:	0a607d65 	beq	4184eb31 <__ram_end+0x84eb31>
4002f599:	73610a7d 	cmnvc	r1, #512000	; 0x7d000
4002f59d:	20636e79 	rsbcs	r6, r3, r9, ror lr
4002f5a1:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
4002f5a5:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
4002f5a9:	6e797320 	cdpvs	3, 7, cr7, cr9, cr0, {1}
4002f5ad:	74695763 	strbtvc	r5, [r9], #-1891	; 0xfffff89d
4002f5b1:	636f4c68 	cmnvs	pc, #104, 24	; 0x6800
4002f5b5:	69546c61 	ldmdbvs	r4, {r0, r5, r6, sl, fp, sp, lr}^
4002f5b9:	2928656d 	stmdbcs	r8!, {r0, r2, r3, r5, r6, r8, sl, sp, lr}
4002f5bd:	630a7b20 	movwvs	r7, #43808	; 0xab20
4002f5c1:	74736e6f 	ldrbtvc	r6, [r3], #-3695	; 0xfffff191
4002f5c5:	646f6e20 	strbtvs	r6, [pc], #-3616	; 4002f5cd <time_js+0xec>
4002f5c9:	203d2065 	eorscs	r2, sp, r5, rrx
4002f5cd:	6d726f66 	ldclvs	15, cr6, [r2, #-408]!	; 0xfffffe68
4002f5d1:	61447461 	cmpvs	r4, r1, ror #8
4002f5d5:	69546574 	ldmdbvs	r4, {r2, r4, r5, r6, r8, sl, sp, lr}^
4002f5d9:	6e28656d 	cfsh64vs	mvdx6, mvdx8, #61
4002f5dd:	44207765 	strtmi	r7, [r0], #-1893	; 0xfffff89b
4002f5e1:	28657461 	stmdacs	r5!, {r0, r5, r6, sl, ip, sp, lr}^
4002f5e5:	640a2929 	strvs	r2, [sl], #-2345	; 0xfffff6d7
4002f5e9:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
4002f5ed:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
4002f5f1:	45746567 	ldrbmi	r6, [r4, #-1383]!	; 0xfffffa99
4002f5f5:	656d656c 	strbvs	r6, [sp, #-1388]!	; 0xfffffa94
4002f5f9:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
4002f5fd:	27286449 	strcs	r6, [r8, -r9, asr #8]!
4002f601:	65646f6e 	strbvs	r6, [r4, #-3950]!	; 0xfffff092
4002f605:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
4002f609:	742e2927 	strtvc	r2, [lr], #-2343	; 0xfffff6d9
4002f60d:	43747865 	cmnmi	r4, #6619136	; 0x650000
4002f611:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
4002f615:	3d20746e 	cfstrscc	mvf7, [r0, #-440]!	; 0xfffffe48
4002f619:	6f4e6020 	svcvs	0x004e6020
4002f61d:	54206564 	strtpl	r6, [r0], #-1380	; 0xfffffa9c
4002f621:	3a656d69 	bcc	4198abcd <__ram_end+0x98abcd>
4002f625:	6e7b2420 	cdpvs	4, 7, cr2, cr11, cr0, {1}
4002f629:	7d65646f 	cfstrdvc	mvd6, [r5, #-444]!	; 0xfffffe44
4002f62d:	6f630a60 	svcvs	0x00630a60
4002f631:	2074736e 	rsbscs	r7, r4, lr, ror #6
4002f635:	61746164 	cmnvs	r4, r4, ror #2
4002f639:	7b203d20 	blvc	4083eac1 <__heap_start+0x33eac1>
4002f63d:	74616420 	strbtvc	r6, [r1], #-1056	; 0xfffffbe0
4002f641:	6e203a65 	vnmulvs.f32	s6, s0, s11
4002f645:	2065646f 	rsbcs	r6, r5, pc, ror #8
4002f649:	77610a7d 			; <UNDEFINED> instruction: 0x77610a7d
4002f64d:	20746961 	rsbscs	r6, r4, r1, ror #18
4002f651:	74736f70 	ldrbtvc	r6, [r3], #-3952	; 0xfffff090
4002f655:	74616428 	strbtvc	r6, [r1], #-1064	; 0xfffffbd8
4002f659:	720a2961 	andvc	r2, sl, #1589248	; 0x184000
4002f65d:	65726665 	ldrbvs	r6, [r2, #-1637]!	; 0xfffff99b
4002f661:	29286873 	stmdbcs	r8!, {r0, r1, r4, r5, r6, fp, sp, lr}
4002f665:	 	tstvs	r0, sl, lsl #26

4002f668 <index_js>:
4002f668:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
4002f66c:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
4002f670:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
4002f674:	64206e6f 	strtvs	r6, [r0], #-3695	; 0xfffff191
4002f678:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
4002f67c:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
4002f680:	7b202928 	blvc	40839b28 <__heap_start+0x339b28>
4002f684:	74656c0a 	strbtvc	r6, [r5], #-3082	; 0xfffff3f6
4002f688:	3d206420 	cfstrscc	mvf6, [r0, #-128]!	; 0xffffff80
4002f68c:	61776120 	cmnvs	r7, r0, lsr #2
4002f690:	67207469 	strvs	r7, [r0, -r9, ror #8]!
4002f694:	534a7465 	movtpl	r7, #42085	; 0xa465
4002f698:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
4002f69c:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
4002f6a0:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
4002f6a4:	0a292779 	beq	40a79490 <__heap_start+0x579490>
4002f6a8:	2074656c 	rsbscs	r6, r4, ip, ror #10
4002f6ac:	203d2068 	eorscs	r2, sp, r8, rrx
4002f6b0:	6c0a2222 	sfmvs	f2, 4, [sl], {34}	; 0x22
4002f6b4:	66207465 	strtvs	r7, [r0], -r5, ror #8
4002f6b8:	4f203d20 	svcmi	0x00203d20
4002f6bc:	63656a62 	cmnvs	r5, #401408	; 0x62000
4002f6c0:	656b2e74 	strbvs	r2, [fp, #-3700]!	; 0xfffff18c
4002f6c4:	64287379 	strtvs	r7, [r8], #-889	; 0xfffffc87
4002f6c8:	6966225b 	stmdbvs	r6!, {r0, r1, r3, r4, r6, r9, sp}^
4002f6cc:	2273656c 	rsbscs	r6, r3, #108, 10	; 0x1b000000
4002f6d0:	660a295d 			; <UNDEFINED> instruction: 0x660a295d
4002f6d4:	726f662e 	rsbvc	r6, pc, #48234496	; 0x2e00000
4002f6d8:	68636145 	stmdavs	r3!, {r0, r2, r6, r8, sp, lr}^
4002f6dc:	6e756628 	cdpvs	6, 7, cr6, cr5, cr8, {1}
4002f6e0:	6f697463 	svcvs	0x00697463
4002f6e4:	656b286e 	strbvs	r2, [fp, #-2158]!	; 0xfffff792
4002f6e8:	7b202979 	blvc	40839cd4 <__heap_start+0x339cd4>
4002f6ec:	7261760a 	rsbvc	r7, r1, #10485760	; 0xa00000
4002f6f0:	3d207620 	stccc	6, cr7, [r0, #-128]!	; 0xffffff80
4002f6f4:	225b6420 	subscs	r6, fp, #32, 8	; 0x20000000
4002f6f8:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
4002f6fc:	5b5d2273 	blpl	417780d0 <__ram_end+0x7780d0>
4002f700:	5d79656b 	cfldr64pl	mvdx6, [r9, #-428]!	; 0xfffffe54
4002f704:	2b20680a 	blcs	40849734 <__heap_start+0x349734>
4002f708:	3c22203d 	stccc	0, cr2, [r2], #-244	; 0xffffff0c
4002f70c:	6974706f 	ldmdbvs	r4!, {r0, r1, r2, r3, r5, r6, ip, sp, lr}^
4002f710:	76206e6f 	strtvc	r6, [r0], -pc, ror #28
4002f714:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
4002f718:	6b2b223d 	blvs	40af8014 <__heap_start+0x5f8014>
4002f71c:	222b7965 	eorcs	r7, fp, #1654784	; 0x194000
4002f720:	762b223e 			; <UNDEFINED> instruction: 0x762b223e
4002f724:	2f3c222b 	svccs	0x003c222b
4002f728:	6974706f 	ldmdbvs	r4!, {r0, r1, r2, r3, r5, r6, ip, sp, lr}^
4002f72c:	223e6e6f 	eorscs	r6, lr, #1776	; 0x6f0
4002f730:	3b297d0a 	blcc	40a8eb60 <__heap_start+0x58eb60>
4002f734:	636f640a 	cmnvs	pc, #167772160	; 0xa000000
4002f738:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
4002f73c:	65672e74 	strbvs	r2, [r7, #-3700]!	; 0xfffff18c
4002f740:	656c4574 	strbvs	r4, [ip, #-1396]!	; 0xfffffa8c
4002f744:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
4002f748:	64497942 	strbvs	r7, [r9], #-2370	; 0xfffff6be
4002f74c:	64692228 	strbtvs	r2, [r9], #-552	; 0xfffffdd8
4002f750:	65726944 	ldrbvs	r6, [r2, #-2372]!	; 0xfffff6bc
4002f754:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
4002f758:	2e292279 	mcrcs	2, 1, r2, cr9, cr9, {3}
4002f75c:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
4002f760:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
4002f764:	203d204c 	eorscs	r2, sp, ip, asr #32
4002f768:	65670a68 	strbvs	r0, [r7, #-2664]!	; 0xfffff598
4002f76c:	78745f74 	ldmdavc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
4002f770:	5b662874 	blpl	419b9948 <__ram_end+0x9b9948>
4002f774:	0a295d30 	beq	40a86c3c <__heap_start+0x586c3c>
4002f778:	73610a7d 	cmnvc	r1, #512000	; 0x7d000
4002f77c:	20636e79 	rsbcs	r6, r3, r9, ror lr
4002f780:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
4002f784:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
4002f788:	74656720 	strbtvc	r6, [r5], #-1824	; 0xfffff8e0
4002f78c:	7478745f 	ldrbtvc	r7, [r8], #-1119	; 0xfffffba1
4002f790:	6c657328 	stclvs	3, cr7, [r5], #-160	; 0xffffff60
4002f794:	0a7b2029 	beq	41ef7840 <__ram_end+0xef7840>
4002f798:	2074656c 	rsbscs	r6, r4, ip, ror #10
4002f79c:	20747874 	rsbscs	r7, r4, r4, ror r8
4002f7a0:	7761203d 			; <UNDEFINED> instruction: 0x7761203d
4002f7a4:	20746961 	rsbscs	r6, r4, r1, ror #18
4002f7a8:	4a746567 	bmi	41d48d4c <__ram_end+0xd48d4c>
4002f7ac:	284e4f53 	stmdacs	lr, {r0, r1, r4, r6, r8, r9, sl, fp, lr}^
4002f7b0:	296c6573 	stmdbcs	ip!, {r0, r1, r4, r5, r6, r8, sl, sp, lr}^
4002f7b4:	74656c0a 	strbtvc	r6, [r5], #-3082	; 0xfffff3f6
4002f7b8:	3d206820 	stccc	8, cr6, [r0, #-128]!	; 0xffffff80
4002f7bc:	0a222220 	beq	408b8044 <__heap_start+0x3b8044>
4002f7c0:	656a624f 	strbvs	r6, [sl, #-591]!	; 0xfffffdb1
4002f7c4:	6b2e7463 	blvs	40bcc958 <__heap_start+0x6cc958>
4002f7c8:	28737965 	ldmdacs	r3!, {r0, r2, r5, r6, r8, fp, ip, sp, lr}^
4002f7cc:	5b747874 	blpl	41d4d9a4 <__ram_end+0xd4d9a4>
4002f7d0:	5d6c6573 	cfstr64pl	mvdx6, [ip, #-460]!	; 0xfffffe34
4002f7d4:	6f662e29 	svcvs	0x00662e29
4002f7d8:	63614572 	cmnvs	r1, #478150656	; 0x1c800000
4002f7dc:	75662868 	strbvc	r2, [r6, #-2152]!	; 0xfffff798
4002f7e0:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
4002f7e4:	6b286e6f 	blvs	40a4b1a8 <__heap_start+0x54b1a8>
4002f7e8:	20297965 	eorcs	r7, r9, r5, ror #18
4002f7ec:	61760a7b 	cmnvs	r6, fp, ror sl
4002f7f0:	20762072 	rsbscs	r2, r6, r2, ror r0
4002f7f4:	7874203d 	ldmdavc	r4!, {r0, r2, r3, r4, r5, sp}^
4002f7f8:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
4002f7fc:	6b5b5d6c 	blvs	41706db4 <__ram_end+0x706db4>
4002f800:	0a5d7965 	beq	4178dd9c <__ram_end+0x78dd9c>
4002f804:	3d2b2068 	stccc	0, cr2, [fp, #-416]!	; 0xfffffe60
4002f808:	743c2220 	ldrtvc	r2, [ip], #-544	; 0xfffffde0
4002f80c:	743c3e72 	ldrtvc	r3, [ip], #-3698	; 0xfffff18e
4002f810:	2b223e64 	blcs	408bf1a8 <__heap_start+0x3bf1a8>
4002f814:	2b79656b 	blcs	41e88dc8 <__ram_end+0xe88dc8>
4002f818:	742f3c27 	strtvc	r3, [pc], #-3111	; 4002f820 <index_js+0x1b8>
4002f81c:	743c3e64 	ldrtvc	r3, [ip], #-3684	; 0xfffff19c
4002f820:	693c3e64 	ldmdbvs	ip!, {r2, r5, r6, r9, sl, fp, ip, sp}
4002f824:	7475706e 	ldrbtvc	r7, [r5], #-110	; 0xffffff92
4002f828:	70797420 	rsbsvc	r7, r9, r0, lsr #8
4002f82c:	74223d65 	strtvc	r3, [r2], #-3429	; 0xfffff29b
4002f830:	22747865 	rsbscs	r7, r4, #6619136	; 0x650000
4002f834:	6c617620 	stclvs	6, cr7, [r1], #-128	; 0xffffff80
4002f838:	223d6575 	eorscs	r6, sp, #490733568	; 0x1d400000
4002f83c:	2b762b27 	blcs	41dba4e0 <__ram_end+0xdba4e0>
4002f840:	69202227 	stmdbvs	r0!, {r0, r1, r2, r5, r9, sp}
4002f844:	27223d64 	strcs	r3, [r2, -r4, ror #26]!
4002f848:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
4002f84c:	3e22272b 	cdpcc	7, 2, cr2, cr2, cr11, {1}
4002f850:	64742f3c 	ldrbtvs	r2, [r4], #-3900	; 0xfffff0c4
4002f854:	742f3c3e 	strtvc	r3, [pc], #-3134	; 4002f85c <index_js+0x1f4>
4002f858:	0a273e72 	beq	409ff228 <__heap_start+0x4ff228>
4002f85c:	0a3b297d 	beq	40ef9e58 <__heap_start+0x9f9e58>
4002f860:	3d2b2068 	stccc	0, cr2, [fp, #-416]!	; 0xfffffe60
4002f864:	743c2720 	ldrtvc	r2, [ip], #-1824	; 0xfffff8e0
4002f868:	743c3e72 	ldrtvc	r3, [ip], #-3698	; 0xfffff18e
4002f86c:	6f632064 	svcvs	0x00632064
4002f870:	6170736c 	cmnvs	r0, ip, ror #6
4002f874:	32223d6e 	eorcc	r3, r2, #7040	; 0x1b80
4002f878:	623c3e22 	eorsvs	r3, ip, #544	; 0x220
4002f87c:	6f747475 	svcvs	0x00747475
4002f880:	6e6f206e 	cdpvs	0, 6, cr2, cr15, cr14, {3}
4002f884:	63696c63 	cmnvs	r9, #25344	; 0x6300
4002f888:	73223d6b 			; <UNDEFINED> instruction: 0x73223d6b
4002f88c:	28657661 	stmdacs	r5!, {r0, r5, r6, r9, sl, ip, sp, lr}^
4002f890:	2b27275c 	blcs	409f9608 <__heap_start+0x4f9608>
4002f894:	2b6c6573 	blcs	41b48e68 <__ram_end+0xb48e68>
4002f898:	29275c27 	stmdbcs	r7!, {r0, r1, r2, r5, sl, fp, ip, lr}
4002f89c:	61533e22 	cmpvs	r3, r2, lsr #28
4002f8a0:	2f3c6576 	svccs	0x003c6576
4002f8a4:	74747562 	ldrbtvc	r7, [r4], #-1378	; 0xfffffa9e
4002f8a8:	273e6e6f 	ldrcs	r6, [lr, -pc, ror #28]!
4002f8ac:	20680a3b 	rsbcs	r0, r8, fp, lsr sl
4002f8b0:	27203d2b 	strcs	r3, [r0, -fp, lsr #26]!
4002f8b4:	7475623c 	ldrbtvc	r6, [r5], #-572	; 0xfffffdc4
4002f8b8:	206e6f74 	rsbcs	r6, lr, r4, ror pc
4002f8bc:	73616c63 	cmnvc	r1, #25344	; 0x6300
4002f8c0:	62223d73 	eorvs	r3, r2, #7360	; 0x1cc0
4002f8c4:	20226e74 	eorcs	r6, r2, r4, ror lr
4002f8c8:	6c636e6f 	stclvs	14, cr6, [r3], #-444	; 0xfffffe44
4002f8cc:	3d6b6369 	stclcc	3, cr6, [fp, #-420]!	; 0xfffffe5c
4002f8d0:	73657222 	cmnvc	r5, #536870914	; 0x20000002
4002f8d4:	5c287465 	cfstrspl	mvf7, [r8], #-404	; 0xfffffe6c
4002f8d8:	732b2727 			; <UNDEFINED> instruction: 0x732b2727
4002f8dc:	272b6c65 	strcs	r6, [fp, -r5, ror #24]!
4002f8e0:	2229275c 	eorcs	r2, r9, #92, 14	; 0x1700000
4002f8e4:	6665443e 			; <UNDEFINED> instruction: 0x6665443e
4002f8e8:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
4002f8ec:	622f3c73 	eorvs	r3, pc, #29440	; 0x7300
4002f8f0:	6f747475 	svcvs	0x00747475
4002f8f4:	2f3c3e6e 	svccs	0x003c3e6e
4002f8f8:	3c3e6474 	cfldrscc	mvf6, [lr], #-464	; 0xfffffe30
4002f8fc:	3e72742f 	cdpcc	4, 7, cr7, cr2, cr15, {1}
4002f900:	640a3b27 	strvs	r3, [sl], #-2855	; 0xfffff4d9
4002f904:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
4002f908:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
4002f90c:	45746567 	ldrbmi	r6, [r4, #-1383]!	; 0xfffffa99
4002f910:	656d656c 	strbvs	r6, [sp, #-1388]!	; 0xfffffa94
4002f914:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
4002f918:	22286449 	eorcs	r6, r8, #1224736768	; 0x49000000
4002f91c:	78546469 	ldmdavc	r4, {r0, r3, r5, r6, sl, sp, lr}^
4002f920:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
4002f924:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
4002f928:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
4002f92c:	203d204c 	eorscs	r2, sp, ip, asr #32
4002f930:	0a7d0a68 	beq	41f722d8 <__ram_end+0xf722d8>
4002f934:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
4002f938:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
4002f93c:	76617320 	strbtvc	r7, [r1], -r0, lsr #6
4002f940:	65732865 	ldrbvs	r2, [r3, #-2149]!	; 0xfffff79b
4002f944:	7b20296c 	blvc	40839efc <__heap_start+0x339efc>
4002f948:	7261760a 	rsbvc	r7, r1, #10485760	; 0xa00000
4002f94c:	3d206420 	cfstrscc	mvf6, [r0, #-128]!	; 0xffffff80
4002f950:	0a7d7b20 	beq	41f8e5d8 <__ram_end+0xf8e5d8>
4002f954:	20726176 	rsbscs	r6, r2, r6, ror r1
4002f958:	75706e69 	ldrbvc	r6, [r0, #-3689]!	; 0xfffff197
4002f95c:	3d207374 	stccc	3, cr7, [r0, #-464]!	; 0xfffffe30
4002f960:	636f6420 	cmnvs	pc, #32, 8	; 0x20000000
4002f964:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
4002f968:	65672e74 	strbvs	r2, [r7, #-3700]!	; 0xfffff18c
4002f96c:	656c4574 	strbvs	r4, [ip, #-1396]!	; 0xfffffa8c
4002f970:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
4002f974:	64497942 	strbvs	r7, [r9], #-2370	; 0xfffff6be
4002f978:	64692228 	strbtvs	r2, [r9], #-552	; 0xfffffdd8
4002f97c:	22747854 	rsbscs	r7, r4, #84, 16	; 0x540000
4002f980:	65672e29 	strbvs	r2, [r7, #-3625]!	; 0xfffff1d7
4002f984:	656c4574 	strbvs	r4, [ip, #-1396]!	; 0xfffffa8c
4002f988:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
4002f98c:	54794273 	ldrbtpl	r4, [r9], #-627	; 0xfffffd8d
4002f990:	614e6761 	cmpvs	lr, r1, ror #14
4002f994:	2228656d 	eorcs	r6, r8, #457179136	; 0x1b400000
4002f998:	75706e69 	ldrbvc	r6, [r0, #-3689]!	; 0xfffff197
4002f99c:	0a292274 	beq	40a78374 <__heap_start+0x578374>
4002f9a0:	20726f66 	rsbscs	r6, r2, r6, ror #30
4002f9a4:	72617628 	rsbvc	r7, r1, #40, 12	; 0x2800000
4002f9a8:	3d206920 			; <UNDEFINED> instruction: 0x3d206920
4002f9ac:	203b3020 	eorscs	r3, fp, r0, lsr #32
4002f9b0:	203c2069 	eorscs	r2, ip, r9, rrx
4002f9b4:	75706e69 	ldrbvc	r6, [r0, #-3689]!	; 0xfffff197
4002f9b8:	6c2e7374 	stcvs	3, cr7, [lr], #-464	; 0xfffffe30
4002f9bc:	74676e65 	strbtvc	r6, [r7], #-3685	; 0xfffff19b
4002f9c0:	69203b68 	stmdbvs	r0!, {r3, r5, r6, r8, r9, fp, ip, sp}
4002f9c4:	20292b2b 	eorcs	r2, r9, fp, lsr #22
4002f9c8:	61760a7b 	cmnvs	r6, fp, ror sl
4002f9cc:	206b2072 	rsbcs	r2, fp, r2, ror r0
4002f9d0:	6e69203d 	mcrvs	0, 3, r2, cr9, cr13, {1}
4002f9d4:	73747570 	cmnvc	r4, #112, 10	; 0x1c000000
4002f9d8:	2e5d695b 			; <UNDEFINED> instruction: 0x2e5d695b
4002f9dc:	760a6469 	strvc	r6, [sl], -r9, ror #8
4002f9e0:	76207261 	strtvc	r7, [r0], -r1, ror #4
4002f9e4:	69203d20 	stmdbvs	r0!, {r5, r8, sl, fp, ip, sp}
4002f9e8:	7475706e 	ldrbtvc	r7, [r5], #-110	; 0xffffff92
4002f9ec:	5d695b73 	fstmdbxpl	r9!, {d21-d77}	;@ Deprecated
4002f9f0:	6c61762e 	stclvs	6, cr7, [r1], #-184	; 0xffffff48
4002f9f4:	640a6575 	strvs	r6, [sl], #-1397	; 0xfffffa8b
4002f9f8:	205d6b5b 	subscs	r6, sp, fp, asr fp
4002f9fc:	0a76203d 	beq	41db7af8 <__ram_end+0xdb7af8>
4002fa00:	61760a7d 	cmnvs	r6, sp, ror sl
4002fa04:	756f2072 	strbvc	r2, [pc, #-114]!	; 4002f99a <index_js+0x332>
4002fa08:	203d2074 	eorscs	r2, sp, r4, ror r0
4002fa0c:	6f0a7d7b 	svcvs	0x000a7d7b
4002fa10:	735b7475 	cmpvc	fp, #1962934272	; 0x75000000
4002fa14:	205d6c65 	subscs	r6, sp, r5, ror #24
4002fa18:	0a64203d 	beq	41937b14 <__ram_end+0x937b14>
4002fa1c:	20726176 	rsbscs	r6, r2, r6, ror r1
4002fa20:	6c796170 	ldfvse	f6, [r9], #-448	; 0xfffffe40
4002fa24:	2064616f 	rsbcs	r6, r4, pc, ror #2
4002fa28:	534a203d 	movtpl	r2, #41021	; 0xa03d
4002fa2c:	732e4e4f 			; <UNDEFINED> instruction: 0x732e4e4f
4002fa30:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
4002fa34:	79666967 	stmdbvc	r6!, {r0, r1, r2, r5, r6, r8, fp, sp, lr}^
4002fa38:	74756f28 	ldrbtvc	r6, [r5], #-3880	; 0xfffff0d8
4002fa3c:	65660a29 	strbvs	r0, [r6, #-2601]!	; 0xfffff5d7
4002fa40:	28686374 	stmdacs	r8!, {r2, r4, r5, r6, r8, r9, sp, lr}^
4002fa44:	736a2f27 	cmnvc	sl, #39, 30	; 0x9c
4002fa48:	2c276e6f 	stccs	14, cr6, [r7], #-444	; 0xfffffe44
4002fa4c:	6d0a7b20 	vstrvs	d7, [sl, #-128]	; 0xffffff80
4002fa50:	6f687465 	svcvs	0x00687465
4002fa54:	27203a64 	strcs	r3, [r0, -r4, ror #20]!
4002fa58:	54534f50 	ldrbpl	r4, [r3], #-3920	; 0xfffff0b0
4002fa5c:	680a2c27 	stmdavs	sl, {r0, r1, r2, r5, sl, fp, sp}
4002fa60:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
4002fa64:	203a7372 	eorscs	r7, sl, r2, ror r3
4002fa68:	43270a7b 			; <UNDEFINED> instruction: 0x43270a7b
4002fa6c:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
4002fa70:	542d746e 	strtpl	r7, [sp], #-1134	; 0xfffffb92
4002fa74:	27657079 			; <UNDEFINED> instruction: 0x27657079
4002fa78:	6127203a 			; <UNDEFINED> instruction: 0x6127203a
4002fa7c:	696c7070 	stmdbvs	ip!, {r4, r5, r6, ip, sp, lr}^
4002fa80:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
4002fa84:	6a2f6e6f 	bvs	40c0b448 <__heap_start+0x70b448>
4002fa88:	276e6f73 			; <UNDEFINED> instruction: 0x276e6f73
4002fa8c:	0a2c7d0a 	beq	40b4eebc <__heap_start+0x64eebc>
4002fa90:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
4002fa94:	6170203a 	cmnvs	r0, sl, lsr r0
4002fa98:	616f6c79 	smcvs	63177	; 0xf6c9
4002fa9c:	297d0a64 	ldmdbcs	sp!, {r2, r5, r6, r9, fp}^
4002faa0:	68742e20 	ldmdavs	r4!, {r5, r9, sl, fp, sp}^
4002faa4:	72286e65 	eorvc	r6, r8, #1616	; 0x650
4002faa8:	6f707365 	svcvs	0x00707365
4002faac:	2065736e 	rsbcs	r7, r5, lr, ror #6
4002fab0:	7b203e3d 	blvc	4083f3ac <__heap_start+0x33f3ac>
4002fab4:	28206669 	stmdacs	r0!, {r0, r3, r5, r6, r9, sl, sp, lr}
4002fab8:	70736572 	rsbsvc	r6, r3, r2, ror r5
4002fabc:	65736e6f 	ldrbvs	r6, [r3, #-3695]!	; 0xfffff191
4002fac0:	296b6f2e 	stmdbcs	fp!, {r1, r2, r3, r5, r8, r9, sl, fp, sp, lr}^
4002fac4:	67207b20 	strvs	r7, [r0, -r0, lsr #22]!
4002fac8:	745f7465 	ldrbvc	r7, [pc], #-1125	; 4002fad0 <index_js+0x468>
4002facc:	73287478 			; <UNDEFINED> instruction: 0x73287478
4002fad0:	3b296c65 	blcc	40a8ac6c <__heap_start+0x58ac6c>
4002fad4:	297d7d20 	ldmdbcs	sp!, {r5, r8, sl, fp, ip, sp, lr}^
4002fad8:	0a7d0a3b 	beq	41f723cc <__ram_end+0xf723cc>
	...

4002fadd <rtc_html>:
4002fadd:	4f44213c 	svcmi	0x0044213c
4002fae1:	50595443 	subspl	r5, r9, r3, asr #8
4002fae5:	74682045 	strbtvc	r2, [r8], #-69	; 0xffffffbb
4002fae9:	0a3e6c6d 	beq	40fcaca5 <__heap_start+0xacaca5>
4002faed:	6d74683c 	ldclvs	8, cr6, [r4, #-240]!	; 0xffffff10
4002faf1:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
4002faf5:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
4002faf9:	696c3c3e 	stmdbvs	ip!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}^
4002fafd:	72206b6e 	eorvc	r6, r0, #112640	; 0x1b800
4002fb01:	223d6c65 	eorscs	r6, sp, #25856	; 0x6500
4002fb05:	6c797473 	cfldrdvs	mvd7, [r9], #-460	; 0xfffffe34
4002fb09:	65687365 	strbvs	r7, [r8, #-869]!	; 0xfffffc9b
4002fb0d:	20227465 	eorcs	r7, r2, r5, ror #8
4002fb11:	66657268 	strbtvs	r7, [r5], -r8, ror #4
4002fb15:	7473223d 	ldrbtvc	r2, [r3], #-573	; 0xfffffdc3
4002fb19:	73656c79 	cmnvc	r5, #30976	; 0x7900
4002fb1d:	7373632e 	cmnvc	r3, #-1207959552	; 0xb8000000
4002fb21:	3e2f2022 	cdpcc	0, 2, cr2, cr15, cr2, {1}
4002fb25:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
4002fb29:	523e656c 	eorspl	r6, lr, #108, 10	; 0x1b000000
4002fb2d:	2d6c6165 	stfcse	f6, [ip, #-404]!	; 0xfffffe6c
4002fb31:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
4002fb35:	6f6c6320 	svcvs	0x006c6320
4002fb39:	2f3c6b63 	svccs	0x003c6b63
4002fb3d:	6c746974 			; <UNDEFINED> instruction: 0x6c746974
4002fb41:	2f3c3e65 	svccs	0x003c3e65
4002fb45:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
4002fb49:	623c0a3e 	eorsvs	r0, ip, #253952	; 0x3e000
4002fb4d:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
4002fb51:	65683c0a 	strbvs	r3, [r8, #-3082]!	; 0xfffff3f6
4002fb55:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
4002fb59:	6c753c3e 	ldclvs	12, cr3, [r5], #-248	; 0xffffff08
4002fb5d:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
4002fb61:	4c646922 			; <UNDEFINED> instruction: 0x4c646922
4002fb65:	22747369 	rsbscs	r7, r4, #-1543503871	; 0xa4000001
4002fb69:	752f3c3e 	strvc	r3, [pc, #-3134]!	; 4002ef33 <rtc_js+0x6b>
4002fb6d:	2f3c3e6c 	svccs	0x003c3e6c
4002fb71:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
4002fb75:	0a3e7265 	beq	40fcc511 <__heap_start+0xacc511>
4002fb79:	3c3e703c 	ldccc	0, cr7, [lr], #-240	; 0xffffff10
4002fb7d:	74747562 	ldrbtvc	r7, [r4], #-1378	; 0xfffffa9e
4002fb81:	6f206e6f 	svcvs	0x00206e6f
4002fb85:	696c636e 	stmdbvs	ip!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
4002fb89:	223d6b63 	eorscs	r6, sp, #101376	; 0x18c00
4002fb8d:	72666572 	rsbvc	r6, r6, #478150656	; 0x1c800000
4002fb91:	28687365 	stmdacs	r8!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}^
4002fb95:	523e2229 	eorspl	r2, lr, #-1879048190	; 0x90000002
4002fb99:	65726665 	ldrbvs	r6, [r2, #-1637]!	; 0xfffff99b
4002fb9d:	2f3c6873 	svccs	0x003c6873
4002fba1:	74747562 	ldrbtvc	r7, [r4], #-1378	; 0xfffffa9e
4002fba5:	3c3e6e6f 	ldccc	14, cr6, [lr], #-444	; 0xfffffe44
4002fba9:	0a3e702f 	beq	40fcbc6d <__heap_start+0xacbc6d>
4002fbad:	6920703c 	stmdbvs	r0!, {r2, r3, r4, r5, ip, sp, lr}
4002fbb1:	6e223d64 	cdpvs	13, 2, cr3, cr2, cr4, {3}
4002fbb5:	5465646f 	strbtpl	r6, [r5], #-1135	; 0xfffffb91
4002fbb9:	22656d69 	rsbcs	r6, r5, #6720	; 0x1a40
4002fbbd:	646f4e3e 	strbtvs	r4, [pc], #-3646	; 4002fbc5 <rtc_html+0xe8>
4002fbc1:	69742065 	ldmdbvs	r4!, {r0, r2, r5, r6, sp}^
4002fbc5:	7720656d 	strvc	r6, [r0, -sp, ror #10]!
4002fbc9:	206c6c69 	rsbcs	r6, ip, r9, ror #24
4002fbcd:	64206562 	strtvs	r6, [r0], #-1378	; 0xfffffa9e
4002fbd1:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
4002fbd5:	64657961 	strbtvs	r7, [r5], #-2401	; 0xfffff69f
4002fbd9:	72656820 	rsbvc	r6, r5, #32, 16	; 0x200000
4002fbdd:	702f3c65 	eorvc	r3, pc, r5, ror #24
4002fbe1:	703c0a3e 	eorsvc	r0, ip, lr, lsr sl
4002fbe5:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
4002fbe9:	63747222 	cmnvs	r4, #536870914	; 0x20000002
4002fbed:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
4002fbf1:	54523e22 	ldrbpl	r3, [r2], #-3618	; 0xfffff1de
4002fbf5:	69742043 	ldmdbvs	r4!, {r0, r1, r6, sp}^
4002fbf9:	7720656d 	strvc	r6, [r0, -sp, ror #10]!
4002fbfd:	206c6c69 	rsbcs	r6, ip, r9, ror #24
4002fc01:	64206562 	strtvs	r6, [r0], #-1378	; 0xfffffa9e
4002fc05:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
4002fc09:	64657961 	strbtvs	r7, [r5], #-2401	; 0xfffff69f
4002fc0d:	72656820 	rsbvc	r6, r5, #32, 16	; 0x200000
4002fc11:	702f3c65 	eorvc	r3, pc, r5, ror #24
4002fc15:	643c0a3e 	ldrtvs	r0, [ip], #-2622	; 0xfffff5c2
4002fc19:	0a3e7669 	beq	40fcd5c5 <__heap_start+0xacd5c5>
4002fc1d:	7475623c 	ldrbtvc	r6, [r5], #-572	; 0xfffffdc4
4002fc21:	206e6f74 	rsbcs	r6, lr, r4, ror pc
4002fc25:	6c636e6f 	stclvs	14, cr6, [r3], #-444	; 0xfffffe44
4002fc29:	3d6b6369 	stclcc	3, cr6, [fp, #-420]!	; 0xfffffe5c
4002fc2d:	54636822 	strbtpl	r6, [r3], #-2082	; 0xfffff7de
4002fc31:	7379536f 	cmnvc	r9, #-1140850687	; 0xbc000001
4002fc35:	3e222928 	vmulcc.f16	s4, s4, s17	; <UNPREDICTABLE>
4002fc39:	20746553 	rsbscs	r6, r4, r3, asr r5
4002fc3d:	20656874 	rsbcs	r6, r5, r4, ror r8
4002fc41:	65646f4e 	strbvs	r6, [r4, #-3918]!	; 0xfffff0b2
4002fc45:	6d697420 	cfstrdvs	mvd7, [r9, #-128]!	; 0xffffff80
4002fc49:	72662065 	rsbvc	r2, r6, #101	; 0x65
4002fc4d:	74206d6f 	strtvc	r6, [r0], #-3439	; 0xfffff291
4002fc51:	52206568 	eorpl	r6, r0, #104, 10	; 0x1a000000
4002fc55:	2f3c4354 	svccs	0x003c4354
4002fc59:	74747562 	ldrbtvc	r7, [r4], #-1378	; 0xfffffa9e
4002fc5d:	0a3e6e6f 	beq	40fcb621 <__heap_start+0xacb621>
4002fc61:	7475623c 	ldrbtvc	r6, [r5], #-572	; 0xfffffdc4
4002fc65:	206e6f74 	rsbcs	r6, lr, r4, ror pc
4002fc69:	6c636e6f 	stclvs	14, cr6, [r3], #-444	; 0xfffffe44
4002fc6d:	3d6b6369 	stclcc	3, cr6, [fp, #-420]!	; 0xfffffe5c
4002fc71:	73797322 	cmnvc	r9, #-2013265920	; 0x88000000
4002fc75:	63486f54 	movtvs	r6, #36692	; 0x8f54
4002fc79:	3e222928 	vmulcc.f16	s4, s4, s17	; <UNPREDICTABLE>
4002fc7d:	20746553 	rsbscs	r6, r4, r3, asr r5
4002fc81:	20656874 	rsbcs	r6, r5, r4, ror r8
4002fc85:	20435452 	subcs	r5, r3, r2, asr r4
4002fc89:	6d6f7266 	sfmvs	f7, 2, [pc, #-408]!	; 4002faf8 <rtc_html+0x1b>
4002fc8d:	65687420 	strbvs	r7, [r8, #-1056]!	; 0xfffffbe0
4002fc91:	646f4e20 	strbtvs	r4, [pc], #-3616	; 4002fc99 <rtc_html+0x1bc>
4002fc95:	69742065 	ldmdbvs	r4!, {r0, r2, r5, r6, sp}^
4002fc99:	2f3c656d 	svccs	0x003c656d
4002fc9d:	74747562 	ldrbtvc	r7, [r4], #-1378	; 0xfffffa9e
4002fca1:	0a3e6e6f 	beq	40fcb665 <__heap_start+0xacb665>
4002fca5:	69642f3c 	stmdbvs	r4!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
4002fca9:	3c0a3e76 	stccc	14, cr3, [sl], {118}	; 0x76
4002fcad:	3c0a3e70 	stccc	14, cr3, [sl], {112}	; 0x70
4002fcb1:	6d726f66 	ldclvs	15, cr6, [r2, #-408]!	; 0xfffffe68
4002fcb5:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
4002fcb9:	726f6622 	rsbvc	r6, pc, #35651584	; 0x2200000
4002fcbd:	0a3e226d 	beq	40fb8679 <__heap_start+0xab8679>
4002fcc1:	62616c3c 	rsbvs	r6, r1, #60, 24	; 0x3c00
4002fcc5:	66206c65 	strtvs	r6, [r0], -r5, ror #24
4002fcc9:	223d726f 	eorscs	r7, sp, #-268435450	; 0xf0000006
4002fccd:	72616c61 	rsbvc	r6, r1, #24832	; 0x6100
4002fcd1:	706e496d 	rsbvc	r4, lr, sp, ror #18
4002fcd5:	3e227475 	mcrcc	4, 1, r7, cr2, cr5, {3}
4002fcd9:	20435452 	subcs	r5, r3, r2, asr r4
4002fcdd:	72616c41 	rsbvc	r6, r1, #16640	; 0x4100
4002fce1:	2f3c3a6d 	svccs	0x003c3a6d
4002fce5:	6562616c 	strbvs	r6, [r2, #-364]!	; 0xfffffe94
4002fce9:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
4002fced:	75706e69 	ldrbvc	r6, [r0, #-3689]!	; 0xfffff197
4002fcf1:	79742074 	ldmdbvc	r4!, {r2, r4, r5, r6, sp}^
4002fcf5:	223d6570 	eorscs	r6, sp, #112, 10	; 0x1c000000
4002fcf9:	65746164 	ldrbvs	r6, [r4, #-356]!	; 0xfffffe9c
4002fcfd:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
4002fd01:	636f6c2d 	cmnvs	pc, #11520	; 0x2d00
4002fd05:	20226c61 	eorcs	r6, r2, r1, ror #24
4002fd09:	223d6469 	eorscs	r6, sp, #1761607680	; 0x69000000
4002fd0d:	72616c61 	rsbvc	r6, r1, #24832	; 0x6100
4002fd11:	706e496d 	rsbvc	r4, lr, sp, ror #18
4002fd15:	20227475 	eorcs	r7, r2, r5, ror r4
4002fd19:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
4002fd1d:	6c61223d 	sfmvs	f2, 2, [r1], #-244	; 0xffffff0c
4002fd21:	496d7261 	stmdbmi	sp!, {r0, r5, r6, r9, ip, sp, lr}^
4002fd25:	7475706e 	ldrbtvc	r7, [r5], #-110	; 0xffffff92
4002fd29:	65722022 	ldrbvs	r2, [r2, #-34]!	; 0xffffffde
4002fd2d:	72697571 	rsbvc	r7, r9, #473956352	; 0x1c400000
4002fd31:	0a3e6465 	beq	40fc8ecd <__heap_start+0xac8ecd>
4002fd35:	62616c3c 	rsbvs	r6, r1, #60, 24	; 0x3c00
4002fd39:	66206c65 	strtvs	r6, [r0], -r5, ror #24
4002fd3d:	223d726f 	eorscs	r7, sp, #-268435450	; 0xf0000006
4002fd41:	626b6863 	rsbvs	r6, fp, #6488064	; 0x630000
4002fd45:	3e22786f 	cdpcc	8, 2, cr7, cr2, cr15, {3}
4002fd49:	62616e45 	rsbvs	r6, r1, #1104	; 0x450
4002fd4d:	2f3c656c 	svccs	0x003c656c
4002fd51:	6562616c 	strbvs	r6, [r2, #-364]!	; 0xfffffe94
4002fd55:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
4002fd59:	75706e69 	ldrbvc	r6, [r0, #-3689]!	; 0xfffff197
4002fd5d:	79742074 	ldmdbvc	r4!, {r2, r4, r5, r6, sp}^
4002fd61:	223d6570 	eorscs	r6, sp, #112, 10	; 0x1c000000
4002fd65:	63656863 	cmnvs	r5, #6488064	; 0x630000
4002fd69:	786f626b 	stmdavc	pc!, {r0, r1, r3, r5, r6, r9, sp, lr}^	; <UNPREDICTABLE>
4002fd6d:	64692022 	strbtvs	r2, [r9], #-34	; 0xffffffde
4002fd71:	6863223d 	stmdavs	r3!, {r0, r2, r3, r4, r5, r9, sp}^
4002fd75:	786f626b 	stmdavc	pc!, {r0, r1, r3, r5, r6, r9, sp, lr}^	; <UNPREDICTABLE>
4002fd79:	616e2022 	cmnvs	lr, r2, lsr #32
4002fd7d:	223d656d 	eorscs	r6, sp, #457179136	; 0x1b400000
4002fd81:	62616e45 	rsbvs	r6, r1, #1104	; 0x450
4002fd85:	3e22656c 	cfsh64cc	mvdx6, mvdx2, #60
4002fd89:	75623c0a 	strbvc	r3, [r2, #-3082]!	; 0xfffff3f6
4002fd8d:	6e6f7474 	mcrvs	4, 3, r7, cr15, cr4, {3}
4002fd91:	70797420 	rsbsvc	r7, r9, r0, lsr #8
4002fd95:	62223d65 	eorvs	r3, r2, #6464	; 0x1940
4002fd99:	6f747475 	svcvs	0x00747475
4002fd9d:	6f20226e 	svcvs	0x0020226e
4002fda1:	696c636e 	stmdbvs	ip!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
4002fda5:	223d6b63 	eorscs	r6, sp, #101376	; 0x18c00
4002fda9:	72616c61 	rsbvc	r6, r1, #24832	; 0x6100
4002fdad:	2229286d 	eorcs	r2, r9, #7143424	; 0x6d0000
4002fdb1:	7465533e 	strbtvc	r5, [r5], #-830	; 0xfffffcc2
4002fdb5:	75622f3c 	strbvc	r2, [r2, #-3900]!	; 0xfffff0c4
4002fdb9:	6e6f7474 	mcrvs	4, 3, r7, cr15, cr4, {3}
4002fdbd:	2f3c0a3e 	svccs	0x003c0a3e
4002fdc1:	6d726f66 	ldclvs	15, cr6, [r2, #-408]!	; 0xfffffe68
4002fdc5:	663c0a3e 			; <UNDEFINED> instruction: 0x663c0a3e
4002fdc9:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
4002fdcd:	753c3e72 	ldrvc	r3, [ip, #-3698]!	; 0xfffff18e
4002fdd1:	6469206c 	strbtvs	r2, [r9], #-108	; 0xffffff94
4002fdd5:	6469223d 	strbtvs	r2, [r9], #-573	; 0xfffffdc3
4002fdd9:	73726556 	cmnvc	r2, #360710144	; 0x15800000
4002fddd:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
4002fde1:	752f3c3e 	strvc	r3, [pc, #-3134]!	; 4002f1ab <rtc_js+0x2e3>
4002fde5:	2f3c3e6c 	svccs	0x003c3e6c
4002fde9:	746f6f66 	strbtvc	r6, [pc], #-3942	; 4002fdf1 <rtc_html+0x314>
4002fded:	0a3e7265 	beq	40fcc789 <__heap_start+0xacc789>
4002fdf1:	7263733c 	rsbvc	r7, r3, #60, 6	; 0xf0000000
4002fdf5:	20747069 	rsbscs	r7, r4, r9, rrx
4002fdf9:	3d637273 	sfmcc	f7, 2, [r3, #-460]!	; 0xfffffe34
4002fdfd:	61747322 	cmnvs	r4, r2, lsr #6
4002fe01:	2e636974 			; <UNDEFINED> instruction: 0x2e636974
4002fe05:	2022736a 	eorcs	r7, r2, sl, ror #6
4002fe09:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
4002fe0d:	6574223d 	ldrbvs	r2, [r4, #-573]!	; 0xfffffdc3
4002fe11:	6a2f7478 	bvs	40c0cff9 <__heap_start+0x70cff9>
4002fe15:	73617661 	cmnvc	r1, #101711872	; 0x6100000
4002fe19:	70697263 	rsbvc	r7, r9, r3, ror #4
4002fe1d:	3c3e2274 	lfmcc	f2, 4, [lr], #-464	; 0xfffffe30
4002fe21:	7263732f 	rsbvc	r7, r3, #-1140850688	; 0xbc000000
4002fe25:	3e747069 	cdpcc	0, 7, cr7, cr4, cr9, {3}
4002fe29:	63733c0a 	cmnvs	r3, #2560	; 0xa00
4002fe2d:	74706972 	ldrbtvc	r6, [r0], #-2418	; 0xfffff68e
4002fe31:	63727320 	cmnvs	r2, #32, 6	; 0x80000000
4002fe35:	6164223d 	cmnvs	r4, sp, lsr r2
4002fe39:	6a2e6574 	bvs	40bc9411 <__heap_start+0x6c9411>
4002fe3d:	74202273 	strtvc	r2, [r0], #-627	; 0xfffffd8d
4002fe41:	3d657079 	stclcc	0, cr7, [r5, #-484]!	; 0xfffffe1c
4002fe45:	78657422 	stmdavc	r5!, {r1, r5, sl, ip, sp, lr}^
4002fe49:	616a2f74 	smcvs	41716	; 0xa2f4
4002fe4d:	63736176 	cmnvs	r3, #-2147483619	; 0x8000001d
4002fe51:	74706972 	ldrbtvc	r6, [r0], #-2418	; 0xfffff68e
4002fe55:	2f3c3e22 	svccs	0x003c3e22
4002fe59:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
4002fe5d:	0a3e7470 	beq	40fcd025 <__heap_start+0xacd025>
4002fe61:	7263733c 	rsbvc	r7, r3, #60, 6	; 0xf0000000
4002fe65:	20747069 	rsbscs	r7, r4, r9, rrx
4002fe69:	3d637273 	sfmcc	f7, 2, [r3, #-460]!	; 0xfffffe34
4002fe6d:	63747222 	cmnvs	r4, #536870914	; 0x20000002
4002fe71:	22736a2e 	rsbscs	r6, r3, #188416	; 0x2e000
4002fe75:	70797420 	rsbsvc	r7, r9, r0, lsr #8
4002fe79:	74223d65 	strtvc	r3, [r2], #-3429	; 0xfffff29b
4002fe7d:	2f747865 	svccs	0x00747865
4002fe81:	6176616a 	cmnvs	r6, sl, ror #2
4002fe85:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
4002fe89:	3e227470 	mcrcc	4, 1, r7, cr2, cr0, {3}
4002fe8d:	63732f3c 	cmnvs	r3, #60, 30	; 0xf0
4002fe91:	74706972 	ldrbtvc	r6, [r0], #-2418	; 0xfffff68e
4002fe95:	733c0a3e 	teqvc	ip, #253952	; 0x3e000
4002fe99:	70697263 	rsbvc	r7, r9, r3, ror #4
4002fe9d:	696c3e74 	stmdbvs	ip!, {r2, r4, r5, r6, r9, sl, fp, ip, sp}^
4002fea1:	29287473 	stmdbcs	r8!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}
4002fea5:	7265763b 	rsbvc	r7, r5, #61865984	; 0x3b00000
4002fea9:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
4002fead:	723b2928 	eorsvc	r2, fp, #40, 18	; 0xa0000
4002feb1:	65726665 	ldrbvs	r6, [r2, #-1637]!	; 0xfffff99b
4002feb5:	29286873 	stmdbcs	r8!, {r0, r1, r4, r5, r6, fp, sp, lr}
4002feb9:	63732f3c 	cmnvs	r3, #60, 30	; 0xf0
4002febd:	74706972 	ldrbtvc	r6, [r0], #-2418	; 0xfffff68e
4002fec1:	2f3c0a3e 	svccs	0x003c0a3e
4002fec5:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
4002fec9:	2f3c0a3e 	svccs	0x003c0a3e
4002fecd:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
4002fed1:	 	cmnvc	r1, #62	; 0x3e

4002fed3 <static_js>:
4002fed3:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
4002fed7:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
4002fedb:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
4002fedf:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
4002fee3:	534a7465 	movtpl	r7, #42085	; 0xa465
4002fee7:	6a284e4f 	bvs	40a4382b <__heap_start+0x54382b>
4002feeb:	296e6f73 	stmdbcs	lr!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
4002feef:	740a7b20 	strvc	r7, [sl], #-2848	; 0xfffff4e0
4002fef3:	7b207972 	blvc	4084e4c3 <__heap_start+0x34e4c3>
4002fef7:	6e6f630a 	cdpvs	3, 6, cr6, cr15, cr10, {0}
4002fefb:	72207473 	eorvc	r7, r0, #1929379840	; 0x73000000
4002feff:	61203d20 			; <UNDEFINED> instruction: 0x61203d20
4002ff03:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
4002ff07:	74656620 	strbtvc	r6, [r5], #-1568	; 0xfffff9e0
4002ff0b:	27286863 	strcs	r6, [r8, -r3, ror #16]!
4002ff0f:	6f736a2f 	svcvs	0x00736a2f
4002ff13:	2b272f6e 	blcs	409fbcd3 <__heap_start+0x4fbcd3>
4002ff17:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
4002ff1b:	66690a29 	strbtvs	r0, [r9], -r9, lsr #20
4002ff1f:	72212820 	eorvc	r2, r1, #32, 16	; 0x200000
4002ff23:	296b6f2e 	stmdbcs	fp!, {r1, r2, r3, r5, r8, r9, sl, fp, sp, lr}^
4002ff27:	740a7b20 	strvc	r7, [sl], #-2848	; 0xfffff4e0
4002ff2b:	776f7268 	strbvc	r7, [pc, -r8, ror #4]!
4002ff2f:	77656e20 	strbvc	r6, [r5, -r0, lsr #28]!
4002ff33:	72724520 	rsbsvc	r4, r2, #32, 10	; 0x8000000
4002ff37:	2728726f 	strcs	r7, [r8, -pc, ror #4]!
4002ff3b:	6f727245 	svcvs	0x00727245
4002ff3f:	0a292772 	beq	40a79d0f <__heap_start+0x579d0f>
4002ff43:	65720a7d 	ldrbvs	r0, [r2, #-2685]!	; 0xfffff583
4002ff47:	6e727574 	mrcvs	5, 3, r7, cr2, cr4, {3}
4002ff4b:	6a2e7220 	bvs	40bcc7d3 <__heap_start+0x6cc7d3>
4002ff4f:	286e6f73 	stmdacs	lr!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
4002ff53:	207d0a29 	rsbscs	r0, sp, r9, lsr #20
4002ff57:	63746163 	cmnvs	r4, #-1073741800	; 0xc0000018
4002ff5b:	65282068 	strvs	r2, [r8, #-104]!	; 0xffffff98
4002ff5f:	726f7272 	rsbvc	r7, pc, #536870919	; 0x20000007
4002ff63:	7d7b2029 	ldclvc	0, cr2, [fp, #-164]!	; 0xffffff5c
4002ff67:	610a7d0a 	tstvs	sl, sl, lsl #26
4002ff6b:	636e7973 	cmnvs	lr, #1884160	; 0x1cc000
4002ff6f:	6e756620 	cdpvs	6, 7, cr6, cr5, cr0, {1}
4002ff73:	6f697463 	svcvs	0x00697463
4002ff77:	696c206e 	stmdbvs	ip!, {r1, r2, r3, r5, r6, sp}^
4002ff7b:	29287473 	stmdbcs	r8!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}
4002ff7f:	630a7b20 	movwvs	r7, #43808	; 0xab20
4002ff83:	74736e6f 	ldrbtvc	r6, [r3], #-3695	; 0xfffff191
4002ff87:	3d206c20 	stccc	12, cr6, [r0, #-128]!	; 0xffffff80
4002ff8b:	61776120 	cmnvs	r7, r0, lsr #2
4002ff8f:	67207469 	strvs	r7, [r0, -r9, ror #8]!
4002ff93:	534a7465 	movtpl	r7, #42085	; 0xa465
4002ff97:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
4002ff9b:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
4002ff9f:	640a2927 	strvs	r2, [sl], #-2343	; 0xfffff6d9
4002ffa3:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
4002ffa7:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
4002ffab:	45746567 	ldrbmi	r6, [r4, #-1383]!	; 0xfffffa99
4002ffaf:	656d656c 	strbvs	r6, [sp, #-1388]!	; 0xfffffa94
4002ffb3:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
4002ffb7:	22286449 	eorcs	r6, r8, #1224736768	; 0x49000000
4002ffbb:	694c6469 	stmdbvs	ip, {r0, r3, r5, r6, sl, sp, lr}^
4002ffbf:	29227473 	stmdbcs	r2!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}
4002ffc3:	6e6e692e 	vmulvs.f16	s13, s28, s29	; <UNPREDICTABLE>
4002ffc7:	54487265 	strbpl	r7, [r8], #-613	; 0xfffffd9b
4002ffcb:	3d204c4d 	stccc	12, cr4, [r0, #-308]!	; 0xfffffecc
4002ffcf:	6c3c2220 	lfmvs	f2, 4, [ip], #-128	; 0xffffff80
4002ffd3:	2b223e69 	blcs	408bf97f <__heap_start+0x3bf97f>
4002ffd7:	696c2e6c 	stmdbvs	ip!, {r2, r3, r5, r6, r9, sl, fp, sp}^
4002ffdb:	6e2e7473 	mcrvs	4, 1, r7, cr14, cr3, {3}
4002ffdf:	2b656d61 	blcs	4198b56b <__ram_end+0x98b56b>
4002ffe3:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 4002ff60 <static_js+0x8d>
4002ffe7:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
4002ffeb:	2b223e69 	blcs	408bf997 <__heap_start+0x3bf997>
4002ffef:	696c2e6c 	stmdbvs	ip!, {r2, r3, r5, r6, r9, sl, fp, sp}^
4002fff3:	6e2e7473 	mcrvs	4, 1, r7, cr14, cr3, {3}
4002fff7:	2e65646f 	cdpcs	4, 6, cr6, cr5, cr15, {3}
4002fffb:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
4002ffff:	2f3c222b 	svccs	0x003c222b
40030003:	3c3e696c 			; <UNDEFINED> instruction: 0x3c3e696c
40030007:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
4003000b:	6c2e6c2b 	stcvs	12, cr6, [lr], #-172	; 0xffffff54
4003000f:	2e747369 	cdpcs	3, 7, cr7, cr4, cr9, {3}
40030013:	65646f6e 	strbvs	r6, [r4, #-3950]!	; 0xfffff092
40030017:	726f702e 	rsbvc	r7, pc, #46	; 0x2e
4003001b:	79742e74 	ldmdbvc	r4!, {r2, r4, r5, r6, r9, sl, fp, sp}^
4003001f:	222b6570 	eorcs	r6, fp, #112, 10	; 0x1c000000
40030023:	696c2f3c 	stmdbvs	ip!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
40030027:	7d0a223e 	sfmvc	f2, 4, [sl, #-248]	; 0xffffff08
4003002b:	7973610a 	ldmdbvc	r3!, {r1, r3, r8, sp, lr}^
4003002f:	6620636e 	strtvs	r6, [r0], -lr, ror #6
40030033:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
40030037:	206e6f69 	rsbcs	r6, lr, r9, ror #30
4003003b:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
4003003f:	286e6f69 	stmdacs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
40030043:	0a7b2029 	beq	41ef80ef <__ram_end+0xef80ef>
40030047:	736e6f63 	cmnvc	lr, #396	; 0x18c
4003004b:	20762074 	rsbscs	r2, r6, r4, ror r0
4003004f:	7761203d 			; <UNDEFINED> instruction: 0x7761203d
40030053:	20746961 	rsbscs	r6, r4, r1, ror #18
40030057:	4a746567 	bmi	41d495fb <__ram_end+0xd495fb>
4003005b:	284e4f53 	stmdacs	lr, {r0, r1, r4, r6, r8, r9, sl, fp, lr}^
4003005f:	72657627 	rsbvc	r7, r5, #40894464	; 0x2700000
40030063:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
40030067:	640a2927 	strvs	r2, [sl], #-2343	; 0xfffff6d9
4003006b:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
4003006f:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
40030073:	45746567 	ldrbmi	r6, [r4, #-1383]!	; 0xfffffa99
40030077:	656d656c 	strbvs	r6, [sp, #-1388]!	; 0xfffffa94
4003007b:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
4003007f:	22286449 	eorcs	r6, r8, #1224736768	; 0x49000000
40030083:	65566469 	ldrbvs	r6, [r6, #-1129]	; 0xfffffb97
40030087:	6f697372 	svcvs	0x00697372
4003008b:	2e29226e 	cdpcs	2, 2, cr2, cr9, cr14, {3}
4003008f:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
40030093:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
40030097:	203d204c 	eorscs	r2, sp, ip, asr #32
4003009b:	696c3c22 	stmdbvs	ip!, {r1, r5, sl, fp, ip, sp}^
4003009f:	2b22563e 	blcs	408c599f <__heap_start+0x3c599f>
400300a3:	65762e76 	ldrbvs	r2, [r6, #-3702]!	; 0xfffff18a
400300a7:	6f697372 	svcvs	0x00697372
400300ab:	3c222b6e 			; <UNDEFINED> instruction: 0x3c222b6e
400300af:	3e696c2f 	cdpcc	12, 6, cr6, cr9, cr15, {1}
400300b3:	3e696c3c 	mcrcc	12, 3, r6, cr9, cr12, {1}
400300b7:	2e762b22 	vaddcs.f64	d18, d6, d18
400300bb:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
400300bf:	61642e64 	cmnvs	r4, r4, ror #28
400300c3:	222b6574 	eorcs	r6, fp, #116, 10	; 0x1d000000
400300c7:	696c2f3c 	stmdbvs	ip!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
400300cb:	696c3c3e 	stmdbvs	ip!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}^
400300cf:	762b223e 			; <UNDEFINED> instruction: 0x762b223e
400300d3:	6975622e 	ldmdbvs	r5!, {r1, r2, r3, r5, r9, sp, lr}^
400300d7:	742e646c 	strtvc	r6, [lr], #-1132	; 0xfffffb94
400300db:	2b656d69 	blcs	4198b687 <__ram_end+0x98b687>
400300df:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 4003005c <static_js+0x189>
400300e3:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
400300e7:	2b223e69 	blcs	408bfa93 <__heap_start+0x3bfa93>
400300eb:	6f622e76 	svcvs	0x00622e76
400300ef:	2b647261 	blcs	4194ca7b <__ram_end+0x94ca7b>
400300f3:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 40030070 <static_js+0x19d>
400300f7:	0a223e69 	beq	408bfaa3 <__heap_start+0x3bfaa3>
400300fb:	75660a7d 	strbvc	r0, [r6, #-2685]!	; 0xfffff583
400300ff:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
40030103:	70206e6f 	eorvc	r6, r0, pc, ror #28
40030107:	2874736f 	ldmdacs	r4!, {r0, r1, r2, r3, r5, r6, r8, r9, ip, sp, lr}^
4003010b:	7b202973 	blvc	4083a6df <__heap_start+0x33a6df>
4003010f:	7465720a 	strbtvc	r7, [r5], #-522	; 0xfffffdf6
40030113:	206e7275 	rsbcs	r7, lr, r5, ror r2
40030117:	63746566 	cmnvs	r4, #427819008	; 0x19800000
4003011b:	2f272868 	svccs	0x00272868
4003011f:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
40030123:	7463612f 	strbtvc	r6, [r3], #-303	; 0xfffffed1
40030127:	276e6f69 	strbcs	r6, [lr, -r9, ror #30]!
4003012b:	0a7b202c 	beq	41ef81e3 <__ram_end+0xef81e3>
4003012f:	6874656d 	ldmdavs	r4!, {r0, r2, r3, r5, r6, r8, sl, sp, lr}^
40030133:	203a646f 	eorscs	r6, sl, pc, ror #8
40030137:	534f5027 	movtpl	r5, #61479	; 0xf027
4003013b:	0a2c2754 	beq	40b39e93 <__heap_start+0x639e93>
4003013f:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
40030143:	3a737265 	bcc	41d0cadf <__ram_end+0xd0cadf>
40030147:	270a7b20 	strcs	r7, [sl, -r0, lsr #22]
4003014b:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
4003014f:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	; 0xfffffe6c
40030153:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
40030157:	27203a27 	strcs	r3, [r0, -r7, lsr #20]!
4003015b:	6c707061 	ldclvs	0, cr7, [r0], #-388	; 0xfffffe7c
4003015f:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
40030163:	2f6e6f69 	svccs	0x006e6f69
40030167:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
4003016b:	2c7d0a27 			; <UNDEFINED> instruction: 0x2c7d0a27
4003016f:	646f620a 	strbtvs	r6, [pc], #-522	; 40030177 <static_js+0x2a4>
40030173:	4a203a79 	bmi	4083eb5f <__heap_start+0x33eb5f>
40030177:	2e4e4f53 	mcrcs	15, 2, r4, cr14, cr3, {2}
4003017b:	69727473 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
4003017f:	6669676e 	strbtvs	r6, [r9], -lr, ror #14
40030183:	29732879 	ldmdbcs	r3!, {r0, r3, r4, r5, r6, fp, sp}^
40030187:	0a297d0a 	beq	40a8f5b7 <__heap_start+0x58f5b7>
4003018b:	75660a7d 	strbvc	r0, [r6, #-2685]!	; 0xfffff583
4003018f:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
40030193:	64206e6f 	strtvs	r6, [r0], #-3695	; 0xfffff191
40030197:	74656c65 	strbtvc	r6, [r5], #-3173	; 0xfffff39b
4003019b:	20297328 	eorcs	r7, r9, r8, lsr #6
4003019f:	65720a7b 	ldrbvs	r0, [r2, #-2683]!	; 0xfffff585
400301a3:	6e727574 	mrcvs	5, 3, r7, cr2, cr4, {3}
400301a7:	74656620 	strbtvc	r6, [r5], #-1568	; 0xfffff9e0
400301ab:	27286863 	strcs	r6, [r8, -r3, ror #16]!
400301af:	6f736a2f 	svcvs	0x00736a2f
400301b3:	63612f6e 	cmnvs	r1, #440	; 0x1b8
400301b7:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
400301bb:	7b202c27 	blvc	4083b25f <__heap_start+0x33b25f>
400301bf:	74656d0a 	strbtvc	r6, [r5], #-3338	; 0xfffff2f6
400301c3:	3a646f68 	bcc	4194bf6b <__ram_end+0x94bf6b>
400301c7:	45442720 	strbmi	r2, [r4, #-1824]	; 0xfffff8e0
400301cb:	4554454c 	ldrbmi	r4, [r4, #-1356]	; 0xfffffab4
400301cf:	680a2c27 	stmdavs	sl, {r0, r1, r2, r5, sl, fp, sp}
400301d3:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
400301d7:	203a7372 	eorscs	r7, sl, r2, ror r3
400301db:	43270a7b 			; <UNDEFINED> instruction: 0x43270a7b
400301df:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
400301e3:	542d746e 	strtpl	r7, [sp], #-1134	; 0xfffffb92
400301e7:	27657079 			; <UNDEFINED> instruction: 0x27657079
400301eb:	6127203a 			; <UNDEFINED> instruction: 0x6127203a
400301ef:	696c7070 	stmdbvs	ip!, {r4, r5, r6, ip, sp, lr}^
400301f3:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
400301f7:	6a2f6e6f 	bvs	40c0bbbb <__heap_start+0x70bbbb>
400301fb:	276e6f73 			; <UNDEFINED> instruction: 0x276e6f73
400301ff:	0a2c7d0a 	beq	40b4f62f <__heap_start+0x64f62f>
40030203:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
40030207:	534a203a 	movtpl	r2, #41018	; 0xa03a
4003020b:	732e4e4f 			; <UNDEFINED> instruction: 0x732e4e4f
4003020f:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
40030213:	79666967 	stmdbvc	r6!, {r0, r1, r2, r5, r6, r8, fp, sp, lr}^
40030217:	0a297328 	beq	40a8cebf <__heap_start+0x58cebf>
4003021b:	7d0a297d 	vstrvc.16	s4, [sl, #-250]	; 0xffffff06	; <UNPREDICTABLE>
4003021f:	6e75660a 	cdpvs	6, 7, cr6, cr5, cr10, {0}
40030223:	6f697463 	svcvs	0x00697463
40030227:	6572206e 	ldrbvs	r2, [r2, #-110]!	; 0xffffff92
4003022b:	746f6f62 	strbtvc	r6, [pc], #-3938	; 40030233 <static_js+0x360>
4003022f:	7b202928 	blvc	4083a6d7 <__heap_start+0x33a6d7>
40030233:	736f700a 	cmnvc	pc, #10
40030237:	207b2874 	rsbscs	r2, fp, r4, ror r8
4003023b:	6f626572 	svcvs	0x00626572
4003023f:	203a746f 	eorscs	r7, sl, pc, ror #8
40030243:	297d2031 	ldmdbcs	sp!, {r0, r4, r5, sp}^
40030247:	660a7d0a 	strvs	r7, [sl], -sl, lsl #26
4003024b:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
4003024f:	206e6f69 	rsbcs	r6, lr, r9, ror #30
40030253:	61636f6c 	cmnvs	r3, ip, ror #30
40030257:	29286574 	stmdbcs	r8!, {r2, r4, r5, r6, r8, sl, sp, lr}
4003025b:	760a7b20 	strvc	r7, [sl], -r0, lsr #22
4003025f:	62207261 	eorvs	r7, r0, #268435462	; 0x10000006
40030263:	64203d20 	strtvs	r3, [r0], #-3360	; 0xfffff2e0
40030267:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
4003026b:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
4003026f:	45746567 	ldrbmi	r6, [r4, #-1383]!	; 0xfffffa99
40030273:	656d656c 	strbvs	r6, [sp, #-1388]!	; 0xfffffa94
40030277:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
4003027b:	27286449 	strcs	r6, [r8, -r9, asr #8]!
4003027f:	61636f6c 	cmnvs	r3, ip, ror #30
40030283:	75426574 	strbvc	r6, [r2, #-1396]	; 0xfffffa8c
40030287:	6e6f7474 	mcrvs	4, 3, r7, cr15, cr4, {3}
4003028b:	0a3b2927 	beq	40efa72f <__heap_start+0x9fa72f>
4003028f:	28206669 	stmdacs	r0!, {r0, r3, r5, r6, r9, sl, sp, lr}
40030293:	6c632e62 	stclvs	14, cr2, [r3], #-392	; 0xfffffe78
40030297:	4c737361 	ldclmi	3, cr7, [r3], #-388	; 0xfffffe7c
4003029b:	2e747369 	cdpcs	3, 7, cr7, cr4, cr9, {3}
4003029f:	746e6f63 	strbtvc	r6, [lr], #-3939	; 0xfffff09d
400302a3:	736e6961 	cmnvc	lr, #1589248	; 0x184000
400302a7:	6e692728 	cdpvs	7, 6, cr2, cr9, cr8, {1}
400302ab:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
400302af:	29276576 	stmdbcs	r7!, {r1, r2, r4, r5, r6, r8, sl, sp, lr}
400302b3:	0a7b2029 	beq	41ef835f <__ram_end+0xef835f>
400302b7:	6c632e62 	stclvs	14, cr2, [r3], #-392	; 0xfffffe78
400302bb:	4c737361 	ldclmi	3, cr7, [r3], #-388	; 0xfffffe7c
400302bf:	2e747369 	cdpcs	3, 7, cr7, cr4, cr9, {3}
400302c3:	6f6d6572 	svcvs	0x006d6572
400302c7:	27286576 			; <UNDEFINED> instruction: 0x27286576
400302cb:	63616e69 	cmnvs	r1, #1680	; 0x690
400302cf:	65766974 	ldrbvs	r6, [r6, #-2420]!	; 0xfffff68c
400302d3:	620a2927 	andvs	r2, sl, #638976	; 0x9c000
400302d7:	616c632e 	cmnvs	ip, lr, lsr #6
400302db:	694c7373 	stmdbvs	ip, {r0, r1, r4, r5, r6, r8, r9, ip, sp, lr}^
400302df:	612e7473 			; <UNDEFINED> instruction: 0x612e7473
400302e3:	27286464 	strcs	r6, [r8, -r4, ror #8]!
400302e7:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
400302eb:	29276576 	stmdbcs	r7!, {r1, r2, r4, r5, r6, r8, sl, sp, lr}
400302ef:	692e620a 	stmdbvs	lr!, {r1, r3, r9, sp, lr}
400302f3:	72656e6e 	rsbvc	r6, r5, #1760	; 0x6e0
400302f7:	4c4d5448 	cfstrdmi	mvd5, [sp], {72}	; 0x48
400302fb:	27203d20 	strcs	r3, [r0, -r0, lsr #26]!
400302ff:	61636f4c 	cmnvs	r3, ip, asr #30
40030303:	4f206574 	svcmi	0x00206574
40030307:	700a276e 	andvc	r2, sl, lr, ror #14
4003030b:	2874736f 	ldmdacs	r4!, {r0, r1, r2, r3, r5, r6, r8, r9, ip, sp, lr}^
4003030f:	6469207b 	strbtvs	r2, [r9], #-123	; 0xffffff85
40030313:	69746e65 	ldmdbvs	r4!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
40030317:	203a7966 	eorscs	r7, sl, r6, ror #18
4003031b:	297d2031 	ldmdbcs	sp!, {r0, r4, r5, sp}^
4003031f:	65207d0a 	strvs	r7, [r0, #-3338]!	; 0xfffff2f6
40030323:	2065736c 	rsbcs	r7, r5, ip, ror #6
40030327:	2e620a7b 			; <UNDEFINED> instruction: 0x2e620a7b
4003032b:	73616c63 	cmnvc	r1, #25344	; 0x6300
4003032f:	73694c73 	cmnvc	r9, #29440	; 0x7300
40030333:	65722e74 	ldrbvs	r2, [r2, #-3700]!	; 0xfffff18c
40030337:	65766f6d 	ldrbvs	r6, [r6, #-3949]!	; 0xfffff093
4003033b:	63612728 	cmnvs	r1, #40, 14	; 0xa00000
4003033f:	65766974 	ldrbvs	r6, [r6, #-2420]!	; 0xfffff68c
40030343:	620a2927 	andvs	r2, sl, #638976	; 0x9c000
40030347:	616c632e 	cmnvs	ip, lr, lsr #6
4003034b:	694c7373 	stmdbvs	ip, {r0, r1, r4, r5, r6, r8, r9, ip, sp, lr}^
4003034f:	612e7473 			; <UNDEFINED> instruction: 0x612e7473
40030353:	27286464 	strcs	r6, [r8, -r4, ror #8]!
40030357:	63616e69 	cmnvs	r1, #1680	; 0x690
4003035b:	65766974 	ldrbvs	r6, [r6, #-2420]!	; 0xfffff68c
4003035f:	620a2927 	andvs	r2, sl, #638976	; 0x9c000
40030363:	6e6e692e 	vmulvs.f16	s13, s28, s29	; <UNPREDICTABLE>
40030367:	54487265 	strbpl	r7, [r8], #-613	; 0xfffffd9b
4003036b:	3d204c4d 	stccc	12, cr4, [r0, #-308]!	; 0xfffffecc
4003036f:	6f4c2720 	svcvs	0x004c2720
40030373:	65746163 	ldrbvs	r6, [r4, #-355]!	; 0xfffffe9d
40030377:	66664f20 	strbtvs	r4, [r6], -r0, lsr #30
4003037b:	6f700a27 	svcvs	0x00700a27
4003037f:	7b287473 	blvc	40a4d553 <__heap_start+0x54d553>
40030383:	65646920 	strbvs	r6, [r4, #-2336]!	; 0xfffff6e0
40030387:	6669746e 	strbtvs	r7, [r9], -lr, ror #8
4003038b:	30203a79 	eorcc	r3, r0, r9, ror sl
4003038f:	0a297d20 	beq	40a8f817 <__heap_start+0x58f817>
40030393:	007d0a7d 	rsbseq	r0, sp, sp, ror sl

40030397 <time_html>:
40030397:	4f44213c 	svcmi	0x0044213c
4003039b:	50595443 	subspl	r5, r9, r3, asr #8
4003039f:	74682045 	strbtvc	r2, [r8], #-69	; 0xffffffbb
400303a3:	0a3e6c6d 	beq	40fcb55f <__heap_start+0xacb55f>
400303a7:	6d74683c 	ldclvs	8, cr6, [r4, #-240]!	; 0xffffff10
400303ab:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
400303af:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
400303b3:	696c3c3e 	stmdbvs	ip!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}^
400303b7:	72206b6e 	eorvc	r6, r0, #112640	; 0x1b800
400303bb:	223d6c65 	eorscs	r6, sp, #25856	; 0x6500
400303bf:	6c797473 	cfldrdvs	mvd7, [r9], #-460	; 0xfffffe34
400303c3:	65687365 	strbvs	r7, [r8, #-869]!	; 0xfffffc9b
400303c7:	20227465 	eorcs	r7, r2, r5, ror #8
400303cb:	66657268 	strbtvs	r7, [r5], -r8, ror #4
400303cf:	7473223d 	ldrbtvc	r2, [r3], #-573	; 0xfffffdc3
400303d3:	73656c79 	cmnvc	r5, #30976	; 0x7900
400303d7:	7373632e 	cmnvc	r3, #-1207959552	; 0xb8000000
400303db:	3e2f2022 	cdpcc	0, 2, cr2, cr15, cr2, {1}
400303df:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
400303e3:	4e3e656c 	cdpmi	5, 3, cr6, cr14, cr12, {3}
400303e7:	2065646f 	rsbcs	r6, r5, pc, ror #8
400303eb:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
400303ef:	69742f3c 	ldmdbvs	r4!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
400303f3:	3e656c74 	mcrcc	12, 3, r6, cr5, cr4, {3}
400303f7:	65682f3c 	strbvs	r2, [r8, #-3900]!	; 0xfffff0c4
400303fb:	0a3e6461 	beq	40fc9587 <__heap_start+0xac9587>
400303ff:	646f623c 	strbtvs	r6, [pc], #-572	; 40030407 <time_html+0x70>
40030403:	3c0a3e79 	stccc	14, cr3, [sl], {121}	; 0x79
40030407:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
4003040b:	3c3e7265 	lfmcc	f7, 4, [lr], #-404	; 0xfffffe6c
4003040f:	69206c75 	stmdbvs	r0!, {r0, r2, r4, r5, r6, sl, fp, sp, lr}
40030413:	69223d64 	stmdbvs	r2!, {r2, r5, r6, r8, sl, fp, ip, sp}
40030417:	73694c64 	cmnvc	r9, #100, 24	; 0x6400
4003041b:	3c3e2274 	lfmcc	f2, 4, [lr], #-464	; 0xfffffe30
4003041f:	3e6c752f 	cdpcc	5, 6, cr7, cr12, cr15, {1}
40030423:	65682f3c 	strbvs	r2, [r8, #-3900]!	; 0xfffff0c4
40030427:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
4003042b:	703c0a3e 	eorsvc	r0, ip, lr, lsr sl
4003042f:	75623c3e 	strbvc	r3, [r2, #-3134]!	; 0xfffff3c2
40030433:	6e6f7474 	mcrvs	4, 3, r7, cr15, cr4, {3}
40030437:	636e6f20 	cmnvs	lr, #32, 30	; 0x80
4003043b:	6b63696c 	blvs	4190a9f3 <__ram_end+0x90a9f3>
4003043f:	6572223d 	ldrbvs	r2, [r2, #-573]!	; 0xfffffdc3
40030443:	73657266 	cmnvc	r5, #1610612742	; 0x60000006
40030447:	22292868 	eorcs	r2, r9, #104, 16	; 0x680000
4003044b:	6665523e 			; <UNDEFINED> instruction: 0x6665523e
4003044f:	68736572 	ldmdavs	r3!, {r1, r4, r5, r6, r8, sl, sp, lr}^
40030453:	75622f3c 	strbvc	r2, [r2, #-3900]!	; 0xfffff0c4
40030457:	6e6f7474 	mcrvs	4, 3, r7, cr15, cr4, {3}
4003045b:	702f3c3e 	eorvc	r3, pc, lr, lsr ip	; <UNPREDICTABLE>
4003045f:	703c0a3e 	eorsvc	r0, ip, lr, lsr sl
40030463:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
40030467:	646f6e22 	strbtvs	r6, [pc], #-3618	; 4003046f <time_html+0xd8>
4003046b:	6d695465 	cfstrdvs	mvd5, [r9, #-404]!	; 0xfffffe6c
4003046f:	4e3e2265 	cdpmi	2, 3, cr2, cr14, cr5, {3}
40030473:	2065646f 	rsbcs	r6, r5, pc, ror #8
40030477:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
4003047b:	6c697720 	stclvs	7, cr7, [r9], #-128	; 0xffffff80
4003047f:	6562206c 	strbvs	r2, [r2, #-108]!	; 0xffffff94
40030483:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
40030487:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
4003048b:	68206465 	stmdavs	r0!, {r0, r2, r5, r6, sl, sp, lr}
4003048f:	3c657265 	sfmcc	f7, 2, [r5], #-404	; 0xfffffe6c
40030493:	0a3e702f 	beq	40fcc557 <__heap_start+0xacc557>
40030497:	3c3e703c 	ldccc	0, cr7, [lr], #-240	; 0xffffff10
4003049b:	74747562 	ldrbtvc	r7, [r4], #-1378	; 0xfffffa9e
4003049f:	6f206e6f 	svcvs	0x00206e6f
400304a3:	696c636e 	stmdbvs	ip!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
400304a7:	223d6b63 	eorscs	r6, sp, #101376	; 0x18c00
400304ab:	636e7973 	cmnvs	lr, #1884160	; 0x1cc000
400304af:	68746957 	ldmdavs	r4!, {r0, r1, r2, r4, r6, r8, fp, sp, lr}^
400304b3:	61636f4c 	cmnvs	r3, ip, asr #30
400304b7:	6d69546c 	cfstrdvs	mvd5, [r9, #-432]!	; 0xfffffe50
400304bb:	22292865 	eorcs	r2, r9, #6619136	; 0x650000
400304bf:	6e79533e 	mrcvs	3, 3, r5, cr9, cr14, {1}
400304c3:	69772063 	ldmdbvs	r7!, {r0, r1, r5, r6, sp}^
400304c7:	4c206874 	stcmi	8, cr6, [r0], #-464	; 0xfffffe30
400304cb:	6c61636f 	stclvs	3, cr6, [r1], #-444	; 0xfffffe44
400304cf:	6d695420 	cfstrdvs	mvd5, [r9, #-128]!	; 0xffffff80
400304d3:	622f3c65 	eorvs	r3, pc, #25856	; 0x6500
400304d7:	6f747475 	svcvs	0x00747475
400304db:	2f3c3e6e 	svccs	0x003c3e6e
400304df:	3c0a3e70 	stccc	14, cr3, [sl], {112}	; 0x70
400304e3:	746f6f66 	strbtvc	r6, [pc], #-3942	; 400304eb <time_html+0x154>
400304e7:	3c3e7265 	lfmcc	f7, 4, [lr], #-404	; 0xfffffe6c
400304eb:	69206c75 	stmdbvs	r0!, {r0, r2, r4, r5, r6, sl, fp, sp, lr}
400304ef:	69223d64 	stmdbvs	r2!, {r2, r5, r6, r8, sl, fp, ip, sp}
400304f3:	72655664 	rsbvc	r5, r5, #100, 12	; 0x6400000
400304f7:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
400304fb:	2f3c3e22 	svccs	0x003c3e22
400304ff:	3c3e6c75 	ldccc	12, cr6, [lr], #-468	; 0xfffffe2c
40030503:	6f6f662f 	svcvs	0x006f662f
40030507:	3e726574 	mrccc	5, 3, r6, cr2, cr4, {3}
4003050b:	63733c0a 	cmnvs	r3, #2560	; 0xa00
4003050f:	74706972 	ldrbtvc	r6, [r0], #-2418	; 0xfffff68e
40030513:	63727320 	cmnvs	r2, #32, 6	; 0x80000000
40030517:	7473223d 	ldrbtvc	r2, [r3], #-573	; 0xfffffdc3
4003051b:	63697461 	cmnvs	r9, #1627389952	; 0x61000000
4003051f:	22736a2e 	rsbscs	r6, r3, #188416	; 0x2e000
40030523:	70797420 	rsbsvc	r7, r9, r0, lsr #8
40030527:	74223d65 	strtvc	r3, [r2], #-3429	; 0xfffff29b
4003052b:	2f747865 	svccs	0x00747865
4003052f:	6176616a 	cmnvs	r6, sl, ror #2
40030533:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
40030537:	3e227470 	mcrcc	4, 1, r7, cr2, cr0, {3}
4003053b:	63732f3c 	cmnvs	r3, #60, 30	; 0xf0
4003053f:	74706972 	ldrbtvc	r6, [r0], #-2418	; 0xfffff68e
40030543:	733c0a3e 	teqvc	ip, #253952	; 0x3e000
40030547:	70697263 	rsbvc	r7, r9, r3, ror #4
4003054b:	72732074 	rsbsvc	r2, r3, #116	; 0x74
4003054f:	64223d63 	strtvs	r3, [r2], #-3427	; 0xfffff29d
40030553:	2e657461 	cdpcs	4, 6, cr7, cr5, cr1, {3}
40030557:	2022736a 	eorcs	r7, r2, sl, ror #6
4003055b:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
4003055f:	6574223d 	ldrbvs	r2, [r4, #-573]!	; 0xfffffdc3
40030563:	6a2f7478 	bvs	40c0d74b <__heap_start+0x70d74b>
40030567:	73617661 	cmnvc	r1, #101711872	; 0x6100000
4003056b:	70697263 	rsbvc	r7, r9, r3, ror #4
4003056f:	3c3e2274 	lfmcc	f2, 4, [lr], #-464	; 0xfffffe30
40030573:	7263732f 	rsbvc	r7, r3, #-1140850688	; 0xbc000000
40030577:	3e747069 	cdpcc	0, 7, cr7, cr4, cr9, {3}
4003057b:	63733c0a 	cmnvs	r3, #2560	; 0xa00
4003057f:	74706972 	ldrbtvc	r6, [r0], #-2418	; 0xfffff68e
40030583:	63727320 	cmnvs	r2, #32, 6	; 0x80000000
40030587:	6974223d 	ldmdbvs	r4!, {r0, r2, r3, r4, r5, r9, sp}^
4003058b:	6a2e656d 	bvs	40bc9b47 <__heap_start+0x6c9b47>
4003058f:	74202273 	strtvc	r2, [r0], #-627	; 0xfffffd8d
40030593:	3d657079 	stclcc	0, cr7, [r5, #-484]!	; 0xfffffe1c
40030597:	78657422 	stmdavc	r5!, {r1, r5, sl, ip, sp, lr}^
4003059b:	616a2f74 	smcvs	41716	; 0xa2f4
4003059f:	63736176 	cmnvs	r3, #-2147483619	; 0x8000001d
400305a3:	74706972 	ldrbtvc	r6, [r0], #-2418	; 0xfffff68e
400305a7:	2f3c3e22 	svccs	0x003c3e22
400305ab:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
400305af:	0a3e7470 	beq	40fcd777 <__heap_start+0xacd777>
400305b3:	7263733c 	rsbvc	r7, r3, #60, 6	; 0xf0000000
400305b7:	3e747069 	cdpcc	0, 7, cr7, cr4, cr9, {3}
400305bb:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
400305bf:	763b2928 	ldrtvc	r2, [fp], -r8, lsr #18
400305c3:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
400305c7:	29286e6f 	stmdbcs	r8!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
400305cb:	6665723b 			; <UNDEFINED> instruction: 0x6665723b
400305cf:	68736572 	ldmdavs	r3!, {r1, r4, r5, r6, r8, sl, sp, lr}^
400305d3:	2f3c2928 	svccs	0x003c2928
400305d7:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
400305db:	0a3e7470 	beq	40fcd7a3 <__heap_start+0xacd7a3>
400305df:	6f622f3c 	svcvs	0x00622f3c
400305e3:	0a3e7964 	beq	40fceb7b <__heap_start+0xaceb7b>
400305e7:	74682f3c 	strbtvc	r2, [r8], #-3900	; 0xfffff0c4
400305eb:	003e6c6d 	eorseq	r6, lr, sp, ror #24
400305ef:	74726f50 	ldrbtvc	r6, [r2], #-3920	; 0xfffff0b0
400305f3:	00752520 	rsbseq	r2, r5, r0, lsr #10
400305f7:	25207325 	strcs	r7, [r0, #-805]!	; 0xfffffcdb
400305fb:	75252073 	strvc	r2, [r5, #-115]!	; 0xffffff8d
400305ff:	00732520 	rsbseq	r2, r3, r0, lsr #10

40030603 <artnet::NODE_ID>:
40030603:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
40030607:	0074654e 	rsbseq	r6, r4, lr, asr #10
4003060b:	6b6e5500 	blvs	41bc5a13 <__ram_end+0xbc5a13>
4003060f:	6e776f6e 	cdpvs	15, 7, cr6, cr7, cr14, {3}
40030613:	70655220 	rsbvc	r5, r5, r0, lsr #4
40030617:	2074726f 	rsbscs	r7, r4, pc, ror #4
4003061b:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
4003061f:	6f6f4200 	svcvs	0x006f4200
40030623:	20646574 	rsbcs	r6, r4, r4, ror r5
40030627:	64206e69 	strtvs	r6, [r0], #-3689	; 0xfffff197
4003062b:	67756265 	ldrbvs	r6, [r5, -r5, ror #4]!
4003062f:	646f6d20 	strbtvs	r6, [pc], #-3360	; 40030637 <artnet::NODE_ID+0x34>
40030633:	4f282065 	svcmi	0x00282065
40030637:	20796c6e 	rsbscs	r6, r9, lr, ror #24
4003063b:	64657375 	strbtvs	r7, [r5], #-885	; 0xfffffc8b
4003063f:	206e6920 	rsbcs	r6, lr, r0, lsr #18
40030643:	65766564 	ldrbvs	r6, [r6, #-1380]!	; 0xfffffa9c
40030647:	6d706f6c 	ldclvs	15, cr6, [r0, #-432]!	; 0xfffffe50
4003064b:	29746e65 	ldmdbcs	r4!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
4003064f:	776f5000 	strbvc	r5, [pc, -r0]!
40030653:	4f207265 	svcmi	0x00207265
40030657:	6554206e 	ldrbvs	r2, [r4, #-110]	; 0xffffff92
4003065b:	20737473 	rsbscs	r7, r3, r3, ror r4
4003065f:	63637573 	cmnvs	r3, #482344960	; 0x1cc00000
40030663:	66737365 	ldrbtvs	r7, [r3], -r5, ror #6
40030667:	48006c75 	stmdami	r0, {r0, r2, r4, r5, r6, sl, fp, sp, lr}
4003066b:	77647261 	strbvc	r7, [r4, -r1, ror #4]!
4003066f:	20657261 	rsbcs	r7, r5, r1, ror #4
40030673:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
40030677:	61662073 	smcvs	25091	; 0x6203
4003067b:	64656c69 	strbtvs	r6, [r5], #-3177	; 0xfffff397
4003067f:	20746120 	rsbscs	r6, r4, r0, lsr #2
40030683:	65776f50 	ldrbvs	r6, [r7, #-3920]!	; 0xfffff0b0
40030687:	6e4f2072 	mcrvs	0, 2, r2, cr15, cr2, {3}
4003068b:	73614c00 	cmnvc	r1, #0, 24
4003068f:	44552074 	ldrbmi	r2, [r5], #-116	; 0xffffff8c
40030693:	72662050 	rsbvc	r2, r6, #80	; 0x50
40030697:	4e206d6f 	cdpmi	13, 2, cr6, cr0, cr15, {3}
4003069b:	2065646f 	rsbcs	r6, r5, pc, ror #8
4003069f:	6c696166 	stfvse	f6, [r9], #-408	; 0xfffffe68
400306a3:	64206465 	strtvs	r6, [r0], #-1125	; 0xfffffb9b
400306a7:	74206575 	strtvc	r6, [r0], #-1397	; 0xfffffa8b
400306ab:	7274206f 	rsbsvc	r2, r4, #111	; 0x6f
400306af:	61636e75 	smcvs	14053	; 0x36e5
400306b3:	20646574 	rsbcs	r6, r4, r4, ror r5
400306b7:	676e656c 	strbvs	r6, [lr, -ip, ror #10]!
400306bb:	55006874 	strpl	r6, [r0, #-2164]	; 0xfffff78c
400306bf:	6c62616e 	stfvse	f6, [r2], #-440	; 0xfffffe48
400306c3:	6f742065 	svcvs	0x00742065
400306c7:	65646920 	strbvs	r6, [r4, #-2336]!	; 0xfffff6e0
400306cb:	6669746e 	strbtvs	r7, [r9], -lr, ror #8
400306cf:	616c2079 	smcvs	49673	; 0xc209
400306d3:	55207473 	strpl	r7, [r0, #-1139]!	; 0xfffffb8d
400306d7:	74205044 	strtvc	r5, [r0], #-68	; 0xffffffbc
400306db:	736e6172 	cmnvc	lr, #-2147483620	; 0x8000001c
400306df:	7373696d 	cmnvc	r3, #1785856	; 0x1b4000
400306e3:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
400306e7:	616e5500 	cmnvs	lr, r0, lsl #10
400306eb:	20656c62 	rsbcs	r6, r5, r2, ror #24
400306ef:	6f206f74 	svcvs	0x00206f74
400306f3:	206e6570 	rsbcs	r6, lr, r0, ror r5
400306f7:	20706455 	rsbscs	r6, r0, r5, asr r4
400306fb:	6b636f53 	blvs	4190c44f <__ram_end+0x90c44f>
400306ff:	69207465 	stmdbvs	r0!, {r0, r2, r5, r6, sl, ip, sp, lr}
40030703:	616c206e 	cmnvs	ip, lr, rrx
40030707:	74207473 	strtvc	r7, [r0], #-1139	; 0xfffffb8d
4003070b:	736e6172 	cmnvc	lr, #-2147483620	; 0x8000001c
4003070f:	7373696d 	cmnvc	r3, #1785856	; 0x1b4000
40030713:	006e6f69 	rsbeq	r6, lr, r9, ror #30
40030717:	726f6853 	rsbvc	r6, pc, #5439488	; 0x530000
4003071b:	614e2074 	hvcvs	57860	; 0xe204
4003071f:	7020656d 	eorvc	r6, r0, sp, ror #10
40030723:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
40030727:	696d6d61 	stmdbvs	sp!, {r0, r5, r6, r8, sl, fp, sp, lr}^
4003072b:	5b20676e 	blpl	4084a4eb <__heap_start+0x34a4eb>
4003072f:	41747241 	cmnmi	r4, r1, asr #4
40030733:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0xfffffb9c
40030737:	205d7373 	subscs	r7, sp, r3, ror r3
4003073b:	20736177 	rsbscs	r6, r3, r7, ror r1
4003073f:	63637573 	cmnvs	r3, #482344960	; 0x1cc00000
40030743:	66737365 	ldrbtvs	r7, [r3], -r5, ror #6
40030747:	002e6c75 	eoreq	r6, lr, r5, ror ip
4003074b:	676e6f4c 	strbvs	r6, [lr, -ip, asr #30]!
4003074f:	6d614e20 	stclvs	14, cr4, [r1, #-128]!	; 0xffffff80
40030753:	72702065 	rsbsvc	r2, r0, #101	; 0x65
40030757:	6172676f 	cmnvs	r2, pc, ror #14
4003075b:	6e696d6d 	cdpvs	13, 6, cr6, cr9, cr13, {3}
4003075f:	415b2067 	cmpmi	fp, r7, rrx
40030763:	64417472 	strbvs	r7, [r1], #-1138	; 0xfffffb8e
40030767:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
4003076b:	77205d73 			; <UNDEFINED> instruction: 0x77205d73
4003076f:	73207361 			; <UNDEFINED> instruction: 0x73207361
40030773:	65636375 	strbvs	r6, [r3, #-885]!	; 0xfffffc8b
40030777:	75667373 	strbvc	r7, [r6, #-883]!	; 0xfffffc8d
4003077b:	44002e6c 	strmi	r2, [r0], #-3692	; 0xfffff194
4003077f:	3135584d 	teqcc	r5, sp, asr #16
40030783:	65722032 	ldrbvs	r2, [r2, #-50]!	; 0xffffffce
40030787:	76696563 	strbtvc	r6, [r9], -r3, ror #10
4003078b:	72652065 	rsbvc	r2, r5, #101	; 0x65
4003078f:	73726f72 	cmnvc	r2, #456	; 0x1c8
40030793:	74656420 	strbtvc	r6, [r5], #-1056	; 0xfffffbe0
40030797:	65746365 	ldrbvs	r6, [r4, #-869]!	; 0xfffffc9b
4003079b:	52002e64 	andpl	r2, r0, #100, 28	; 0x640
4003079f:	6f206e61 	svcvs	0x00206e61
400307a3:	6f207475 	svcvs	0x00207475
400307a7:	6e692066 	cdpvs	0, 6, cr2, cr9, cr6, {3}
400307ab:	6e726574 	mrcvs	5, 3, r6, cr2, cr4, {3}
400307af:	44206c61 	strtmi	r6, [r0], #-3169	; 0xfffff39f
400307b3:	7420584d 	strtvc	r5, [r0], #-2125	; 0xfffff7b3
400307b7:	736e6172 	cmnvc	lr, #-2147483620	; 0x8000001c
400307bb:	2074696d 	rsbscs	r6, r4, sp, ror #18
400307bf:	66667562 	strbtvs	r7, [r6], -r2, ror #10
400307c3:	2e737265 	cdpcs	2, 7, cr7, cr3, cr5, {3}
400307c7:	6e615200 	cdpvs	2, 6, cr5, cr1, cr0, {0}
400307cb:	74756f20 	ldrbtvc	r6, [r5], #-3872	; 0xfffff0e0
400307cf:	20666f20 	rsbcs	r6, r6, r0, lsr #30
400307d3:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
400307d7:	6c616e72 	stclvs	14, cr6, [r1], #-456	; 0xfffffe38
400307db:	584d4420 	stmdapl	sp, {r5, sl, lr}^
400307df:	20785220 	rsbscs	r5, r8, r0, lsr #4
400307e3:	66667562 	strbtvs	r7, [r6], -r2, ror #10
400307e7:	2e737265 	cdpcs	2, 7, cr7, cr3, cr5, {3}
400307eb:	20785200 	rsbscs	r5, r8, r0, lsl #4
400307ef:	76696e55 			; <UNDEFINED> instruction: 0x76696e55
400307f3:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
400307f7:	69777320 	ldmdbvs	r7!, {r5, r8, r9, ip, sp, lr}^
400307fb:	65686374 	strbvs	r6, [r8, #-884]!	; 0xfffffc8c
400307ff:	6f632073 	svcvs	0x00632073
40030803:	696c666e 	stmdbvs	ip!, {r1, r2, r3, r5, r6, r9, sl, sp, lr}^
40030807:	002e7463 	eoreq	r7, lr, r3, ror #8
4003080b:	646f7250 	strbtvs	r7, [pc], #-592	; 40030813 <artnet::NODE_ID+0x210>
4003080f:	20746375 	rsbscs	r6, r4, r5, ror r3
40030813:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
40030817:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
4003081b:	6f697461 	svcvs	0x00697461
4003081f:	6f64206e 	svcvs	0x0064206e
40030823:	6e207365 	cdpvs	3, 2, cr7, cr0, cr5, {3}
40030827:	6d20746f 	cfstrsvs	mvf7, [r0, #-444]!	; 0xfffffe44
4003082b:	68637461 	stmdavs	r3!, {r0, r5, r6, sl, ip, sp, lr}^
4003082f:	72696620 	rsbvc	r6, r9, #32, 12	; 0x2000000
40030833:	7261776d 	rsbvc	r7, r1, #28573696	; 0x1b40000
40030837:	44002e65 	strmi	r2, [r0], #-3685	; 0xfffff19b
4003083b:	6f20584d 	svcvs	0x0020584d
4003083f:	75707475 	ldrbvc	r7, [r0, #-1141]!	; 0xfffffb8b
40030843:	68732074 	ldmdavs	r3!, {r2, r4, r5, r6, sp}^
40030847:	2074726f 	rsbscs	r7, r4, pc, ror #4
4003084b:	65746564 	ldrbvs	r6, [r4, #-1380]!	; 0xfffffa9c
4003084f:	64657463 	strbtvs	r7, [r5], #-1123	; 0xfffffb9d
40030853:	6553202e 	ldrbvs	r2, [r3, #-46]	; 0xffffffd2
40030857:	6f472065 	svcvs	0x00472065
4003085b:	754f646f 	strbvc	r6, [pc, #-1135]	; 400303f4 <time_html+0x5d>
4003085f:	74757074 	ldrbtvc	r7, [r5], #-116	; 0xffffff8c
40030863:	65696620 	strbvs	r6, [r9, #-1568]!	; 0xfffff9e0
40030867:	002e646c 	eoreq	r6, lr, ip, ror #8
4003086b:	7473614c 	ldrbtvc	r6, [r3], #-332	; 0xfffffeb4
4003086f:	74746120 	ldrbtvc	r6, [r4], #-288	; 0xfffffee0
40030873:	74706d65 	ldrbtvc	r6, [r0], #-3429	; 0xfffff29b
40030877:	206f7420 	rsbcs	r7, pc, r0, lsr #8
4003087b:	6f6c7075 	svcvs	0x006c7075
4003087f:	6e206461 	cdpvs	4, 2, cr6, cr0, cr1, {3}
40030883:	66207765 	strtvs	r7, [r0], -r5, ror #14
40030887:	776d7269 	strbvc	r7, [sp, -r9, ror #4]!
4003088b:	20657261 	rsbcs	r7, r5, r1, ror #4
4003088f:	6c696166 	stfvse	f6, [r9], #-408	; 0xfffffe68
40030893:	002e6465 	eoreq	r6, lr, r5, ror #8
40030897:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
4003089b:	61686320 	cmnvs	r8, r0, lsr #6
4003089f:	6465676e 	strbtvs	r6, [r5], #-1902	; 0xfffff892
400308a3:	69777320 	ldmdbvs	r7!, {r5, r8, r9, ip, sp, lr}^
400308a7:	20686374 	rsbcs	r6, r8, r4, ror r3
400308ab:	74746573 	ldrbtvc	r6, [r4], #-1395	; 0xfffffa8d
400308af:	73676e69 	cmnvc	r7, #1680	; 0x690
400308b3:	65687720 	strbvs	r7, [r8, #-1824]!	; 0xfffff8e0
400308b7:	6461206e 	strbtvs	r2, [r1], #-110	; 0xffffff92
400308bb:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
400308bf:	6f6c2073 	svcvs	0x006c2073
400308c3:	64656b63 	strbtvs	r6, [r5], #-2915	; 0xfffff49d
400308c7:	0000002e 	andeq	r0, r0, lr, lsr #32
	...

400308cc <CSWTCH.18>:
400308cc:	40030620 	andmi	r0, r3, r0, lsr #12
400308d0:	40030650 	andmi	r0, r3, r0, asr r6
400308d4:	4003066a 	andmi	r0, r3, sl, ror #12
400308d8:	4003068c 	andmi	r0, r3, ip, lsl #13
400308dc:	400306be 			; <UNDEFINED> instruction: 0x400306be
400308e0:	400306e8 	andmi	r0, r3, r8, ror #13
400308e4:	40030717 	andmi	r0, r3, r7, lsl r7
400308e8:	4003074b 	andmi	r0, r3, fp, asr #14
400308ec:	4003077e 	andmi	r0, r3, lr, ror r7
400308f0:	4003079e 	mulmi	r3, lr, r7
400308f4:	400307c8 	andmi	r0, r3, r8, asr #15
400308f8:	400307ec 	andmi	r0, r3, ip, ror #15
400308fc:	4003080b 	andmi	r0, r3, fp, lsl #16
40030900:	4003083a 	andmi	r0, r3, sl, lsr r8
40030904:	4003086b 	andmi	r0, r3, fp, ror #16
40030908:	40030897 	mulmi	r3, r7, r8
4003090c:	00505448 	subseq	r5, r0, r8, asr #8
40030910:	0050544c 	subseq	r5, r0, ip, asr #8
40030914:	004d4452 	subeq	r4, sp, r2, asr r4
40030918:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
4003091c:	2074654e 	rsbscs	r6, r4, lr, asr #10
40030920:	56207525 	strtpl	r7, [r0], -r5, lsr #10
40030924:	252e7525 	strcs	r7, [lr, #-1317]!	; 0xfffffadb
40030928:	20000a75 	andcs	r0, r0, r5, ror sl
4003092c:	676e6f4c 	strbvs	r6, [lr, -ip, asr #30]!
40030930:	6d616e20 	stclvs	14, cr6, [r1, #-128]!	; 0xffffff80
40030934:	3a202065 	bcc	40838ad0 <__heap_start+0x338ad0>
40030938:	0a732520 	beq	41cf9dc0 <__ram_end+0xcf9dc0>
4003093c:	69542000 	ldmdbvs	r4, {sp}^
40030940:	6f43656d 	svcvs	0x0043656d
40030944:	49206564 	stmdbmi	r0!, {r2, r5, r6, r8, sl, sp, lr}
40030948:	25203a50 	strcs	r3, [r0, #-2640]!	; 0xfffff5b0
4003094c:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
40030950:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
40030954:	000a6425 	andeq	r6, sl, r5, lsr #8
40030958:	74754f20 	ldrbtvc	r4, [r5], #-3872	; 0xfffff0e0
4003095c:	0a747570 	beq	41d4df24 <__ram_end+0xd4df24>
40030960:	50202000 	eorpl	r2, r0, r0
40030964:	2074726f 	rsbscs	r7, r4, pc, ror #4
40030968:	75322d25 	ldrvc	r2, [r2, #-3365]!	; 0xfffff2db
4003096c:	342d2520 	strtcc	r2, [sp], #-1312	; 0xfffffae0
40030970:	73252075 			; <UNDEFINED> instruction: 0x73252075
40030974:	6c6f6800 	stclvs	8, cr6, [pc], #-0	; 4003097c <CSWTCH.18+0xb0>
40030978:	666f0064 	strbtvs	r0, [pc], -r4, rrx
4003097c:	6c700066 	ldclvs	0, cr0, [r0], #-408	; 0xfffffe68
40030980:	61627961 	cmnvs	r2, r1, ror #18
40030984:	64006b63 	strvs	r6, [r0], #-2915	; 0xfffff49d
40030988:	62617369 	rsbvs	r7, r1, #-1543503871	; 0xa4000001
4003098c:	6800656c 	stmdavs	r0, {r2, r3, r5, r6, r8, sl, sp, lr}
40030990:	6c007074 	stcvs	0, cr7, [r0], {116}	; 0x74
40030994:	61007074 	tstvs	r0, r4, ror r0
40030998:	656e7472 	strbvs	r7, [lr, #-1138]!	; 0xfffffb8e
4003099c:	61730074 	cmnvs	r3, r4, ror r0
400309a0:	44006e63 	strmi	r6, [r0], #-3683	; 0xfffff19d
400309a4:	4f20584d 	svcmi	0x0020584d
400309a8:	75707475 	ldrbvc	r7, [r0, #-1141]!	; 0xfffffb8b
400309ac:	72410074 	subvc	r0, r1, #116	; 0x74
400309b0:	654e2d74 	strbvs	r2, [lr, #-3444]	; 0xfffff28c
400309b4:	00342074 	eorseq	r2, r4, r4, ror r0

400309b8 <LightSetParamsConst::FAILSAFE>:
400309b8:	6c696166 	stfvse	f6, [r9], #-408	; 0xfffffe68
400309bc:	65666173 	strbvs	r6, [r6, #-371]!	; 0xfffffe8d
	...

400309c1 <LightSetParamsConst::DISABLE_MERGE_TIMEOUT>:
400309c1:	61736964 	cmnvs	r3, r4, ror #18
400309c5:	5f656c62 	svcpl	0x00656c62
400309c9:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
400309cd:	69745f65 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
400309d1:	756f656d 	strbvc	r6, [pc, #-1389]!	; 4003046c <time_html+0xd5>
400309d5:	 	svcvs	0x006c0074

400309d7 <LightSetParamsConst::NODE_LONG_NAME>:
400309d7:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
400309db:	6d616e5f 	stclvs	14, cr6, [r1, #-380]!	; 0xfffffe84
400309df:	 	cmnvs	ip, r5, rrx

400309e1 <LightSetParamsConst::NODE_LABEL>:
400309e1:	6562616c 	strbvs	r6, [r2, #-364]!	; 0xfffffe94
400309e5:	6f705f6c 	svcvs	0x00705f6c
400309e9:	615f7472 	cmpvs	pc, r2, ror r4	; <UNPREDICTABLE>
400309ed:	616c0000 	cmnvs	ip, r0
400309f1:	5f6c6562 	svcpl	0x006c6562
400309f5:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
400309f9:	0000625f 	andeq	r6, r0, pc, asr r2
400309fd:	6562616c 	strbvs	r6, [r2, #-364]!	; 0xfffffe94
40030a01:	6f705f6c 	svcvs	0x00705f6c
40030a05:	635f7472 	cmpvs	pc, #1912602624	; 0x72000000
40030a09:	616c0000 	cmnvs	ip, r0
40030a0d:	5f6c6562 	svcpl	0x006c6562
40030a11:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
40030a15:	0000645f 	andeq	r6, r0, pc, asr r4

40030a19 <LightSetParamsConst::DIRECTION>:
40030a19:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
40030a1d:	6f697463 	svcvs	0x00697463
40030a21:	6f705f6e 	svcvs	0x00705f6e
40030a25:	615f7472 	cmpvs	pc, r2, ror r4	; <UNPREDICTABLE>
40030a29:	69640000 	stmdbvs	r4!, {}^	; <UNPREDICTABLE>
40030a2d:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
40030a31:	5f6e6f69 	svcpl	0x006e6f69
40030a35:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
40030a39:	0000625f 	andeq	r6, r0, pc, asr r2
40030a3d:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
40030a41:	6f697463 	svcvs	0x00697463
40030a45:	6f705f6e 	svcvs	0x00705f6e
40030a49:	635f7472 	cmpvs	pc, #1912602624	; 0x72000000
40030a4d:	69640000 	stmdbvs	r4!, {}^	; <UNPREDICTABLE>
40030a51:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
40030a55:	5f6e6f69 	svcpl	0x006e6f69
40030a59:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
40030a5d:	0000645f 	andeq	r6, r0, pc, asr r4

40030a61 <LightSetParamsConst::MERGE_MODE_PORT>:
40030a61:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
40030a65:	6f6d5f65 	svcvs	0x006d5f65
40030a69:	705f6564 	subsvc	r6, pc, r4, ror #10
40030a6d:	5f74726f 	svcpl	0x0074726f
40030a71:	656d0061 	strbvs	r0, [sp, #-97]!	; 0xffffff9f
40030a75:	5f656772 	svcpl	0x00656772
40030a79:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
40030a7d:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
40030a81:	00625f74 	rsbeq	r5, r2, r4, ror pc
40030a85:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
40030a89:	6f6d5f65 	svcvs	0x006d5f65
40030a8d:	705f6564 	subsvc	r6, pc, r4, ror #10
40030a91:	5f74726f 	svcpl	0x0074726f
40030a95:	656d0063 	strbvs	r0, [sp, #-99]!	; 0xffffff9d
40030a99:	5f656772 	svcpl	0x00656772
40030a9d:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
40030aa1:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
40030aa5:	00645f74 	rsbeq	r5, r4, r4, ror pc

40030aa9 <LightSetParamsConst::UNIVERSE_PORT>:
40030aa9:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
40030aad:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
40030ab1:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
40030ab5:	00615f74 	rsbeq	r5, r1, r4, ror pc
40030ab9:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
40030abd:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
40030ac1:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
40030ac5:	00625f74 	rsbeq	r5, r2, r4, ror pc
40030ac9:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
40030acd:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
40030ad1:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
40030ad5:	00635f74 	rsbeq	r5, r3, r4, ror pc
40030ad9:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
40030add:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
40030ae1:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
40030ae5:	00645f74 	rsbeq	r5, r4, r4, ror pc

40030ae9 <ArtNetParamsConst::MAP_UNIVERSE0>:
40030ae9:	5f70616d 	svcpl	0x0070616d
40030aed:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
40030af1:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
40030af5:	 	rsbsvc	r0, r0, #48	; 0x30

40030af7 <ArtNetParamsConst::PROTOCOL_PORT>:
40030af7:	746f7270 	strbtvc	r7, [pc], #-624	; 40030aff <ArtNetParamsConst::PROTOCOL_PORT+0x8>
40030afb:	6c6f636f 	stclvs	3, cr6, [pc], #-444	; 40030944 <CSWTCH.18+0x78>
40030aff:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
40030b03:	00615f74 	rsbeq	r5, r1, r4, ror pc
40030b07:	746f7270 	strbtvc	r7, [pc], #-624	; 40030b0f <ArtNetParamsConst::PROTOCOL_PORT+0x18>
40030b0b:	6c6f636f 	stclvs	3, cr6, [pc], #-444	; 40030954 <CSWTCH.18+0x88>
40030b0f:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
40030b13:	00625f74 	rsbeq	r5, r2, r4, ror pc
40030b17:	746f7270 	strbtvc	r7, [pc], #-624	; 40030b1f <ArtNetParamsConst::PROTOCOL_PORT+0x28>
40030b1b:	6c6f636f 	stclvs	3, cr6, [pc], #-444	; 40030964 <CSWTCH.18+0x98>
40030b1f:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
40030b23:	00635f74 	rsbeq	r5, r3, r4, ror pc
40030b27:	746f7270 	strbtvc	r7, [pc], #-624	; 40030b2f <ArtNetParamsConst::PROTOCOL_PORT+0x38>
40030b2b:	6c6f636f 	stclvs	3, cr6, [pc], #-444	; 40030974 <CSWTCH.18+0xa8>
40030b2f:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
40030b33:	00645f74 	rsbeq	r5, r4, r4, ror pc

40030b37 <ArtNetParamsConst::FILE_NAME>:
40030b37:	6e747261 	cdpvs	2, 7, cr7, cr4, cr1, {3}
40030b3b:	742e7465 	strtvc	r7, [lr], #-1125	; 0xfffffb9b
40030b3f:	 			; <UNDEFINED> instruction: 0xff007478

40030b42 <ArtNetConst::OEM_ID>:
40030b42:	 	ldrsheq	pc, [r0], #-255	; 0xffffff01	; <UNPREDICTABLE>

40030b44 <ArtNetConst::ESTA_ID>:
40030b44:	 	stccc	0, cr0, [r1], {80}	; 0x50

40030b46 <ArtNetConst::VERSION>:
40030b46:	 	tsteq	r0, r1, lsl #24

40030b48 <CSWTCH.22>:
40030b48:	04040100 	streq	r0, [r4], #-256	; 0xffffff00
40030b4c:	 	strmi	r0, [r3], -r4, lsl #4

40030b4f <ltc::aTypes>:
40030b4f:	6d6c6946 			; <UNDEFINED> instruction: 0x6d6c6946
40030b53:	66343220 	ldrtvs	r3, [r4], -r0, lsr #4
40030b57:	00207370 	eoreq	r7, r0, r0, ror r3
40030b5b:	20554245 	subscs	r4, r5, r5, asr #4
40030b5f:	70663532 	rsbvc	r3, r6, r2, lsr r5
40030b63:	00202073 	eoreq	r2, r0, r3, ror r0
40030b67:	32204644 	eorcc	r4, r0, #68, 12	; 0x4400000
40030b6b:	37392e39 			; <UNDEFINED> instruction: 0x37392e39
40030b6f:	00737066 	rsbseq	r7, r3, r6, rrx
40030b73:	54504d53 	ldrbpl	r4, [r0], #-3411	; 0xfffff2ad
40030b77:	30332045 	eorscc	r2, r3, r5, asr #32
40030b7b:	00737066 	rsbseq	r7, r3, r6, rrx
40030b7f:	2d2d2d2d 	stccs	13, cr2, [sp, #-180]!	; 0xffffff4c
40030b83:	2d2d202d 	stccs	0, cr2, [sp, #-180]!	; 0xffffff4c
40030b87:	002d2d2d 	eoreq	r2, sp, sp, lsr #26
	...

40030b8c <vtable for LtcDisplayMax7219Set>:
	...
40030b9c:	4002d3e0 	andmi	sp, r2, r0, ror #7
40030ba0:	4002d3e0 	andmi	sp, r2, r0, ror #7
40030ba4:	4002d3e0 	andmi	sp, r2, r0, ror #7
40030ba8:	4002d3e0 	andmi	sp, r2, r0, ror #7

40030bac <vtable for LtcDisplayMax72197Segment>:
	...
40030bb4:	4000c984 	andmi	ip, r0, r4, lsl #19
40030bb8:	4000c988 	andmi	ip, r0, r8, lsl #19
40030bbc:	4000cbb0 			; <UNDEFINED> instruction: 0x4000cbb0
40030bc0:	4000c9ec 	andmi	ip, r0, ip, ror #19
40030bc4:	4000cac8 	andmi	ip, r0, r8, asr #21
40030bc8:	4000cb88 	andmi	ip, r0, r8, lsl #23
40030bcc:	74696157 	strbtvc	r6, [r9], #-343	; 0xfffffea9
40030bd0:	00676e69 	rsbeq	r6, r7, r9, ror #28

40030bd4 <CSWTCH.1>:
40030bd4:	000000e4 	andeq	r0, r0, r4, ror #1
	...
40030be0:	dad00000 	ble	3f430be8 <__ram_size+0x3e430be8>

40030be4 <nCharsColon>:
40030be4:	59717f3e 	ldmdbpl	r1!, {r1, r2, r3, r4, r5, r8, r9, sl, fp, ip, sp, lr}^
40030be8:	663e7f4d 	ldrtvs	r7, [lr], -sp, asr #30
40030bec:	7f7f4240 	svcvc	0x007f4240
40030bf0:	66004040 	strvs	r4, [r0], -r0, asr #32
40030bf4:	49597362 	ldmdbmi	r9, {r1, r5, r6, r8, r9, ip, sp, lr}^
40030bf8:	6600666f 	strvs	r6, [r0], -pc, ror #12
40030bfc:	49496322 	stmdbmi	r9, {r1, r5, r8, r9, sp, lr}^
40030c00:	6600367f 			; <UNDEFINED> instruction: 0x6600367f
40030c04:	53161c18 	tstpl	r6, #24, 24	; 0x1800
40030c08:	66507f7f 	usub16vs	r7, r0, pc	; <UNPREDICTABLE>
40030c0c:	45456727 	strbmi	r6, [r5, #-1831]	; 0xfffff8d9
40030c10:	6600397d 			; <UNDEFINED> instruction: 0x6600397d
40030c14:	494b7e3c 	stmdbmi	fp, {r2, r3, r4, r5, r9, sl, fp, ip, sp, lr}^
40030c18:	66003079 			; <UNDEFINED> instruction: 0x66003079
40030c1c:	79710303 	ldmdbvc	r1!, {r0, r1, r8, r9}^
40030c20:	6600070f 	strvs	r0, [r0], -pc, lsl #14
40030c24:	49497f36 	stmdbmi	r9, {r1, r2, r4, r5, r8, r9, sl, fp, ip, sp, lr}^
40030c28:	6600367f 			; <UNDEFINED> instruction: 0x6600367f
40030c2c:	69494f06 	stmdbvs	r9, {r1, r2, r8, r9, sl, fp, lr}^
40030c30:	66001e3f 			; <UNDEFINED> instruction: 0x66001e3f

40030c34 <nCharsBlinkComma>:
40030c34:	59717f3e 	ldmdbpl	r1!, {r1, r2, r3, r4, r5, r8, r9, sl, fp, ip, sp, lr}^
40030c38:	00be7f4d 	adcseq	r7, lr, sp, asr #30
40030c3c:	7f7f4240 	svcvc	0x007f4240
40030c40:	60804040 	addvs	r4, r0, r0, asr #32
40030c44:	49597362 	ldmdbmi	r9, {r1, r5, r6, r8, r9, ip, sp, lr}^
40030c48:	0080666f 	addeq	r6, r0, pc, ror #12
40030c4c:	49496322 	stmdbmi	r9, {r1, r5, r8, r9, sp, lr}^
40030c50:	6080367f 	addvs	r3, r0, pc, ror r6
40030c54:	53161c18 	tstpl	r6, #24, 24	; 0x1800
40030c58:	00d07f7f 	sbcseq	r7, r0, pc, ror pc
40030c5c:	45456727 	strbmi	r6, [r5, #-1831]	; 0xfffff8d9
40030c60:	6080397d 	addvs	r3, r0, sp, ror r9
40030c64:	494b7e3c 	stmdbmi	fp, {r2, r3, r4, r5, r9, sl, fp, ip, sp, lr}^
40030c68:	00803079 	addeq	r3, r0, r9, ror r0
40030c6c:	79710303 	ldmdbvc	r1!, {r0, r1, r8, r9}^
40030c70:	6080070f 	addvs	r0, r0, pc, lsl #14
40030c74:	49497f36 	stmdbmi	r9, {r1, r2, r4, r5, r8, r9, sl, fp, ip, sp, lr}^
40030c78:	0080367f 	addeq	r3, r0, pc, ror r6
40030c7c:	69494f06 	stmdbvs	r9, {r1, r2, r8, r9, sl, fp, lr}^
40030c80:	60801e3f 	addvs	r1, r0, pc, lsr lr

40030c84 <nCharsBlinkSemiColon>:
40030c84:	59717f3e 	ldmdbpl	r1!, {r1, r2, r3, r4, r5, r8, r9, sl, fp, ip, sp, lr}^
40030c88:	66be7f4d 	ldrtvs	r7, [lr], sp, asr #30
40030c8c:	7f7f4240 	svcvc	0x007f4240
40030c90:	66804040 	strvs	r4, [r0], r0, asr #32
40030c94:	49597362 	ldmdbmi	r9, {r1, r5, r6, r8, r9, ip, sp, lr}^
40030c98:	6680666f 	strvs	r6, [r0], pc, ror #12
40030c9c:	49496322 	stmdbmi	r9, {r1, r5, r8, r9, sp, lr}^
40030ca0:	6680367f 			; <UNDEFINED> instruction: 0x6680367f
40030ca4:	53161c18 	tstpl	r6, #24, 24	; 0x1800
40030ca8:	66d07f7f 			; <UNDEFINED> instruction: 0x66d07f7f
40030cac:	45456727 	strbmi	r6, [r5, #-1831]	; 0xfffff8d9
40030cb0:	6680397d 			; <UNDEFINED> instruction: 0x6680397d
40030cb4:	494b7e3c 	stmdbmi	fp, {r2, r3, r4, r5, r9, sl, fp, ip, sp, lr}^
40030cb8:	66803079 	sxtab16vs	r3, r0, r9
40030cbc:	79710303 	ldmdbvc	r1!, {r0, r1, r8, r9}^
40030cc0:	6680070f 	strvs	r0, [r0], pc, lsl #14
40030cc4:	49497f36 	stmdbmi	r9, {r1, r2, r4, r5, r8, r9, sl, fp, ip, sp, lr}^
40030cc8:	6680367f 			; <UNDEFINED> instruction: 0x6680367f
40030ccc:	69494f06 	stmdbvs	r9, {r1, r2, r8, r9, sl, fp, lr}^
40030cd0:	66801e3f 			; <UNDEFINED> instruction: 0x66801e3f

40030cd4 <vtable for LtcDisplayMax7219Matrix>:
	...
40030cdc:	4000cd4c 	andmi	ip, r0, ip, asr #26
40030ce0:	4000cd6c 	andmi	ip, r0, ip, ror #26
40030ce4:	4000cc9c 	mulmi	r0, ip, ip
40030ce8:	4000cdbc 			; <UNDEFINED> instruction: 0x4000cdbc
40030cec:	4000ce44 	andmi	ip, r0, r4, asr #28
40030cf0:	4000cc98 	mulmi	r0, r8, ip
40030cf4:	67657337 			; <UNDEFINED> instruction: 0x67657337
40030cf8:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
40030cfc:	74616d00 	strbtvc	r6, [r1], #-3328	; 0xfffff300
40030d00:	00786972 	rsbseq	r6, r8, r2, ror r9
40030d04:	6e776f64 	cdpvs	15, 7, cr6, cr7, cr4, {3}
40030d08:	00707500 	rsbseq	r7, r0, r0, lsl #10
40030d0c:	44454c4f 	strbmi	r4, [r5], #-3151	; 0xfffff3b1
40030d10:	44535320 	ldrbmi	r5, [r3], #-800	; 0xfffffce0
40030d14:	36303331 			; <UNDEFINED> instruction: 0x36303331
40030d18:	0031312f 	eorseq	r3, r1, pc, lsr #2
40030d1c:	61746f52 	cmnvs	r4, r2, asr pc
40030d20:	63207972 			; <UNDEFINED> instruction: 0x63207972
40030d24:	72746e6f 	rsbsvc	r6, r4, #1776	; 0x6f0
40030d28:	4d006c6f 	stcmi	12, cr6, [r0, #-444]	; 0xfffffe44
40030d2c:	32375841 	eorscc	r5, r7, #4259840	; 0x410000
40030d30:	52003931 	andpl	r3, r0, #802816	; 0xc4000
40030d34:	44204247 	strtmi	r4, [r0], #-583	; 0xfffffdb9
40030d38:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
40030d3c:	28207961 	stmdacs	r0!, {r0, r5, r6, r8, fp, ip, sp, lr}
40030d40:	656e6567 	strbvs	r6, [lr, #-1383]!	; 0xfffffa99
40030d44:	29636972 	stmdbcs	r3!, {r1, r4, r5, r6, r8, fp, sp, lr}^
40030d48:	32535700 	subscc	r5, r3, #0, 14
40030d4c:	20787838 	rsbscs	r7, r8, r8, lsr r8
40030d50:	65707328 	ldrbvs	r7, [r0, #-808]!	; 0xfffffcd8
40030d54:	69666963 	stmdbvs	r6!, {r0, r1, r5, r6, r8, fp, sp, lr}^
40030d58:	4f002963 	svcmi	0x00002963
40030d5c:	77726576 			; <UNDEFINED> instruction: 0x77726576
40030d60:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
40030d64:	74616420 	strbtvc	r6, [r1], #-1056	; 0xfffffbe0
40030d68:	65687361 	strbvs	r7, [r8, #-865]!	; 0xfffffc9f
40030d6c:	52007465 	andpl	r7, r0, #1694498816	; 0x65000000
40030d70:	70204247 	eorvc	r4, r0, r7, asr #4
40030d74:	6c656e61 	stclvs	14, cr6, [r5], #-388	; 0xfffffe7c
40030d78:	70732820 	rsbsvc	r2, r3, r0, lsr #16
40030d7c:	66696365 	strbtvs	r6, [r9], -r5, ror #6
40030d80:	00296369 	eoreq	r6, r9, r9, ror #6

40030d84 <LtcDisplayParamsConst::INFO_MSG>:
40030d84:	6f666e69 	svcvs	0x00666e69
40030d88:	67736d5f 			; <UNDEFINED> instruction: 0x67736d5f
	...

40030d8d <LtcDisplayParamsConst::WS28XX_TYPE>:
40030d8d:	38327377 	ldmdacc	r2!, {r0, r1, r2, r4, r5, r6, r8, r9, ip, sp, lr}
40030d91:	745f7878 	ldrbvc	r7, [pc], #-2168	; 40030d99 <LtcDisplayParamsConst::COLOUR>
40030d95:	00657079 	rsbeq	r7, r5, r9, ror r0

40030d99 <LtcDisplayParamsConst::COLOUR>:
40030d99:	6f6c6f63 	svcvs	0x006c6f63
40030d9d:	745f7275 	ldrbvc	r7, [pc], #-629	; 40030da5 <LtcDisplayParamsConst::COLOUR+0xc>
40030da1:	00656d69 	rsbeq	r6, r5, r9, ror #26
	...
40030db1:	6f6c6f63 	svcvs	0x006c6f63
40030db5:	635f7275 	cmpvs	pc, #1342177287	; 0x50000007
40030db9:	6e6f6c6f 	cdpvs	12, 6, cr6, cr15, cr15, {3}
	...
40030dc9:	6f6c6f63 	svcvs	0x006c6f63
40030dcd:	6d5f7275 	lfmvs	f7, 2, [pc, #-468]	; 40030c00 <nCharsColon+0x1c>
40030dd1:	61737365 	cmnvs	r3, r5, ror #6
40030dd5:	00006567 	andeq	r6, r0, r7, ror #10
	...
40030de1:	6f6c6f63 	svcvs	0x006c6f63
40030de5:	665f7275 			; <UNDEFINED> instruction: 0x665f7275
40030de9:	00007370 	andeq	r7, r0, r0, ror r3
	...
40030df9:	6f6c6f63 	svcvs	0x006c6f63
40030dfd:	695f7275 	ldmdbvs	pc, {r0, r2, r4, r5, r6, r9, ip, sp, lr}^	; <UNPREDICTABLE>
40030e01:	006f666e 	rsbeq	r6, pc, lr, ror #12
	...
40030e11:	6f6c6f63 	svcvs	0x006c6f63
40030e15:	735f7275 	cmpvc	pc, #1342177287	; 0x50000007
40030e19:	6372756f 	cmnvs	r2, #465567744	; 0x1bc00000
40030e1d:	00000065 	andeq	r0, r0, r5, rrx
	...

40030e29 <LtcDisplayParamsConst::COLON_BLINK_MODE>:
40030e29:	6f6c6f63 	svcvs	0x006c6f63
40030e2d:	6c625f6e 	stclvs	15, cr5, [r2], #-440	; 0xfffffe48
40030e31:	5f6b6e69 	svcpl	0x006b6e69
40030e35:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
	...

40030e3a <LtcDisplayParamsConst::INTENSITY>:
40030e3a:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
40030e3e:	7469736e 	strbtvc	r7, [r9], #-878	; 0xfffffc92
40030e42:	 	smcvs	53257	; 0xd009

40030e44 <LtcDisplayParamsConst::MAX7219_INTENSITY>:
40030e44:	3778616d 	ldrbcc	r6, [r8, -sp, ror #2]!
40030e48:	5f393132 	svcpl	0x00393132
40030e4c:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
40030e50:	7469736e 	strbtvc	r7, [r9], #-878	; 0xfffffc92
40030e54:	 	smcvs	53257	; 0xd009

40030e56 <LtcDisplayParamsConst::MAX7219_TYPE>:
40030e56:	3778616d 	ldrbcc	r6, [r8, -sp, ror #2]!
40030e5a:	5f393132 	svcpl	0x00393132
40030e5e:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
	...

40030e63 <LtcDisplayParamsConst::ROTARY_FULLSTEP>:
40030e63:	61746f72 	cmnvs	r4, r2, ror pc
40030e67:	665f7972 			; <UNDEFINED> instruction: 0x665f7972
40030e6b:	736c6c75 	cmnvc	ip, #29952	; 0x7500
40030e6f:	00706574 	rsbseq	r6, r0, r4, ror r5

40030e73 <LtcDisplayParamsConst::OLED_INTENSITY>:
40030e73:	64656c6f 	strbtvs	r6, [r5], #-3183	; 0xfffff391
40030e77:	746e695f 	strbtvc	r6, [lr], #-2399	; 0xfffff6a1
40030e7b:	69736e65 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
40030e7f:	 			; <UNDEFINED> instruction: 0x6c007974

40030e82 <LtcDisplayParamsConst::FILE_NAME>:
40030e82:	7369646c 	cmnvc	r9, #108, 8	; 0x6c000000
40030e86:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
40030e8a:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
	...

40030e8f <aColonBlinkMode>:
40030e8f:	0066666f 	rsbeq	r6, r6, pc, ror #12
40030e93:	776f6400 	strbvc	r6, [pc, -r0, lsl #8]!
40030e97:	7075006e 	rsbsvc	r0, r5, lr, rrx
40030e9b:	55000000 	strpl	r0, [r0, #-0]
40030e9f:	6665646e 	strbtvs	r6, [r5], -lr, ror #8
40030ea3:	64656e69 	strbtvs	r6, [r5], #-3689	; 0xfffff197
40030ea7:	43544500 	cmpmi	r4, #0, 10
40030eab:	74616720 	strbtvc	r6, [r1], #-1824	; 0xfffff8e0
40030eaf:	79617765 	stmdbvc	r1!, {r0, r2, r5, r6, r8, r9, sl, ip, sp, lr}^
40030eb3:	65442000 	strbvs	r2, [r4, #-0]
40030eb7:	6e697473 	mcrvs	4, 3, r7, cr9, cr3, {3}
40030ebb:	6f697461 	svcvs	0x00697461
40030ebf:	25203a6e 	strcs	r3, [r0, #-2670]!	; 0xfffff592
40030ec3:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
40030ec7:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
40030ecb:	253a6425 	ldrcs	r6, [sl, #-1061]!	; 0xfffffbdb
40030ecf:	20000a64 	andcs	r0, r0, r4, ror #20
40030ed3:	6f206f4e 	svcvs	0x00206f4e
40030ed7:	75707475 	ldrbvc	r7, [r0, #-1141]!	; 0xfffffb8b
40030edb:	6f530074 	svcvs	0x00530074
40030edf:	65637275 	strbvs	r7, [r3, #-629]!	; 0xfffffd8b
40030ee3:	726f7020 	rsbvc	r7, pc, #32
40030ee7:	25203a74 	strcs	r3, [r0, #-2676]!	; 0xfffff58c
40030eeb:	20000a64 	andcs	r0, r0, r4, ror #20
40030eef:	746c754d 	strbtvc	r7, [ip], #-1357	; 0xfffffab3
40030ef3:	73616369 	cmnvc	r1, #-1543503871	; 0xa4000001
40030ef7:	70692074 	rsbvc	r2, r9, r4, ror r0
40030efb:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
40030eff:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
40030f03:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
40030f07:	4e200064 	cdpmi	0, 2, cr0, cr0, cr4, {3}
40030f0b:	6e69206f 	cdpvs	0, 6, cr2, cr9, cr15, {3}
40030f0f:	00747570 	rsbseq	r7, r4, r0, ror r5
40030f13:	50445520 	subpl	r5, r4, r0, lsr #10
40030f17:	72655420 	rsbvc	r5, r5, #32, 8	; 0x20000000
40030f1b:	616e696d 	cmnvs	lr, sp, ror #18
40030f1f:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
40030f23:	7325203a 			; <UNDEFINED> instruction: 0x7325203a
40030f27:	 	subcc	r0, r6, sl

40030f29 <LtcEtc::Udp::HEADER>:
40030f29:	37203046 	strcc	r3, [r0, -r6, asr #32]!
40030f2d:	46372046 	ldrtmi	r2, [r7], -r6, asr #32
40030f31:	20313020 	eorscs	r3, r1, r0, lsr #32
40030f35:	 	stfmis	f3, [r0, #-192]!	; 0xffffff40

40030f38 <LtcEtc::Udp::PREFIX>:
40030f38:	4944494d 	stmdbmi	r4, {r0, r2, r3, r6, r8, fp, lr}^
40030f3c:	 	cdpvs	14, 6, cr4, cr15, cr0, {1}

40030f3d <UDP_TERMINATOR>:
40030f3d:	656e6f4e 	strbvs	r6, [lr, #-3918]!	; 0xfffff0b2
40030f41:	00524300 	subseq	r4, r2, r0, lsl #6
40030f45:	464c0000 	strbmi	r0, [ip], -r0
40030f49:	43000000 	movwmi	r0, #0
40030f4d:	00464c52 	subeq	r4, r6, r2, asr ip
40030f51:	0074754f 	rsbseq	r7, r4, pc, asr #10
40030f55:	55006e49 	strpl	r6, [r0, #-3657]	; 0xfffff1b7
40030f59:	54205044 	strtpl	r5, [r0], #-68	; 0xffffffbc
40030f5d:	696d7265 	stmdbvs	sp!, {r0, r2, r5, r6, r9, ip, sp, lr}^
40030f61:	6f74616e 	svcvs	0x0074616e
40030f65:	4e203a72 			; <UNDEFINED> instruction: 0x4e203a72
40030f69:	2f656e6f 	svccs	0x00656e6f
40030f6d:	4c2f5243 	sfmmi	f5, 4, [pc], #-268	; 40030e68 <LtcDisplayParamsConst::ROTARY_FULLSTEP+0x5>
40030f71:	52432f46 	subpl	r2, r3, #280	; 0x118
40030f75:	 	strvc	r4, [r0, #-1612]	; 0xfffff9b4

40030f78 <LtcEtcParamsConst::UDP_TERMINATOR>:
40030f78:	5f706475 	svcpl	0x00706475
40030f7c:	6d726574 	cfldr64vs	mvdx6, [r2, #-464]!	; 0xfffffe30
40030f80:	74616e69 	strbtvc	r6, [r1], #-3689	; 0xfffff197
40030f84:	 	movwvc	r7, #623	; 0x26f

40030f87 <LtcEtcParamsConst::SOURCE_PORT>:
40030f87:	72756f73 	rsbsvc	r6, r5, #460	; 0x1cc
40030f8b:	705f6563 	subsvc	r6, pc, r3, ror #10
40030f8f:	0074726f 	rsbseq	r7, r4, pc, ror #4

40030f93 <LtcEtcParamsConst::SOURCE_MULTICAST_IP>:
40030f93:	72756f73 	rsbsvc	r6, r5, #460	; 0x1cc
40030f97:	6d5f6563 	cfldr64vs	mvdx6, [pc, #-396]	; 40030e10 <LtcDisplayParamsConst::COLOUR+0x77>
40030f9b:	69746c75 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, sl, fp, sp, lr}^
40030f9f:	74736163 	ldrbtvc	r6, [r3], #-355	; 0xfffffe9d
40030fa3:	0070695f 	rsbseq	r6, r0, pc, asr r9

40030fa7 <LtcEtcParamsConst::DESTINATION_PORT>:
40030fa7:	74736564 	ldrbtvc	r6, [r3], #-1380	; 0xfffffa9c
40030fab:	74616e69 	strbtvc	r6, [r1], #-3689	; 0xfffff197
40030faf:	5f6e6f69 	svcpl	0x006e6f69
40030fb3:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
	...

40030fb8 <LtcEtcParamsConst::DESTINATION_IP>:
40030fb8:	74736564 	ldrbtvc	r6, [r3], #-1380	; 0xfffffa9c
40030fbc:	74616e69 	strbtvc	r6, [r1], #-3689	; 0xfffff197
40030fc0:	5f6e6f69 	svcpl	0x006e6f69
40030fc4:	 	strvs	r7, [r0, #-105]	; 0xffffff97

40030fc7 <LtcEtcParamsConst::FILE_NAME>:
40030fc7:	2e637465 	cdpcs	4, 6, cr7, cr3, cr5, {3}
40030fcb:	00747874 	rsbseq	r7, r4, r4, ror r8
40030fcf:	61736944 	cmnvs	r3, r4, asr #18
40030fd3:	20656c62 	rsbcs	r6, r5, r2, ror #24
40030fd7:	7074756f 	rsbsvc	r7, r4, pc, ror #10
40030fdb:	00737475 	rsbseq	r7, r3, r5, ror r4
40030fdf:	74737953 	ldrbtvc	r7, [r3], #-2387	; 0xfffff6ad
40030fe3:	63206d65 			; <UNDEFINED> instruction: 0x63206d65
40030fe7:	6b636f6c 	blvs	4190cd9f <__ram_end+0x90cd9f>
40030feb:	52202f20 	eorpl	r2, r0, #32, 30	; 0x80
40030fef:	73004354 	movwvc	r4, #852	; 0x354
40030ff3:	6372756f 	cmnvs	r2, #465567744	; 0x1bc00000
40030ff7:	79733d65 	ldmdbvc	r3!, {r0, r2, r5, r6, r8, sl, fp, ip, sp}^
40030ffb:	6d697473 	cfstrdvs	mvd7, [r9, #-460]!	; 0xfffffe34
40030fff:	6f730065 	svcvs	0x00730065
40031003:	65637275 	strbvs	r7, [r3, #-629]!	; 0xfffffd8b
40031007:	746e693d 	strbtvc	r6, [lr], #-2365	; 0xfffff6c3
4003100b:	616e7265 	cmnvs	lr, r5, ror #4
4003100f:	434d006c 	movtmi	r0, #53356	; 0xd06c
40031013:	75622050 	strbvc	r2, [r2, #-80]!	; 0xffffffb0
40031017:	6e6f7474 	mcrvs	4, 3, r7, cr15, cr4, {3}
4003101b:	72410073 	subvc	r0, r1, #115	; 0x73
4003101f:	654e2d74 	strbvs	r2, [lr, #-3444]	; 0xfffff28c
40031023:	756f2074 	strbvc	r2, [pc, #-116]!	; 40030fb7 <LtcEtcParamsConst::DESTINATION_PORT+0x10>
40031027:	74757074 	ldrbtvc	r7, [r5], #-116	; 0xffffff8c
4003102b:	43544c00 	cmpmi	r4, #0, 24
4003102f:	74756f20 	ldrbtvc	r6, [r5], #-3872	; 0xfffff0e0
40031033:	00747570 	rsbseq	r7, r4, r0, ror r5
40031037:	2050544e 	subscs	r5, r0, lr, asr #8
4003103b:	76726553 			; <UNDEFINED> instruction: 0x76726553
4003103f:	4f007265 	svcmi	0x00007265
40031043:	53204353 			; <UNDEFINED> instruction: 0x53204353
40031047:	65767265 	ldrbvs	r7, [r6, #-613]!	; 0xfffffd9b
4003104b:	53570072 	cmppl	r7, #114	; 0x72
4003104f:	78783832 	ldmdavc	r8!, {r1, r4, r5, fp, ip, sp}^
40031053:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
40031057:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
	...

4003105c <LtcParamsConst::RGBPANEL_ENABLE>:
4003105c:	70626772 	rsbvc	r6, r2, r2, ror r7
40031060:	6c656e61 	stclvs	14, cr6, [r5], #-388	; 0xfffffe7c
40031064:	616e655f 	cmnvs	lr, pc, asr r5
40031068:	00656c62 	rsbeq	r6, r5, r2, ror #24

4003106c <LtcParamsConst::WS28XX_ENABLE>:
4003106c:	38327377 	ldmdacc	r2!, {r0, r1, r2, r4, r5, r6, r8, r9, ip, sp, lr}
40031070:	655f7878 	ldrbvs	r7, [pc, #-2168]	; 40030800 <artnet::NODE_ID+0x1fd>
40031074:	6c62616e 	stfvse	f6, [r2], #-440	; 0xfffffe48
40031078:	 	cmnvc	pc, #101	; 0x65

4003107a <LtcParamsConst::OSC_PORT>:
4003107a:	5f63736f 	svcpl	0x0063736f
4003107e:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
	...

40031083 <LtcParamsConst::OSC_ENABLE>:
40031083:	5f63736f 	svcpl	0x0063736f
40031087:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
4003108b:	 	movwvc	r6, #1388	; 0x56c

4003108e <LtcParamsConst::SKIP_FREE>:
4003108e:	70696b73 	rsbvc	r6, r9, r3, ror fp
40031092:	6572665f 	ldrbvs	r6, [r2, #-1631]!	; 0xfffff9a1
40031096:	 	blvs	41cf1232 <__ram_end+0xcf1232>

40031098 <LtcParamsConst::SKIP_SECONDS>:
40031098:	70696b73 	rsbvc	r6, r9, r3, ror fp
4003109c:	6365735f 	cmnvs	r5, #2080374785	; 0x7c000001
400310a0:	73646e6f 	cmnvc	r4, #1776	; 0x6f0
	...

400310a5 <LtcParamsConst::ALT_FUNCTION>:
400310a5:	5f746c61 	svcpl	0x00746c61
400310a9:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
400310ad:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
	...

400310b2 <LtcParamsConst::IGNORE_STOP>:
400310b2:	6f6e6769 	svcvs	0x006e6769
400310b6:	735f6572 	cmpvc	pc, #478150656	; 0x1c800000
400310ba:	00706f74 	rsbseq	r6, r0, r4, ror pc

400310be <LtcParamsConst::STOP_HOUR>:
400310be:	706f7473 	rsbvc	r7, pc, r3, ror r4	; <UNPREDICTABLE>
400310c2:	756f685f 	strbvc	r6, [pc, #-2143]!	; 4003086b <artnet::NODE_ID+0x268>
400310c6:	 	ldrbtvc	r0, [r3], #-114	; 0xffffff8e

400310c8 <LtcParamsConst::STOP_MINUTE>:
400310c8:	706f7473 	rsbvc	r7, pc, r3, ror r4	; <UNPREDICTABLE>
400310cc:	6e696d5f 	mcrvs	13, 3, r6, cr9, cr15, {2}
400310d0:	00657475 	rsbeq	r7, r5, r5, ror r4

400310d4 <LtcParamsConst::STOP_SECOND>:
400310d4:	706f7473 	rsbvc	r7, pc, r3, ror r4	; <UNPREDICTABLE>
400310d8:	6365735f 	cmnvs	r5, #2080374785	; 0x7c000001
400310dc:	00646e6f 	rsbeq	r6, r4, pc, ror #28

400310e0 <LtcParamsConst::STOP_FRAME>:
400310e0:	706f7473 	rsbvc	r7, pc, r3, ror r4	; <UNPREDICTABLE>
400310e4:	6172665f 	cmnvs	r2, pc, asr r6
400310e8:	 	stmdbvs	r0, {r0, r2, r3, r5, r6, r8, sl, sp, lr}

400310eb <LtcParamsConst::IGNORE_START>:
400310eb:	6f6e6769 	svcvs	0x006e6769
400310ef:	735f6572 	cmpvc	pc, #478150656	; 0x1c800000
400310f3:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
	...

400310f8 <LtcParamsConst::START_HOUR>:
400310f8:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
400310fc:	6f685f74 	svcvs	0x00685f74
40031100:	 	movwvc	r7, #629	; 0x275

40031103 <LtcParamsConst::START_MINUTE>:
40031103:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
40031107:	696d5f74 	stmdbvs	sp!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
4003110b:	6574756e 	ldrbvs	r7, [r4, #-1390]!	; 0xfffffa92
	...

40031110 <LtcParamsConst::START_SECOND>:
40031110:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
40031114:	65735f74 	ldrbvs	r5, [r3, #-3956]!	; 0xfffff08c
40031118:	646e6f63 	strbtvs	r6, [lr], #-3939	; 0xfffff09d
	...

4003111d <LtcParamsConst::START_FRAME>:
4003111d:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
40031121:	72665f74 	rsbvc	r5, r6, #116, 30	; 0x1d0
40031125:	00656d61 	rsbeq	r6, r5, r1, ror #26

40031129 <LtcParamsConst::FPS>:
40031129:	00737066 	rsbseq	r7, r3, r6, rrx

4003112d <LtcParamsConst::TIMECODE_IP>:
4003112d:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
40031131:	65646f63 	strbvs	r6, [r4, #-3939]!	; 0xfffff09d
40031135:	0070695f 	rsbseq	r6, r0, pc, asr r9

40031139 <LtcParamsConst::VOLUME>:
40031139:	756c6f76 	strbvc	r6, [ip, #-3958]!	; 0xfffff08a
4003113d:	 	cfsh32vs	mvfx6, mvfx0, #61

40031140 <LtcParamsConst::NTP_ENABLE>:
40031140:	5f70746e 	svcpl	0x0070746e
40031144:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
40031148:	 	strvs	r6, [r0], #-1388	; 0xfffffa94

4003114b <LtcParamsConst::DAY>:
4003114b:	00796164 	rsbseq	r6, r9, r4, ror #2

4003114f <LtcParamsConst::MONTH>:
4003114f:	746e6f6d 	strbtvc	r6, [lr], #-3949	; 0xfffff093
40031153:	 	ldrbvs	r0, [r9, #-104]!	; 0xffffff98

40031155 <LtcParamsConst::YEAR>:
40031155:	72616579 	rsbvc	r6, r1, #507510784	; 0x1e400000
	...

4003115a <LtcParamsConst::DISABLE_TIMESYNC>:
4003115a:	61736964 	cmnvs	r3, r4, ror #18
4003115e:	5f656c62 	svcpl	0x00656c62
40031162:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
40031166:	636e7973 	cmnvs	lr, #1884160	; 0x1cc000
	...

4003116b <LtcParamsConst::SHOW_SYSTIME>:
4003116b:	776f6873 			; <UNDEFINED> instruction: 0x776f6873
4003116f:	7379735f 	cmnvc	r9, #2080374785	; 0x7c000001
40031173:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
	...

40031178 <LtcParamsConst::DISABLE_ETC>:
40031178:	61736964 	cmnvs	r3, r4, ror #18
4003117c:	5f656c62 	svcpl	0x00656c62
40031180:	00637465 	rsbeq	r7, r3, r5, ror #8

40031184 <LtcParamsConst::DISABLE_RTPMIDI>:
40031184:	61736964 	cmnvs	r3, r4, ror #18
40031188:	5f656c62 	svcpl	0x00656c62
4003118c:	2d707472 	cfldrdcs	mvd7, [r0, #-456]!	; 0xfffffe38
40031190:	6964696d 	stmdbvs	r4!, {r0, r2, r3, r5, r6, r8, fp, sp, lr}^
	...

40031195 <LtcParamsConst::DISABLE_LTC>:
40031195:	61736964 	cmnvs	r3, r4, ror #18
40031199:	5f656c62 	svcpl	0x00656c62
4003119d:	0063746c 	rsbeq	r7, r3, ip, ror #8

400311a1 <LtcParamsConst::DISABLE_ARTNET>:
400311a1:	61736964 	cmnvs	r3, r4, ror #18
400311a5:	5f656c62 	svcpl	0x00656c62
400311a9:	6e747261 	cdpvs	2, 7, cr7, cr4, cr1, {3}
400311ad:	 	strvs	r7, [r0], #-1125	; 0xfffffb9b

400311b0 <LtcParamsConst::DISABLE_MIDI>:
400311b0:	61736964 	cmnvs	r3, r4, ror #18
400311b4:	5f656c62 	svcpl	0x00656c62
400311b8:	6964696d 	stmdbvs	r4!, {r0, r2, r3, r5, r6, r8, fp, sp, lr}^
	...

400311bd <LtcParamsConst::DISABLE_MAX7219>:
400311bd:	61736964 	cmnvs	r3, r4, ror #18
400311c1:	5f656c62 	svcpl	0x00656c62
400311c5:	3778616d 	ldrbcc	r6, [r8, -sp, ror #2]!
400311c9:	00393132 	eorseq	r3, r9, r2, lsr r1

400311cd <LtcParamsConst::DISABLE_DISPLAY_OLED>:
400311cd:	61736964 	cmnvs	r3, r4, ror #18
400311d1:	5f656c62 	svcpl	0x00656c62
400311d5:	70736964 	rsbsvc	r6, r3, r4, ror #18
400311d9:	0079616c 	rsbseq	r6, r9, ip, ror #2

400311dd <LtcParamsConst::UTC_OFFSET>:
400311dd:	5f637475 	svcpl	0x00637475
400311e1:	7366666f 	cmnvc	r6, #116391936	; 0x6f00000
400311e5:	 	strvs	r7, [r0, -r5, ror #8]

400311e8 <LtcParamsConst::GPS_START>:
400311e8:	5f737067 	svcpl	0x00737067
400311ec:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
400311f0:	 	strbvc	r0, [r1, #-116]!	; 0xffffff8c

400311f2 <LtcParamsConst::AUTO_START>:
400311f2:	6f747561 	svcvs	0x00747561
400311f6:	6174735f 	cmnvs	r4, pc, asr r3
400311fa:	 	movwvc	r7, #1138	; 0x472

400311fd <LtcParamsConst::SOURCE>:
400311fd:	72756f73 	rsbsvc	r6, r5, #460	; 0x1cc
40031201:	 	cfstr32vs	mvfx6, [r0], {99}	; 0x63

40031204 <LtcParamsConst::FILE_NAME>:
40031204:	2e63746c 	cdpcs	4, 6, cr7, cr3, cr12, {3}
40031208:	00747874 	rsbseq	r7, r4, r4, ror r8

4003120c <s_source>:
4003120c:	0063746c 	rsbeq	r7, r3, ip, ror #8
40031210:	00000000 	andeq	r0, r0, r0
40031214:	74726100 	ldrbtvc	r6, [r2], #-256	; 0xffffff00
40031218:	0074656e 	rsbseq	r6, r4, lr, ror #10
4003121c:	696d0000 	stmdbvs	sp!, {}^	; <UNPREDICTABLE>
40031220:	00006964 	andeq	r6, r0, r4, ror #18
40031224:	74000000 	strvc	r0, [r0], #-0
40031228:	74656e63 	strbtvc	r6, [r5], #-3683	; 0xfffff19d
4003122c:	00000000 	andeq	r0, r0, r0
40031230:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
40031234:	6c616e72 	stclvs	14, cr6, [r1], #-456	; 0xfffffe38
40031238:	70747200 	rsbsvc	r7, r4, r0, lsl #4
4003123c:	64696d2d 	strbtvs	r6, [r9], #-3373	; 0xfffff2d3
40031240:	79730069 	ldmdbvc	r3!, {r0, r3, r5, r6}^
40031244:	6d697473 	cfstrdvs	mvd7, [r9, #-460]!	; 0xfffffe34
40031248:	65000065 	strvs	r0, [r0, #-101]	; 0xffffff9b
4003124c:	00006374 	andeq	r6, r0, r4, ror r3
40031250:	00000000 	andeq	r0, r0, r0
40031254:	2050544e 	subscs	r5, r0, lr, asr #8
40031258:	20642576 	rsbcs	r2, r4, r6, ror r5
4003125c:	76726553 			; <UNDEFINED> instruction: 0x76726553
40031260:	000a7265 	andeq	r7, sl, r5, ror #4
40031264:	726f5020 	rsbvc	r5, pc, #32
40031268:	203a2074 	eorscs	r2, sl, r4, ror r0
4003126c:	000a6425 	andeq	r6, sl, r5, lsr #8
40031270:	72745320 	rsbsvc	r5, r4, #32, 6	; 0x80000000
40031274:	6d757461 	cfldrdvs	mvd7, [r5, #-388]!	; 0xfffffe7c
40031278:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
4003127c:	20000a64 	andcs	r0, r0, r4, ror #20
40031280:	00204354 	eoreq	r4, r0, r4, asr r3
40031284:	6579614c 	ldrbvs	r6, [r9, #-332]!	; 0xfffffeb4
40031288:	00202072 	eoreq	r2, r0, r2, ror r0
	...

4003128d <tcnet::display::sFps>:
4003128d:	34325420 	ldrtcc	r5, [r2], #-1056	; 0xfffffbe0
40031291:	54200000 	strtpl	r0, [r0], #-0
40031295:	00003532 	andeq	r3, r0, r2, lsr r5
40031299:	39325420 	ldmdbcc	r2!, {r5, sl, ip, lr}
4003129d:	54200000 	strtpl	r0, [r0], #-0
400312a1:	00003033 	andeq	r3, r0, r3, lsr r0
400312a5:	 	andeq	r0, r0, r0

400312a8 <vtable for LtcEtcReader>:
	...
400312b0:	4000fff0 	strdmi	pc, [r0], -r0
400312b4:	4000fff4 	strdmi	pc, [r0], -r4
400312b8:	4000feb0 			; <UNDEFINED> instruction: 0x4000feb0
400312bc:	77726f66 	ldrbvc	r6, [r2, -r6, ror #30]!
400312c0:	00647261 	rsbeq	r7, r4, r1, ror #4
400312c4:	6b636162 	blvs	41909854 <__ram_end+0x909854>
400312c8:	64726177 	ldrbtvs	r6, [r2], #-375	; 0xfffffe89
400312cc:	00000000 	andeq	r0, r0, r0
400312d0:	65746e49 	ldrbvs	r6, [r4, #-3657]!	; 0xfffff1b7
400312d4:	6c616e72 	stclvs	14, cr6, [r1], #-456	; 0xfffffe38
400312d8:	0000000a 	andeq	r0, r0, sl
400312dc:	61745320 	cmnvs	r4, r0, lsr #6
400312e0:	3a207472 	bcc	4084e4b0 <__heap_start+0x34e4b0>
400312e4:	322e2520 	eorcc	r2, lr, #32, 10	; 0x8000000
400312e8:	2e252e64 	cdpcs	14, 2, cr2, cr5, cr4, {3}
400312ec:	252e6432 	strcs	r6, [lr, #-1074]!	; 0xfffffbce
400312f0:	3a64322e 	bcc	4193dbb0 <__ram_end+0x93dbb0>
400312f4:	64322e25 	ldrtvs	r2, [r2], #-3621	; 0xfffff1db
400312f8:	0000000a 	andeq	r0, r0, sl
400312fc:	6f745320 	svcvs	0x00745320
40031300:	3a202070 	bcc	408394c8 <__heap_start+0x3394c8>
40031304:	322e2520 	eorcc	r2, lr, #32, 10	; 0x8000000
40031308:	2e252e64 	cdpcs	14, 2, cr2, cr5, cr4, {3}
4003130c:	252e6432 	strcs	r6, [lr, #-1074]!	; 0xfffffbce
40031310:	3a64322e 	bcc	4193dbd0 <__ram_end+0x93dbd0>
40031314:	64322e25 	ldrtvs	r2, [r2], #-3621	; 0xfffff1db
40031318:	0000000a 	andeq	r0, r0, sl
4003131c:	2163746c 	cmncs	r3, ip, ror #8
40031320:	00000000 	andeq	r0, r0, r0

40031324 <TimeCodeConst::TMR_INTV>:
40031324:	0007a120 	andeq	sl, r7, r0, lsr #2
40031328:	00075300 	andeq	r5, r7, r0, lsl #6
4003132c:	00061a80 	andeq	r1, r6, r0, lsl #21
40031330:	00061a80 	andeq	r1, r6, r0, lsl #21

40031334 <CMD_RESUME>:
40031334:	75736572 	ldrbvc	r6, [r3, #-1394]!	; 0xfffffa8e
40031338:	0000656d 	andeq	r6, r0, sp, ror #10

4003133c <CMD_FORWARD>:
4003133c:	77726f66 	ldrbvc	r6, [r2, -r6, ror #30]!
40031340:	23647261 	cmncs	r4, #268435462	; 0x10000006
40031344:	00000000 	andeq	r0, r0, r0

40031348 <CMD_BACKWARD>:
40031348:	6b636162 	blvs	419098d8 <__ram_end+0x9098d8>
4003134c:	64726177 	ldrbtvs	r6, [r2], #-375	; 0xfffffe89
40031350:	00000023 	andeq	r0, r0, r3, lsr #32

40031354 <CMD_DIRECTION>:
40031354:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
40031358:	6f697463 	svcvs	0x00697463
4003135c:	0000236e 	andeq	r2, r0, lr, ror #6

40031360 <CMD_RATE>:
40031360:	65746172 	ldrbvs	r6, [r4, #-370]!	; 0xfffffe8e
40031364:	00000023 	andeq	r0, r0, r3, lsr #32

40031368 <CMD_STOP>:
40031368:	706f7473 	rsbvc	r7, pc, r3, ror r4	; <UNPREDICTABLE>
4003136c:	00000000 	andeq	r0, r0, r0

40031370 <CMD_PITCH>:
40031370:	63746970 	cmnvs	r4, #112, 18	; 0x1c0000
40031374:	00002368 	andeq	r2, r0, r8, ror #6

40031378 <CMD_START>:
40031378:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
4003137c:	00000074 	andeq	r0, r0, r4, ror r0
40031380:	6964696d 	stmdbvs	r4!, {r0, r2, r3, r5, r6, r8, fp, sp, lr}^
40031384:	00000021 	andeq	r0, r0, r1, lsr #32

40031388 <cmd::BPM>:
40031388:	236d7062 	cmncs	sp, #98	; 0x62
4003138c:	00000000 	andeq	r0, r0, r0

40031390 <cmd::STOP>:
40031390:	706f7473 	rsbvc	r7, pc, r3, ror r4	; <UNPREDICTABLE>
40031394:	00000000 	andeq	r0, r0, r0

40031398 <cmd::START>:
40031398:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
4003139c:	00000074 	andeq	r0, r0, r4, ror r0

400313a0 <cmd::CONTINUE>:
400313a0:	746e6f63 	strbtvc	r6, [lr], #-3939	; 0xfffff09d
400313a4:	65756e69 	ldrbvs	r6, [r5, #-3689]!	; 0xfffff197
400313a8:	00000000 	andeq	r0, r0, r0
400313ac:	3a4d5042 	bcc	413854bc <__ram_end+0x3854bc>
400313b0:	00000020 	andeq	r0, r0, r0, lsr #32
400313b4:	0043544c 	subeq	r5, r3, ip, asr #8
400313b8:	20732520 	rsbscs	r2, r3, r0, lsr #10
400313bc:	7074756f 	rsbsvc	r7, r4, pc, ror #10
400313c0:	69207475 	stmdbvs	r0!, {r0, r2, r4, r5, r6, sl, ip, sp, lr}
400313c4:	69642073 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sp}^
400313c8:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
400313cc:	000a6465 	andeq	r6, sl, r5, ror #8
400313d0:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
400313d4:	0074654e 	rsbseq	r6, r4, lr, asr #10
400313d8:	4944494d 	stmdbmi	r4, {r0, r2, r3, r6, r8, fp, lr}^
400313dc:	00000000 	andeq	r0, r0, r0
400313e0:	00435445 	subeq	r5, r3, r5, asr #8
400313e4:	44454c4f 	strbmi	r4, [r5], #-3151	; 0xfffff3b1
400313e8:	00000000 	andeq	r0, r0, r0
400313ec:	3778614d 	ldrbcc	r6, [r8, -sp, asr #2]!
400313f0:	00393132 	eorseq	r3, r9, r2, lsr r1
400313f4:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
400313f8:	00007878 	andeq	r7, r0, r8, ror r8
400313fc:	20424752 	subcs	r4, r2, r2, asr r7
40031400:	656e6170 	strbvs	r6, [lr, #-368]!	; 0xfffffe90
40031404:	0000006c 	andeq	r0, r0, ip, rrx
40031408:	2d2d2d2d 	stccs	13, cr2, [sp, #-180]!	; 0xffffff4c
4003140c:	2d2d2d2d 	stccs	13, cr2, [sp, #-180]!	; 0xffffff4c
	...

40031411 <ltc::Destination::OutputString>:
40031411:	70736944 	rsbsvc	r6, r3, r4, asr #18
40031415:	2079616c 	rsbscs	r6, r9, ip, ror #2
40031419:	44454c4f 	strbmi	r4, [r5], #-3151	; 0xfffff3b1
4003141d:	614d0000 	mrsvs	r0, (UNDEF: 77)
40031421:	31323778 	teqcc	r2, r8, ror r7
40031425:	00000039 	andeq	r0, r0, r9, lsr r0
40031429:	00000000 	andeq	r0, r0, r0
4003142d:	2d4e4944 	vstrcs.16	s9, [lr, #-136]	; 0xffffff78	; <UNPREDICTABLE>
40031431:	4944494d 	stmdbmi	r4, {r0, r2, r3, r6, r8, fp, lr}^
40031435:	00000000 	andeq	r0, r0, r0
40031439:	72410000 	subvc	r0, r1, #0
4003143d:	654e2d74 	strbvs	r2, [lr, #-3444]	; 0xfffff28c
40031441:	00000074 	andeq	r0, r0, r4, ror r0
40031445:	00000000 	andeq	r0, r0, r0
40031449:	0043544c 	subeq	r5, r3, ip, asr #8
	...
40031455:	54450000 	strbpl	r0, [r5], #-0
40031459:	00000043 	andeq	r0, r0, r3, asr #32
	...
40031465:	2050544e 	subscs	r5, r0, lr, asr #8
40031469:	76726553 			; <UNDEFINED> instruction: 0x76726553
4003146d:	00007265 	andeq	r7, r0, r5, ror #4
40031471:	54520000 	ldrbpl	r0, [r2], #-0
40031475:	494d2d50 	stmdbmi	sp, {r4, r6, r8, sl, fp, sp}^
40031479:	00004944 	andeq	r4, r0, r4, asr #18
4003147d:	00000000 	andeq	r0, r0, r0
40031481:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
40031485:	00007878 	andeq	r7, r0, r8, ror r8
40031489:	00000000 	andeq	r0, r0, r0
4003148d:	47520000 	ldrbmi	r0, [r2, -r0]
40031491:	61702042 	cmnvs	r0, r2, asr #32
40031495:	006c656e 	rsbeq	r6, ip, lr, ror #10
40031499:	00000000 	andeq	r0, r0, r0
4003149d:	 			; <UNDEFINED> instruction: 0xf0000000

400314a0 <.LANCHOR2>:
400314a0:	017f7ff0 	ldrsheq	r7, [pc, #-240]	; 400313b8 <cmd::CONTINUE+0x18>
400314a4:	00000001 	andeq	r0, r0, r1
400314a8:	0000f700 	andeq	pc, r0, r0, lsl #14

400314ac <vtable for RtpMidiReader>:
	...
400314b4:	40013ab0 			; <UNDEFINED> instruction: 0x40013ab0
400314b8:	40013ab4 			; <UNDEFINED> instruction: 0x40013ab4
400314bc:	4001377c 	andmi	r3, r1, ip, ror r7

400314c0 <CMD_RATE>:
400314c0:	65746172 	ldrbvs	r6, [r4, #-370]!	; 0xfffffe8e
400314c4:	00000023 	andeq	r0, r0, r3, lsr #32

400314c8 <CMD_STOP>:
400314c8:	706f7473 	rsbvc	r7, pc, r3, ror r4	; <UNPREDICTABLE>
400314cc:	00000000 	andeq	r0, r0, r0

400314d0 <CMD_START>:
400314d0:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
400314d4:	00000074 	andeq	r0, r0, r4, ror r0
400314d8:	656e6374 	strbvs	r6, [lr, #-884]!	; 0xfffffc8c
400314dc:	00002174 	andeq	r2, r0, r4, ror r1

400314e0 <CMD_TIMECODE>:
400314e0:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
400314e4:	65646f63 	strbvs	r6, [r4, #-3939]!	; 0xfffff09d
400314e8:	00000023 	andeq	r0, r0, r3, lsr #32

400314ec <CMD_TYPE>:
400314ec:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
400314f0:	00000023 	andeq	r0, r0, r3, lsr #32

400314f4 <CMD_LAYER>:
400314f4:	6579616c 	ldrbvs	r6, [r9, #-364]!	; 0xfffffe94
400314f8:	37002372 	smlsdxcc	r0, r2, r3, r2
400314fc:	21676573 	smccs	30291	; 0x7653
40031500:	73694400 	cmnvc	r9, #0, 8
40031504:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
40031508:	42475220 	submi	r5, r7, #32, 4
4003150c:	6e617020 	cdpvs	0, 6, cr7, cr1, cr0, {1}
40031510:	44006c65 	strmi	r6, [r0], #-3173	; 0xfffff39b
40031514:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
40031518:	57207961 	strpl	r7, [r0, -r1, ror #18]!
4003151c:	78383253 	ldmdavc	r8!, {r0, r1, r4, r6, r9, ip, sp}
40031520:	54200078 	strtpl	r0, [r0], #-120	; 0xffffff88
40031524:	20657079 	rsbcs	r7, r5, r9, ror r0
40031528:	3a202020 	bcc	408395b0 <__heap_start+0x3395b0>
4003152c:	20732520 	rsbscs	r2, r3, r0, lsr #10
40031530:	5d64255b 	cfstr64pl	mvdx2, [r4, #-364]!	; 0xfffffe94
40031534:	4d20000a 	stcmi	0, cr0, [r0, #-40]!	; 0xffffffd8
40031538:	69707061 	ldmdbvs	r0!, {r0, r5, r6, ip, sp, lr}^
4003153c:	3a20676e 	bcc	4084b2fc <__heap_start+0x34b2fc>
40031540:	20732520 	rsbscs	r2, r3, r0, lsr #10
40031544:	5d64255b 	cfstr64pl	mvdx2, [r4, #-364]!	; 0xfffffe94
40031548:	4d20000a 	stcmi	0, cr0, [r0, #-40]!	; 0xffffffd8
4003154c:	65747361 	ldrbvs	r7, [r4, #-865]!	; 0xfffffc9f
40031550:	3a202072 	bcc	40839720 <__heap_start+0x339720>
40031554:	0a642520 	beq	4193a9dc <__ram_end+0x93a9dc>
40031558:	47522000 	ldrbmi	r2, [r2, -r0]
4003155c:	20202042 	eorcs	r2, r0, r2, asr #32
40031560:	203a2020 	eorscs	r2, sl, r0, lsr #32
40031564:	72616843 	rsbvc	r6, r1, #4390912	; 0x430000
40031568:	65746361 	ldrbvs	r6, [r4, #-865]!	; 0xfffffc9f
4003156c:	78302072 	ldmdavc	r0!, {r1, r4, r5, r6, sp}
40031570:	58362e25 	ldmdapl	r6!, {r0, r2, r5, r9, sl, fp, sp}
40031574:	6f43202c 	svcvs	0x0043202c
40031578:	206e6f6c 	rsbcs	r6, lr, ip, ror #30
4003157c:	2e257830 	mcrcs	8, 1, r7, cr5, cr0, {1}
40031580:	202c5836 	eorcs	r5, ip, r6, lsr r8
40031584:	7373654d 	cmnvc	r3, #322961408	; 0x13400000
40031588:	20656761 	rsbcs	r6, r5, r1, ror #14
4003158c:	2e257830 	mcrcs	8, 1, r7, cr5, cr0, {1}
40031590:	000a5836 	andeq	r5, sl, r6, lsr r8
40031594:	206f4e20 	rsbcs	r4, pc, r0, lsr #28
40031598:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
4003159c:	00212928 	eoreq	r2, r1, r8, lsr #18

400315a0 <ltcdisplayrgb::rgb::PATH>:
400315a0:	00626772 	rsbeq	r6, r2, r2, ror r7

400315a4 <ltcdisplayrgb::master::PATH>:
400315a4:	7473616d 	ldrbtvc	r6, [r3], #-365	; 0xfffffe93
400315a8:	 	movwvc	r7, #613	; 0x265

400315ab <ltcdisplayrgb::showmsg::PATH>:
400315ab:	776f6873 			; <UNDEFINED> instruction: 0x776f6873
400315af:	0067736d 	rsbeq	r7, r7, sp, ror #6
	...

400315b4 <ltc::encoder::sTables>:
400315b4:	00000019 	andeq	r0, r0, r9, lsl r0
400315b8:	00000018 	andeq	r0, r0, r8, lsl r0
400315bc:	7d007d00 	stcvc	13, cr7, [r0, #-0]
400315c0:	7d007d00 	stcvc	13, cr7, [r0, #-0]
400315c4:	7d007d00 	stcvc	13, cr7, [r0, #-0]
400315c8:	7d007d00 	stcvc	13, cr7, [r0, #-0]
400315cc:	7d007d00 	stcvc	13, cr7, [r0, #-0]
400315d0:	7d007d00 	stcvc	13, cr7, [r0, #-0]
400315d4:	7d007d00 	stcvc	13, cr7, [r0, #-0]
400315d8:	7d007d00 	stcvc	13, cr7, [r0, #-0]
400315dc:	7d007d00 	stcvc	13, cr7, [r0, #-0]
400315e0:	7d007d00 	stcvc	13, cr7, [r0, #-0]
400315e4:	7d007d00 	stcvc	13, cr7, [r0, #-0]
400315e8:	7d007d00 	stcvc	13, cr7, [r0, #-0]
400315ec:	00007d00 	andeq	r7, r0, r0, lsl #26
400315f0:	83008300 	movwhi	r8, #768	; 0x300
400315f4:	83008300 	movwhi	r8, #768	; 0x300
400315f8:	83008300 	movwhi	r8, #768	; 0x300
400315fc:	83008300 	movwhi	r8, #768	; 0x300
40031600:	83008300 	movwhi	r8, #768	; 0x300
40031604:	83008300 	movwhi	r8, #768	; 0x300
40031608:	83008300 	movwhi	r8, #768	; 0x300
4003160c:	83008300 	movwhi	r8, #768	; 0x300
40031610:	83008300 	movwhi	r8, #768	; 0x300
40031614:	83008300 	movwhi	r8, #768	; 0x300
40031618:	83008300 	movwhi	r8, #768	; 0x300
4003161c:	83008300 	movwhi	r8, #768	; 0x300
40031620:	00008300 	andeq	r8, r0, r0, lsl #6
40031624:	83008300 	movwhi	r8, #768	; 0x300
40031628:	83008300 	movwhi	r8, #768	; 0x300
4003162c:	83008300 	movwhi	r8, #768	; 0x300
40031630:	83008300 	movwhi	r8, #768	; 0x300
40031634:	83008300 	movwhi	r8, #768	; 0x300
40031638:	83008300 	movwhi	r8, #768	; 0x300
4003163c:	7d000000 	stcvc	0, cr0, [r0, #-0]
40031640:	7d007d00 	stcvc	13, cr7, [r0, #-0]
40031644:	7d007d00 	stcvc	13, cr7, [r0, #-0]
40031648:	7d007d00 	stcvc	13, cr7, [r0, #-0]
4003164c:	7d007d00 	stcvc	13, cr7, [r0, #-0]
40031650:	7d007d00 	stcvc	13, cr7, [r0, #-0]
40031654:	00007d00 	andeq	r7, r0, r0, lsl #26
40031658:	7d007d00 	stcvc	13, cr7, [r0, #-0]
4003165c:	7d007d00 	stcvc	13, cr7, [r0, #-0]
40031660:	7d007d00 	stcvc	13, cr7, [r0, #-0]
40031664:	7d007d00 	stcvc	13, cr7, [r0, #-0]
40031668:	7d007d00 	stcvc	13, cr7, [r0, #-0]
4003166c:	7d007d00 	stcvc	13, cr7, [r0, #-0]
40031670:	83000000 	movwhi	r0, #0
40031674:	83008300 	movwhi	r8, #768	; 0x300
40031678:	83008300 	movwhi	r8, #768	; 0x300
4003167c:	83008300 	movwhi	r8, #768	; 0x300
40031680:	83008300 	movwhi	r8, #768	; 0x300
40031684:	83008300 	movwhi	r8, #768	; 0x300
40031688:	00008300 	andeq	r8, r0, r0, lsl #6
4003168c:	00000018 	andeq	r0, r0, r8, lsl r0
40031690:	00000019 	andeq	r0, r0, r9, lsl r0
40031694:	7d007d00 	stcvc	13, cr7, [r0, #-0]
40031698:	7d007d00 	stcvc	13, cr7, [r0, #-0]
4003169c:	7d007d00 	stcvc	13, cr7, [r0, #-0]
400316a0:	7d007d00 	stcvc	13, cr7, [r0, #-0]
400316a4:	7d007d00 	stcvc	13, cr7, [r0, #-0]
400316a8:	7d007d00 	stcvc	13, cr7, [r0, #-0]
400316ac:	7d007d00 	stcvc	13, cr7, [r0, #-0]
400316b0:	7d007d00 	stcvc	13, cr7, [r0, #-0]
400316b4:	7d007d00 	stcvc	13, cr7, [r0, #-0]
400316b8:	7d007d00 	stcvc	13, cr7, [r0, #-0]
400316bc:	7d007d00 	stcvc	13, cr7, [r0, #-0]
400316c0:	7d007d00 	stcvc	13, cr7, [r0, #-0]
400316c4:	00000000 	andeq	r0, r0, r0
400316c8:	83008300 	movwhi	r8, #768	; 0x300
400316cc:	83008300 	movwhi	r8, #768	; 0x300
400316d0:	83008300 	movwhi	r8, #768	; 0x300
400316d4:	83008300 	movwhi	r8, #768	; 0x300
400316d8:	83008300 	movwhi	r8, #768	; 0x300
400316dc:	83008300 	movwhi	r8, #768	; 0x300
400316e0:	83008300 	movwhi	r8, #768	; 0x300
400316e4:	83008300 	movwhi	r8, #768	; 0x300
400316e8:	83008300 	movwhi	r8, #768	; 0x300
400316ec:	83008300 	movwhi	r8, #768	; 0x300
400316f0:	83008300 	movwhi	r8, #768	; 0x300
400316f4:	83008300 	movwhi	r8, #768	; 0x300
400316f8:	00000000 	andeq	r0, r0, r0
400316fc:	83008300 	movwhi	r8, #768	; 0x300
40031700:	83008300 	movwhi	r8, #768	; 0x300
40031704:	83008300 	movwhi	r8, #768	; 0x300
40031708:	83008300 	movwhi	r8, #768	; 0x300
4003170c:	83008300 	movwhi	r8, #768	; 0x300
40031710:	83008300 	movwhi	r8, #768	; 0x300
40031714:	7d007d00 	stcvc	13, cr7, [r0, #-0]
40031718:	7d007d00 	stcvc	13, cr7, [r0, #-0]
4003171c:	7d007d00 	stcvc	13, cr7, [r0, #-0]
40031720:	7d007d00 	stcvc	13, cr7, [r0, #-0]
40031724:	7d007d00 	stcvc	13, cr7, [r0, #-0]
40031728:	7d007d00 	stcvc	13, cr7, [r0, #-0]
4003172c:	00000000 	andeq	r0, r0, r0
40031730:	7d007d00 	stcvc	13, cr7, [r0, #-0]
40031734:	7d007d00 	stcvc	13, cr7, [r0, #-0]
40031738:	7d007d00 	stcvc	13, cr7, [r0, #-0]
4003173c:	7d007d00 	stcvc	13, cr7, [r0, #-0]
40031740:	7d007d00 	stcvc	13, cr7, [r0, #-0]
40031744:	7d007d00 	stcvc	13, cr7, [r0, #-0]
40031748:	83008300 	movwhi	r8, #768	; 0x300
4003174c:	83008300 	movwhi	r8, #768	; 0x300
40031750:	83008300 	movwhi	r8, #768	; 0x300
40031754:	83008300 	movwhi	r8, #768	; 0x300
40031758:	83008300 	movwhi	r8, #768	; 0x300
4003175c:	83008300 	movwhi	r8, #768	; 0x300
40031760:	00000000 	andeq	r0, r0, r0
40031764:	00000014 	andeq	r0, r0, r4, lsl r0
40031768:	0000001e 	andeq	r0, r0, lr, lsl r0
4003176c:	7d007d00 	stcvc	13, cr7, [r0, #-0]
40031770:	7d007d00 	stcvc	13, cr7, [r0, #-0]
40031774:	7d007d00 	stcvc	13, cr7, [r0, #-0]
40031778:	7d007d00 	stcvc	13, cr7, [r0, #-0]
4003177c:	7d007d00 	stcvc	13, cr7, [r0, #-0]
40031780:	7d007d00 	stcvc	13, cr7, [r0, #-0]
40031784:	7d007d00 	stcvc	13, cr7, [r0, #-0]
40031788:	7d007d00 	stcvc	13, cr7, [r0, #-0]
4003178c:	7d007d00 	stcvc	13, cr7, [r0, #-0]
40031790:	7d007d00 	stcvc	13, cr7, [r0, #-0]
	...
400317a0:	83008300 	movwhi	r8, #768	; 0x300
400317a4:	83008300 	movwhi	r8, #768	; 0x300
400317a8:	83008300 	movwhi	r8, #768	; 0x300
400317ac:	83008300 	movwhi	r8, #768	; 0x300
400317b0:	83008300 	movwhi	r8, #768	; 0x300
400317b4:	83008300 	movwhi	r8, #768	; 0x300
400317b8:	83008300 	movwhi	r8, #768	; 0x300
400317bc:	83008300 	movwhi	r8, #768	; 0x300
400317c0:	83008300 	movwhi	r8, #768	; 0x300
400317c4:	83008300 	movwhi	r8, #768	; 0x300
	...
400317d4:	83008300 	movwhi	r8, #768	; 0x300
400317d8:	83008300 	movwhi	r8, #768	; 0x300
400317dc:	83008300 	movwhi	r8, #768	; 0x300
400317e0:	83008300 	movwhi	r8, #768	; 0x300
400317e4:	83008300 	movwhi	r8, #768	; 0x300
400317e8:	7d007d00 	stcvc	13, cr7, [r0, #-0]
400317ec:	7d007d00 	stcvc	13, cr7, [r0, #-0]
400317f0:	7d007d00 	stcvc	13, cr7, [r0, #-0]
400317f4:	7d007d00 	stcvc	13, cr7, [r0, #-0]
400317f8:	7d007d00 	stcvc	13, cr7, [r0, #-0]
	...
40031808:	7d007d00 	stcvc	13, cr7, [r0, #-0]
4003180c:	7d007d00 	stcvc	13, cr7, [r0, #-0]
40031810:	7d007d00 	stcvc	13, cr7, [r0, #-0]
40031814:	7d007d00 	stcvc	13, cr7, [r0, #-0]
40031818:	7d007d00 	stcvc	13, cr7, [r0, #-0]
4003181c:	83008300 	movwhi	r8, #768	; 0x300
40031820:	83008300 	movwhi	r8, #768	; 0x300
40031824:	83008300 	movwhi	r8, #768	; 0x300
40031828:	83008300 	movwhi	r8, #768	; 0x300
4003182c:	83008300 	movwhi	r8, #768	; 0x300
	...
4003183c:	00000014 	andeq	r0, r0, r4, lsl r0
40031840:	0000001e 	andeq	r0, r0, lr, lsl r0
40031844:	7d007d00 	stcvc	13, cr7, [r0, #-0]
40031848:	7d007d00 	stcvc	13, cr7, [r0, #-0]
4003184c:	7d007d00 	stcvc	13, cr7, [r0, #-0]
40031850:	7d007d00 	stcvc	13, cr7, [r0, #-0]
40031854:	7d007d00 	stcvc	13, cr7, [r0, #-0]
40031858:	7d007d00 	stcvc	13, cr7, [r0, #-0]
4003185c:	7d007d00 	stcvc	13, cr7, [r0, #-0]
40031860:	7d007d00 	stcvc	13, cr7, [r0, #-0]
40031864:	7d007d00 	stcvc	13, cr7, [r0, #-0]
40031868:	7d007d00 	stcvc	13, cr7, [r0, #-0]
	...
40031878:	83008300 	movwhi	r8, #768	; 0x300
4003187c:	83008300 	movwhi	r8, #768	; 0x300
40031880:	83008300 	movwhi	r8, #768	; 0x300
40031884:	83008300 	movwhi	r8, #768	; 0x300
40031888:	83008300 	movwhi	r8, #768	; 0x300
4003188c:	83008300 	movwhi	r8, #768	; 0x300
40031890:	83008300 	movwhi	r8, #768	; 0x300
40031894:	83008300 	movwhi	r8, #768	; 0x300
40031898:	83008300 	movwhi	r8, #768	; 0x300
4003189c:	83008300 	movwhi	r8, #768	; 0x300
	...
400318ac:	83008300 	movwhi	r8, #768	; 0x300
400318b0:	83008300 	movwhi	r8, #768	; 0x300
400318b4:	83008300 	movwhi	r8, #768	; 0x300
400318b8:	83008300 	movwhi	r8, #768	; 0x300
400318bc:	83008300 	movwhi	r8, #768	; 0x300
400318c0:	7d007d00 	stcvc	13, cr7, [r0, #-0]
400318c4:	7d007d00 	stcvc	13, cr7, [r0, #-0]
400318c8:	7d007d00 	stcvc	13, cr7, [r0, #-0]
400318cc:	7d007d00 	stcvc	13, cr7, [r0, #-0]
400318d0:	7d007d00 	stcvc	13, cr7, [r0, #-0]
	...
400318e0:	7d007d00 	stcvc	13, cr7, [r0, #-0]
400318e4:	7d007d00 	stcvc	13, cr7, [r0, #-0]
400318e8:	7d007d00 	stcvc	13, cr7, [r0, #-0]
400318ec:	7d007d00 	stcvc	13, cr7, [r0, #-0]
400318f0:	7d007d00 	stcvc	13, cr7, [r0, #-0]
400318f4:	83008300 	movwhi	r8, #768	; 0x300
400318f8:	83008300 	movwhi	r8, #768	; 0x300
400318fc:	83008300 	movwhi	r8, #768	; 0x300
40031900:	83008300 	movwhi	r8, #768	; 0x300
40031904:	83008300 	movwhi	r8, #768	; 0x300
	...
40031914:	20424752 	subcs	r4, r2, r2, asr r7
40031918:	656e6150 	strbvs	r6, [lr, #-336]!	; 0xfffffeb0
4003191c:	 	strmi	r0, [r0], -ip, ror #20

4003191f <aTypes>:
4003191f:	6d6c6946 			; <UNDEFINED> instruction: 0x6d6c6946
40031923:	20343220 	eorscs	r3, r4, r0, lsr #4
40031927:	55424500 	strbpl	r4, [r2, #-1280]	; 0xfffffb00
4003192b:	20353220 	eorscs	r3, r5, r0, lsr #4
4003192f:	46440020 	strbmi	r0, [r4], -r0, lsr #32
40031933:	2e393220 	cdpcs	2, 3, cr3, cr9, cr0, {1}
40031937:	53003739 	movwpl	r3, #1849	; 0x739
4003193b:	4554504d 	ldrbmi	r5, [r4, #-77]	; 0xffffffb3
4003193f:	00303320 	eorseq	r3, r0, r0, lsr #6
40031943:	2d2d2d2d 	stccs	13, cr2, [sp, #-180]!	; 0xffffff4c
40031947:	2d2d202d 	stccs	0, cr2, [sp, #-180]!	; 0xffffff4c
	...

4003194c <aSources>:
4003194c:	0043544c 	subeq	r5, r3, ip, asr #8
40031950:	00000000 	andeq	r0, r0, r0
40031954:	74724100 	ldrbtvc	r4, [r2], #-256	; 0xffffff00
40031958:	74654e2d 	strbtvc	r4, [r5], #-3629	; 0xfffff1d3
4003195c:	694d0000 	stmdbvs	sp, {}^	; <UNPREDICTABLE>
40031960:	00006964 	andeq	r6, r0, r4, ror #18
40031964:	54000000 	strpl	r0, [r0], #-0
40031968:	74654e43 	strbtvc	r4, [r5], #-3651	; 0xfffff1bd
4003196c:	00000000 	andeq	r0, r0, r0
40031970:	65746e49 	ldrbvs	r6, [r4, #-3657]!	; 0xfffff1b7
40031974:	6c616e72 	stclvs	14, cr6, [r1], #-456	; 0xfffffe38
40031978:	70745200 	rsbsvc	r5, r4, r0, lsl #4
4003197c:	6964694d 	stmdbvs	r4!, {r0, r2, r3, r6, r8, fp, sp, lr}^
40031980:	79530000 	ldmdbvc	r3, {}^	; <UNPREDICTABLE>
40031984:	6d697473 	cfstrdvs	mvd7, [r9, #-460]!	; 0xfffffe34
40031988:	45000065 	strmi	r0, [r0, #-101]	; 0xffffff9b
4003198c:	00004354 	andeq	r4, r0, r4, asr r3
40031990:	00000000 	andeq	r0, r0, r0

40031994 <vtable for LtcDisplayRgbPanel>:
	...
4003199c:	4001526c 	andmi	r5, r1, ip, ror #4
400319a0:	400152a8 	andmi	r5, r1, r8, lsr #5
400319a4:	400152c8 	andmi	r5, r1, r8, asr #5
400319a8:	40015460 	andmi	r5, r1, r0, ror #8
400319ac:	400155c0 	andmi	r5, r1, r0, asr #11
400319b0:	40015320 	andmi	r5, r1, r0, lsr #6
400319b4:	40015268 	andmi	r5, r1, r8, ror #4
400319b8:	40015734 	andmi	r5, r1, r4, lsr r7
400319bc:	40015778 	andmi	r5, r1, r8, ror r7
400319c0:	40015374 	andmi	r5, r1, r4, ror r3
400319c4:	40015314 	andmi	r5, r1, r4, lsl r3
400319c8:	532d3720 			; <UNDEFINED> instruction: 0x532d3720
400319cc:	656d6765 	strbvs	r6, [sp, #-1893]!	; 0xfffff89b
400319d0:	2520746e 	strcs	r7, [r0, #-1134]!	; 0xfffffb92
400319d4:	69442064 	stmdbvs	r4, {r2, r5, r6, sp}^
400319d8:	28746967 	ldmdacs	r4!, {r0, r1, r2, r5, r6, r8, fp, sp, lr}^
400319dc:	202c2973 	eorcs	r2, ip, r3, ror r9
400319e0:	43206425 			; <UNDEFINED> instruction: 0x43206425
400319e4:	6e6f6c6f 	cdpvs	12, 6, cr6, cr15, cr15, {3}
400319e8:	25202c73 	strcs	r2, [r0, #-3187]!	; 0xfffff38d
400319ec:	454c2064 	strbmi	r2, [ip, #-100]	; 0xffffff9c
400319f0:	000a7344 	andeq	r7, sl, r4, asr #6

400319f4 <vtable for LtcDisplayWS28xx7Segment>:
	...
400319fc:	40015804 	andmi	r5, r1, r4, lsl #16
40031a00:	40015a44 	andmi	r5, r1, r4, asr #20
40031a04:	40015da4 	andmi	r5, r1, r4, lsr #27
40031a08:	40015808 	andmi	r5, r1, r8, lsl #16
40031a0c:	400158e4 	andmi	r5, r1, r4, ror #17
40031a10:	400159c0 	andmi	r5, r1, r0, asr #19
40031a14:	400159f8 	strdmi	r5, [r1], -r8
40031a18:	40015da8 	andmi	r5, r1, r8, lsr #27
40031a1c:	40015da8 	andmi	r5, r1, r8, lsr #27
40031a20:	40015dac 	andmi	r5, r1, ip, lsr #27
40031a24:	40015a2c 	andmi	r5, r1, ip, lsr #20
40031a28:	74614d20 	strbtvc	r4, [r1], #-3360	; 0xfffff2e0
40031a2c:	20786972 	rsbscs	r6, r8, r2, ror r9
40031a30:	25786425 	ldrbcs	r6, [r8, #-1061]!	; 0xfffffbdb
40031a34:	00000a64 	andeq	r0, r0, r4, ror #20

40031a38 <vtable for LtcDisplayWS28xxMatrix>:
	...
40031a40:	40015a9c 	mulmi	r1, ip, sl
40031a44:	40015d40 	andmi	r5, r1, r0, asr #26
40031a48:	40015da4 	andmi	r5, r1, r4, lsr #27
40031a4c:	40015aa0 	andmi	r5, r1, r0, lsr #21
40031a50:	40015ba8 	andmi	r5, r1, r8, lsr #23
40031a54:	40015c88 	andmi	r5, r1, r8, lsl #25
40031a58:	40015cdc 	ldrdmi	r5, [r1], -ip
40031a5c:	40015da8 	andmi	r5, r1, r8, lsr #27
40031a60:	40015da8 	andmi	r5, r1, r8, lsr #27
40031a64:	40015dac 	andmi	r5, r1, ip, lsr #27
40031a68:	40015d28 	andmi	r5, r1, r8, lsr #26

40031a6c <TCNetConst::FPS>:
40031a6c:	1e1d1918 			; <UNDEFINED> instruction: 0x1e1d1918

40031a70 <TCNetParamsConst::USE_TIMECODE>:
40031a70:	5f657375 	svcpl	0x00657375
40031a74:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
40031a78:	65646f63 	strbvs	r6, [r4, #-3939]!	; 0xfffff09d
	...

40031a7d <TCNetParamsConst::TIMECODE_TYPE>:
40031a7d:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
40031a81:	65646f63 	strbvs	r6, [r4, #-3939]!	; 0xfffff09d
40031a85:	7079745f 	rsbsvc	r7, r9, pc, asr r4
40031a89:	 	cmnvs	ip, r5, rrx

40031a8b <TCNetParamsConst::LAYER>:
40031a8b:	6579616c 	ldrbvs	r6, [r9, #-364]!	; 0xfffffe94
40031a8f:	 	svcvs	0x006e0072

40031a91 <TCNetParamsConst::NODE_NAME>:
40031a91:	65646f6e 	strbvs	r6, [r4, #-3950]!	; 0xfffff092
40031a95:	6d616e5f 	stclvs	14, cr6, [r1, #-380]!	; 0xfffffe84
40031a99:	 	cmnvs	r4, #101	; 0x65

40031a9b <TCNetParamsConst::FILE_NAME>:
40031a9b:	656e6374 	strbvs	r6, [lr, #-884]!	; 0xfffffc8c
40031a9f:	78742e74 	ldmdavc	r4!, {r2, r4, r5, r6, r9, sl, fp, sp}^
40031aa3:	00000074 	andeq	r0, r0, r4, ror r0
	...

40031aa8 <vtable for AppleMidi>:
	...
40031ab8:	4002d3e0 	andmi	sp, r2, r0, ror #7

40031abc <vtable for RtpMidi>:
	...
40031ac4:	400173f8 	strdmi	r7, [r1], -r8
40031ac8:	40017418 	andmi	r7, r1, r8, lsl r4
40031acc:	40017808 	andmi	r7, r1, r8, lsl #16

40031ad0 <s_StateTableFullStep>:
40031ad0:	00040200 	andeq	r0, r4, r0, lsl #4
40031ad4:	20010003 	andcs	r0, r1, r3
40031ad8:	00000203 	andeq	r0, r0, r3, lsl #4
40031adc:	00010203 	andeq	r0, r1, r3, lsl #4
40031ae0:	00040006 	andeq	r0, r4, r6
40031ae4:	10000506 	andne	r0, r0, r6, lsl #10
40031ae8:	00040506 	andeq	r0, r4, r6, lsl #10

40031aec <s_StateTableHalfStep>:
40031aec:	00010203 	andeq	r0, r1, r3, lsl #4
40031af0:	00010013 	andeq	r0, r1, r3, lsl r0
40031af4:	00000223 	andeq	r0, r0, r3, lsr #4
40031af8:	00040503 	andeq	r0, r4, r3, lsl #10
40031afc:	20040303 	andcs	r0, r4, r3, lsl #6
40031b00:	10030503 	andne	r0, r3, r3, lsl #10

40031b04 <Seg7Array>:
40031b04:	796d307e 	stmdbvc	sp!, {r1, r2, r3, r4, r5, r6, ip, sp}^
40031b08:	705f5b33 	subsvc	r5, pc, r3, lsr fp	; <UNPREDICTABLE>
40031b0c:	1f777b7f 	svcne	0x00777b7f
40031b10:	474f3d4e 	strbmi	r3, [pc, -lr, asr #26]
	...
40031b24:	00220000 	eoreq	r0, r2, r0
40031b28:	20000000 	andcs	r0, r0, r0
40031b2c:	0000784e 	andeq	r7, r0, lr, asr #16
40031b30:	00000104 	andeq	r0, r0, r4, lsl #2
40031b34:	796d307e 	stmdbvc	sp!, {r1, r2, r3, r4, r5, r6, ip, sp}^
40031b38:	705f5b33 	subsvc	r5, pc, r3, lsr fp	; <UNPREDICTABLE>
40031b3c:	00007b7f 	andeq	r7, r0, pc, ror fp
40031b40:	00000000 	andeq	r0, r0, r0
40031b44:	4e1f7700 	cdpmi	7, 1, cr7, cr15, cr0, {0}
40031b48:	5e474f3d 	mcrpl	15, 2, r4, cr7, cr13, {1}
40031b4c:	00383037 	eorseq	r3, r8, r7, lsr r0
40031b50:	7e15000e 	cdpvc	0, 1, cr0, cr5, cr14, {0}
40031b54:	5b057367 	blpl	4018e8f8 <__bss_end+0x122770>
40031b58:	00003e0f 	andeq	r3, r0, pc, lsl #28
40031b5c:	4e003b00 	vmlami.f64	d3, d0, d0
40031b60:	08007800 	stmdaeq	r0, {fp, ip, sp, lr}
40031b64:	0d1f7702 	ldceq	7, cr7, [pc, #-8]	; 40031b64 <Seg7Array+0x60>
40031b68:	5e476f3d 	mcrpl	15, 2, r6, cr7, cr13, {1}
40031b6c:	00381017 	eorseq	r1, r8, r7, lsl r0
40031b70:	1d150030 	ldcne	0, cr0, [r5, #-192]	; 0xffffff40
40031b74:	5b057367 	blpl	4018e918 <__bss_end+0x122790>
40031b78:	00001c0f 	andeq	r1, r0, pc, lsl #24
	...
40031b84:	6e6b6e55 	mcrvs	14, 3, r6, cr11, cr5, {2}
40031b88:	006e776f 	rsbeq	r7, lr, pc, ror #14

40031b8c <pixel::MAPS>:
40031b8c:	00424752 	subeq	r4, r2, r2, asr r7
40031b90:	00474252 	subeq	r4, r7, r2, asr r2
40031b94:	00425247 	subeq	r5, r2, r7, asr #4
40031b98:	00524247 	subseq	r4, r2, r7, asr #4
40031b9c:	00475242 	subeq	r5, r7, r2, asr #4
40031ba0:	00524742 	subseq	r4, r2, r2, asr #14

40031ba4 <pixel::TYPES>:
40031ba4:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
40031ba8:	00003130 	andeq	r3, r0, r0, lsr r1
40031bac:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
40031bb0:	00003131 	andeq	r3, r0, r1, lsr r1
40031bb4:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
40031bb8:	00003231 	andeq	r3, r0, r1, lsr r2
40031bbc:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
40031bc0:	00423231 	subeq	r3, r2, r1, lsr r2
40031bc4:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
40031bc8:	00003331 	andeq	r3, r0, r1, lsr r3
40031bcc:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
40031bd0:	00003531 	andeq	r3, r0, r1, lsr r5
40031bd4:	38364b53 	ldmdacc	r6!, {r0, r1, r4, r6, r8, r9, fp, lr}
40031bd8:	00003231 	andeq	r3, r0, r1, lsr r2
40031bdc:	38364b53 	ldmdacc	r6!, {r0, r1, r4, r6, r8, r9, fp, lr}
40031be0:	00573231 	subseq	r3, r7, r1, lsr r2
40031be4:	31534355 	cmpcc	r3, r5, asr r3
40031be8:	00333039 	eorseq	r3, r3, r9, lsr r0
40031bec:	32534355 	subscc	r4, r3, #1409286145	; 0x54000001
40031bf0:	00333039 	eorseq	r3, r3, r9, lsr r0
40031bf4:	38385343 	ldmdacc	r8!, {r0, r1, r6, r8, r9, ip, lr}
40031bf8:	00003231 	andeq	r3, r0, r1, lsr r2
40031bfc:	31415041 	cmpcc	r1, r1, asr #32
40031c00:	00003230 	andeq	r3, r0, r0, lsr r2
40031c04:	38394b53 	ldmdacc	r9!, {r0, r1, r4, r6, r8, r9, fp, lr}
40031c08:	00003232 	andeq	r3, r0, r2, lsr r2
40031c0c:	31383950 	teqcc	r8, r0, asr r9
40031c10:	00000033 	andeq	r0, r0, r3, lsr r0
40031c14:	5f706d73 	svcpl	0x00706d73
40031c18:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
40031c1c:	6f635f74 	svcvs	0x00635f74
40031c20:	31286572 			; <UNDEFINED> instruction: 0x31286572
40031c24:	6f63202c 	svcvs	0x0063202c
40031c28:	5f316572 	svcpl	0x00316572
40031c2c:	6b736174 	blvs	41d0a204 <__ram_end+0xd0a204>
40031c30:	75520029 	ldrbvc	r0, [r2, #-41]	; 0xffffffd7
40031c34:	6e696e6e 	cdpvs	14, 6, cr6, cr9, cr14, {3}
40031c38:	00000067 	andeq	r0, r0, r7, rrx

40031c3c <hal::utc_validate(float)::s_ValidOffets>:
40031c3c:	c1180000 	tstgt	r8, r0
40031c40:	c0600000 	rsbgt	r0, r0, r0
40031c44:	40600000 	rsbmi	r0, r0, r0
40031c48:	40900000 	addsmi	r0, r0, r0
40031c4c:	40b00000 	adcsmi	r0, r0, r0
40031c50:	40b80000 	adcsmi	r0, r8, r0
40031c54:	40d00000 	sbcsmi	r0, r0, r0
40031c58:	410c0000 	mrsmi	r0, (UNDEF: 12)
40031c5c:	41180000 	tstmi	r8, r0
40031c60:	41280000 			; <UNDEFINED> instruction: 0x41280000
40031c64:	414c0000 	mrsmi	r0, (UNDEF: 76)

40031c68 <aTag>:
40031c68:	47434d52 	smlsldmi	r4, r3, r2, sp
40031c6c:	445a4147 	ldrbmi	r4, [sl], #-327	; 0xfffffeb9
40031c70:	73252241 			; <UNDEFINED> instruction: 0x73252241
40031c74:	2e253a22 	vmulcs.f32	s6, s10, s5
40031c78:	002c662a 	eoreq	r6, ip, sl, lsr #12
40031c7c:	3d732523 	cfldr64cc	mvdx2, [r3, #-140]!	; 0xffffff74
40031c80:	662a2e25 	strtvs	r2, [sl], -r5, lsr #28
40031c84:	 	ldrbtvc	r0, [r5], #-10

40031c86 <GPSParamsConst::UTC_OFFSET>:
40031c86:	5f637475 	svcpl	0x00637475
40031c8a:	7366666f 	cmnvc	r6, #116391936	; 0x6f00000
40031c8e:	 	strvs	r7, [r0, #-1125]	; 0xfffffb9b

40031c91 <GPSParamsConst::ENABLE>:
40031c91:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
40031c95:	 	cfstr32vs	mvfx6, [r0, #-432]	; 0xfffffe50

40031c98 <GPSParamsConst::MODULE>:
40031c98:	75646f6d 	strbvc	r6, [r4, #-3949]!	; 0xfffff093
40031c9c:	 	strvs	r6, [r0, -ip, ror #10]

40031c9f <GPSParamsConst::FILE_NAME>:
40031c9f:	2e737067 	cdpcs	0, 7, cr7, cr3, cr7, {3}
40031ca3:	00747874 	rsbseq	r7, r4, r4, ror r8
40031ca7:	20535047 	subscs	r5, r3, r7, asr #32
40031cab:	5241555b 	subpl	r5, r1, #381681664	; 0x16c00000
40031caf:	5d752554 	cfldr64pl	mvdx2, [r5, #-336]!	; 0xfffffeb0
40031cb3:	4d20000a 	stcmi	0, cr0, [r0, #-40]!	; 0xffffffd8
40031cb7:	6c75646f 	cfldrdvs	mvd6, [r5], #-444	; 0xfffffe44
40031cbb:	203a2065 	eorscs	r2, sl, r5, rrx
40031cbf:	5b207325 	blpl	4084e95b <__heap_start+0x34e95b>
40031cc3:	0a5d7525 	beq	4178f15f <__ram_end+0x78f15f>
40031cc7:	54552000 	ldrbpl	r2, [r5], #-0
40031ccb:	666f2043 	strbtvs	r2, [pc], -r3, asr #32
40031ccf:	74657366 	strbtvc	r7, [r5], #-870	; 0xfffffc9a
40031cd3:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
40031cd7:	73282064 			; <UNDEFINED> instruction: 0x73282064
40031cdb:	6e6f6365 	cdpvs	3, 6, cr6, cr15, cr5, {3}
40031cdf:	0a297364 	beq	40a8ea77 <__heap_start+0x58ea77>
40031ce3:	6f4e2000 	svcvs	0x004e2000
40031ce7:	78694620 	stmdavc	r9!, {r5, r9, sl, lr}^
40031ceb:	61482000 	mrsvs	r2, (UNDEF: 72)
40031cef:	69462073 	stmdbvs	r6, {r0, r1, r4, r5, r6, sp}^
40031cf3:	49200078 	stmdbmi	r0!, {r3, r4, r5, r6}
40031cf7:	00656c64 	rsbeq	r6, r5, r4, ror #24

40031cfb <GPSConst::BAUD_115200>:
40031cfb:	41435024 	cmpmi	r3, r4, lsr #32
40031cff:	2c313053 	ldccs	0, cr3, [r1], #-332	; 0xfffffeb4
40031d03:	39312a35 	ldmdbcc	r1!, {r0, r2, r4, r5, r9, fp, sp}
40031d07:	00000a0d 	andeq	r0, r0, sp, lsl #20
	...
40031d4b:	50240000 	eorpl	r0, r4, r0
40031d4f:	2c584255 	lfmcs	f4, 2, [r8], {85}	; 0x55
40031d53:	312c3134 			; <UNDEFINED> instruction: 0x312c3134
40031d57:	3030302c 	eorscc	r3, r0, ip, lsr #32
40031d5b:	30302c37 	eorscc	r2, r0, r7, lsr ip
40031d5f:	312c3330 			; <UNDEFINED> instruction: 0x312c3330
40031d63:	30323531 	eorscc	r3, r2, r1, lsr r5
40031d67:	2a302c30 	bcs	40c3ce2f <__heap_start+0x73ce2f>
40031d6b:	0a0d3831 	beq	4037fe37 <__irq_stack_top+0x5fe37>
	...
40031d9f:	544d5024 	strbpl	r5, [sp], #-36	; 0xffffffdc
40031da3:	3135324b 	teqcc	r5, fp, asr #4
40031da7:	3531312c 	ldrcc	r3, [r1, #-300]!	; 0xfffffed4
40031dab:	2a303032 	bcs	40c3de7b <__heap_start+0x73de7b>
40031daf:	0a0d4631 	beq	4038367b <__irq_stack_top+0x6367b>
	...

40031df1 <GPSConst::MODULE>:
40031df1:	4d475441 	cfstrdmi	mvd5, [r7, #-260]	; 0xfffffefc
40031df5:	48363333 	ldmdami	r6!, {r0, r1, r4, r5, r8, r9, ip, sp}
	...
40031e01:	6f6c6275 	svcvs	0x006c6275
40031e05:	454e2d78 	strbmi	r2, [lr, #-3448]	; 0xfffff288
40031e09:	0000374f 	andeq	r3, r0, pc, asr #14
40031e0d:	00000000 	andeq	r0, r0, r0
40031e11:	334b544d 	movtcc	r5, #46157	; 0xb44d
40031e15:	00393333 	eorseq	r3, r9, r3, lsr r3
	...
40031e21:	204d4452 	subcs	r4, sp, r2, asr r4
40031e25:	70736552 	rsbsvc	r6, r3, r2, asr r5
40031e29:	65646e6f 	strbvs	r6, [r4, #-3695]!	; 0xfffff191
40031e2d:	6f632072 	svcvs	0x00632072
40031e31:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
40031e35:	74617275 	strbtvc	r7, [r1], #-629	; 0xfffffd8b
40031e39:	006e6f69 	rsbeq	r6, lr, r9, ror #30
40031e3d:	6f725020 	svcvs	0x00725020
40031e41:	6f636f74 	svcvs	0x00636f74
40031e45:	6556206c 	ldrbvs	r2, [r6, #-108]	; 0xffffff94
40031e49:	6f697372 	svcvs	0x00697372
40031e4d:	6425206e 	strtvs	r2, [r5], #-110	; 0xffffff92
40031e51:	0a64252e 	beq	4193b311 <__ram_end+0x93b311>
40031e55:	4d442000 	stclmi	0, cr2, [r4, #-0]
40031e59:	64412058 	strbvs	r2, [r1], #-88	; 0xffffffa8
40031e5d:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
40031e61:	20202073 	eorcs	r2, r0, r3, ror r0
40031e65:	3a202020 	bcc	40839eed <__heap_start+0x339eed>
40031e69:	0a642520 	beq	4193b2f1 <__ram_end+0x93b2f1>
40031e6d:	4d442000 	stclmi	0, cr2, [r4, #-0]
40031e71:	6f462058 	svcvs	0x00462058
40031e75:	7270746f 	rsbsvc	r7, r0, #1862270976	; 0x6f000000
40031e79:	20746e69 	rsbscs	r6, r4, r9, ror #28
40031e7d:	3a202020 	bcc	40839f05 <__heap_start+0x339f05>
40031e81:	0a642520 	beq	4193b309 <__ram_end+0x93b309>
40031e85:	65502000 	ldrbvs	r2, [r0, #-0]
40031e89:	6e6f7372 	mcrvs	3, 3, r7, cr15, cr2, {3}
40031e8d:	74696c61 	strbtvc	r6, [r9], #-3169	; 0xfffff39f
40031e91:	64252079 	strtvs	r2, [r5], #-121	; 0xffffff87
40031e95:	20666f20 	rsbcs	r6, r6, r0, lsr #30
40031e99:	5b206425 	blpl	4084af35 <__heap_start+0x34af35>
40031e9d:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
40031ea1:	20000a5d 	andcs	r0, r0, sp, asr sl
40031ea5:	20627553 	rsbcs	r7, r2, r3, asr r5
40031ea9:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
40031ead:	20736563 	rsbscs	r6, r3, r3, ror #10
40031eb1:	20202020 	eorcs	r2, r0, r0, lsr #32
40031eb5:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
40031eb9:	20000a64 	andcs	r0, r0, r4, ror #20
40031ebd:	736e6553 	cmnvc	lr, #348127232	; 0x14c00000
40031ec1:	2073726f 	rsbscs	r7, r3, pc, ror #4
40031ec5:	20202020 	eorcs	r2, r0, r0, lsr #32
40031ec9:	20202020 	eorcs	r2, r0, r0, lsr #32
40031ecd:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
40031ed1:	 	andeq	r0, r0, r4, ror #20

40031ed4 <vtable for RDMDeviceResponder>:
	...
40031edc:	4001a920 	andmi	sl, r1, r0, lsr #18
40031ee0:	4001a9d8 	ldrdmi	sl, [r1], -r8
40031ee4:	4001a918 	andmi	sl, r1, r8, lsl r9
40031ee8:	4001a91c 	andmi	sl, r1, ip, lsl r9

40031eec <UID_ALL>:
40031eec:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
40031ef0:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>

40031ef4 <RDMHandler::PID_DEFINITIONS>:
40031ef4:	00000060 	andeq	r0, r0, r0, rrx
40031ef8:	4001b15c 	andmi	fp, r1, ip, asr r1
	...
40031f08:	01010000 	mrseq	r0, (UNDEF: 1)
40031f0c:	00000080 	andeq	r0, r0, r0, lsl #1
40031f10:	4001b31c 	andmi	fp, r1, ip, lsl r3
	...
40031f20:	01010100 	mrseq	r0, (UNDEF: 17)
40031f24:	00000081 	andeq	r0, r0, r1, lsl #1
40031f28:	4001b3bc 			; <UNDEFINED> instruction: 0x4001b3bc
	...
40031f38:	01010100 	mrseq	r0, (UNDEF: 17)
40031f3c:	00000082 	andeq	r0, r0, r2, lsl #1
40031f40:	4001b358 	andmi	fp, r1, r8, asr r3
40031f44:	00000000 	andeq	r0, r0, r0
40031f48:	4001b5a0 	andmi	fp, r1, r0, lsr #11
40031f4c:	00000000 	andeq	r0, r0, r0
40031f50:	01010100 	mrseq	r0, (UNDEF: 17)
40031f54:	00000090 	muleq	r0, r0, r0
40031f58:	4001b1fc 	strdmi	fp, [r1], -ip
40031f5c:	00000000 	andeq	r0, r0, r0
40031f60:	4001b550 	andmi	fp, r1, r0, asr r5
40031f64:	00000000 	andeq	r0, r0, r0
40031f68:	01010100 	mrseq	r0, (UNDEF: 17)
40031f6c:	00001000 	andeq	r1, r0, r0
40031f70:	4001b39c 	mulmi	r1, ip, r3
40031f74:	00000000 	andeq	r0, r0, r0
40031f78:	4001b488 	andmi	fp, r1, r8, lsl #9
40031f7c:	00000000 	andeq	r0, r0, r0
40031f80:	01010000 	mrseq	r0, (UNDEF: 1)
40031f84:	00001001 	andeq	r1, r0, r1
	...
40031f90:	4001b414 	andmi	fp, r1, r4, lsl r4
40031f94:	00000000 	andeq	r0, r0, r0
40031f98:	01010100 	mrseq	r0, (UNDEF: 17)
40031f9c:	00000700 	andeq	r0, r0, r0, lsl #14
40031fa0:	4001bd04 	andmi	fp, r1, r4, lsl #26
	...
40031fb0:	01000000 	mrseq	r0, (UNDEF: 0)
40031fb4:	00000701 	andeq	r0, r0, r1, lsl #14
40031fb8:	4001bd34 	andmi	fp, r1, r4, lsr sp
	...
40031fc8:	01000004 	tsteq	r0, r4
40031fcc:	00000702 	andeq	r0, r0, r2, lsl #14
40031fd0:	4001bddc 	ldrdmi	fp, [r1], -ip
	...
40031fe0:	01000004 	tsteq	r0, r4
40031fe4:	00000703 	andeq	r0, r0, r3, lsl #14
40031fe8:	4001be20 	andmi	fp, r1, r0, lsr #28
40031fec:	00000000 	andeq	r0, r0, r0
40031ff0:	4001be64 	andmi	fp, r1, r4, ror #28
40031ff4:	00000000 	andeq	r0, r0, r0
40031ff8:	01000004 	tsteq	r0, r4
40031ffc:	00000704 	andeq	r0, r0, r4, lsl #14
40032000:	4001bf08 	andmi	fp, r1, r8, lsl #30
40032004:	00000000 	andeq	r0, r0, r0
40032008:	4001bf4c 	andmi	fp, r1, ip, asr #30
4003200c:	00000000 	andeq	r0, r0, r0
40032010:	01000004 	tsteq	r0, r4
40032014:	00000705 	andeq	r0, r0, r5, lsl #14
40032018:	4001bff0 	strdmi	fp, [r1], -r0
	...
40032028:	01000004 	tsteq	r0, r4
4003202c:	00000707 	andeq	r0, r0, r7, lsl #14
	...
40032038:	4001bfb0 			; <UNDEFINED> instruction: 0x4001bfb0
4003203c:	00000000 	andeq	r0, r0, r0
40032040:	01000004 	tsteq	r0, r4
40032044:	00000706 	andeq	r0, r0, r6, lsl #14
40032048:	4001c05c 	andmi	ip, r1, ip, asr r0
4003204c:	00000000 	andeq	r0, r0, r0
40032050:	4001c0bc 	strhmi	ip, [r1], -ip	; <UNPREDICTABLE>
40032054:	00000000 	andeq	r0, r0, r0
40032058:	01000004 	tsteq	r0, r4
4003205c:	00000709 	andeq	r0, r0, r9, lsl #14
	...
40032068:	4001c158 	andmi	ip, r1, r8, asr r1
4003206c:	00000000 	andeq	r0, r0, r0
40032070:	01000004 	tsteq	r0, r4
40032074:	0000070b 	andeq	r0, r0, fp, lsl #14
40032078:	4001be98 	mulmi	r1, r8, lr
	...
40032088:	01000001 	tsteq	r0, r1
4003208c:	0000070a 	andeq	r0, r0, sl, lsl #14
40032090:	4001c23c 	andmi	ip, r1, ip, lsr r2
40032094:	00000000 	andeq	r0, r0, r0
40032098:	4001c290 	mulmi	r1, r0, r2
4003209c:	00000000 	andeq	r0, r0, r0
400320a0:	01000000 	mrseq	r0, (UNDEF: 0)
400320a4:	0000070c 	andeq	r0, r0, ip, lsl #14
400320a8:	4001c304 	andmi	ip, r1, r4, lsl #6
400320ac:	00000000 	andeq	r0, r0, r0
400320b0:	4001c34c 	andmi	ip, r1, ip, asr #6
400320b4:	00000000 	andeq	r0, r0, r0
400320b8:	01000000 	mrseq	r0, (UNDEF: 0)
400320bc:	0000070d 	andeq	r0, r0, sp, lsl #14
400320c0:	4001c398 	mulmi	r1, r8, r3
400320c4:	00000000 	andeq	r0, r0, r0
400320c8:	4001c3e0 	andmi	ip, r1, r0, ror #7
400320cc:	00000000 	andeq	r0, r0, r0
400320d0:	01000000 	mrseq	r0, (UNDEF: 0)

400320d4 <RDMConst::MANUFACTURER_ID>:
400320d4:	 	strbtvc	r0, [r8], #-80	; 0xffffffb0

400320d6 <RDMConst::MANUFACTURER_NAME>:
400320d6:	70747468 	rsbsvc	r7, r4, r8, ror #8
400320da:	772f2f3a 			; <UNDEFINED> instruction: 0x772f2f3a
400320de:	6f2e7777 	svcvs	0x002e7777
400320e2:	676e6172 			; <UNDEFINED> instruction: 0x676e6172
400320e6:	2d697065 	stclcs	0, cr7, [r9, #-404]!	; 0xfffffe6c
400320ea:	2e786d64 	cdpcs	13, 7, cr6, cr8, cr4, {3}
400320ee:	0067726f 	rsbeq	r7, r7, pc, ror #4
400320f2:	204d4452 	subcs	r4, sp, r2, asr r4
400320f6:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
400320fa:	63206563 			; <UNDEFINED> instruction: 0x63206563
400320fe:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
40032102:	61727567 	cmnvs	r2, r7, ror #10
40032106:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
4003210a:	614d2000 	mrsvs	r2, (UNDEF: 77)
4003210e:	6166756e 	cmnvs	r6, lr, ror #10
40032112:	72757463 	rsbsvc	r7, r5, #1660944384	; 0x63000000
40032116:	4e207265 	cdpmi	2, 2, cr7, cr0, cr5, {3}
4003211a:	20656d61 	rsbcs	r6, r5, r1, ror #26
4003211e:	2e25203a 	mcrcs	0, 1, r2, cr5, cr10, {1}
40032122:	000a732a 	andeq	r7, sl, sl, lsr #6
40032126:	6e614d20 	cdpvs	13, 6, cr4, cr1, cr0, {1}
4003212a:	63616675 	cmnvs	r1, #122683392	; 0x7500000
4003212e:	65727574 	ldrbvs	r7, [r2, #-1396]!	; 0xfffffa8c
40032132:	44492072 	strbmi	r2, [r9], #-114	; 0xffffff8e
40032136:	3a202020 	bcc	4083a1be <__heap_start+0x33a1be>
4003213a:	322e2520 	eorcc	r2, lr, #32, 10	; 0x8000000
4003213e:	322e2558 	eorcc	r2, lr, #88, 10	; 0x16000000
40032142:	20000a58 	andcs	r0, r0, r8, asr sl
40032146:	69726553 	ldmdbvs	r2!, {r0, r1, r4, r6, r8, sl, sp, lr}^
4003214a:	4e206c61 	cdpmi	12, 2, cr6, cr0, cr1, {3}
4003214e:	65626d75 	strbvs	r6, [r2, #-3445]!	; 0xfffff28b
40032152:	20202072 	eorcs	r2, r0, r2, ror r0
40032156:	203a2020 	eorscs	r2, sl, r0, lsr #32
4003215a:	58322e25 	ldmdapl	r2!, {r0, r2, r5, r9, sl, fp, sp}
4003215e:	58322e25 	ldmdapl	r2!, {r0, r2, r5, r9, sl, fp, sp}
40032162:	58322e25 	ldmdapl	r2!, {r0, r2, r5, r9, sl, fp, sp}
40032166:	58322e25 	ldmdapl	r2!, {r0, r2, r5, r9, sl, fp, sp}
4003216a:	5220000a 	eorpl	r0, r0, #10
4003216e:	20746f6f 	rsbscs	r6, r4, pc, ror #30
40032172:	6562616c 	strbvs	r6, [r2, #-364]!	; 0xfffffe94
40032176:	2020206c 	eorcs	r2, r0, ip, rrx
4003217a:	20202020 	eorcs	r2, r0, r0, lsr #32
4003217e:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
40032182:	0a732a2e 	beq	41cfca42 <__ram_end+0xcfca42>
40032186:	72502000 	subsvc	r2, r0, #0
4003218a:	6375646f 	cmnvs	r5, #1862270976	; 0x6f000000
4003218e:	61432074 	hvcvs	12804	; 0x3204
40032192:	6f676574 	svcvs	0x00676574
40032196:	20207972 	eorcs	r7, r0, r2, ror r9
4003219a:	2e25203a 	mcrcs	0, 1, r2, cr5, cr10, {1}
4003219e:	2e255832 	mcrcs	8, 1, r5, cr5, cr2, {1}
400321a2:	000a5832 	andeq	r5, sl, r2, lsr r8
400321a6:	6f725020 	svcvs	0x00725020
400321aa:	74637564 	strbtvc	r7, [r3], #-1380	; 0xfffffa9c
400321ae:	74654420 	strbtvc	r4, [r5], #-1056	; 0xfffffbe0
400321b2:	206c6961 	rsbcs	r6, ip, r1, ror #18
400321b6:	3a202020 	bcc	4083a23e <__heap_start+0x33a23e>
400321ba:	322e2520 	eorcc	r2, lr, #32, 10	; 0x8000000
400321be:	322e2558 	eorcc	r2, lr, #88, 10	; 0x16000000
400321c2:	 	svcmi	0x00000a58

400321c5 <DEVICE_LABEL>:
400321c5:	6e61724f 	cdpvs	2, 6, cr7, cr1, cr15, {2}
400321c9:	50206567 	eorpl	r6, r0, r7, ror #10
400321cd:	655a2069 	ldrbvs	r2, [sl, #-105]	; 0xffffff97
400321d1:	52206f72 	eorpl	r6, r0, #456	; 0x1c8
400321d5:	44204d44 	strtmi	r4, [r0], #-3396	; 0xfffff2bc
400321d9:	63697665 	cmnvs	r9, #105906176	; 0x6500000
400321dd:	 	andvs	r0, r0, r5, rrx

400321e0 <s_aStorSize>:
400321e0:	00000060 	andeq	r0, r0, r0, rrx
400321e4:	00000020 	andeq	r0, r0, r0, lsr #32
400321e8:	00000040 	andeq	r0, r0, r0, asr #32
400321ec:	00000040 	andeq	r0, r0, r0, asr #32
400321f0:	00000020 	andeq	r0, r0, r0, lsr #32
400321f4:	00000020 	andeq	r0, r0, r0, lsr #32
400321f8:	000001e0 	andeq	r0, r0, r0, ror #3
400321fc:	00000040 	andeq	r0, r0, r0, asr #32
40032200:	00000020 	andeq	r0, r0, r0, lsr #32
40032204:	00000060 	andeq	r0, r0, r0, rrx
40032208:	00000030 	andeq	r0, r0, r0, lsr r0
4003220c:	00000020 	andeq	r0, r0, r0, lsr #32
40032210:	000003b0 			; <UNDEFINED> instruction: 0x000003b0
40032214:	00000030 	andeq	r0, r0, r0, lsr r0
40032218:	00000040 	andeq	r0, r0, r0, asr #32
4003221c:	00000020 	andeq	r0, r0, r0, lsr #32
40032220:	00000060 	andeq	r0, r0, r0, rrx
40032224:	00000020 	andeq	r0, r0, r0, lsr #32
40032228:	00000400 	andeq	r0, r0, r0, lsl #8
4003222c:	00000020 	andeq	r0, r0, r0, lsr #32
40032230:	00000020 	andeq	r0, r0, r0, lsr #32
40032234:	00000040 	andeq	r0, r0, r0, asr #32
40032238:	00000060 	andeq	r0, r0, r0, rrx
4003223c:	00000020 	andeq	r0, r0, r0, lsr #32
40032240:	00000020 	andeq	r0, r0, r0, lsr #32
40032244:	00000140 	andeq	r0, r0, r0, asr #2
40032248:	00000020 	andeq	r0, r0, r0, lsr #32

4003224c <s_aSignature>:
4003224c:	01567641 	cmpeq	r6, r1, asr #12

40032250 <EnvParamsConst::UTC_OFFSET>:
40032250:	5f637475 	svcpl	0x00637475
40032254:	7366666f 	cmnvc	r6, #116391936	; 0x6f00000
40032258:	 	strvs	r7, [r0, #-1125]	; 0xfffffb9b

4003225b <EnvParamsConst::FILE_NAME>:
4003225b:	2e766e65 	cdpcs	14, 7, cr6, cr6, cr5, {3}
4003225f:	00747874 	rsbseq	r7, r4, r4, ror r8
40032263:	726f7453 	rsbvc	r7, pc, #1392508928	; 0x53000000
40032267:	76654465 	strbtvc	r4, [r5], -r5, ror #8
4003226b:	3a656369 	bcc	4198b017 <__ram_end+0x98b017>
4003226f:	20732520 	rsbscs	r2, r3, r0, lsr #10
40032273:	74636573 	strbtvc	r6, [r3], #-1395	; 0xfffffa8d
40032277:	7320726f 			; <UNDEFINED> instruction: 0x7320726f
4003227b:	20657a69 	rsbcs	r7, r5, r9, ror #20
4003227f:	74207525 	strtvc	r7, [r0], #-1317	; 0xfffffadb
40032283:	6c61746f 	cfstrdvs	mvd7, [r1], #-444	; 0xfffffe44
40032287:	20752520 	rsbscs	r2, r5, r0, lsr #10
4003228b:	65747962 	ldrbvs	r7, [r4, #-2402]!	; 0xfffff69e
4003228f:	255b2073 	ldrbcs	r2, [fp, #-115]	; 0xffffff8d
40032293:	426b2075 	rsbmi	r2, fp, #117	; 0x75
40032297:	65000a5d 	strvs	r0, [r0, #-2653]	; 0xfffff5a3
4003229b:	726f7272 	rsbvc	r7, pc, #536870919	; 0x20000007
4003229f:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
400322a3:	20687361 	rsbcs	r7, r8, r1, ror #6
400322a7:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
400322ab:	20752520 	rsbscs	r2, r5, r0, lsr #10
400322af:	7525203e 	strvc	r2, [r5, #-62]!	; 0xffffffc2
400322b3:	7257000a 	subsvc	r0, r7, #10
400322b7:	20657469 	rsbcs	r7, r5, r9, ror #8
400322bb:	6d726966 			; <UNDEFINED> instruction: 0x6d726966
400322bf:	65726177 	ldrbvs	r6, [r2, #-375]!	; 0xfffffe89
400322c3:	61724500 	cmnvs	r2, r0, lsl #10
400322c7:	65006573 	strvs	r6, [r0, #-1395]	; 0xfffffa8d
400322cb:	726f7272 	rsbvc	r7, pc, #536870919	; 0x20000007
400322cf:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
400322d3:	20687361 	rsbcs	r7, r8, r1, ror #6
400322d7:	73617265 	cmnvc	r1, #1342177286	; 0x50000006
400322db:	72570065 	subsvc	r0, r7, #101	; 0x65
400322df:	6e697469 	cdpvs	4, 6, cr7, cr9, cr9, {3}
400322e3:	72650067 	rsbvc	r0, r5, #103	; 0x67
400322e7:	3a726f72 	bcc	41cce0b7 <__ram_end+0xcce0b7>
400322eb:	616c6620 	cmnvs	ip, r0, lsr #12
400322ef:	77206873 			; <UNDEFINED> instruction: 0x77206873
400322f3:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
400322f7:	6e6f4400 	cdpvs	4, 6, cr4, cr15, cr0, {0}
400322fb:	6f430065 	svcvs	0x00430065
400322ff:	20646c75 	rsbcs	r6, r4, r5, ror ip
40032303:	20746f6e 	rsbscs	r6, r4, lr, ror #30
40032307:	6e65706f 	cdpvs	0, 6, cr7, cr5, cr15, {3}
4003230b:	6c696620 	stclvs	6, cr6, [r9], #-128	; 0xffffff80
4003230f:	25203a65 	strcs	r3, [r0, #-2661]!	; 0xfffff59b
40032313:	65000a73 	strvs	r0, [r0, #-2675]	; 0xfffff58d
40032317:	726f7272 	rsbvc	r7, pc, #536870919	; 0x20000007
4003231b:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
4003231f:	20687361 	rsbcs	r7, r8, r1, ror #6
40032323:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
40032327:	72726500 	rsbsvc	r6, r2, #0, 10
4003232b:	203a726f 	eorscs	r7, sl, pc, ror #4
4003232f:	73616c66 	cmnvc	r1, #26112	; 0x6600
40032333:	65762068 	ldrbvs	r2, [r6, #-104]!	; 0xffffff98
40032337:	79666972 	stmdbvc	r6!, {r1, r4, r5, r6, r8, fp, sp, lr}^
4003233b:	20642500 	rsbcs	r2, r4, r0, lsl #10
4003233f:	65747962 	ldrbvs	r7, [r4, #-2402]!	; 0xfffff69e
40032343:	72772073 	rsbsvc	r2, r7, #115	; 0x73
40032347:	65747469 	ldrbvs	r7, [r4, #-1129]!	; 0xfffffb97
4003234b:	4e000a6e 	vmlsmi.f32	s0, s0, s29
4003234f:	5053206f 	subspl	r2, r3, pc, rrx
40032353:	6c662049 	stclvs	0, cr2, [r6], #-292	; 0xfffffedc
40032357:	00687361 	rsbeq	r7, r8, r1, ror #6

4003235b <aFileuImage>:
4003235b:	616d4975 	smcvs	54421	; 0xd495
4003235f:	 	strvc	r6, [r0, #-1383]	; 0xfffffa99

40032362 <aFileUbootSpi>:
40032362:	6f6f6275 	svcvs	0x006f6275
40032366:	70732e74 	rsbsvc	r2, r3, r4, ror lr
4003236a:	 	svcvs	0x004e0069

4003236c <aNoDifference>:
4003236c:	64206f4e 	strtvs	r6, [r0], #-3918	; 0xfffff0b2
40032370:	65666669 	strbvs	r6, [r6, #-1641]!	; 0xfffff997
40032374:	636e6572 	cmnvs	lr, #478150656	; 0x1c800000
40032378:	 	stmdavs	r3, {r0, r2, r5, r6}^

4003237a <aCheckDifference>:
4003237a:	63656843 	cmnvs	r5, #4390912	; 0x430000
4003237e:	6964206b 	stmdbvs	r4!, {r0, r1, r3, r5, r6, sp}^
40032382:	72656666 	rsbvc	r6, r5, #106954752	; 0x6600000
40032386:	65636e65 	strbvs	r6, [r3, #-3685]!	; 0xfffff19b
	...

4003238b <aDone>:
4003238b:	656e6f44 	strbvs	r6, [lr, #-3908]!	; 0xfffff0bc
	...

40032390 <aWriting>:
40032390:	74697257 	strbtvc	r7, [r9], #-599	; 0xfffffda9
40032394:	00676e69 	rsbeq	r6, r7, r9, ror #28
40032398:	70747468 	rsbsvc	r7, r4, r8, ror #8
4003239c:	772f2f3a 			; <UNDEFINED> instruction: 0x772f2f3a
400323a0:	6f2e7777 	svcvs	0x002e7777
400323a4:	676e6172 			; <UNDEFINED> instruction: 0x676e6172
400323a8:	2d697065 	stclcs	0, cr7, [r9, #-404]!	; 0xfffffe6c
400323ac:	2e786d64 	cdpcs	13, 7, cr6, cr8, cr4, {3}
400323b0:	0067726f 	rsbeq	r7, r7, pc, ror #4

400323b4 <FlashCodeInstallParamsConst::INSTALL_UIMAGE>:
400323b4:	74736e69 	ldrbtvc	r6, [r3], #-3689	; 0xfffff197
400323b8:	5f6c6c61 	svcpl	0x006c6c61
400323bc:	616d6975 	smcvs	54933	; 0xd695
400323c0:	 	stmdbvs	r0, {r0, r1, r2, r5, r6, r8, sl, sp, lr}

400323c3 <FlashCodeInstallParamsConst::INSTALL_UBOOT>:
400323c3:	74736e69 	ldrbtvc	r6, [r3], #-3689	; 0xfffff197
400323c7:	5f6c6c61 	svcpl	0x006c6c61
400323cb:	6f6f6275 	svcvs	0x006f6275
400323cf:	 	rsbsvc	r0, r3, r4, ror r0

400323d1 <FlashCodeInstallParamsConst::FILE_NAME>:
400323d1:	66697073 			; <UNDEFINED> instruction: 0x66697073
400323d5:	6873616c 	ldmdavs	r3!, {r2, r3, r5, r6, r8, sp, lr}^
400323d9:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
400323dd:	74654400 	strbtvc	r4, [r5], #-1024	; 0xfffffc00
400323e1:	65746365 	ldrbvs	r6, [r4, #-869]!	; 0xfffffc9b
400323e5:	73252064 			; <UNDEFINED> instruction: 0x73252064
400323e9:	74697720 	strbtvc	r7, [r9], #-1824	; 0xfffff8e0
400323ed:	65732068 	ldrbvs	r2, [r3, #-104]!	; 0xffffff98
400323f1:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
400323f5:	7a697320 	bvc	41a8f07d <__ram_end+0xa8f07d>
400323f9:	64252065 	strtvs	r2, [r5], #-101	; 0xffffff9b
400323fd:	746f7420 	strbtvc	r7, [pc], #-1056	; 40032405 <FlashCodeInstallParamsConst::FILE_NAME+0x34>
40032401:	25206c61 	strcs	r6, [r0, #-3169]!	; 0xfffff39f
40032405:	79622064 	stmdbvc	r2!, {r2, r5, r6, sp}^
40032409:	0a736574 	beq	41d0b9e1 <__ram_end+0xd0b9e1>
4003240d:	 	stmdagt	r0, {}	; <UNPREDICTABLE>

40032410 <flashes>:
40032410:	000000c8 	andeq	r0, r0, r8, asr #1
40032414:	4001df94 	mulmi	r1, r4, pc	; <UNPREDICTABLE>
40032418:	000000c2 	andeq	r0, r0, r2, asr #1
4003241c:	4001e008 	andmi	lr, r1, r8
40032420:	000000ef 	andeq	r0, r0, pc, ror #1
40032424:	4001db18 	andmi	sp, r1, r8, lsl fp
40032428:	58353257 	ldmdapl	r5!, {r0, r1, r2, r4, r6, r9, ip, sp}
4003242c:	57003034 	smladxpl	r0, r4, r0, r3
40032430:	31583532 	cmpcc	r8, r2, lsr r5
40032434:	32570036 	subscc	r0, r7, #54	; 0x36
40032438:	32335835 	eorscc	r5, r3, #3473408	; 0x350000
4003243c:	35325700 	ldrcc	r5, [r2, #-1792]!	; 0xfffff900
40032440:	00343658 	eorseq	r3, r4, r8, asr r6
40032444:	51353257 	teqpl	r5, r7, asr r2
40032448:	4c423038 	mcrrmi	0, 3, r3, r2, cr8
4003244c:	35325700 	ldrcc	r5, [r2, #-1792]!	; 0xfffff900
40032450:	43363151 	teqmi	r6, #1073741844	; 0x40000014
40032454:	3257004c 	subscc	r0, r7, #76	; 0x4c
40032458:	32335135 	eorscc	r5, r3, #1073741837	; 0x4000000d
4003245c:	57005642 	strpl	r5, [r0, -r2, asr #12]
40032460:	36513532 			; <UNDEFINED> instruction: 0x36513532
40032464:	00564334 	subseq	r4, r6, r4, lsr r3
40032468:	51353257 	teqpl	r5, r7, asr r2
4003246c:	42383231 	eorsmi	r3, r8, #268435459	; 0x10000003
40032470:	32570056 	subscc	r0, r7, #86	; 0x56
40032474:	35325135 	ldrcc	r5, [r2, #-309]!	; 0xfffffecb
40032478:	32570036 	subscc	r0, r7, #54	; 0x36
4003247c:	30385135 	eorscc	r5, r8, r5, lsr r1
40032480:	57005742 	strpl	r5, [r0, -r2, asr #14]
40032484:	31513532 	cmpcc	r1, r2, lsr r5
40032488:	00574436 	subseq	r4, r7, r6, lsr r4

4003248c <winbond_spi_flash_table>:
4003248c:	00083013 	andeq	r3, r8, r3, lsl r0
40032490:	40032428 	andmi	r2, r3, r8, lsr #8
40032494:	00203015 	eoreq	r3, r0, r5, lsl r0
40032498:	4003242f 	andmi	r2, r3, pc, lsr #8
4003249c:	00403016 	subeq	r3, r0, r6, lsl r0
400324a0:	40032436 	andmi	r2, r3, r6, lsr r4
400324a4:	00803017 	addeq	r3, r0, r7, lsl r0
400324a8:	4003243d 	andmi	r2, r3, sp, lsr r4
400324ac:	00104014 	andseq	r4, r0, r4, lsl r0
400324b0:	40032444 	andmi	r2, r3, r4, asr #8
400324b4:	00204015 	eoreq	r4, r0, r5, lsl r0
400324b8:	4003244d 	andmi	r2, r3, sp, asr #8
400324bc:	00404016 	subeq	r4, r0, r6, lsl r0
400324c0:	40032456 	andmi	r2, r3, r6, asr r4
400324c4:	00804017 	addeq	r4, r0, r7, lsl r0
400324c8:	4003245f 	andmi	r2, r3, pc, asr r4
400324cc:	01004018 	tsteq	r0, r8, lsl r0
400324d0:	40032468 	andmi	r2, r3, r8, ror #8
400324d4:	02004019 	andeq	r4, r0, #25
400324d8:	40032472 	andmi	r2, r3, r2, ror r4
400324dc:	00105014 	andseq	r5, r0, r4, lsl r0
400324e0:	4003247a 	andmi	r2, r3, sl, ror r4
400324e4:	00206015 	eoreq	r6, r0, r5, lsl r0
400324e8:	40032483 	andmi	r2, r3, r3, lsl #9
400324ec:	35324447 	ldrcc	r4, [r2, #-1095]!	; 0xfffffbb9
400324f0:	4700514c 	strmi	r5, [r0, -ip, asr #2]
400324f4:	51353244 	teqpl	r5, r4, asr #4
400324f8:	47003034 	smladxmi	r0, r4, r0, r3
400324fc:	51353244 	teqpl	r5, r4, asr #4
40032500:	00423436 	subeq	r3, r2, r6, lsr r4

40032504 <gigadevice_spi_flash_table>:
40032504:	00406016 	subeq	r6, r0, r6, lsl r0
40032508:	400324ec 	andmi	r2, r3, ip, ror #9
4003250c:	00084015 	andeq	r4, r8, r5, lsl r0
40032510:	400324f3 	strdmi	r2, [r3], -r3
40032514:	00804017 	addeq	r4, r0, r7, lsl r0
40032518:	400324fb 	strdmi	r2, [r3], -fp
4003251c:	3532584d 	ldrcc	r5, [r2, #-2125]!	; 0xfffff7b3
40032520:	3030344c 	eorscc	r3, r0, ip, asr #8
40032524:	584d0035 	stmdapl	sp, {r0, r2, r4, r5}^
40032528:	384c3532 	stmdacc	ip, {r1, r4, r5, r8, sl, ip, sp}^
4003252c:	00353030 	eorseq	r3, r5, r0, lsr r0
40032530:	3532584d 	ldrcc	r5, [r2, #-2125]!	; 0xfffff7b3
40032534:	3036314c 	eorscc	r3, r6, ip, asr #2
40032538:	4d004435 	cfstrsmi	mvf4, [r0, #-212]	; 0xffffff2c
4003253c:	4c353258 	lfmmi	f3, 4, [r5], #-352	; 0xfffffea0
40032540:	35303233 	ldrcc	r3, [r0, #-563]!	; 0xfffffdcd
40032544:	584d0044 	stmdapl	sp, {r2, r6}^
40032548:	364c3532 			; <UNDEFINED> instruction: 0x364c3532
4003254c:	44353034 	ldrtmi	r3, [r5], #-52	; 0xffffffcc
40032550:	32584d00 	subscc	r4, r8, #0, 26
40032554:	32314c35 	eorscc	r4, r1, #13568	; 0x3500
40032558:	44353038 	ldrtmi	r3, [r5], #-56	; 0xffffffc8
4003255c:	32584d00 	subscc	r4, r8, #0, 26
40032560:	32314c35 	eorscc	r4, r1, #13568	; 0x3500
40032564:	45353538 	ldrmi	r3, [r5, #-1336]!	; 0xfffffac8
40032568:	00000000 	andeq	r0, r0, r0

4003256c <macronix_spi_flash_table>:
4003256c:	00082013 	andeq	r2, r8, r3, lsl r0
40032570:	4003251c 	andmi	r2, r3, ip, lsl r5
40032574:	00102014 	andseq	r2, r0, r4, lsl r0
40032578:	40032526 	andmi	r2, r3, r6, lsr #10
4003257c:	00202015 	eoreq	r2, r0, r5, lsl r0
40032580:	40032530 	andmi	r2, r3, r0, lsr r5
40032584:	00402016 	subeq	r2, r0, r6, lsl r0
40032588:	4003253b 	andmi	r2, r3, fp, lsr r5
4003258c:	00802017 	addeq	r2, r0, r7, lsl r0
40032590:	40032546 	andmi	r2, r3, r6, asr #10
40032594:	01002018 	tsteq	r0, r8, lsl r0
40032598:	40032551 	andmi	r2, r3, r1, asr r5
4003259c:	01002618 	tsteq	r0, r8, lsl r6
400325a0:	4003255d 	andmi	r2, r3, sp, asr r5
400325a4:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
400325a8:	2520002e 	strcs	r0, [r0, #-46]!	; 0xffffffd2
400325ac:	2e252064 	cdpcs	0, 2, cr2, cr5, cr4, {3}
400325b0:	000a732a 	andeq	r7, sl, sl, lsr #6

400325b4 <mdns::DOMAIN_DDP>:
400325b4:	64645f04 	strbtvs	r5, [r4], #-3844	; 0xfffff0fc
400325b8:	 	mrcvs	4, 2, r0, cr15, cr0, {3}

400325b9 <mdns::DOMAIN_NTP>:
400325b9:	746e5f04 	strbtvc	r5, [lr], #-3844	; 0xfffff0fc
400325bd:	 	svcvs	0x005f0470

400325be <mdns::DOMAIN_OSC>:
400325be:	736f5f04 	cmnvc	pc, #4, 30
400325c2:	 	ldrbvc	r0, [pc], #-1123	; 400325ca <mdns::DOMAIN_UDP+0x2>

400325c3 <mdns::DOMAIN_TCP>:
400325c3:	63745f04 	cmnvs	r4, #4, 30
400325c7:	 	ldrbvc	r0, [pc, #-1136]	; 4003215f <RDMConst::MANUFACTURER_NAME+0x89>

400325c8 <mdns::DOMAIN_UDP>:
400325c8:	64755f04 	ldrbtvs	r5, [r5], #-3844	; 0xfffff0fc
400325cc:	00000070 	andeq	r0, r0, r0, ror r0

400325d0 <mdns::s_Services>:
400325d0:	40032781 	andmi	r2, r3, r1, lsl #15
400325d4:	00000008 	andeq	r0, r0, r8
400325d8:	00000000 	andeq	r0, r0, r0
400325dc:	00002905 	andeq	r2, r0, r5, lsl #18
400325e0:	40032672 	andmi	r2, r3, r2, ror r6
400325e4:	00000006 	andeq	r0, r0, r6
400325e8:	00000000 	andeq	r0, r0, r0
400325ec:	00000045 	andeq	r0, r0, r5, asr #32
400325f0:	40032660 	andmi	r2, r3, r0, ror #12
400325f4:	00000006 	andeq	r0, r0, r6
400325f8:	00000001 	andeq	r0, r0, r1
400325fc:	00000050 	andeq	r0, r0, r0, asr r0
40032600:	40032797 	mulmi	r3, r7, r7
40032604:	0000000d 	andeq	r0, r0, sp
40032608:	00000000 	andeq	r0, r0, r0
4003260c:	000015c1 	andeq	r1, r0, r1, asr #11
40032610:	400325b9 			; <UNDEFINED> instruction: 0x400325b9
40032614:	00000005 	andeq	r0, r0, r5
40032618:	00000000 	andeq	r0, r0, r0
4003261c:	0000007b 	andeq	r0, r0, fp, ror r0
40032620:	40032666 	andmi	r2, r3, r6, ror #12
40032624:	0000000c 	andeq	r0, r0, ip
40032628:	00000000 	andeq	r0, r0, r0
4003262c:	0000138c 	andeq	r1, r0, ip, lsl #7
40032630:	400325be 			; <UNDEFINED> instruction: 0x400325be
40032634:	00000005 	andeq	r0, r0, r5
	...
40032640:	400325b4 			; <UNDEFINED> instruction: 0x400325b4
40032644:	00000005 	andeq	r0, r0, r5
40032648:	00000000 	andeq	r0, r0, r0
4003264c:	00000fd0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
40032650:	400327a4 	andmi	r2, r3, r4, lsr #15
40032654:	00000004 	andeq	r0, r0, r4
40032658:	00000000 	andeq	r0, r0, r0
4003265c:	000013d6 	ldrdeq	r1, [r0], -r6

40032660 <mdns::DOMAIN_HTTP>:
40032660:	74685f05 	strbtvc	r5, [r8], #-3845	; 0xfffff0fb
40032664:	 	svcpl	0x000b7074

40032666 <mdns::DOMAIN_MIDI>:
40032666:	70615f0b 	rsbvc	r5, r1, fp, lsl #30
4003266a:	2d656c70 	stclcs	12, cr6, [r5, #-448]!	; 0xfffffe40
4003266e:	6964696d 	stmdbvs	r4!, {r0, r2, r3, r5, r6, r8, fp, sp, lr}^

40032672 <mdns::DOMAIN_TFTP>:
40032672:	66745f05 	ldrbtvs	r5, [r4], -r5, lsl #30
40032676:	 	svcpl	0x00097074

40032678 <mdns::DOMAIN_DNSSD>:
40032678:	65735f09 	ldrbvs	r5, [r3, #-3849]!	; 0xfffff0f7
4003267c:	63697672 	cmnvs	r9, #119537664	; 0x7200000
40032680:	5f077365 	svcpl	0x00077365
40032684:	2d736e64 	ldclcs	14, cr6, [r3, #-400]!	; 0xfffffe70
40032688:	5f046473 	svcpl	0x00046473
4003268c:	05706475 	ldrbeq	r6, [r0, #-1141]!	; 0xfffffb8b
40032690:	61636f6c 	cmnvs	r3, ip, ror #30
40032694:	0000006c 	andeq	r0, r0, ip, rrx
	...
40032778:	 	stcvs	0, cr0, [r5], {30}

4003277a <mdns::DOMAIN_LOCAL>:
4003277a:	636f6c05 	cmnvs	pc, #1280	; 0x500
4003277e:	 	streq	r6, [r0, -r1, ror #24]

40032781 <mdns::DOMAIN_CONFIG>:
40032781:	6f635f07 	svcvs	0x00635f07
40032785:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!

40032789 <mdns::DOMAIN_REVERSE>:
40032789:	2d6e6907 			; <UNDEFINED> instruction: 0x2d6e6907
4003278d:	72646461 	rsbvc	r6, r4, #1627389952	; 0x61000000
40032791:	70726104 	rsbsvc	r6, r2, r4, lsl #2
40032795:	 	svcpl	0x000c0061

40032797 <mdns::DOMAIN_RDMNET_LLRP>:
40032797:	64725f0c 	ldrbtvs	r5, [r2], #-3852	; 0xfffff0f4
4003279b:	74656e6d 	strbtvc	r6, [r5], #-3693	; 0xfffff193
4003279f:	726c6c2d 	rsbvc	r6, ip, #11520	; 0x2d00
400327a3:	 	subsvc	r0, pc, r0, ror r3	; <UNPREDICTABLE>

400327a4 <mdns::DOMAIN_PP>:
400327a4:	70705f03 	rsbsvc	r5, r0, r3, lsl #30
400327a8:	61766e49 	cmnvs	r6, r9, asr #28
400327ac:	2064696c 	rsbcs	r6, r4, ip, ror #18
400327b0:	7265706f 	rsbvc	r7, r5, #111	; 0x6f
400327b4:	6f697461 	svcvs	0x00697461
400327b8:	6e49006e 	cdpvs	0, 4, cr0, cr9, cr14, {3}
400327bc:	696c6176 	stmdbvs	ip!, {r1, r2, r4, r5, r6, r8, sp, lr}^
400327c0:	69662064 	stmdbvs	r6!, {r2, r5, r6, sp}^
400327c4:	6e20656c 	cfsh64vs	mvdx6, mvdx0, #60
400327c8:	00656d61 	rsbeq	r6, r5, r1, ror #26
400327cc:	6574636f 	ldrbvs	r6, [r4, #-879]!	; 0xfffffc91
400327d0:	656e0074 	strbvs	r0, [lr, #-116]!	; 0xffffff8c
400327d4:	63736174 	cmnvs	r3, #116, 2
400327d8:	46006969 	strmi	r6, [r0], -r9, ror #18
400327dc:	20656c69 	rsbcs	r6, r5, r9, ror #24
400327e0:	20746f6e 	rsbscs	r6, r4, lr, ror #30
400327e4:	6e756f66 	cdpvs	15, 7, cr6, cr5, cr6, {3}
400327e8:	63410064 	movtvs	r0, #4196	; 0x1064
400327ec:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
400327f0:	6f697620 	svcvs	0x00697620
400327f4:	6974616c 	ldmdbvs	r4!, {r2, r3, r5, r6, r8, sp, lr}^
400327f8:	57006e6f 	strpl	r6, [r0, -pc, ror #28]
400327fc:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
40032800:	69616620 	stmdbvs	r1!, {r5, r9, sl, sp, lr}^
40032804:	0064656c 	rsbeq	r6, r4, ip, ror #10

40032808 <vtable for TFTPDaemon>:
	...
40032818:	4002d3e0 	andmi	sp, r2, r0, ror #7
4003281c:	4002d3e0 	andmi	sp, r2, r0, ror #7
40032820:	4002d3e0 	andmi	sp, r2, r0, ror #7
40032824:	4002d3e0 	andmi	sp, r2, r0, ror #7
40032828:	4002d3e0 	andmi	sp, r2, r0, ror #7
4003282c:	4002d3e0 	andmi	sp, r2, r0, ror #7
40032830:	203a7069 	eorscs	r7, sl, r9, rrx
40032834:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
40032838:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
4003283c:	2064252e 	rsbcs	r2, r4, lr, lsr #10
40032840:	25203e2d 	strcs	r3, [r0, #-3629]!	; 0xfffff1d3
40032844:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
40032848:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
4003284c:	000a6425 	andeq	r6, sl, r5, lsr #8
40032850:	6d74656e 	cfldr64vs	mvdx6, [r4, #-440]!	; 0xfffffe48
40032854:	3a6b7361 	bcc	41b0f5e0 <__ram_end+0xb0f5e0>
40032858:	2e642520 	cdpcs	5, 6, cr2, cr4, cr0, {1}
4003285c:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
40032860:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
40032864:	203e2d20 	eorscs	r2, lr, r0, lsr #26
40032868:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
4003286c:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
40032870:	0a64252e 	beq	4193bd30 <__ram_end+0x93bd30>
40032874:	3a776700 	bcc	41e0c47c <__ram_end+0xe0c47c>
40032878:	2e642520 	cdpcs	5, 6, cr2, cr4, cr0, {1}
4003287c:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
40032880:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
40032884:	203e2d20 	eorscs	r2, lr, r0, lsr #26
40032888:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
4003288c:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
40032890:	0a64252e 	beq	4193bd50 <__ram_end+0x93bd50>
40032894:	68746500 	ldmdavs	r4!, {r8, sl, sp, lr}^
40032898:	2e250030 	mcrcs	0, 1, r0, cr5, cr0, {1}
4003289c:	253a7832 	ldrcs	r7, [sl, #-2098]!	; 0xfffff7ce
400328a0:	3a78322e 	bcc	41e3f160 <__ram_end+0xe3f160>
400328a4:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
400328a8:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
400328ac:	2e253a78 			; <UNDEFINED> instruction: 0x2e253a78
400328b0:	253a7832 	ldrcs	r7, [sl, #-2098]!	; 0xfffff7ce
400328b4:	0a78322e 	beq	41e3f174 <__ram_end+0xe3f174>
400328b8:	00000000 	andeq	r0, r0, r0
400328bc:	69626e75 	stmdbvs	r2!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
400328c0:	000a646e 	andeq	r6, sl, lr, ror #8
400328c4:	6f636573 	svcvs	0x00636573
400328c8:	7261646e 	rsbvc	r6, r1, #1845493760	; 0x6e000000
400328cc:	70695f79 	rsbvc	r5, r9, r9, ror pc
400328d0:	61745300 	cmnvs	r4, r0, lsl #6
400328d4:	20636974 	rsbcs	r6, r3, r4, ror r9
400328d8:	 	cdpvs	0, 0, cr5, cr0, cr9, {2}

400328db <NetworkParamsConst::NTP_SERVER>:
400328db:	5f70746e 	svcpl	0x0070746e
400328df:	76726573 			; <UNDEFINED> instruction: 0x76726573
400328e3:	 	stmdavs	r0, {r0, r2, r5, r6, r9, ip, sp, lr}

400328e6 <NetworkParamsConst::HOSTNAME>:
400328e6:	74736f68 	ldrbtvc	r6, [r3], #-3944	; 0xfffff098
400328ea:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

400328ef <NetworkParamsConst::DEFAULT_GATEWAY>:
400328ef:	61666564 	cmnvs	r6, r4, ror #10
400328f3:	5f746c75 	svcpl	0x00746c75
400328f7:	65746167 	ldrbvs	r6, [r4, #-359]!	; 0xfffffe99
400328fb:	00796177 	rsbseq	r6, r9, r7, ror r1

400328ff <NetworkParamsConst::NET_MASK>:
400328ff:	5f74656e 	svcpl	0x0074656e
40032903:	6b73616d 	blvs	41d0aebf <__ram_end+0xd0aebf>
	...

40032908 <NetworkParamsConst::IP_ADDRESS>:
40032908:	615f7069 	cmpvs	pc, r9, rrx
4003290c:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0xfffffb9c
40032910:	 	strvc	r7, [r0, #-883]	; 0xfffffc8d

40032913 <NetworkParamsConst::USE_DHCP>:
40032913:	5f657375 	svcpl	0x00657375
40032917:	70636864 	rsbvc	r6, r3, r4, ror #16
	...

4003291c <NetworkParamsConst::FILE_NAME>:
4003291c:	7774656e 	ldrbvc	r6, [r4, -lr, ror #10]!
40032920:	2e6b726f 	cdpcs	2, 6, cr7, cr11, cr15, {3}
40032924:	00747874 	rsbseq	r7, r4, r4, ror r8
40032928:	44007055 	strmi	r7, [r0], #-85	; 0xffffffab
4003292c:	006e776f 	rsbeq	r7, lr, pc, ror #14
40032930:	464c4148 	strbmi	r4, [ip], -r8, asr #2
40032934:	4c554600 	mrrcmi	6, 0, r4, r5, cr0
40032938:	694c004c 	stmdbvs	ip, {r2, r3, r6}^
4003293c:	25206b6e 	strcs	r6, [r0, #-2926]!	; 0xfffff492
40032940:	25202c73 	strcs	r2, [r0, #-3187]!	; 0xfffff38d
40032944:	25202c64 	strcs	r2, [r0, #-3172]!	; 0xfffff39c
40032948:	57000a73 	smlsdxpl	r0, r3, sl, r0
4003294c:	69746961 	ldmdbvs	r4!, {r0, r5, r6, r8, fp, sp, lr}^
40032950:	6620676e 	strtvs	r6, [r0], -lr, ror #14
40032954:	5020726f 	eorpl	r7, r0, pc, ror #4
40032958:	61205948 			; <UNDEFINED> instruction: 0x61205948
4003295c:	206f7475 	rsbcs	r7, pc, r5, ror r4	; <UNPREDICTABLE>
40032960:	6f67656e 	svcvs	0x0067656e
40032964:	74616974 	strbtvc	r6, [r1], #-2420	; 0xfffff68c
40032968:	206e6f69 	rsbcs	r6, lr, r9, ror #30
4003296c:	63206f74 			; <UNDEFINED> instruction: 0x63206f74
40032970:	6c706d6f 	ldclvs	13, cr6, [r0], #-444	; 0xfffffe44
40032974:	00657465 	rsbeq	r7, r5, r5, ror #8
40032978:	64206f4e 	strtvs	r6, [r0], #-3918	; 0xfffff0b2
4003297c:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
40032980:	66207961 	strtvs	r7, [r0], -r1, ror #18
40032984:	646e756f 	strbtvs	r7, [lr], #-1391	; 0xfffffa91
40032988:	44535300 	ldrbmi	r5, [r3], #-768	; 0xfffffd00
4003298c:	31313331 	teqcc	r1, r1, lsr r3
40032990:	44535300 	ldrbmi	r5, [r3], #-768	; 0xfffffd00
40032994:	36303331 			; <UNDEFINED> instruction: 0x36303331
40032998:	32435400 	subcc	r5, r3, #0, 8
4003299c:	5f343030 	svcpl	0x00343030
400329a0:	38464350 	stmdacc	r6, {r4, r6, r8, r9, lr}^
400329a4:	54343735 	ldrtpl	r3, [r4], #-1845	; 0xfffff8cb
400329a8:	31435400 	cmpcc	r3, r0, lsl #8
400329ac:	5f323036 	svcpl	0x00323036
400329b0:	38464350 	stmdacc	r6, {r4, r6, r8, r9, lr}^
400329b4:	54343735 	ldrtpl	r3, [r4], #-1845	; 0xfffff8cb
400329b8:	34444800 	strbcc	r4, [r4], #-2048	; 0xfffff800
400329bc:	30383734 	eorscc	r3, r8, r4, lsr r7
400329c0:	43505b20 	cmpmi	r0, #32, 22	; 0x8000
400329c4:	37353846 	ldrcc	r3, [r5, -r6, asr #16]!
400329c8:	205d5434 	subscs	r5, sp, r4, lsr r4
400329cc:	2c752528 	cfldr64cs	mvdx2, [r5], #-160	; 0xffffff60
400329d0:	0a297525 	beq	40a8fe6c <__heap_start+0x58fe6c>
400329d4:	00000000 	andeq	r0, r0, r0

400329d8 <vtable for Hd44780>:
	...
400329e0:	40023b60 	andmi	r3, r2, r0, ror #22
400329e4:	40023b78 	andmi	r3, r2, r8, ror fp
400329e8:	40023c88 	andmi	r3, r2, r8, lsl #25
400329ec:	40023d00 	andmi	r3, r2, r0, lsl #26
400329f0:	40023e4c 	andmi	r3, r2, ip, asr #28
400329f4:	40023dac 	andmi	r3, r2, ip, lsr #27
400329f8:	40023db4 			; <UNDEFINED> instruction: 0x40023db4
400329fc:	40023e0c 	andmi	r3, r2, ip, lsl #28
40032a00:	40023d1c 	andmi	r3, r2, ip, lsl sp
40032a04:	40023d54 	andmi	r3, r2, r4, asr sp
40032a08:	400027c8 	andmi	r2, r0, r8, asr #15
40032a0c:	400027cc 	andmi	r2, r0, ip, asr #15
40032a10:	40023b5c 	andmi	r3, r2, ip, asr fp
40032a14:	40023b64 	andmi	r3, r2, r4, ror #22
40032a18:	31314853 	teqcc	r1, r3, asr r8
40032a1c:	25003630 	strcs	r3, [r0, #-1584]	; 0xfffff9d0
40032a20:	25282073 	strcs	r2, [r8, #-115]!	; 0xffffff8d
40032a24:	75252c75 	strvc	r2, [r5, #-3189]!	; 0xfffff38b
40032a28:	40000a29 	andmi	r0, r0, r9, lsr #20
40032a2c:	eeaaeeaa 	cdp	14, 10, cr14, cr10, cr10, {5}
40032a30:	00000000 	andeq	r0, r0, r0

40032a34 <_OledFont8x6>:
40032a34:	00000040 	andeq	r0, r0, r0, asr #32
40032a38:	40000000 	andmi	r0, r0, r0
40032a3c:	005f0000 	subseq	r0, pc, r0
40032a40:	00400000 	subeq	r0, r0, r0
40032a44:	00070007 	andeq	r0, r7, r7
40032a48:	7f144000 	svcvc	0x00144000
40032a4c:	00147f14 	andseq	r7, r4, r4, lsl pc
40032a50:	7f2a2440 	svcvc	0x002a2440
40032a54:	4000122a 	andmi	r1, r0, sl, lsr #4
40032a58:	64081323 	strvs	r1, [r8], #-803	; 0xfffffcdd
40032a5c:	36400062 	strbcc	r0, [r0], -r2, rrx
40032a60:	50205649 	eorpl	r5, r0, r9, asr #12
40032a64:	08004000 	stmdaeq	r0, {lr}
40032a68:	00000307 	andeq	r0, r0, r7, lsl #6
40032a6c:	221c0040 	andscs	r0, ip, #64	; 0x40
40032a70:	40000041 	andmi	r0, r0, r1, asr #32
40032a74:	1c224100 	stfnes	f4, [r2], #-0
40032a78:	2a400000 	bcs	41032a80 <__ram_end+0x32a80>
40032a7c:	2a1c7f1c 	bcs	407526f4 <__heap_start+0x2526f4>
40032a80:	08084000 	stmdaeq	r8, {lr}
40032a84:	0008083e 	andeq	r0, r8, lr, lsr r8
40032a88:	70800040 	addvc	r0, r0, r0, asr #32
40032a8c:	40000030 	andmi	r0, r0, r0, lsr r0
40032a90:	08080808 	stmdaeq	r8, {r3, fp}
40032a94:	00400008 	subeq	r0, r0, r8
40032a98:	00606000 	rsbeq	r6, r0, r0
40032a9c:	10204000 	eorne	r4, r0, r0
40032aa0:	00020408 	andeq	r0, r2, r8, lsl #8
40032aa4:	49513e40 	ldmdbmi	r1, {r6, r9, sl, fp, ip, sp}^
40032aa8:	40003e45 	andmi	r3, r0, r5, asr #28
40032aac:	407f4200 	rsbsmi	r4, pc, r0, lsl #4
40032ab0:	72400000 	subvc	r0, r0, #0
40032ab4:	46494949 	strbmi	r4, [r9], -r9, asr #18
40032ab8:	41214000 			; <UNDEFINED> instruction: 0x41214000
40032abc:	00334d49 	eorseq	r4, r3, r9, asr #26
40032ac0:	12141840 	andsne	r1, r4, #64, 16	; 0x400000
40032ac4:	4000107f 	andmi	r1, r0, pc, ror r0
40032ac8:	45454527 	strbmi	r4, [r5, #-1319]	; 0xfffffad9
40032acc:	3c400039 	mcrrcc	0, 3, r0, r0, cr9
40032ad0:	3149494a 	cmpcc	r9, sl, asr #18
40032ad4:	21414000 	mrscs	r4, (UNDEF: 65)
40032ad8:	00070911 	andeq	r0, r7, r1, lsl r9
40032adc:	49493640 	stmdbmi	r9, {r6, r9, sl, ip, sp}^
40032ae0:	40003649 	andmi	r3, r0, r9, asr #12
40032ae4:	29494946 	stmdbcs	r9, {r1, r2, r6, r8, fp, lr}^
40032ae8:	0040001e 	subeq	r0, r0, lr, lsl r0
40032aec:	00001400 	andeq	r1, r0, r0, lsl #8
40032af0:	40004000 	andmi	r4, r0, r0
40032af4:	00000034 	andeq	r0, r0, r4, lsr r0
40032af8:	14080040 	strne	r0, [r8], #-64	; 0xffffffc0
40032afc:	40004122 	andmi	r4, r0, r2, lsr #2
40032b00:	14141414 	ldrne	r1, [r4], #-1044	; 0xfffffbec
40032b04:	00400014 	subeq	r0, r0, r4, lsl r0
40032b08:	08142241 	ldmdaeq	r4, {r0, r6, r9, sp}
40032b0c:	01024000 	mrseq	r4, (UNDEF: 2)
40032b10:	00060959 	andeq	r0, r6, r9, asr r9
40032b14:	5d413e40 	stclpl	14, cr3, [r1, #-256]	; 0xffffff00
40032b18:	40004e59 	andmi	r4, r0, r9, asr lr
40032b1c:	1211127c 	andsne	r1, r1, #124, 4	; 0xc0000007
40032b20:	7f40007c 	svcvc	0x0040007c
40032b24:	36494949 	strbcc	r4, [r9], -r9, asr #18
40032b28:	413e4000 	teqmi	lr, r0
40032b2c:	00224141 	eoreq	r4, r2, r1, asr #2
40032b30:	41417f40 	cmpmi	r1, r0, asr #30
40032b34:	40003e41 	andmi	r3, r0, r1, asr #28
40032b38:	4949497f 	stmdbmi	r9, {r0, r1, r2, r3, r4, r5, r6, r8, fp, lr}^
40032b3c:	7f400041 	svcvc	0x00400041
40032b40:	01090909 	tsteq	r9, r9, lsl #18
40032b44:	413e4000 	teqmi	lr, r0
40032b48:	00735141 	rsbseq	r5, r3, r1, asr #2
40032b4c:	08087f40 	stmdaeq	r8, {r6, r8, r9, sl, fp, ip, sp, lr}
40032b50:	40007f08 	andmi	r7, r0, r8, lsl #30
40032b54:	417f4100 	cmnmi	pc, r0, lsl #2
40032b58:	20400000 	subcs	r0, r0, r0
40032b5c:	013f4140 	teqeq	pc, r0, asr #2
40032b60:	087f4000 	ldmdaeq	pc!, {lr}^	; <UNPREDICTABLE>
40032b64:	00412214 	subeq	r2, r1, r4, lsl r2
40032b68:	40407f40 	submi	r7, r0, r0, asr #30
40032b6c:	40004040 	andmi	r4, r0, r0, asr #32
40032b70:	021c027f 	andseq	r0, ip, #-268435449	; 0xf0000007
40032b74:	7f40007f 	svcvc	0x0040007f
40032b78:	7f100804 	svcvc	0x00100804
40032b7c:	413e4000 	teqmi	lr, r0
40032b80:	003e4141 	eorseq	r4, lr, r1, asr #2
40032b84:	09097f40 	stmdbeq	r9, {r6, r8, r9, sl, fp, ip, sp, lr}
40032b88:	40000609 	andmi	r0, r0, r9, lsl #12
40032b8c:	2151413e 	cmpcs	r1, lr, lsr r1
40032b90:	7f40005e 	svcvc	0x0040005e
40032b94:	46291909 	strtmi	r1, [r9], -r9, lsl #18
40032b98:	49264000 	stmdbmi	r6!, {lr}
40032b9c:	00324949 	eorseq	r4, r2, r9, asr #18
40032ba0:	7f010340 	svcvc	0x00010340
40032ba4:	40000301 	andmi	r0, r0, r1, lsl #6
40032ba8:	4040403f 	submi	r4, r0, pc, lsr r0
40032bac:	1f40003f 	svcne	0x0040003f
40032bb0:	1f204020 	svcne	0x00204020
40032bb4:	403f4000 	eorsmi	r4, pc, r0
40032bb8:	003f4038 	eorseq	r4, pc, r8, lsr r0	; <UNPREDICTABLE>
40032bbc:	08146340 	ldmdaeq	r4, {r6, r8, r9, sp, lr}
40032bc0:	40006314 	andmi	r6, r0, r4, lsl r3
40032bc4:	04780403 	ldrbteq	r0, [r8], #-1027	; 0xfffffbfd
40032bc8:	61400003 	cmpvs	r0, r3
40032bcc:	434d4959 	movtmi	r4, #55641	; 0xd959
40032bd0:	7f004000 	svcvc	0x00004000
40032bd4:	00414141 	subeq	r4, r1, r1, asr #2
40032bd8:	08040240 	stmdaeq	r4, {r6, r9}
40032bdc:	40002010 	andmi	r2, r0, r0, lsl r0
40032be0:	41414100 	mrsmi	r4, (UNDEF: 81)
40032be4:	0440007f 	strbeq	r0, [r0], #-127	; 0xffffff81
40032be8:	04020102 	streq	r0, [r2], #-258	; 0xfffffefe
40032bec:	40404000 	submi	r4, r0, r0
40032bf0:	00404040 	subeq	r4, r0, r0, asr #32
40032bf4:	07030040 	streq	r0, [r3, -r0, asr #32]
40032bf8:	40000008 	andmi	r0, r0, r8
40032bfc:	78545420 	ldmdavc	r4, {r5, sl, ip, lr}^
40032c00:	7f400040 	svcvc	0x00400040
40032c04:	38444428 	stmdacc	r4, {r3, r5, sl, lr}^
40032c08:	44384000 	ldrtmi	r4, [r8], #-0
40032c0c:	00284444 	eoreq	r4, r8, r4, asr #8
40032c10:	44443840 	strbmi	r3, [r4], #-2112	; 0xfffff7c0
40032c14:	40007f28 	andmi	r7, r0, r8, lsr #30
40032c18:	54545438 	ldrbpl	r5, [r4], #-1080	; 0xfffffbc8
40032c1c:	00400018 	subeq	r0, r0, r8, lsl r0
40032c20:	02097e08 	andeq	r7, r9, #8, 28	; 0x80
40032c24:	a4184000 	ldrge	r4, [r8], #-0
40032c28:	00789ca4 	rsbseq	r9, r8, r4, lsr #25
40032c2c:	04087f40 	streq	r7, [r8], #-3904	; 0xfffff0c0
40032c30:	40007804 	andmi	r7, r0, r4, lsl #16
40032c34:	407d4400 	rsbsmi	r4, sp, r0, lsl #8
40032c38:	20400000 	subcs	r0, r0, r0
40032c3c:	003d4040 	eorseq	r4, sp, r0, asr #32
40032c40:	107f4000 	rsbsne	r4, pc, r0
40032c44:	00004428 	andeq	r4, r0, r8, lsr #8
40032c48:	7f410040 	svcvc	0x00410040
40032c4c:	40000040 	andmi	r0, r0, r0, asr #32
40032c50:	0478047c 	ldrbteq	r0, [r8], #-1148	; 0xfffffb84
40032c54:	7c400078 	mcrrvc	0, 7, r0, r0, cr8
40032c58:	78040408 	stmdavc	r4, {r3, sl}
40032c5c:	44384000 	ldrtmi	r4, [r8], #-0
40032c60:	00384444 	eorseq	r4, r8, r4, asr #8
40032c64:	2418fc40 	ldrcs	pc, [r8], #-3136	; 0xfffff3c0
40032c68:	40001824 	andmi	r1, r0, r4, lsr #16
40032c6c:	18242418 	stmdane	r4!, {r3, r4, sl, sp}
40032c70:	7c4000fc 	mcrrvc	0, 15, r0, r0, cr12
40032c74:	08040408 	stmdaeq	r4, {r3, sl}
40032c78:	54484000 	strbpl	r4, [r8], #-0
40032c7c:	00245454 	eoreq	r5, r4, r4, asr r4
40032c80:	3f040440 	svccc	0x00040440
40032c84:	40002444 	andmi	r2, r0, r4, asr #8
40032c88:	2040403c 	subcs	r4, r0, ip, lsr r0
40032c8c:	1c40007c 	mcrrne	0, 7, r0, r0, cr12
40032c90:	1c204020 	stcne	0, cr4, [r0], #-128	; 0xffffff80
40032c94:	403c4000 	eorsmi	r4, ip, r0
40032c98:	003c4030 	eorseq	r4, ip, r0, lsr r0
40032c9c:	10284440 	eorne	r4, r8, r0, asr #8
40032ca0:	40004428 	andmi	r4, r0, r8, lsr #8
40032ca4:	9090904c 	addsls	r9, r0, ip, asr #32
40032ca8:	4440007c 	strbmi	r0, [r0], #-124	; 0xffffff84
40032cac:	444c5464 	strbmi	r5, [ip], #-1124	; 0xfffffb9c
40032cb0:	08004000 	stmdaeq	r0, {lr}
40032cb4:	00004136 	andeq	r4, r0, r6, lsr r1
40032cb8:	77000040 	strvc	r0, [r0, -r0, asr #32]
40032cbc:	40000000 	andmi	r0, r0, r0
40032cc0:	08364100 	ldmdaeq	r6!, {r8, lr}
40032cc4:	02400000 	subeq	r0, r0, #0
40032cc8:	02040201 	andeq	r0, r4, #268435456	; 0x10000000
40032ccc:	263c4000 	ldrtcs	r4, [ip], -r0
40032cd0:	003c2623 	eorseq	r2, ip, r3, lsr #12

40032cd4 <oled_128x32_init>:
40032cd4:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
40032cd8:	4000d31f 	andmi	sp, r0, pc, lsl r3
40032cdc:	0020148d 	eoreq	r1, r0, sp, lsl #9
40032ce0:	02dac8a1 	sbcseq	ip, sl, #10551296	; 0xa10000
40032ce4:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
40032ce8:	a6a440db 	ssatge	r4, #5, fp, asr #1

40032cec <oled_128x64_init>:
40032cec:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
40032cf0:	4000d33f 	andmi	sp, r0, pc, lsr r3
40032cf4:	0020148d 	eoreq	r1, r0, sp, lsl #9
40032cf8:	12dac8a1 	sbcsne	ip, sl, #10551296	; 0xa10000
40032cfc:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
40032d00:	a6a440db 	ssatge	r4, #5, fp, asr #1

40032d04 <vtable for Ssd1306>:
	...
40032d0c:	40023edc 	ldrdmi	r3, [r2], -ip
40032d10:	40023f08 	andmi	r3, r2, r8, lsl #30
40032d14:	400243a8 	andmi	r4, r2, r8, lsr #7
40032d18:	400242e0 	andmi	r4, r2, r0, ror #5
40032d1c:	4002470c 	andmi	r4, r2, ip, lsl #14
40032d20:	40023f64 	andmi	r3, r2, r4, ror #30
40032d24:	40023fac 	andmi	r3, r2, ip, lsr #31
40032d28:	40024778 	andmi	r4, r2, r8, ror r7
40032d2c:	40024648 	andmi	r4, r2, r8, asr #12
40032d30:	400247b8 			; <UNDEFINED> instruction: 0x400247b8
40032d34:	40024170 	andmi	r4, r2, r0, ror r1
40032d38:	40024180 	andmi	r4, r2, r0, lsl #3
40032d3c:	400241a4 	andmi	r4, r2, r4, lsr #3
40032d40:	40023eac 	andmi	r3, r2, ip, lsr #29
40032d44:	31445353 	cmpcc	r4, r3, asr r3
40032d48:	20313133 	eorscs	r3, r1, r3, lsr r1
40032d4c:	2c752528 	cfldr64cs	mvdx2, [r5], #-160	; 0xffffff60
40032d50:	0a297525 	beq	40a901ec <__heap_start+0x5901ec>
40032d54:	55aa4000 	strpl	r4, [sl, #0]!
40032d58:	000055aa 	andeq	r5, r0, sl, lsr #11
	...

40032d64 <vtable for Ssd1311>:
	...
40032d6c:	400247ec 	andmi	r4, r2, ip, ror #15
40032d70:	40024804 	andmi	r4, r2, r4, lsl #16
40032d74:	40024c94 	mulmi	r2, r4, ip
40032d78:	40024990 	mulmi	r2, r0, r9
40032d7c:	400249b8 			; <UNDEFINED> instruction: 0x400249b8
40032d80:	40024bb0 			; <UNDEFINED> instruction: 0x40024bb0
40032d84:	4002481c 	andmi	r4, r2, ip, lsl r8
40032d88:	40024a04 	andmi	r4, r2, r4, lsl #20
40032d8c:	400249a0 	andmi	r4, r2, r0, lsr #19
40032d90:	40024b44 	andmi	r4, r2, r4, asr #22
40032d94:	40024a6c 	andmi	r4, r2, ip, ror #20
40032d98:	40024af0 	strdmi	r4, [r2], -r0
40032d9c:	40023b5c 	andmi	r3, r2, ip, asr fp
40032da0:	400247f0 	strdmi	r4, [r2], -r0

40032da4 <DevicesParamsConst::MAP>:
40032da4:	5f64656c 	svcpl	0x0064656c
40032da8:	5f626772 	svcpl	0x00626772
40032dac:	7070616d 	rsbsvc	r6, r0, sp, ror #2
40032db0:	00676e69 	rsbeq	r6, r7, r9, ror #28

40032db4 <DevicesParamsConst::TYPE>:
40032db4:	5f64656c 	svcpl	0x0064656c
40032db8:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
40032dbc:	73252200 			; <UNDEFINED> instruction: 0x73252200
40032dc0:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
40032dc4:	22782a2e 	rsbscs	r2, r8, #188416	; 0x2e000
40032dc8:	2523002c 	strcs	r0, [r3, #-44]!	; 0xffffffd4
40032dcc:	2e253d73 	mcrcs	13, 1, r3, cr5, cr3, {3}
40032dd0:	000a782a 	andeq	r7, sl, sl, lsr #16
40032dd4:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
40032dd8:	6425223a 	strtvs	r2, [r5], #-570	; 0xfffffdc6
40032ddc:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
40032de0:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
40032de4:	002c2264 	eoreq	r2, ip, r4, ror #4
40032de8:	3d732523 	cfldr64cc	mvdx2, [r3, #-140]!	; 0xffffff74
40032dec:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
40032df0:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
40032df4:	0a64252e 	beq	4193c2b4 <__ram_end+0x93c2b4>
40032df8:	22002b00 	andcs	r2, r0, #0, 22
40032dfc:	3a227325 	bcc	408cfa98 <__heap_start+0x3cfa98>
40032e00:	25732522 	ldrbcs	r2, [r3, #-1314]!	; 0xfffffade
40032e04:	3a64322e 	bcc	4193f6c4 <__ram_end+0x93f6c4>
40032e08:	75322e25 	ldrvc	r2, [r2, #-3621]!	; 0xfffff1db
40032e0c:	25002c22 	strcs	r2, [r0, #-3106]	; 0xfffff3de
40032e10:	73253d73 			; <UNDEFINED> instruction: 0x73253d73
40032e14:	64322e25 	ldrtvs	r2, [r2], #-3621	; 0xfffff1db
40032e18:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
40032e1c:	23000a75 	movwcs	r0, #2677	; 0xa75
40032e20:	20732520 	rsbscs	r2, r3, r0, lsr #10
40032e24:	5b000a23 	blpl	400356b8 <s_TFTPBuffer+0x15ff>
40032e28:	2a2e2556 	bcs	40bbc388 <__heap_start+0x6bc388>
40032e2c:	25205d73 	strcs	r5, [r0, #-3443]!	; 0xfffff28d
40032e30:	6f432073 	svcvs	0x00432073
40032e34:	6c69706d 	stclvs	0, cr7, [r9], #-436	; 0xfffffe4c
40032e38:	6f206465 	svcvs	0x00206465
40032e3c:	2e25206e 	cdpcs	0, 2, cr2, cr5, cr14, {3}
40032e40:	6120732a 			; <UNDEFINED> instruction: 0x6120732a
40032e44:	2e252074 	mcrcs	0, 1, r2, cr5, cr4, {3}
40032e48:	7b00732a 	blvc	4004faf8 <s_TFTPBuffer+0x1ba3f>
40032e4c:	74616422 	strbtvc	r6, [r1], #-1058	; 0xfffffbde
40032e50:	223a2265 	eorscs	r2, sl, #1342177286	; 0x50000006
40032e54:	252d6425 	strcs	r6, [sp, #-1061]!	; 0xfffffbdb
40032e58:	2d64322e 	sfmcs	f3, 2, [r4, #-184]!	; 0xffffff48
40032e5c:	64322e25 	ldrtvs	r2, [r2], #-3621	; 0xfffff1db
40032e60:	322e2554 	eorcc	r2, lr, #84, 10	; 0x15000000
40032e64:	2e253a64 	vnmulcs.f32	s6, s10, s9
40032e68:	253a6432 	ldrcs	r6, [sl, #-1074]!	; 0xfffffbce
40032e6c:	5a64322e 	bpl	4193f72c <__ram_end+0x93f72c>
40032e70:	000a7d22 	andeq	r7, sl, r2, lsr #26
40032e74:	6164227b 	smcvs	16939	; 0x422b
40032e78:	3a226574 	bcc	408cc450 <__heap_start+0x3cc450>
40032e7c:	2d642522 	cfstr64cs	mvdx2, [r4, #-136]!	; 0xffffff78
40032e80:	64322e25 	ldrtvs	r2, [r2], #-3621	; 0xfffff1db
40032e84:	322e252d 	eorcc	r2, lr, #188743680	; 0xb400000
40032e88:	2e255464 	cdpcs	4, 2, cr5, cr5, cr4, {3}
40032e8c:	253a6432 	ldrcs	r6, [sl, #-1074]!	; 0xfffffbce
40032e90:	3a64322e 	bcc	4193f750 <__ram_end+0x93f750>
40032e94:	64322e25 	ldrtvs	r2, [r2], #-3621	; 0xfffff1db
40032e98:	2e257325 	cdpcs	3, 2, cr7, cr5, cr5, {1}
40032e9c:	253a6432 	ldrcs	r6, [sl, #-1074]!	; 0xfffffbce
40032ea0:	2275322e 	rsbscs	r3, r5, #-536870910	; 0xe0000002
40032ea4:	4e000a7d 			; <UNDEFINED> instruction: 0x4e000a7d
40032ea8:	7473206f 	ldrbtvc	r2, [r3], #-111	; 0xffffff91
40032eac:	6761726f 	strbvs	r7, [r1, -pc, ror #4]!
40032eb0:	227b0065 	rsbscs	r0, fp, #101	; 0x65
40032eb4:	6562616c 	strbvs	r6, [r2, #-364]!	; 0xfffffe94
40032eb8:	223a226c 	eorscs	r2, sl, #108, 4	; 0xc0000006
40032ebc:	2c227325 	stccs	3, cr7, [r2], #-148	; 0xffffff6c
40032ec0:	6c696622 	stclvs	6, cr6, [r9], #-136	; 0xffffff78
40032ec4:	3a227365 	bcc	408cfc60 <__heap_start+0x3cfc60>
40032ec8:	724f005b 	subvc	r0, pc, #91	; 0x5b
40032ecc:	65676e61 	strbvs	r6, [r7, #-3681]!	; 0xfffff19f
40032ed0:	20695020 	rsbcs	r5, r9, r0, lsr #32
40032ed4:	6f72655a 	svcvs	0x0072655a
40032ed8:	61745300 	cmnvs	r4, r0, lsl #6
40032edc:	6e697472 	mcrvs	4, 3, r7, cr9, cr2, {3}
40032ee0:	2e2e2067 	cdpcs	0, 2, cr2, cr14, cr7, {3}
40032ee4:	66000a2e 	strvs	r0, [r0], -lr, lsr #20
40032ee8:	756f6d5f 	strbvc	r6, [pc, #-3423]!	; 40032191 <RDMConst::MANUFACTURER_NAME+0xbb>
40032eec:	6620746e 	strtvs	r7, [r0], -lr, ror #8
40032ef0:	656c6961 	strbvs	r6, [ip, #-2401]!	; 0xfffff69f
40032ef4:	25202164 	strcs	r2, [r0, #-356]!	; 0xfffffe9c
40032ef8:	1b000a64 	blne	40035890 <s_TFTPBuffer+0x17d7>
40032efc:	6d31335b 	ldcvs	3, cr3, [r1, #-364]!	; 0xfffffe94
40032f00:	335b1b00 	cmpcc	fp, #0, 22
40032f04:	1b006d37 	blne	4004e3e8 <s_TFTPBuffer+0x1a32f>
40032f08:	6d30335b 	ldcvs	3, cr3, [r0, #-364]!	; 0xfffffe94
40032f0c:	335b1b00 	cmpcc	fp, #0, 22
40032f10:	1b006d32 	blne	4004e3e0 <s_TFTPBuffer+0x1a327>
40032f14:	6d33335b 	ldcvs	3, cr3, [r3, #-364]!	; 0xfffffe94
40032f18:	335b1b00 	cmpcc	fp, #0, 22
40032f1c:	1b006d39 	blne	4004e408 <s_TFTPBuffer+0x1a34f>
40032f20:	6d30345b 	cfldrsvs	mvf3, [r0, #-364]!	; 0xfffffe94
40032f24:	345b1b00 	ldrbcc	r1, [fp], #-2816	; 0xfffff500
40032f28:	1b006d31 	blne	4004e3f4 <s_TFTPBuffer+0x1a33b>
40032f2c:	6d37345b 	cfldrsvs	mvf3, [r7, #-364]!	; 0xfffffe94
40032f30:	345b1b00 	ldrbcc	r1, [fp], #-2816	; 0xfffff500
40032f34:	 	andeq	r6, r0, r9, lsr sp

40032f37 <CSWTCH.20>:
40032f37:	10010500 	andne	r0, r1, r0, lsl #10
40032f3b:	0d160202 	lfmeq	f0, 4, [r6, #-8]
40032f3f:	061e160d 	ldreq	r1, [lr], -sp, lsl #12
40032f43:	1016061c 	andsne	r0, r6, ip, lsl r6
40032f47:	16180c10 			; <UNDEFINED> instruction: 0x16180c10
40032f4b:	52206f4e 	eorpl	r6, r0, #312	; 0x138
40032f4f:	63204354 			; <UNDEFINED> instruction: 0x63204354
40032f53:	656e6e6f 	strbvs	r6, [lr, #-3695]!	; 0xfffff191
40032f57:	64657463 	strbtvs	r7, [r5], #-1123	; 0xfffffb9d
40032f5b:	20732500 	rsbscs	r2, r3, r0, lsl #10
40032f5f:	64342e25 	ldrtvs	r2, [r4], #-3621	; 0xfffff1db
40032f63:	322e252f 	eorcc	r2, lr, #197132288	; 0xbc00000
40032f67:	2e252f64 	cdpcs	15, 2, cr2, cr5, cr4, {3}
40032f6b:	25206432 	strcs	r6, [r0, #-1074]!	; 0xfffffbce
40032f6f:	3a64322e 	bcc	4193f82f <__ram_end+0x93f82f>
40032f73:	64322e25 	ldrtvs	r2, [r2], #-3621	; 0xfffff1db
40032f77:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
40032f7b:	4d000a64 	vstrmi	s0, [r0, #-400]	; 0xfffffe70
40032f7f:	39375043 	ldmdbcc	r7!, {r0, r1, r6, ip, lr}
40032f83:	00583134 	subseq	r3, r8, r4, lsr r1
40032f87:	32335344 	eorscc	r5, r3, #68, 6	; 0x10000001
40032f8b:	50003133 	andpl	r3, r0, r3, lsr r1
40032f8f:	35384643 	ldrcc	r4, [r8, #-1603]!	; 0xfffff9bd
40032f93:	53003336 	movwpl	r3, #822	; 0x336
40032f97:	495f434f 	ldmdbmi	pc, {r0, r1, r2, r3, r6, r8, r9, lr}^	; <UNPREDICTABLE>
40032f9b:	5245544e 	subpl	r5, r5, #1308622848	; 0x4e000000
40032f9f:	004c414e 	subeq	r4, ip, lr, asr #2
	...

40032fa4 <CSWTCH.7>:
40032fa4:	40032f7e 	andmi	r2, r3, lr, ror pc
40032fa8:	40032f87 	andmi	r2, r3, r7, lsl #31
40032fac:	40032f8e 	andmi	r2, r3, lr, lsl #31
40032fb0:	40032f96 	mulmi	r3, r6, pc	; <UNPREDICTABLE>
40032fb4:	72616c61 	rsbvc	r6, r1, #24832	; 0x6100
40032fb8:	6361006d 	cmnvs	r1, #109	; 0x6d
40032fbc:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
40032fc0:	74636800 	strbtvc	r6, [r3], #-2048	; 0xfffff800
40032fc4:	7379736f 	cmnvc	r9, #-1140850687	; 0xbc000001
40032fc8:	73797300 	cmnvc	r9, #0, 6
40032fcc:	63686f74 	cmnvs	r8, #116, 30	; 0x1d0
40032fd0:	616e6500 	cmnvs	lr, r0, lsl #10
40032fd4:	00656c62 	rsbeq	r6, r5, r2, ror #24
40032fd8:	7472227b 	ldrbtvc	r2, [r2], #-635	; 0xfffffd85
40032fdc:	223a2263 	eorscs	r2, sl, #805306374	; 0x30000006
40032fe0:	252d6425 	strcs	r6, [sp, #-1061]!	; 0xfffffbdb
40032fe4:	2d64322e 	sfmcs	f3, 2, [r4, #-184]!	; 0xffffff48
40032fe8:	64322e25 	ldrtvs	r2, [r2], #-3621	; 0xfffff1db
40032fec:	322e2554 	eorcc	r2, lr, #84, 10	; 0x15000000
40032ff0:	2e253a64 	vnmulcs.f32	s6, s10, s9
40032ff4:	253a6432 	ldrcs	r6, [sl, #-1074]!	; 0xfffffbce
40032ff8:	2264322e 	rsbcs	r3, r4, #-536870910	; 0xe0000002
40032ffc:	6122002c 			; <UNDEFINED> instruction: 0x6122002c
40033000:	6d72616c 	ldfvse	f6, [r2, #-432]!	; 0xfffffe50
40033004:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
40033008:	2e252d64 	cdpcs	13, 2, cr2, cr5, cr4, {3}
4003300c:	252d6432 	strcs	r6, [sp, #-1074]!	; 0xfffffbce
40033010:	5464322e 	strbtpl	r3, [r4], #-558	; 0xfffffdd2
40033014:	64322e25 	ldrtvs	r2, [r2], #-3621	; 0xfffff1db
40033018:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
4003301c:	2e253a64 	vnmulcs.f32	s6, s10, s9
40033020:	2c226432 	cfstrscs	mvf6, [r2], #-200	; 0xffffff38
40033024:	6e652200 	cdpvs	2, 6, cr2, cr5, cr0, {0}
40033028:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
4003302c:	223a2264 	eorscs	r2, sl, #100, 4	; 0x40000006
40033030:	7d226425 	cfstrsvc	mvf6, [r2, #-148]!	; 0xffffff6c
40033034:	54414600 	strbpl	r4, [r1], #-1536	; 0xfffffa00
40033038:	20203233 	eorcs	r3, r0, r3, lsr r2
4003303c:	3a2a0020 	bcc	40ab30c4 <__heap_start+0x5b30c4>
40033040:	227c3e3c 	rsbscs	r3, ip, #60, 28	; 0x3c0
40033044:	2b007f3f 	blcs	40052d48 <s_TFTPBuffer+0x1ec8f>
40033048:	5b3d3b2c 	blpl	40f81d00 <__heap_start+0xa81d00>
4003304c:	 	strbpl	r0, [r3, #-93]	; 0xffffffa3

4003304e <ExCvt>:
4003304e:	41455543 	cmpmi	r5, r3, asr #10
40033052:	43414141 	movtmi	r4, #4417	; 0x1141
40033056:	49454545 	stmdbmi	r5, {r0, r2, r6, r8, sl, lr}^
4003305a:	41414949 	cmpmi	r1, r9, asr #18
4003305e:	4f929245 	svcmi	0x00929245
40033062:	55554f4f 	ldrbpl	r4, [r5, #-3919]	; 0xfffff0b1
40033066:	4f554f59 	svcmi	0x00554f59
4003306a:	9f9e4f9c 	svcls	0x009e4f9c
4003306e:	554f4941 	strbpl	r4, [pc, #-2369]	; 40032735 <mdns::DOMAIN_DNSSD+0xbd>
40033072:	a7a6a5a5 	strge	sl, [r6, r5, lsr #11]!
40033076:	abaaa9a8 	blge	3eadd71e <__ram_size+0x3dadd71e>
4003307a:	afaeadac 	svcge	0x00aeadac
4003307e:	b3b2b1b0 			; <UNDEFINED> instruction: 0xb3b2b1b0
40033082:	414141b4 	strhmi	r4, [r1, #-20]	; 0xffffffec
40033086:	bbbab9b8 	bllt	3eee176e <__ram_size+0x3dee176e>
4003308a:	bfbebdbc 	svclt	0x00bebdbc
4003308e:	c3c2c1c0 	bicgt	ip, r2, #192, 2	; 0x30
40033092:	4141c5c4 	smlalbtmi	ip, r1, r4, r5
40033096:	cbcac9c8 	blgt	3f2e57be <__ram_size+0x3e2e57be>
4003309a:	cfcecdcc 	svcgt	0x00cecdcc
4003309e:	4545d1d1 	strbmi	sp, [r5, #-465]	; 0xfffffe2f
400330a2:	49494945 	stmdbmi	r9, {r0, r2, r6, r8, fp, lr}^
400330a6:	dbdad949 	blle	3f6e95d2 <__ram_size+0x3e6e95d2>
400330aa:	df49dddc 	svcle	0x0049dddc
400330ae:	4f4fe14f 	svcmi	0x004fe14f
400330b2:	e8e64f4f 	stmia	r6!, {r0, r1, r2, r3, r6, r8, r9, sl, fp, lr}^
400330b6:	555555e8 	ldrbpl	r5, [r5, #-1512]	; 0xfffffa18
400330ba:	efee5959 	svc	0x00ee5959
400330be:	f3f2f1f0 	vsra.u64	<illegal reg q15.5>, q8, #14
400330c2:	f7f6f5f4 			; <UNDEFINED> instruction: 0xf7f6f5f4
400330c6:	fbfaf9f8 	blx	3fef18b0 <__ram_size+0x3eef18b0>
400330ca:	fffefdfc 			; <UNDEFINED> instruction: 0xfffefdfc

400330ce <LfnOfs>:
400330ce:	07050301 	streq	r0, [r5, -r1, lsl #6]
400330d2:	12100e09 	andsne	r0, r0, #9, 28	; 0x90
400330d6:	1c181614 	ldcne	6, cr1, [r8], {20}
400330da:	 	rsbeq	r0, r1, lr, lsl r0

400330dc <cvt1.1>:
400330dc:	031a0061 	tsteq	sl, #97	; 0x61
400330e0:	031700e0 	tsteq	r7, #224	; 0xe0
400330e4:	030700f8 	movweq	r0, #28920	; 0x70f8
400330e8:	000100ff 	strdeq	r0, [r1], -pc	; <UNPREDICTABLE>
400330ec:	01000178 	tsteq	r0, r8, ror r1
400330f0:	01320130 	teqeq	r2, r0, lsr r1
400330f4:	01390106 	teqeq	r9, r6, lsl #2
400330f8:	014a0110 	cmpeq	sl, r0, lsl r1
400330fc:	0179012e 	cmneq	r9, lr, lsr #2
40033100:	01800106 	orreq	r0, r0, r6, lsl #2
40033104:	0243004d 	subeq	r0, r3, #77	; 0x4d
40033108:	01820181 	orreq	r0, r2, r1, lsl #3
4003310c:	01840182 	orreq	r0, r4, r2, lsl #3
40033110:	01860184 	orreq	r0, r6, r4, lsl #3
40033114:	01870187 	orreq	r0, r7, r7, lsl #3
40033118:	018a0189 	orreq	r0, sl, r9, lsl #3
4003311c:	018b018b 	orreq	r0, fp, fp, lsl #3
40033120:	018e018d 	orreq	r0, lr, sp, lsl #3
40033124:	0190018f 	orrseq	r0, r0, pc, lsl #3
40033128:	01910191 			; <UNDEFINED> instruction: 0x01910191
4003312c:	01940193 			; <UNDEFINED> instruction: 0x01940193
40033130:	019601f6 			; <UNDEFINED> instruction: 0x019601f6
40033134:	01980197 			; <UNDEFINED> instruction: 0x01980197
40033138:	023d0198 	eorseq	r0, sp, #152, 2	; 0x26
4003313c:	019c019b 			; <UNDEFINED> instruction: 0x019c019b
40033140:	0220019d 	eoreq	r0, r0, #1073741863	; 0x40000027
40033144:	01a0019f 	lsleq	r0, pc	; <illegal shifter operand>
40033148:	01a201a0 			; <UNDEFINED> instruction: 0x01a201a0
4003314c:	01a401a2 			; <UNDEFINED> instruction: 0x01a401a2
40033150:	01a601a4 			; <UNDEFINED> instruction: 0x01a601a4
40033154:	01a701a7 			; <UNDEFINED> instruction: 0x01a701a7
40033158:	01aa01a9 			; <UNDEFINED> instruction: 0x01aa01a9
4003315c:	01ac01ab 			; <UNDEFINED> instruction: 0x01ac01ab
40033160:	01ae01ac 			; <UNDEFINED> instruction: 0x01ae01ac
40033164:	01af01af 			; <UNDEFINED> instruction: 0x01af01af
40033168:	01b201b1 			; <UNDEFINED> instruction: 0x01b201b1
4003316c:	01b301b3 			; <UNDEFINED> instruction: 0x01b301b3
40033170:	01b501b5 			; <UNDEFINED> instruction: 0x01b501b5
40033174:	01b801b7 			; <UNDEFINED> instruction: 0x01b801b7
40033178:	01ba01b8 			; <UNDEFINED> instruction: 0x01ba01b8
4003317c:	01bc01bb 			; <UNDEFINED> instruction: 0x01bc01bb
40033180:	01be01bc 			; <UNDEFINED> instruction: 0x01be01bc
40033184:	01c001f7 	strdeq	r0, [r0, #23]
40033188:	01c201c1 	biceq	r0, r2, r1, asr #3
4003318c:	01c401c3 	biceq	r0, r4, r3, asr #3
40033190:	01c401c5 	biceq	r0, r4, r5, asr #3
40033194:	01c801c7 	biceq	r0, r8, r7, asr #3
40033198:	01ca01c7 	biceq	r0, sl, r7, asr #3
4003319c:	01ca01cb 	biceq	r0, sl, fp, asr #3
400331a0:	011001cd 	tsteq	r0, sp, asr #3
400331a4:	000101dd 	ldrdeq	r0, [r1], -sp
400331a8:	01de018e 	bicseq	r0, lr, lr, lsl #3
400331ac:	01f30112 	mvnseq	r0, r2, lsl r1
400331b0:	01f10003 	mvnseq	r0, r3
400331b4:	01f401f4 	ldrsheq	r0, [r4, #20]!
400331b8:	012801f8 	strdeq	r0, [r8, -r8]!
400331bc:	01120222 	tsteq	r2, r2, lsr #4
400331c0:	0009023a 	andeq	r0, r9, sl, lsr r2
400331c4:	023b2c65 	eorseq	r2, fp, #25856	; 0x6500
400331c8:	023d023b 	eorseq	r0, sp, #-1342177277	; 0xb0000003
400331cc:	023f2c66 	eorseq	r2, pc, #26112	; 0x6600
400331d0:	02410240 	subeq	r0, r1, #64, 4
400331d4:	02460241 	subeq	r0, r6, #268435460	; 0x10000004
400331d8:	0253010a 	subseq	r0, r3, #-2147483646	; 0x80000002
400331dc:	01810040 	orreq	r0, r1, r0, asr #32
400331e0:	02550186 	subseq	r0, r5, #-2147483615	; 0x80000021
400331e4:	018a0189 	orreq	r0, sl, r9, lsl #3
400331e8:	018f0258 	orreq	r0, pc, r8, asr r2	; <UNPREDICTABLE>
400331ec:	0190025a 	orrseq	r0, r0, sl, asr r2
400331f0:	025d025c 	subseq	r0, sp, #92, 4	; 0xc0000005
400331f4:	025f025e 	subseq	r0, pc, #-536870907	; 0xe0000005
400331f8:	02610193 	rsbeq	r0, r1, #-1073741788	; 0xc0000024
400331fc:	01940262 	orrseq	r0, r4, r2, ror #4
40033200:	02650264 	rsbeq	r0, r5, #100, 4	; 0x40000006
40033204:	02670266 	rsbeq	r0, r7, #1610612742	; 0x60000006
40033208:	01960197 			; <UNDEFINED> instruction: 0x01960197
4003320c:	2c62026a 	sfmcs	f0, 2, [r2], #-424	; 0xfffffe58
40033210:	026d026c 	rsbeq	r0, sp, #108, 4	; 0xc0000006
40033214:	019c026e 	orrseq	r0, ip, lr, ror #4
40033218:	02710270 	rsbseq	r0, r1, #112, 4
4003321c:	0273019d 	rsbseq	r0, r3, #1073741863	; 0x40000027
40033220:	019f0274 	orrseq	r0, pc, r4, ror r2	; <UNPREDICTABLE>
40033224:	02770276 	rsbseq	r0, r7, #1610612743	; 0x60000007
40033228:	02790278 	rsbseq	r0, r9, #120, 4	; 0x80000007
4003322c:	027b027a 	rsbseq	r0, fp, #-1610612729	; 0xa0000007
40033230:	2c64027c 	sfmcs	f0, 2, [r4], #-496	; 0xfffffe10
40033234:	027f027e 	rsbseq	r0, pc, #-536870905	; 0xe0000007
40033238:	028101a6 	addeq	r0, r1, #-2147483607	; 0x80000029
4003323c:	01a90282 			; <UNDEFINED> instruction: 0x01a90282
40033240:	02850284 	addeq	r0, r5, #132, 4	; 0x40000008
40033244:	02870286 	addeq	r0, r7, #1610612744	; 0x60000008
40033248:	024401ae 	subeq	r0, r4, #-2147483605	; 0x8000002b
4003324c:	01b201b1 			; <UNDEFINED> instruction: 0x01b201b1
40033250:	028d0245 	addeq	r0, sp, #1342177284	; 0x50000004
40033254:	028f028e 	addeq	r0, pc, #-536870904	; 0xe0000008
40033258:	02910290 	addseq	r0, r1, #144, 4
4003325c:	037b01b7 	cmneq	fp, #-1073741779	; 0xc000002d
40033260:	03fd0003 	mvnseq	r0, #3
40033264:	03ff03fe 	mvnseq	r0, #-134217725	; 0xf8000003
40033268:	000403ac 	andeq	r0, r4, ip, lsr #7
4003326c:	03880386 	orreq	r0, r8, #402653186	; 0x18000002
40033270:	038a0389 	orreq	r0, sl, #603979778	; 0x24000002
40033274:	031103b1 	tsteq	r1, #-1006632958	; 0xc4000002
40033278:	000203c2 	andeq	r0, r2, r2, asr #7
4003327c:	03a303a3 			; <UNDEFINED> instruction: 0x03a303a3
40033280:	030803c4 	movweq	r0, #33732	; 0x83c4
40033284:	000303cc 	andeq	r0, r3, ip, asr #7
40033288:	038e038c 	orreq	r0, lr, #140, 6	; 0x30000002
4003328c:	03d8038f 	bicseq	r0, r8, #1006632962	; 0x3c000002
40033290:	03f20118 	mvnseq	r0, #24, 2
40033294:	03f9000a 	mvnseq	r0, #10
40033298:	03f403f3 	mvnseq	r0, #-872415229	; 0xcc000003
4003329c:	03f603f5 	mvnseq	r0, #-738197501	; 0xd4000003
400332a0:	03f703f7 	mvnseq	r0, #-603979773	; 0xdc000003
400332a4:	03fa03f9 	mvnseq	r0, #-469762045	; 0xe4000003
400332a8:	043003fa 	ldrteq	r0, [r0], #-1018	; 0xfffffc06
400332ac:	04500320 	ldrbeq	r0, [r0], #-800	; 0xfffffce0
400332b0:	04600710 	strbteq	r0, [r0], #-1808	; 0xfffff8f0
400332b4:	048a0122 	streq	r0, [sl], #290	; 0x122
400332b8:	04c10136 	strbeq	r0, [r1], #310	; 0x136
400332bc:	04cf010e 	strbeq	r0, [pc], #270	; 400332c4 <cvt1.1+0x1e8>
400332c0:	04c00001 	strbeq	r0, [r0], #1
400332c4:	014404d0 	ldrdeq	r0, [r4, #-64]	; 0xffffffc0
400332c8:	04260561 	strteq	r0, [r6], #-1377	; 0xfffffa9f
	...

400332ce <cvt2.0>:
400332ce:	00011d7d 	andeq	r1, r1, sp, ror sp
400332d2:	1e002c63 	cdpne	12, 0, cr2, cr0, cr3, {3}
400332d6:	1ea00196 	mcrne	1, 5, r0, cr0, cr6, {4}
400332da:	1f00015a 	svcne	0x0000015a
400332de:	1f100608 	svcne	0x00100608
400332e2:	1f200606 	svcne	0x00200606
400332e6:	1f300608 	svcne	0x00300608
400332ea:	1f400608 	svcne	0x00400608
400332ee:	1f510606 	svcne	0x00510606
400332f2:	1f590007 	svcne	0x00590007
400332f6:	1f5b1f52 	svcne	0x005b1f52
400332fa:	1f5d1f54 	svcne	0x005d1f54
400332fe:	1f5f1f56 	svcne	0x005f1f56
40033302:	06081f60 	streq	r1, [r8], -r0, ror #30
40033306:	000e1f70 	andeq	r1, lr, r0, ror pc
4003330a:	1fbb1fba 	svcne	0x00bb1fba
4003330e:	1fc91fc8 	svcne	0x00c91fc8
40033312:	1fcb1fca 	svcne	0x00cb1fca
40033316:	1fdb1fda 	svcne	0x00db1fda
4003331a:	1ff91ff8 	svcne	0x00f91ff8
4003331e:	1feb1fea 	svcne	0x00eb1fea
40033322:	1ffb1ffa 	svcne	0x00fb1ffa
40033326:	06081f80 	streq	r1, [r8], -r0, lsl #31
4003332a:	06081f90 			; <UNDEFINED> instruction: 0x06081f90
4003332e:	06081fa0 	streq	r1, [r8], -r0, lsr #31
40033332:	00041fb0 			; <UNDEFINED> instruction: 0x00041fb0
40033336:	1fb91fb8 	svcne	0x00b91fb8
4003333a:	1fbc1fb2 	svcne	0x00bc1fb2
4003333e:	00011fcc 	andeq	r1, r1, ip, asr #31
40033342:	1fd01fc3 	svcne	0x00d01fc3
40033346:	1fe00602 	svcne	0x00e00602
4003334a:	1fe50602 	svcne	0x00e50602
4003334e:	1fec0001 	svcne	0x00ec0001
40033352:	00011ff3 	strdeq	r1, [r1], -r3
40033356:	214e1ffc 	strdcs	r1, [lr, #-252]	; 0xffffff04
4003335a:	21320001 	teqcs	r2, r1
4003335e:	02102170 	andseq	r2, r0, #112, 2
40033362:	00012184 	andeq	r2, r1, r4, lsl #3
40033366:	24d02183 	ldrbcs	r2, [r0], #387	; 0x183
4003336a:	2c30051a 	cfldr32cs	mvfx0, [r0], #-104	; 0xffffff98
4003336e:	2c60042f 	cfstrdcs	mvd0, [r0], #-188	; 0xffffff44
40033372:	2c670102 	stfcse	f0, [r7], #-8
40033376:	2c750106 	ldfcse	f0, [r5], #-24	; 0xffffffe8
4003337a:	2c800102 	stfcss	f0, [r0], {2}
4003337e:	2d000164 	stfcss	f0, [r0, #-400]	; 0xfffffe70
40033382:	ff410826 			; <UNDEFINED> instruction: 0xff410826
40033386:	0000031a 	andeq	r0, r0, sl, lsl r3

4003338a <uc850>:
4003338a:	00fc00c7 	rscseq	r0, ip, r7, asr #1
4003338e:	00e200e9 	rsceq	r0, r2, r9, ror #1
40033392:	00e000e4 	rsceq	r0, r0, r4, ror #1
40033396:	00e700e5 	rsceq	r0, r7, r5, ror #1
4003339a:	00eb00ea 	rsceq	r0, fp, sl, ror #1
4003339e:	00ef00e8 	rsceq	r0, pc, r8, ror #1
400333a2:	00ec00ee 	rsceq	r0, ip, lr, ror #1
400333a6:	00c500c4 	sbceq	r0, r5, r4, asr #1
400333aa:	00e600c9 	rsceq	r0, r6, r9, asr #1
400333ae:	00f400c6 	rscseq	r0, r4, r6, asr #1
400333b2:	00f200f6 	ldrshteq	r0, [r2], #6
400333b6:	00f900fb 	ldrshteq	r0, [r9], #11
400333ba:	00d600ff 	ldrsheq	r0, [r6], #15
400333be:	00f800dc 	ldrsbteq	r0, [r8], #12
400333c2:	00d800a3 	sbcseq	r0, r8, r3, lsr #1
400333c6:	019200d7 	ldrsbeq	r0, [r2, r7]
400333ca:	00ed00e1 	rsceq	r0, sp, r1, ror #1
400333ce:	00fa00f3 	ldrshteq	r0, [sl], #3
400333d2:	00d100f1 	ldrsheq	r0, [r1], #1
400333d6:	00ba00aa 	adcseq	r0, sl, sl, lsr #1
400333da:	00ae00bf 	strhteq	r0, [lr], pc
400333de:	00bd00ac 	adcseq	r0, sp, ip, lsr #1
400333e2:	00a100bc 	strhteq	r0, [r1], ip
400333e6:	00bb00ab 	adcseq	r0, fp, fp, lsr #1
400333ea:	25922591 	ldrcs	r2, [r2, #1425]	; 0x591
400333ee:	25022593 	strcs	r2, [r2, #-1427]	; 0xfffffa6d
400333f2:	00c12524 	sbceq	r2, r1, r4, lsr #10
400333f6:	00c000c2 	sbceq	r0, r0, r2, asr #1
400333fa:	256300a9 	strbcs	r0, [r3, #-169]!	; 0xffffff57
400333fe:	25572551 	ldrbcs	r2, [r7, #-1361]	; 0xfffffaaf
40033402:	00a2255d 	adceq	r2, r2, sp, asr r5
40033406:	251000a5 	ldrcs	r0, [r0, #-165]	; 0xffffff5b
4003340a:	25342514 	ldrcs	r2, [r4, #-1300]!	; 0xfffffaec
4003340e:	251c252c 	ldrcs	r2, [ip, #-1324]	; 0xfffffad4
40033412:	253c2500 	ldrcs	r2, [ip, #-1280]!	; 0xfffffb00
40033416:	00c300e3 	sbceq	r0, r3, r3, ror #1
4003341a:	2554255a 	ldrbcs	r2, [r4, #-1370]	; 0xfffffaa6
4003341e:	25662569 	strbcs	r2, [r6, #-1385]!	; 0xfffffa97
40033422:	25502560 	ldrbcs	r2, [r0, #-1376]	; 0xfffffaa0
40033426:	00a4256c 	adceq	r2, r4, ip, ror #10
4003342a:	00d000f0 	ldrsheq	r0, [r0], #0
4003342e:	00cb00ca 	sbceq	r0, fp, sl, asr #1
40033432:	013100c8 	teqeq	r1, r8, asr #1
40033436:	00ce00cd 	sbceq	r0, lr, sp, asr #1
4003343a:	251800cf 	ldrcs	r0, [r8, #-207]	; 0xffffff31
4003343e:	2588250c 	strcs	r2, [r8, #1292]	; 0x50c
40033442:	00a62584 	adceq	r2, r6, r4, lsl #11
40033446:	258000cc 	strcs	r0, [r0, #204]	; 0xcc
4003344a:	00df00d3 	ldrsbeq	r0, [pc], #3	; <UNPREDICTABLE>
4003344e:	00d200d4 	ldrsbeq	r0, [r2], #4
40033452:	00d500f5 	ldrsheq	r0, [r5], #5
40033456:	00fe00b5 	ldrhteq	r0, [lr], #5
4003345a:	00da00de 	ldrsbeq	r0, [sl], #14
4003345e:	00d900db 	ldrsbeq	r0, [r9], #11
40033462:	00dd00fd 	ldrsheq	r0, [sp], #13
40033466:	00b400af 	adcseq	r0, r4, pc, lsr #1
4003346a:	00b100ad 	adcseq	r0, r1, sp, lsr #1
4003346e:	00be2017 	adcseq	r2, lr, r7, lsl r0
40033472:	00a700b6 	strhteq	r0, [r7], r6
40033476:	00b800f7 	ldrshteq	r0, [r8], r7
4003347a:	00a800b0 	strhteq	r0, [r8], r0
4003347e:	00b900b7 	ldrhteq	r0, [r9], r7
40033482:	00b200b3 	ldrhteq	r0, [r2], r3
40033486:	00a025a0 	adceq	r2, r0, r0, lsr #11
4003348a:	646e550a 	strbtvs	r5, [lr], #-1290	; 0xfffffaf6
4003348e:	6e696665 	cdpvs	6, 6, cr6, cr9, cr5, {3}
40033492:	65206465 	strvs	r6, [r0, #-1125]!	; 0xfffffb9b
40033496:	70656378 	rsbvc	r6, r5, r8, ror r3
4003349a:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
4003349e:	20746120 	rsbscs	r6, r4, r0, lsr #2
400334a2:	72646461 	rsbvc	r6, r4, #1627389952	; 0x61000000
400334a6:	3a737365 	bcc	41d10242 <__ram_end+0xd10242>
400334aa:	0a702520 	beq	41c3c932 <__ram_end+0xc3c932>
400334ae:	72500a00 	subsvc	r0, r0, #0, 20
400334b2:	74656665 	strbtvc	r6, [r5], #-1637	; 0xfffff99b
400334b6:	61206863 			; <UNDEFINED> instruction: 0x61206863
400334ba:	74726f62 	ldrbtvc	r6, [r2], #-3938	; 0xfffff09e
400334be:	20746120 	rsbscs	r6, r4, r0, lsr #2
400334c2:	72646461 	rsbvc	r6, r4, #1627389952	; 0x61000000
400334c6:	3a737365 	bcc	41d10262 <__ram_end+0xd10262>
400334ca:	0a702520 	beq	41c3c952 <__ram_end+0xc3c952>
400334ce:	61440a00 	cmpvs	r4, r0, lsl #20
400334d2:	61206174 			; <UNDEFINED> instruction: 0x61206174
400334d6:	74726f62 	ldrbtvc	r6, [r2], #-3938	; 0xfffff09e
400334da:	20746120 	rsbscs	r6, r4, r0, lsr #2
400334de:	72646461 	rsbvc	r6, r4, #1627389952	; 0x61000000
400334e2:	3a737365 	bcc	41d1027e <__ram_end+0xd1027e>
400334e6:	20702520 	rsbscs	r2, r0, r0, lsr #10
400334ea:	25203e2d 	strcs	r3, [r0, #-3629]!	; 0xfffff1d3
400334ee:	0a000a70 	beq	40035eb6 <s_TFTPBuffer+0x1dfd>
400334f2:	6e6b6e55 	mcrvs	14, 3, r6, cr11, cr5, {2}
400334f6:	206e776f 	rsbcs	r7, lr, pc, ror #14
400334fa:	65637865 	strbvs	r7, [r3, #-2149]!	; 0xfffff79b
400334fe:	6f697470 	svcvs	0x00697470
40033502:	5b20216e 	blpl	4083bac2 <__heap_start+0x33bac2>
40033506:	0a5d7525 	beq	417909a2 <__ram_end+0x7909a2>
4003350a:	4e555300 	cdpmi	3, 5, cr5, cr5, cr0, {0}
4003350e:	53204958 			; <UNDEFINED> instruction: 0x53204958
40033512:	4d4d2f44 	stclmi	15, cr2, [sp, #-272]	; 0xfffffef0
40033516:	 	ldrcs	r0, [r0, -r3, asr #32]

40033518 <fbase>:
40033518:	00002710 	andeq	r2, r0, r0, lsl r7
4003351c:	000186a0 	andeq	r8, r1, r0, lsr #13
40033520:	000f4240 	andeq	r4, pc, r0, asr #4
40033524:	00989680 	addseq	r9, r8, r0, lsl #13

40033528 <multipliers>:
40033528:	00000000 	andeq	r0, r0, r0
4003352c:	0000000a 	andeq	r0, r0, sl
40033530:	0000000c 	andeq	r0, r0, ip
40033534:	0000000d 	andeq	r0, r0, sp
40033538:	0000000f 	andeq	r0, r0, pc
4003353c:	00000014 	andeq	r0, r0, r4, lsl r0
40033540:	00000019 	andeq	r0, r0, r9, lsl r0
40033544:	0000001e 	andeq	r0, r0, lr, lsl r0
40033548:	00000023 	andeq	r0, r0, r3, lsr #32
4003354c:	00000028 	andeq	r0, r0, r8, lsr #32
40033550:	0000002d 	andeq	r0, r0, sp, lsr #32
40033554:	00000032 	andeq	r0, r0, r2, lsr r0
40033558:	00000037 	andeq	r0, r0, r7, lsr r0
4003355c:	0000003c 	andeq	r0, r0, ip, lsr r0
40033560:	00000046 	andeq	r0, r0, r6, asr #32
40033564:	00000050 	andeq	r0, r0, r0, asr r0
40033568:	003f3f3f 	eorseq	r3, pc, pc, lsr pc	; <UNPREDICTABLE>
4003356c:	25207325 	strcs	r7, [r0, #-805]!	; 0xfffffcdb
40033570:	32252073 	eorcc	r2, r5, #115	; 0x73
40033574:	30252064 	eorcc	r2, r5, r4, rrx
40033578:	253a6432 	ldrcs	r6, [sl, #-1074]!	; 0xfffffbce
4003357c:	3a643230 	bcc	4193fe44 <__ram_end+0x93fe44>
40033580:	64323025 	ldrtvs	r3, [r2], #-37	; 0xffffffdb
40033584:	34302520 	ldrtcc	r2, [r0], #-1312	; 0xfffffae0
40033588:	 	bmi	40035f20 <s_TFTPBuffer+0x1e67>

4003358b <mon_name>:
4003358b:	006e614a 	rsbeq	r6, lr, sl, asr #2
4003358f:	00626546 	rsbeq	r6, r2, r6, asr #10
40033593:	0072614d 	rsbseq	r6, r2, sp, asr #2
40033597:	00727041 	rsbseq	r7, r2, r1, asr #32
4003359b:	0079614d 	rsbseq	r6, r9, sp, asr #2
4003359f:	006e754a 	rsbeq	r7, lr, sl, asr #10
400335a3:	006c754a 	rsbeq	r7, ip, sl, asr #10
400335a7:	00677541 	rsbeq	r7, r7, r1, asr #10
400335ab:	00706553 	rsbseq	r6, r0, r3, asr r5
400335af:	0074634f 	rsbseq	r6, r4, pc, asr #6
400335b3:	00766f4e 	rsbseq	r6, r6, lr, asr #30
400335b7:	00636544 	rsbeq	r6, r3, r4, asr #10

400335bb <wday_name>:
400335bb:	006e7553 	rsbeq	r7, lr, r3, asr r5
400335bf:	006e6f4d 	rsbeq	r6, lr, sp, asr #30
400335c3:	00657554 	rsbeq	r7, r5, r4, asr r5
400335c7:	00646557 	rsbeq	r6, r4, r7, asr r5
400335cb:	00756854 	rsbseq	r6, r5, r4, asr r8
400335cf:	00697246 	rsbeq	r7, r9, r6, asr #4
400335d3:	00746153 	rsbseq	r6, r4, r3, asr r1
400335d7:	78383025 	ldmdavc	r8!, {r0, r2, r5, ip, sp}
400335db:	3430252d 	ldrtcc	r2, [r0], #-1325	; 0xfffffad3
400335df:	30252d78 	eorcc	r2, r5, r8, ror sp
400335e3:	252d7834 	strcs	r7, [sp, #-2100]!	; 0xfffff7cc
400335e7:	25783230 	ldrbcs	r3, [r8, #-560]!	; 0xfffffdd0
400335eb:	2d783230 	lfmcs	f3, 2, [r8, #-192]!	; 0xffffff40
400335ef:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
400335f3:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
400335f7:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
400335fb:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
400335ff:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
40033603:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
	...

40033608 <days_of_month>:
40033608:	0000001f 	andeq	r0, r0, pc, lsl r0
4003360c:	0000001c 	andeq	r0, r0, ip, lsl r0
40033610:	0000001f 	andeq	r0, r0, pc, lsl r0
40033614:	0000001e 	andeq	r0, r0, lr, lsl r0
40033618:	0000001f 	andeq	r0, r0, pc, lsl r0
4003361c:	0000001e 	andeq	r0, r0, lr, lsl r0
40033620:	0000001f 	andeq	r0, r0, pc, lsl r0
40033624:	0000001f 	andeq	r0, r0, pc, lsl r0
40033628:	0000001e 	andeq	r0, r0, lr, lsl r0
4003362c:	0000001f 	andeq	r0, r0, pc, lsl r0
40033630:	0000001e 	andeq	r0, r0, lr, lsl r0
40033634:	0000001f 	andeq	r0, r0, pc, lsl r0
40033638:	78635f5f 	stmdavc	r3!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
4003363c:	75705f61 	ldrbvc	r5, [r0, #-3937]!	; 0xfffff09f
40033640:	765f6572 			; <UNDEFINED> instruction: 0x765f6572
40033644:	75747269 	ldrbvc	r7, [r4, #-617]!	; 0xfffffd97
40033648:	73006c61 	movwvc	r6, #3169	; 0xc61
4003364c:	632f6372 			; <UNDEFINED> instruction: 0x632f6372
40033650:	702f2b2b 	eorvc	r2, pc, fp, lsr #22
40033654:	63657275 	cmnvs	r5, #1342177287	; 0x50000007
40033658:	2e6c6c61 	cdpcs	12, 6, cr6, cr12, cr1, {3}
4003365c:	00707063 	rsbseq	r7, r0, r3, rrx
40033660:	7566202c 	strbvc	r2, [r6, #-44]!	; 0xffffffd4
40033664:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
40033668:	203a6e6f 	eorscs	r6, sl, pc, ror #28
4003366c:	73736100 	cmnvc	r3, #0, 2
40033670:	69747265 	ldmdbvs	r4!, {r0, r2, r5, r6, r9, ip, sp, lr}^
40033674:	22206e6f 	eorcs	r6, r0, #1776	; 0x6f0
40033678:	20227325 	eorcs	r7, r2, r5, lsr #6
4003367c:	6c696166 	stfvse	f6, [r9], #-408	; 0xfffffe68
40033680:	203a6465 	eorscs	r6, sl, r5, ror #8
40033684:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
40033688:	73252220 			; <UNDEFINED> instruction: 0x73252220
4003368c:	6c202c22 	stcvs	12, cr2, [r0], #-136	; 0xffffff78
40033690:	20656e69 	rsbcs	r6, r5, r9, ror #28
40033694:	73256425 			; <UNDEFINED> instruction: 0x73256425
40033698:	000a7325 	andeq	r7, sl, r5, lsr #6
4003369c:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
400336a0:	203a636f 	eorscs	r6, sl, pc, ror #6
400336a4:	2074756f 	rsbscs	r7, r4, pc, ror #10
400336a8:	6d20666f 	stcvs	6, cr6, [r0, #-444]!	; 0xfffffe44
400336ac:	726f6d65 	rsbvc	r6, pc, #6464	; 0x1940
400336b0:	Address 0x00000000400336b0 is out of bounds.


Disassembly of section .ARM.exidx:

400336b4 <.ARM.exidx>:
400336b4:	7fffa178 	svcvc	0x00ffa178
400336b8:	00000001 	andeq	r0, r0, r1

Disassembly of section .init_array:

400336bc <__init_array_start>:
400336bc:	4001c3e8 	andmi	ip, r1, r8, ror #7
400336c0:	400221ec 	andmi	r2, r2, ip, ror #3

Disassembly of section .data:

400336c4 <s_midiTimeCode>:
400336c4:	00000000 	andeq	r0, r0, r0
400336c8:	00000001 	andeq	r0, r0, r1

400336cc <s_nTimerId>:
400336cc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

400336d0 <s_nTimerId>:
400336d0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

400336d4 <s_flash>:
400336d4:	4002ded2 	ldrdmi	sp, [r2], -r2
400336d8:	00000000 	andeq	r0, r0, r0
400336dc:	00000005 	andeq	r0, r0, r5

400336e0 <s_nTimerId>:
400336e0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

400336e4 <cp437_font>:
	...
400336ec:	b195817e 	orrslt	r8, r5, lr, ror r1
400336f0:	7e8195b1 	mcrvc	5, 4, r9, cr1, cr1, {5}
400336f4:	cfebff7e 	svcgt	0x00ebff7e
400336f8:	7effebcf 	vcvtvc.u32.f64	d30, d30, #2
400336fc:	7e3f1f0e 	cdpvc	15, 3, cr1, cr15, cr14, {0}
40033700:	000e1f3f 	andeq	r1, lr, pc, lsr pc
40033704:	7f3e1c08 	svcvc	0x003e1c08
40033708:	00081c3e 	andeq	r1, r8, lr, lsr ip
4003370c:	ffffba18 			; <UNDEFINED> instruction: 0xffffba18
40033710:	0018baff 			; <UNDEFINED> instruction: 0x0018baff
40033714:	fffcb810 			; <UNDEFINED> instruction: 0xfffcb810
40033718:	0010b8fc 			; <UNDEFINED> instruction: 0x0010b8fc
4003371c:	3c180000 	ldccc	0, cr0, [r8], {-0}
40033720:	0000183c 	andeq	r1, r0, ip, lsr r8
40033724:	c3e7ffff 	mvngt	pc, #1020	; 0x3fc
40033728:	ffffe7c3 			; <UNDEFINED> instruction: 0xffffe7c3
4003372c:	42663c00 	rsbmi	r3, r6, #0, 24
40033730:	003c6642 	eorseq	r6, ip, r2, asr #12
40033734:	bd99c3ff 	ldclt	3, cr12, [r9, #1020]	; 0x3fc
40033738:	ffc399bd 			; <UNDEFINED> instruction: 0xffc399bd
4003373c:	8888f870 	stmhi	r8, {r4, r5, r6, fp, ip, sp, lr, pc}
40033740:	0f077ffd 	svceq	0x00077ffd
40033744:	f15f4e00 			; <UNDEFINED> instruction: 0xf15f4e00
40033748:	004e5ff1 	strdeq	r5, [lr], #-241	; 0xffffff0f
4003374c:	7fffe0c0 	svcvc	0x00ffe0c0
40033750:	07070505 	streq	r0, [r7, -r5, lsl #10]
40033754:	057fffc0 	ldrbeq	pc, [pc, #-4032]!	; 4003279c <mdns::DOMAIN_RDMNET_LLRP+0x5>	; <UNPREDICTABLE>
40033758:	3f7f6505 	svccc	0x007f6505
4003375c:	e73c5a99 			; <UNDEFINED> instruction: 0xe73c5a99
40033760:	995a3ce7 	ldmdbls	sl, {r0, r1, r2, r5, r6, r7, sl, fp, ip, sp}^
40033764:	1c3e3e7f 	ldcne	14, cr3, [lr], #-508	; 0xfffffe04
40033768:	0008081c 	andeq	r0, r8, ip, lsl r8
4003376c:	1c1c0808 	ldcne	8, cr0, [ip], {8}
40033770:	007f3e3e 	rsbseq	r3, pc, lr, lsr lr	; <UNPREDICTABLE>
40033774:	ff662400 			; <UNDEFINED> instruction: 0xff662400
40033778:	002466ff 	strdeq	r6, [r4], -pc	; <UNPREDICTABLE>
4003377c:	005f5f00 	subseq	r5, pc, r0, lsl #30
40033780:	005f5f00 	subseq	r5, pc, r0, lsl #30
40033784:	7f090f06 	svcvc	0x00090f06
40033788:	7f7f017f 	svcvc	0x007f017f
4003378c:	a5bfda40 	ldrge	sp, [pc, #2624]!	; 400341d4 <s_TFTPBuffer+0x11b>
40033790:	020359fd 	andeq	r5, r3, #4145152	; 0x3f4000
40033794:	70707000 	rsbsvc	r7, r0, r0
40033798:	00707070 	rsbseq	r7, r0, r0, ror r0
4003379c:	ffb69480 			; <UNDEFINED> instruction: 0xffb69480
400337a0:	8094b6ff 			; <UNDEFINED> instruction: 0x8094b6ff
400337a4:	7f060400 	svcvc	0x00060400
400337a8:	0004067f 	andeq	r0, r4, pc, ror r6
400337ac:	7f301000 	svcvc	0x00301000
400337b0:	0010307f 	andseq	r3, r0, pc, ror r0
400337b4:	2a080808 	bcs	402357dc <__bss_end+0x1c9654>
400337b8:	00081c3e 	andeq	r1, r8, lr, lsr ip
400337bc:	2a3e1c08 	bcs	40fba7e4 <__heap_start+0xaba7e4>
400337c0:	00080808 	andeq	r0, r8, r8, lsl #16
400337c4:	20203c3c 	eorcs	r3, r0, ip, lsr ip
400337c8:	00202020 	eoreq	r2, r0, r0, lsr #32
400337cc:	083e1c08 	ldmdaeq	lr!, {r3, sl, fp, ip}
400337d0:	081c3e08 	ldmdaeq	ip, {r3, r9, sl, fp, ip, sp}
400337d4:	3e3c3830 	mrccc	8, 1, r3, cr12, cr0, {1}
400337d8:	30383c3e 	eorscc	r3, r8, lr, lsr ip
400337dc:	3e1e0e06 	cdpcc	14, 1, cr0, cr14, cr6, {0}
400337e0:	060e1e3e 			; <UNDEFINED> instruction: 0x060e1e3e
	...
400337ec:	5f5f0600 	svcpl	0x005f0600
400337f0:	00000006 	andeq	r0, r0, r6
400337f4:	00070700 	andeq	r0, r7, r0, lsl #14
400337f8:	00000707 	andeq	r0, r0, r7, lsl #14
400337fc:	147f7f14 	ldrbtne	r7, [pc], #-3860	; 40033804 <cp437_font+0x120>
40033800:	00147f7f 	andseq	r7, r4, pc, ror pc
40033804:	6b6b2e24 	blvs	41aff09c <__ram_end+0xaff09c>
40033808:	0000123a 	andeq	r1, r0, sl, lsr r2
4003380c:	18306646 	ldmdane	r0!, {r1, r2, r6, r9, sl, sp, lr}
40033810:	0062660c 	rsbeq	r6, r2, ip, lsl #12
40033814:	5d4f7a30 	vstrpl	s15, [pc, #-192]	; 4003375c <cp437_font+0x78>
40033818:	00487a37 	subeq	r7, r8, r7, lsr sl
4003381c:	00030704 	andeq	r0, r3, r4, lsl #14
40033820:	00000000 	andeq	r0, r0, r0
40033824:	633e1c00 	teqvs	lr, #0, 24
40033828:	00000041 	andeq	r0, r0, r1, asr #32
4003382c:	3e634100 	powccs	f4, f3, f0
40033830:	0000001c 	andeq	r0, r0, ip, lsl r0
40033834:	1c3e2a08 			; <UNDEFINED> instruction: 0x1c3e2a08
40033838:	082a3e1c 	stmdaeq	sl!, {r2, r3, r4, r9, sl, fp, ip, sp}
4003383c:	3e3e0808 	cdpcc	8, 3, cr0, cr14, cr8, {0}
40033840:	00000808 	andeq	r0, r0, r8, lsl #16
40033844:	60e08000 	rscvs	r8, r0, r0
40033848:	00000000 	andeq	r0, r0, r0
4003384c:	08080808 	stmdaeq	r8, {r3, fp}
40033850:	00000808 	andeq	r0, r0, r8, lsl #16
40033854:	60600000 	rsbvs	r0, r0, r0
40033858:	00000000 	andeq	r0, r0, r0
4003385c:	0c183060 	ldceq	0, cr3, [r8], {96}	; 0x60
40033860:	00010306 	andeq	r0, r1, r6, lsl #6
40033864:	59717f3e 	ldmdbpl	r1!, {r1, r2, r3, r4, r5, r8, r9, sl, fp, ip, sp, lr}^
40033868:	003e7f4d 	eorseq	r7, lr, sp, asr #30
4003386c:	7f7f4240 	svcvc	0x007f4240
40033870:	00004040 	andeq	r4, r0, r0, asr #32
40033874:	49597362 	ldmdbmi	r9, {r1, r5, r6, r8, r9, ip, sp, lr}^
40033878:	0000666f 	andeq	r6, r0, pc, ror #12
4003387c:	49496322 	stmdbmi	r9, {r1, r5, r8, r9, sp, lr}^
40033880:	0000367f 	andeq	r3, r0, pc, ror r6
40033884:	53161c18 	tstpl	r6, #24, 24	; 0x1800
40033888:	00507f7f 	subseq	r7, r0, pc, ror pc
4003388c:	45456727 	strbmi	r6, [r5, #-1831]	; 0xfffff8d9
40033890:	0000397d 	andeq	r3, r0, sp, ror r9
40033894:	494b7e3c 	stmdbmi	fp, {r2, r3, r4, r5, r9, sl, fp, ip, sp, lr}^
40033898:	00003079 	andeq	r3, r0, r9, ror r0
4003389c:	79710303 	ldmdbvc	r1!, {r0, r1, r8, r9}^
400338a0:	0000070f 	andeq	r0, r0, pc, lsl #14
400338a4:	49497f36 	stmdbmi	r9, {r1, r2, r4, r5, r8, r9, sl, fp, ip, sp, lr}^
400338a8:	0000367f 	andeq	r3, r0, pc, ror r6
400338ac:	69494f06 	stmdbvs	r9, {r1, r2, r8, r9, sl, fp, lr}^
400338b0:	00001e3f 	andeq	r1, r0, pc, lsr lr
400338b4:	66660000 	strbtvs	r0, [r6], -r0
400338b8:	00000000 	andeq	r0, r0, r0
400338bc:	66e68000 	strbtvs	r8, [r6], r0
400338c0:	00000000 	andeq	r0, r0, r0
400338c4:	63361c08 	teqvs	r6, #8, 24	; 0x800
400338c8:	00000041 	andeq	r0, r0, r1, asr #32
400338cc:	24242424 	strtcs	r2, [r4], #-1060	; 0xfffffbdc
400338d0:	00002424 	andeq	r2, r0, r4, lsr #8
400338d4:	36634100 	strbtcc	r4, [r3], -r0, lsl #2
400338d8:	0000081c 	andeq	r0, r0, ip, lsl r8
400338dc:	59510302 	ldmdbpl	r1, {r1, r8, r9}^
400338e0:	0000060f 	andeq	r0, r0, pc, lsl #12
400338e4:	5d417f3e 	stclpl	15, cr7, [r1, #-248]	; 0xffffff08
400338e8:	001e1f5d 	andseq	r1, lr, sp, asr pc
400338ec:	13137e7c 	tstne	r3, #124, 28	; 0x7c0
400338f0:	00007c7e 	andeq	r7, r0, lr, ror ip
400338f4:	497f7f41 	ldmdbmi	pc!, {r0, r6, r8, r9, sl, fp, ip, sp, lr}^	; <UNPREDICTABLE>
400338f8:	00367f49 	eorseq	r7, r6, r9, asr #30
400338fc:	41633e1c 	cmnmi	r3, ip, lsl lr
40033900:	00226341 	eoreq	r6, r2, r1, asr #6
40033904:	417f7f41 	cmnmi	pc, r1, asr #30
40033908:	001c3e63 	andseq	r3, ip, r3, ror #28
4003390c:	497f7f41 	ldmdbmi	pc!, {r0, r6, r8, r9, sl, fp, ip, sp, lr}^	; <UNPREDICTABLE>
40033910:	0063415d 	rsbeq	r4, r3, sp, asr r1
40033914:	497f7f41 	ldmdbmi	pc!, {r0, r6, r8, r9, sl, fp, ip, sp, lr}^	; <UNPREDICTABLE>
40033918:	0003011d 	andeq	r0, r3, sp, lsl r1
4003391c:	41633e1c 	cmnmi	r3, ip, lsl lr
40033920:	00727351 	rsbseq	r7, r2, r1, asr r3
40033924:	08087f7f 	stmdaeq	r8, {r0, r1, r2, r3, r4, r5, r6, r8, r9, sl, fp, ip, sp, lr}
40033928:	00007f7f 	andeq	r7, r0, pc, ror pc
4003392c:	7f7f4100 	svcvc	0x007f4100
40033930:	00000041 	andeq	r0, r0, r1, asr #32
40033934:	41407030 	cmpmi	r0, r0, lsr r0
40033938:	00013f7f 	andeq	r3, r1, pc, ror pc
4003393c:	087f7f41 	ldmdaeq	pc!, {r0, r6, r8, r9, sl, fp, ip, sp, lr}^	; <UNPREDICTABLE>
40033940:	0063771c 	rsbeq	r7, r3, ip, lsl r7
40033944:	417f7f41 	cmnmi	pc, r1, asr #30
40033948:	00706040 	rsbseq	r6, r0, r0, asr #32
4003394c:	1c0e7f7f 	stcne	15, cr7, [lr], {127}	; 0x7f
40033950:	007f7f0e 	rsbseq	r7, pc, lr, lsl #30
40033954:	0c067f7f 	stceq	15, cr7, [r6], {127}	; 0x7f
40033958:	007f7f18 	rsbseq	r7, pc, r8, lsl pc	; <UNPREDICTABLE>
4003395c:	41633e1c 	cmnmi	r3, ip, lsl lr
40033960:	001c3e63 	andseq	r3, ip, r3, ror #28
40033964:	497f7f41 	ldmdbmi	pc!, {r0, r6, r8, r9, sl, fp, ip, sp, lr}^	; <UNPREDICTABLE>
40033968:	00060f09 	andeq	r0, r6, r9, lsl #30
4003396c:	71213f1e 			; <UNDEFINED> instruction: 0x71213f1e
40033970:	00005e7f 	andeq	r5, r0, pc, ror lr
40033974:	097f7f41 	ldmdbeq	pc!, {r0, r6, r8, r9, sl, fp, ip, sp, lr}^	; <UNPREDICTABLE>
40033978:	00667f19 	rsbeq	r7, r6, r9, lsl pc
4003397c:	594d6f26 	stmdbpl	sp, {r1, r2, r5, r8, r9, sl, fp, sp, lr}^
40033980:	00003273 	andeq	r3, r0, r3, ror r2
40033984:	7f7f4103 	svcvc	0x007f4103
40033988:	00000341 	andeq	r0, r0, r1, asr #6
4003398c:	40407f7f 	submi	r7, r0, pc, ror pc
40033990:	00007f7f 	andeq	r7, r0, pc, ror pc
40033994:	60603f1f 	rsbvs	r3, r0, pc, lsl pc
40033998:	00001f3f 	andeq	r1, r0, pc, lsr pc
4003399c:	18307f7f 	ldmdane	r0!, {r0, r1, r2, r3, r4, r5, r6, r8, r9, sl, fp, ip, sp, lr}
400339a0:	007f7f30 	rsbseq	r7, pc, r0, lsr pc	; <UNPREDICTABLE>
400339a4:	183c6743 	ldmdane	ip!, {r0, r1, r6, r8, r9, sl, sp, lr}
400339a8:	0043673c 	subeq	r6, r3, ip, lsr r7
400339ac:	78784f07 	ldmdavc	r8!, {r0, r1, r2, r8, r9, sl, fp, lr}^
400339b0:	0000074f 	andeq	r0, r0, pc, asr #14
400339b4:	59716347 	ldmdbpl	r1!, {r0, r1, r2, r6, r8, r9, sp, lr}^
400339b8:	0073674d 	rsbseq	r6, r3, sp, asr #14
400339bc:	417f7f00 	cmnmi	pc, r0, lsl #30
400339c0:	00000041 	andeq	r0, r0, r1, asr #32
400339c4:	0c060301 	stceq	3, cr0, [r6], {1}
400339c8:	00603018 	rsbeq	r3, r0, r8, lsl r0
400339cc:	7f414100 	svcvc	0x00414100
400339d0:	0000007f 	andeq	r0, r0, pc, ror r0
400339d4:	03060c08 	movweq	r0, #27656	; 0x6c08
400339d8:	00080c06 	andeq	r0, r8, r6, lsl #24
400339dc:	80808080 	addhi	r8, r0, r0, lsl #1
400339e0:	80808080 	addhi	r8, r0, r0, lsl #1
400339e4:	07030000 	streq	r0, [r3, -r0]
400339e8:	00000004 	andeq	r0, r0, r4
400339ec:	54547420 	ldrbpl	r7, [r4], #-1056	; 0xfffffbe0
400339f0:	0040783c 	subeq	r7, r0, ip, lsr r8
400339f4:	483f7f41 	ldmdami	pc!, {r0, r6, r8, r9, sl, fp, ip, sp, lr}	; <UNPREDICTABLE>
400339f8:	00307848 	eorseq	r7, r0, r8, asr #16
400339fc:	44447c38 	strbmi	r7, [r4], #-3128	; 0xfffff3c8
40033a00:	0000286c 	andeq	r2, r0, ip, ror #16
40033a04:	49487830 	stmdbmi	r8, {r4, r5, fp, ip, sp, lr}^
40033a08:	00407f3f 	subeq	r7, r0, pc, lsr pc
40033a0c:	54547c38 	ldrbpl	r7, [r4], #-3128	; 0xfffff3c8
40033a10:	0000185c 	andeq	r1, r0, ip, asr r8
40033a14:	497f7e48 	ldmdbmi	pc!, {r3, r6, r9, sl, fp, ip, sp, lr}^	; <UNPREDICTABLE>
40033a18:	00000203 	andeq	r0, r0, r3, lsl #4
40033a1c:	a4a4bc98 	strtge	fp, [r4], #3224	; 0xc98
40033a20:	00047cf8 	strdeq	r7, [r4], -r8
40033a24:	087f7f41 	ldmdaeq	pc!, {r0, r6, r8, r9, sl, fp, ip, sp, lr}^	; <UNPREDICTABLE>
40033a28:	00787c04 	rsbseq	r7, r8, r4, lsl #24
40033a2c:	7d7d4400 	cfldrdvc	mvd4, [sp, #-0]
40033a30:	00000040 	andeq	r0, r0, r0, asr #32
40033a34:	8080e060 	addhi	lr, r0, r0, rrx
40033a38:	00007dfd 	strdeq	r7, [r0], -sp
40033a3c:	107f7f41 	rsbsne	r7, pc, r1, asr #30
40033a40:	00446c38 	subeq	r6, r4, r8, lsr ip
40033a44:	7f7f4100 	svcvc	0x007f4100
40033a48:	00000040 	andeq	r0, r0, r0, asr #32
40033a4c:	38187c7c 	ldmdacc	r8, {r2, r3, r4, r5, r6, sl, fp, ip, sp, lr}
40033a50:	00787c1c 	rsbseq	r7, r8, ip, lsl ip
40033a54:	04047c7c 	streq	r7, [r4], #-3196	; 0xfffff384
40033a58:	0000787c 	andeq	r7, r0, ip, ror r8
40033a5c:	44447c38 	strbmi	r7, [r4], #-3128	; 0xfffff3c8
40033a60:	0000387c 	andeq	r3, r0, ip, ror r8
40033a64:	a4f8fc84 	ldrbtge	pc, [r8], #3204	; 0xc84	; <UNPREDICTABLE>
40033a68:	00183c24 	andseq	r3, r8, r4, lsr #24
40033a6c:	a4243c18 	strtge	r3, [r4], #-3096	; 0xfffff3e8
40033a70:	0084fcf8 	strdeq	pc, [r4], r8
40033a74:	4c787c44 	ldclmi	12, cr7, [r8], #-272	; 0xfffffef0
40033a78:	00181c04 	andseq	r1, r8, r4, lsl #24
40033a7c:	54545c48 	ldrbpl	r5, [r4], #-3144	; 0xfffff3b8
40033a80:	00002474 	andeq	r2, r0, r4, ror r4
40033a84:	7f3e0400 	svcvc	0x003e0400
40033a88:	00002444 	andeq	r2, r0, r4, asr #8
40033a8c:	40407c3c 	submi	r7, r0, ip, lsr ip
40033a90:	00407c3c 	subeq	r7, r0, ip, lsr ip
40033a94:	60603c1c 	rsbvs	r3, r0, ip, lsl ip
40033a98:	00001c3c 	andeq	r1, r0, ip, lsr ip
40033a9c:	38707c3c 	ldmdacc	r0!, {r2, r3, r4, r5, sl, fp, ip, sp, lr}^
40033aa0:	003c7c70 	eorseq	r7, ip, r0, ror ip
40033aa4:	10386c44 	eorsne	r6, r8, r4, asr #24
40033aa8:	00446c38 	subeq	r6, r4, r8, lsr ip
40033aac:	a0a0bc9c 	umlalge	fp, r0, ip, ip
40033ab0:	00007cfc 	strdeq	r7, [r0], -ip
40033ab4:	5c74644c 	cfldrdpl	mvd6, [r4], #-304	; 0xfffffed0
40033ab8:	0000644c 	andeq	r6, r0, ip, asr #8
40033abc:	773e0808 	ldrvc	r0, [lr, -r8, lsl #16]!
40033ac0:	00004141 	andeq	r4, r0, r1, asr #2
40033ac4:	77000000 	strvc	r0, [r0, -r0]
40033ac8:	00000077 	andeq	r0, r0, r7, ror r0
40033acc:	3e774141 	rpwccsm	f4, f7, f1
40033ad0:	00000808 	andeq	r0, r0, r8, lsl #16
40033ad4:	03010302 	movweq	r0, #4866	; 0x1302
40033ad8:	00010302 	andeq	r0, r1, r2, lsl #6

40033adc <diskio_status>:
40033adc:	00000001 	andeq	r0, r0, r1

40033ae0 <lfsr>:
40033ae0:	0000ace1 	andeq	sl, r0, r1, ror #25

40033ae4 <next_block>:
40033ae4:	40500000 	subsmi	r0, r0, r0

40033ae8 <s_block_bucket>:
40033ae8:	00000040 	andeq	r0, r0, r0, asr #32
40033aec:	00000000 	andeq	r0, r0, r0
40033af0:	00000400 	andeq	r0, r0, r0, lsl #8
40033af4:	00000000 	andeq	r0, r0, r0
40033af8:	00001000 	andeq	r1, r0, r0
40033afc:	00000000 	andeq	r0, r0, r0
40033b00:	00004000 	andeq	r4, r0, r0
40033b04:	00000000 	andeq	r0, r0, r0
40033b08:	00040000 	andeq	r0, r4, r0
40033b0c:	00000000 	andeq	r0, r0, r0
40033b10:	00080000 	andeq	r0, r8, r0
	...

Disassembly of section .bss:

40034000 <LLRPDevice::s_pThis>:
40034000:	00000000 	andeq	r0, r0, r0

40034004 <LLRPDevice::s_pLLRP>:
40034004:	00000000 	andeq	r0, r0, r0

40034008 <LLRPDevice::s_nIpAddressFrom>:
40034008:	00000000 	andeq	r0, r0, r0

4003400c <LLRPDevice::s_nHandleLLRP>:
4003400c:	00000000 	andeq	r0, r0, r0

40034010 <FirmwareVersion::s_Print>:
	...

40034050 <RemoteConfig::s_pThis>:
40034050:	00000000 	andeq	r0, r0, r0

40034054 <LtcMidiSystemRealtime::s_pThis>:
40034054:	00000000 	andeq	r0, r0, r0

40034058 <TCNetReader::s_pThis>:
40034058:	00000000 	andeq	r0, r0, r0

4003405c <ArtNetReader::s_pThis>:
4003405c:	00000000 	andeq	r0, r0, r0

40034060 <LtcOutputs::s_pThis>:
40034060:	00000000 	andeq	r0, r0, r0

40034064 <LtcOscServer::s_pThis>:
40034064:	00000000 	andeq	r0, r0, r0

40034068 <TCNet::s_pThis>:
40034068:	00000000 	andeq	r0, r0, r0

4003406c <RtpMidi::s_pThis>:
4003406c:	00000000 	andeq	r0, r0, r0

40034070 <AppleMidi::s_pThis>:
40034070:	00000000 	andeq	r0, r0, r0

40034074 <LtcEtc::s_pThis>:
40034074:	00000000 	andeq	r0, r0, r0

40034078 <LtcDisplayRgb::s_pThis>:
40034078:	00000000 	andeq	r0, r0, r0

4003407c <Display::s_pThis>:
4003407c:	00000000 	andeq	r0, r0, r0

40034080 <Network::s_pThis>:
40034080:	00000000 	andeq	r0, r0, r0

40034084 <ConfigStore::s_pThis>:
40034084:	00000000 	andeq	r0, r0, r0

40034088 <Hardware::s_pThis>:
40034088:	00000000 	andeq	r0, r0, r0

4003408c <ltcSource>:
4003408c:	00000000 	andeq	r0, r0, r0

40034090 <SystimeReader::s_pThis>:
40034090:	00000000 	andeq	r0, r0, r0

40034094 <LtcGenerator::s_pThis>:
40034094:	00000000 	andeq	r0, r0, r0

40034098 <RemoteConfig::s_RemoteConfigListBin>:
	...

400340b9 <s_TFTPBuffer>:
	...

400560bc <Display::Progress()::nSymbolsIndex>:
400560bc:	00000000 	andeq	r0, r0, r0

400560c0 <HttpDeamonHandleRequest::m_DynamicContent>:
	...

400570c0 <FirmwareVersion::s_FirmwareVersion>:
	...

400570d8 <lightset::Data::Get()::instance>:
	...

400576dc <ArtNetNode::s_pThis>:
400576dc:	00000000 	andeq	r0, r0, r0

400576e0 <ip>:
400576e0:	00000000 	andeq	r0, r0, r0

400576e4 <ip>:
400576e4:	00000000 	andeq	r0, r0, r0

400576e8 <s_nPortsMax>:
400576e8:	00000000 	andeq	r0, r0, r0

400576ec <ltc::g_DisabledOutputs>:
	...

400576f8 <ltc::g_nDisabledOutputs>:
400576f8:	00000000 	andeq	r0, r0, r0

400576fc <ltc::g_Type>:
400576fc:	00000000 	andeq	r0, r0, r0

40057700 <LtcDisplayMax72197Segment::s_pThis>:
40057700:	00000000 	andeq	r0, r0, r0

40057704 <LtcDisplayMax7219::s_pThis>:
40057704:	00000000 	andeq	r0, r0, r0

40057708 <LtcDisplayMax7219Matrix::s_pThis>:
40057708:	00000000 	andeq	r0, r0, r0

4005770c <LtcEtc::s_SendBuffer>:
	...

40057730 <NtpServer::s_pThis>:
40057730:	00000000 	andeq	r0, r0, r0

40057734 <sv_nMidiQuarterFramePiece>:
40057734:	00000000 	andeq	r0, r0, r0

40057738 <sv_isMidiQuarterFrameMessage>:
40057738:	00000000 	andeq	r0, r0, r0

4005773c <nSyncCount>:
4005773c:	00000000 	andeq	r0, r0, r0

40057740 <nCurrentBit>:
40057740:	00000000 	andeq	r0, r0, r0

40057744 <sv_nBitTime>:
40057744:	00000000 	andeq	r0, r0, r0

40057748 <aTimeCodeBits>:
	...

40057750 <bOnesBitCount>:
	...

40057751 <bTimeCodeSync>:
40057751:	 	andeq	r0, r0, r0

40057754 <nFiqUsCurrent>:
40057754:	00000000 	andeq	r0, r0, r0

40057758 <sv_nTotalBits>:
40057758:	00000000 	andeq	r0, r0, r0

4005775c <bTimeCodeValid>:
4005775c:	00000000 	andeq	r0, r0, r0

40057760 <nFiqUsPrevious>:
40057760:	00000000 	andeq	r0, r0, r0

40057764 <bTimeCodeAvailable>:
	...

40057765 <bIsDropFrameFlagSet>:
40057765:	 	andeq	r0, r0, r0

40057768 <s_qf>:
	...

40057770 <g_ltc_LtcTimeCode>:
40057770:	00000000 	andeq	r0, r0, r0
	...

40057775 <gv_ltc_bTimeCodeAvailable>:
40057775:	 	andeq	r0, r0, r0

40057778 <gv_ltc_nTimeCodeCounter>:
40057778:	00000000 	andeq	r0, r0, r0

4005777c <gv_ltc_nUpdates>:
4005777c:	00000000 	andeq	r0, r0, r0

40057780 <gv_ltc_nUpdatesPerSecond>:
40057780:	00000000 	andeq	r0, r0, r0

40057784 <gv_ltc_nUpdatesPrevious>:
40057784:	00000000 	andeq	r0, r0, r0

40057788 <s_qf>:
	...

40057790 <LtcSender::s_pThis>:
40057790:	00000000 	andeq	r0, r0, r0

40057794 <m_bShowMsg>:
40057794:	00000000 	andeq	r0, r0, r0

40057798 <LtcEncoder::s_pThis>:
40057798:	00000000 	andeq	r0, r0, r0

4005779c <LtcEncoder::s_Buffer>:
	...

4005873c <Midi::s_pThis>:
4005873c:	00000000 	andeq	r0, r0, r0

40058740 <sv_RxBuffer>:
	...

40058948 <sv_nUpdates>:
40058948:	00000000 	andeq	r0, r0, r0

4005894c <sv_nTick100ms>:
4005894c:	00000000 	andeq	r0, r0, r0

40058950 <sv_ActiveSenseState>:
40058950:	00000000 	andeq	r0, r0, r0

40058954 <sv_nUpdatesPrevious>:
40058954:	00000000 	andeq	r0, r0, r0

40058958 <sv_nUpdatesPerSecond>:
40058958:	00000000 	andeq	r0, r0, r0

4005895c <sv_nActiveSenseTimeout>:
4005895c:	00000000 	andeq	r0, r0, r0

40058960 <irq_handler_timer1_func>:
40058960:	00000000 	andeq	r0, r0, r0

40058964 <PixelConfiguration::s_pThis>:
40058964:	00000000 	andeq	r0, r0, r0

40058968 <WS28xx::s_pThis>:
	...

40058980 <s_nColumns>:
40058980:	00000000 	andeq	r0, r0, r0

40058984 <s_pTablePWM>:
40058984:	00000000 	andeq	r0, r0, r0

40058988 <s_nBufferSize>:
40058988:	00000000 	andeq	r0, r0, r0

4005898c <s_nShowCounter>:
4005898c:	00000000 	andeq	r0, r0, r0

40058990 <s_pFramebuffer1>:
40058990:	00000000 	andeq	r0, r0, r0

40058994 <s_pFramebuffer2>:
40058994:	00000000 	andeq	r0, r0, r0

40058998 <s_bIsCoreRunning>:
40058998:	00000000 	andeq	r0, r0, r0

4005899c <s_nUpdatesCounter>:
4005899c:	00000000 	andeq	r0, r0, r0

400589a0 <s_nRows>:
400589a0:	00000000 	andeq	r0, r0, r0

400589a4 <s_bDoSwap>:
400589a4:	00000000 	andeq	r0, r0, r0

400589a8 <GPS::s_pThis>:
400589a8:	00000000 	andeq	r0, r0, r0

400589ac <s_nChecksum>:
	...

400589ad <s_RingBuffer>:
	...

40058ed0 <s_nDataIndex>:
40058ed0:	00000000 	andeq	r0, r0, r0

40058ed4 <s_nRingBufferIndexHead>:
40058ed4:	00000000 	andeq	r0, r0, r0

40058ed8 <s_nRingBufferIndexTail>:
40058ed8:	00000000 	andeq	r0, r0, r0

40058edc <s_State>:
40058edc:	00000000 	andeq	r0, r0, r0

40058ee0 <RDMDeviceResponder::s_pThis>:
40058ee0:	00000000 	andeq	r0, r0, r0

40058ee4 <FirmwareVersion::s_pThis>:
40058ee4:	00000000 	andeq	r0, r0, r0

40058ee8 <RDMIdentify::m_bIsEnabled>:
	...

40058ee9 <RDMIdentify::m_nMode>:
40058ee9:	 	andeq	r0, r0, r0

40058eec <RDMIdentify::s_pThis>:
40058eec:	00000000 	andeq	r0, r0, r0

40058ef0 <RDMSensors::s_pThis>:
40058ef0:	00000000 	andeq	r0, r0, r0

40058ef4 <RDMSubDevices::s_pThis>:
40058ef4:	00000000 	andeq	r0, r0, r0

40058ef8 <LLRPDevice::s_RdmCommand>:
	...

40058ffc <guard variable for RDMHandler::GetInterfaceName(unsigned short)::nLength>:
40058ffc:	00000000 	andeq	r0, r0, r0

40059000 <s_QueuedConfig>:
	...

40059014 <RDMHandler::GetInterfaceName(unsigned short)::nLength>:
40059014:	00000000 	andeq	r0, r0, r0

40059018 <RDMDevice::s_pThis>:
40059018:	00000000 	andeq	r0, r0, r0

4005901c <ConfigStore::s_ConfigStoreData>:
	...

4005a01c <ConfigStore::s_nStoresSize>:
4005a01c:	00000000 	andeq	r0, r0, r0

4005a020 <ConfigStore::s_nWaitMillis>:
4005a020:	00000000 	andeq	r0, r0, r0

4005a024 <ConfigStore::s_nStartAddress>:
4005a024:	00000000 	andeq	r0, r0, r0

4005a028 <ConfigStore::s_State>:
4005a028:	00000000 	andeq	r0, r0, r0

4005a02c <ConfigStore::s_bHaveDevice>:
4005a02c:	00000000 	andeq	r0, r0, r0

4005a030 <FlashCodeInstall::s_pThis>:
4005a030:	00000000 	andeq	r0, r0, r0

4005a034 <FlashCode::s_pThis>:
4005a034:	00000000 	andeq	r0, r0, r0

4005a038 <s_spi0_status>:
	...

4005a054 <mdns::s_isUnicast>:
4005a054:	00000000 	andeq	r0, r0, r0

4005a058 <mdns::s_HostReplies>:
4005a058:	00000000 	andeq	r0, r0, r0

4005a05c <mdns::s_RecordsData>:
	...

4005a25c <mdns::s_bLegacyQuery>:
4005a25c:	00000000 	andeq	r0, r0, r0

4005a260 <mdns::s_ServiceRecords>:
	...

4005a2e0 <mdns::s_ServiceReplies>:
4005a2e0:	00000000 	andeq	r0, r0, r0

4005a2e4 <s_nBytesReceived>:
4005a2e4:	00000000 	andeq	r0, r0, r0

4005a2e8 <s_nHandle>:
4005a2e8:	00000000 	andeq	r0, r0, r0

4005a2ec <s_nRemoteIp>:
4005a2ec:	00000000 	andeq	r0, r0, r0

4005a2f0 <s_nRemotePort>:
4005a2f0:	00000000 	andeq	r0, r0, r0

4005a2f4 <s_pReceiveBuffer>:
4005a2f4:	00000000 	andeq	r0, r0, r0

4005a2f8 <s_ntpClient>:
	...

4005a368 <now>:
	...

4005a370 <TFTPDaemon::s_pThis>:
4005a370:	00000000 	andeq	r0, r0, r0

4005a374 <net::s_dhcp_message>:
	...

4005a598 <net::s_multicast_mac>:
	...

4005a5a0 <net::s_id>:
4005a5a0:	00000000 	andeq	r0, r0, r0

4005a5a4 <net::s_leave>:
	...

4005a5d4 <net::s_groups>:
	...

4005a6f4 <net::s_report>:
	...

4005a724 <s_acd>:
	...

4005a734 <net::globals::nBroadcastMask>:
4005a734:	00000000 	andeq	r0, r0, r0

4005a738 <net::globals::nOnNetworkMask>:
4005a738:	00000000 	andeq	r0, r0, r0

4005a73c <net::globals::netif_default>:
	...

4005a768 <net::callback_fn>:
4005a768:	00000000 	andeq	r0, r0, r0

4005a76c <net::s_id>:
4005a76c:	00000000 	andeq	r0, r0, r0

4005a770 <net::s_tcp>:
	...

4005ad5c <net::s_Port>:
	...

4005c8bc <net::s_send_packet>:
	...

4005cea8 <net::s_multicast_mac>:
	...

4005ceb0 <net::s_id>:
4005ceb0:	00000000 	andeq	r0, r0, r0

4005ceb4 <net::s_Ports>:
	...

40062bf4 <p_coherent_region>:
40062bf4:	00000000 	andeq	r0, r0, r0

40062bf8 <net::nTimerId>:
40062bf8:	00000000 	andeq	r0, r0, r0

40062bfc <net::s_arp_reply>:
	...

40062c38 <net::s_ArpRecords>:
	...

40062db8 <net::s_arp_request>:
	...

40062df4 <Ssd1306::s_pThis>:
40062df4:	00000000 	andeq	r0, r0, r0

40062df8 <_ClearBuffer>:
	...

40062e80 <Ssd1311::s_pThis>:
40062e80:	00000000 	andeq	r0, r0, r0

40062e84 <_TextBuffer>:
	...

40062e9c <_ClearBuffer>:
	...

40062eb1 <PropertiesConfig::s_Config>:
40062eb1:	 	andeq	r0, r0, r0

40062eb4 <spi_data>:
	...

40062ef4 <Hardware::m_nToggleLed>:
40062ef4:	00000000 	andeq	r0, r0, r0

40062ef8 <s_hardware_init_startup_seconds>:
40062ef8:	00000000 	andeq	r0, r0, r0

40062efc <fat_fs>:
	...

40063128 <s_file>:
	...

40063138 <s_ff_file>:
	...

40063578 <s_fresult>:
40063578:	00000000 	andeq	r0, r0, r0

4006357c <HwClock::s_pThis>:
4006357c:	00000000 	andeq	r0, r0, r0

40063580 <nSecondsT1>:
40063580:	00000000 	andeq	r0, r0, r0

40063584 <tvT1>:
	...

4006358c <tvT2>:
	...

40063594 <rtcT1>:
	...

400635b8 <rtcT2>:
	...

400635dc <Status>:
400635dc:	00000000 	andeq	r0, r0, r0

400635e0 <nSeconds>:
400635e0:	00000000 	andeq	r0, r0, r0

400635e4 <iso8601Format>:
	...

400635f8 <m_nTimersCount>:
400635f8:	00000000 	andeq	r0, r0, r0

400635fc <m_Timers>:
	...

400636bc <m_nNextId>:
400636bc:	00000000 	andeq	r0, r0, r0

400636c0 <FatFs>:
400636c0:	00000000 	andeq	r0, r0, r0

400636c4 <Fsid>:
	...

400636c6 <LfnBuf>:
	...

40063a00 <cache_buffer>:
	...

40065a00 <cached_blocks>:
	...

40065a40 <core_is_started>:
40065a40:	00000000 	andeq	r0, r0, r0

40065a44 <start_fn>:
40065a44:	00000000 	andeq	r0, r0, r0

40065a48 <IRQTable>:
	...

40068000 <page_table>:
	...

4006c000 <_aw_mmc_host>:
	...

4006c008 <mmc_dev>:
	...

4006c0c0 <mmc_devices>:
	...

4006c0cc <buffer_size>:
4006c0cc:	00000000 	andeq	r0, r0, r0

4006c0d0 <update_counter>:
4006c0d0:	00000000 	andeq	r0, r0, r0

4006c0d4 <index>:
4006c0d4:	00000000 	andeq	r0, r0, r0

4006c0d8 <s_volume>:
4006c0d8:	00000000 	andeq	r0, r0, r0

4006c0dc <s_slave_address>:
4006c0dc:	00000000 	andeq	r0, r0, r0

4006c0e0 <s_current_baudrate>:
4006c0e0:	00000000 	andeq	r0, r0, r0

4006c0e4 <is_running>:
	...

4006c0e5 <s_ws28xx_mode>:
4006c0e5:	 	andeq	r0, r0, r0

4006c0e8 <s_current_speed_hz>:
4006c0e8:	00000000 	andeq	r0, r0, r0

4006c0ec <timer_value>:
4006c0ec:	00000000 	andeq	r0, r0, r0

4006c0f0 <h3_timer0_func>:
4006c0f0:	00000000 	andeq	r0, r0, r0

4006c0f4 <h3_timer1_func>:
4006c0f4:	00000000 	andeq	r0, r0, r0

4006c0f8 <arm_virtual_timer_func>:
4006c0f8:	00000000 	andeq	r0, r0, r0

4006c0fc <arm_physical_timer_func>:
4006c0fc:	00000000 	andeq	r0, r0, r0

4006c100 <s_buffer>:
	...

4006c134 <errno>:
4006c134:	00000000 	andeq	r0, r0, r0

4006c138 <outptr>:
4006c138:	00000000 	andeq	r0, r0, r0

4006c13c <last.0>:
4006c13c:	00000000 	andeq	r0, r0, r0

4006c140 <Tm>:
	...

4006c164 <global::gp_nUtcOffset>:
4006c164:	00000000 	andeq	r0, r0, r0

4006c168 <s_tv>:
	...

4006c170 <set_timer>:
	...

4006c178 <gettimeofday::fractional_ticks>:
	...

4006c180 <settimeofday::fractional_ticks>:
	...
